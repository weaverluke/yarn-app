__DEV__ = 
false;


__BUNDLE_START_TIME__ = Date.now();
(
function(global){


if(global.require){
return;}


var __DEV__=global.__DEV__;

var toString=Object.prototype.toString;













var modulesMap={}, 






dependencyMap={}, 



predefinedRefCounts={}, 

_counter=0, 

REQUIRE_WHEN_READY=1, 
USED_AS_TRANSPORT=2, 

hop=Object.prototype.hasOwnProperty;

function _debugUnresolvedDependencies(names){
var unresolved=Array.prototype.slice.call(names);
var visited={};
var ii, name, module, dependency;

while(unresolved.length) {
name = unresolved.shift();
if(visited[name]){
continue;}

visited[name] = true;

module = modulesMap[name];
if(!module || !module.waiting){
continue;}


for(ii = 0; ii < module.dependencies.length; ii++) {
dependency = module.dependencies[ii];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolved.push(dependency);}}}




for(name in visited) if(hop.call(visited, name)){
unresolved.push(name);}


var messages=[];
for(ii = 0; ii < unresolved.length; ii++) {
name = unresolved[ii];
var message=name;
module = modulesMap[name];
if(!module){
message += ' is not defined';}else 
if(!module.waiting){
message += ' is ready';}else 
{
var unresolvedDependencies=[];
for(var jj=0; jj < module.dependencies.length; jj++) {
dependency = module.dependencies[jj];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolvedDependencies.push(dependency);}}


message += ' is waiting for ' + unresolvedDependencies.join(', ');}

messages.push(message);}

return messages.join('\n');}





function ModuleError(msg){
this.name = 'ModuleError';
this.message = msg;
this.stack = Error(msg).stack;
this.framesToPop = 2;}

ModuleError.prototype = Object.create(Error.prototype);
ModuleError.prototype.constructor = ModuleError;

var _performance=
global.performance || 
global.msPerformance || 
global.webkitPerformance || {};

if(!_performance.now){
_performance = global.Date;}


var _now=_performance?
_performance.now.bind(_performance):function(){return 0;};

var _factoryStackCount=0;
var _factoryTime=0;
var _totalFactories=0;
var _inGuard=false;
























































function require(id){
var module=modulesMap[id], dep, i, msg;
if(module && module.exports){


if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}

if(global.ErrorUtils && !_inGuard){
_inGuard = true;
try{
var ret=require.apply(this, arguments);}
catch(e) {
global.ErrorUtils.reportFatalError(e);}

_inGuard = false;
return ret;}


if(!module){
msg = 'Requiring unknown module "' + id + '"';
if(__DEV__){
msg += '. If you are sure the module is there, try restarting the packager.';}

throw new ModuleError(msg);}


if(module.hasError){
throw new ModuleError(
'Requiring module "' + id + '" which threw an exception');}



if(module.waiting){
throw new ModuleError(
'Requiring module "' + id + '" with unresolved dependencies: ' + 
_debugUnresolvedDependencies([id]));}



var exports=module.exports = {};
var factory=module.factory;
if(toString.call(factory) === '[object Function]'){
var args=[], 
dependencies=module.dependencies, 
length=dependencies.length, 
ret;
if(module.special & USED_AS_TRANSPORT){
length = Math.min(length, factory.length);}

try{
for(i = 0; args.length < length; i++) {
dep = dependencies[i];
if(!module.inlineRequires[dep]){
args.push(dep === 'module'?module:
dep === 'exports'?exports:
require.call(null, dep));}}



++_totalFactories;
if(_factoryStackCount++ === 0){
_factoryTime -= _now();}

try{
ret = factory.apply(module.context || global, args);}
catch(e) {
if(modulesMap.ex && modulesMap.erx){


var ex=require.call(null, 'ex');
var erx=require.call(null, 'erx');
var messageWithParams=erx(e.message);
if(messageWithParams[0].indexOf(' from module "%s"') < 0){
messageWithParams[0] += ' from module "%s"';
messageWithParams[messageWithParams.length] = id;}

e.message = ex.apply(null, messageWithParams);}

throw e;}finally 
{
if(--_factoryStackCount === 0){
_factoryTime += _now();}}}


catch(e) {
module.hasError = true;
module.exports = null;
throw e;}

if(ret){
if(__DEV__){
if(typeof ret != 'object' && typeof ret != 'function'){
throw new ModuleError(
'Factory for module "' + id + '" returned ' + 
'an invalid value "' + ret + '". ' + 
'Returned value should be either a function or an object.');}}



module.exports = ret;}}else 

{
module.exports = factory;}




if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}


require.__getFactoryTime = function(){
return (_factoryStackCount?_now():0) + _factoryTime;};


require.__getTotalFactories = function(){
return _totalFactories;};

























































function define(id, dependencies, factory, 
_special, _context, _refCount, _inlineRequires){
if(dependencies === undefined){
dependencies = [];
factory = id;
id = _uid();}else 
if(factory === undefined){
factory = dependencies;
if(toString.call(id) === '[object Array]'){
dependencies = id;
id = _uid();}else 
{
dependencies = [];}}





var canceler={cancel:_undefine.bind(this, id)};

var record=modulesMap[id];






if(record){
if(_refCount){
record.refcount += _refCount;}


return canceler;}else 
if(!dependencies && !factory && _refCount){


predefinedRefCounts[id] = (predefinedRefCounts[id] || 0) + _refCount;
return canceler;}else 
{

record = {id:id};
record.refcount = (predefinedRefCounts[id] || 0) + (_refCount || 0);
delete predefinedRefCounts[id];}


if(__DEV__){
if(
!factory || 
typeof factory != 'object' && typeof factory != 'function' && 
typeof factory != 'string'){
throw new ModuleError(
'Invalid factory "' + factory + '" for module "' + id + '". ' + 
'Factory should be either a function or an object.');}



if(toString.call(dependencies) !== '[object Array]'){
throw new ModuleError(
'Invalid dependencies for module "' + id + '". ' + 
'Dependencies must be passed as an array.');}}




record.factory = factory;
record.dependencies = dependencies;
record.context = _context;
record.special = _special;
record.inlineRequires = _inlineRequires || {};
record.waitingMap = {};
record.waiting = 0;
record.hasError = false;
modulesMap[id] = record;
_initDependencies(id);

return canceler;}


function _undefine(id){
if(!modulesMap[id]){
return;}


var module=modulesMap[id];
delete modulesMap[id];

for(var dep in module.waitingMap) {
if(module.waitingMap[dep]){
delete dependencyMap[dep][id];}}



for(var ii=0; ii < module.dependencies.length; ii++) {
dep = module.dependencies[ii];
if(modulesMap[dep]){
if(modulesMap[dep].refcount-- === 1){
_undefine(dep);}}else 

if(predefinedRefCounts[dep]){
predefinedRefCounts[dep]--;}}}













































function requireLazy(dependencies, factory, context){
return define(
dependencies, 
factory, 
undefined, 
REQUIRE_WHEN_READY, 
context, 
1);}



function _uid(){
return '__mod__' + _counter++;}


function _addDependency(module, dep){

if(!module.waitingMap[dep] && module.id !== dep){
module.waiting++;
module.waitingMap[dep] = 1;
dependencyMap[dep] || (dependencyMap[dep] = {});
dependencyMap[dep][module.id] = 1;}}



function _initDependencies(id){
var modulesToRequire=[];
var module=modulesMap[id];
var dep, i, subdep;


for(i = 0; i < module.dependencies.length; i++) {
dep = module.dependencies[i];
if(!modulesMap[dep]){
_addDependency(module, dep);}else 
if(modulesMap[dep].waiting){
for(subdep in modulesMap[dep].waitingMap) {
if(modulesMap[dep].waitingMap[subdep]){
_addDependency(module, subdep);}}}}




if(module.waiting === 0 && module.special & REQUIRE_WHEN_READY){
modulesToRequire.push(id);}



if(dependencyMap[id]){
var deps=dependencyMap[id];
var submodule;
dependencyMap[id] = undefined;
for(dep in deps) {
submodule = modulesMap[dep];


for(subdep in module.waitingMap) {
if(module.waitingMap[subdep]){
_addDependency(submodule, subdep);}}



if(submodule.waitingMap[id]){
submodule.waitingMap[id] = undefined;
submodule.waiting--;}

if(submodule.waiting === 0 && 
submodule.special & REQUIRE_WHEN_READY){
modulesToRequire.push(dep);}}}





for(i = 0; i < modulesToRequire.length; i++) {
require.call(null, modulesToRequire[i]);}}



function _register(id, exports){
var module=modulesMap[id] = {id:id};
module.exports = exports;
module.refcount = 0;}




_register('module', 0);
_register('exports', 0);

_register('global', global);
_register('require', require);
_register('requireDynamic', require);
_register('requireLazy', requireLazy);

global.require = require;
global.requireDynamic = require;
global.requireLazy = requireLazy;

require.__debug = {
modules:modulesMap, 
deps:dependencyMap, 
printDependencyInfo:function(){
if(!global.console){
return;}

var names=Object.keys(require.__debug.deps);
global.console.log(_debugUnresolvedDependencies(names));}};









global.__d = function(id, deps, factory, _special, _inlineRequires){
var defaultDeps=['global', 'require', 'requireDynamic', 'requireLazy', 
'module', 'exports'];
define(id, defaultDeps.concat(deps), factory, _special || USED_AS_TRANSPORT, 
null, null, _inlineRequires);};})(


this);
Object.

















assign = function(target, sources){
if(__DEV__){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}

if(typeof target !== 'object' && typeof target !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}




for(var nextIndex=1; nextIndex < arguments.length; nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


if(__DEV__){
if(typeof nextSource !== 'object' && 
typeof nextSource !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}








for(var key in nextSource) {
if(__DEV__){
var hasOwnProperty=Object.prototype.hasOwnProperty;
if(!hasOwnProperty.call(nextSource, key)){
throw new TypeError(
'One of the sources to assign has an enumerable key on the ' + 
'prototype chain. This is an edge case that we do not support. ' + 
'This error is a performance optimization and not spec compliant.');}}



target[key] = nextSource[key];}}



return target;};
(















function(global){
'use strict';

var inspect=(function(){























function inspect(obj, opts){
var ctx={
seen:[], 
stylize:stylizeNoColor};

return formatValue(ctx, obj, opts.depth);}


function stylizeNoColor(str, styleType){
return str;}


function arrayToHash(array){
var hash={};

array.forEach(function(val, idx){
hash[val] = true;});


return hash;}



function formatValue(ctx, value, recurseTimes){

var primitive=formatPrimitive(ctx, value);
if(primitive){
return primitive;}



var keys=Object.keys(value);
var visibleKeys=arrayToHash(keys);



if(isError(value) && (
keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)){
return formatError(value);}



if(keys.length === 0){
if(isFunction(value)){
var name=value.name?': ' + value.name:'';
return ctx.stylize('[Function' + name + ']', 'special');}

if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');}

if(isDate(value)){
return ctx.stylize(Date.prototype.toString.call(value), 'date');}

if(isError(value)){
return formatError(value);}}



var base='', array=false, braces=['{', '}'];


if(isArray(value)){
array = true;
braces = ['[', ']'];}



if(isFunction(value)){
var n=value.name?': ' + value.name:'';
base = ' [Function' + n + ']';}



if(isRegExp(value)){
base = ' ' + RegExp.prototype.toString.call(value);}



if(isDate(value)){
base = ' ' + Date.prototype.toUTCString.call(value);}



if(isError(value)){
base = ' ' + formatError(value);}


if(keys.length === 0 && (!array || value.length == 0)){
return braces[0] + base + braces[1];}


if(recurseTimes < 0){
if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');}else 
{
return ctx.stylize('[Object]', 'special');}}



ctx.seen.push(value);

var output;
if(array){
output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);}else 
{
output = keys.map(function(key){
return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);});}



ctx.seen.pop();

return reduceToSingleString(output, base, braces);}



function formatPrimitive(ctx, value){
if(isUndefined(value))
return ctx.stylize('undefined', 'undefined');
if(isString(value)){
var simple='\'' + JSON.stringify(value).replace(/^"|"$/g, '').
replace(/'/g, '\\\'').
replace(/\\"/g, '"') + '\'';
return ctx.stylize(simple, 'string');}

if(isNumber(value))
return ctx.stylize('' + value, 'number');
if(isBoolean(value))
return ctx.stylize('' + value, 'boolean');

if(isNull(value))
return ctx.stylize('null', 'null');}



function formatError(value){
return '[' + Error.prototype.toString.call(value) + ']';}



function formatArray(ctx, value, recurseTimes, visibleKeys, keys){
var output=[];
for(var i=0, l=value.length; i < l; ++i) {
if(hasOwnProperty(value, String(i))){
output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, 
String(i), true));}else 
{
output.push('');}}


keys.forEach(function(key){
if(!key.match(/^\d+$/)){
output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, 
key, true));}});


return output;}



function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array){
var name, str, desc;
desc = Object.getOwnPropertyDescriptor(value, key) || {value:value[key]};
if(desc.get){
if(desc.set){
str = ctx.stylize('[Getter/Setter]', 'special');}else 
{
str = ctx.stylize('[Getter]', 'special');}}else 

{
if(desc.set){
str = ctx.stylize('[Setter]', 'special');}}


if(!hasOwnProperty(visibleKeys, key)){
name = '[' + key + ']';}

if(!str){
if(ctx.seen.indexOf(desc.value) < 0){
if(isNull(recurseTimes)){
str = formatValue(ctx, desc.value, null);}else 
{
str = formatValue(ctx, desc.value, recurseTimes - 1);}

if(str.indexOf('\n') > -1){
if(array){
str = str.split('\n').map(function(line){
return '  ' + line;}).
join('\n').substr(2);}else 
{
str = '\n' + str.split('\n').map(function(line){
return '   ' + line;}).
join('\n');}}}else 


{
str = ctx.stylize('[Circular]', 'special');}}


if(isUndefined(name)){
if(array && key.match(/^\d+$/)){
return str;}

name = JSON.stringify('' + key);
if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){
name = name.substr(1, name.length - 2);
name = ctx.stylize(name, 'name');}else 
{
name = name.replace(/'/g, '\\\'').
replace(/\\"/g, '"').
replace(/(^"|"$)/g, '\'');
name = ctx.stylize(name, 'string');}}



return name + ': ' + str;}



function reduceToSingleString(output, base, braces){
var numLinesEst=0;
var length=output.reduce(function(prev, cur){
numLinesEst++;
if(cur.indexOf('\n') >= 0)numLinesEst++;
return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;}, 
0);

if(length > 60){
return braces[0] + (
base === ''?'':base + '\n ') + 
' ' + 
output.join(',\n  ') + 
' ' + 
braces[1];}


return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];}





function isArray(ar){
return Array.isArray(ar);}


function isBoolean(arg){
return typeof arg === 'boolean';}


function isNull(arg){
return arg === null;}


function isNullOrUndefined(arg){
return arg == null;}


function isNumber(arg){
return typeof arg === 'number';}


function isString(arg){
return typeof arg === 'string';}


function isSymbol(arg){
return typeof arg === 'symbol';}


function isUndefined(arg){
return arg === void 0;}


function isRegExp(re){
return isObject(re) && objectToString(re) === '[object RegExp]';}


function isObject(arg){
return typeof arg === 'object' && arg !== null;}


function isDate(d){
return isObject(d) && objectToString(d) === '[object Date]';}


function isError(e){
return isObject(e) && (
objectToString(e) === '[object Error]' || e instanceof Error);}


function isFunction(arg){
return typeof arg === 'function';}


function isPrimitive(arg){
return arg === null || 
typeof arg === 'boolean' || 
typeof arg === 'number' || 
typeof arg === 'string' || 
typeof arg === 'symbol' || 
typeof arg === 'undefined';}


function objectToString(o){
return Object.prototype.toString.call(o);}


function hasOwnProperty(obj, prop){
return Object.prototype.hasOwnProperty.call(obj, prop);}


return inspect;})();



var OBJECT_COLUMN_NAME='(index)';
var LOG_LEVELS={
trace:0, 
log:1, 
info:2, 
warn:3, 
error:4};


function setupConsole(global){
if(!global.nativeLoggingHook){
return;}


function getNativeLogFunction(level){
return function(){
var str=Array.prototype.map.call(arguments, function(arg){
return inspect(arg, {depth:10});}).
join(', ');
global.nativeLoggingHook(str, level);};}



var repeat=function(element, n){
return Array.apply(null, Array(n)).map(function(){return element;});};


function consoleTablePolyfill(rows){

if(!Array.isArray(rows)){
var data=rows;
rows = [];
for(var key in data) {
if(data.hasOwnProperty(key)){
var row=data[key];
row[OBJECT_COLUMN_NAME] = key;
rows.push(row);}}}



if(rows.length === 0){
global.nativeLoggingHook('', LOG_LEVELS.log);
return;}


var columns=Object.keys(rows[0]).sort();
var stringRows=[];
var columnWidths=[];



columns.forEach(function(k, i){
columnWidths[i] = k.length;
for(var j=0; j < rows.length; j++) {
var cellStr=rows[j][k].toString();
stringRows[j] = stringRows[j] || [];
stringRows[j][i] = cellStr;
columnWidths[i] = Math.max(columnWidths[i], cellStr.length);}});





var joinRow=function(row, space){
var cells=row.map(function(cell, i){
var extraSpaces=repeat(' ', columnWidths[i] - cell.length).join('');
return cell + extraSpaces;});

space = space || ' ';
return cells.join(space + '|' + space);};


var separators=columnWidths.map(function(columnWidth){
return repeat('-', columnWidth).join('');});

var separatorRow=joinRow(separators, '-');
var header=joinRow(columns);
var table=[header, separatorRow];

for(var i=0; i < rows.length; i++) {
table.push(joinRow(stringRows[i]));}






global.nativeLoggingHook('\n' + table.join('\n'), LOG_LEVELS.log);}


global.console = {
error:getNativeLogFunction(LOG_LEVELS.error), 
info:getNativeLogFunction(LOG_LEVELS.info), 
log:getNativeLogFunction(LOG_LEVELS.log), 
warn:getNativeLogFunction(LOG_LEVELS.warn), 
trace:getNativeLogFunction(LOG_LEVELS.trace), 
table:consoleTablePolyfill};}




if(typeof module !== 'undefined'){
module.exports = setupConsole;}else 
{
setupConsole(global);}})(


this);
(















function(global){
var ErrorUtils={
_inGuard:0, 
_globalHandler:null, 
setGlobalHandler:function(fun){
ErrorUtils._globalHandler = fun;}, 

reportError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error);}, 

reportFatalError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error, true);}, 

applyWithGuard:function(fun, context, args){
try{
ErrorUtils._inGuard++;
return fun.apply(context, args);}
catch(e) {
ErrorUtils.reportError(e);}finally 
{
ErrorUtils._inGuard--;}}, 


applyWithGuardIfNeeded:function(fun, context, args){
if(ErrorUtils.inGuard()){
return fun.apply(context, args);}else 
{
ErrorUtils.applyWithGuard(fun, context, args);}}, 


inGuard:function(){
return ErrorUtils._inGuard;}, 

guard:function(fun, name, context){
if(typeof fun !== 'function'){
console.warn('A function must be passed to ErrorUtils.guard, got ', fun);
return null;}

name = name || fun.name || '<generated guard>';
function guarded(){
return (
ErrorUtils.applyWithGuard(
fun, 
context || this, 
arguments, 
null, 
name));}




return guarded;}};


global.ErrorUtils = ErrorUtils;





function setupErrorGuard(){
var onError=function(e){
global.console.error(
'Error: ' + 
'\n stack: ' + e.stack + 
'\n line: ' + e.line + 
'\n message: ' + e.message, 
e);};


global.ErrorUtils.setGlobalHandler(onError);}


setupErrorGuard();})(
this);
if(











!String.prototype.startsWith){
String.prototype.startsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
var start=Math.min(Math.max(pos, 0), string.length);
return string.indexOf(String(search), pos) === start;};}



if(!String.prototype.endsWith){
String.prototype.endsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var stringLength=string.length;
var searchString=String(search);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:stringLength;
var end=Math.min(Math.max(pos, 0), stringLength);
var start=end - searchString.length;
if(start < 0){
return false;}

return string.lastIndexOf(searchString, start) === start;};}



if(!String.prototype.contains){
String.prototype.contains = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
return string.indexOf(String(search), pos) !== -1;};}



if(!String.prototype.repeat){
String.prototype.repeat = function(count){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
count = Number(count) || 0;
if(count < 0 || count === Infinity){
throw RangeError();}

if(count === 1){
return string;}

var result='';
while(count) {
if(count & 1){
result += string;}

if(count >>= 1){
string += string;}}


return result;};}
(









function(undefined){

function findIndex(predicate, context){
if(this == null){
throw new TypeError(
'Array.prototype.findIndex called on null or undefined');}


if(typeof predicate !== 'function'){
throw new TypeError('predicate must be a function');}

var list=Object(this);
var length=list.length >>> 0;
for(var i=0; i < length; i++) {
if(predicate.call(context, list[i], i, list)){
return i;}}


return -1;}


if(!Array.prototype.findIndex){
Object.defineProperty(Array.prototype, 'findIndex', {
enumerable:false, 
writable:true, 
configurable:true, 
value:findIndex});}




if(!Array.prototype.find){
Object.defineProperty(Array.prototype, 'find', {
enumerable:false, 
writable:true, 
configurable:true, 
value:function(predicate, context){
if(this == null){
throw new TypeError(
'Array.prototype.find called on null or undefined');}


var index=findIndex.call(this, predicate, context);
return index === -1?undefined:this[index];}});}})();
__d('yarn/index.ios.js',["Dimensions","NativeModules","react-native/Libraries/react-native/react-native.js","yarn/app/views/wordstrip/wordstrip.js","yarn/app/views/browser/browser.js","yarn/app/views/popup/popup.js","yarn/app/views/statusbar/statusbar.js","yarn/app/views/settings/settings.js","yarn/app/views/mainbar/mainbar.js","yarn/app/stores/gamestatestore.js","yarn/app/stores/userprofilestore.js","yarn/app/actions/actions.js","yarn/app/logger/logger.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');

var WordStrip=require('yarn/app/views/wordstrip/wordstrip.js');
var Browser=require('yarn/app/views/browser/browser.js');
var Popup=require('yarn/app/views/popup/popup.js');
var StatusBar=require('yarn/app/views/statusbar/statusbar.js');
var Settings=require('yarn/app/views/settings/settings.js');
var MainBar=require('yarn/app/views/mainbar/mainbar.js');

var gameStateStore=require('yarn/app/stores/gamestatestore.js');
var userProfileStore=require('yarn/app/stores/userprofilestore.js');
var actions=require('yarn/app/actions/actions.js');
var log=require('yarn/app/logger/logger.js');

var Dimensions=require('Dimensions');var _Dimensions$get=
Dimensions.get('window');var width=_Dimensions$get.width;var height=_Dimensions$get.height;
console.log('DIM', width, height);var 


AppRegistry=







React.AppRegistry;var StyleSheet=React.StyleSheet;var Text=React.Text;var TextInput=React.TextInput;var TouchableOpacity=React.TouchableOpacity;var View=React.View;var WebView=React.WebView;var LayoutAnimation=React.LayoutAnimation;var _require=



require('NativeModules');var DictionaryProxy=_require.DictionaryProxy;

var HEADER='#F9FAFB';

var GAME_STATES=gameStateStore.GAME_STATES;

var BROWSER_REF='browser';
var DEFAULT_URL='http://www.theguardian.com/';

var yarn=React.createClass({displayName:'yarn', 

getInitialState:function(){
return {
url:DEFAULT_URL, 
popupVisible:false, 
question:[], 
buttonRect:{}, 
firstButtonRect:{}, 
initialPopupVisible:false, 
settingsViewVisible:false, 
bottomBar:'', 
wordsCountVisible:false};}, 



render:function(){
console.log('render', this.state);
var bottomBar=this.renderBottomBar();

return (
React.createElement(View, {style:[styles.container]}, 
React.createElement(Browser, {
ref:BROWSER_REF, 
url:this.state.url, 
userLevel:userProfileStore.get('level'), 
userRange:userProfileStore.get('range'), 
onUrlChange:this.onUrlChange, 
onScroll:this.onBrowserScroll}), 

React.createElement(View, {style:styles.bottomBarWrap}, 
this.renderMainBar(), 
bottomBar), 

React.createElement(Popup, {
visible:this.state.popupVisible, 
onClose:this.onPopupSubmit, 
onSubmit:this.onPopupSubmit, 
title:this.state.popupTitle, 
content:this.state.popupContent, 
arrowRect:this.state.buttonRect, 
onShowDictionary:this.onShowDictionary}), 

React.createElement(Popup, {
visible:this.state.initialPopupVisible, 
onClose:this.closeInitialPopup, 
onSubmit:this.closeInitialPopup, 
type:Popup.POPUP_TYPE.INFO, 
arrowRect:this.state.firstButtonRect}), 

this.renderSettings()));}, 




onShowDictionary:function(){
DictionaryProxy.showDefinition(gameStateStore.get('currentWord').text);}, 


renderBottomBar:function(){
switch(this.state.bottomBar){
case 'wordscount':
return this.renderInfoBar();
case 'wordstrip':
return this.renderWordStrip();
case 'result':
return this.renderResultView();
case 'mainbar':
return this.renderMainBar();
default:
return React.createElement(View, null);}}, 



renderResultView:function(){
return (
React.createElement(StatusBar, {
correctWords:gameStateStore.get('correct'), 
totalWords:gameStateStore.get('pageWords').length, 
onNextPress:this.closeResultView, 
level:userProfileStore.get('level'), 
score:userProfileStore.get('score'), 
showWordsCount:false}));}, 




renderInfoBar:function(){
console.log('render info bar, visited words:', gameStateStore.get('visitedPageWords').length);
return (
React.createElement(StatusBar, {
ref:'wordscountbar', 
nextText:'Test me!', 
onNextPress:actions.emit.bind(actions, actions.START_GAME), 
showWordsCount:true, 
wordsCount:gameStateStore.get('visitedPageWords').length, 
startHidden:true}));}, 




renderWordStrip:function(){
return (
React.createElement(WordStrip, {
ref:'wordstrip', 
disabled:this.state.wordStripDisabled, 
onAction:this.onWordPressed, 
words:this.state.question}));}, 




renderMainBar:function(){
return React.createElement(MainBar, {ref:'mainbar'});}, 


renderSettings:function(){
if(!this.state.settingsViewVisible){
return React.createElement(View, null);}


return (
React.createElement(Settings, {
onClose:this.closeSettingsView, 
initialLevel:userProfileStore.get('level'), 
initialLang:userProfileStore.get('language')}));}, 




onUrlChange:function(){
actions.emit(actions.RESET);
this.setState({
wordsCountVisible:false});

this.refs['mainbar'].animateIn();}, 


onBrowserScroll:function(data){
console.log('browser scroll', data);
if(this.state.bottomBar === 'wordscount'){
if(!this.state.wordsCountVisible && data.y > 10){
console.log('show wordscount bar');
this.setState({
wordsCountVisible:true});

this.refs['mainbar'].animateOut();
this.refs['wordscountbar'].animateIn();}else 

if(this.state.wordsCountVisible && data.y < 10){
console.log('hide wordscount bar');
this.setState({
wordsCountVisible:false});

this.refs['mainbar'].animateIn();
this.refs['wordscountbar'].animateOut();}}}, 




closeResultView:function(){
this.setState({
bottomBar:'', 
wordsCountVisible:false});

this.refs['mainbar'].animateIn();}, 


showSettings:function(){
this.setState({
settingsViewVisible:true});}, 



closeSettingsView:function(){
this.setState({
settingsViewVisible:false});}, 



showNextQuestion:function(){
this.setState({
bottomBar:'wordstrip'});

actions.emit(actions.SHOW_NEXT_QUESTION);}, 


componentDidMount:function(){
this.lang = userProfileStore.get('language');

gameStateStore.addChangeListener(this.onGameStateChanged);
userProfileStore.addChangeListener(this.onUserProfileChanged);
actions.on(actions.START_GAME, this.hideBottomBar);
actions.on(actions.CHANGE_LEVEL, this.onForceChangeLevel);
actions.on(actions.SETTINGS_BUTTON_PRESSED, this.showSettings);}, 


hideBottomBar:function(){
this.setState({
bottomBar:''});}, 



onPopupSubmit:function(){
this.setState({
popupVisible:false});

this.showNextQuestion();}, 


onGameStateChanged:function(){
if(gameStateStore.get('finished')){
this.finishGame();
return;}


var currentGameState=gameStateStore.get('currentState');

var bottomBar='';
var wordStripDisabled=false;

if(currentGameState === GAME_STATES.NOT_STARTED && gameStateStore.get('pageWords').length){
bottomBar = 'wordscount';}else 


if(currentGameState === GAME_STATES.NOT_STARTED && !gameStateStore.get('pageWords').length){
bottomBar = '';}else 

if(
currentGameState === GAME_STATES.WAITING_FOR_ANSWER || 
currentGameState === GAME_STATES.WRONG_ANSWER_CHOSEN || 
currentGameState === GAME_STATES.CORRECT_ANSWER_CHOSEN){
bottomBar = 'wordstrip';}


if(bottomBar === 'wordstrip'){
wordStripDisabled = currentGameState !== GAME_STATES.WAITING_FOR_ANSWER;}


var popupVisible=currentGameState === GAME_STATES.CORRECT_ANSWER_CHOSEN || 
currentGameState === GAME_STATES.WRONG_ANSWER_CHOSEN;

var popupTitle=popupVisible?
currentGameState == GAME_STATES.CORRECT_ANSWER_CHOSEN?'That\'s right!':'Oops...':'';

var definition;
(gameStateStore.get('currentQuestion') || []).forEach(function(question){
if(question.def){
definition = question.def.entryContent;}});



var initialPopupVisible=this.state.wordstripVisible && gameStateStore.get('currentWordIndex') === 0 && 
currentGameState === GAME_STATES.WAITING_FOR_ANSWER;

this.setState({
question:gameStateStore.get('currentQuestion'), 
wordStripDisabled:wordStripDisabled, 
bottomBar:bottomBar, 
popupVisible:popupVisible, 
popupTitle:popupTitle, 
popupContent:definition, 
initialPopupVisible:initialPopupVisible});




if(initialPopupVisible){
setTimeout((function(){
this.refs['wordstrip'].getButtonRect(0, (function(rect){
this.setState({
firstButtonRect:rect});}).

bind(this));}).
bind(this), 300);}}, 



finishGame:function(){
this.refs[BROWSER_REF].unhighlightWords();
this.setState({
bottomBar:!!gameStateStore.get('pageWords').length?'result':'', 
popupVisible:false, 
infoBarVisible:false, 
wordstripVisible:false});

log({
message:'game finished', 
correctWords:gameStateStore.get('correct'), 
totalWords:gameStateStore.get('pageWords').length, 
level:userProfileStore.get('level'), 
score:userProfileStore.get('score')});}, 



onWordPressed:function(rect, word, index){

if(index === 0){
this.refs[BROWSER_REF].scrollToWord(word);
return;}


this.setState({
buttonRect:rect});

actions.emit(actions.WORD_PRESSED, word);}, 


closeInitialPopup:function(){
this.setState({
initialPopupVisible:false});}, 



onUserProfileChanged:function(){
if(this.lang !== userProfileStore.get('language')){
this.lang = userProfileStore.get('language');
this.resetGame();
this.reloadBrowser();}}, 



resetGame:function(){
this.setState({
question:[], 
bottomBar:''});}, 



onForceChangeLevel:function(){
this.resetGame();
this.reloadBrowser();}, 


reloadBrowser:function(){
this.refs[BROWSER_REF].resetLastParsedContent();
this.refs[BROWSER_REF].reload();}});




var styles=StyleSheet.create({
container:{
flex:1, 
backgroundColor:HEADER}, 


bottomBarWrap:{}});





AppRegistry.registerComponent('yarn', function(){return yarn;});
});
__d('react-native/Libraries/react-native/react-native.js',["React","ActivityIndicatorIOS","DatePickerIOS","Image","ListView","MapView","Navigator","NavigatorIOS","PickerIOS","ProgressViewIOS","ScrollView","SegmentedControlIOS","SliderIOS","SwitchIOS","TabBarIOS","Text","TextInput","TouchableHighlight","TouchableOpacity","TouchableWithoutFeedback","View","WebView","ActionSheetIOS","AdSupportIOS","AlertIOS","Animated","AppRegistry","AppStateIOS","AsyncStorage","CameraRoll","Dimensions","Easing","ImagePickerIOS","InteractionManager","LayoutAnimation","LinkingIOS","NetInfo","PanResponder","PixelRatio","PushNotificationIOS","Settings","StatusBarIOS","StyleSheet","VibrationIOS","RCTDeviceEventEmitter","RCTNativeAppEventEmitter","NativeModules","Platform","requireNativeComponent","EdgeInsetsPropType","PointPropType","LinkedStateMixin","ReactComponentWithPureRenderMixin","NativeModules","ReactUpdates","cloneWithProps","ReactFragment","update","ReactDefaultPerf","ReactTestUtils"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';


















var ReactNative=Object.assign(Object.create(require('React')), {

ActivityIndicatorIOS:require('ActivityIndicatorIOS'), 
DatePickerIOS:require('DatePickerIOS'), 
Image:require('Image'), 
ListView:require('ListView'), 
MapView:require('MapView'), 
Navigator:require('Navigator'), 
NavigatorIOS:require('NavigatorIOS'), 
PickerIOS:require('PickerIOS'), 
ProgressViewIOS:require('ProgressViewIOS'), 
ScrollView:require('ScrollView'), 
SegmentedControlIOS:require('SegmentedControlIOS'), 
SliderIOS:require('SliderIOS'), 
SwitchIOS:require('SwitchIOS'), 
TabBarIOS:require('TabBarIOS'), 
Text:require('Text'), 
TextInput:require('TextInput'), 
TouchableHighlight:require('TouchableHighlight'), 
TouchableOpacity:require('TouchableOpacity'), 
TouchableWithoutFeedback:require('TouchableWithoutFeedback'), 
View:require('View'), 
WebView:require('WebView'), 


ActionSheetIOS:require('ActionSheetIOS'), 
AdSupportIOS:require('AdSupportIOS'), 
AlertIOS:require('AlertIOS'), 
Animated:require('Animated'), 
AppRegistry:require('AppRegistry'), 
AppStateIOS:require('AppStateIOS'), 
AsyncStorage:require('AsyncStorage'), 
CameraRoll:require('CameraRoll'), 
Dimensions:require('Dimensions'), 
Easing:require('Easing'), 
ImagePickerIOS:require('ImagePickerIOS'), 
InteractionManager:require('InteractionManager'), 
LayoutAnimation:require('LayoutAnimation'), 
LinkingIOS:require('LinkingIOS'), 
NetInfo:require('NetInfo'), 
PanResponder:require('PanResponder'), 
PixelRatio:require('PixelRatio'), 
PushNotificationIOS:require('PushNotificationIOS'), 
Settings:require('Settings'), 
StatusBarIOS:require('StatusBarIOS'), 
StyleSheet:require('StyleSheet'), 
VibrationIOS:require('VibrationIOS'), 


DeviceEventEmitter:require('RCTDeviceEventEmitter'), 
NativeAppEventEmitter:require('RCTNativeAppEventEmitter'), 
NativeModules:require('NativeModules'), 
Platform:require('Platform'), 
requireNativeComponent:require('requireNativeComponent'), 


EdgeInsetsPropType:require('EdgeInsetsPropType'), 
PointPropType:require('PointPropType'), 

addons:{
LinkedStateMixin:require('LinkedStateMixin'), 
Perf:undefined, 
PureRenderMixin:require('ReactComponentWithPureRenderMixin'), 
TestModule:require('NativeModules').TestModule, 
TestUtils:undefined, 
batchedUpdates:require('ReactUpdates').batchedUpdates, 
cloneWithProps:require('cloneWithProps'), 
createFragment:require('ReactFragment').create, 
update:require('update')}});



if(__DEV__){
ReactNative.addons.Perf = require('ReactDefaultPerf');
ReactNative.addons.TestUtils = require('ReactTestUtils');}


module.exports = ReactNative;
});
__d('React',["ReactNative"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












module.exports = require('ReactNative');
});
__d('ReactNative',["ReactChildren","ReactClass","ReactComponent","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactInstanceHandles","ReactNativeDefaultInjection","ReactNativeMount","ReactPropTypes","deprecated","findNodeHandle","invariant","onlyChild","warning","ReactReconciler","ReactNativeTextComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactChildren=require('ReactChildren');
var ReactClass=require('ReactClass');
var ReactComponent=require('ReactComponent');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeDefaultInjection=require('ReactNativeDefaultInjection');
var ReactNativeMount=require('ReactNativeMount');
var ReactPropTypes=require('ReactPropTypes');

var deprecated=require('deprecated');
var findNodeHandle=require('findNodeHandle');
var invariant=require('invariant');
var onlyChild=require('onlyChild');
var warning=require('warning');

ReactNativeDefaultInjection.inject();

var createElement=ReactElement.createElement;
var createFactory=ReactElement.createFactory;
var cloneElement=ReactElement.cloneElement;

if(__DEV__){
createElement = ReactElementValidator.createElement;
createFactory = ReactElementValidator.createFactory;
cloneElement = ReactElementValidator.cloneElement;}


var resolveDefaultProps=function(element){

var defaultProps=element.type.defaultProps;
var props=element.props;
for(var propName in defaultProps) {
if(props[propName] === undefined){
props[propName] = defaultProps[propName];}}};





var augmentElement=function(element){
if(__DEV__){
invariant(
false, 
'This optimized path should never be used in DEV mode because ' + 
'it does not provide validation. Check your JSX transform.');}


element._owner = ReactCurrentOwner.current;
if(element.type.defaultProps){
resolveDefaultProps(element);}

return element;};


var render=function(
element, 
mountInto, 
callback)
{
return ReactNativeMount.renderComponent(element, mountInto, callback);};


var ReactNative={
hasReactNativeInitialized:false, 
Children:{
map:ReactChildren.map, 
forEach:ReactChildren.forEach, 
count:ReactChildren.count, 
only:onlyChild}, 

Component:ReactComponent, 
PropTypes:ReactPropTypes, 
createClass:ReactClass.createClass, 
createElement:createElement, 
createFactory:createFactory, 
cloneElement:cloneElement, 
_augmentElement:augmentElement, 
findNodeHandle:findNodeHandle, 
render:render, 
unmountComponentAtNode:ReactNativeMount.unmountComponentAtNode, 


__spread:Object.assign, 

unmountComponentAtNodeAndRemoveContainer:ReactNativeMount.unmountComponentAtNodeAndRemoveContainer, 
isValidClass:ReactElement.isValidFactory, 
isValidElement:ReactElement.isValidElement, 


renderComponent:function(
element, 
mountInto, 
callback)
{
warning('Use React.render instead of React.renderComponent');
return ReactNative.render(element, mountInto, callback);}};






if(
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && 
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function'){
__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:ReactCurrentOwner, 
InstanceHandles:ReactInstanceHandles, 
Mount:ReactNativeMount, 
Reconciler:require('ReactReconciler'), 
TextComponent:require('ReactNativeTextComponent')});}



module.exports = ReactNative;
});
__d('ReactChildren',["PooledClass","ReactFragment","traverseAllChildren","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PooledClass=require('PooledClass');
var ReactFragment=require('ReactFragment');

var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');

var twoArgumentPooler=PooledClass.twoArgumentPooler;
var threeArgumentPooler=PooledClass.threeArgumentPooler;









function ForEachBookKeeping(forEachFunction, forEachContext){
this.func = forEachFunction;
this.context = forEachContext;
this.count = 0;}

PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(traverseContext, child, name){
var bookKeeping=traverseContext;
bookKeeping.func.call(bookKeeping.context, child, bookKeeping.count++);}












function forEachChildren(children, forEachFunc, forEachContext){
if(children == null){
return children;}


var traverseContext=
ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
traverseAllChildren(children, forEachSingleChild, traverseContext);
ForEachBookKeeping.release(traverseContext);}











function MapBookKeeping(mapResult, mapFunction, mapContext){
this.result = mapResult;
this.func = mapFunction;
this.context = mapContext;
this.count = 0;}

PooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);

function mapSingleChildIntoContext(traverseContext, child, name){
var bookKeeping=traverseContext;
var mapResult=bookKeeping.result;

var keyUnique=mapResult[name] === undefined;
if(__DEV__){
warning(
keyUnique, 
'ReactChildren.map(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.', 
name);}



if(keyUnique){
var mappedChild=
bookKeeping.func.call(bookKeeping.context, child, bookKeeping.count++);
mapResult[name] = mappedChild;}}

















function mapChildren(children, func, context){
if(children == null){
return children;}


var mapResult={};
var traverseContext=MapBookKeeping.getPooled(mapResult, func, context);
traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
MapBookKeeping.release(traverseContext);
return ReactFragment.create(mapResult);}


function forEachSingleChildDummy(traverseContext, child, name){
return null;}









function countChildren(children, context){
return traverseAllChildren(children, forEachSingleChildDummy, null);}


var ReactChildren={
forEach:forEachChildren, 
map:mapChildren, 
count:countChildren};


module.exports = ReactChildren;
});
__d('PooledClass',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');








var oneArgumentPooler=function(copyFieldsFrom){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance, copyFieldsFrom);
return instance;}else 
{
return new Klass(copyFieldsFrom);}};



var twoArgumentPooler=function(a1, a2){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance, a1, a2);
return instance;}else 
{
return new Klass(a1, a2);}};



var threeArgumentPooler=function(a1, a2, a3){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance, a1, a2, a3);
return instance;}else 
{
return new Klass(a1, a2, a3);}};



var fourArgumentPooler=function(a1, a2, a3, a4){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance, a1, a2, a3, a4);
return instance;}else 
{
return new Klass(a1, a2, a3, a4);}};



var fiveArgumentPooler=function(a1, a2, a3, a4, a5){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance, a1, a2, a3, a4, a5);
return instance;}else 
{
return new Klass(a1, a2, a3, a4, a5);}};



var standardReleaser=function(instance){
var Klass=this;
invariant(
instance instanceof Klass, 
'Trying to release an instance into a pool of a different type.');

if(instance.destructor){
instance.destructor();}

if(Klass.instancePool.length < Klass.poolSize){
Klass.instancePool.push(instance);}};



var DEFAULT_POOL_SIZE=10;
var DEFAULT_POOLER=oneArgumentPooler;










var addPoolingTo=function(CopyConstructor, pooler){
var NewKlass=CopyConstructor;
NewKlass.instancePool = [];
NewKlass.getPooled = pooler || DEFAULT_POOLER;
if(!NewKlass.poolSize){
NewKlass.poolSize = DEFAULT_POOL_SIZE;}

NewKlass.release = standardReleaser;
return NewKlass;};


var PooledClass={
addPoolingTo:addPoolingTo, 
oneArgumentPooler:oneArgumentPooler, 
twoArgumentPooler:twoArgumentPooler, 
threeArgumentPooler:threeArgumentPooler, 
fourArgumentPooler:fourArgumentPooler, 
fiveArgumentPooler:fiveArgumentPooler};


module.exports = PooledClass;
});
__d('invariant',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';























var invariant=function(condition, format, a, b, c, d, e, f){
if(__DEV__){
if(format === undefined){
throw new Error('invariant requires an error message argument');}}



if(!condition){
var error;
if(format === undefined){
error = new Error(
'Minified exception occurred; use the non-minified dev environment ' + 
'for the full error message and additional helpful warnings.');}else 

{
var args=[a, b, c, d, e, f];
var argIndex=0;
error = new Error(
'Invariant Violation: ' + 
format.replace(/%s/g, function(){return args[argIndex++];}));}



error.framesToPop = 1;
throw error;}};



module.exports = invariant;
});
__d('ReactFragment',["ReactElement","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');

var warning=require('warning');









var fragmentKey;
var didWarnKey;
var canWarnForReactFragment;

if(__DEV__){
fragmentKey = '_reactFragment';
didWarnKey = '_reactDidWarn';

try{



var dummy=function(){
return 1;};


Object.defineProperty(
{}, 
fragmentKey, 
{enumerable:false, value:true});


Object.defineProperty(
{}, 
'key', 
{enumerable:true, get:dummy});


canWarnForReactFragment = true;}
catch(x) {
canWarnForReactFragment = false;}


var proxyPropertyAccessWithWarning=function(obj, key){
Object.defineProperty(obj, key, {
enumerable:true, 
get:function(){
warning(
this[didWarnKey], 
'A ReactFragment is an opaque type. Accessing any of its ' + 
'properties is deprecated. Pass it to one of the React.Children ' + 
'helpers.');

this[didWarnKey] = true;
return this[fragmentKey][key];}, 

set:function(value){
warning(
this[didWarnKey], 
'A ReactFragment is an immutable opaque type. Mutating its ' + 
'properties is deprecated.');

this[didWarnKey] = true;
this[fragmentKey][key] = value;}});};




var issuedWarnings={};

var didWarnForFragment=function(fragment){


var fragmentCacheKey='';
for(var key in fragment) {
fragmentCacheKey += key + ':' + typeof fragment[key] + ',';}

var alreadyWarnedOnce=!!issuedWarnings[fragmentCacheKey];
issuedWarnings[fragmentCacheKey] = true;
return alreadyWarnedOnce;};}



var ReactFragment={


create:function(object){
if(__DEV__){
if(typeof object !== 'object' || !object || Array.isArray(object)){
warning(
false, 
'React.addons.createFragment only accepts a single object. Got: %s', 
object);

return object;}

if(ReactElement.isValidElement(object)){
warning(
false, 
'React.addons.createFragment does not accept a ReactElement ' + 
'without a wrapper object.');

return object;}

if(canWarnForReactFragment){
var proxy={};
Object.defineProperty(proxy, fragmentKey, {
enumerable:false, 
value:object});

Object.defineProperty(proxy, didWarnKey, {
writable:true, 
enumerable:false, 
value:false});

for(var key in object) {
proxyPropertyAccessWithWarning(proxy, key);}

Object.preventExtensions(proxy);
return proxy;}}


return object;}, 



extract:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){
if(!fragment[fragmentKey]){
warning(
didWarnForFragment(fragment), 
'Any use of a keyed object should be wrapped in ' + 
'React.addons.createFragment(object) before being passed as a ' + 
'child.');

return fragment;}

return fragment[fragmentKey];}}


return fragment;}, 




extractIfFragment:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){

if(fragment[fragmentKey]){
return fragment[fragmentKey];}




for(var key in fragment) {
if(fragment.hasOwnProperty(key) && 
ReactElement.isValidElement(fragment[key])){


return ReactFragment.extract(fragment);}}}}




return fragment;}};



module.exports = ReactFragment;
});
__d('ReactElement',["ReactCurrentOwner","Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactCurrentOwner=require('ReactCurrentOwner');

var assign=require('Object.assign');

var RESERVED_PROPS={
key:true, 
ref:true};













var ReactElement=function(type, key, ref, owner, props){

this.type = type;
this.key = key;
this.ref = ref;


this._owner = owner;

this.props = props;

if(__DEV__){




this._store = {};





try{
Object.defineProperty(this._store, 'validated', {
configurable:false, 
enumerable:false, 
writable:true, 
value:false});}

catch(x) {
this._store.validated = false;}

Object.freeze(this.props);
Object.freeze(this);}};





ReactElement.prototype = {
_isReactElement:true};


ReactElement.createElement = function(type, config, children){
var propName;


var props={};

var key=null;
var ref=null;

if(config != null){
ref = config.ref === undefined?null:config.ref;
key = config.key === undefined?null:'' + config.key;

for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0; i < childrenLength; i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}



if(type && type.defaultProps){
var defaultProps=type.defaultProps;
for(propName in defaultProps) {
if(typeof props[propName] === 'undefined'){
props[propName] = defaultProps[propName];}}}




return new ReactElement(
type, 
key, 
ref, 
ReactCurrentOwner.current, 
props);};



ReactElement.createFactory = function(type){
var factory=ReactElement.createElement.bind(null, type);





factory.type = type;
return factory;};


ReactElement.cloneAndReplaceProps = function(oldElement, newProps){
var newElement=new ReactElement(
oldElement.type, 
oldElement.key, 
oldElement.ref, 
oldElement._owner, 
newProps);


if(__DEV__){

newElement._store.validated = oldElement._store.validated;}


return newElement;};


ReactElement.cloneElement = function(element, config, children){
var propName;


var props=assign({}, element.props);


var key=element.key;
var ref=element.ref;


var owner=element._owner;

if(config != null){
if(config.ref !== undefined){

ref = config.ref;
owner = ReactCurrentOwner.current;}

if(config.key !== undefined){
key = '' + config.key;}


for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0; i < childrenLength; i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}


return new ReactElement(
element.type, 
key, 
ref, 
owner, 
props);};








ReactElement.isValidElement = function(object){




var isElement=!!(object && object._isReactElement);





return isElement;};


module.exports = ReactElement;
});
__d('ReactCurrentOwner',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';


















var ReactCurrentOwner={





current:null};



module.exports = ReactCurrentOwner;
});
__d('Object.assign',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














function assign(target, sources){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}


var to=Object(target);
var hasOwnProperty=Object.prototype.hasOwnProperty;

for(var nextIndex=1; nextIndex < arguments.length; nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


var from=Object(nextSource);






for(var key in from) {
if(hasOwnProperty.call(from, key)){
to[key] = from[key];}}}




return to;}


module.exports = assign;
});
__d('warning',["emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var emptyFunction=require('emptyFunction');








var warning=emptyFunction;

if(__DEV__){
warning = function(condition, format){for(var _len=arguments.length, args=Array(_len > 2?_len - 2:0), _key=2; _key < _len; _key++) {args[_key - 2] = arguments[_key];}
if(format === undefined){
throw new Error(
'`warning(condition, format, ...args)` requires a warning ' + 
'message argument');}



if(format.indexOf('Failed Composite propType: ') === 0){
return;}


if(!condition){
var argIndex=0;
var message='Warning: ' + format.replace(/%s/g, function(){return args[argIndex++];});
if(typeof console !== 'undefined'){
console.error(message);}

try{



throw new Error(message);}
catch(x) {}}};}




module.exports = warning;
});
__d('emptyFunction',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 










makeEmptyFunction(arg){
return function(){
return arg;};}








function emptyFunction(){}

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function(){return this;};
emptyFunction.thatReturnsArgument = function(arg){return arg;};

module.exports = emptyFunction;
});
__d('traverseAllChildren',["ReactElement","ReactFragment","ReactInstanceHandles","getIteratorFn","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactInstanceHandles=require('ReactInstanceHandles');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;
var SUBSEPARATOR=':';






var userProvidedKeyEscaperLookup={
'=':'=0', 
'.':'=1', 
':':'=2'};


var userProvidedKeyEscapeRegex=/[=.:]/g;

var didWarnAboutMaps=false;

function userProvidedKeyEscaper(match){
return userProvidedKeyEscaperLookup[match];}









function getComponentKey(component, index){
if(component && component.key != null){

return wrapUserProvidedKey(component.key);}


return index.toString(36);}








function escapeUserProvidedKey(text){
return ('' + text).replace(
userProvidedKeyEscapeRegex, 
userProvidedKeyEscaper);}










function wrapUserProvidedKey(key){
return '$' + escapeUserProvidedKey(key);}










function traverseAllChildrenImpl(
children, 
nameSoFar, 
callback, 
traverseContext)
{
var type=typeof children;

if(type === 'undefined' || type === 'boolean'){

children = null;}


if(children === null || 
type === 'string' || 
type === 'number' || 
ReactElement.isValidElement(children)){
callback(
traverseContext, 
children, 


nameSoFar === ''?SEPARATOR + getComponentKey(children, 0):nameSoFar);

return 1;}


var child;
var nextName;
var subtreeCount=0;

if(Array.isArray(children)){
for(var i=0; i < children.length; i++) {
child = children[i];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child, i);

subtreeCount += traverseAllChildrenImpl(
child, 
nextName, 
callback, 
traverseContext);}}else 


{
var iteratorFn=getIteratorFn(children);
if(iteratorFn){
var iterator=iteratorFn.call(children);
var step;
if(iteratorFn !== children.entries){
var ii=0;
while(!(step = iterator.next()).done) {
child = step.value;
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child, ii++);

subtreeCount += traverseAllChildrenImpl(
child, 
nextName, 
callback, 
traverseContext);}}else 


{
if(__DEV__){
warning(
didWarnAboutMaps, 
'Using Maps as children is not yet fully supported. It is an ' + 
'experimental feature that might be removed. Convert it to a ' + 
'sequence / iterable of keyed ReactElements instead.');

didWarnAboutMaps = true;}


while(!(step = iterator.next()).done) {
var entry=step.value;
if(entry){
child = entry[1];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + 
getComponentKey(child, 0);

subtreeCount += traverseAllChildrenImpl(
child, 
nextName, 
callback, 
traverseContext);}}}}else 




if(type === 'object'){
invariant(
children.nodeType !== 1, 
'traverseAllChildren(...): Encountered an invalid child; DOM ' + 
'elements are not valid children of React components.');

var fragment=ReactFragment.extract(children);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
child = fragment[key];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(key) + SUBSEPARATOR + 
getComponentKey(child, 0);

subtreeCount += traverseAllChildrenImpl(
child, 
nextName, 
callback, 
traverseContext);}}}}






return subtreeCount;}


















function traverseAllChildren(children, callback, traverseContext){
if(children == null){
return 0;}


return traverseAllChildrenImpl(children, '', callback, traverseContext);}


module.exports = traverseAllChildren;
});
__d('ReactInstanceHandles',["ReactRootIndex","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var ReactRootIndex=require('ReactRootIndex');

var invariant=require('invariant');

var SEPARATOR='.';
var SEPARATOR_LENGTH=SEPARATOR.length;




var MAX_TREE_DEPTH=100;








function getReactRootIDString(index){
return SEPARATOR + index.toString(36);}










function isBoundary(id, index){
return id.charAt(index) === SEPARATOR || index === id.length;}









function isValidID(id){
return id === '' || 
id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;}











function isAncestorIDOf(ancestorID, descendantID){
return (
descendantID.indexOf(ancestorID) === 0 && 
isBoundary(descendantID, ancestorID.length));}










function getParentID(id){
return id?id.substr(0, id.lastIndexOf(SEPARATOR)):'';}











function getNextDescendantID(ancestorID, destinationID){
invariant(
isValidID(ancestorID) && isValidID(destinationID), 
'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', 
ancestorID, 
destinationID);

invariant(
isAncestorIDOf(ancestorID, destinationID), 
'getNextDescendantID(...): React has made an invalid assumption about ' + 
'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', 
ancestorID, 
destinationID);

if(ancestorID === destinationID){
return ancestorID;}



var start=ancestorID.length + SEPARATOR_LENGTH;
for(var i=start; i < destinationID.length; i++) {
if(isBoundary(destinationID, i)){
break;}}


return destinationID.substr(0, i);}













function getFirstCommonAncestorID(oneID, twoID){
var minLength=Math.min(oneID.length, twoID.length);
if(minLength === 0){
return '';}

var lastCommonMarkerIndex=0;

for(var i=0; i <= minLength; i++) {
if(isBoundary(oneID, i) && isBoundary(twoID, i)){
lastCommonMarkerIndex = i;}else 
if(oneID.charAt(i) !== twoID.charAt(i)){
break;}}


var longestCommonID=oneID.substr(0, lastCommonMarkerIndex);
invariant(
isValidID(longestCommonID), 
'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', 
oneID, 
twoID, 
longestCommonID);

return longestCommonID;}














function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast){
start = start || '';
stop = stop || '';
invariant(
start !== stop, 
'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', 
start);

var traverseUp=isAncestorIDOf(stop, start);
invariant(
traverseUp || isAncestorIDOf(start, stop), 
'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 
'not have a parent path.', 
start, 
stop);


var depth=0;
var traverse=traverseUp?getParentID:getNextDescendantID;
for(var id=start;; id = traverse(id, stop)) {
var ret;
if((!skipFirst || id !== start) && (!skipLast || id !== stop)){
ret = cb(id, traverseUp, arg);}

if(ret === false || id === stop){

break;}

invariant(
depth++ < MAX_TREE_DEPTH, 
'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 
'traversing the React DOM ID tree. This may be due to malformed IDs: %s', 
start, stop);}}











var ReactInstanceHandles={





createReactRootID:function(){
return getReactRootIDString(ReactRootIndex.createReactRootIndex());}, 










createReactID:function(rootID, name){
return rootID + name;}, 










getReactRootIDFromNodeID:function(id){
if(id && id.charAt(0) === SEPARATOR && id.length > 1){
var index=id.indexOf(SEPARATOR, 1);
return index > -1?id.substr(0, index):id;}

return null;}, 
















traverseEnterLeave:function(leaveID, enterID, cb, upArg, downArg){
var ancestorID=getFirstCommonAncestorID(leaveID, enterID);
if(ancestorID !== leaveID){
traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);}

if(ancestorID !== enterID){
traverseParentPath(ancestorID, enterID, cb, downArg, true, false);}}, 













traverseTwoPhase:function(targetID, cb, arg){
if(targetID){
traverseParentPath('', targetID, cb, arg, true, false);
traverseParentPath(targetID, '', cb, arg, false, true);}}, 






traverseTwoPhaseSkipTarget:function(targetID, cb, arg){
if(targetID){
traverseParentPath('', targetID, cb, arg, true, true);
traverseParentPath(targetID, '', cb, arg, true, true);}}, 















traverseAncestors:function(targetID, cb, arg){
traverseParentPath('', targetID, cb, arg, true, false);}, 






_getFirstCommonAncestorID:getFirstCommonAncestorID, 





_getNextDescendantID:getNextDescendantID, 

isAncestorIDOf:isAncestorIDOf, 

SEPARATOR:SEPARATOR};



module.exports = ReactInstanceHandles;
});
__d('ReactRootIndex',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactRootIndexInjection={



injectCreateReactRootIndex:function(_createReactRootIndex){
ReactRootIndex.createReactRootIndex = _createReactRootIndex;}};



var ReactRootIndex={
createReactRootIndex:null, 
injection:ReactRootIndexInjection};


module.exports = ReactRootIndex;
});
__d('getIteratorFn',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var ITERATOR_SYMBOL=typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';















function getIteratorFn(maybeIterable){
var iteratorFn=maybeIterable && (
ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || 
maybeIterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn === 'function'){
return iteratorFn;}}



module.exports = getIteratorFn;
});
__d('ReactClass',["ReactComponent","ReactElement","ReactErrorUtils","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactNoopUpdateQueue","Object.assign","emptyObject","invariant","keyMirror","keyOf","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactComponent=require('ReactComponent');
var ReactElement=require('ReactElement');
var ReactErrorUtils=require('ReactErrorUtils');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactNoopUpdateQueue=require('ReactNoopUpdateQueue');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var keyMirror=require('keyMirror');
var keyOf=require('keyOf');
var warning=require('warning');

var MIXINS_KEY=keyOf({mixins:null});




var SpecPolicy=keyMirror({



DEFINE_ONCE:null, 




DEFINE_MANY:null, 



OVERRIDE_BASE:null, 





DEFINE_MANY_MERGED:null});



var injectedMixins=[];

var warnedSetProps=false;
function warnSetProps(){
if(!warnedSetProps){
warnedSetProps = true;
warning(
false, 
'setProps(...) and replaceProps(...) are deprecated. ' + 
'Instead, call React.render again at the top level.');}}


























var ReactClassInterface={







mixins:SpecPolicy.DEFINE_MANY, 








statics:SpecPolicy.DEFINE_MANY, 







propTypes:SpecPolicy.DEFINE_MANY, 







contextTypes:SpecPolicy.DEFINE_MANY, 







childContextTypes:SpecPolicy.DEFINE_MANY, 













getDefaultProps:SpecPolicy.DEFINE_MANY_MERGED, 















getInitialState:SpecPolicy.DEFINE_MANY_MERGED, 





getChildContext:SpecPolicy.DEFINE_MANY_MERGED, 

















render:SpecPolicy.DEFINE_ONCE, 












componentWillMount:SpecPolicy.DEFINE_MANY, 











componentDidMount:SpecPolicy.DEFINE_MANY, 




















componentWillReceiveProps:SpecPolicy.DEFINE_MANY, 





















shouldComponentUpdate:SpecPolicy.DEFINE_ONCE, 
















componentWillUpdate:SpecPolicy.DEFINE_MANY, 













componentDidUpdate:SpecPolicy.DEFINE_MANY, 












componentWillUnmount:SpecPolicy.DEFINE_MANY, 















updateComponent:SpecPolicy.OVERRIDE_BASE};












var RESERVED_SPEC_KEYS={
displayName:function(Constructor, displayName){
Constructor.displayName = displayName;}, 

mixins:function(Constructor, mixins){
if(mixins){
for(var i=0; i < mixins.length; i++) {
mixSpecIntoComponent(Constructor, mixins[i]);}}}, 



childContextTypes:function(Constructor, childContextTypes){
if(__DEV__){
validateTypeDef(
Constructor, 
childContextTypes, 
ReactPropTypeLocations.childContext);}


Constructor.childContextTypes = assign(
{}, 
Constructor.childContextTypes, 
childContextTypes);}, 


contextTypes:function(Constructor, contextTypes){
if(__DEV__){
validateTypeDef(
Constructor, 
contextTypes, 
ReactPropTypeLocations.context);}


Constructor.contextTypes = assign(
{}, 
Constructor.contextTypes, 
contextTypes);}, 






getDefaultProps:function(Constructor, getDefaultProps){
if(Constructor.getDefaultProps){
Constructor.getDefaultProps = createMergedResultFunction(
Constructor.getDefaultProps, 
getDefaultProps);}else 

{
Constructor.getDefaultProps = getDefaultProps;}}, 


propTypes:function(Constructor, propTypes){
if(__DEV__){
validateTypeDef(
Constructor, 
propTypes, 
ReactPropTypeLocations.prop);}


Constructor.propTypes = assign(
{}, 
Constructor.propTypes, 
propTypes);}, 


statics:function(Constructor, statics){
mixStaticSpecIntoComponent(Constructor, statics);}};



function validateTypeDef(Constructor, typeDef, location){
for(var propName in typeDef) {
if(typeDef.hasOwnProperty(propName)){


warning(
typeof typeDef[propName] === 'function', 
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.', 
Constructor.displayName || 'ReactClass', 
ReactPropTypeLocationNames[location], 
propName);}}}





function validateMethodOverride(proto, name){
var specPolicy=ReactClassInterface.hasOwnProperty(name)?
ReactClassInterface[name]:
null;


if(ReactClassMixin.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.OVERRIDE_BASE, 
'ReactClassInterface: You are attempting to override ' + 
'`%s` from your class specification. Ensure that your method names ' + 
'do not overlap with React methods.', 
name);}




if(proto.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.DEFINE_MANY || 
specPolicy === SpecPolicy.DEFINE_MANY_MERGED, 
'ReactClassInterface: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be due ' + 
'to a mixin.', 
name);}}








function mixSpecIntoComponent(Constructor, spec){
if(!spec){
return;}


invariant(
typeof spec !== 'function', 
'ReactClass: You\'re attempting to ' + 
'use a component class as a mixin. Instead, just use a regular object.');

invariant(
!ReactElement.isValidElement(spec), 
'ReactClass: You\'re attempting to ' + 
'use a component as a mixin. Instead, just use a regular object.');


var proto=Constructor.prototype;




if(spec.hasOwnProperty(MIXINS_KEY)){
RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);}


for(var name in spec) {
if(!spec.hasOwnProperty(name)){
continue;}


if(name === MIXINS_KEY){

continue;}


var property=spec[name];
validateMethodOverride(proto, name);

if(RESERVED_SPEC_KEYS.hasOwnProperty(name)){
RESERVED_SPEC_KEYS[name](Constructor, property);}else 
{




var isReactClassMethod=
ReactClassInterface.hasOwnProperty(name);
var isAlreadyDefined=proto.hasOwnProperty(name);
var isFunction=typeof property === 'function';
var shouldAutoBind=
isFunction && 
!isReactClassMethod && 
!isAlreadyDefined;

if(shouldAutoBind){
if(!proto.__reactAutoBindMap){
proto.__reactAutoBindMap = {};}

proto.__reactAutoBindMap[name] = property;
proto[name] = property;}else 
{
if(isAlreadyDefined){
var specPolicy=ReactClassInterface[name];


invariant(
isReactClassMethod && (
specPolicy === SpecPolicy.DEFINE_MANY_MERGED || 
specPolicy === SpecPolicy.DEFINE_MANY), 

'ReactClass: Unexpected spec policy %s for key %s ' + 
'when mixing in component specs.', 
specPolicy, 
name);




if(specPolicy === SpecPolicy.DEFINE_MANY_MERGED){
proto[name] = createMergedResultFunction(proto[name], property);}else 
if(specPolicy === SpecPolicy.DEFINE_MANY){
proto[name] = createChainedFunction(proto[name], property);}}else 

{
proto[name] = property;
if(__DEV__){


if(typeof property === 'function' && spec.displayName){
proto[name].displayName = spec.displayName + '_' + name;}}}}}}}








function mixStaticSpecIntoComponent(Constructor, statics){
if(!statics){
return;}

for(var name in statics) {
var property=statics[name];
if(!statics.hasOwnProperty(name)){
continue;}


var isReserved=(name in RESERVED_SPEC_KEYS);
invariant(
!isReserved, 
'ReactClass: You are attempting to define a reserved ' + 
'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 
'as an instance property instead; it will still be accessible on the ' + 
'constructor.', 
name);


var isInherited=(name in Constructor);
invariant(
!isInherited, 
'ReactClass: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be ' + 
'due to a mixin.', 
name);

Constructor[name] = property;}}










function mergeIntoWithNoDuplicateKeys(one, two){
invariant(
one && two && typeof one === 'object' && typeof two === 'object', 
'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');


for(var key in two) {
if(two.hasOwnProperty(key)){
invariant(
one[key] === undefined, 
'mergeIntoWithNoDuplicateKeys(): ' + 
'Tried to merge two objects with the same key: `%s`. This conflict ' + 
'may be due to a mixin; in particular, this may be caused by two ' + 
'getInitialState() or getDefaultProps() methods returning objects ' + 
'with clashing keys.', 
key);

one[key] = two[key];}}


return one;}










function createMergedResultFunction(one, two){
return function mergedResult(){
var a=one.apply(this, arguments);
var b=two.apply(this, arguments);
if(a == null){
return b;}else 
if(b == null){
return a;}

var c={};
mergeIntoWithNoDuplicateKeys(c, a);
mergeIntoWithNoDuplicateKeys(c, b);
return c;};}











function createChainedFunction(one, two){
return function chainedFunction(){
one.apply(this, arguments);
two.apply(this, arguments);};}










function bindAutoBindMethod(component, method){
var boundMethod=method.bind(component);
if(__DEV__){
boundMethod.__reactBoundContext = component;
boundMethod.__reactBoundMethod = method;
boundMethod.__reactBoundArguments = null;
var componentName=component.constructor.displayName;
var _bind=boundMethod.bind;

boundMethod.bind = function(newThis){for(var _len=arguments.length, args=Array(_len > 1?_len - 1:0), _key=1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}



if(newThis !== component && newThis !== null){
warning(
false, 
'bind(): React component methods may only be bound to the ' + 
'component instance. See %s', 
componentName);}else 

if(!args.length){
warning(
false, 
'bind(): You are binding a component method to the component. ' + 
'React does this for you automatically in a high-performance ' + 
'way, so you can safely remove this call. See %s', 
componentName);

return boundMethod;}

var reboundMethod=_bind.apply(boundMethod, arguments);
reboundMethod.__reactBoundContext = component;
reboundMethod.__reactBoundMethod = method;
reboundMethod.__reactBoundArguments = args;
return reboundMethod;};}



return boundMethod;}







function bindAutoBindMethods(component){
for(var autoBindKey in component.__reactAutoBindMap) {
if(component.__reactAutoBindMap.hasOwnProperty(autoBindKey)){
var method=component.__reactAutoBindMap[autoBindKey];
component[autoBindKey] = bindAutoBindMethod(
component, 
ReactErrorUtils.guard(
method, 
component.constructor.displayName + '.' + autoBindKey));}}}










var ReactClassMixin={





replaceState:function(newState, callback){
this.updater.enqueueReplaceState(this, newState);
if(callback){
this.updater.enqueueCallback(this, callback);}}, 









isMounted:function(){
return this.updater.isMounted(this);}, 











setProps:function(partialProps, callback){
if(__DEV__){
warnSetProps();}

this.updater.enqueueSetProps(this, partialProps);
if(callback){
this.updater.enqueueCallback(this, callback);}}, 












replaceProps:function(newProps, callback){
if(__DEV__){
warnSetProps();}

this.updater.enqueueReplaceProps(this, newProps);
if(callback){
this.updater.enqueueCallback(this, callback);}}};




var ReactClassComponent=function(){};
assign(
ReactClassComponent.prototype, 
ReactComponent.prototype, 
ReactClassMixin);







var ReactClass={








createClass:function(spec){
var Constructor=function(props, context, updater){



if(__DEV__){
warning(
this instanceof Constructor, 
'Something is calling a React component directly. Use a factory or ' + 
'JSX instead. See: https://fb.me/react-legacyfactory');}




if(this.__reactAutoBindMap){
bindAutoBindMethods(this);}


this.props = props;
this.context = context;
this.refs = emptyObject;
this.updater = updater || ReactNoopUpdateQueue;

this.state = null;




var initialState=this.getInitialState?this.getInitialState():null;
if(__DEV__){

if(typeof initialState === 'undefined' && 
this.getInitialState._isMockFunction){


initialState = null;}}


invariant(
typeof initialState === 'object' && !Array.isArray(initialState), 
'%s.getInitialState(): must return an object or null', 
Constructor.displayName || 'ReactCompositeComponent');


this.state = initialState;};

Constructor.prototype = new ReactClassComponent();
Constructor.prototype.constructor = Constructor;

injectedMixins.forEach(
mixSpecIntoComponent.bind(null, Constructor));


mixSpecIntoComponent(Constructor, spec);


if(Constructor.getDefaultProps){
Constructor.defaultProps = Constructor.getDefaultProps();}


if(__DEV__){




if(Constructor.getDefaultProps){
Constructor.getDefaultProps.isReactClassApproved = {};}

if(Constructor.prototype.getInitialState){
Constructor.prototype.getInitialState.isReactClassApproved = {};}}



invariant(
Constructor.prototype.render, 
'createClass(...): Class specification must implement a `render` method.');


if(__DEV__){
warning(
!Constructor.prototype.componentShouldUpdate, 
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.', 
spec.displayName || 'A component');

warning(
!Constructor.prototype.componentWillRecieveProps, 
'%s has a method called ' + 
'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', 
spec.displayName || 'A component');}




for(var methodName in ReactClassInterface) {
if(!Constructor.prototype[methodName]){
Constructor.prototype[methodName] = null;}}



return Constructor;}, 


injection:{
injectMixin:function(mixin){
injectedMixins.push(mixin);}}};





module.exports = ReactClass;
});
__d('ReactComponent',["ReactNoopUpdateQueue","emptyObject","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNoopUpdateQueue=require('ReactNoopUpdateQueue');

var emptyObject=require('emptyObject');
var invariant=require('invariant');
var warning=require('warning');




function ReactComponent(props, context, updater){
this.props = props;
this.context = context;
this.refs = emptyObject;


this.updater = updater || ReactNoopUpdateQueue;}



























ReactComponent.prototype.setState = function(partialState, callback){
invariant(
typeof partialState === 'object' || 
typeof partialState === 'function' || 
partialState == null, 
'setState(...): takes an object of state variables to update or a ' + 
'function which returns an object of state variables.');

if(__DEV__){
warning(
partialState != null, 
'setState(...): You passed an undefined or null state object; ' + 
'instead, use forceUpdate().');}


this.updater.enqueueSetState(this, partialState);
if(callback){
this.updater.enqueueCallback(this, callback);}};

















ReactComponent.prototype.forceUpdate = function(callback){
this.updater.enqueueForceUpdate(this);
if(callback){
this.updater.enqueueCallback(this, callback);}};








if(__DEV__){
var deprecatedAPIs={
getDOMNode:[
'getDOMNode', 
'Use React.findDOMNode(component) instead.'], 

isMounted:[
'isMounted', 
'Instead, make sure to clean up subscriptions and pending requests in ' + 
'componentWillUnmount to prevent memory leaks.'], 

replaceProps:[
'replaceProps', 
'Instead, call React.render again at the top level.'], 

replaceState:[
'replaceState', 
'Refactor your code to use setState instead (see ' + 
'https://github.com/facebook/react/issues/3236).'], 

setProps:[
'setProps', 
'Instead, call React.render again at the top level.']};


var defineDeprecationWarning=function(methodName, info){
try{
Object.defineProperty(ReactComponent.prototype, methodName, {
get:function(){
warning(
false, 
'%s(...) is deprecated in plain JavaScript React classes. %s', 
info[0], 
info[1]);

return undefined;}});}


catch(x) {}};



for(var fnName in deprecatedAPIs) {
if(deprecatedAPIs.hasOwnProperty(fnName)){
defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);}}}




module.exports = ReactComponent;
});
__d('ReactNoopUpdateQueue',["warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var warning=require('warning');

function warnTDZ(publicInstance, callerName){
if(__DEV__){
warning(
false, 
'%s(...): Can only update a mounted or mounting component. ' + 
'This usually means you called %s() on an unmounted component. ' + 
'This is a no-op. Please check the code for the %s component.', 
callerName, 
callerName, 
publicInstance.constructor && publicInstance.constructor.displayName || '');}}







var ReactNoopUpdateQueue={








isMounted:function(publicInstance){
return false;}, 










enqueueCallback:function(publicInstance, callback){}, 














enqueueForceUpdate:function(publicInstance){
warnTDZ(publicInstance, 'forceUpdate');}, 













enqueueReplaceState:function(publicInstance, completeState){
warnTDZ(publicInstance, 'replaceState');}, 












enqueueSetState:function(publicInstance, partialState){
warnTDZ(publicInstance, 'setState');}, 









enqueueSetProps:function(publicInstance, partialProps){
warnTDZ(publicInstance, 'setProps');}, 









enqueueReplaceProps:function(publicInstance, props){
warnTDZ(publicInstance, 'replaceProps');}};




module.exports = ReactNoopUpdateQueue;
});
__d('emptyObject',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";












var emptyObject={};

if(__DEV__){
Object.freeze(emptyObject);}


module.exports = emptyObject;
});
__d('ReactErrorUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactErrorUtils={









guard:function(func, name){
return func;}};



module.exports = ReactErrorUtils;
});
__d('ReactPropTypeLocations',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var ReactPropTypeLocations=keyMirror({
prop:null, 
context:null, 
childContext:null});


module.exports = ReactPropTypeLocations;
});
__d('keyMirror',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var invariant=require('invariant');



















var keyMirror=function(obj){
var ret={};
var key;
invariant(
obj instanceof Object && !Array.isArray(obj), 
'keyMirror(...): Argument must be an object.');

for(key in obj) {
if(!obj.hasOwnProperty(key)){
continue;}

ret[key] = key;}

return ret;};


module.exports = keyMirror;
});
__d('ReactPropTypeLocationNames',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypeLocationNames={};

if(__DEV__){
ReactPropTypeLocationNames = {
prop:'prop', 
context:'context', 
childContext:'child context'};}



module.exports = ReactPropTypeLocationNames;
});
__d('keyOf',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




















keyOf=function(oneKeyObj){
var key;
for(key in oneKeyObj) {
if(!oneKeyObj.hasOwnProperty(key)){
continue;}

return key;}

return null;};



module.exports = keyOf;
});
__d('ReactElementValidator',["ReactElement","ReactFragment","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactCurrentOwner","getIteratorFn","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactCurrentOwner=require('ReactCurrentOwner');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

function getDeclarationErrorAddendum(){
if(ReactCurrentOwner.current){
var name=ReactCurrentOwner.current.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}







var ownerHasKeyUseWarning={};

var loggedTypeFailures={};

var NUMERIC_PROPERTY_REGEX=/^\d+$/;







function getName(instance){
var publicInstance=instance && instance.getPublicInstance();
if(!publicInstance){
return undefined;}

var constructor=publicInstance.constructor;
if(!constructor){
return undefined;}

return constructor.displayName || constructor.name || undefined;}








function getCurrentOwnerDisplayName(){
var current=ReactCurrentOwner.current;
return (
current && getName(current) || undefined);}













function validateExplicitKey(element, parentType){
if(element._store.validated || element.key != null){
return;}

element._store.validated = true;

var addenda=getAddendaForKeyUse('uniqueKey', element, parentType);
if(addenda === null){

return;}

warning(
false, 
'Each child in an array or iterator should have a unique "key" prop.' + 
'%s%s%s', 
addenda.parentOrOwner || '', 
addenda.childOwner || '', 
addenda.url || '');}












function validatePropertyKey(name, element, parentType){
if(!NUMERIC_PROPERTY_REGEX.test(name)){
return;}

var addenda=getAddendaForKeyUse('numericKeys', element, parentType);
if(addenda === null){

return;}

warning(
false, 
'Child objects should have non-numeric keys so ordering is preserved.' + 
'%s%s%s', 
addenda.parentOrOwner || '', 
addenda.childOwner || '', 
addenda.url || '');}













function getAddendaForKeyUse(messageType, element, parentType){
var ownerName=getCurrentOwnerDisplayName();
var parentName=typeof parentType === 'string'?
parentType:parentType.displayName || parentType.name;

var useName=ownerName || parentName;
var memoizer=ownerHasKeyUseWarning[messageType] || (
ownerHasKeyUseWarning[messageType] = {});

if(memoizer[useName]){
return null;}

memoizer[useName] = true;

var addenda={
parentOrOwner:
ownerName?' Check the render method of ' + ownerName + '.':
parentName?' Check the React.render call using <' + parentName + '>.':
null, 
url:' See https://fb.me/react-warning-keys for more information.', 
childOwner:null};





if(element && 
element._owner && 
element._owner !== ReactCurrentOwner.current){

addenda.childOwner = ' It was passed a child from ' + 
getName(element._owner) + '.';}


return addenda;}











function validateChildKeys(node, parentType){
if(Array.isArray(node)){
for(var i=0; i < node.length; i++) {
var child=node[i];
if(ReactElement.isValidElement(child)){
validateExplicitKey(child, parentType);}}}else 


if(ReactElement.isValidElement(node)){

node._store.validated = true;}else 
if(node){
var iteratorFn=getIteratorFn(node);

if(iteratorFn){
if(iteratorFn !== node.entries){
var iterator=iteratorFn.call(node);
var step;
while(!(step = iterator.next()).done) {
if(ReactElement.isValidElement(step.value)){
validateExplicitKey(step.value, parentType);}}}}else 



if(typeof node === 'object'){
var fragment=ReactFragment.extractIfFragment(node);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
validatePropertyKey(key, fragment[key], parentType);}}}}}















function checkPropTypes(componentName, propTypes, props, location){
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;



try{


invariant(
typeof propTypes[propName] === 'function', 
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.', 
componentName || 'React class', 
ReactPropTypeLocationNames[location], 
propName);

error = propTypes[propName](props, propName, componentName, location);}
catch(ex) {
error = ex;}

warning(
!error || error instanceof Error, 
'%s: type specification of %s `%s` is invalid; the type checker ' + 
'function must return `null` or an `Error` but returned a %s. ' + 
'You may have forgotten to pass an argument to the type checker ' + 
'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 
'shape all require an argument).', 
componentName || 'React class', 
ReactPropTypeLocationNames[location], 
propName, 
typeof error);

if(error instanceof Error && !(error.message in loggedTypeFailures)){


loggedTypeFailures[error.message] = true;

var addendum=getDeclarationErrorAddendum();
warning(false, 'Failed propType: %s%s', error.message, addendum);}}}}











function validatePropTypes(element){
var componentClass=element.type;
if(typeof componentClass !== 'function'){
return;}

var name=componentClass.displayName || componentClass.name;
if(componentClass.propTypes){
checkPropTypes(
name, 
componentClass.propTypes, 
element.props, 
ReactPropTypeLocations.prop);}


if(typeof componentClass.getDefaultProps === 'function'){
warning(
componentClass.getDefaultProps.isReactClassApproved, 
'getDefaultProps is only used on classic React.createClass ' + 
'definitions. Use a static property named `defaultProps` instead.');}}




var ReactElementValidator={

createElement:function(type, props, children){


warning(typeof type === 'string' || typeof type === 'function', 
'React.createElement: type should not be null, undefined, boolean, or ' + 
'number. It should be a string (for DOM elements) or a ReactClass ' + 
'(for composite components).%s', 
getDeclarationErrorAddendum());


var element=ReactElement.createElement.apply(this, arguments);



if(element == null){
return element;}


for(var i=2; i < arguments.length; i++) {
validateChildKeys(arguments[i], type);}


validatePropTypes(element);

return element;}, 


createFactory:function(type){
var validatedFactory=ReactElementValidator.createElement.bind(
null, 
type);


validatedFactory.type = type;

if(__DEV__){
try{
Object.defineProperty(
validatedFactory, 
'type', 
{
enumerable:false, 
get:function(){
warning(
false, 
'Factory.type is deprecated. Access the class directly ' + 
'before passing it to createFactory.');

Object.defineProperty(this, 'type', {
value:type});

return type;}});}



catch(x) {}}





return validatedFactory;}, 


cloneElement:function(element, props, children){
var newElement=ReactElement.cloneElement.apply(this, arguments);
for(var i=2; i < arguments.length; i++) {
validateChildKeys(arguments[i], newElement.type);}

validatePropTypes(newElement);
return newElement;}};




module.exports = ReactElementValidator;
});
__d('ReactNativeDefaultInjection',["InitializeJavaScriptAppEngine","EventPluginHub","EventPluginUtils","IOSDefaultEventPluginOrder","IOSNativeBridgeEventPlugin","NodeHandle","ReactComponentEnvironment","ReactDefaultBatchingStrategy","ReactEmptyComponent","ReactInstanceHandles","ReactNativeComponentEnvironment","ReactNativeGlobalInteractionHandler","ReactNativeGlobalResponderHandler","ReactNativeMount","ReactNativeTextComponent","ReactNativeComponent","ReactUpdates","ResponderEventPlugin","UniversalWorkerNodeHandle","createReactNativeComponentClass","invariant","RCTEventEmitter","RCTLog","JSTimersExecution"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















require('InitializeJavaScriptAppEngine');
var EventPluginHub=require('EventPluginHub');
var EventPluginUtils=require('EventPluginUtils');
var IOSDefaultEventPluginOrder=require('IOSDefaultEventPluginOrder');
var IOSNativeBridgeEventPlugin=require('IOSNativeBridgeEventPlugin');
var NodeHandle=require('NodeHandle');
var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactDefaultBatchingStrategy=require('ReactDefaultBatchingStrategy');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeComponentEnvironment=require('ReactNativeComponentEnvironment');
var ReactNativeGlobalInteractionHandler=require('ReactNativeGlobalInteractionHandler');
var ReactNativeGlobalResponderHandler=require('ReactNativeGlobalResponderHandler');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTextComponent=require('ReactNativeTextComponent');
var ReactNativeComponent=require('ReactNativeComponent');
var ReactUpdates=require('ReactUpdates');
var ResponderEventPlugin=require('ResponderEventPlugin');
var UniversalWorkerNodeHandle=require('UniversalWorkerNodeHandle');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var invariant=require('invariant');


require('RCTEventEmitter');
require('RCTLog');
require('JSTimersExecution');

function inject(){



EventPluginHub.injection.injectEventPluginOrder(IOSDefaultEventPluginOrder);
EventPluginHub.injection.injectInstanceHandle(ReactInstanceHandles);

ResponderEventPlugin.injection.injectGlobalResponderHandler(
ReactNativeGlobalResponderHandler);


ResponderEventPlugin.injection.injectGlobalInteractionHandler(
ReactNativeGlobalInteractionHandler);






EventPluginHub.injection.injectEventPluginsByName({
'ResponderEventPlugin':ResponderEventPlugin, 
'IOSNativeBridgeEventPlugin':IOSNativeBridgeEventPlugin});


ReactUpdates.injection.injectReconcileTransaction(
ReactNativeComponentEnvironment.ReactReconcileTransaction);


ReactUpdates.injection.injectBatchingStrategy(
ReactDefaultBatchingStrategy);


ReactComponentEnvironment.injection.injectEnvironment(
ReactNativeComponentEnvironment);



var RCTView=createReactNativeComponentClass({
validAttributes:{}, 
uiViewClassName:'RCTView'});

ReactEmptyComponent.injection.injectEmptyComponent(RCTView);

EventPluginUtils.injection.injectMount(ReactNativeMount);

ReactNativeComponent.injection.injectTextComponentClass(
ReactNativeTextComponent);

ReactNativeComponent.injection.injectGenericComponentClass(function(tag){

var info='';
if(typeof tag === 'string' && /^[a-z]/.test(tag)){
info += ' Each component name should start with an uppercase letter.';}

invariant(false, 'Expected a component class, got %s.%s', tag, info);});


NodeHandle.injection.injectImplementation(UniversalWorkerNodeHandle);}


module.exports = {
inject:inject};
});
__d('InitializeJavaScriptAppEngine',["RCTDebugComponentOwnership","RCTDeviceEventEmitter","PerformanceLogger","ExceptionsManager","ErrorUtils","ExceptionsManager","Platform","JSTimers","NativeModules","Promise","XMLHttpRequest","FormData","fetch","Geolocation","WebSocket","BridgeProfiling"],function(global, require, requireDynamic, requireLazy, module, exports) {  require(
























'RCTDebugComponentOwnership');
require('RCTDeviceEventEmitter');
require('PerformanceLogger');

if(typeof GLOBAL === 'undefined'){
GLOBAL = this;}


if(typeof window === 'undefined'){
window = GLOBAL;}


function handleError(e, isFatal){
try{
require('ExceptionsManager').handleException(e, isFatal);}
catch(ee) {
console.log('Failed to print error: ', ee.message);}}



function setUpRedBoxErrorHandler(){
var ErrorUtils=require('ErrorUtils');
ErrorUtils.setGlobalHandler(handleError);}


function setUpRedBoxConsoleErrorHandler(){

var ExceptionsManager=require('ExceptionsManager');
var Platform=require('Platform');

if(__DEV__ && Platform.OS === 'ios'){
ExceptionsManager.installConsoleErrorReporter();}}










function setUpTimers(){
var JSTimers=require('JSTimers');
GLOBAL.setTimeout = JSTimers.setTimeout;
GLOBAL.setInterval = JSTimers.setInterval;
GLOBAL.setImmediate = JSTimers.setImmediate;
GLOBAL.clearTimeout = JSTimers.clearTimeout;
GLOBAL.clearInterval = JSTimers.clearInterval;
GLOBAL.clearImmediate = JSTimers.clearImmediate;
GLOBAL.cancelAnimationFrame = JSTimers.clearInterval;
GLOBAL.requestAnimationFrame = function(cb){

return JSTimers.requestAnimationFrame(cb);};}



function setUpAlert(){
var RCTAlertManager=require('NativeModules').AlertManager;
if(!GLOBAL.alert){
GLOBAL.alert = function(text){
var alertOpts={
title:'Alert', 
message:'' + text, 
buttons:[{'cancel':'OK'}]};

RCTAlertManager.alertWithArgs(alertOpts, null);};}}




function setUpPromise(){


GLOBAL.Promise = require('Promise');}


function setUpXHR(){


GLOBAL.XMLHttpRequest = require('XMLHttpRequest');
GLOBAL.FormData = require('FormData');

var fetchPolyfill=require('fetch');
GLOBAL.fetch = fetchPolyfill.fetch;
GLOBAL.Headers = fetchPolyfill.Headers;
GLOBAL.Request = fetchPolyfill.Request;
GLOBAL.Response = fetchPolyfill.Response;}


function setUpGeolocation(){
GLOBAL.navigator = GLOBAL.navigator || {};
GLOBAL.navigator.geolocation = require('Geolocation');}


function setUpWebSockets(){
GLOBAL.WebSocket = require('WebSocket');}


function setupProfile(){
console.profile = console.profile || GLOBAL.consoleProfile || function(){};
console.profileEnd = console.profileEnd || GLOBAL.consoleProfileEnd || function(){};
require('BridgeProfiling').swizzleReactPerf();}


setUpRedBoxErrorHandler();
setUpTimers();
setUpAlert();
setUpPromise();
setUpXHR();
setUpRedBoxConsoleErrorHandler();
setUpGeolocation();
setUpWebSockets();
setupProfile();
});
__d('RCTDebugComponentOwnership',["NativeModules","InspectorUtils","ReactNativeTagHandles"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















var DebugComponentOwnershipModule=require('NativeModules').DebugComponentOwnershipModule;
var InspectorUtils=require('InspectorUtils');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function componentToString(component){
return component.getName?component.getName():'Unknown';}


function getRootTagForTag(tag){
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
if(!rootNodeID){
return null;}

var rootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootNodeID);
if(!rootID){
return null;}

return ReactNativeTagHandles.rootNodeIDToTag[rootID];}


module.exports = {








getOwnerHierarchy:function(requestID, tag){
var rootTag=getRootTagForTag(tag);
var instance=InspectorUtils.findInstanceByNativeTag(rootTag, tag);
var ownerHierarchy=instance?
InspectorUtils.getOwnerHierarchy(instance).map(componentToString):
null;
DebugComponentOwnershipModule.receiveOwnershipHierarchy(requestID, tag, ownerHierarchy);}};
});
__d('NativeModules',["BatchedBridge","nativeModulePrefixNormalizer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('BatchedBridge').RemoteModules;

var nativeModulePrefixNormalizer=require('nativeModulePrefixNormalizer');

nativeModulePrefixNormalizer(NativeModules);

module.exports = NativeModules;
});
__d('BatchedBridge',["MessageQueue"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var MessageQueue=require('MessageQueue');

var BatchedBridge=new MessageQueue(
__fbBatchedBridgeConfig.remoteModuleConfig, 
__fbBatchedBridgeConfig.localModulesConfig);


module.exports = BatchedBridge;
});
__d('MessageQueue',["BridgeProfiling","ErrorUtils","JSTimersExecution","ReactUpdates","invariant","keyMirror","stringifySafe"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _objectWithoutProperties(obj, keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj, i))continue;target[i] = obj[i];}return target;}function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}














var BridgeProfiling=require('BridgeProfiling');
var ErrorUtils=require('ErrorUtils');
var JSTimersExecution=require('JSTimersExecution');
var ReactUpdates=require('ReactUpdates');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var stringifySafe=require('stringifySafe');

var MODULE_IDS=0;
var METHOD_IDS=1;
var PARAMS=2;

var SPY_MODE=false;

var MethodTypes=keyMirror({
local:null, 
remote:null, 
remoteAsync:null});


var guard=function(fn){
try{
fn();}
catch(error) {
ErrorUtils.reportFatalError(error);}};var 



MessageQueue=(function(){

function MessageQueue(remoteModules, localModules, customRequire){var _this=this;_classCallCheck(this, MessageQueue);
this.RemoteModules = {};

this._require = customRequire || require;
this._queue = [[], [], []];
this._moduleTable = {};
this._methodTable = {};
this._callbacks = [];
this._callbackID = 0;

[
'processBatch', 
'invokeCallbackAndReturnFlushedQueue', 
'callFunctionReturnFlushedQueue', 
'flushedQueue'].
forEach(function(fn){return _this[fn] = _this[fn].bind(_this);});

this._genModules(remoteModules);
localModules && this._genLookupTables(
localModules, this._moduleTable, this._methodTable);

if(__DEV__){
this._debugInfo = {};
this._remoteModuleTable = {};
this._remoteMethodTable = {};
this._genLookupTables(
remoteModules, this._remoteModuleTable, this._remoteMethodTable);}}_createClass(MessageQueue, [{key:'processBatch', value:






function processBatch(batch){var _this2=this;
guard(function(){
ReactUpdates.batchedUpdates(function(){
batch.forEach(function(call){
var method=call.method === 'callFunctionReturnFlushedQueue'?
'__callFunction':'__invokeCallback';
guard(function(){return _this2[method].apply(_this2, call.args);});});

BridgeProfiling.profile('ReactUpdates.batchedUpdates()');});

BridgeProfiling.profileEnd();});

return this.flushedQueue();}}, {key:'callFunctionReturnFlushedQueue', value:


function callFunctionReturnFlushedQueue(module, method, args){var _this3=this;
guard(function(){return _this3.__callFunction(module, method, args);});
return this.flushedQueue();}}, {key:'invokeCallbackAndReturnFlushedQueue', value:


function invokeCallbackAndReturnFlushedQueue(cbID, args){var _this4=this;
guard(function(){return _this4.__invokeCallback(cbID, args);});
return this.flushedQueue();}}, {key:'flushedQueue', value:


function flushedQueue(){
BridgeProfiling.profile('JSTimersExecution.callImmediates()');
guard(function(){return JSTimersExecution.callImmediates();});
BridgeProfiling.profileEnd();
var queue=this._queue;
this._queue = [[], [], []];
return queue[0].length?queue:null;}}, {key:'__nativeCall', value:





function __nativeCall(module, method, params, onFail, onSucc){
if(onFail || onSucc){
if(__DEV__){

this._callbackID > 1 << 5 && (
this._debugInfo[this._callbackID >> 5] = null);

this._debugInfo[this._callbackID >> 1] = [module, method];}

onFail && params.push(this._callbackID);
this._callbacks[this._callbackID++] = onFail;
onSucc && params.push(this._callbackID);
this._callbacks[this._callbackID++] = onSucc;}

this._queue[MODULE_IDS].push(module);
this._queue[METHOD_IDS].push(method);
this._queue[PARAMS].push(params);
if(__DEV__ && SPY_MODE && isFinite(module)){
console.log('JS->N : ' + this._remoteModuleTable[module] + '.' + 
this._remoteMethodTable[module][method] + '(' + JSON.stringify(params) + ')');}}}, {key:'__callFunction', value:



function __callFunction(module, method, args){
BridgeProfiling.profile(function(){return module + '.' + method + '(' + stringifySafe(args) + ')';});
if(isFinite(module)){
method = this._methodTable[module][method];
module = this._moduleTable[module];}

if(__DEV__ && SPY_MODE){
console.log('N->JS : ' + module + '.' + method + '(' + JSON.stringify(args) + ')');}

module = this._require(module);
module[method].apply(module, args);
BridgeProfiling.profileEnd();}}, {key:'__invokeCallback', value:


function __invokeCallback(cbID, args){
BridgeProfiling.profile(
function(){return 'MessageQueue.invokeCallback(' + cbID + ', ' + stringifySafe(args) + ')';});
var callback=this._callbacks[cbID];
if(__DEV__){
var debug=this._debugInfo[cbID >> 1];
var _module=debug && this._remoteModuleTable[debug[0]];
var method=debug && this._remoteMethodTable[debug[0]][debug[1]];
if(!callback){
console.error('Callback with id ' + cbID + ': ' + _module + '.' + method + '() not found');}else 
if(SPY_MODE){
console.log('N->JS : <callback for ' + _module + '.' + method + '>(' + JSON.stringify(args) + ')');}}


this._callbacks[cbID & ~1] = null;
this._callbacks[cbID | 1] = null;
callback.apply(null, args);
BridgeProfiling.profileEnd();}}, {key:'_genLookupTables', value:





function _genLookupTables(localModules, moduleTable, methodTable){
var moduleNames=Object.keys(localModules);
for(var i=0, l=moduleNames.length; i < l; i++) {
var moduleName=moduleNames[i];
var methods=localModules[moduleName].methods;
var moduleID=localModules[moduleName].moduleID;
moduleTable[moduleID] = moduleName;
methodTable[moduleID] = {};

var methodNames=Object.keys(methods);
for(var j=0, k=methodNames.length; j < k; j++) {
var methodName=methodNames[j];
var methodConfig=methods[methodName];
methodTable[moduleID][methodConfig.methodID] = methodName;}}}}, {key:'_genModules', value:




function _genModules(remoteModules){
var moduleNames=Object.keys(remoteModules);
for(var i=0, l=moduleNames.length; i < l; i++) {
var moduleName=moduleNames[i];
var moduleConfig=remoteModules[moduleName];
this.RemoteModules[moduleName] = this._genModule({}, moduleConfig);}}}, {key:'_genModule', value:



function _genModule(module, moduleConfig){
var methodNames=Object.keys(moduleConfig.methods);
for(var i=0, l=methodNames.length; i < l; i++) {
var methodName=methodNames[i];
var methodConfig=moduleConfig.methods[methodName];
module[methodName] = this._genMethod(
moduleConfig.moduleID, methodConfig.methodID, methodConfig.type);}

Object.assign(module, moduleConfig.constants);
return module;}}, {key:'_genMethod', value:


function _genMethod(module, method, type){
if(type === MethodTypes.local){
return null;}


var self=this;
if(type === MethodTypes.remoteAsync){
return function(){for(var _len=arguments.length, args=Array(_len), _key=0; _key < _len; _key++) {args[_key] = arguments[_key];}
return new Promise(function(resolve, reject){
self.__nativeCall(module, method, args, resolve, function(errorData){
var error=createErrorFromErrorData(errorData);
reject(error);});});};}else 



{
return function(){for(var _len2=arguments.length, args=Array(_len2), _key2=0; _key2 < _len2; _key2++) {args[_key2] = arguments[_key2];}
var lastArg=args.length > 0?args[args.length - 1]:null;
var secondLastArg=args.length > 1?args[args.length - 2]:null;
var hasSuccCB=typeof lastArg === 'function';
var hasErrorCB=typeof secondLastArg === 'function';
hasErrorCB && invariant(
hasSuccCB, 
'Cannot have a non-function arg after a function arg.');

var numCBs=hasSuccCB + hasErrorCB;
var onSucc=hasSuccCB?lastArg:null;
var onFail=hasErrorCB?secondLastArg:null;
args = args.slice(0, args.length - numCBs);
return self.__nativeCall(module, method, args, onFail, onSucc);};}}}]);return MessageQueue;})();






function createErrorFromErrorData(errorData){var 

message=

errorData.message;var extraErrorInfo=_objectWithoutProperties(errorData, ['message']);
var error=new Error(message);
error.framesToPop = 1;
return Object.assign(error, extraErrorInfo);}


module.exports = MessageQueue;
});
__d('BridgeProfiling',["ReactPerf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var GLOBAL=GLOBAL || this;

var BridgeProfiling={
profile:function(profileName, args){
if(GLOBAL.__BridgeProfilingIsProfiling){
if(args){
try{
args = JSON.stringify(args);}
catch(err) {
args = err.message;}}


profileName = typeof profileName === 'function'?
profileName():profileName;
console.profile(profileName, args);}}, 



profileEnd:function(profileName){
if(GLOBAL.__BridgeProfilingIsProfiling){
console.profileEnd(profileName);}}, 



swizzleReactPerf:function(){
var ReactPerf=require('ReactPerf');
var originalMeasure=ReactPerf.measure;
ReactPerf.measure = function(objName, fnName, func){
func = originalMeasure.call(ReactPerf, objName, fnName, func);
return function(component){
BridgeProfiling.profile();
var ret=func.apply(this, arguments);
if(GLOBAL.__BridgeProfilingIsProfiling){
var name=this._instance && this._instance.constructor && (
this._instance.constructor.displayName || 
this._instance.constructor.name);
BridgeProfiling.profileEnd(objName + '.' + fnName + '(' + name + ')');}

return ret;};};}};





module.exports = BridgeProfiling;
});
__d('ReactPerf',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var ReactPerf={




enableMeasure:false, 





storedMeasure:_noMeasure, 






measureMethods:function(object, objectName, methodNames){
if(__DEV__){
for(var key in methodNames) {
if(!methodNames.hasOwnProperty(key)){
continue;}

object[key] = ReactPerf.measure(
objectName, 
methodNames[key], 
object[key]);}}}, 













measure:function(objName, fnName, func){
if(__DEV__){
var measuredFunc=null;
var wrapper=function(){
if(ReactPerf.enableMeasure){
if(!measuredFunc){
measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);}

return measuredFunc.apply(this, arguments);}

return func.apply(this, arguments);};

wrapper.displayName = objName + '_' + fnName;
return wrapper;}

return func;}, 


injection:{



injectMeasure:function(measure){
ReactPerf.storedMeasure = measure;}}};












function _noMeasure(objName, fnName, func){
return func;}


module.exports = ReactPerf;
});
__d('ErrorUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











GLOBAL=this;













module.exports = GLOBAL.ErrorUtils;
});
__d('JSTimersExecution',["invariant","keyMirror","performanceNow","warning","JSTimers","JSTimers"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var invariant=require('invariant');
var keyMirror=require('keyMirror');
var performanceNow=require('performanceNow');
var warning=require('warning');






var JSTimersExecution={
GUID:1, 
Type:keyMirror({
setTimeout:null, 
setInterval:null, 
requestAnimationFrame:null, 
setImmediate:null}), 



callbacks:[], 
types:[], 
timerIDs:[], 
immediates:[], 






callTimer:function(timerID){
warning(timerID <= JSTimersExecution.GUID, 'Tried to call timer with ID ' + timerID + ' but no such timer exists');
var timerIndex=JSTimersExecution.timerIDs.indexOf(timerID);





if(timerIndex === -1){
return;}

var type=JSTimersExecution.types[timerIndex];
var callback=JSTimersExecution.callbacks[timerIndex];


if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setImmediate || 
type === JSTimersExecution.Type.requestAnimationFrame){
JSTimersExecution._clearIndex(timerIndex);}


try{
if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setInterval || 
type === JSTimersExecution.Type.setImmediate){
callback();}else 
if(type === JSTimersExecution.Type.requestAnimationFrame){
var currentTime=performanceNow();
callback(currentTime);}else 
{
console.error('Tried to call a callback with invalid type: ' + type);
return;}}

catch(e) {

JSTimersExecution.errors = JSTimersExecution.errors || [];
JSTimersExecution.errors.push(e);}}, 







callTimers:function(timerIDs){
invariant(timerIDs.length !== 0, 'Probably shouldn\'t call "callTimers" with no timerIDs');

JSTimersExecution.errors = null;
timerIDs.forEach(JSTimersExecution.callTimer);

var errors=JSTimersExecution.errors;
if(errors){
var errorCount=errors.length;
if(errorCount > 1){


for(var ii=1; ii < errorCount; ii++) {
require('JSTimers').setTimeout(
(function(error){throw error;}).bind(null, errors[ii]), 
0);}}



throw errors[0];}}, 







callImmediates:function(){
JSTimersExecution.errors = null;
while(JSTimersExecution.immediates.length !== 0) {
JSTimersExecution.callTimer(JSTimersExecution.immediates.shift());}

if(JSTimersExecution.errors){
JSTimersExecution.errors.forEach(function(error){return (
require('JSTimers').setTimeout(function(){throw error;}, 0));});}}, 




_clearIndex:function(i){
JSTimersExecution.timerIDs[i] = null;
JSTimersExecution.callbacks[i] = null;
JSTimersExecution.types[i] = null;}};



module.exports = JSTimersExecution;
});
__d('performanceNow',["performance"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











performance=require('performance');






if(!performance || !performance.now){
performance = Date;}


var performanceNow=performance.now.bind(performance);

module.exports = performanceNow;
});
__d('performance',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";













var ExecutionEnvironment=require("ExecutionEnvironment");

var performance;

if(ExecutionEnvironment.canUseDOM){
performance = 
window.performance || 
window.msPerformance || 
window.webkitPerformance;}


module.exports = performance || {};
});
__d('ExecutionEnvironment',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";























var canUseDOM=false;







var ExecutionEnvironment={

canUseDOM:canUseDOM, 

canUseWorkers:typeof Worker !== "undefined", 

canUseEventListeners:
canUseDOM && !!(window.addEventListener || window.attachEvent), 

canUseViewport:canUseDOM && !!window.screen, 

isInWorker:!canUseDOM};



module.exports = ExecutionEnvironment;
});
__d('JSTimers',["NativeModules","JSTimersExecution"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var RCTTiming=require('NativeModules').Timing;
var JSTimersExecution=require('JSTimersExecution');






var JSTimers={
Types:JSTimersExecution.Types, 





_getFreeIndex:function(){
var freeIndex=JSTimersExecution.timerIDs.indexOf(null);
if(freeIndex === -1){
freeIndex = JSTimersExecution.timerIDs.length;}

return freeIndex;}, 






setTimeout:function(func, duration){for(var _len=arguments.length, args=Array(_len > 2?_len - 2:0), _key=2; _key < _len; _key++) {args[_key - 2] = arguments[_key];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined, args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setTimeout;
RCTTiming.createTimer(newID, duration, Date.now(), false);
return newID;}, 






setInterval:function(func, duration){for(var _len2=arguments.length, args=Array(_len2 > 2?_len2 - 2:0), _key2=2; _key2 < _len2; _key2++) {args[_key2 - 2] = arguments[_key2];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined, args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setInterval;
RCTTiming.createTimer(newID, duration, Date.now(), true);
return newID;}, 






setImmediate:function(func){for(var _len3=arguments.length, args=Array(_len3 > 1?_len3 - 1:0), _key3=1; _key3 < _len3; _key3++) {args[_key3 - 1] = arguments[_key3];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined, args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setImmediate;
JSTimersExecution.immediates.push(newID);
return newID;}, 





requestAnimationFrame:function(func){
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = func;
JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.requestAnimationFrame;
RCTTiming.createTimer(newID, 1, Date.now(), false);
return newID;}, 


clearTimeout:function(timerID){
JSTimers._clearTimerID(timerID);}, 


clearInterval:function(timerID){
JSTimers._clearTimerID(timerID);}, 


clearImmediate:function(timerID){
JSTimers._clearTimerID(timerID);
JSTimersExecution.immediates.splice(
JSTimersExecution.immediates.indexOf(timerID), 
1);}, 



cancelAnimationFrame:function(timerID){
JSTimers._clearTimerID(timerID);}, 


_clearTimerID:function(timerID){


if(timerID == null){
return;}


var index=JSTimersExecution.timerIDs.indexOf(timerID);

if(index !== -1){
JSTimersExecution._clearIndex(index);
if(JSTimersExecution.types[index] !== JSTimersExecution.Type.setImmediate){
RCTTiming.deleteTimer(timerID);}}}};





module.exports = JSTimers;
});
__d('ReactUpdates',["CallbackQueue","PooledClass","ReactPerf","ReactReconciler","Transaction","Object.assign","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var invariant=require('invariant');

var dirtyComponents=[];
var asapCallbackQueue=CallbackQueue.getPooled();
var asapEnqueued=false;

var batchingStrategy=null;

function ensureInjected(){
invariant(
ReactUpdates.ReactReconcileTransaction && batchingStrategy, 
'ReactUpdates: must inject a reconcile transaction class and batching ' + 
'strategy');}



var NESTED_UPDATES={
initialize:function(){
this.dirtyComponentsLength = dirtyComponents.length;}, 

close:function(){
if(this.dirtyComponentsLength !== dirtyComponents.length){





dirtyComponents.splice(0, this.dirtyComponentsLength);
flushBatchedUpdates();}else 
{
dirtyComponents.length = 0;}}};




var UPDATE_QUEUEING={
initialize:function(){
this.callbackQueue.reset();}, 

close:function(){
this.callbackQueue.notifyAll();}};



var TRANSACTION_WRAPPERS=[NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction(){
this.reinitializeTransaction();
this.dirtyComponentsLength = null;
this.callbackQueue = CallbackQueue.getPooled();
this.reconcileTransaction = 
ReactUpdates.ReactReconcileTransaction.getPooled();}


assign(
ReactUpdatesFlushTransaction.prototype, 
Transaction.Mixin, {
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;}, 


destructor:function(){
this.dirtyComponentsLength = null;
CallbackQueue.release(this.callbackQueue);
this.callbackQueue = null;
ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
this.reconcileTransaction = null;}, 


perform:function(method, scope, a){


return Transaction.Mixin.perform.call(
this, 
this.reconcileTransaction.perform, 
this.reconcileTransaction, 
method, 
scope, 
a);}});




PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e){
ensureInjected();
batchingStrategy.batchedUpdates(callback, a, b, c, d, e);}









function mountOrderComparator(c1, c2){
return c1._mountOrder - c2._mountOrder;}


function runBatchedUpdates(transaction){
var len=transaction.dirtyComponentsLength;
invariant(
len === dirtyComponents.length, 
'Expected flush transaction\'s stored dirty-components length (%s) to ' + 
'match dirty-components array length (%s).', 
len, 
dirtyComponents.length);





dirtyComponents.sort(mountOrderComparator);

for(var i=0; i < len; i++) {



var component=dirtyComponents[i];




var callbacks=component._pendingCallbacks;
component._pendingCallbacks = null;

ReactReconciler.performUpdateIfNecessary(
component, 
transaction.reconcileTransaction);


if(callbacks){
for(var j=0; j < callbacks.length; j++) {
transaction.callbackQueue.enqueue(
callbacks[j], 
component.getPublicInstance());}}}}






var flushBatchedUpdates=function(){




while(dirtyComponents.length || asapEnqueued) {
if(dirtyComponents.length){
var transaction=ReactUpdatesFlushTransaction.getPooled();
transaction.perform(runBatchedUpdates, null, transaction);
ReactUpdatesFlushTransaction.release(transaction);}


if(asapEnqueued){
asapEnqueued = false;
var queue=asapCallbackQueue;
asapCallbackQueue = CallbackQueue.getPooled();
queue.notifyAll();
CallbackQueue.release(queue);}}};



flushBatchedUpdates = ReactPerf.measure(
'ReactUpdates', 
'flushBatchedUpdates', 
flushBatchedUpdates);






function enqueueUpdate(component){
ensureInjected();







if(!batchingStrategy.isBatchingUpdates){
batchingStrategy.batchedUpdates(enqueueUpdate, component);
return;}


dirtyComponents.push(component);}






function asap(callback, context){
invariant(
batchingStrategy.isBatchingUpdates, 
'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 
'updates are not being batched.');

asapCallbackQueue.enqueue(callback, context);
asapEnqueued = true;}


var ReactUpdatesInjection={
injectReconcileTransaction:function(ReconcileTransaction){
invariant(
ReconcileTransaction, 
'ReactUpdates: must provide a reconcile transaction class');

ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;}, 


injectBatchingStrategy:function(_batchingStrategy){
invariant(
_batchingStrategy, 
'ReactUpdates: must provide a batching strategy');

invariant(
typeof _batchingStrategy.batchedUpdates === 'function', 
'ReactUpdates: must provide a batchedUpdates() function');

invariant(
typeof _batchingStrategy.isBatchingUpdates === 'boolean', 
'ReactUpdates: must provide an isBatchingUpdates boolean attribute');

batchingStrategy = _batchingStrategy;}};



var ReactUpdates={






ReactReconcileTransaction:null, 

batchedUpdates:batchedUpdates, 
enqueueUpdate:enqueueUpdate, 
flushBatchedUpdates:flushBatchedUpdates, 
injection:ReactUpdatesInjection, 
asap:asap};


module.exports = ReactUpdates;
});
__d('CallbackQueue',["PooledClass","Object.assign","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var invariant=require('invariant');












function CallbackQueue(){
this._callbacks = null;
this._contexts = null;}


assign(CallbackQueue.prototype, {








enqueue:function(callback, context){
this._callbacks = this._callbacks || [];
this._contexts = this._contexts || [];
this._callbacks.push(callback);
this._contexts.push(context);}, 








notifyAll:function(){
var callbacks=this._callbacks;
var contexts=this._contexts;
if(callbacks){
invariant(
callbacks.length === contexts.length, 
'Mismatched list of contexts in callback queue');

this._callbacks = null;
this._contexts = null;
for(var i=0; i < callbacks.length; i++) {
callbacks[i].call(contexts[i]);}

callbacks.length = 0;
contexts.length = 0;}}, 








reset:function(){
this._callbacks = null;
this._contexts = null;}, 





destructor:function(){
this.reset();}});




PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;
});
__d('ReactReconciler',["ReactRef"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactRef=require('ReactRef');





function attachRefs(){
ReactRef.attachRefs(this, this._currentElement);}


var ReactReconciler={











mountComponent:function(internalInstance, rootID, transaction, context){
var markup=internalInstance.mountComponent(rootID, transaction, context);
if(internalInstance._currentElement.ref != null){
transaction.getReactMountReady().enqueue(attachRefs, internalInstance);}

return markup;}, 








unmountComponent:function(internalInstance){
ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
internalInstance.unmountComponent();}, 











receiveComponent:function(
internalInstance, nextElement, transaction, context)
{
var prevElement=internalInstance._currentElement;
if(nextElement === prevElement && 
nextElement._owner != null)

{










return;}


var refsChanged=ReactRef.shouldUpdateRefs(
prevElement, 
nextElement);


if(refsChanged){
ReactRef.detachRefs(internalInstance, prevElement);}


internalInstance.receiveComponent(nextElement, transaction, context);

if(refsChanged){
transaction.getReactMountReady().enqueue(attachRefs, internalInstance);}}, 










performUpdateIfNecessary:function(
internalInstance, 
transaction)
{
internalInstance.performUpdateIfNecessary(transaction);}};




module.exports = ReactReconciler;
});
__d('ReactRef',["ReactOwner"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactOwner=require('ReactOwner');

var ReactRef={};

function attachRef(ref, component, owner){
if(typeof ref === 'function'){
ref(component.getPublicInstance());}else 
{

ReactOwner.addComponentAsRefTo(component, ref, owner);}}



function detachRef(ref, component, owner){
if(typeof ref === 'function'){
ref(null);}else 
{

ReactOwner.removeComponentAsRefFrom(component, ref, owner);}}



ReactRef.attachRefs = function(instance, element){
var ref=element.ref;
if(ref != null){
attachRef(ref, instance, element._owner);}};



ReactRef.shouldUpdateRefs = function(prevElement, nextElement){












return (
nextElement._owner !== prevElement._owner || 
nextElement.ref !== prevElement.ref);};



ReactRef.detachRefs = function(instance, element){
var ref=element.ref;
if(ref != null){
detachRef(ref, instance, element._owner);}};



module.exports = ReactRef;
});
__d('ReactOwner',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');































var ReactOwner={






isValidOwner:function(object){
return !!(
object && 
typeof object.attachRef === 'function' && 
typeof object.detachRef === 'function');}, 












addComponentAsRefTo:function(component, ref, owner){
invariant(
ReactOwner.isValidOwner(owner), 
'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to add a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');

owner.attachRef(ref, component);}, 











removeComponentAsRefFrom:function(component, ref, owner){
invariant(
ReactOwner.isValidOwner(owner), 
'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to remove a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');



if(owner.getPublicInstance().refs[ref] === component.getPublicInstance()){
owner.detachRef(ref);}}};





module.exports = ReactOwner;
});
__d('Transaction',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');






























































var Mixin={







reinitializeTransaction:function(){
this.transactionWrappers = this.getTransactionWrappers();
if(!this.wrapperInitData){
this.wrapperInitData = [];}else 
{
this.wrapperInitData.length = 0;}

this._isInTransaction = false;}, 


_isInTransaction:false, 





getTransactionWrappers:null, 

isInTransaction:function(){
return !!this._isInTransaction;}, 



















perform:function(method, scope, a, b, c, d, e, f){
invariant(
!this.isInTransaction(), 
'Transaction.perform(...): Cannot initialize a transaction when there ' + 
'is already an outstanding transaction.');

var errorThrown;
var ret;
try{
this._isInTransaction = true;




errorThrown = true;
this.initializeAll(0);
ret = method.call(scope, a, b, c, d, e, f);
errorThrown = false;}finally 
{
try{
if(errorThrown){


try{
this.closeAll(0);}
catch(err) {}}else 

{


this.closeAll(0);}}finally 

{
this._isInTransaction = false;}}


return ret;}, 


initializeAll:function(startIndex){
var transactionWrappers=this.transactionWrappers;
for(var i=startIndex; i < transactionWrappers.length; i++) {
var wrapper=transactionWrappers[i];
try{




this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
this.wrapperInitData[i] = wrapper.initialize?
wrapper.initialize.call(this):
null;}finally 
{
if(this.wrapperInitData[i] === Transaction.OBSERVED_ERROR){



try{
this.initializeAll(i + 1);}
catch(err) {}}}}}, 












closeAll:function(startIndex){
invariant(
this.isInTransaction(), 
'Transaction.closeAll(): Cannot close transaction when none are open.');

var transactionWrappers=this.transactionWrappers;
for(var i=startIndex; i < transactionWrappers.length; i++) {
var wrapper=transactionWrappers[i];
var initData=this.wrapperInitData[i];
var errorThrown;
try{




errorThrown = true;
if(initData !== Transaction.OBSERVED_ERROR && wrapper.close){
wrapper.close.call(this, initData);}

errorThrown = false;}finally 
{
if(errorThrown){



try{
this.closeAll(i + 1);}
catch(e) {}}}}




this.wrapperInitData.length = 0;}};



var Transaction={

Mixin:Mixin, 




OBSERVED_ERROR:{}};



module.exports = Transaction;
});
__d('stringifySafe',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















function stringifySafe(arg){
var ret;
var type=typeof arg;
if(arg === undefined){
ret = 'undefined';}else 
if(arg === null){
ret = 'null';}else 
if(type === 'string'){
ret = '"' + arg + '"';}else 
if(type === 'function'){
try{
ret = arg.toString();}
catch(e) {
ret = '[function unknown]';}}else 

{


try{
ret = JSON.stringify(arg);}
catch(e) {
if(typeof arg.toString === 'function'){
try{
ret = arg.toString();}
catch(E) {}}}}



return ret || '["' + type + '" failed to stringify]';}


module.exports = stringifySafe;
});
__d('nativeModulePrefixNormalizer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













function nativeModulePrefixNormalizer(
modules)
{
Object.keys(modules).forEach(function(moduleName){
var strippedName=moduleName.replace(/^(RCT|RK)/, '');
if(modules['RCT' + strippedName] && modules['RK' + strippedName]){
throw new Error(
'Module cannot be registered as both RCT and RK: ' + moduleName);}


if(strippedName !== moduleName){
modules[strippedName] = modules[moduleName];
delete modules[moduleName];}});}




module.exports = nativeModulePrefixNormalizer;
});
__d('InspectorUtils',["ReactInstanceHandles","ReactInstanceMap","ReactNativeMount","ReactNativeTagHandles"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function traverseOwnerTreeUp(hierarchy, instance){
if(instance){
hierarchy.unshift(instance);
traverseOwnerTreeUp(hierarchy, instance._currentElement._owner);}}



function findInstance(component, targetID){
if(targetID === findRootNodeID(component)){
return component;}

if(component._renderedComponent){
return findInstance(component._renderedComponent, targetID);}else 
{
for(var key in component._renderedChildren) {
var child=component._renderedChildren[key];
if(ReactInstanceHandles.isAncestorIDOf(findRootNodeID(child), targetID)){
var instance=findInstance(child, targetID);
if(instance){
return instance;}}}}}






function findRootNodeID(component){
var internalInstance=ReactInstanceMap.get(component);
return internalInstance?internalInstance._rootNodeID:component._rootNodeID;}


function findInstanceByNativeTag(rootTag, nativeTag){
var containerID=ReactNativeTagHandles.tagToRootNodeID[rootTag];
var rootInstance=ReactNativeMount._instancesByContainerID[containerID];
var targetID=ReactNativeTagHandles.tagToRootNodeID[nativeTag];
if(!targetID){
return undefined;}

return findInstance(rootInstance, targetID);}


function getOwnerHierarchy(instance){
var hierarchy=[];
traverseOwnerTreeUp(hierarchy, instance);
return hierarchy;}


module.exports = {findInstanceByNativeTag:findInstanceByNativeTag, getOwnerHierarchy:getOwnerHierarchy};
});
__d('ReactInstanceMap',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var ReactInstanceMap={






remove:function(key){
key._reactInternalInstance = undefined;}, 


get:function(key){
return key._reactInternalInstance;}, 


has:function(key){
return key._reactInternalInstance !== undefined;}, 


set:function(key, value){
key._reactInternalInstance = value;}};




module.exports = ReactInstanceMap;
});
__d('ReactNativeMount',["NativeModules","ReactElement","ReactNativeTagHandles","ReactPerf","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","instantiateReactComponent","shouldUpdateReactComponent","findNodeHandle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTUIManager=require('NativeModules').UIManager;

var ReactElement=require('ReactElement');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var emptyObject=require('emptyObject');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');

function instanceNumberToChildRootID(rootNodeID, instanceNumber){
return rootNodeID + '[' + instanceNumber + ']';}







var TopLevelWrapper=function(){};
TopLevelWrapper.prototype.render = function(){

return this.props;};










function mountComponentIntoNode(
componentInstance, 
rootID, 
container, 
transaction){
var markup=ReactReconciler.mountComponent(
componentInstance, rootID, transaction, emptyObject);

componentInstance._renderedComponent._topLevelWrapper = componentInstance;
ReactNativeMount._mountImageIntoNode(markup, container);}









function batchedMountComponentIntoNode(
componentInstance, 
rootID, 
container){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode, 
null, 
componentInstance, 
rootID, 
container, 
transaction);

ReactUpdates.ReactReconcileTransaction.release(transaction);}






var ReactNativeMount={
instanceCount:0, 

_instancesByContainerID:{}, 


findNodeHandle:require('findNodeHandle'), 
nativeTagToRootNodeID:function(nativeTag){
return ReactNativeTagHandles.tagToRootNodeID[nativeTag];}, 






renderComponent:function(
nextElement, 
containerTag, 
callback)
{
var nextWrappedElement=new ReactElement(
TopLevelWrapper, 
null, 
null, 
null, 
nextElement);


var topRootNodeID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
if(topRootNodeID){
var prevComponent=ReactNativeMount._instancesByContainerID[topRootNodeID];
if(prevComponent){
var prevWrappedElement=prevComponent._currentElement;
var prevElement=prevWrappedElement.props;
if(shouldUpdateReactComponent(prevElement, nextElement)){
ReactUpdateQueue.enqueueElementInternal(prevComponent, nextWrappedElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);}

return prevComponent;}else 
{
ReactNativeMount.unmountComponentAtNode(containerTag);}}}




if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return;}


var topRootNodeID=ReactNativeTagHandles.allocateRootNodeIDForTag(containerTag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
topRootNodeID, 
containerTag);


var instance=instantiateReactComponent(nextWrappedElement);
ReactNativeMount._instancesByContainerID[topRootNodeID] = instance;

var childRootNodeID=instanceNumberToChildRootID(
topRootNodeID, 
ReactNativeMount.instanceCount++);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode, 
instance, 
childRootNodeID, 
topRootNodeID);

var component=instance.getPublicInstance();
if(callback){
callback.call(component);}

return component;}, 






_mountImageIntoNode:ReactPerf.measure(

'ReactComponentBrowserEnvironment', 
'mountImageIntoNode', 
function(mountImage, containerID){


ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
mountImage.rootNodeID, 
mountImage.tag);

var addChildTags=[mountImage.tag];
var addAtIndices=[0];
RCTUIManager.manageChildren(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID), 
null, 
null, 
addChildTags, 
addAtIndices, 
null);}), 












unmountComponentAtNodeAndRemoveContainer:function(
containerTag)
{
ReactNativeMount.unmountComponentAtNode(containerTag);

RCTUIManager.removeRootView(containerTag);}, 







unmountComponentAtNode:function(containerTag){
if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return false;}


var containerID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
var instance=ReactNativeMount._instancesByContainerID[containerID];
if(!instance){
return false;}

ReactNativeMount.unmountComponentFromNode(instance, containerID);
delete ReactNativeMount._instancesByContainerID[containerID];
return true;}, 











unmountComponentFromNode:function(
instance, 
containerID)
{

ReactReconciler.unmountComponent(instance);
var containerTag=
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID);
RCTUIManager.removeSubviewsFromContainerWithID(containerTag);}, 


getNode:function(id){
return id;}, 


getID:function(id){
return id;}};



ReactNativeMount.renderComponent = ReactPerf.measure(
'ReactMount', 
'_renderNewRootComponent', 
ReactNativeMount.renderComponent);


module.exports = ReactNativeMount;
});
__d('ReactNativeTagHandles',["invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');
var warning=require('warning');














var INITIAL_TAG_COUNT=1;
var NATIVE_TOP_ROOT_ID_SEPARATOR='{TOP_LEVEL}';
var ReactNativeTagHandles={
tagsStartAt:INITIAL_TAG_COUNT, 
tagCount:INITIAL_TAG_COUNT, 

allocateTag:function(){

while(this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount)) {
ReactNativeTagHandles.tagCount++;}

var tag=ReactNativeTagHandles.tagCount;
ReactNativeTagHandles.tagCount++;
return tag;}, 











associateRootNodeIDWithMountedNodeHandle:function(
rootNodeID, 
tag)
{
warning(rootNodeID && tag, 'Root node or tag is null when associating');
if(rootNodeID && tag){
ReactNativeTagHandles.tagToRootNodeID[tag] = rootNodeID;
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID] = tag;}}, 



allocateRootNodeIDForTag:function(tag){
invariant(
this.reactTagIsNativeTopRootID(tag), 
'Expect a native root tag, instead got ', tag);

return '.r[' + tag + ']' + NATIVE_TOP_ROOT_ID_SEPARATOR;}, 


reactTagIsNativeTopRootID:function(reactTag){

return reactTag % 10 === 1;}, 


getNativeTopRootIDFromNodeID:function(nodeID){
if(!nodeID){
return null;}

var index=nodeID.indexOf(NATIVE_TOP_ROOT_ID_SEPARATOR);
if(index === -1){
return null;}

return nodeID.substr(0, index + NATIVE_TOP_ROOT_ID_SEPARATOR.length);}, 














mostRecentMountedNodeHandleForRootNodeID:function(
rootNodeID)
{
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];}, 


tagToRootNodeID:[], 

rootNodeIDToTag:{}};


module.exports = ReactNativeTagHandles;
});
__d('ReactUpdateQueue',["ReactCurrentOwner","ReactElement","ReactInstanceMap","ReactUpdates","Object.assign","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');

function enqueueUpdate(internalInstance){
ReactUpdates.enqueueUpdate(internalInstance);}


function getInternalInstanceReadyForUpdate(publicInstance, callerName){
if(__DEV__){
warning(
ReactCurrentOwner.current == null, 
'%s(...): Cannot update during an existing state transition ' + 
'(such as within `render`). Render methods should be a pure function ' + 
'of props and state.', 
callerName);}



var internalInstance=ReactInstanceMap.get(publicInstance);
if(!internalInstance){
if(__DEV__){



warning(
!callerName, 
'%s(...): Can only update a mounted or mounting component. ' + 
'This usually means you called %s() on an unmounted component. ' + 
'This is a no-op. Please check the code for the %s component.', 
callerName, 
callerName, 
publicInstance.constructor.displayName);}


return null;}


return internalInstance;}






var ReactUpdateQueue={








isMounted:function(publicInstance){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender, 
'%s is accessing isMounted inside its render() function. ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.', 
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


var internalInstance=ReactInstanceMap.get(publicInstance);
if(internalInstance){



return !!internalInstance._renderedComponent;}else 
{
return false;}}, 











enqueueCallback:function(publicInstance, callback){
invariant(
typeof callback === 'function', 
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

var internalInstance=getInternalInstanceReadyForUpdate(publicInstance);






if(!internalInstance){
return null;}


if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}





enqueueUpdate(internalInstance);}, 


enqueueCallbackInternal:function(internalInstance, callback){
invariant(
typeof callback === 'function', 
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}

enqueueUpdate(internalInstance);}, 















enqueueForceUpdate:function(publicInstance){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance, 
'forceUpdate');


if(!internalInstance){
return;}


internalInstance._pendingForceUpdate = true;

enqueueUpdate(internalInstance);}, 













enqueueReplaceState:function(publicInstance, completeState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance, 
'replaceState');


if(!internalInstance){
return;}


internalInstance._pendingStateQueue = [completeState];
internalInstance._pendingReplaceState = true;

enqueueUpdate(internalInstance);}, 












enqueueSetState:function(publicInstance, partialState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance, 
'setState');


if(!internalInstance){
return;}


var queue=
internalInstance._pendingStateQueue || (
internalInstance._pendingStateQueue = []);
queue.push(partialState);

enqueueUpdate(internalInstance);}, 









enqueueSetProps:function(publicInstance, partialProps){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance, 
'setProps');

if(!internalInstance){
return;}

ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);}, 


enqueueSetPropsInternal:function(internalInstance, partialProps){
var topLevelWrapper=internalInstance._topLevelWrapper;
invariant(
topLevelWrapper, 
'setProps(...): You called `setProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var wrapElement=topLevelWrapper._pendingElement || 
topLevelWrapper._currentElement;
var element=wrapElement.props;
var props=assign({}, element.props, partialProps);
topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(
wrapElement, 
ReactElement.cloneAndReplaceProps(element, props));


enqueueUpdate(topLevelWrapper);}, 









enqueueReplaceProps:function(publicInstance, props){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance, 
'replaceProps');

if(!internalInstance){
return;}

ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);}, 


enqueueReplacePropsInternal:function(internalInstance, props){
var topLevelWrapper=internalInstance._topLevelWrapper;
invariant(
topLevelWrapper, 
'replaceProps(...): You called `replaceProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var wrapElement=topLevelWrapper._pendingElement || 
topLevelWrapper._currentElement;
var element=wrapElement.props;
topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(
wrapElement, 
ReactElement.cloneAndReplaceProps(element, props));


enqueueUpdate(topLevelWrapper);}, 


enqueueElementInternal:function(internalInstance, newElement){
internalInstance._pendingElement = newElement;
enqueueUpdate(internalInstance);}};




module.exports = ReactUpdateQueue;
});
__d('instantiateReactComponent',["ReactCompositeComponent","ReactEmptyComponent","ReactNativeComponent","Object.assign","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactNativeComponent=require('ReactNativeComponent');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');


var ReactCompositeComponentWrapper=function(){};
assign(
ReactCompositeComponentWrapper.prototype, 
ReactCompositeComponent.Mixin, 
{
_instantiateReactComponent:instantiateReactComponent});



function getDeclarationErrorAddendum(owner){
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}









function isInternalComponentType(type){
return (
typeof type === 'function' && 
typeof type.prototype !== 'undefined' && 
typeof type.prototype.mountComponent === 'function' && 
typeof type.prototype.receiveComponent === 'function');}










function instantiateReactComponent(node){
var instance;

if(node === null || node === false){
node = ReactEmptyComponent.emptyElement;}


if(typeof node === 'object'){
var element=node;
invariant(
element && (typeof element.type === 'function' || 
typeof element.type === 'string'), 
'Element type is invalid: expected a string (for built-in components) ' + 
'or a class/function (for composite components) but got: %s.%s', 
element.type == null?element.type:typeof element.type, 
getDeclarationErrorAddendum(element._owner));



if(typeof element.type === 'string'){
instance = ReactNativeComponent.createInternalComponent(element);}else 
if(isInternalComponentType(element.type)){



instance = new element.type(element);}else 
{
instance = new ReactCompositeComponentWrapper();}}else 

if(typeof node === 'string' || typeof node === 'number'){
instance = ReactNativeComponent.createInstanceForText(node);}else 
{
invariant(
false, 
'Encountered invalid React node of type %s', 
typeof node);}



if(__DEV__){
warning(
typeof instance.construct === 'function' && 
typeof instance.mountComponent === 'function' && 
typeof instance.receiveComponent === 'function' && 
typeof instance.unmountComponent === 'function', 
'Only React Components can be mounted.');}




instance.construct(node);




instance._mountIndex = 0;
instance._mountImage = null;

if(__DEV__){
instance._isOwnerNecessary = false;
instance._warnedAboutRefsInRender = false;}




if(__DEV__){
if(Object.preventExtensions){
Object.preventExtensions(instance);}}



return instance;}


module.exports = instantiateReactComponent;
});
__d('ReactCompositeComponent',["ReactComponentEnvironment","ReactCurrentOwner","ReactElement","ReactInstanceMap","ReactPerf","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactReconciler","ReactUpdateQueue","Object.assign","emptyObject","invariant","shouldUpdateReactComponent","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactPerf=require('ReactPerf');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var warning=require('warning');

function getDeclarationErrorAddendum(component){
var owner=component._currentElement._owner || null;
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}



































var nextMountID=1;




var ReactCompositeComponentMixin={








construct:function(element){
this._currentElement = element;
this._rootNodeID = null;
this._instance = null;


this._pendingElement = null;
this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

this._renderedComponent = null;

this._context = null;
this._mountOrder = 0;
this._topLevelWrapper = null;


this._pendingCallbacks = null;}, 











mountComponent:function(rootID, transaction, context){
this._context = context;
this._mountOrder = nextMountID++;
this._rootNodeID = rootID;

var publicProps=this._processProps(this._currentElement.props);
var publicContext=this._processContext(context);

var Component=this._currentElement.type;


var inst=new Component(publicProps, publicContext, ReactUpdateQueue);

if(__DEV__){


warning(
inst.render != null, 
'%s(...): No `render` method found on the returned component ' + 
'instance: you may have forgotten to define `render` in your ' + 
'component or you may have accidentally tried to render an element ' + 
'whose type is a function that isn\'t a React component.', 
Component.displayName || Component.name || 'Component');}





inst.props = publicProps;
inst.context = publicContext;
inst.refs = emptyObject;
inst.updater = ReactUpdateQueue;

this._instance = inst;


ReactInstanceMap.set(inst, this);

if(__DEV__){



warning(
!inst.getInitialState || 
inst.getInitialState.isReactClassApproved, 
'getInitialState was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Did you mean to define a state property instead?', 
this.getName() || 'a component');

warning(
!inst.getDefaultProps || 
inst.getDefaultProps.isReactClassApproved, 
'getDefaultProps was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Use a static property to define defaultProps instead.', 
this.getName() || 'a component');

warning(
!inst.propTypes, 
'propTypes was defined as an instance property on %s. Use a static ' + 
'property to define propTypes instead.', 
this.getName() || 'a component');

warning(
!inst.contextTypes, 
'contextTypes was defined as an instance property on %s. Use a ' + 
'static property to define contextTypes instead.', 
this.getName() || 'a component');

warning(
typeof inst.componentShouldUpdate !== 'function', 
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.', 
this.getName() || 'A component');

warning(
typeof inst.componentDidUnmount !== 'function', 
'%s has a method called ' + 
'componentDidUnmount(). But there is no such lifecycle method. ' + 
'Did you mean componentWillUnmount()?', 
this.getName() || 'A component');

warning(
typeof inst.componentWillRecieveProps !== 'function', 
'%s has a method called ' + 
'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', 
this.getName() || 'A component');}



var initialState=inst.state;
if(initialState === undefined){
inst.state = initialState = null;}

invariant(
typeof initialState === 'object' && !Array.isArray(initialState), 
'%s.state: must be set to an object or null', 
this.getName() || 'ReactCompositeComponent');


this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

if(inst.componentWillMount){
inst.componentWillMount();


if(this._pendingStateQueue){
inst.state = this._processPendingState(inst.props, inst.context);}}



var renderedElement=this._renderValidatedComponent();

this._renderedComponent = this._instantiateReactComponent(
renderedElement);


var markup=ReactReconciler.mountComponent(
this._renderedComponent, 
rootID, 
transaction, 
this._processChildContext(context));

if(inst.componentDidMount){
transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);}


return markup;}, 








unmountComponent:function(){
var inst=this._instance;

if(inst.componentWillUnmount){
inst.componentWillUnmount();}


ReactReconciler.unmountComponent(this._renderedComponent);
this._renderedComponent = null;




this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;
this._pendingCallbacks = null;
this._pendingElement = null;



this._context = null;
this._rootNodeID = null;
this._topLevelWrapper = null;




ReactInstanceMap.remove(inst);}, 
















_maskContext:function(context){
var maskedContext=null;
var Component=this._currentElement.type;
var contextTypes=Component.contextTypes;
if(!contextTypes){
return emptyObject;}

maskedContext = {};
for(var contextName in contextTypes) {
maskedContext[contextName] = context[contextName];}

return maskedContext;}, 










_processContext:function(context){
var maskedContext=this._maskContext(context);
if(__DEV__){
var Component=this._currentElement.type;
if(Component.contextTypes){
this._checkPropTypes(
Component.contextTypes, 
maskedContext, 
ReactPropTypeLocations.context);}}



return maskedContext;}, 







_processChildContext:function(currentContext){
var Component=this._currentElement.type;
var inst=this._instance;
var childContext=inst.getChildContext && inst.getChildContext();
if(childContext){
invariant(
typeof Component.childContextTypes === 'object', 
'%s.getChildContext(): childContextTypes must be defined in order to ' + 
'use getChildContext().', 
this.getName() || 'ReactCompositeComponent');

if(__DEV__){
this._checkPropTypes(
Component.childContextTypes, 
childContext, 
ReactPropTypeLocations.childContext);}


for(var name in childContext) {
invariant(
name in Component.childContextTypes, 
'%s.getChildContext(): key "%s" is not defined in childContextTypes.', 
this.getName() || 'ReactCompositeComponent', 
name);}


return assign({}, currentContext, childContext);}

return currentContext;}, 











_processProps:function(newProps){
if(__DEV__){
var Component=this._currentElement.type;
if(Component.propTypes){
this._checkPropTypes(
Component.propTypes, 
newProps, 
ReactPropTypeLocations.prop);}}



return newProps;}, 










_checkPropTypes:function(propTypes, props, location){


var componentName=this.getName();
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;
try{


invariant(
typeof propTypes[propName] === 'function', 
'%s: %s type `%s` is invalid; it must be a function, usually ' + 
'from React.PropTypes.', 
componentName || 'React class', 
ReactPropTypeLocationNames[location], 
propName);

error = propTypes[propName](props, propName, componentName, location);}
catch(ex) {
error = ex;}

if(error instanceof Error){



var addendum=getDeclarationErrorAddendum(this);

if(location === ReactPropTypeLocations.prop){

warning(
false, 
'Failed Composite propType: %s%s', 
error.message, 
addendum);}else 

{
warning(
false, 
'Failed Context Types: %s%s', 
error.message, 
addendum);}}}}}, 







receiveComponent:function(nextElement, transaction, nextContext){
var prevElement=this._currentElement;
var prevContext=this._context;

this._pendingElement = null;

this.updateComponent(
transaction, 
prevElement, 
nextElement, 
prevContext, 
nextContext);}, 










performUpdateIfNecessary:function(transaction){
if(this._pendingElement != null){
ReactReconciler.receiveComponent(
this, 
this._pendingElement || this._currentElement, 
transaction, 
this._context);}



if(this._pendingStateQueue !== null || this._pendingForceUpdate){
this.updateComponent(
transaction, 
this._currentElement, 
this._currentElement, 
this._context, 
this._context);}}, 



















updateComponent:function(
transaction, 
prevParentElement, 
nextParentElement, 
prevUnmaskedContext, 
nextUnmaskedContext)
{
var inst=this._instance;

var nextContext=this._context === nextUnmaskedContext?
inst.context:
this._processContext(nextUnmaskedContext);
var nextProps;


if(prevParentElement === nextParentElement){


nextProps = nextParentElement.props;}else 
{
nextProps = this._processProps(nextParentElement.props);




if(inst.componentWillReceiveProps){
inst.componentWillReceiveProps(nextProps, nextContext);}}



var nextState=this._processPendingState(nextProps, nextContext);

var shouldUpdate=
this._pendingForceUpdate || 
!inst.shouldComponentUpdate || 
inst.shouldComponentUpdate(nextProps, nextState, nextContext);

if(__DEV__){
warning(
typeof shouldUpdate !== 'undefined', 
'%s.shouldComponentUpdate(): Returned undefined instead of a ' + 
'boolean value. Make sure to return true or false.', 
this.getName() || 'ReactCompositeComponent');}



if(shouldUpdate){
this._pendingForceUpdate = false;

this._performComponentUpdate(
nextParentElement, 
nextProps, 
nextState, 
nextContext, 
transaction, 
nextUnmaskedContext);}else 

{


this._currentElement = nextParentElement;
this._context = nextUnmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;}}, 



_processPendingState:function(props, context){
var inst=this._instance;
var queue=this._pendingStateQueue;
var replace=this._pendingReplaceState;
this._pendingReplaceState = false;
this._pendingStateQueue = null;

if(!queue){
return inst.state;}


if(replace && queue.length === 1){
return queue[0];}


var nextState=assign({}, replace?queue[0]:inst.state);
for(var i=replace?1:0; i < queue.length; i++) {
var partial=queue[i];
assign(
nextState, 
typeof partial === 'function'?
partial.call(inst, nextState, props, context):
partial);}



return nextState;}, 














_performComponentUpdate:function(
nextElement, 
nextProps, 
nextState, 
nextContext, 
transaction, 
unmaskedContext)
{
var inst=this._instance;

var hasComponentDidUpdate=Boolean(inst.componentDidUpdate);
var prevProps;
var prevState;
var prevContext;
if(hasComponentDidUpdate){
prevProps = inst.props;
prevState = inst.state;
prevContext = inst.context;}


if(inst.componentWillUpdate){
inst.componentWillUpdate(nextProps, nextState, nextContext);}


this._currentElement = nextElement;
this._context = unmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;

this._updateRenderedComponent(transaction, unmaskedContext);

if(hasComponentDidUpdate){
transaction.getReactMountReady().enqueue(
inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), 
inst);}}, 










_updateRenderedComponent:function(transaction, context){
var prevComponentInstance=this._renderedComponent;
var prevRenderedElement=prevComponentInstance._currentElement;
var nextRenderedElement=this._renderValidatedComponent();
if(shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)){
ReactReconciler.receiveComponent(
prevComponentInstance, 
nextRenderedElement, 
transaction, 
this._processChildContext(context));}else 

{

var thisID=this._rootNodeID;
var prevComponentID=prevComponentInstance._rootNodeID;
ReactReconciler.unmountComponent(prevComponentInstance);

this._renderedComponent = this._instantiateReactComponent(
nextRenderedElement);

var nextMarkup=ReactReconciler.mountComponent(
this._renderedComponent, 
thisID, 
transaction, 
this._processChildContext(context));

this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);}}, 






_replaceNodeWithMarkupByID:function(prevComponentID, nextMarkup){
ReactComponentEnvironment.replaceNodeWithMarkupByID(
prevComponentID, 
nextMarkup);}, 






_renderValidatedComponentWithoutOwnerOrContext:function(){
var inst=this._instance;
var renderedComponent=inst.render();
if(__DEV__){

if(typeof renderedComponent === 'undefined' && 
inst.render._isMockFunction){


renderedComponent = null;}}



return renderedComponent;}, 





_renderValidatedComponent:function(){
var renderedComponent;
ReactCurrentOwner.current = this;
try{
renderedComponent = 
this._renderValidatedComponentWithoutOwnerOrContext();}finally 
{
ReactCurrentOwner.current = null;}

invariant(

renderedComponent === null || renderedComponent === false || 
ReactElement.isValidElement(renderedComponent), 
'%s.render(): A valid ReactComponent must be returned. You may have ' + 
'returned undefined, an array or some other invalid object.', 
this.getName() || 'ReactCompositeComponent');

return renderedComponent;}, 










attachRef:function(ref, component){
var inst=this.getPublicInstance();
var refs=inst.refs === emptyObject?inst.refs = {}:inst.refs;
refs[ref] = component.getPublicInstance();}, 









detachRef:function(ref){
var refs=this.getPublicInstance().refs;
delete refs[ref];}, 








getName:function(){
var type=this._currentElement.type;
var constructor=this._instance && this._instance.constructor;
return (
type.displayName || constructor && constructor.displayName || 
type.name || constructor && constructor.name || 
null);}, 











getPublicInstance:function(){
return this._instance;}, 



_instantiateReactComponent:null};



ReactPerf.measureMethods(
ReactCompositeComponentMixin, 
'ReactCompositeComponent', 
{
mountComponent:'mountComponent', 
updateComponent:'updateComponent', 
_renderValidatedComponent:'_renderValidatedComponent'});



var ReactCompositeComponent={

Mixin:ReactCompositeComponentMixin};



module.exports = ReactCompositeComponent;
});
__d('ReactComponentEnvironment',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');

var injected=false;

var ReactComponentEnvironment={






unmountIDFromEnvironment:null, 





replaceNodeWithMarkupByID:null, 





processChildrenUpdates:null, 

injection:{
injectEnvironment:function(environment){
invariant(
!injected, 
'ReactCompositeComponent: injectEnvironment() can only be called once.');

ReactComponentEnvironment.unmountIDFromEnvironment = 
environment.unmountIDFromEnvironment;
ReactComponentEnvironment.replaceNodeWithMarkupByID = 
environment.replaceNodeWithMarkupByID;
ReactComponentEnvironment.processChildrenUpdates = 
environment.processChildrenUpdates;
injected = true;}}};





module.exports = ReactComponentEnvironment;
});
__d('shouldUpdateReactComponent',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
























function shouldUpdateReactComponent(prevElement, nextElement){
if(prevElement != null && nextElement != null){
var prevType=typeof prevElement;
var nextType=typeof nextElement;
if(prevType === 'string' || prevType === 'number'){
return nextType === 'string' || nextType === 'number';}else 
{
return (
nextType === 'object' && 
prevElement.type === nextElement.type && 
prevElement.key === nextElement.key);}}



return false;}


module.exports = shouldUpdateReactComponent;
});
__d('ReactEmptyComponent',["ReactElement","ReactInstanceMap","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');

var invariant=require('invariant');

var component;


var nullComponentIDsRegistry={};

var ReactEmptyComponentInjection={
injectEmptyComponent:function(emptyComponent){
component = ReactElement.createFactory(emptyComponent);}};



var ReactEmptyComponentType=function(){};
ReactEmptyComponentType.prototype.componentDidMount = function(){
var internalInstance=ReactInstanceMap.get(this);




if(!internalInstance){
return;}

registerNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.componentWillUnmount = function(){
var internalInstance=ReactInstanceMap.get(this);

if(!internalInstance){
return;}

deregisterNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.render = function(){
invariant(
component, 
'Trying to return null from a render, but no null placeholder component ' + 
'was injected.');

return component();};


var emptyElement=ReactElement.createElement(ReactEmptyComponentType);





function registerNullComponentID(id){
nullComponentIDsRegistry[id] = true;}






function deregisterNullComponentID(id){
delete nullComponentIDsRegistry[id];}






function isNullComponentID(id){
return !!nullComponentIDsRegistry[id];}


var ReactEmptyComponent={
emptyElement:emptyElement, 
injection:ReactEmptyComponentInjection, 
isNullComponentID:isNullComponentID};


module.exports = ReactEmptyComponent;
});
__d('ReactNativeComponent',["Object.assign","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var invariant=require('invariant');

var autoGenerateWrapperClass=null;
var genericComponentClass=null;

var tagToComponentClass={};
var textComponentClass=null;

var ReactNativeComponentInjection={


injectGenericComponentClass:function(componentClass){
genericComponentClass = componentClass;}, 



injectTextComponentClass:function(componentClass){
textComponentClass = componentClass;}, 



injectComponentClasses:function(componentClasses){
assign(tagToComponentClass, componentClasses);}};









function getComponentClassForElement(element){
if(typeof element.type === 'function'){
return element.type;}

var tag=element.type;
var componentClass=tagToComponentClass[tag];
if(componentClass == null){
tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);}

return componentClass;}








function createInternalComponent(element){
invariant(
genericComponentClass, 
'There is no registered component for the tag %s', 
element.type);

return new genericComponentClass(element.type, element.props);}






function createInstanceForText(text){
return new textComponentClass(text);}






function isTextComponent(component){
return component instanceof textComponentClass;}


var ReactNativeComponent={
getComponentClassForElement:getComponentClassForElement, 
createInternalComponent:createInternalComponent, 
createInstanceForText:createInstanceForText, 
isTextComponent:isTextComponent, 
injection:ReactNativeComponentInjection};


module.exports = ReactNativeComponent;
});
__d('findNodeHandle',["ReactCurrentOwner","ReactInstanceMap","ReactNativeTagHandles","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');
var warning=require('warning');































function findNodeHandle(componentOrHandle){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender, 
'%s is accessing findNodeHandle inside its render(). ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.', 
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


if(componentOrHandle == null){
return null;}

if(typeof componentOrHandle === 'number'){

return componentOrHandle;}


var component=componentOrHandle;



var internalInstance=ReactInstanceMap.get(component);
if(internalInstance){
return ReactNativeTagHandles.rootNodeIDToTag[internalInstance._rootNodeID];}else 
{
var rootNodeID=component._rootNodeID;
if(rootNodeID){
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];}else 
{
invariant(


typeof component === 'object' && 
'_rootNodeID' in component || 


component.render != null && 
typeof component.render === 'function', 

'findNodeHandle(...): Argument is not a component ' + 
'(type: %s, keys: %s)', 
typeof component, 
Object.keys(component));

invariant(
false, 
'findNodeHandle(...): Unable to find node handle for unmounted ' + 
'component.');}}}





module.exports = findNodeHandle;
});
__d('RCTDeviceEventEmitter',["EventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTDeviceEventEmitter=new EventEmitter();

module.exports = RCTDeviceEventEmitter;
});
__d('EventEmitter',["EmitterSubscription","ErrorUtils","EventSubscriptionVendor","emptyFunction","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var EmitterSubscription=require('EmitterSubscription');
var ErrorUtils=require('ErrorUtils');
var EventSubscriptionVendor=require('EventSubscriptionVendor');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 














EventEmitter=(function(){



function EventEmitter(){_classCallCheck(this, EventEmitter);
this._subscriber = new EventSubscriptionVendor();}_createClass(EventEmitter, [{key:'addListener', value:
















function addListener(
eventType, listener, context){
return this._subscriber.addSubscription(
eventType, 
new EmitterSubscription(this._subscriber, listener, context));}}, {key:'once', value:












function once(eventType, listener, context){
var emitter=this;
return this.addListener(eventType, function(){
emitter.removeCurrentListener();
listener.apply(context, arguments);});}}, {key:'removeAllListeners', value:










function removeAllListeners(eventType){
this._subscriber.removeAllSubscriptions(eventType);}}, {key:'removeCurrentListener', value:























function removeCurrentListener(){
invariant(
!!this._currentSubscription, 
'Not in an emitting cycle; there is no current subscription');

this._subscriber.removeSubscription(this._currentSubscription);}}, {key:'listeners', value:









function listeners(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
return subscriptions?
subscriptions.filter(emptyFunction.thatReturnsTrue).map(
function(subscription){
return subscription.listener;}):

[];}}, {key:'emit', value:
















function emit(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
if(subscriptions){
var keys=Object.keys(subscriptions);
for(var ii=0; ii < keys.length; ii++) {
var key=keys[ii];
var subscription=subscriptions[key];


if(subscription){
this._currentSubscription = subscription;

ErrorUtils.applyWithGuard(
subscription.listener, 
subscription.context, 
Array.prototype.slice.call(arguments, 1), 
null, 
'EventEmitter:' + eventType);}}



this._currentSubscription = null;}}}]);return EventEmitter;})();




module.exports = EventEmitter;
});
__d('EmitterSubscription',["EventSubscription"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _get=function get(object, property, receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object, property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent, property, receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}


















var EventSubscription=require('EventSubscription');var 




EmitterSubscription=(function(_EventSubscription){









function EmitterSubscription(subscriber, listener, context){_classCallCheck(this, EmitterSubscription);
_get(Object.getPrototypeOf(EmitterSubscription.prototype), 'constructor', this).call(this, subscriber);
this.listener = listener;
this.context = context;}_inherits(EmitterSubscription, _EventSubscription);return EmitterSubscription;})(EventSubscription);



module.exports = EmitterSubscription;
});
__d('EventSubscription',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






















EventSubscription=(function(){





function EventSubscription(subscriber){_classCallCheck(this, EventSubscription);
this.subscriber = subscriber;}_createClass(EventSubscription, [{key:'remove', value:





function remove(){
this.subscriber.removeSubscription(this);}}]);return EventSubscription;})();



module.exports = EventSubscription;
});
__d('EventSubscriptionVendor',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 





EventSubscriptionVendor=(function(){

function EventSubscriptionVendor(){_classCallCheck(this, EventSubscriptionVendor);
this._subscriptionsForType = {};
this._currentSubscription = null;}_createClass(EventSubscriptionVendor, [{key:'addSubscription', value:








function addSubscription(
eventType, subscription){
invariant(
subscription.subscriber === this, 
'The subscriber of the subscription is incorrectly set.');
if(!this._subscriptionsForType[eventType]){
this._subscriptionsForType[eventType] = [];}

var key=this._subscriptionsForType[eventType].length;
this._subscriptionsForType[eventType].push(subscription);
subscription.eventType = eventType;
subscription.key = key;
return subscription;}}, {key:'removeAllSubscriptions', value:








function removeAllSubscriptions(eventType){
if(eventType === undefined){
this._subscriptionsForType = {};}else 
{
delete this._subscriptionsForType[eventType];}}}, {key:'removeSubscription', value:









function removeSubscription(subscription){
var eventType=subscription.eventType;
var key=subscription.key;

var subscriptionsForType=this._subscriptionsForType[eventType];
if(subscriptionsForType){
delete subscriptionsForType[key];}}}, {key:'getSubscriptionsForType', value:















function getSubscriptionsForType(eventType){
return this._subscriptionsForType[eventType];}}]);return EventSubscriptionVendor;})();



module.exports = EventSubscriptionVendor;
});
__d('PerformanceLogger',["performanceNow"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var performanceNow=require('performanceNow');

var timespans={};





var PerformanceLogger={
addTimespan:function(key, lengthInMs, description){
if(timespans[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to add a timespan that already exists ', 
key);}


return;}


timespans[key] = {
description:description, 
totalTime:lengthInMs};}, 



startTimespan:function(key, description){
if(timespans[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to start a timespan that already exists ', 
key);}


return;}


timespans[key] = {
description:description, 
startTime:performanceNow()};}, 



stopTimespan:function(key){
if(!timespans[key] || !timespans[key].startTime){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to end a timespan that has not started ', 
key);}


return;}


timespans[key].endTime = performanceNow();
timespans[key].totalTime = 
timespans[key].endTime - timespans[key].startTime;}, 


clearTimespans:function(){
timespans = {};}, 


getTimespans:function(){
return timespans;}, 


hasTimespan:function(key){
return !!timespans[key];}, 


logTimespans:function(){
for(var key in timespans) {
console.log(key + ': ' + timespans[key].totalTime + 'ms');}}, 



addTimespans:function(newTimespans, labels){
for(var i=0, l=newTimespans.length; i < l; i += 2) {
var label=labels[i / 2];
PerformanceLogger.addTimespan(
label, 
newTimespans[i + 1] - newTimespans[i], 
label);}}};





module.exports = PerformanceLogger;
});
__d('ExceptionsManager',["NativeModules","loadSourceMap","parseErrorStack","stringifySafe"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTExceptionsManager=require('NativeModules').ExceptionsManager;

var loadSourceMap=require('loadSourceMap');
var parseErrorStack=require('parseErrorStack');
var stringifySafe=require('stringifySafe');

var sourceMapPromise;







var exceptionID=0;

function reportException(e, isFatal, stack){
var currentExceptionID=++exceptionID;
if(RCTExceptionsManager){
if(!stack){
stack = parseErrorStack(e);}

if(isFatal){
RCTExceptionsManager.reportFatalException(e.message, stack, currentExceptionID);}else 
{
RCTExceptionsManager.reportSoftException(e.message, stack);}

if(__DEV__){
(sourceMapPromise = sourceMapPromise || loadSourceMap()).
then(function(map){
var prettyStack=parseErrorStack(e, map);
RCTExceptionsManager.updateExceptionMessage(e.message, prettyStack, currentExceptionID);}).

catch(function(error){


console.warn('Unable to load source map: ' + error.message);});}}}





function handleException(e, isFatal){
var stack=parseErrorStack(e);
var msg=
'Error: ' + e.message + 
'\n stack: \n' + stackToString(stack) + 
'\n URL: ' + e.sourceURL + 
'\n line: ' + e.line + 
'\n message: ' + e.message;
if(console.errorOriginal){
console.errorOriginal(msg);}else 
{
console.error(msg);}

reportException(e, isFatal, stack);}






function installConsoleErrorReporter(){
if(console.reportException){
return;}

console.reportException = reportException;
console.errorOriginal = console.error.bind(console);
console.error = function reactConsoleError(){
console.errorOriginal.apply(null, arguments);
if(!console.reportErrorsAsExceptions){
return;}

var str=Array.prototype.map.call(arguments, stringifySafe).join(', ');
if(str.slice(0, 10) === '"Warning: '){


return;}

var error=new Error('console.error: ' + str);
error.framesToPop = 1;
reportException(error, false);};

if(console.reportErrorsAsExceptions === undefined){
console.reportErrorsAsExceptions = true;}}



function stackToString(stack){
var maxLength=Math.max.apply(null, stack.map(function(frame){return frame.methodName.length;}));
return stack.map(function(frame){return stackFrameToString(frame, maxLength);}).join('\n');}


function stackFrameToString(stackFrame, maxLength){
var fileNameParts=stackFrame.file.split('/');
var fileName=fileNameParts[fileNameParts.length - 1];

if(fileName.length > 18){
fileName = fileName.substr(0, 17) + '…';}


var spaces=fillSpaces(maxLength - stackFrame.methodName.length);
return '  ' + stackFrame.methodName + spaces + '  ' + fileName + ':' + stackFrame.lineNumber;}


function fillSpaces(n){
return new Array(n + 1).join(' ');}


module.exports = {handleException:handleException, installConsoleErrorReporter:installConsoleErrorReporter};
});
__d('loadSourceMap',["Promise","NativeModules","SourceMap","react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var Promise=require('Promise');
var NativeModules=require('NativeModules');
var SourceMapConsumer=require('SourceMap').SourceMapConsumer;
var SourceMapURL=require('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js');

var RCTSourceCode=NativeModules.SourceCode;
var RCTNetworking=NativeModules.Networking;

function loadSourceMap(){
return fetchSourceMap().
then(function(map){return new SourceMapConsumer(map);});}


function fetchSourceMap(){
if(global.RAW_SOURCE_MAP){
return Promise.resolve(global.RAW_SOURCE_MAP);}


if(!RCTSourceCode){
return Promise.reject(new Error('RCTSourceCode module is not available'));}


if(!RCTNetworking){

return Promise.reject(new Error('RCTNetworking module is not available'));}


return new Promise(RCTSourceCode.getScriptText).
then(extractSourceMapURL).
then(function(url){
if(url === null){
return Promise.reject(new Error('No source map URL found. May be running from bundled file.'));}

return Promise.resolve(url);}).

then(fetch).
then(function(response){return response.text();});}


function extractSourceMapURL(_ref){var url=_ref.url;var text=_ref.text;var fullSourceMappingURL=_ref.fullSourceMappingURL;
if(fullSourceMappingURL){
return fullSourceMappingURL;}

var mapURL=SourceMapURL.getFrom(text);
if(!mapURL){
return null;}

var baseURL=url.match(/(.+:\/\/.*?)\//)[1];
return baseURL + mapURL;}


module.exports = loadSourceMap;
});
__d('Promise',["setImmediate","promise/setimmediate/es6-extensions.js","promise/setimmediate/done.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';























global.setImmediate = require('setImmediate');
var Promise=require('promise/setimmediate/es6-extensions.js');
require('promise/setimmediate/done.js');




Promise.prototype.finally = function(onSettled){
return this.then(onSettled, onSettled);};



module.exports = Promise;
});
__d('setImmediate',["ImmediateImplementation"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.
















exports = global.setImmediate || 
require('ImmediateImplementation').setImmediate;
});
__d('ImmediateImplementation',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (







































function(global, undefined){
"use strict";

var nextHandle=1;
var tasksByHandle={};
var queueHead={};
var queueTail=queueHead;
var currentlyRunningATask=false;
var doc=global.document;
var setImmediate;

function addFromSetImmediateArguments(args){
var handler=args[0];
args = Array.prototype.slice.call(args, 1);
tasksByHandle[nextHandle] = function(){
handler.apply(undefined, args);};

queueTail = queueTail.next = {handle:nextHandle++};
return queueTail.handle;}


function flushQueue(){
var next, task;
while(!currentlyRunningATask && (next = queueHead.next)) {
queueHead = next;
if(task = tasksByHandle[next.handle]){
currentlyRunningATask = true;
try{
task();
currentlyRunningATask = false;}finally 
{
clearImmediate(next.handle);
if(currentlyRunningATask){
currentlyRunningATask = false;






if(queueHead.next){
setImmediate(flushQueue);}}}}}}







function clearImmediate(handle){
delete tasksByHandle[handle];}


function canUsePostMessage(){


if(global.postMessage && !global.importScripts){
var postMessageIsAsynchronous=true;

var onMessage=function(){
postMessageIsAsynchronous = false;
if(global.removeEventListener){
global.removeEventListener("message", onMessage, false);}else 
{
global.detachEvent("onmessage", onMessage);}};



if(global.addEventListener){
global.addEventListener("message", onMessage, false);}else 
if(global.attachEvent){
global.attachEvent("onmessage", onMessage);}else 
{
return false;}


global.postMessage("", "*");
return postMessageIsAsynchronous;}}



function installPostMessageImplementation(){


var messagePrefix="setImmediate$" + Math.random() + "$";
var onGlobalMessage=function(event){
if(event.source === global && 
typeof event.data === "string" && 
event.data.indexOf(messagePrefix) === 0){
flushQueue();}};



if(global.addEventListener){
global.addEventListener("message", onGlobalMessage, false);}else 
{
global.attachEvent("onmessage", onGlobalMessage);}


setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
global.postMessage(messagePrefix + handle, "*");
return handle;};}



function installMessageChannelImplementation(){
var channel=new MessageChannel();
channel.port1.onmessage = flushQueue;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
channel.port2.postMessage(handle);
return handle;};}



function installReadyStateChangeImplementation(){
var html=doc.documentElement;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);


var script=doc.createElement("script");
script.onreadystatechange = function(){
script.onreadystatechange = null;
html.removeChild(script);
script = null;
flushQueue();};

html.appendChild(script);
return handle;};}



function installSetTimeoutImplementation(){
setImmediate = function(){
setTimeout(flushQueue, 0);
return addFromSetImmediateArguments(arguments);};}



if(canUsePostMessage()){

installPostMessageImplementation();}else 

if(global.MessageChannel){

installMessageChannelImplementation();}else 

if(doc && "onreadystatechange" in doc.createElement("script")){

installReadyStateChangeImplementation();}else 

{

installSetTimeoutImplementation();}


exports.setImmediate = setImmediate;
exports.clearImmediate = clearImmediate;})(
Function("return this")());
});
__d('promise/setimmediate/es6-extensions.js',["promise/setimmediate/core.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



var Promise=require('promise/setimmediate/core.js');

module.exports = Promise;



var TRUE=valuePromise(true);
var FALSE=valuePromise(false);
var NULL=valuePromise(null);
var UNDEFINED=valuePromise(undefined);
var ZERO=valuePromise(0);
var EMPTYSTRING=valuePromise('');

function valuePromise(value){
var p=new Promise(Promise._99);
p._37 = 1;
p._12 = value;
return p;}

Promise.resolve = function(value){
if(value instanceof Promise)return value;

if(value === null)return NULL;
if(value === undefined)return UNDEFINED;
if(value === true)return TRUE;
if(value === false)return FALSE;
if(value === 0)return ZERO;
if(value === '')return EMPTYSTRING;

if(typeof value === 'object' || typeof value === 'function'){
try{
var then=value.then;
if(typeof then === 'function'){
return new Promise(then.bind(value));}}

catch(ex) {
return new Promise(function(resolve, reject){
reject(ex);});}}



return valuePromise(value);};


Promise.all = function(arr){
var args=Array.prototype.slice.call(arr);

return new Promise(function(resolve, reject){
if(args.length === 0)return resolve([]);
var remaining=args.length;
function res(i, val){
if(val && (typeof val === 'object' || typeof val === 'function')){
if(val instanceof Promise && val.then === Promise.prototype.then){
while(val._37 === 3) {
val = val._12;}

if(val._37 === 1)return res(i, val._12);
if(val._37 === 2)reject(val._12);
val.then(function(val){
res(i, val);}, 
reject);
return;}else 
{
var then=val.then;
if(typeof then === 'function'){
var p=new Promise(then.bind(val));
p.then(function(val){
res(i, val);}, 
reject);
return;}}}



args[i] = val;
if(--remaining === 0){
resolve(args);}}


for(var i=0; i < args.length; i++) {
res(i, args[i]);}});};




Promise.reject = function(value){
return new Promise(function(resolve, reject){
reject(value);});};



Promise.race = function(values){
return new Promise(function(resolve, reject){
values.forEach(function(value){
Promise.resolve(value).then(resolve, reject);});});};






Promise.prototype['catch'] = function(onRejected){
return this.then(null, onRejected);};
});
__d('promise/setimmediate/core.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



function noop(){}


















var LAST_ERROR=null;
var IS_ERROR={};
function getThen(obj){
try{
return obj.then;}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}



function tryCallOne(fn, a){
try{
return fn(a);}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}


function tryCallTwo(fn, a, b){
try{
fn(a, b);}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}



module.exports = Promise;

function Promise(fn){
if(typeof this !== 'object'){
throw new TypeError('Promises must be constructed via new');}

if(typeof fn !== 'function'){
throw new TypeError('not a function');}

this._37 = 0;
this._12 = null;
this._59 = [];
if(fn === noop)return;
doResolve(fn, this);}

Promise._99 = noop;

Promise.prototype.then = function(onFulfilled, onRejected){
if(this.constructor !== Promise){
return safeThen(this, onFulfilled, onRejected);}

var res=new Promise(noop);
handle(this, new Handler(onFulfilled, onRejected, res));
return res;};


function safeThen(self, onFulfilled, onRejected){
return new self.constructor(function(resolve, reject){
var res=new Promise(noop);
res.then(resolve, reject);
handle(self, new Handler(onFulfilled, onRejected, res));});}

;
function handle(self, deferred){
while(self._37 === 3) {
self = self._12;}

if(self._37 === 0){
self._59.push(deferred);
return;}

setImmediate(function(){
var cb=self._37 === 1?deferred.onFulfilled:deferred.onRejected;
if(cb === null){
if(self._37 === 1){
resolve(deferred.promise, self._12);}else 
{
reject(deferred.promise, self._12);}

return;}

var ret=tryCallOne(cb, self._12);
if(ret === IS_ERROR){
reject(deferred.promise, LAST_ERROR);}else 
{
resolve(deferred.promise, ret);}});}



function resolve(self, newValue){

if(newValue === self){
return reject(
self, 
new TypeError('A promise cannot be resolved with itself.'));}


if(
newValue && (
typeof newValue === 'object' || typeof newValue === 'function'))
{
var then=getThen(newValue);
if(then === IS_ERROR){
return reject(self, LAST_ERROR);}

if(
then === self.then && 
newValue instanceof Promise)
{
self._37 = 3;
self._12 = newValue;
finale(self);
return;}else 
if(typeof then === 'function'){
doResolve(then.bind(newValue), self);
return;}}


self._37 = 1;
self._12 = newValue;
finale(self);}


function reject(self, newValue){
self._37 = 2;
self._12 = newValue;
finale(self);}

function finale(self){
for(var i=0; i < self._59.length; i++) {
handle(self, self._59[i]);}

self._59 = null;}


function Handler(onFulfilled, onRejected, promise){
this.onFulfilled = typeof onFulfilled === 'function'?onFulfilled:null;
this.onRejected = typeof onRejected === 'function'?onRejected:null;
this.promise = promise;}








function doResolve(fn, promise){
var done=false;
var res=tryCallTwo(fn, function(value){
if(done)return;
done = true;
resolve(promise, value);}, 
function(reason){
if(done)return;
done = true;
reject(promise, reason);});

if(!done && res === IS_ERROR){
done = true;
reject(promise, LAST_ERROR);}}
});
__d('promise/setimmediate/done.js',["promise/setimmediate/core.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var Promise=require('promise/setimmediate/core.js');

module.exports = Promise;
Promise.prototype.done = function(onFulfilled, onRejected){
var self=arguments.length?this.then.apply(this, arguments):this;
self.then(null, function(err){
setTimeout(function(){
throw err;}, 
0);});};
});
__d('SourceMap',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 























scope={};
wrapper.call(scope);

module.exports = scope.sourceMap;

function wrapper(){














function define(moduleName, deps, payload){
if(typeof moduleName != "string"){
throw new TypeError("Expected string, got: " + moduleName);}


if(arguments.length == 2){
payload = deps;}


if(moduleName in define.modules){
throw new Error("Module already defined: " + moduleName);}

define.modules[moduleName] = payload;}
;




define.modules = {};










function Domain(){
this.modules = {};
this._currentModule = null;}


(function(){
















Domain.prototype.require = function(deps, callback){
if(Array.isArray(deps)){
var params=deps.map(function(dep){
return this.lookup(dep);}, 
this);
if(callback){
callback.apply(null, params);}

return undefined;}else 

{
return this.lookup(deps);}};



function normalize(path){
var bits=path.split("/");
var i=1;
while(i < bits.length) {
if(bits[i] === ".."){
bits.splice(i - 1, 1);}else 
if(bits[i] === "."){
bits.splice(i, 1);}else 
{
i++;}}


return bits.join("/");}


function join(a, b){
a = a.trim();
b = b.trim();
if(/^\//.test(b)){
return b;}else 
{
return a.replace(/\/*$/, "/") + b;}}



function dirname(path){
var bits=path.split("/");
bits.pop();
return bits.join("/");}








Domain.prototype.lookup = function(moduleName){
if(/^\./.test(moduleName)){
moduleName = normalize(join(dirname(this._currentModule), moduleName));}


if(moduleName in this.modules){
var module=this.modules[moduleName];
return module;}


if(!(moduleName in define.modules)){
throw new Error("Module not defined: " + moduleName);}


var module=define.modules[moduleName];

if(typeof module == "function"){
var exports={};
var previousModule=this._currentModule;
this._currentModule = moduleName;
module(this.require.bind(this), exports, {id:moduleName, uri:""});
this._currentModule = previousModule;
module = exports;}



this.modules[moduleName] = module;

return module;};})();




define.Domain = Domain;
define.globalDomain = new Domain();
var require=define.globalDomain.require.bind(define.globalDomain);






define("source-map/source-map-generator", ["require", "exports", "module", "source-map/base64-vlq", "source-map/util", "source-map/array-set"], function(require, exports, module){

var base64VLQ=require("./base64-vlq");
var util=require("./util");
var ArraySet=require("./array-set").ArraySet;









function SourceMapGenerator(aArgs){
this._file = util.getArg(aArgs, "file");
this._sourceRoot = util.getArg(aArgs, "sourceRoot", null);
this._sources = new ArraySet();
this._names = new ArraySet();
this._mappings = [];
this._sourcesContents = null;}


SourceMapGenerator.prototype._version = 3;






SourceMapGenerator.fromSourceMap = 
function SourceMapGenerator_fromSourceMap(aSourceMapConsumer){
var sourceRoot=aSourceMapConsumer.sourceRoot;
var generator=new SourceMapGenerator({
file:aSourceMapConsumer.file, 
sourceRoot:sourceRoot});

aSourceMapConsumer.eachMapping(function(mapping){
var newMapping={
generated:{
line:mapping.generatedLine, 
column:mapping.generatedColumn}};



if(mapping.source){
newMapping.source = mapping.source;
if(sourceRoot){
newMapping.source = util.relative(sourceRoot, newMapping.source);}


newMapping.original = {
line:mapping.originalLine, 
column:mapping.originalColumn};


if(mapping.name){
newMapping.name = mapping.name;}}



generator.addMapping(newMapping);});

aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
generator.setSourceContent(sourceFile, content);}});


return generator;};












SourceMapGenerator.prototype.addMapping = 
function SourceMapGenerator_addMapping(aArgs){
var generated=util.getArg(aArgs, "generated");
var original=util.getArg(aArgs, "original", null);
var source=util.getArg(aArgs, "source", null);
var name=util.getArg(aArgs, "name", null);

this._validateMapping(generated, original, source, name);

if(source && !this._sources.has(source)){
this._sources.add(source);}


if(name && !this._names.has(name)){
this._names.add(name);}


this._mappings.push({
generatedLine:generated.line, 
generatedColumn:generated.column, 
originalLine:original != null && original.line, 
originalColumn:original != null && original.column, 
source:source, 
name:name});};






SourceMapGenerator.prototype.setSourceContent = 
function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent){
var source=aSourceFile;
if(this._sourceRoot){
source = util.relative(this._sourceRoot, source);}


if(aSourceContent !== null){


if(!this._sourcesContents){
this._sourcesContents = {};}

this._sourcesContents[util.toSetString(source)] = aSourceContent;}else 
{


delete this._sourcesContents[util.toSetString(source)];
if(Object.keys(this._sourcesContents).length === 0){
this._sourcesContents = null;}}};














SourceMapGenerator.prototype.applySourceMap = 
function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile){

if(!aSourceFile){
aSourceFile = aSourceMapConsumer.file;}

var sourceRoot=this._sourceRoot;

if(sourceRoot){
aSourceFile = util.relative(sourceRoot, aSourceFile);}



var newSources=new ArraySet();
var newNames=new ArraySet();


this._mappings.forEach(function(mapping){
if(mapping.source === aSourceFile && mapping.originalLine){

var original=aSourceMapConsumer.originalPositionFor({
line:mapping.originalLine, 
column:mapping.originalColumn});

if(original.source !== null){

if(sourceRoot){
mapping.source = util.relative(sourceRoot, original.source);}else 
{
mapping.source = original.source;}

mapping.originalLine = original.line;
mapping.originalColumn = original.column;
if(original.name !== null && mapping.name !== null){


mapping.name = original.name;}}}




var source=mapping.source;
if(source && !newSources.has(source)){
newSources.add(source);}


var name=mapping.name;
if(name && !newNames.has(name)){
newNames.add(name);}}, 


this);
this._sources = newSources;
this._names = newNames;


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
if(sourceRoot){
sourceFile = util.relative(sourceRoot, sourceFile);}

this.setSourceContent(sourceFile, content);}}, 

this);};













SourceMapGenerator.prototype._validateMapping = 
function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource, 
aName){
if(aGenerated && "line" in aGenerated && "column" in aGenerated && 
aGenerated.line > 0 && aGenerated.column >= 0 && 
!aOriginal && !aSource && !aName){

return;}else 

if(aGenerated && "line" in aGenerated && "column" in aGenerated && 
aOriginal && "line" in aOriginal && "column" in aOriginal && 
aGenerated.line > 0 && aGenerated.column >= 0 && 
aOriginal.line > 0 && aOriginal.column >= 0 && 
aSource){

return;}else 

{
throw new Error("Invalid mapping: " + JSON.stringify({
generated:aGenerated, 
source:aSource, 
orginal:aOriginal, 
name:aName}));}};








SourceMapGenerator.prototype._serializeMappings = 
function SourceMapGenerator_serializeMappings(){
var previousGeneratedColumn=0;
var previousGeneratedLine=1;
var previousOriginalColumn=0;
var previousOriginalLine=0;
var previousName=0;
var previousSource=0;
var result="";
var mapping;






this._mappings.sort(util.compareByGeneratedPositions);

for(var i=0, len=this._mappings.length; i < len; i++) {
mapping = this._mappings[i];

if(mapping.generatedLine !== previousGeneratedLine){
previousGeneratedColumn = 0;
while(mapping.generatedLine !== previousGeneratedLine) {
result += ";";
previousGeneratedLine++;}}else 


{
if(i > 0){
if(!util.compareByGeneratedPositions(mapping, this._mappings[i - 1])){
continue;}

result += ",";}}



result += base64VLQ.encode(mapping.generatedColumn - 
previousGeneratedColumn);
previousGeneratedColumn = mapping.generatedColumn;

if(mapping.source){
result += base64VLQ.encode(this._sources.indexOf(mapping.source) - 
previousSource);
previousSource = this._sources.indexOf(mapping.source);


result += base64VLQ.encode(mapping.originalLine - 1 - 
previousOriginalLine);
previousOriginalLine = mapping.originalLine - 1;

result += base64VLQ.encode(mapping.originalColumn - 
previousOriginalColumn);
previousOriginalColumn = mapping.originalColumn;

if(mapping.name){
result += base64VLQ.encode(this._names.indexOf(mapping.name) - 
previousName);
previousName = this._names.indexOf(mapping.name);}}}




return result;};


SourceMapGenerator.prototype._generateSourcesContent = 
function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot){
return aSources.map(function(source){
if(!this._sourcesContents){
return null;}

if(aSourceRoot){
source = util.relative(aSourceRoot, source);}

var key=util.toSetString(source);
return Object.prototype.hasOwnProperty.call(this._sourcesContents, 
key)?
this._sourcesContents[key]:
null;}, 
this);};





SourceMapGenerator.prototype.toJSON = 
function SourceMapGenerator_toJSON(){
var map={
version:this._version, 
file:this._file, 
sources:this._sources.toArray(), 
names:this._names.toArray(), 
mappings:this._serializeMappings()};

if(this._sourceRoot){
map.sourceRoot = this._sourceRoot;}

if(this._sourcesContents){
map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);}


return map;};





SourceMapGenerator.prototype.toString = 
function SourceMapGenerator_toString(){
return JSON.stringify(this);};


exports.SourceMapGenerator = SourceMapGenerator;});






































define("source-map/base64-vlq", ["require", "exports", "module", "source-map/base64"], function(require, exports, module){

var base64=require("./base64");













var VLQ_BASE_SHIFT=5;


var VLQ_BASE=1 << VLQ_BASE_SHIFT;


var VLQ_BASE_MASK=VLQ_BASE - 1;


var VLQ_CONTINUATION_BIT=VLQ_BASE;







function toVLQSigned(aValue){
return aValue < 0?
(-aValue << 1) + 1:
(aValue << 1) + 0;}








function fromVLQSigned(aValue){
var isNegative=(aValue & 1) === 1;
var shifted=aValue >> 1;
return isNegative?
-shifted:
shifted;}





exports.encode = function base64VLQ_encode(aValue){
var encoded="";
var digit;

var vlq=toVLQSigned(aValue);

do {
digit = vlq & VLQ_BASE_MASK;
vlq >>>= VLQ_BASE_SHIFT;
if(vlq > 0){


digit |= VLQ_CONTINUATION_BIT;}

encoded += base64.encode(digit);}while(
vlq > 0);

return encoded;};






exports.decode = function base64VLQ_decode(aStr){
var i=0;
var strLen=aStr.length;
var result=0;
var shift=0;
var continuation, digit;

do {
if(i >= strLen){
throw new Error("Expected more digits in base 64 VLQ value.");}

digit = base64.decode(aStr.charAt(i++));
continuation = !!(digit & VLQ_CONTINUATION_BIT);
digit &= VLQ_BASE_MASK;
result = result + (digit << shift);
shift += VLQ_BASE_SHIFT;}while(
continuation);

return {
value:fromVLQSigned(result), 
rest:aStr.slice(i)};};});










define("source-map/base64", ["require", "exports", "module"], function(require, exports, module){

var charToIntMap={};
var intToCharMap={};

"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".
split("").
forEach(function(ch, index){
charToIntMap[ch] = index;
intToCharMap[index] = ch;});





exports.encode = function base64_encode(aNumber){
if(aNumber in intToCharMap){
return intToCharMap[aNumber];}

throw new TypeError("Must be between 0 and 63: " + aNumber);};





exports.decode = function base64_decode(aChar){
if(aChar in charToIntMap){
return charToIntMap[aChar];}

throw new TypeError("Not a valid base 64 digit: " + aChar);};});









define("source-map/util", ["require", "exports", "module"], function(require, exports, module){











function getArg(aArgs, aName, aDefaultValue){
if(aName in aArgs){
return aArgs[aName];}else 
if(arguments.length === 3){
return aDefaultValue;}else 
{
throw new Error("\"" + aName + "\" is a required argument.");}}


exports.getArg = getArg;

var urlRegexp=/([\w+\-.]+):\/\/((\w+:\w+)@)?([\w.]+)?(:(\d+))?(\S+)?/;
var dataUrlRegexp=/^data:.+\,.+/;

function urlParse(aUrl){
var match=aUrl.match(urlRegexp);
if(!match){
return null;}

return {
scheme:match[1], 
auth:match[3], 
host:match[4], 
port:match[6], 
path:match[7]};}


exports.urlParse = urlParse;

function urlGenerate(aParsedUrl){
var url=aParsedUrl.scheme + "://";
if(aParsedUrl.auth){
url += aParsedUrl.auth + "@";}

if(aParsedUrl.host){
url += aParsedUrl.host;}

if(aParsedUrl.port){
url += ":" + aParsedUrl.port;}

if(aParsedUrl.path){
url += aParsedUrl.path;}

return url;}

exports.urlGenerate = urlGenerate;

function join(aRoot, aPath){
var url;

if(aPath.match(urlRegexp) || aPath.match(dataUrlRegexp)){
return aPath;}


if(aPath.charAt(0) === "/" && (url = urlParse(aRoot))){
url.path = aPath;
return urlGenerate(url);}


return aRoot.replace(/\/$/, "") + "/" + aPath;}

exports.join = join;










function toSetString(aStr){
return "$" + aStr;}

exports.toSetString = toSetString;

function fromSetString(aStr){
return aStr.substr(1);}

exports.fromSetString = fromSetString;

function relative(aRoot, aPath){
aRoot = aRoot.replace(/\/$/, "");

var url=urlParse(aRoot);
if(aPath.charAt(0) == "/" && url && url.path == "/"){
return aPath.slice(1);}


return aPath.indexOf(aRoot + "/") === 0?
aPath.substr(aRoot.length + 1):
aPath;}

exports.relative = relative;

function strcmp(aStr1, aStr2){
var s1=aStr1 || "";
var s2=aStr2 || "";
return (s1 > s2) - (s1 < s2);}










function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal){
var cmp;

cmp = strcmp(mappingA.source, mappingB.source);
if(cmp){
return cmp;}


cmp = mappingA.originalLine - mappingB.originalLine;
if(cmp){
return cmp;}


cmp = mappingA.originalColumn - mappingB.originalColumn;
if(cmp || onlyCompareOriginal){
return cmp;}


cmp = strcmp(mappingA.name, mappingB.name);
if(cmp){
return cmp;}


cmp = mappingA.generatedLine - mappingB.generatedLine;
if(cmp){
return cmp;}


return mappingA.generatedColumn - mappingB.generatedColumn;}
;
exports.compareByOriginalPositions = compareByOriginalPositions;










function compareByGeneratedPositions(mappingA, mappingB, onlyCompareGenerated){
var cmp;

cmp = mappingA.generatedLine - mappingB.generatedLine;
if(cmp){
return cmp;}


cmp = mappingA.generatedColumn - mappingB.generatedColumn;
if(cmp || onlyCompareGenerated){
return cmp;}


cmp = strcmp(mappingA.source, mappingB.source);
if(cmp){
return cmp;}


cmp = mappingA.originalLine - mappingB.originalLine;
if(cmp){
return cmp;}


cmp = mappingA.originalColumn - mappingB.originalColumn;
if(cmp){
return cmp;}


return strcmp(mappingA.name, mappingB.name);}
;
exports.compareByGeneratedPositions = compareByGeneratedPositions;});








define("source-map/array-set", ["require", "exports", "module", "source-map/util"], function(require, exports, module){

var util=require("./util");







function ArraySet(){
this._array = [];
this._set = {};}





ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates){
var set=new ArraySet();
for(var i=0, len=aArray.length; i < len; i++) {
set.add(aArray[i], aAllowDuplicates);}

return set;};







ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates){
var isDuplicate=this.has(aStr);
var idx=this._array.length;
if(!isDuplicate || aAllowDuplicates){
this._array.push(aStr);}

if(!isDuplicate){
this._set[util.toSetString(aStr)] = idx;}};








ArraySet.prototype.has = function ArraySet_has(aStr){
return Object.prototype.hasOwnProperty.call(this._set, 
util.toSetString(aStr));};







ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr){
if(this.has(aStr)){
return this._set[util.toSetString(aStr)];}

throw new Error("\"" + aStr + "\" is not in the set.");};







ArraySet.prototype.at = function ArraySet_at(aIdx){
if(aIdx >= 0 && aIdx < this._array.length){
return this._array[aIdx];}

throw new Error("No element indexed by " + aIdx);};







ArraySet.prototype.toArray = function ArraySet_toArray(){
return this._array.slice();};


exports.ArraySet = ArraySet;});








define("source-map/source-map-consumer", ["require", "exports", "module", "source-map/util", "source-map/binary-search", "source-map/array-set", "source-map/base64-vlq"], function(require, exports, module){

var util=require("./util");
var binarySearch=require("./binary-search");
var ArraySet=require("./array-set").ArraySet;
var base64VLQ=require("./base64-vlq");































function SourceMapConsumer(aSourceMap){
var sourceMap=aSourceMap;
if(typeof aSourceMap === "string"){
sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ""));}


var version=util.getArg(sourceMap, "version");
var sources=util.getArg(sourceMap, "sources");


var names=util.getArg(sourceMap, "names", []);
var sourceRoot=util.getArg(sourceMap, "sourceRoot", null);
var sourcesContent=util.getArg(sourceMap, "sourcesContent", null);
var mappings=util.getArg(sourceMap, "mappings");
var file=util.getArg(sourceMap, "file", null);



if(version != this._version){
throw new Error("Unsupported version: " + version);}






this._names = ArraySet.fromArray(names, true);
this._sources = ArraySet.fromArray(sources, true);

this.sourceRoot = sourceRoot;
this.sourcesContent = sourcesContent;
this._mappings = mappings;
this.file = file;}









SourceMapConsumer.fromSourceMap = 
function SourceMapConsumer_fromSourceMap(aSourceMap){
var smc=Object.create(SourceMapConsumer.prototype);

smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);
smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);
smc.sourceRoot = aSourceMap._sourceRoot;
smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(), 
smc.sourceRoot);
smc.file = aSourceMap._file;

smc.__generatedMappings = aSourceMap._mappings.slice().
sort(util.compareByGeneratedPositions);
smc.__originalMappings = aSourceMap._mappings.slice().
sort(util.compareByOriginalPositions);

return smc;};





SourceMapConsumer.prototype._version = 3;




Object.defineProperty(SourceMapConsumer.prototype, "sources", {
get:function(){
return this._sources.toArray().map(function(s){
return this.sourceRoot?util.join(this.sourceRoot, s):s;}, 
this);}});

































SourceMapConsumer.prototype.__generatedMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, "_generatedMappings", {
get:function(){
if(!this.__generatedMappings){
this.__generatedMappings = [];
this.__originalMappings = [];
this._parseMappings(this._mappings, this.sourceRoot);}


return this.__generatedMappings;}});



SourceMapConsumer.prototype.__originalMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, "_originalMappings", {
get:function(){
if(!this.__originalMappings){
this.__generatedMappings = [];
this.__originalMappings = [];
this._parseMappings(this._mappings, this.sourceRoot);}


return this.__originalMappings;}});








SourceMapConsumer.prototype._parseMappings = 
function SourceMapConsumer_parseMappings(aStr, aSourceRoot){
var generatedLine=1;
var previousGeneratedColumn=0;
var previousOriginalLine=0;
var previousOriginalColumn=0;
var previousSource=0;
var previousName=0;
var mappingSeparator=/^[,;]/;
var str=aStr;
var mapping;
var temp;

while(str.length > 0) {
if(str.charAt(0) === ";"){
generatedLine++;
str = str.slice(1);
previousGeneratedColumn = 0;}else 

if(str.charAt(0) === ","){
str = str.slice(1);}else 

{
mapping = {};
mapping.generatedLine = generatedLine;


temp = base64VLQ.decode(str);
mapping.generatedColumn = previousGeneratedColumn + temp.value;
previousGeneratedColumn = mapping.generatedColumn;
str = temp.rest;

if(str.length > 0 && !mappingSeparator.test(str.charAt(0))){

temp = base64VLQ.decode(str);
mapping.source = this._sources.at(previousSource + temp.value);
previousSource += temp.value;
str = temp.rest;
if(str.length === 0 || mappingSeparator.test(str.charAt(0))){
throw new Error("Found a source, but no line and column");}



temp = base64VLQ.decode(str);
mapping.originalLine = previousOriginalLine + temp.value;
previousOriginalLine = mapping.originalLine;

mapping.originalLine += 1;
str = temp.rest;
if(str.length === 0 || mappingSeparator.test(str.charAt(0))){
throw new Error("Found a source and line, but no column");}



temp = base64VLQ.decode(str);
mapping.originalColumn = previousOriginalColumn + temp.value;
previousOriginalColumn = mapping.originalColumn;
str = temp.rest;

if(str.length > 0 && !mappingSeparator.test(str.charAt(0))){

temp = base64VLQ.decode(str);
mapping.name = this._names.at(previousName + temp.value);
previousName += temp.value;
str = temp.rest;}}



this.__generatedMappings.push(mapping);
if(typeof mapping.originalLine === "number"){
this.__originalMappings.push(mapping);}}}




this.__originalMappings.sort(util.compareByOriginalPositions);};






SourceMapConsumer.prototype._findMapping = 
function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName, 
aColumnName, aComparator){





if(aNeedle[aLineName] <= 0){
throw new TypeError("Line must be greater than or equal to 1, got " + 
aNeedle[aLineName]);}

if(aNeedle[aColumnName] < 0){
throw new TypeError("Column must be greater than or equal to 0, got " + 
aNeedle[aColumnName]);}


return binarySearch.search(aNeedle, aMappings, aComparator);};

















SourceMapConsumer.prototype.originalPositionFor = 
function SourceMapConsumer_originalPositionFor(aArgs){
var needle={
generatedLine:util.getArg(aArgs, "line"), 
generatedColumn:util.getArg(aArgs, "column")};


var mapping=this._findMapping(needle, 
this._generatedMappings, 
"generatedLine", 
"generatedColumn", 
util.compareByGeneratedPositions);

if(mapping){
var source=util.getArg(mapping, "source", null);
if(source && this.sourceRoot){
source = util.join(this.sourceRoot, source);}

return {
source:source, 
line:util.getArg(mapping, "originalLine", null), 
column:util.getArg(mapping, "originalColumn", null), 
name:util.getArg(mapping, "name", null)};}



return {
source:null, 
line:null, 
column:null, 
name:null};};








SourceMapConsumer.prototype.sourceContentFor = 
function SourceMapConsumer_sourceContentFor(aSource){
if(!this.sourcesContent){
return null;}


if(this.sourceRoot){
aSource = util.relative(this.sourceRoot, aSource);}


if(this._sources.has(aSource)){
return this.sourcesContent[this._sources.indexOf(aSource)];}


var url;
if(this.sourceRoot && (
url = util.urlParse(this.sourceRoot))){




var fileUriAbsPath=aSource.replace(/^file:\/\//, "");
if(url.scheme == "file" && 
this._sources.has(fileUriAbsPath)){
return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];}


if((!url.path || url.path == "/") && 
this._sources.has("/" + aSource)){
return this.sourcesContent[this._sources.indexOf("/" + aSource)];}}



throw new Error("\"" + aSource + "\" is not in the SourceMap.");};
















SourceMapConsumer.prototype.generatedPositionFor = 
function SourceMapConsumer_generatedPositionFor(aArgs){
var needle={
source:util.getArg(aArgs, "source"), 
originalLine:util.getArg(aArgs, "line"), 
originalColumn:util.getArg(aArgs, "column")};


if(this.sourceRoot){
needle.source = util.relative(this.sourceRoot, needle.source);}


var mapping=this._findMapping(needle, 
this._originalMappings, 
"originalLine", 
"originalColumn", 
util.compareByOriginalPositions);

if(mapping){
return {
line:util.getArg(mapping, "generatedLine", null), 
column:util.getArg(mapping, "generatedColumn", null)};}



return {
line:null, 
column:null};};



SourceMapConsumer.GENERATED_ORDER = 1;
SourceMapConsumer.ORIGINAL_ORDER = 2;

















SourceMapConsumer.prototype.eachMapping = 
function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder){
var context=aContext || null;
var order=aOrder || SourceMapConsumer.GENERATED_ORDER;

var mappings;
switch(order){
case SourceMapConsumer.GENERATED_ORDER:
mappings = this._generatedMappings;
break;
case SourceMapConsumer.ORIGINAL_ORDER:
mappings = this._originalMappings;
break;
default:
throw new Error("Unknown order of iteration.");}


var sourceRoot=this.sourceRoot;
mappings.map(function(mapping){
var source=mapping.source;
if(source && sourceRoot){
source = util.join(sourceRoot, source);}

return {
source:source, 
generatedLine:mapping.generatedLine, 
generatedColumn:mapping.generatedColumn, 
originalLine:mapping.originalLine, 
originalColumn:mapping.originalColumn, 
name:mapping.name};}).

forEach(aCallback, context);};


exports.SourceMapConsumer = SourceMapConsumer;});








define("source-map/binary-search", ["require", "exports", "module"], function(require, exports, module){










function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare){










var mid=Math.floor((aHigh - aLow) / 2) + aLow;
var cmp=aCompare(aNeedle, aHaystack[mid], true);
if(cmp === 0){

return aHaystack[mid];}else 

if(cmp > 0){

if(aHigh - mid > 1){

return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare);}



return aHaystack[mid];}else 

{

if(mid - aLow > 1){

return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare);}



return aLow < 0?
null:
aHaystack[aLow];}}
















exports.search = function search(aNeedle, aHaystack, aCompare){
return aHaystack.length > 0?
recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack, aCompare):
null;};});









define("source-map/source-node", ["require", "exports", "module", "source-map/source-map-generator", "source-map/util"], function(require, exports, module){

var SourceMapGenerator=require("./source-map-generator").SourceMapGenerator;
var util=require("./util");













function SourceNode(aLine, aColumn, aSource, aChunks, aName){
this.children = [];
this.sourceContents = {};
this.line = aLine === undefined?null:aLine;
this.column = aColumn === undefined?null:aColumn;
this.source = aSource === undefined?null:aSource;
this.name = aName === undefined?null:aName;
if(aChunks != null)this.add(aChunks);}








SourceNode.fromStringWithSourceMap = 
function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer){


var node=new SourceNode();



var remainingLines=aGeneratedCode.split("\n");


var lastGeneratedLine=1, lastGeneratedColumn=0;




var lastMapping=null;

aSourceMapConsumer.eachMapping(function(mapping){
if(lastMapping === null){



while(lastGeneratedLine < mapping.generatedLine) {
node.add(remainingLines.shift() + "\n");
lastGeneratedLine++;}

if(lastGeneratedColumn < mapping.generatedColumn){
var nextLine=remainingLines[0];
node.add(nextLine.substr(0, mapping.generatedColumn));
remainingLines[0] = nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn = mapping.generatedColumn;}}else 

{


if(lastGeneratedLine < mapping.generatedLine){
var code="";

do {
code += remainingLines.shift() + "\n";
lastGeneratedLine++;
lastGeneratedColumn = 0;}while(
lastGeneratedLine < mapping.generatedLine);


if(lastGeneratedColumn < mapping.generatedColumn){
var nextLine=remainingLines[0];
code += nextLine.substr(0, mapping.generatedColumn);
remainingLines[0] = nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn = mapping.generatedColumn;}


addMappingWithCode(lastMapping, code);}else 
{



var nextLine=remainingLines[0];
var code=nextLine.substr(0, mapping.generatedColumn - 
lastGeneratedColumn);
remainingLines[0] = nextLine.substr(mapping.generatedColumn - 
lastGeneratedColumn);
lastGeneratedColumn = mapping.generatedColumn;
addMappingWithCode(lastMapping, code);}}


lastMapping = mapping;}, 
this);



addMappingWithCode(lastMapping, remainingLines.join("\n"));


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
node.setSourceContent(sourceFile, content);}});



return node;

function addMappingWithCode(mapping, code){
if(mapping === null || mapping.source === undefined){
node.add(code);}else 
{
node.add(new SourceNode(mapping.originalLine, 
mapping.originalColumn, 
mapping.source, 
code, 
mapping.name));}}};










SourceNode.prototype.add = function SourceNode_add(aChunk){
if(Array.isArray(aChunk)){
aChunk.forEach(function(chunk){
this.add(chunk);}, 
this);}else 

if(aChunk instanceof SourceNode || typeof aChunk === "string"){
if(aChunk){
this.children.push(aChunk);}}else 


{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk);}


return this;};








SourceNode.prototype.prepend = function SourceNode_prepend(aChunk){
if(Array.isArray(aChunk)){
for(var i=aChunk.length - 1; i >= 0; i--) {
this.prepend(aChunk[i]);}}else 


if(aChunk instanceof SourceNode || typeof aChunk === "string"){
this.children.unshift(aChunk);}else 

{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk);}


return this;};









SourceNode.prototype.walk = function SourceNode_walk(aFn){
var chunk;
for(var i=0, len=this.children.length; i < len; i++) {
chunk = this.children[i];
if(chunk instanceof SourceNode){
chunk.walk(aFn);}else 

{
if(chunk !== ""){
aFn(chunk, {source:this.source, 
line:this.line, 
column:this.column, 
name:this.name});}}}};











SourceNode.prototype.join = function SourceNode_join(aSep){
var newChildren;
var i;
var len=this.children.length;
if(len > 0){
newChildren = [];
for(i = 0; i < len - 1; i++) {
newChildren.push(this.children[i]);
newChildren.push(aSep);}

newChildren.push(this.children[i]);
this.children = newChildren;}

return this;};









SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement){
var lastChild=this.children[this.children.length - 1];
if(lastChild instanceof SourceNode){
lastChild.replaceRight(aPattern, aReplacement);}else 

if(typeof lastChild === "string"){
this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);}else 

{
this.children.push("".replace(aPattern, aReplacement));}

return this;};









SourceNode.prototype.setSourceContent = 
function SourceNode_setSourceContent(aSourceFile, aSourceContent){
this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;};








SourceNode.prototype.walkSourceContents = 
function SourceNode_walkSourceContents(aFn){
for(var i=0, len=this.children.length; i < len; i++) {
if(this.children[i] instanceof SourceNode){
this.children[i].walkSourceContents(aFn);}}



var sources=Object.keys(this.sourceContents);
for(var i=0, len=sources.length; i < len; i++) {
aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);}};







SourceNode.prototype.toString = function SourceNode_toString(){
var str="";
this.walk(function(chunk){
str += chunk;});

return str;};






SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs){
var generated={
code:"", 
line:1, 
column:0};

var map=new SourceMapGenerator(aArgs);
var sourceMappingActive=false;
var lastOriginalSource=null;
var lastOriginalLine=null;
var lastOriginalColumn=null;
var lastOriginalName=null;
this.walk(function(chunk, original){
generated.code += chunk;
if(original.source !== null && 
original.line !== null && 
original.column !== null){
if(lastOriginalSource !== original.source || 
lastOriginalLine !== original.line || 
lastOriginalColumn !== original.column || 
lastOriginalName !== original.name){
map.addMapping({
source:original.source, 
original:{
line:original.line, 
column:original.column}, 

generated:{
line:generated.line, 
column:generated.column}, 

name:original.name});}


lastOriginalSource = original.source;
lastOriginalLine = original.line;
lastOriginalColumn = original.column;
lastOriginalName = original.name;
sourceMappingActive = true;}else 
if(sourceMappingActive){
map.addMapping({
generated:{
line:generated.line, 
column:generated.column}});


lastOriginalSource = null;
sourceMappingActive = false;}

chunk.split("").forEach(function(ch){
if(ch === "\n"){
generated.line++;
generated.column = 0;}else 
{
generated.column++;}});});



this.walkSourceContents(function(sourceFile, sourceContent){
map.setSourceContent(sourceFile, sourceContent);});


return {code:generated.code, map:map};};


exports.SourceNode = SourceNode;});





this.sourceMap = {
SourceMapConsumer:require("source-map/source-map-consumer").SourceMapConsumer, 
SourceMapGenerator:require("source-map/source-map-generator").SourceMapGenerator, 
SourceNode:require("source-map/source-node").SourceNode};}
});
__d('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (














function(){
var define=null;




void (function(root, factory){
if(typeof define === "function" && define.amd){
define(factory);}else 
if(typeof exports === "object"){
module.exports = factory();}else 
{
root.sourceMappingURL = factory();}})(

this, function(){

var innerRegex=/[#@] sourceMappingURL=([^\s'"]*)/;

var regex=RegExp(
"(?:" + 
"/\\*" + 
"(?:\\s*\r?\n(?://)?)?" + 
"(?:" + innerRegex.source + ")" + 
"\\s*" + 
"\\*/" + 
"|" + 
"//(?:" + innerRegex.source + ")" + 
")" + 
"\\s*$");


return {

regex:regex, 
_innerRegex:innerRegex, 

getFrom:function(code){
var match=code.match(regex);
return match?match[1] || match[2] || "":null;}, 


existsIn:function(code){
return regex.test(code);}, 


removeFrom:function(code){
return code.replace(regex, "");}, 


insertBefore:function(code, string){
var match=code.match(regex);
if(match){
return code.slice(0, match.index) + string + code.slice(match.index);}else 
{
return code + string;}}};});})();
});
__d('parseErrorStack',["stacktrace-parser/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var stacktraceParser=require('stacktrace-parser/index.js');

function resolveSourceMaps(sourceMapInstance, stackFrame){
try{
var orig=sourceMapInstance.originalPositionFor({
line:stackFrame.lineNumber, 
column:stackFrame.column});

if(orig){
stackFrame.file = orig.source;
stackFrame.lineNumber = orig.line;
stackFrame.column = orig.column;}}

catch(innerEx) {}}



function parseErrorStack(e, sourceMapInstance){
if(!e || !e.stack){
return [];}


var stack=stacktraceParser.parse(e.stack);

var framesToPop=e.framesToPop || 0;
while(framesToPop--) {
stack.shift();}


if(sourceMapInstance){
stack.forEach(resolveSourceMaps.bind(null, sourceMapInstance));}


return stack;}


module.exports = parseErrorStack;
});
__d('stacktrace-parser/index.js',["stacktrace-parser/lib/stacktrace-parser.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = require('stacktrace-parser/lib/stacktrace-parser.js');
});
__d('stacktrace-parser/lib/stacktrace-parser.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

UNKNOWN_FUNCTION='<unknown>';

var StackTraceParser={




parse:function(stackString){
var chrome=/^\s*at (?:(?:(?:Anonymous function)?|((?:\[object object\])?\S+(?: \[as \S+\])?)) )?\(?((?:file|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i, 
gecko=/^(?:\s*(\S*)(?:\((.*?)\))?@)?((?:\w).*?):(\d+)(?::(\d+))?\s*$/i, 
node=/^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i, 
lines=stackString.split('\n'), 
stack=[], 
parts, 
element;

for(var i=0, j=lines.length; i < j; ++i) {
if(parts = gecko.exec(lines[i])){
element = {
'file':parts[3], 
'methodName':parts[1] || UNKNOWN_FUNCTION, 
'lineNumber':+parts[4], 
'column':parts[5]?+parts[5]:null};}else 

if(parts = chrome.exec(lines[i])){
element = {
'file':parts[2], 
'methodName':parts[1] || UNKNOWN_FUNCTION, 
'lineNumber':+parts[3], 
'column':parts[4]?+parts[4]:null};}else 

if(parts = node.exec(lines[i])){
element = {
'file':parts[2], 
'methodName':parts[1] || UNKNOWN_FUNCTION, 
'lineNumber':+parts[3], 
'column':parts[4]?+parts[4]:null};}else 

{
continue;}


stack.push(element);}


return stack;}};




module.exports = StackTraceParser;
});
__d('Platform',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var Platform={
OS:'ios'};


module.exports = Platform;
});
__d('XMLHttpRequest',["FormData","NativeModules","RCTDeviceEventEmitter","XMLHttpRequestBase"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();var _get=function get(object, property, receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object, property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent, property, receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var FormData=require('FormData');
var RCTNetworking=require('NativeModules').Networking;
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');

var XMLHttpRequestBase=require('XMLHttpRequestBase');var 

XMLHttpRequest=(function(_XMLHttpRequestBase){







function XMLHttpRequest(){_classCallCheck(this, XMLHttpRequest);
_get(Object.getPrototypeOf(XMLHttpRequest.prototype), 'constructor', this).call(this);
this._requestId = null;
this._subscriptions = [];
this.upload = {};}_inherits(XMLHttpRequest, _XMLHttpRequestBase);_createClass(XMLHttpRequest, [{key:'_didCreateRequest', value:


function _didCreateRequest(requestId){var _this=this;
this._requestId = requestId;
this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didSendNetworkData', 
function(args){return _this._didUploadProgress.call(_this, args[0], args[1], args[2]);}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didReceiveNetworkResponse', 
function(args){return _this._didReceiveResponse.call(_this, args[0], args[1], args[2]);}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didReceiveNetworkData', 
function(args){return _this._didReceiveData.call(_this, args[0], args[1]);}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didCompleteNetworkResponse', 
function(args){return _this._didCompleteResponse.call(_this, args[0], args[1]);}));}}, {key:'_didUploadProgress', value:



function _didUploadProgress(requestId, progress, total){
if(requestId === this._requestId && this.upload.onprogress){
var event={
lengthComputable:true, 
loaded:progress, 
total:total};

this.upload.onprogress(event);}}}, {key:'_didReceiveResponse', value:



function _didReceiveResponse(requestId, status, responseHeaders){
if(requestId === this._requestId){
this.status = status;
this.setResponseHeaders(responseHeaders);
this.setReadyState(this.HEADERS_RECEIVED);}}}, {key:'_didReceiveData', value:



function _didReceiveData(requestId, responseText){
if(requestId === this._requestId){
if(!this.responseText){
this.responseText = responseText;}else 
{
this.responseText += responseText;}

this.setReadyState(this.LOADING);}}}, {key:'_didCompleteResponse', value:



function _didCompleteResponse(requestId, error){
if(requestId === this._requestId){
if(error){
this.responseText = error;}

this._clearSubscriptions();
this._requestId = null;
this.setReadyState(this.DONE);}}}, {key:'_clearSubscriptions', value:



function _clearSubscriptions(){
for(var i=0; i < this._subscriptions.length; i++) {
var sub=this._subscriptions[i];
sub.remove();}

this._subscriptions = [];}}, {key:'sendImpl', value:


function sendImpl(method, url, headers, data){
if(typeof data === 'string'){
data = {string:data};}

if(data instanceof FormData){
data = {formData:data.getParts()};}

RCTNetworking.sendRequest(
{
method:method, 
url:url, 
data:data, 
headers:headers, 
incrementalUpdates:this.onreadystatechange?true:false}, 

this._didCreateRequest.bind(this));}}, {key:'abortImpl', value:



function abortImpl(){
if(this._requestId){
RCTNetworking.cancelRequest(this._requestId);
this._clearSubscriptions();
this._requestId = null;}}}]);return XMLHttpRequest;})(XMLHttpRequestBase);




module.exports = XMLHttpRequest;
});
__d('FormData',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _slicedToArray(arr, i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if(i && _arr.length === i)break;}}catch(err) {_d = true;_e = err;}finally {try{if(!_n && _i['return'])_i['return']();}finally {if(_d)throw _e;}}return _arr;}else {throw new TypeError('Invalid attempt to destructure non-iterable instance');}}function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 



















FormData=(function(){



function FormData(){_classCallCheck(this, FormData);
this._parts = [];
this._partsByKey = {};}_createClass(FormData, [{key:'append', value:


function append(key, value){
var parts=this._partsByKey[key];
if(parts){




parts[1] = value;
return;}

parts = [key, value];
this._parts.push(parts);
this._partsByKey[key] = parts;}}, {key:'getParts', value:


function getParts(){
return this._parts.map(function(_ref){var _ref2=_slicedToArray(_ref, 2);var name=_ref2[0];var value=_ref2[1];
if(typeof value === 'string'){
return {
string:value, 
headers:{
'content-disposition':'form-data; name="' + name + '"'}};}



var contentDisposition='form-data; name="' + name + '"';
if(typeof value.name === 'string'){
contentDisposition += '; filename="' + value.name + '"';}

return _extends({}, 
value, {
headers:{'content-disposition':contentDisposition}});});}}]);return FormData;})();





module.exports = FormData;
});
__d('XMLHttpRequestBase',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 















XMLHttpRequestBase=(function(){






















function XMLHttpRequestBase(){_classCallCheck(this, XMLHttpRequestBase);
this.UNSENT = 0;
this.OPENED = 1;
this.HEADERS_RECEIVED = 2;
this.LOADING = 3;
this.DONE = 4;

this.onreadystatechange = null;
this.onload = null;
this.upload = undefined;

this._reset();
this._method = null;
this._url = null;
this._aborted = false;}_createClass(XMLHttpRequestBase, [{key:'_reset', value:


function _reset(){
this.readyState = this.UNSENT;
this.responseHeaders = undefined;
this.responseText = '';
this.status = 0;

this._headers = {};
this._sent = false;
this._lowerCaseResponseHeaders = {};}}, {key:'getAllResponseHeaders', value:


function getAllResponseHeaders(){
if(!this.responseHeaders){

return null;}

var headers=this.responseHeaders || {};
return Object.keys(headers).map(function(headerName){
return headerName + ': ' + headers[headerName];}).
join('\n');}}, {key:'getResponseHeader', value:


function getResponseHeader(header){
var value=this._lowerCaseResponseHeaders[header.toLowerCase()];
return value !== undefined?value:null;}}, {key:'setRequestHeader', value:


function setRequestHeader(header, value){
if(this.readyState !== this.OPENED){
throw new Error('Request has not been opened');}

this._headers[header.toLowerCase()] = value;}}, {key:'open', value:


function open(method, url, async){

if(this.readyState !== this.UNSENT){
throw new Error('Cannot open, already sending');}

if(async !== undefined && !async){

throw new Error('Synchronous http requests are not supported');}

this._reset();
this._method = method;
this._url = url;
this._aborted = false;
this.setReadyState(this.OPENED);}}, {key:'sendImpl', value:


function sendImpl(method, url, headers, data){
throw new Error('Subclass must define sendImpl method');}}, {key:'abortImpl', value:


function abortImpl(){
throw new Error('Subclass must define abortImpl method');}}, {key:'send', value:


function send(data){
if(this.readyState !== this.OPENED){
throw new Error('Request has not been opened');}

if(this._sent){
throw new Error('Request has already been sent');}

this._sent = true;
this.sendImpl(this._method, this._url, this._headers, data);}}, {key:'abort', value:


function abort(){
this._aborted = true;
this.abortImpl();


if(!(this.readyState === this.UNSENT || 
this.readyState === this.OPENED && !this._sent || 
this.readyState === this.DONE)){
this._reset();
this.setReadyState(this.DONE);}


this._reset();}}, {key:'callback', value:


function callback(status, responseHeaders, responseText){
if(this._aborted){
return;}

this.status = status;
this.setResponseHeaders(responseHeaders || {});
this.responseText = responseText;
this.setReadyState(this.DONE);}}, {key:'setResponseHeaders', value:


function setResponseHeaders(responseHeaders){
this.responseHeaders = responseHeaders || null;
var headers=responseHeaders || {};
this._lowerCaseResponseHeaders = 
Object.keys(headers).reduce(function(lcaseHeaders, headerName){
lcaseHeaders[headerName.toLowerCase()] = headers[headerName];
return lcaseHeaders;}, 
{});}}, {key:'setReadyState', value:


function setReadyState(newState){
this.readyState = newState;

var onreadystatechange=this.onreadystatechange;
if(onreadystatechange){


onreadystatechange(null);}

if(newState === this.DONE && !this._aborted){
this._sendLoad();}}}, {key:'_sendLoad', value:



function _sendLoad(){

var onload=this.onload;
if(onload){


onload(null);}}}]);return XMLHttpRequestBase;})();




module.exports = XMLHttpRequestBase;
});
__d('fetch',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















var self={};

























(function(){
'use strict';

if(self.fetch){
return;}


function normalizeName(name){
if(typeof name !== 'string'){
name = name.toString();}

if(/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)){
throw new TypeError('Invalid character in header field name');}

return name.toLowerCase();}


function normalizeValue(value){
if(typeof value !== 'string'){
value = value.toString();}

return value;}


function Headers(headers){
this.map = {};

var self=this;
if(headers instanceof Headers){
headers.forEach(function(name, values){
values.forEach(function(value){
self.append(name, value);});});}else 



if(headers){
Object.getOwnPropertyNames(headers).forEach(function(name){
self.append(name, headers[name]);});}}




Headers.prototype.append = function(name, value){
name = normalizeName(name);
value = normalizeValue(value);
var list=this.map[name];
if(!list){
list = [];
this.map[name] = list;}

list.push(value);};


Headers.prototype['delete'] = function(name){
delete this.map[normalizeName(name)];};


Headers.prototype.get = function(name){
var values=this.map[normalizeName(name)];
return values?values[0]:null;};


Headers.prototype.getAll = function(name){
return this.map[normalizeName(name)] || [];};


Headers.prototype.has = function(name){
return this.map.hasOwnProperty(normalizeName(name));};


Headers.prototype.set = function(name, value){
this.map[normalizeName(name)] = [normalizeValue(value)];};



Headers.prototype.forEach = function(callback){
var self=this;
Object.getOwnPropertyNames(this.map).forEach(function(name){
callback(name, self.map[name]);});};



function consumed(body){
if(body.bodyUsed){
return Promise.reject(new TypeError('Already read'));}

body.bodyUsed = true;}


function fileReaderReady(reader){
return new Promise(function(resolve, reject){
reader.onload = function(){
resolve(reader.result);};

reader.onerror = function(){
reject(reader.error);};});}




function readBlobAsArrayBuffer(blob){
var reader=new FileReader();
reader.readAsArrayBuffer(blob);
return fileReaderReady(reader);}


function readBlobAsText(blob){
var reader=new FileReader();
reader.readAsText(blob);
return fileReaderReady(reader);}


var support={
blob:'FileReader' in self && 'Blob' in self && (function(){
try{
new Blob();
return true;}
catch(e) {
return false;}})(), 


formData:'FormData' in self};


function Body(){
this.bodyUsed = false;


this._initBody = function(body){
this._bodyInit = body;
if(typeof body === 'string'){
this._bodyText = body;}else 
if(support.blob && Blob.prototype.isPrototypeOf(body)){
this._bodyBlob = body;}else 
if(support.formData && FormData.prototype.isPrototypeOf(body)){
this._bodyFormData = body;}else 
if(!body){
this._bodyText = '';}else 
{
throw new Error('unsupported BodyInit type');}};



if(support.blob){
this.blob = function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return Promise.resolve(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as blob');}else 
{
return Promise.resolve(new Blob([this._bodyText]));}};



this.arrayBuffer = function(){
return this.blob().then(readBlobAsArrayBuffer);};


this.text = function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return readBlobAsText(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as text');}else 
{
return Promise.resolve(this._bodyText);}};}else 


{
this.text = function(){
var rejected=consumed(this);
return rejected?rejected:Promise.resolve(this._bodyText);};}



if(support.formData){
this.formData = function(){
return this.text().then(decode);};}



this.json = function(){
return this.text().then(JSON.parse);};


return this;}



var methods=['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

function normalizeMethod(method){
var upcased=method.toUpperCase();
return methods.indexOf(upcased) > -1?upcased:method;}


function Request(url, options){
options = options || {};
this.url = url;

this.credentials = options.credentials || 'omit';
this.headers = new Headers(options.headers);
this.method = normalizeMethod(options.method || 'GET');
this.mode = options.mode || null;
this.referrer = null;

if((this.method === 'GET' || this.method === 'HEAD') && options.body){
throw new TypeError('Body not allowed for GET or HEAD requests');}

this._initBody(options.body);}


function decode(body){
var form=new FormData();
body.trim().split('&').forEach(function(bytes){
if(bytes){
var split=bytes.split('=');
var name=split.shift().replace(/\+/g, ' ');
var value=split.join('=').replace(/\+/g, ' ');
form.append(decodeURIComponent(name), decodeURIComponent(value));}});


return form;}


function headers(xhr){
var head=new Headers();
var pairs=xhr.getAllResponseHeaders().trim().split('\n');
pairs.forEach(function(header){
var split=header.trim().split(':');
var key=split.shift().trim();
var value=split.join(':').trim();
head.append(key, value);});

return head;}


Body.call(Request.prototype);

function Response(bodyInit, options){
if(!options){
options = {};}


this._initBody(bodyInit);
this.type = 'default';
this.url = null;
this.status = options.status;
this.ok = this.status >= 200 && this.status < 300;
this.statusText = options.statusText;
this.headers = options.headers instanceof Headers?options.headers:new Headers(options.headers);
this.url = options.url || '';}


Body.call(Response.prototype);

self.Headers = Headers;
self.Request = Request;
self.Response = Response;

self.fetch = function(input, init){

var request;
if(Request.prototype.isPrototypeOf(input) && !init){
request = input;}else 
{
request = new Request(input, init);}


return new Promise(function(resolve, reject){
var xhr=new XMLHttpRequest();
if(request.credentials === 'cors'){
xhr.withCredentials = true;}


function responseURL(){
if('responseURL' in xhr){
return xhr.responseURL;}



if(/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())){
return xhr.getResponseHeader('X-Request-URL');}


return;}


xhr.onload = function(){
var status=xhr.status === 1223?204:xhr.status;
if(status < 100 || status > 599){
reject(new TypeError('Network request failed'));
return;}

var options={
status:status, 
statusText:xhr.statusText, 
headers:headers(xhr), 
url:responseURL()};

var body='response' in xhr?xhr.response:xhr.responseText;
resolve(new Response(body, options));};


xhr.onerror = function(){
reject(new TypeError('Network request failed'));};


xhr.open(request.method, request.url, true);

if('responseType' in xhr && support.blob){
xhr.responseType = 'blob';}


request.headers.forEach(function(name, values){
values.forEach(function(value){
xhr.setRequestHeader(name, value);});});



xhr.send(typeof request._bodyInit === 'undefined'?null:request._bodyInit);});};


self.fetch.polyfill = true;})();




module.exports = self;
});
__d('Geolocation',["RCTDeviceEventEmitter","NativeModules","invariant","logError","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLocationObserver=require('NativeModules').LocationObserver;

var invariant=require('invariant');
var logError=require('logError');
var warning=require('warning');

var subscriptions=[];

var updatesEnabled=false;















var Geolocation={





getCurrentPosition:function(
geo_success, 
geo_error, 
geo_options)
{
invariant(
typeof geo_success === 'function', 
'Must provide a valid geo_success callback.');

RCTLocationObserver.getCurrentPosition(
geo_options || {}, 
geo_success, 
geo_error || logError);}, 







watchPosition:function(success, error, options){
if(!updatesEnabled){
RCTLocationObserver.startObserving(options || {});
updatesEnabled = true;}

var watchID=subscriptions.length;
subscriptions.push([
RCTDeviceEventEmitter.addListener(
'geolocationDidChange', 
success), 

error?RCTDeviceEventEmitter.addListener(
'geolocationError', 
error):
null]);

return watchID;}, 


clearWatch:function(watchID){
var sub=subscriptions[watchID];
if(!sub){


return;}


sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();
subscriptions[watchID] = undefined;
var noWatchers=true;
for(var ii=0; ii < subscriptions.length; ii++) {
if(subscriptions[ii]){
noWatchers = false;}}


if(noWatchers){
Geolocation.stopObserving();}}, 



stopObserving:function(){
if(updatesEnabled){
RCTLocationObserver.stopObserving();
updatesEnabled = false;
for(var ii=0; ii < subscriptions.length; ii++) {
var sub=subscriptions[ii];
if(sub){
warning('Called stopObserving with existing subscriptions.');
sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();}}


subscriptions = [];}}};




module.exports = Geolocation;
});
__d('logError',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var logError=function(){
if(arguments.length === 1 && arguments[0] instanceof Error){
var err=arguments[0];
console.error('Error: "' + err.message + '".  Stack:\n' + err.stack);}else 
{
console.error.apply(console, arguments);}};



module.exports = logError;
});
__d('WebSocket',["RCTDeviceEventEmitter","NativeModules","WebSocketBase"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();var _get=function get(object, property, receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object, property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent, property, receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTWebSocketManager=require('NativeModules').WebSocketManager;

var WebSocketBase=require('WebSocketBase');

var WebSocketId=0;var 

WebSocket=(function(_WebSocketBase){function WebSocket(){_classCallCheck(this, WebSocket);_get(Object.getPrototypeOf(WebSocket.prototype), 'constructor', this).apply(this, arguments);}_inherits(WebSocket, _WebSocketBase);_createClass(WebSocket, [{key:'connectToSocketImpl', value:



function connectToSocketImpl(url){
this._socketId = WebSocketId++;
RCTWebSocketManager.connect(url, this._socketId);
this._registerEvents(this._socketId);}}, {key:'closeConnectionImpl', value:


function closeConnectionImpl(){
RCTWebSocketManager.close(this._socketId);}}, {key:'cancelConnectionImpl', value:


function cancelConnectionImpl(){
RCTWebSocketManager.close(this._socketId);}}, {key:'sendStringImpl', value:


function sendStringImpl(message){
RCTWebSocketManager.send(message, this._socketId);}}, {key:'sendArrayBufferImpl', value:


function sendArrayBufferImpl(){

console.warn('Sending ArrayBuffers is not yet supported');}}, {key:'_unregisterEvents', value:


function _unregisterEvents(){
this._subs.forEach(function(e){return e.remove();});
this._subs = [];}}, {key:'_registerEvents', value:


function _registerEvents(id){
this._subs = [
RCTDeviceEventEmitter.addListener(
'websocketMessage', 
(function(ev){
if(ev.id !== id){
return;}

this.onmessage && this.onmessage({
data:ev.data});}).

bind(this)), 

RCTDeviceEventEmitter.addListener(
'websocketOpen', 
(function(ev){
if(ev.id !== id){
return;}

this.readyState = this.OPEN;
this.onopen && this.onopen();}).
bind(this)), 

RCTDeviceEventEmitter.addListener(
'websocketClosed', 
(function(ev){
if(ev.id !== id){
return;}

this.readyState = this.CLOSED;
this.onclose && this.onclose(ev);
this._unregisterEvents();
RCTWebSocketManager.close(id);}).
bind(this)), 

RCTDeviceEventEmitter.addListener(
'websocketFailed', 
(function(ev){
if(ev.id !== id){
return;}

this.onerror && this.onerror(new Error(ev.message));
this._unregisterEvents();
RCTWebSocketManager.close(id);}).
bind(this))];}}]);return WebSocket;})(WebSocketBase);






module.exports = WebSocket;
});
__d('WebSocketBase',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 















WebSocketBase=(function(){

















function WebSocketBase(url, protocols){_classCallCheck(this, WebSocketBase);
this.CONNECTING = 0;
this.OPEN = 1;
this.CLOSING = 2;
this.CLOSED = 3;

if(!protocols){
protocols = [];}


this.connectToSocketImpl(url);}_createClass(WebSocketBase, [{key:'close', value:


function close(){
if(this.readyState === WebSocketBase.CLOSING || 
this.readyState === WebSocketBase.CLOSED){
return;}


if(this.readyState === WebSocketBase.CONNECTING){
this.cancelConnectionImpl();}


this.closeConnectionImpl();}}, {key:'send', value:


function send(data){
if(this.readyState === WebSocketBase.CONNECTING){
throw new Error('INVALID_STATE_ERR');}


if(typeof data === 'string'){
this.sendStringImpl(data);}else 
if(data instanceof ArrayBuffer){
this.sendArrayBufferImpl(data);}else 
{
throw new Error('Not supported data type');}}}, {key:'closeConnectionImpl', value:



function closeConnectionImpl(){
throw new Error('Subclass must define closeConnectionImpl method');}}, {key:'connectToSocketImpl', value:


function connectToSocketImpl(){
throw new Error('Subclass must define connectToSocketImpl method');}}, {key:'cancelConnectionImpl', value:


function cancelConnectionImpl(){
throw new Error('Subclass must define cancelConnectionImpl method');}}, {key:'sendStringImpl', value:


function sendStringImpl(){
throw new Error('Subclass must define sendStringImpl method');}}, {key:'sendArrayBufferImpl', value:


function sendArrayBufferImpl(){
throw new Error('Subclass must define sendArrayBufferImpl method');}}]);return WebSocketBase;})();




module.exports = WebSocketBase;
});
__d('EventPluginHub',["EventPluginRegistry","EventPluginUtils","accumulateInto","forEachAccumulated","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPluginRegistry=require('EventPluginRegistry');
var EventPluginUtils=require('EventPluginUtils');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');
var invariant=require('invariant');
var warning=require('warning');




var listenerBank={};





var eventQueue=null;







var executeDispatchesAndRelease=function(event){
if(event){
var executeDispatch=EventPluginUtils.executeDispatch;

var PluginModule=EventPluginRegistry.getPluginModuleForEvent(event);
if(PluginModule && PluginModule.executeDispatch){
executeDispatch = PluginModule.executeDispatch;}

EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);

if(!event.isPersistent()){
event.constructor.release(event);}}};








var InstanceHandle=null;

function validateInstanceHandle(){
var valid=
InstanceHandle && 
InstanceHandle.traverseTwoPhase && 
InstanceHandle.traverseEnterLeave;
warning(
valid, 
'InstanceHandle not injected before use!');}

























var EventPluginHub={




injection:{





injectMount:EventPluginUtils.injection.injectMount, 





injectInstanceHandle:function(InjectedInstanceHandle){
InstanceHandle = InjectedInstanceHandle;
if(__DEV__){
validateInstanceHandle();}}, 



getInstanceHandle:function(){
if(__DEV__){
validateInstanceHandle();}

return InstanceHandle;}, 






injectEventPluginOrder:EventPluginRegistry.injectEventPluginOrder, 




injectEventPluginsByName:EventPluginRegistry.injectEventPluginsByName}, 



eventNameDispatchConfigs:EventPluginRegistry.eventNameDispatchConfigs, 

registrationNameModules:EventPluginRegistry.registrationNameModules, 








putListener:function(id, registrationName, listener){
invariant(
typeof listener === 'function', 
'Expected %s listener to be a function, instead got type %s', 
registrationName, typeof listener);


var bankForRegistrationName=
listenerBank[registrationName] || (listenerBank[registrationName] = {});
bankForRegistrationName[id] = listener;

var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule && PluginModule.didPutListener){
PluginModule.didPutListener(id, registrationName, listener);}}, 








getListener:function(id, registrationName){
var bankForRegistrationName=listenerBank[registrationName];
return bankForRegistrationName && bankForRegistrationName[id];}, 








deleteListener:function(id, registrationName){
var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule && PluginModule.willDeleteListener){
PluginModule.willDeleteListener(id, registrationName);}


var bankForRegistrationName=listenerBank[registrationName];

if(bankForRegistrationName){
delete bankForRegistrationName[id];}}, 








deleteAllListeners:function(id){
for(var registrationName in listenerBank) {
if(!listenerBank[registrationName][id]){
continue;}


var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule && PluginModule.willDeleteListener){
PluginModule.willDeleteListener(id, registrationName);}


delete listenerBank[registrationName][id];}}, 














extractEvents:function(
topLevelType, 
topLevelTarget, 
topLevelTargetID, 
nativeEvent, 
nativeEventTarget){
var events;
var plugins=EventPluginRegistry.plugins;
for(var i=0; i < plugins.length; i++) {

var possiblePlugin=plugins[i];
if(possiblePlugin){
var extractedEvents=possiblePlugin.extractEvents(
topLevelType, 
topLevelTarget, 
topLevelTargetID, 
nativeEvent, 
nativeEventTarget);

if(extractedEvents){
events = accumulateInto(events, extractedEvents);}}}



return events;}, 









enqueueEvents:function(events){
if(events){
eventQueue = accumulateInto(eventQueue, events);}}, 








processEventQueue:function(){


var processingEventQueue=eventQueue;
eventQueue = null;
forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);
invariant(
!eventQueue, 
'processEventQueue(): Additional events were enqueued while processing ' + 
'an event queue. Support for this has not yet been implemented.');}, 






__purge:function(){
listenerBank = {};}, 


__getListenerBank:function(){
return listenerBank;}};




module.exports = EventPluginHub;
});
__d('EventPluginRegistry',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var invariant=require('invariant');




var EventPluginOrder=null;




var namesToPlugins={};






function recomputePluginOrdering(){
if(!EventPluginOrder){

return;}

for(var pluginName in namesToPlugins) {
var PluginModule=namesToPlugins[pluginName];
var pluginIndex=EventPluginOrder.indexOf(pluginName);
invariant(
pluginIndex > -1, 
'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 
'the plugin ordering, `%s`.', 
pluginName);

if(EventPluginRegistry.plugins[pluginIndex]){
continue;}

invariant(
PluginModule.extractEvents, 
'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 
'method, but `%s` does not.', 
pluginName);

EventPluginRegistry.plugins[pluginIndex] = PluginModule;
var publishedEvents=PluginModule.eventTypes;
for(var eventName in publishedEvents) {
invariant(
publishEventForPlugin(
publishedEvents[eventName], 
PluginModule, 
eventName), 

'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', 
eventName, 
pluginName);}}}













function publishEventForPlugin(dispatchConfig, PluginModule, eventName){
invariant(
!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName), 
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'event name, `%s`.', 
eventName);

EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

var phasedRegistrationNames=dispatchConfig.phasedRegistrationNames;
if(phasedRegistrationNames){
for(var phaseName in phasedRegistrationNames) {
if(phasedRegistrationNames.hasOwnProperty(phaseName)){
var phasedRegistrationName=phasedRegistrationNames[phaseName];
publishRegistrationName(
phasedRegistrationName, 
PluginModule, 
eventName);}}



return true;}else 
if(dispatchConfig.registrationName){
publishRegistrationName(
dispatchConfig.registrationName, 
PluginModule, 
eventName);

return true;}

return false;}










function publishRegistrationName(registrationName, PluginModule, eventName){
invariant(
!EventPluginRegistry.registrationNameModules[registrationName], 
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'registration name, `%s`.', 
registrationName);

EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
EventPluginRegistry.registrationNameDependencies[registrationName] = 
PluginModule.eventTypes[eventName].dependencies;}







var EventPluginRegistry={




plugins:[], 




eventNameDispatchConfigs:{}, 




registrationNameModules:{}, 




registrationNameDependencies:{}, 










injectEventPluginOrder:function(InjectedEventPluginOrder){
invariant(
!EventPluginOrder, 
'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 
'once. You are likely trying to load more than one copy of React.');


EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
recomputePluginOrdering();}, 












injectEventPluginsByName:function(injectedNamesToPlugins){
var isOrderingDirty=false;
for(var pluginName in injectedNamesToPlugins) {
if(!injectedNamesToPlugins.hasOwnProperty(pluginName)){
continue;}

var PluginModule=injectedNamesToPlugins[pluginName];
if(!namesToPlugins.hasOwnProperty(pluginName) || 
namesToPlugins[pluginName] !== PluginModule){
invariant(
!namesToPlugins[pluginName], 
'EventPluginRegistry: Cannot inject two different event plugins ' + 
'using the same name, `%s`.', 
pluginName);

namesToPlugins[pluginName] = PluginModule;
isOrderingDirty = true;}}


if(isOrderingDirty){
recomputePluginOrdering();}}, 










getPluginModuleForEvent:function(event){
var dispatchConfig=event.dispatchConfig;
if(dispatchConfig.registrationName){
return EventPluginRegistry.registrationNameModules[
dispatchConfig.registrationName] || 
null;}

for(var phase in dispatchConfig.phasedRegistrationNames) {
if(!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)){
continue;}

var PluginModule=EventPluginRegistry.registrationNameModules[
dispatchConfig.phasedRegistrationNames[phase]];

if(PluginModule){
return PluginModule;}}


return null;}, 






_resetEventPlugins:function(){
EventPluginOrder = null;
for(var pluginName in namesToPlugins) {
if(namesToPlugins.hasOwnProperty(pluginName)){
delete namesToPlugins[pluginName];}}


EventPluginRegistry.plugins.length = 0;

var eventNameDispatchConfigs=EventPluginRegistry.eventNameDispatchConfigs;
for(var eventName in eventNameDispatchConfigs) {
if(eventNameDispatchConfigs.hasOwnProperty(eventName)){
delete eventNameDispatchConfigs[eventName];}}



var registrationNameModules=EventPluginRegistry.registrationNameModules;
for(var registrationName in registrationNameModules) {
if(registrationNameModules.hasOwnProperty(registrationName)){
delete registrationNameModules[registrationName];}}}};






module.exports = EventPluginRegistry;
});
__d('EventPluginUtils',["EventConstants","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');

var invariant=require('invariant');
var warning=require('warning');









var injection={
Mount:null, 
injectMount:function(InjectedMount){
injection.Mount = InjectedMount;
if(__DEV__){
warning(
InjectedMount && InjectedMount.getNode && InjectedMount.getID, 
'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 
'module is missing getNode or getID.');}}};





var topLevelTypes=EventConstants.topLevelTypes;

function isEndish(topLevelType){
return topLevelType === topLevelTypes.topMouseUp || 
topLevelType === topLevelTypes.topTouchEnd || 
topLevelType === topLevelTypes.topTouchCancel;}


function isMoveish(topLevelType){
return topLevelType === topLevelTypes.topMouseMove || 
topLevelType === topLevelTypes.topTouchMove;}

function isStartish(topLevelType){
return topLevelType === topLevelTypes.topMouseDown || 
topLevelType === topLevelTypes.topTouchStart;}



var validateEventDispatches;
if(__DEV__){
validateEventDispatches = function(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;

var listenersIsArr=Array.isArray(dispatchListeners);
var idsIsArr=Array.isArray(dispatchIDs);
var IDsLen=idsIsArr?dispatchIDs.length:dispatchIDs?1:0;
var listenersLen=listenersIsArr?
dispatchListeners.length:
dispatchListeners?1:0;

warning(
idsIsArr === listenersIsArr && IDsLen === listenersLen, 
'EventPluginUtils: Invalid `event`.');};}









function forEachEventDispatch(event, cb){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0; i < dispatchListeners.length; i++) {
if(event.isPropagationStopped()){
break;}


cb(event, dispatchListeners[i], dispatchIDs[i]);}}else 

if(dispatchListeners){
cb(event, dispatchListeners, dispatchIDs);}}









function executeDispatch(event, listener, domID){
event.currentTarget = injection.Mount.getNode(domID);
var returnValue=listener(event, domID);
event.currentTarget = null;
return returnValue;}





function executeDispatchesInOrder(event, cb){
forEachEventDispatch(event, cb);
event._dispatchListeners = null;
event._dispatchIDs = null;}









function executeDispatchesInOrderStopAtTrueImpl(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0; i < dispatchListeners.length; i++) {
if(event.isPropagationStopped()){
break;}


if(dispatchListeners[i](event, dispatchIDs[i])){
return dispatchIDs[i];}}}else 


if(dispatchListeners){
if(dispatchListeners(event, dispatchIDs)){
return dispatchIDs;}}


return null;}





function executeDispatchesInOrderStopAtTrue(event){
var ret=executeDispatchesInOrderStopAtTrueImpl(event);
event._dispatchIDs = null;
event._dispatchListeners = null;
return ret;}











function executeDirectDispatch(event){
if(__DEV__){
validateEventDispatches(event);}

var dispatchListener=event._dispatchListeners;
var dispatchID=event._dispatchIDs;
invariant(
!Array.isArray(dispatchListener), 
'executeDirectDispatch(...): Invalid `event`.');

var res=dispatchListener?
dispatchListener(event, dispatchID):
null;
event._dispatchListeners = null;
event._dispatchIDs = null;
return res;}






function hasDispatches(event){
return !!event._dispatchListeners;}





var EventPluginUtils={
isEndish:isEndish, 
isMoveish:isMoveish, 
isStartish:isStartish, 

executeDirectDispatch:executeDirectDispatch, 
executeDispatch:executeDispatch, 
executeDispatchesInOrder:executeDispatchesInOrder, 
executeDispatchesInOrderStopAtTrue:executeDispatchesInOrderStopAtTrue, 
hasDispatches:hasDispatches, 

getNode:function(id){
return injection.Mount.getNode(id);}, 

getID:function(node){
return injection.Mount.getID(node);}, 


injection:injection};


module.exports = EventPluginUtils;
});
__d('EventConstants',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var PropagationPhases=keyMirror({bubbled:null, captured:null});




var topLevelTypes=keyMirror({
topBlur:null, 
topChange:null, 
topClick:null, 
topCompositionEnd:null, 
topCompositionStart:null, 
topCompositionUpdate:null, 
topContextMenu:null, 
topCopy:null, 
topCut:null, 
topDoubleClick:null, 
topDrag:null, 
topDragEnd:null, 
topDragEnter:null, 
topDragExit:null, 
topDragLeave:null, 
topDragOver:null, 
topDragStart:null, 
topDrop:null, 
topError:null, 
topFocus:null, 
topInput:null, 
topKeyDown:null, 
topKeyPress:null, 
topKeyUp:null, 
topLoad:null, 
topMouseDown:null, 
topMouseMove:null, 
topMouseOut:null, 
topMouseOver:null, 
topMouseUp:null, 
topPaste:null, 
topReset:null, 
topScroll:null, 
topSelectionChange:null, 
topSubmit:null, 
topTextInput:null, 
topTouchCancel:null, 
topTouchEnd:null, 
topTouchMove:null, 
topTouchStart:null, 
topWheel:null});


var EventConstants={
topLevelTypes:topLevelTypes, 
PropagationPhases:PropagationPhases};


module.exports = EventConstants;
});
__d('accumulateInto',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');















function accumulateInto(current, next){
invariant(
next != null, 
'accumulateInto(...): Accumulated items must not be null or undefined.');

if(current == null){
return next;}




var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);

if(currentIsArray && nextIsArray){
current.push.apply(current, next);
return current;}


if(currentIsArray){
current.push(next);
return current;}


if(nextIsArray){

return [current].concat(next);}


return [current, next];}


module.exports = accumulateInto;
});
__d('forEachAccumulated',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var forEachAccumulated=function(arr, cb, scope){
if(Array.isArray(arr)){
arr.forEach(cb, scope);}else 
if(arr){
cb.call(scope, arr);}};



module.exports = forEachAccumulated;
});
__d('IOSDefaultEventPluginOrder',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var IOSDefaultEventPluginOrder=[
'ResponderEventPlugin', 
'IOSNativeBridgeEventPlugin'];


module.exports = IOSDefaultEventPluginOrder;
});
__d('IOSNativeBridgeEventPlugin',["EventPropagators","NativeModules","SyntheticEvent","merge","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPropagators=require('EventPropagators');
var NativeModules=require('NativeModules');
var SyntheticEvent=require('SyntheticEvent');

var merge=require('merge');
var warning=require('warning');

var RCTUIManager=NativeModules.UIManager;

var customBubblingEventTypes=RCTUIManager.customBubblingEventTypes;
var customDirectEventTypes=RCTUIManager.customDirectEventTypes;

var allTypesByEventName={};

for(var bubblingTypeName in customBubblingEventTypes) {
allTypesByEventName[bubblingTypeName] = customBubblingEventTypes[bubblingTypeName];}


for(var directTypeName in customDirectEventTypes) {
warning(
!customBubblingEventTypes[directTypeName], 
'Event cannot be both direct and bubbling: %s', 
directTypeName);

allTypesByEventName[directTypeName] = customDirectEventTypes[directTypeName];}


var IOSNativeBridgeEventPlugin={

eventTypes:merge(customBubblingEventTypes, customDirectEventTypes), 









extractEvents:function(
topLevelType, 
topLevelTarget, 
topLevelTargetID, 
nativeEvent)
{
var bubbleDispatchConfig=customBubblingEventTypes[topLevelType];
var directDispatchConfig=customDirectEventTypes[topLevelType];
var event=SyntheticEvent.getPooled(
bubbleDispatchConfig || directDispatchConfig, 
topLevelTargetID, 
nativeEvent);

if(bubbleDispatchConfig){
EventPropagators.accumulateTwoPhaseDispatches(event);}else 
if(directDispatchConfig){
EventPropagators.accumulateDirectDispatches(event);}else 
{
return null;}

return event;}};



module.exports = IOSNativeBridgeEventPlugin;
});
__d('EventPropagators',["EventConstants","EventPluginHub","accumulateInto","forEachAccumulated"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');

var PropagationPhases=EventConstants.PropagationPhases;
var getListener=EventPluginHub.getListener;





function listenerAtPhase(id, event, propagationPhase){
var registrationName=
event.dispatchConfig.phasedRegistrationNames[propagationPhase];
return getListener(id, registrationName);}








function accumulateDirectionalDispatches(domID, upwards, event){
if(__DEV__){
if(!domID){
throw new Error('Dispatching id must not be null');}}


var phase=upwards?PropagationPhases.bubbled:PropagationPhases.captured;
var listener=listenerAtPhase(domID, event, phase);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners, listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);}}










function accumulateTwoPhaseDispatchesSingle(event){
if(event && event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
event.dispatchMarker, 
accumulateDirectionalDispatches, 
event);}}







function accumulateTwoPhaseDispatchesSingleSkipTarget(event){
if(event && event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(
event.dispatchMarker, 
accumulateDirectionalDispatches, 
event);}}










function accumulateDispatches(id, ignoredDirection, event){
if(event && event.dispatchConfig.registrationName){
var registrationName=event.dispatchConfig.registrationName;
var listener=getListener(id, registrationName);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners, listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs, id);}}}









function accumulateDirectDispatchesSingle(event){
if(event && event.dispatchConfig.registrationName){
accumulateDispatches(event.dispatchMarker, null, event);}}



function accumulateTwoPhaseDispatches(events){
forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);}


function accumulateTwoPhaseDispatchesSkipTarget(events){
forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);}


function accumulateEnterLeaveDispatches(leave, enter, fromID, toID){
EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
fromID, 
toID, 
accumulateDispatches, 
leave, 
enter);}




function accumulateDirectDispatches(events){
forEachAccumulated(events, accumulateDirectDispatchesSingle);}















var EventPropagators={
accumulateTwoPhaseDispatches:accumulateTwoPhaseDispatches, 
accumulateTwoPhaseDispatchesSkipTarget:accumulateTwoPhaseDispatchesSkipTarget, 
accumulateDirectDispatches:accumulateDirectDispatches, 
accumulateEnterLeaveDispatches:accumulateEnterLeaveDispatches};


module.exports = EventPropagators;
});
__d('SyntheticEvent',["PooledClass","Object.assign","emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');





var EventInterface={
path:null, 
type:null, 

currentTarget:emptyFunction.thatReturnsNull, 
eventPhase:null, 
bubbles:null, 
cancelable:null, 
timeStamp:function(event){
return event.timeStamp || Date.now();}, 

defaultPrevented:null, 
isTrusted:null};



















function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget){
this.dispatchConfig = dispatchConfig;
this.dispatchMarker = dispatchMarker;
this.nativeEvent = nativeEvent;
this.target = nativeEventTarget;
this.currentTarget = nativeEventTarget;

var Interface=this.constructor.Interface;
for(var propName in Interface) {
if(!Interface.hasOwnProperty(propName)){
continue;}

var normalize=Interface[propName];
if(normalize){
this[propName] = normalize(nativeEvent);}else 
{
this[propName] = nativeEvent[propName];}}



var defaultPrevented=nativeEvent.defaultPrevented != null?
nativeEvent.defaultPrevented:
nativeEvent.returnValue === false;
if(defaultPrevented){
this.isDefaultPrevented = emptyFunction.thatReturnsTrue;}else 
{
this.isDefaultPrevented = emptyFunction.thatReturnsFalse;}

this.isPropagationStopped = emptyFunction.thatReturnsFalse;}


assign(SyntheticEvent.prototype, {

preventDefault:function(){
this.defaultPrevented = true;
var event=this.nativeEvent;
if(event.preventDefault){
event.preventDefault();}else 
{
event.returnValue = false;}

this.isDefaultPrevented = emptyFunction.thatReturnsTrue;}, 


stopPropagation:function(){
var event=this.nativeEvent;
if(event.stopPropagation){
event.stopPropagation();}else 
{
event.cancelBubble = true;}

this.isPropagationStopped = emptyFunction.thatReturnsTrue;}, 







persist:function(){
this.isPersistent = emptyFunction.thatReturnsTrue;}, 







isPersistent:emptyFunction.thatReturnsFalse, 




destructor:function(){
var Interface=this.constructor.Interface;
for(var propName in Interface) {
this[propName] = null;}

this.dispatchConfig = null;
this.dispatchMarker = null;
this.nativeEvent = null;}});




SyntheticEvent.Interface = EventInterface;







SyntheticEvent.augmentClass = function(Class, Interface){
var Super=this;

var prototype=Object.create(Super.prototype);
assign(prototype, Class.prototype);
Class.prototype = prototype;
Class.prototype.constructor = Class;

Class.Interface = assign({}, Super.Interface, Interface);
Class.augmentClass = Super.augmentClass;

PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);};


PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;
});
__d('merge',["mergeInto"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";
































var mergeInto=require("mergeInto");








var merge=function(one, two){
var result={};
mergeInto(result, one);
mergeInto(result, two);
return result;};


module.exports = merge;
});
__d('mergeInto',["mergeHelpers"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

































var mergeHelpers=require("mergeHelpers");

var checkMergeObjectArg=mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg=mergeHelpers.checkMergeIntoObjectArg;







function mergeInto(one, two){
checkMergeIntoObjectArg(one);
if(two != null){
checkMergeObjectArg(two);
for(var key in two) {
if(!two.hasOwnProperty(key)){
continue;}

one[key] = two[key];}}}




module.exports = mergeInto;
});
__d('mergeHelpers',["invariant","keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';


































var invariant=require('invariant');
var keyMirror=require('keyMirror');





var MAX_MERGE_DEPTH=36;







var isTerminal=function(o){
return typeof o !== 'object' || o === null;};


var mergeHelpers={

MAX_MERGE_DEPTH:MAX_MERGE_DEPTH, 

isTerminal:isTerminal, 







normalizeMergeArg:function(arg){
return arg === undefined || arg === null?{}:arg;}, 










checkMergeArrayArgs:function(one, two){
invariant(
Array.isArray(one) && Array.isArray(two), 
'Tried to merge arrays, instead got %s and %s.', 
one, 
two);}, 







checkMergeObjectArgs:function(one, two){
mergeHelpers.checkMergeObjectArg(one);
mergeHelpers.checkMergeObjectArg(two);}, 





checkMergeObjectArg:function(arg){
invariant(
!isTerminal(arg) && !Array.isArray(arg), 
'Tried to merge an object, instead got %s.', 
arg);}, 






checkMergeIntoObjectArg:function(arg){
invariant(
(!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg), 
'Tried to merge into an object, instead got %s.', 
arg);}, 









checkMergeLevel:function(level){
invariant(
level < MAX_MERGE_DEPTH, 
'Maximum deep merge depth exceeded. You may be attempting to merge ' + 
'circular structures in an unsupported way.');}, 








checkArrayStrategy:function(strategy){
invariant(
strategy === undefined || strategy in mergeHelpers.ArrayStrategies, 
'You must provide an array strategy to deep merge functions to ' + 
'instruct the deep merge how to resolve merging two arrays.');}, 










ArrayStrategies:keyMirror({
Clobber:true, 
IndexByIndex:true})};




module.exports = mergeHelpers;
});
__d('NodeHandle',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




























































NodeHandle={



injection:{
injectImplementation:function(Impl){
NodeHandle._Implementation = Impl;}}, 



_Implementation:null, 





getRootNodeID:function(nodeHandle){
return NodeHandle._Implementation.getRootNodeID(nodeHandle);}};



module.exports = NodeHandle;
});
__d('ReactDefaultBatchingStrategy',["ReactUpdates","Transaction","Object.assign","emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactUpdates=require('ReactUpdates');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');

var RESET_BATCHED_UPDATES={
initialize:emptyFunction, 
close:function(){
ReactDefaultBatchingStrategy.isBatchingUpdates = false;}};



var FLUSH_BATCHED_UPDATES={
initialize:emptyFunction, 
close:ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)};


var TRANSACTION_WRAPPERS=[FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction(){
this.reinitializeTransaction();}


assign(
ReactDefaultBatchingStrategyTransaction.prototype, 
Transaction.Mixin, 
{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;}});




var transaction=new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy={
isBatchingUpdates:false, 





batchedUpdates:function(callback, a, b, c, d, e){
var alreadyBatchingUpdates=ReactDefaultBatchingStrategy.isBatchingUpdates;

ReactDefaultBatchingStrategy.isBatchingUpdates = true;


if(alreadyBatchingUpdates){
callback(a, b, c, d, e);}else 
{
transaction.perform(callback, null, a, b, c, d, e);}}};




module.exports = ReactDefaultBatchingStrategy;
});
__d('ReactNativeComponentEnvironment',["ReactNativeDOMIDOperations","ReactNativeReconcileTransaction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeDOMIDOperations=require('ReactNativeDOMIDOperations');
var ReactNativeReconcileTransaction=require('ReactNativeReconcileTransaction');

var ReactNativeComponentEnvironment={

processChildrenUpdates:ReactNativeDOMIDOperations.dangerouslyProcessChildrenUpdates, 

replaceNodeWithMarkupByID:ReactNativeDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID, 






unmountIDFromEnvironment:function(){}, 






clearNode:function(){}, 



ReactReconcileTransaction:ReactNativeReconcileTransaction};


module.exports = ReactNativeComponentEnvironment;
});
__d('ReactNativeDOMIDOperations',["ReactNativeTagHandles","ReactMultiChildUpdateTypes","NativeModules","ReactPerf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');
var RCTUIManager=require('NativeModules').UIManager;
var ReactPerf=require('ReactPerf');













var dangerouslyProcessChildrenUpdates=function(childrenUpdates, markupList){
if(!childrenUpdates.length){
return;}

var byContainerTag={};


for(var i=0; i < childrenUpdates.length; i++) {
var update=childrenUpdates[i];
var containerTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(update.parentID);
var updates=byContainerTag[containerTag] || (byContainerTag[containerTag] = {});
if(update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING){
(updates.moveFromIndices || (updates.moveFromIndices = [])).push(update.fromIndex);
(updates.moveToIndices || (updates.moveToIndices = [])).push(update.toIndex);}else 
if(update.type === ReactMultiChildUpdateTypes.REMOVE_NODE){
(updates.removeAtIndices || (updates.removeAtIndices = [])).push(update.fromIndex);}else 
if(update.type === ReactMultiChildUpdateTypes.INSERT_MARKUP){
var mountImage=markupList[update.markupIndex];
var tag=mountImage.tag;
var rootNodeID=mountImage.rootNodeID;
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(rootNodeID, tag);
(updates.addAtIndices || (updates.addAtIndices = [])).push(update.toIndex);
(updates.addChildTags || (updates.addChildTags = [])).push(tag);}}





for(var updateParentTagString in byContainerTag) {
var updateParentTagNumber=+updateParentTagString;
var childUpdatesToSend=byContainerTag[updateParentTagNumber];
RCTUIManager.manageChildren(
updateParentTagNumber, 
childUpdatesToSend.moveFromIndices, 
childUpdatesToSend.moveToIndices, 
childUpdatesToSend.addChildTags, 
childUpdatesToSend.addAtIndices, 
childUpdatesToSend.removeAtIndices);}};








var ReactNativeDOMIDOperations={
dangerouslyProcessChildrenUpdates:ReactPerf.measure(

'ReactDOMIDOperations', 
'dangerouslyProcessChildrenUpdates', 
dangerouslyProcessChildrenUpdates), 








dangerouslyReplaceNodeWithMarkupByID:ReactPerf.measure(
'ReactDOMIDOperations', 
'dangerouslyReplaceNodeWithMarkupByID', 
function(id, mountImage){
var oldTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(id);
RCTUIManager.replaceExistingNonRootView(oldTag, mountImage.tag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(id, mountImage.tag);})};




module.exports = ReactNativeDOMIDOperations;
});
__d('ReactMultiChildUpdateTypes',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');









var ReactMultiChildUpdateTypes=keyMirror({
INSERT_MARKUP:null, 
MOVE_EXISTING:null, 
REMOVE_NODE:null, 
TEXT_CONTENT:null});


module.exports = ReactMultiChildUpdateTypes;
});
__d('ReactNativeReconcileTransaction',["CallbackQueue","PooledClass","Transaction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var Transaction=require('Transaction');





var ON_DOM_READY_QUEUEING={



initialize:function(){
this.reactMountReady.reset();}, 





close:function(){
this.reactMountReady.notifyAll();}};








var TRANSACTION_WRAPPERS=[ON_DOM_READY_QUEUEING];















function ReactNativeReconcileTransaction(){
this.reinitializeTransaction();
this.reactMountReady = CallbackQueue.getPooled(null);}


var Mixin={







getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;}, 






getReactMountReady:function(){
return this.reactMountReady;}, 






destructor:function(){
CallbackQueue.release(this.reactMountReady);
this.reactMountReady = null;}};



Object.assign(
ReactNativeReconcileTransaction.prototype, 
Transaction.Mixin, 
ReactNativeReconcileTransaction, 
Mixin);


PooledClass.addPoolingTo(ReactNativeReconcileTransaction);

module.exports = ReactNativeReconcileTransaction;
});
__d('ReactNativeGlobalInteractionHandler',["InteractionManager"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var InteractionManager=require('InteractionManager');



var interactionHandle=null;

var ReactNativeGlobalInteractionHandler={
onChange:function(numberActiveTouches){
if(numberActiveTouches === 0){
if(interactionHandle){
InteractionManager.clearInteractionHandle(interactionHandle);
interactionHandle = null;}}else 

if(!interactionHandle){
interactionHandle = InteractionManager.createInteractionHandle();}}};




module.exports = ReactNativeGlobalInteractionHandler;
});
__d('InteractionManager',["ErrorUtils","EventEmitter","Set","invariant","keyMirror","setImmediate"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ErrorUtils=require('ErrorUtils');
var EventEmitter=require('EventEmitter');
var Set=require('Set');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var setImmediate=require('setImmediate');



var _emitter=new EventEmitter();
var _interactionSet=new Set();
var _addInteractionSet=new Set();
var _deleteInteractionSet=new Set();
var _nextUpdateHandle=null;
var _queue=[];
var _inc=0;




































var InteractionManager={
Events:keyMirror({
interactionStart:true, 
interactionComplete:true}), 





runAfterInteractions:function(callback){
invariant(
typeof callback === 'function', 
'Must specify a function to schedule.');

scheduleUpdate();
_queue.push(callback);}, 





createInteractionHandle:function(){
scheduleUpdate();
var handle=++_inc;
_addInteractionSet.add(handle);
return handle;}, 





clearInteractionHandle:function(handle){
invariant(
!!handle, 
'Must provide a handle to clear.');

scheduleUpdate();
_addInteractionSet.delete(handle);
_deleteInteractionSet.add(handle);}, 


addListener:_emitter.addListener.bind(_emitter)};





function scheduleUpdate(){
if(!_nextUpdateHandle){
_nextUpdateHandle = setImmediate(processUpdate);}}






function processUpdate(){
_nextUpdateHandle = null;

var interactionCount=_interactionSet.size;
_addInteractionSet.forEach(function(handle){return (
_interactionSet.add(handle));});

_deleteInteractionSet.forEach(function(handle){return (
_interactionSet.delete(handle));});

var nextInteractionCount=_interactionSet.size;

if(interactionCount !== 0 && nextInteractionCount === 0){

_emitter.emit(InteractionManager.Events.interactionComplete);}else 
if(interactionCount === 0 && nextInteractionCount !== 0){

_emitter.emit(InteractionManager.Events.interactionStart);}



if(nextInteractionCount === 0){
var queue=_queue;
_queue = [];
queue.forEach(function(callback){
ErrorUtils.applyWithGuard(callback);});}



_addInteractionSet.clear();
_deleteInteractionSet.clear();}


module.exports = InteractionManager;
});
__d('Set',["Map","toIterator","_shouldPolyfillES6Collection"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var Map=require('Map');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global, undefined){





if(!_shouldPolyfillES6Collection('Set')){
return global.Set;}var 











































Set=(function(){










function Set(iterable){_classCallCheck(this, Set);
if(this == null || 
typeof this !== 'object' && typeof this !== 'function'){
throw new TypeError('Wrong set object type.');}


initSet(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
this.add(next.value);}}}_createClass(Set, [{key:'add', value:












function add(value){
this._map.set(value, value);
this.size = this._map.size;
return this;}}, {key:'clear', value:







function clear(){
initSet(this);}}, {key:'delete', value:











function _delete(value){
var ret=this._map.delete(value);
this.size = this._map.size;
return ret;}}, {key:'entries', value:







function entries(){
return this._map.entries();}}, {key:'forEach', value:









function forEach(callback){
var thisArg=arguments[1];
var it=this._map.keys();
var next;
while(!(next = it.next()).done) {
callback.call(thisArg, next.value, next.value, this);}}}, {key:'has', value:











function has(value){
return this._map.has(value);}}, {key:'values', value:







function values(){
return this._map.values();}}]);return Set;})();




Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;


Set.prototype.keys = Set.prototype.values;

function initSet(set){
set._map = new Map();
set.size = set._map.size;}


return Set;})(
Function('return this')());
});
__d('Map',["guid","isNode","toIterator","_shouldPolyfillES6Collection"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var guid=require('guid');
var isNode=require('isNode');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global, undefined){




if(!_shouldPolyfillES6Collection('Map')){
return global.Map;}

























































var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VALUE='key+value';



var KEY_PREFIX='$map_';



var SECRET_SIZE_PROP;
if(__DEV__){
SECRET_SIZE_PROP = '$size' + guid();}



var OLD_IE_HASH_PREFIX='IE_HASH_';var 

Map=(function(){










function Map(iterable){_classCallCheck(this, Map);
if(!isObject(this)){
throw new TypeError('Wrong map object type.');}


initMap(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
if(!isObject(next.value)){
throw new TypeError('Expected iterable items to be pair objects.');}

this.set(next.value[0], next.value[1]);}}}_createClass(Map, [{key:'clear', value:








function clear(){
initMap(this);}}, {key:'has', value:









function has(key){
var index=getIndex(this, key);
return !!(index != null && this._mapData[index]);}}, {key:'set', value:










function set(key, value){
var index=getIndex(this, key);

if(index != null && this._mapData[index]){
this._mapData[index][1] = value;}else 
{
index = this._mapData.push([
key, 
value]) - 
1;
setIndex(this, key, index);
if(__DEV__){
this[SECRET_SIZE_PROP] += 1;}else 
{
this.size += 1;}}



return this;}}, {key:'get', value:









function get(key){
var index=getIndex(this, key);
if(index == null){
return undefined;}else 
{
return this._mapData[index][1];}}}, {key:'delete', value:











function _delete(key){
var index=getIndex(this, key);
if(index != null && this._mapData[index]){
setIndex(this, key, undefined);
this._mapData[index] = undefined;
if(__DEV__){
this[SECRET_SIZE_PROP] -= 1;}else 
{
this.size -= 1;}

return true;}else 
{
return false;}}}, {key:'entries', value:










function entries(){
return new MapIterator(this, KIND_KEY_VALUE);}}, {key:'keys', value:








function keys(){
return new MapIterator(this, KIND_KEY);}}, {key:'values', value:








function values(){
return new MapIterator(this, KIND_VALUE);}}, {key:'forEach', value:











function forEach(callback, thisArg){
if(typeof callback !== 'function'){
throw new TypeError('Callback must be callable.');}


var boundCallback=callback.bind(thisArg || undefined);
var mapData=this._mapData;




for(var i=0; i < mapData.length; i++) {
var entry=mapData[i];
if(entry != null){
boundCallback(entry[1], entry[0], this);}}}}]);return Map;})();






Map.prototype[toIterator.ITERATOR_SYMBOL] = Map.prototype.entries;var 

MapIterator=(function(){









function MapIterator(map, kind){_classCallCheck(this, MapIterator);
if(!(isObject(map) && map['_mapData'])){
throw new TypeError('Object is not a map.');}


if([KIND_KEY, KIND_KEY_VALUE, KIND_VALUE].indexOf(kind) === -1){
throw new Error('Invalid iteration kind.');}


this._map = map;
this._nextIndex = 0;
this._kind = kind;}_createClass(MapIterator, [{key:'next', value:








function next(){
if(!this instanceof Map){
throw new TypeError('Expected to be called on a MapIterator.');}


var map=this._map;
var index=this._nextIndex;
var kind=this._kind;

if(map == null){
return createIterResultObject(undefined, true);}


var entries=map['_mapData'];

while(index < entries.length) {
var record=entries[index];

index += 1;
this._nextIndex = index;

if(record){
if(kind === KIND_KEY){
return createIterResultObject(record[0], false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(record[1], false);}else 
if(kind){
return createIterResultObject(record, false);}}}




this._map = undefined;

return createIterResultObject(undefined, true);}}]);return MapIterator;})();






MapIterator.prototype[toIterator.ITERATOR_SYMBOL] = function(){
return this;};













function getIndex(map, key){
if(isObject(key)){
var hash=getHash(key);
return map._objectIndex[hash];}else 
{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
return map._stringIndex[prefixedKey];}else 
{
return map._otherIndex[prefixedKey];}}}










function setIndex(map, key, index){
var shouldDelete=index == null;

if(isObject(key)){
var hash=getHash(key);
if(shouldDelete){
delete map._objectIndex[hash];}else 
{
map._objectIndex[hash] = index;}}else 

{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
if(shouldDelete){
delete map._stringIndex[prefixedKey];}else 
{
map._stringIndex[prefixedKey] = index;}}else 

{
if(shouldDelete){
delete map._otherIndex[prefixedKey];}else 
{
map._otherIndex[prefixedKey] = index;}}}}










function initMap(map){






map._mapData = [];







map._objectIndex = {};


map._stringIndex = {};


map._otherIndex = {};







if(__DEV__){
if(isES5){



if(map.hasOwnProperty(SECRET_SIZE_PROP)){
map[SECRET_SIZE_PROP] = 0;}else 
{
Object.defineProperty(map, SECRET_SIZE_PROP, {
value:0, 
writable:true});

Object.defineProperty(map, 'size', {
set:function(v){
console.error(
'PLEASE FIX ME: You are changing the map size property which ' + 
'should not be writable and will break in production.');

throw new Error('The map size property is not writable.');}, 

get:function(){return map[SECRET_SIZE_PROP];}});}




return;}}





map.size = 0;}








function isObject(o){
return o != null && (typeof o === 'object' || typeof o === 'function');}









function createIterResultObject(value, done){
return {value:value, done:done};}



var isES5=(function(){
try{
Object.defineProperty({}, 'x', {});
return true;}
catch(e) {
return false;}})();









function isExtensible(o){
if(!isES5){
return true;}else 
{
return Object.isExtensible(o);}}











function getIENodeHash(node){
var uniqueID;
switch(node.nodeType){
case 1:
uniqueID = node.uniqueID;
break;
case 9:
uniqueID = node.documentElement.uniqueID;
break;
default:
return null;}


if(uniqueID){
return OLD_IE_HASH_PREFIX + uniqueID;}else 
{
return null;}}



var getHash=(function(){
var propIsEnumerable=Object.prototype.propertyIsEnumerable;
var hashProperty=guid();
var hashCounter=0;







return function getHash(o){
if(o[hashProperty]){
return o[hashProperty];}else 
if(!isES5 && 
o.propertyIsEnumerable && 
o.propertyIsEnumerable[hashProperty]){
return o.propertyIsEnumerable[hashProperty];}else 
if(!isES5 && 
isNode(o) && 
getIENodeHash(o)){
return getIENodeHash(o);}else 
if(!isES5 && o[hashProperty]){
return o[hashProperty];}


if(isExtensible(o)){
hashCounter += 1;
if(isES5){
Object.defineProperty(o, hashProperty, {
enumerable:false, 
writable:false, 
configurable:false, 
value:hashCounter});}else 

if(o.propertyIsEnumerable){




o.propertyIsEnumerable = function(){
return propIsEnumerable.apply(this, arguments);};

o.propertyIsEnumerable[hashProperty] = hashCounter;}else 
if(isNode(o)){




o[hashProperty] = hashCounter;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}

return hashCounter;}else 
{
throw new Error('Non-extensible objects are not allowed as keys.');}};})();




return Map;})(
Function('return this')());
});
__d('guid',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 

























guid(){
return 'f' + (Math.random() * (1 << 30)).toString(16).replace('.', '');}


module.exports = guid;
});
__d('isNode',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 















isNode(object){
return !!(object && (
typeof Node === 'function'?object instanceof Node:
typeof object === 'object' && 
typeof object.nodeType === 'number' && 
typeof object.nodeName === 'string'));}



module.exports = isNode;
});
__d('toIterator',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}






























var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VAL='key+value';

var ITERATOR_SYMBOL=typeof Symbol === 'function'?
Symbol.iterator:
'@@iterator';

var toIterator=(function(){
if(!(Array.prototype[ITERATOR_SYMBOL] && 
String.prototype[ITERATOR_SYMBOL])){

return (function(){var 
ArrayIterator=(function(){

function ArrayIterator(array, kind){_classCallCheck(this, ArrayIterator);
if(!Array.isArray(array)){
throw new TypeError('Object is not an Array');}

this._iteratedObject = array;
this._kind = kind;
this._nextIndex = 0;}_createClass(ArrayIterator, [{key:'next', value:



function next(){
if(!this instanceof ArrayIterator){
throw new TypeError('Object is not an ArrayIterator');}


if(this._iteratedObject == null){
return createIterResultObject(undefined, true);}


var array=this._iteratedObject;
var len=this._iteratedObject.length;
var index=this._nextIndex;
var kind=this._kind;

if(index >= len){
this._iteratedObject = undefined;
return createIterResultObject(undefined, true);}


this._nextIndex = index + 1;

if(kind === KIND_KEY){
return createIterResultObject(index, false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(array[index], false);}else 
if(kind === KIND_KEY_VAL){
return createIterResultObject([index, array[index]], false);}}}, {key:




'@@iterator', value:function iterator(){
return this;}}]);return ArrayIterator;})();var 



StringIterator=(function(){

function StringIterator(string){_classCallCheck(this, StringIterator);
if(typeof string !== 'string'){
throw new TypeError('Object is not a string');}

this._iteratedString = string;
this._nextIndex = 0;}_createClass(StringIterator, [{key:'next', value:



function next(){
if(!this instanceof StringIterator){
throw new TypeError('Object is not a StringIterator');}


if(this._iteratedString == null){
return createIterResultObject(undefined, true);}


var index=this._nextIndex;
var s=this._iteratedString;
var len=s.length;

if(index >= len){
this._iteratedString = undefined;
return createIterResultObject(undefined, true);}


var ret;
var first=s.charCodeAt(index);

if(first < 0xD800 || first > 0xDBFF || index + 1 === len){
ret = s[index];}else 
{
var second=s.charCodeAt(index + 1);
if(second < 0xDC00 || second > 0xDFFF){
ret = s[index];}else 
{
ret = s[index] + s[index + 1];}}



this._nextIndex = index + ret.length;

return createIterResultObject(ret, false);}}, {key:



'@@iterator', value:function iterator(){
return this;}}]);return StringIterator;})();




function createIterResultObject(value, done){
return {value:value, done:done};}


return function(object, kind){
if(typeof object === 'string'){
return new StringIterator(object);}else 
if(Array.isArray(object)){
return new ArrayIterator(object, kind || KIND_VALUE);}else 
{
return object[ITERATOR_SYMBOL]();}};})();}else 



{
return function(object){
return object[ITERATOR_SYMBOL]();};}})();








Object.assign(toIterator, {
KIND_KEY:KIND_KEY, 
KIND_VALUE:KIND_VALUE, 
KIND_KEY_VAL:KIND_KEY_VAL, 
ITERATOR_SYMBOL:ITERATOR_SYMBOL});


module.exports = toIterator;
});
__d('_shouldPolyfillES6Collection',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var _get=function get(object, property, receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object, property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent, property, receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}

























function shouldPolyfillES6Collection(collectionName){
var Collection=global[collectionName];
if(Collection == null){
return true;}


var proto=Collection.prototype;


return Collection == null || 
typeof Collection !== 'function' || 
typeof proto.clear !== 'function' || 
new Collection().size !== 0 || 
typeof proto.keys !== 'function' || 
typeof proto.forEach !== 'function' || 
isCallableWithoutNew(Collection) || 
!supportsSubclassing(Collection);}







function supportsSubclassing(Collection){var 
SubCollection=(function(_Collection){function SubCollection(){_classCallCheck(this, SubCollection);_get(Object.getPrototypeOf(SubCollection.prototype), 'constructor', this).apply(this, arguments);}_inherits(SubCollection, _Collection);return SubCollection;})(Collection);
try{
var s=new SubCollection([]);


s.size;
return s instanceof Collection;}
catch(e) {
return false;}}








function isCallableWithoutNew(Collection){
try{
Collection();}
catch(e) {
return false;}

return true;}


module.exports = shouldPolyfillES6Collection;
});
__d('ReactNativeGlobalResponderHandler',["NativeModules","ReactNativeTagHandles"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTUIManager=require('NativeModules').UIManager;
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var ReactNativeGlobalResponderHandler={
onChange:function(from, to, blockNativeResponder){
if(to !== null){
RCTUIManager.setJSResponder(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(to), 
blockNativeResponder);}else 

{
RCTUIManager.clearJSResponder();}}};




module.exports = ReactNativeGlobalResponderHandler;
});
__d('ReactNativeTextComponent',["ReactNativeTagHandles","NativeModules","Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var RCTUIManager=require('NativeModules').UIManager;

var assign=require('Object.assign');

var ReactNativeTextComponent=function(props){};



assign(ReactNativeTextComponent.prototype, {

construct:function(text){

this._currentElement = text;
this._stringText = '' + text;
this._rootNodeID = null;}, 


mountComponent:function(rootID, transaction, context){
this._rootNodeID = rootID;
var tag=ReactNativeTagHandles.allocateTag();
var nativeTopRootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootID);
RCTUIManager.createView(
tag, 
'RCTRawText', 
nativeTopRootID?ReactNativeTagHandles.rootNodeIDToTag[nativeTopRootID]:null, 
{text:this._stringText});

return {
rootNodeID:rootID, 
tag:tag};}, 



receiveComponent:function(nextText, transaction, context){
if(nextText !== this._currentElement){
this._currentElement = nextText;
var nextStringText='' + nextText;
if(nextStringText !== this._stringText){
this._stringText = nextStringText;
RCTUIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(
this._rootNodeID), 

'RCTRawText', 
{text:this._stringText});}}}, 





unmountComponent:function(){
this._currentElement = null;
this._stringText = null;
this._rootNodeID = null;}});




module.exports = ReactNativeTextComponent;
});
__d('ResponderEventPlugin',["EventConstants","EventPluginUtils","EventPropagators","NodeHandle","ReactInstanceHandles","ResponderSyntheticEvent","ResponderTouchHistoryStore","accumulate","invariant","keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var EventConstants=require('EventConstants');
var EventPluginUtils=require('EventPluginUtils');
var EventPropagators=require('EventPropagators');
var NodeHandle=require('NodeHandle');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ResponderSyntheticEvent=require('ResponderSyntheticEvent');
var ResponderTouchHistoryStore=require('ResponderTouchHistoryStore');

var accumulate=require('accumulate');
var invariant=require('invariant');
var keyOf=require('keyOf');

var isStartish=EventPluginUtils.isStartish;
var isMoveish=EventPluginUtils.isMoveish;
var isEndish=EventPluginUtils.isEndish;
var executeDirectDispatch=EventPluginUtils.executeDirectDispatch;
var hasDispatches=EventPluginUtils.hasDispatches;
var executeDispatchesInOrderStopAtTrue=
EventPluginUtils.executeDispatchesInOrderStopAtTrue;





var responderID=null;





var trackedTouchCount=0;




var previousActiveTouches=0;

var changeResponder=function(nextResponderID, blockNativeResponder){
var oldResponderID=responderID;
responderID = nextResponderID;
if(ResponderEventPlugin.GlobalResponderHandler !== null){
ResponderEventPlugin.GlobalResponderHandler.onChange(
oldResponderID, 
nextResponderID, 
blockNativeResponder);}};




var eventTypes={




startShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onStartShouldSetResponder:null}), 
captured:keyOf({onStartShouldSetResponderCapture:null})}}, 












scrollShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onScrollShouldSetResponder:null}), 
captured:keyOf({onScrollShouldSetResponderCapture:null})}}, 










selectionChangeShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onSelectionChangeShouldSetResponder:null}), 
captured:keyOf({onSelectionChangeShouldSetResponderCapture:null})}}, 







moveShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onMoveShouldSetResponder:null}), 
captured:keyOf({onMoveShouldSetResponderCapture:null})}}, 






responderStart:{registrationName:keyOf({onResponderStart:null})}, 
responderMove:{registrationName:keyOf({onResponderMove:null})}, 
responderEnd:{registrationName:keyOf({onResponderEnd:null})}, 
responderRelease:{registrationName:keyOf({onResponderRelease:null})}, 
responderTerminationRequest:{
registrationName:keyOf({onResponderTerminationRequest:null})}, 

responderGrant:{registrationName:keyOf({onResponderGrant:null})}, 
responderReject:{registrationName:keyOf({onResponderReject:null})}, 
responderTerminate:{registrationName:keyOf({onResponderTerminate:null})}};






































































































































































































function setResponderAndExtractTransfer(
topLevelType, 
topLevelTargetID, 
nativeEvent){
var shouldSetEventType=
isStartish(topLevelType)?eventTypes.startShouldSetResponder:
isMoveish(topLevelType)?eventTypes.moveShouldSetResponder:
topLevelType === EventConstants.topLevelTypes.topSelectionChange?
eventTypes.selectionChangeShouldSetResponder:
eventTypes.scrollShouldSetResponder;


var bubbleShouldSetFrom=!responderID?
topLevelTargetID:
ReactInstanceHandles._getFirstCommonAncestorID(responderID, topLevelTargetID);





var skipOverBubbleShouldSetFrom=bubbleShouldSetFrom === responderID;
var shouldSetEvent=ResponderSyntheticEvent.getPooled(
shouldSetEventType, 
bubbleShouldSetFrom, 
nativeEvent);

shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
if(skipOverBubbleShouldSetFrom){
EventPropagators.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);}else 
{
EventPropagators.accumulateTwoPhaseDispatches(shouldSetEvent);}

var wantsResponderID=executeDispatchesInOrderStopAtTrue(shouldSetEvent);
if(!shouldSetEvent.isPersistent()){
shouldSetEvent.constructor.release(shouldSetEvent);}


if(!wantsResponderID || wantsResponderID === responderID){
return null;}

var extracted;
var grantEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderGrant, 
wantsResponderID, 
nativeEvent);

grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;

EventPropagators.accumulateDirectDispatches(grantEvent);
var blockNativeResponder=executeDirectDispatch(grantEvent) === true;
if(responderID){

var terminationRequestEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderTerminationRequest, 
responderID, 
nativeEvent);

terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminationRequestEvent);
var shouldSwitch=!hasDispatches(terminationRequestEvent) || 
executeDirectDispatch(terminationRequestEvent);
if(!terminationRequestEvent.isPersistent()){
terminationRequestEvent.constructor.release(terminationRequestEvent);}


if(shouldSwitch){
var terminateType=eventTypes.responderTerminate;
var terminateEvent=ResponderSyntheticEvent.getPooled(
terminateType, 
responderID, 
nativeEvent);

terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminateEvent);
extracted = accumulate(extracted, [grantEvent, terminateEvent]);
changeResponder(wantsResponderID, blockNativeResponder);}else 
{
var rejectEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderReject, 
wantsResponderID, 
nativeEvent);

rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(rejectEvent);
extracted = accumulate(extracted, rejectEvent);}}else 

{
extracted = accumulate(extracted, grantEvent);
changeResponder(wantsResponderID, blockNativeResponder);}

return extracted;}










function canTriggerTransfer(topLevelType, topLevelTargetID){
return topLevelTargetID && (
topLevelType === EventConstants.topLevelTypes.topScroll || 
trackedTouchCount > 0 && 
topLevelType === EventConstants.topLevelTypes.topSelectionChange || 
isStartish(topLevelType) || 
isMoveish(topLevelType));}










function noResponderTouches(nativeEvent){
var touches=nativeEvent.touches;
if(!touches || touches.length === 0){
return true;}

for(var i=0; i < touches.length; i++) {
var activeTouch=touches[i];
var target=activeTouch.target;
if(target !== null && target !== undefined && target !== 0){

var commonAncestor=
ReactInstanceHandles._getFirstCommonAncestorID(
responderID, 
NodeHandle.getRootNodeID(target));

if(commonAncestor === responderID){
return false;}}}



return true;}



var ResponderEventPlugin={

getResponderID:function(){
return responderID;}, 


eventTypes:eventTypes, 













extractEvents:function(
topLevelType, 
topLevelTarget, 
topLevelTargetID, 
nativeEvent){

if(isStartish(topLevelType)){
trackedTouchCount += 1;}else 
if(isEndish(topLevelType)){
trackedTouchCount -= 1;
invariant(
trackedTouchCount >= 0, 
'Ended a touch event which was not counted in trackedTouchCount.');}



ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

var extracted=canTriggerTransfer(topLevelType, topLevelTargetID)?
setResponderAndExtractTransfer(topLevelType, topLevelTargetID, nativeEvent):
null;










var isResponderTouchStart=responderID && isStartish(topLevelType);
var isResponderTouchMove=responderID && isMoveish(topLevelType);
var isResponderTouchEnd=responderID && isEndish(topLevelType);
var incrementalTouch=
isResponderTouchStart?eventTypes.responderStart:
isResponderTouchMove?eventTypes.responderMove:
isResponderTouchEnd?eventTypes.responderEnd:
null;

if(incrementalTouch){
var gesture=
ResponderSyntheticEvent.getPooled(incrementalTouch, responderID, nativeEvent);
gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(gesture);
extracted = accumulate(extracted, gesture);}


var isResponderTerminate=
responderID && 
topLevelType === EventConstants.topLevelTypes.topTouchCancel;
var isResponderRelease=
responderID && 
!isResponderTerminate && 
isEndish(topLevelType) && 
noResponderTouches(nativeEvent);
var finalTouch=
isResponderTerminate?eventTypes.responderTerminate:
isResponderRelease?eventTypes.responderRelease:
null;
if(finalTouch){
var finalEvent=
ResponderSyntheticEvent.getPooled(finalTouch, responderID, nativeEvent);
finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(finalEvent);
extracted = accumulate(extracted, finalEvent);
changeResponder(null);}


var numberActiveTouches=
ResponderTouchHistoryStore.touchHistory.numberActiveTouches;
if(ResponderEventPlugin.GlobalInteractionHandler && 
numberActiveTouches !== previousActiveTouches){
ResponderEventPlugin.GlobalInteractionHandler.onChange(
numberActiveTouches);}


previousActiveTouches = numberActiveTouches;

return extracted;}, 


GlobalResponderHandler:null, 
GlobalInteractionHandler:null, 

injection:{





injectGlobalResponderHandler:function(GlobalResponderHandler){
ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;}, 






injectGlobalInteractionHandler:function(GlobalInteractionHandler){
ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;}}};




module.exports = ResponderEventPlugin;
});
__d('ResponderSyntheticEvent',["SyntheticEvent"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";




















var SyntheticEvent=require("SyntheticEvent");






var ResponderEventInterface={
touchHistory:function(nativeEvent){
return null;}};









function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent){
SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);}


SyntheticEvent.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);

module.exports = ResponderSyntheticEvent;
});
__d('ResponderTouchHistoryStore',["EventPluginUtils","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





var EventPluginUtils=require('EventPluginUtils');

var invariant=require('invariant');

var isMoveish=EventPluginUtils.isMoveish;
var isStartish=EventPluginUtils.isStartish;
var isEndish=EventPluginUtils.isEndish;

var MAX_TOUCH_BANK=20;
















var touchHistory={
touchBank:[], 
numberActiveTouches:0, 



indexOfSingleActiveTouch:-1, 
mostRecentTimeStamp:0};


var timestampForTouch=function(touch){



return touch.timeStamp || touch.timestamp;};







var initializeTouchData=function(touch){
return {
touchActive:true, 
startTimeStamp:timestampForTouch(touch), 
startPageX:touch.pageX, 
startPageY:touch.pageY, 
currentPageX:touch.pageX, 
currentPageY:touch.pageY, 
currentTimeStamp:timestampForTouch(touch), 
previousPageX:touch.pageX, 
previousPageY:touch.pageY, 
previousTimeStamp:timestampForTouch(touch)};};



var reinitializeTouchTrack=function(touchTrack, touch){
touchTrack.touchActive = true;
touchTrack.startTimeStamp = timestampForTouch(touch);
touchTrack.startPageX = touch.pageX;
touchTrack.startPageY = touch.pageY;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchTrack.previousPageX = touch.pageX;
touchTrack.previousPageY = touch.pageY;
touchTrack.previousTimeStamp = timestampForTouch(touch);};


var validateTouch=function(touch){
var identifier=touch.identifier;
invariant(identifier != null, 'Touch object is missing identifier');
if(identifier > MAX_TOUCH_BANK){
console.warn(
'Touch identifier ' + identifier + ' is greater than maximum ' + 
'supported ' + MAX_TOUCH_BANK + ' which causes performance issues ' + 
'backfilling array locations for all of the indices.');}};




var recordStartTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var identifier=touch.identifier;
var touchTrack=touchBank[identifier];
if(__DEV__){
validateTouch(touch);}

if(!touchTrack){
touchBank[touch.identifier] = initializeTouchData(touch);}else 
{
reinitializeTouchTrack(touchTrack, touch);}

touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var recordMoveTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack, 'Touch data should have been recorded on start');}

touchTrack.touchActive = true;
touchTrack.previousPageX = touchTrack.currentPageX;
touchTrack.previousPageY = touchTrack.currentPageY;
touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var recordEndTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack, 'Touch data should have been recorded on start');}

touchTrack.previousPageX = touchTrack.currentPageX;
touchTrack.previousPageY = touchTrack.currentPageY;
touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchTrack.touchActive = false;
touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var ResponderTouchHistoryStore={
recordTouchTrack:function(topLevelType, nativeEvent){
var touchBank=touchHistory.touchBank;
if(isMoveish(topLevelType)){
nativeEvent.changedTouches.forEach(recordMoveTouchData);}else 
if(isStartish(topLevelType)){
nativeEvent.changedTouches.forEach(recordStartTouchData);
touchHistory.numberActiveTouches = nativeEvent.touches.length;
if(touchHistory.numberActiveTouches === 1){
touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;}}else 

if(isEndish(topLevelType)){
nativeEvent.changedTouches.forEach(recordEndTouchData);
touchHistory.numberActiveTouches = nativeEvent.touches.length;
if(touchHistory.numberActiveTouches === 1){
for(var i=0; i < touchBank.length; i++) {
var touchTrackToCheck=touchBank[i];
if(touchTrackToCheck != null && touchTrackToCheck.touchActive){
touchHistory.indexOfSingleActiveTouch = i;
break;}}


if(__DEV__){
var activeTouchData=touchBank[touchHistory.indexOfSingleActiveTouch];
var foundActive=activeTouchData != null && !!activeTouchData.touchActive;
invariant(foundActive, 'Cannot find single active touch');}}}}, 





touchHistory:touchHistory};



module.exports = ResponderTouchHistoryStore;
});
__d('accumulate',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');








function accumulate(current, next){
invariant(
next != null, 
'accumulate(...): Accumulated items must be not be null or undefined.');

if(current == null){
return next;}else 
{


var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);
if(currentIsArray){
return current.concat(next);}else 
{
if(nextIsArray){
return [current].concat(next);}else 
{
return [current, next];}}}}





module.exports = accumulate;
});
__d('UniversalWorkerNodeHandle',["ReactNativeTagHandles","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 



ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');

var UniversalWorkerNodeHandle={
getRootNodeID:function(nodeHandle){
invariant(
nodeHandle !== undefined && nodeHandle !== null && nodeHandle !== 0, 
'No node handle defined');

return ReactNativeTagHandles.tagToRootNodeID[nodeHandle];}};



module.exports = UniversalWorkerNodeHandle;
});
__d('createReactNativeComponentClass',["ReactNativeBaseComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactNativeBaseComponent=require('ReactNativeBaseComponent');












var createReactNativeComponentClass=function(
viewConfig)
{
var Constructor=function(element){
this._currentElement = element;

this._rootNodeID = null;
this._renderedChildren = null;
this.previousFlattenedStyle = null;};

Constructor.displayName = viewConfig.uiViewClassName;
Constructor.viewConfig = viewConfig;
Constructor.propTypes = viewConfig.propTypes;
Constructor.prototype = new ReactNativeBaseComponent(viewConfig);
Constructor.prototype.constructor = Constructor;

return Constructor;};


module.exports = createReactNativeComponentClass;
});
__d('ReactNativeBaseComponent',["NativeMethodsMixin","ReactNativeEventEmitter","ReactNativeStyleAttributes","ReactNativeTagHandles","ReactMultiChild","NativeModules","styleDiffer","deepFreezeAndThrowOnMutationInDev","diffRawProperties","flattenStyle","precomputeStyle","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var ReactNativeEventEmitter=require('ReactNativeEventEmitter');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChild=require('ReactMultiChild');
var RCTUIManager=require('NativeModules').UIManager;

var styleDiffer=require('styleDiffer');
var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var diffRawProperties=require('diffRawProperties');
var flattenStyle=require('flattenStyle');
var precomputeStyle=require('precomputeStyle');
var warning=require('warning');

var registrationNames=ReactNativeEventEmitter.registrationNames;
var putListener=ReactNativeEventEmitter.putListener;
var deleteAllListeners=ReactNativeEventEmitter.deleteAllListeners;












var ReactNativeBaseComponent=function(
viewConfig)
{
this.viewConfig = viewConfig;};












var cachedIndexArray=function(size){
var cachedResult=cachedIndexArray._cache[size];
if(!cachedResult){
var arr=[];
for(var i=0; i < size; i++) {
arr[i] = i;}

cachedIndexArray._cache[size] = arr;
return arr;}else 
{
return cachedResult;}};


cachedIndexArray._cache = {};





ReactNativeBaseComponent.Mixin = {
getPublicInstance:function(){

return this;}, 


construct:function(element){
this._currentElement = element;}, 


unmountComponent:function(){
deleteAllListeners(this._rootNodeID);
this.unmountChildren();
this._rootNodeID = null;}, 










initializeChildren:function(children, containerTag, transaction, context){
var mountImages=this.mountChildren(children, transaction, context);



if(mountImages.length){
var indexes=cachedIndexArray(mountImages.length);


var createdTags=[];
for(var i=0; i < mountImages.length; i++) {
var mountImage=mountImages[i];
var childTag=mountImage.tag;
var childID=mountImage.rootNodeID;
warning(
mountImage && mountImage.rootNodeID && mountImage.tag, 
'Mount image returned does not have required data');

ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
childID, 
childTag);

createdTags[i] = mountImage.tag;}

RCTUIManager.
manageChildren(containerTag, null, null, createdTags, indexes, null);}}, 












computeUpdatedProperties:function(prevProps, nextProps, validAttributes){
if(__DEV__){
for(var key in nextProps) {
if(nextProps.hasOwnProperty(key) && 
nextProps[key] && 
validAttributes[key]){
deepFreezeAndThrowOnMutationInDev(nextProps[key]);}}}




var updatePayload=diffRawProperties(
null, 
prevProps, 
nextProps, 
validAttributes);







if(styleDiffer(nextProps.style, prevProps.style)){
var nextFlattenedStyle=precomputeStyle(flattenStyle(nextProps.style));
updatePayload = diffRawProperties(
updatePayload, 
this.previousFlattenedStyle, 
nextFlattenedStyle, 
ReactNativeStyleAttributes);

this.previousFlattenedStyle = nextFlattenedStyle;}


return updatePayload;}, 











receiveComponent:function(nextElement, transaction, context){
var prevElement=this._currentElement;
this._currentElement = nextElement;

var updatePayload=this.computeUpdatedProperties(
prevElement.props, 
nextElement.props, 
this.viewConfig.validAttributes);


if(updatePayload){
RCTUIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(this._rootNodeID), 
this.viewConfig.uiViewClassName, 
updatePayload);}



this._reconcileListenersUponUpdate(
prevElement.props, 
nextElement.props);

this.updateChildren(nextElement.props.children, transaction, context);}, 





_registerListenersUponCreation:function(initialProps){
for(var key in initialProps) {


if(registrationNames[key] && initialProps[key]){
var listener=initialProps[key];
putListener(this._rootNodeID, key, listener);}}}, 









_reconcileListenersUponUpdate:function(prevProps, nextProps){
for(var key in nextProps) {
if(registrationNames[key] && nextProps[key] !== prevProps[key]){
putListener(this._rootNodeID, key, nextProps[key]);}}}, 









mountComponent:function(rootID, transaction, context){
this._rootNodeID = rootID;

var tag=ReactNativeTagHandles.allocateTag();

this.previousFlattenedStyle = {};
var updatePayload=this.computeUpdatedProperties(
{}, 
this._currentElement.props, 
this.viewConfig.validAttributes);


var nativeTopRootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootID);
RCTUIManager.createView(
tag, 
this.viewConfig.uiViewClassName, 
nativeTopRootID?ReactNativeTagHandles.rootNodeIDToTag[nativeTopRootID]:null, 
updatePayload);


this._registerListenersUponCreation(this._currentElement.props);
this.initializeChildren(
this._currentElement.props.children, 
tag, 
transaction, 
context);

return {
rootNodeID:rootID, 
tag:tag};}};








Object.assign(
ReactNativeBaseComponent.prototype, 
ReactMultiChild.Mixin, 
ReactNativeBaseComponent.Mixin, 
NativeMethodsMixin);


module.exports = ReactNativeBaseComponent;
});
__d('NativeMethodsMixin',["NativeModules","TextInputState","findNodeHandle","flattenStyle","invariant","mergeFast","precomputeStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTPOPAnimationManager=NativeModules.POPAnimationManager;
var RCTUIManager=NativeModules.UIManager;
var TextInputState=require('TextInputState');

var findNodeHandle=require('findNodeHandle');
var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var mergeFast=require('mergeFast');
var precomputeStyle=require('precomputeStyle');

















var animationIDInvariant=function(
funcName, 
anim)
{
invariant(
anim, 
funcName + ' must be called with a valid animation ID returned from' + 
' POPAnimation.createAnimation, received: "' + anim + '"');};



var NativeMethodsMixin={
addAnimation:function(anim, callback){
animationIDInvariant('addAnimation', anim);
RCTPOPAnimationManager.addAnimation(
findNodeHandle(this), 
anim, 
mountSafeCallback(this, callback));}, 



removeAnimation:function(anim){
animationIDInvariant('removeAnimation', anim);
RCTPOPAnimationManager.removeAnimation(findNodeHandle(this), anim);}, 


measure:function(callback){
RCTUIManager.measure(
findNodeHandle(this), 
mountSafeCallback(this, callback));}, 



measureLayout:function(
relativeToNativeNode, 
onSuccess, 
onFail)
{
RCTUIManager.measureLayout(
findNodeHandle(this), 
relativeToNativeNode, 
mountSafeCallback(this, onFail), 
mountSafeCallback(this, onSuccess));}, 








setNativeProps:function(nativeProps){





var hasOnlyStyle=true;
for(var key in nativeProps) {
if(key !== 'style'){
hasOnlyStyle = false;
break;}}


var style=precomputeStyle(flattenStyle(nativeProps.style));

var props=null;
if(hasOnlyStyle){
props = style;}else 
if(!style){
props = nativeProps;}else 
{
props = mergeFast(nativeProps, style);}


RCTUIManager.updateView(
findNodeHandle(this), 
this.viewConfig.uiViewClassName, 
props);}, 



focus:function(){
TextInputState.focusTextInput(findNodeHandle(this));}, 


blur:function(){
TextInputState.blurTextInput(findNodeHandle(this));}};



function throwOnStylesProp(component, props){
if(props.styles !== undefined){
var owner=component._owner || null;
var name=component.constructor.displayName;
var msg='`styles` is not a supported property of `' + name + '`, did ' + 
'you mean `style` (singular)?';
if(owner && owner.constructor && owner.constructor.displayName){
msg += '\n\nCheck the `' + owner.constructor.displayName + '` parent ' + 
' component.';}

throw new Error(msg);}}


if(__DEV__){



var NativeMethodsMixin_DEV=NativeMethodsMixin;
invariant(
!NativeMethodsMixin_DEV.componentWillMount && 
!NativeMethodsMixin_DEV.componentWillReceiveProps, 
'Do not override existing functions.');

NativeMethodsMixin_DEV.componentWillMount = function(){
throwOnStylesProp(this, this.props);};

NativeMethodsMixin_DEV.componentWillReceiveProps = function(newProps){
throwOnStylesProp(this, newProps);};}







var mountSafeCallback=function(context, callback){
return function(){
if(!callback || context.isMounted && !context.isMounted()){
return;}

return callback.apply(context, arguments);};};



module.exports = NativeMethodsMixin;
});
__d('TextInputState',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















var RCTUIManager=require('NativeModules').UIManager;

var TextInputState={



_currentlyFocusedID:null, 





currentlyFocusedField:function(){
return this._currentlyFocusedID;}, 







focusTextInput:function(textFieldID){
if(this._currentlyFocusedID !== textFieldID && textFieldID !== null){
this._currentlyFocusedID = textFieldID;
RCTUIManager.focus(textFieldID);}}, 








blurTextInput:function(textFieldID){
if(this._currentlyFocusedID === textFieldID && textFieldID !== null){
this._currentlyFocusedID = null;
RCTUIManager.blur(textFieldID);}}};




module.exports = TextInputState;
});
__d('flattenStyle',["StyleSheetRegistry","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var StyleSheetRegistry=require('StyleSheetRegistry');
var invariant=require('invariant');




function getStyle(style){
if(typeof style === 'number'){
return StyleSheetRegistry.getStyleByID(style);}

return style;}


function flattenStyle(style){
if(!style){
return undefined;}

invariant(style !== true, 'style may be false but not true');

if(!Array.isArray(style)){
return getStyle(style);}


var result={};
for(var i=0; i < style.length; ++i) {
var computedStyle=flattenStyle(style[i]);
if(computedStyle){
for(var key in computedStyle) {
result[key] = computedStyle[key];

if(__DEV__){
var value=computedStyle[key];}}}}




return result;}


module.exports = flattenStyle;
});
__d('StyleSheetRegistry',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var styles={};
var uniqueID=1;
var emptyStyle={};var 

StyleSheetRegistry=(function(){function StyleSheetRegistry(){_classCallCheck(this, StyleSheetRegistry);}_createClass(StyleSheetRegistry, null, [{key:'registerStyle', value:
function registerStyle(style){
var id=++uniqueID;
if(__DEV__){
Object.freeze(style);}

styles[id] = style;
return id;}}, {key:'getStyleByID', value:


function getStyleByID(id){
if(!id){


return emptyStyle;}


var style=styles[id];
if(!style){
console.warn('Invalid style with id `' + id + '`. Skipping ...');
return emptyStyle;}

return style;}}]);return StyleSheetRegistry;})();



module.exports = StyleSheetRegistry;
});
__d('mergeFast',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





















var mergeFast=function(one, two){
var ret={};
for(var keyOne in one) {
ret[keyOne] = one[keyOne];}

for(var keyTwo in two) {
ret[keyTwo] = two[keyTwo];}

return ret;};


module.exports = mergeFast;
});
__d('precomputeStyle',["MatrixMath","Platform","deepFreezeAndThrowOnMutationInDev","invariant","stringifySafe"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var MatrixMath=require('MatrixMath');
var Platform=require('Platform');

var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');
var stringifySafe=require('stringifySafe');





function precomputeStyle(style){
if(!style || !style.transform){
return style;}

invariant(
!style.transformMatrix, 
'transformMatrix and transform styles cannot be used on the same component');

var newStyle=_precomputeTransforms(_extends({}, style));
deepFreezeAndThrowOnMutationInDev(newStyle);
return newStyle;}










function _precomputeTransforms(style){var 
transform=style.transform;
var result=MatrixMath.createIdentityMatrix();

transform.forEach(function(transformation){
var key=Object.keys(transformation)[0];
var value=transformation[key];
if(__DEV__){
_validateTransform(key, value, transformation);}


switch(key){
case 'matrix':
MatrixMath.multiplyInto(result, result, value);
break;
case 'perspective':
_multiplyTransform(result, MatrixMath.reusePerspectiveCommand, [value]);
break;
case 'rotateX':
_multiplyTransform(result, MatrixMath.reuseRotateXCommand, [_convertToRadians(value)]);
break;
case 'rotateY':
_multiplyTransform(result, MatrixMath.reuseRotateYCommand, [_convertToRadians(value)]);
break;
case 'rotate':
case 'rotateZ':
_multiplyTransform(result, MatrixMath.reuseRotateZCommand, [_convertToRadians(value)]);
break;
case 'scale':
_multiplyTransform(result, MatrixMath.reuseScaleCommand, [value]);
break;
case 'scaleX':
_multiplyTransform(result, MatrixMath.reuseScaleXCommand, [value]);
break;
case 'scaleY':
_multiplyTransform(result, MatrixMath.reuseScaleYCommand, [value]);
break;
case 'translate':
_multiplyTransform(result, MatrixMath.reuseTranslate3dCommand, [value[0], value[1], value[2] || 0]);
break;
case 'translateX':
_multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [value, 0]);
break;
case 'translateY':
_multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [0, value]);
break;
default:
throw new Error('Invalid transform name: ' + key);}});







if(Platform.OS === 'android'){
return _extends({}, 
style, {
transformMatrix:result, 
decomposedMatrix:MatrixMath.decomposeMatrix(result)});}


return _extends({}, 
style, {
transformMatrix:result});}






function _multiplyTransform(
result, 
matrixMathFunction, 
args)
{
var matrixToApply=MatrixMath.createIdentityMatrix();
var argsWithIdentity=[matrixToApply].concat(args);
matrixMathFunction.apply(this, argsWithIdentity);
MatrixMath.multiplyInto(result, result, matrixToApply);}






function _convertToRadians(value){
var floatValue=parseFloat(value, 10);
return value.indexOf('rad') > -1?floatValue:floatValue * Math.PI / 180;}


function _validateTransform(key, value, transformation){
invariant(
!value.getValue, 
'You passed an Animated.Value to a normal component. ' + 
'You need to wrap that component in an Animated. For example, ' + 
'replace <View /> by <Animated.View />.');


var multivalueTransforms=[
'matrix', 
'translate'];

if(multivalueTransforms.indexOf(key) !== -1){
invariant(
Array.isArray(value), 
'Transform with key of %s must have an array as the value: %s', 
key, 
stringifySafe(transformation));}


switch(key){
case 'matrix':
invariant(
value.length === 9 || value.length === 16, 
'Matrix transform must have a length of 9 (2d) or 16 (3d). ' + 
'Provided matrix has a length of %s: %s', 
value.length, 
stringifySafe(transformation));

break;
case 'translate':
break;
case 'rotateX':
case 'rotateY':
case 'rotateZ':
case 'rotate':
invariant(
typeof value === 'string', 
'Transform with key of "%s" must be a string: %s', 
key, 
stringifySafe(transformation));

invariant(
value.indexOf('deg') > -1 || value.indexOf('rad') > -1, 
'Rotate transform must be expressed in degrees (deg) or radians ' + 
'(rad): %s', 
stringifySafe(transformation));

break;
default:
invariant(
typeof value === 'number', 
'Transform with key of "%s" must be a number: %s', 
key, 
stringifySafe(transformation));}}




module.exports = precomputeStyle;
});
__d('MatrixMath',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';







var invariant=require('invariant');





var MatrixMath={
createIdentityMatrix:function(){
return [
1, 0, 0, 0, 
0, 1, 0, 0, 
0, 0, 1, 0, 
0, 0, 0, 1];}, 



createCopy:function(m){
return [
m[0], m[1], m[2], m[3], 
m[4], m[5], m[6], m[7], 
m[8], m[9], m[10], m[11], 
m[12], m[13], m[14], m[15]];}, 



createFrustum:function(left, right, bottom, top, near, far){
var r_width=1 / (right - left);
var r_height=1 / (top - bottom);
var r_depth=1 / (near - far);
var x=2 * (near * r_width);
var y=2 * (near * r_height);
var A=(right + left) * r_width;
var B=(top + bottom) * r_height;
var C=(far + near) * r_depth;
var D=2 * (far * near * r_depth);
return [
x, 0, 0, 0, 
0, y, 0, 0, 
A, B, C, -1, 
0, 0, D, 0];}, 



createTranslate2d:function(x, y){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseTranslate2dCommand(mat, x, y);
return mat;}, 


reuseTranslate2dCommand:function(matrixCommand, x, y){
matrixCommand[12] = x;
matrixCommand[13] = y;}, 


reuseTranslate3dCommand:function(matrixCommand, x, y, z){
matrixCommand[12] = x;
matrixCommand[13] = y;
matrixCommand[14] = z;}, 


createScale:function(factor){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseScaleCommand(mat, factor);
return mat;}, 


reuseScaleCommand:function(matrixCommand, factor){
matrixCommand[0] = factor;
matrixCommand[5] = factor;}, 


reuseScale3dCommand:function(matrixCommand, x, y, z){
matrixCommand[0] = x;
matrixCommand[5] = y;
matrixCommand[10] = z;}, 


reusePerspectiveCommand:function(matrixCommand, p){
matrixCommand[11] = -1 / p;}, 


reuseScaleXCommand:function(matrixCommand, factor){
matrixCommand[0] = factor;}, 


reuseScaleYCommand:function(matrixCommand, factor){
matrixCommand[5] = factor;}, 


reuseScaleZCommand:function(matrixCommand, factor){
matrixCommand[10] = factor;}, 


reuseRotateXCommand:function(matrixCommand, radians){
matrixCommand[5] = Math.cos(radians);
matrixCommand[6] = Math.sin(radians);
matrixCommand[9] = -Math.sin(radians);
matrixCommand[10] = Math.cos(radians);}, 


reuseRotateYCommand:function(matrixCommand, amount){
matrixCommand[0] = Math.cos(amount);
matrixCommand[2] = -Math.sin(amount);
matrixCommand[8] = Math.sin(amount);
matrixCommand[10] = Math.cos(amount);}, 



reuseRotateZCommand:function(matrixCommand, radians){
matrixCommand[0] = Math.cos(radians);
matrixCommand[1] = Math.sin(radians);
matrixCommand[4] = -Math.sin(radians);
matrixCommand[5] = Math.cos(radians);}, 


createRotateZ:function(radians){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseRotateZCommand(mat, radians);
return mat;}, 


multiplyInto:function(out, a, b){
var a00=a[0], a01=a[1], a02=a[2], a03=a[3], 
a10=a[4], a11=a[5], a12=a[6], a13=a[7], 
a20=a[8], a21=a[9], a22=a[10], a23=a[11], 
a30=a[12], a31=a[13], a32=a[14], a33=a[15];

var b0=b[0], b1=b[1], b2=b[2], b3=b[3];
out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];
out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];
out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];
out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;}, 


determinant:function(matrix){var 

m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return (
m03 * m12 * m21 * m30 - m02 * m13 * m21 * m30 - 
m03 * m11 * m22 * m30 + m01 * m13 * m22 * m30 + 
m02 * m11 * m23 * m30 - m01 * m12 * m23 * m30 - 
m03 * m12 * m20 * m31 + m02 * m13 * m20 * m31 + 
m03 * m10 * m22 * m31 - m00 * m13 * m22 * m31 - 
m02 * m10 * m23 * m31 + m00 * m12 * m23 * m31 + 
m03 * m11 * m20 * m32 - m01 * m13 * m20 * m32 - 
m03 * m10 * m21 * m32 + m00 * m13 * m21 * m32 + 
m01 * m10 * m23 * m32 - m00 * m11 * m23 * m32 - 
m02 * m11 * m20 * m33 + m01 * m12 * m20 * m33 + 
m02 * m10 * m21 * m33 - m00 * m12 * m21 * m33 - 
m01 * m10 * m22 * m33 + m00 * m11 * m22 * m33);}, 










inverse:function(matrix){
var det=MatrixMath.determinant(matrix);
if(!det){
return matrix;}var 


m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return [
(m12 * m23 * m31 - m13 * m22 * m31 + m13 * m21 * m32 - m11 * m23 * m32 - m12 * m21 * m33 + m11 * m22 * m33) / det, 
(m03 * m22 * m31 - m02 * m23 * m31 - m03 * m21 * m32 + m01 * m23 * m32 + m02 * m21 * m33 - m01 * m22 * m33) / det, 
(m02 * m13 * m31 - m03 * m12 * m31 + m03 * m11 * m32 - m01 * m13 * m32 - m02 * m11 * m33 + m01 * m12 * m33) / det, 
(m03 * m12 * m21 - m02 * m13 * m21 - m03 * m11 * m22 + m01 * m13 * m22 + m02 * m11 * m23 - m01 * m12 * m23) / det, 
(m13 * m22 * m30 - m12 * m23 * m30 - m13 * m20 * m32 + m10 * m23 * m32 + m12 * m20 * m33 - m10 * m22 * m33) / det, 
(m02 * m23 * m30 - m03 * m22 * m30 + m03 * m20 * m32 - m00 * m23 * m32 - m02 * m20 * m33 + m00 * m22 * m33) / det, 
(m03 * m12 * m30 - m02 * m13 * m30 - m03 * m10 * m32 + m00 * m13 * m32 + m02 * m10 * m33 - m00 * m12 * m33) / det, 
(m02 * m13 * m20 - m03 * m12 * m20 + m03 * m10 * m22 - m00 * m13 * m22 - m02 * m10 * m23 + m00 * m12 * m23) / det, 
(m11 * m23 * m30 - m13 * m21 * m30 + m13 * m20 * m31 - m10 * m23 * m31 - m11 * m20 * m33 + m10 * m21 * m33) / det, 
(m03 * m21 * m30 - m01 * m23 * m30 - m03 * m20 * m31 + m00 * m23 * m31 + m01 * m20 * m33 - m00 * m21 * m33) / det, 
(m01 * m13 * m30 - m03 * m11 * m30 + m03 * m10 * m31 - m00 * m13 * m31 - m01 * m10 * m33 + m00 * m11 * m33) / det, 
(m03 * m11 * m20 - m01 * m13 * m20 - m03 * m10 * m21 + m00 * m13 * m21 + m01 * m10 * m23 - m00 * m11 * m23) / det, 
(m12 * m21 * m30 - m11 * m22 * m30 - m12 * m20 * m31 + m10 * m22 * m31 + m11 * m20 * m32 - m10 * m21 * m32) / det, 
(m01 * m22 * m30 - m02 * m21 * m30 + m02 * m20 * m31 - m00 * m22 * m31 - m01 * m20 * m32 + m00 * m21 * m32) / det, 
(m02 * m11 * m30 - m01 * m12 * m30 - m02 * m10 * m31 + m00 * m12 * m31 + m01 * m10 * m32 - m00 * m11 * m32) / det, 
(m01 * m12 * m20 - m02 * m11 * m20 + m02 * m10 * m21 - m00 * m12 * m21 - m01 * m10 * m22 + m00 * m11 * m22) / det];}, 






transpose:function(m){
return [
m[0], m[4], m[8], m[12], 
m[1], m[5], m[9], m[13], 
m[2], m[6], m[10], m[14], 
m[3], m[7], m[11], m[15]];}, 






multiplyVectorByMatrix:function(
v, 
m)
{var 
vx=v[0];var vy=v[1];var vz=v[2];var vw=v[3];
return [
vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12], 
vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13], 
vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14], 
vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]];}, 






v3Length:function(a){
return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);}, 





v3Normalize:function(
vector, 
v3Length)
{
var im=1 / (v3Length || MatrixMath.v3Length(vector));
return [
vector[0] * im, 
vector[1] * im, 
vector[2] * im];}, 







v3Dot:function(a, b){
return a[0] * b[0] + 
a[1] * b[1] + 
a[2] * b[2];}, 






v3Combine:function(
a, 
b, 
aScale, 
bScale)
{
return [
aScale * a[0] + bScale * b[0], 
aScale * a[1] + bScale * b[1], 
aScale * a[2] + bScale * b[2]];}, 







v3Cross:function(a, b){
return [
a[1] * b[2] - a[2] * b[1], 
a[2] * b[0] - a[0] * b[2], 
a[0] * b[1] - a[1] * b[0]];}, 



















quaternionToDegreesXYZ:function(q, matrix, row){var 
qx=q[0];var qy=q[1];var qz=q[2];var qw=q[3];
var qw2=qw * qw;
var qx2=qx * qx;
var qy2=qy * qy;
var qz2=qz * qz;
var test=qx * qy + qz * qw;
var unit=qw2 + qx2 + qy2 + qz2;
var conv=180 / Math.PI;

if(test > 0.49999 * unit){
return [0, 2 * Math.atan2(qx, qw) * conv, 90];}

if(test < -0.49999 * unit){
return [0, -2 * Math.atan2(qx, qw) * conv, -90];}


return [
MatrixMath.roundTo3Places(
Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx2 - 2 * qz2) * conv), 

MatrixMath.roundTo3Places(
Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy2 - 2 * qz2) * conv), 

MatrixMath.roundTo3Places(
Math.asin(2 * qx * qy + 2 * qz * qw) * conv)];}, 








roundTo3Places:function(n){
var arr=n.toString().split('e');
return Math.round(arr[0] + 'e' + (arr[1]?+arr[1] - 3:3)) * 0.001;}, 













decomposeMatrix:function(transformMatrix){

invariant(
transformMatrix.length === 16, 
'Matrix decomposition needs a list of 3d matrix values, received %s', 
transformMatrix);



var perspective=[];
var quaternion=[];
var scale=[];
var skew=[];
var translation=[];



if(!transformMatrix[15]){
return;}

var matrix=[];
var perspectiveMatrix=[];
for(var i=0; i < 4; i++) {
matrix.push([]);
for(var j=0; j < 4; j++) {
var value=transformMatrix[i * 4 + j] / transformMatrix[15];
matrix[i].push(value);
perspectiveMatrix.push(j === 3?0:value);}}


perspectiveMatrix[15] = 1;


if(!MatrixMath.determinant(perspectiveMatrix)){
return;}



if(matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0){


var rightHandSide=[
matrix[0][3], 
matrix[1][3], 
matrix[2][3], 
matrix[3][3]];




var inversePerspectiveMatrix=MatrixMath.inverse3x3(
perspectiveMatrix);

var transposedInversePerspectiveMatrix=MatrixMath.transpose4x4(
inversePerspectiveMatrix);

var perspective=MatrixMath.multiplyVectorByMatrix(
rightHandSide, 
transposedInversePerspectiveMatrix);}else 

{

perspective[0] = perspective[1] = perspective[2] = 0;
perspective[3] = 1;}



for(var i=0; i < 3; i++) {
translation[i] = matrix[3][i];}




var row=[];
for(i = 0; i < 3; i++) {
row[i] = [
matrix[i][0], 
matrix[i][1], 
matrix[i][2]];}




scale[0] = MatrixMath.v3Length(row[0]);
row[0] = MatrixMath.v3Normalize(row[0], scale[0]);


skew[0] = MatrixMath.v3Dot(row[0], row[1]);
row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);


skew[0] = MatrixMath.v3Dot(row[0], row[1]);
row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);


scale[1] = MatrixMath.v3Length(row[1]);
row[1] = MatrixMath.v3Normalize(row[1], scale[1]);
skew[0] /= scale[1];


skew[1] = MatrixMath.v3Dot(row[0], row[2]);
row[2] = MatrixMath.v3Combine(row[2], row[0], 1.0, -skew[1]);
skew[2] = MatrixMath.v3Dot(row[1], row[2]);
row[2] = MatrixMath.v3Combine(row[2], row[1], 1.0, -skew[2]);


scale[2] = MatrixMath.v3Length(row[2]);
row[2] = MatrixMath.v3Normalize(row[2], scale[2]);
skew[1] /= scale[2];
skew[2] /= scale[2];




var pdum3=MatrixMath.v3Cross(row[1], row[2]);
if(MatrixMath.v3Dot(row[0], pdum3) < 0){
for(i = 0; i < 3; i++) {
scale[i] *= -1;
row[i][0] *= -1;
row[i][1] *= -1;
row[i][2] *= -1;}}




quaternion[0] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));
quaternion[1] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));
quaternion[2] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));
quaternion[3] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));

if(row[2][1] > row[1][2]){
quaternion[0] = -quaternion[0];}

if(row[0][2] > row[2][0]){
quaternion[1] = -quaternion[1];}

if(row[1][0] > row[0][1]){
quaternion[2] = -quaternion[2];}



var rotationDegrees;
if(
quaternion[0] < 0.001 && quaternion[0] >= 0 && 
quaternion[1] < 0.001 && quaternion[1] >= 0)
{

rotationDegrees = [0, 0, MatrixMath.roundTo3Places(
Math.atan2(row[0][1], row[0][0]) * 180 / Math.PI)];}else 

{
rotationDegrees = MatrixMath.quaternionToDegreesXYZ(quaternion, matrix, row);}



return {
rotationDegrees:rotationDegrees, 
perspective:perspective, 
quaternion:quaternion, 
scale:scale, 
skew:skew, 
translation:translation, 

rotate:rotationDegrees[2], 
scaleX:scale[0], 
scaleY:scale[1], 
translateX:translation[0], 
translateY:translation[1]};}};





module.exports = MatrixMath;
});
__d('deepFreezeAndThrowOnMutationInDev',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






























function deepFreezeAndThrowOnMutationInDev(object){
if(__DEV__){
if(typeof object !== 'object' || 
object === null || 
Object.isFrozen(object) || 
Object.isSealed(object)){
return;}


for(var key in object) {
if(object.hasOwnProperty(key)){
object.__defineGetter__(key, identity.bind(null, object[key]));
object.__defineSetter__(key, throwOnImmutableMutation.bind(null, key));
deepFreezeAndThrowOnMutationInDev(object[key]);}}


Object.freeze(object);
Object.seal(object);}}



function throwOnImmutableMutation(key, value){
throw Error(
'You attempted to set the key `' + key + '` with the value `' + 
JSON.stringify(value) + '` on an object that is meant to be immutable ' + 
'and has been frozen.');}



function identity(value){
return value;}


module.exports = deepFreezeAndThrowOnMutationInDev;
});
__d('ReactNativeEventEmitter',["EventPluginHub","ReactEventEmitterMixin","ReactNativeTagHandles","NodeHandle","EventConstants","merge","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var NodeHandle=require('NodeHandle');
var EventConstants=require('EventConstants');

var merge=require('merge');
var warning=require('warning');

var topLevelTypes=EventConstants.topLevelTypes;







var EMPTY_NATIVE_EVENT={};








var touchSubsequence=function(touches, indices){
var ret=[];
for(var i=0; i < indices.length; i++) {
ret.push(touches[indices[i]]);}

return ret;};













var removeTouchesAtIndices=function(
touches, 
indices)
{
var rippedOut=[];


var temp=touches;
for(var i=0; i < indices.length; i++) {
var index=indices[i];
rippedOut.push(touches[index]);
temp[index] = null;}

var fillAt=0;
for(var j=0; j < temp.length; j++) {
var cur=temp[j];
if(cur !== null){
temp[fillAt++] = cur;}}


temp.length = fillAt;
return rippedOut;};











var ReactNativeEventEmitter=merge(ReactEventEmitterMixin, {

registrationNames:EventPluginHub.registrationNameModules, 

putListener:EventPluginHub.putListener, 

getListener:EventPluginHub.getListener, 

deleteListener:EventPluginHub.deleteListener, 

deleteAllListeners:EventPluginHub.deleteAllListeners, 











_receiveRootNodeIDEvent:function(
rootNodeID, 
topLevelType, 
nativeEventParam)
{
var nativeEvent=nativeEventParam || EMPTY_NATIVE_EVENT;
ReactNativeEventEmitter.handleTopLevel(
topLevelType, 
rootNodeID, 
rootNodeID, 
nativeEvent);}, 










receiveEvent:function(
tag, 
topLevelType, 
nativeEventParam)
{
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID, 
topLevelType, 
nativeEventParam);}, 



























receiveTouches:function(
eventTopLevelType, 
touches, 
changedIndices)
{
var changedTouches=
eventTopLevelType === topLevelTypes.topTouchEnd || 
eventTopLevelType === topLevelTypes.topTouchCancel?
removeTouchesAtIndices(touches, changedIndices):
touchSubsequence(touches, changedIndices);

for(var jj=0; jj < changedTouches.length; jj++) {
var touch=changedTouches[jj];


touch.changedTouches = changedTouches;
touch.touches = touches;
var nativeEvent=touch;
var rootNodeID=null;
var target=nativeEvent.target;
if(target !== null && target !== undefined){
if(target < ReactNativeTagHandles.tagsStartAt){
if(__DEV__){
warning(
false, 
'A view is reporting that a touch occured on tag zero.');}}else 


{
rootNodeID = NodeHandle.getRootNodeID(target);}}


ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID, 
eventTopLevelType, 
nativeEvent);}}});





module.exports = ReactNativeEventEmitter;
});
__d('ReactEventEmitterMixin',["EventPluginHub"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');

function runEventQueueInBatch(events){
EventPluginHub.enqueueEvents(events);
EventPluginHub.processEventQueue();}


var ReactEventEmitterMixin={










handleTopLevel:function(
topLevelType, 
topLevelTarget, 
topLevelTargetID, 
nativeEvent, 
nativeEventTarget){
var events=EventPluginHub.extractEvents(
topLevelType, 
topLevelTarget, 
topLevelTargetID, 
nativeEvent, 
nativeEventTarget);

runEventQueueInBatch(events);}};



module.exports = ReactEventEmitterMixin;
});
__d('ReactNativeStyleAttributes',["ImageStylePropTypes","TextStylePropTypes","ViewStylePropTypes","keyMirror","matricesDiffer","sizesDiffer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};













var ImageStylePropTypes=require('ImageStylePropTypes');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var keyMirror=require('keyMirror');
var matricesDiffer=require('matricesDiffer');
var sizesDiffer=require('sizesDiffer');

var ReactNativeStyleAttributes=_extends({}, 
keyMirror(ViewStylePropTypes), 
keyMirror(TextStylePropTypes), 
keyMirror(ImageStylePropTypes));


ReactNativeStyleAttributes.transformMatrix = {diff:matricesDiffer};
ReactNativeStyleAttributes.shadowOffset = {diff:sizesDiffer};


ReactNativeStyleAttributes.decomposedMatrix = 'decomposedMatrix';

module.exports = ReactNativeStyleAttributes;
});
__d('ImageStylePropTypes',["ImageResizeMode","LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var ImageResizeMode=require('ImageResizeMode');
var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');

var ImageStylePropTypes=_extends({}, 
LayoutPropTypes, 
TransformPropTypes, {
resizeMode:ReactPropTypes.oneOf(Object.keys(ImageResizeMode)), 
backgroundColor:ReactPropTypes.string, 
borderColor:ReactPropTypes.string, 
borderWidth:ReactPropTypes.number, 
borderRadius:ReactPropTypes.number, 
overflow:ReactPropTypes.oneOf(['visible', 'hidden']), 



tintColor:ReactPropTypes.string, 
opacity:ReactPropTypes.number});


module.exports = ImageStylePropTypes;
});
__d('ImageResizeMode',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');





var ImageResizeMode=keyMirror({




contain:null, 




cover:null, 





stretch:null});


module.exports = ImageResizeMode;
});
__d('LayoutPropTypes',["ReactPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');






var LayoutPropTypes={
width:ReactPropTypes.number, 
height:ReactPropTypes.number, 
top:ReactPropTypes.number, 
left:ReactPropTypes.number, 
right:ReactPropTypes.number, 
bottom:ReactPropTypes.number, 
margin:ReactPropTypes.number, 
marginVertical:ReactPropTypes.number, 
marginHorizontal:ReactPropTypes.number, 
marginTop:ReactPropTypes.number, 
marginBottom:ReactPropTypes.number, 
marginLeft:ReactPropTypes.number, 
marginRight:ReactPropTypes.number, 
padding:ReactPropTypes.number, 
paddingVertical:ReactPropTypes.number, 
paddingHorizontal:ReactPropTypes.number, 
paddingTop:ReactPropTypes.number, 
paddingBottom:ReactPropTypes.number, 
paddingLeft:ReactPropTypes.number, 
paddingRight:ReactPropTypes.number, 
borderWidth:ReactPropTypes.number, 
borderTopWidth:ReactPropTypes.number, 
borderRightWidth:ReactPropTypes.number, 
borderBottomWidth:ReactPropTypes.number, 
borderLeftWidth:ReactPropTypes.number, 

position:ReactPropTypes.oneOf([
'absolute', 
'relative']), 



flexDirection:ReactPropTypes.oneOf([
'row', 
'column']), 



flexWrap:ReactPropTypes.oneOf([
'wrap', 
'nowrap']), 




justifyContent:ReactPropTypes.oneOf([
'flex-start', 
'flex-end', 
'center', 
'space-between', 
'space-around']), 




alignItems:ReactPropTypes.oneOf([
'flex-start', 
'flex-end', 
'center', 
'stretch']), 




alignSelf:ReactPropTypes.oneOf([
'auto', 
'flex-start', 
'flex-end', 
'center', 
'stretch']), 



flex:ReactPropTypes.number};


module.exports = LayoutPropTypes;
});
__d('ReactPropTypes',["ReactElement","ReactFragment","ReactPropTypeLocationNames","emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var emptyFunction=require('emptyFunction');
















































var ANONYMOUS='<<anonymous>>';

var ReactPropTypes={
array:createPrimitiveTypeChecker('array'), 
bool:createPrimitiveTypeChecker('boolean'), 
func:createPrimitiveTypeChecker('function'), 
number:createPrimitiveTypeChecker('number'), 
object:createPrimitiveTypeChecker('object'), 
string:createPrimitiveTypeChecker('string'), 

any:createAnyTypeChecker(), 
arrayOf:createArrayOfTypeChecker, 
element:createElementTypeChecker(), 
instanceOf:createInstanceTypeChecker, 
node:createNodeChecker(), 
objectOf:createObjectOfTypeChecker, 
oneOf:createEnumTypeChecker, 
oneOfType:createUnionTypeChecker, 
shape:createShapeTypeChecker};


function createChainableTypeChecker(validate){
function checkType(
isRequired, 
props, 
propName, 
componentName, 
location, 
propFullName)
{
componentName = componentName || ANONYMOUS;
propFullName = propFullName || propName;
if(props[propName] == null){
var locationName=ReactPropTypeLocationNames[location];
if(isRequired){
return new Error(
'Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return null;}else 
{
return validate(props, propName, componentName, location, propFullName);}}



var chainedCheckType=checkType.bind(null, false);
chainedCheckType.isRequired = checkType.bind(null, true);

return chainedCheckType;}


function createPrimitiveTypeChecker(expectedType){
function validate(props, propName, componentName, location, propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== expectedType){
var locationName=ReactPropTypeLocationNames[location];



var preciseType=getPreciseType(propValue);

return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + 
preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + 
expectedType + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createAnyTypeChecker(){
return createChainableTypeChecker(emptyFunction.thatReturns(null));}


function createArrayOfTypeChecker(typeChecker){
function validate(props, propName, componentName, location, propFullName){
var propValue=props[propName];
if(!Array.isArray(propValue)){
var locationName=ReactPropTypeLocationNames[location];
var propType=getPropType(propValue);
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an array.'));}


for(var i=0; i < propValue.length; i++) {
var error=typeChecker(
propValue, 
i, 
componentName, 
location, 
propFullName + '[' + i + ']');

if(error instanceof Error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function createElementTypeChecker(){
function validate(props, propName, componentName, location, propFullName){
if(!ReactElement.isValidElement(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`, expected a single ReactElement.'));}


return null;}

return createChainableTypeChecker(validate);}


function createInstanceTypeChecker(expectedClass){
function validate(props, propName, componentName, location, propFullName){
if(!(props[propName] instanceof expectedClass)){
var locationName=ReactPropTypeLocationNames[location];
var expectedClassName=expectedClass.name || ANONYMOUS;
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`, expected instance of `' + expectedClassName + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createEnumTypeChecker(expectedValues){
if(!Array.isArray(expectedValues)){
return createChainableTypeChecker(function(){
return new Error('Invalid argument supplied to oneOf, expected an instance of array.');});}





function validate(props, propName, componentName, location, propFullName){
var propValue=props[propName];
for(var i=0; i < expectedValues.length; i++) {
if(propValue === expectedValues[i]){
return null;}}



var locationName=ReactPropTypeLocationNames[location];
var valuesString=JSON.stringify(expectedValues);
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + 
componentName + '`, expected one of ' + valuesString + '.'));}


return createChainableTypeChecker(validate);}


function createObjectOfTypeChecker(typeChecker){
function validate(props, propName, componentName, location, propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an object.'));}


for(var key in propValue) {
if(propValue.hasOwnProperty(key)){
var error=typeChecker(
propValue, 
key, 
componentName, 
location, 
propFullName + '.' + key);

if(error instanceof Error){
return error;}}}



return null;}

return createChainableTypeChecker(validate);}


function createUnionTypeChecker(arrayOfTypeCheckers){
if(!Array.isArray(arrayOfTypeCheckers)){
return createChainableTypeChecker(function(){
return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');});}





function validate(props, propName, componentName, location, propFullName){
for(var i=0; i < arrayOfTypeCheckers.length; i++) {
var checker=arrayOfTypeCheckers[i];
if(
checker(props, propName, componentName, location, propFullName) == null)
{
return null;}}



var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`.'));}


return createChainableTypeChecker(validate);}


function createNodeChecker(){
function validate(props, propName, componentName, location, propFullName){
if(!isNode(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`, expected a ReactNode.'));}


return null;}

return createChainableTypeChecker(validate);}


function createShapeTypeChecker(shapeTypes){
function validate(props, propName, componentName, location, propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}


for(var key in shapeTypes) {
var checker=shapeTypes[key];
if(!checker){
continue;}

var error=checker(
propValue, 
key, 
componentName, 
location, 
propFullName + '.' + key);

if(error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function isNode(propValue){
switch(typeof propValue){
case 'number':
case 'string':
case 'undefined':
return true;
case 'boolean':
return !propValue;
case 'object':
if(Array.isArray(propValue)){
return propValue.every(isNode);}

if(propValue === null || ReactElement.isValidElement(propValue)){
return true;}

propValue = ReactFragment.extractIfFragment(propValue);
for(var k in propValue) {
if(!isNode(propValue[k])){
return false;}}


return true;
default:
return false;}}




function getPropType(propValue){
var propType=typeof propValue;
if(Array.isArray(propValue)){
return 'array';}

if(propValue instanceof RegExp){



return 'object';}

return propType;}




function getPreciseType(propValue){
var propType=getPropType(propValue);
if(propType === 'object'){
if(propValue instanceof Date){
return 'date';}else 
if(propValue instanceof RegExp){
return 'regexp';}}


return propType;}


module.exports = ReactPropTypes;
});
__d('TransformPropTypes',["ReactPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');

var TransformPropTypes={
transform:ReactPropTypes.arrayOf(
ReactPropTypes.oneOfType([
ReactPropTypes.shape({perspective:ReactPropTypes.number}), 
ReactPropTypes.shape({rotate:ReactPropTypes.string}), 
ReactPropTypes.shape({rotateX:ReactPropTypes.string}), 
ReactPropTypes.shape({rotateY:ReactPropTypes.string}), 
ReactPropTypes.shape({rotateZ:ReactPropTypes.string}), 
ReactPropTypes.shape({scale:ReactPropTypes.number}), 
ReactPropTypes.shape({scaleX:ReactPropTypes.number}), 
ReactPropTypes.shape({scaleY:ReactPropTypes.number}), 
ReactPropTypes.shape({translateX:ReactPropTypes.number}), 
ReactPropTypes.shape({translateY:ReactPropTypes.number})])), 








transformMatrix:ReactPropTypes.arrayOf(ReactPropTypes.number), 


rotation:ReactPropTypes.number, 
scaleX:ReactPropTypes.number, 
scaleY:ReactPropTypes.number, 
translateX:ReactPropTypes.number, 
translateY:ReactPropTypes.number};


module.exports = TransformPropTypes;
});
__d('TextStylePropTypes',["ReactPropTypes","ViewStylePropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');


var TextStylePropTypes=Object.assign(Object.create(ViewStylePropTypes), {
color:ReactPropTypes.string, 
fontFamily:ReactPropTypes.string, 
fontSize:ReactPropTypes.number, 
fontStyle:ReactPropTypes.oneOf(['normal', 'italic']), 





fontWeight:ReactPropTypes.oneOf(
['normal', 'bold', 
'100', '200', '300', '400', '500', '600', '700', '800', '900']), 




letterSpacing:ReactPropTypes.number, 
lineHeight:ReactPropTypes.number, 



textAlign:ReactPropTypes.oneOf(
['auto', 'left', 'right', 'center', 'justify']), 




textDecorationLine:ReactPropTypes.oneOf(
['none', 'underline', 'line-through', 'underline line-through']), 




textDecorationStyle:ReactPropTypes.oneOf(
['solid', 'double', 'dotted', 'dashed']), 




textDecorationColor:ReactPropTypes.string, 



writingDirection:ReactPropTypes.oneOf(
['auto', 'ltr', 'rtl'])});




var unsupportedProps=Object.keys({
padding:null, 
paddingTop:null, 
paddingLeft:null, 
paddingRight:null, 
paddingBottom:null, 
paddingVertical:null, 
paddingHorizontal:null});


for(var ii=0; ii < unsupportedProps.length; ii++) {
delete TextStylePropTypes[unsupportedProps[ii]];}


module.exports = TextStylePropTypes;
});
__d('ViewStylePropTypes',["LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');




var ViewStylePropTypes=_extends({}, 
LayoutPropTypes, 
TransformPropTypes, {
backfaceVisibility:ReactPropTypes.oneOf(['visible', 'hidden']), 
backgroundColor:ReactPropTypes.string, 
borderColor:ReactPropTypes.string, 
borderTopColor:ReactPropTypes.string, 
borderRightColor:ReactPropTypes.string, 
borderBottomColor:ReactPropTypes.string, 
borderLeftColor:ReactPropTypes.string, 
borderRadius:ReactPropTypes.number, 
borderTopLeftRadius:ReactPropTypes.number, 
borderTopRightRadius:ReactPropTypes.number, 
borderBottomLeftRadius:ReactPropTypes.number, 
borderBottomRightRadius:ReactPropTypes.number, 
borderStyle:ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']), 
opacity:ReactPropTypes.number, 
overflow:ReactPropTypes.oneOf(['visible', 'hidden']), 
shadowColor:ReactPropTypes.string, 
shadowOffset:ReactPropTypes.shape(
{width:ReactPropTypes.number, height:ReactPropTypes.number}), 

shadowOpacity:ReactPropTypes.number, 
shadowRadius:ReactPropTypes.number});


module.exports = ViewStylePropTypes;
});
__d('matricesDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var matricesDiffer=function(one, two){
if(one === two){
return false;}

return !one || !two || 
one[12] !== two[12] || 
one[13] !== two[13] || 
one[14] !== two[14] || 
one[5] !== two[5] || 
one[10] !== two[10] || 
one[1] !== two[1] || 
one[2] !== two[2] || 
one[3] !== two[3] || 
one[4] !== two[4] || 
one[6] !== two[6] || 
one[7] !== two[7] || 
one[8] !== two[8] || 
one[9] !== two[9] || 
one[11] !== two[11] || 
one[15] !== two[15];};


module.exports = matricesDiffer;
});
__d('sizesDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






var dummySize={width:undefined, height:undefined};

var sizesDiffer=function(one, two){
one = one || dummySize;
two = two || dummySize;
return one !== two && (
one.width !== two.width || 
one.height !== two.height);};



module.exports = sizesDiffer;
});
__d('ReactMultiChild',["ReactComponentEnvironment","ReactMultiChildUpdateTypes","ReactReconciler","ReactChildReconciler"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');

var ReactReconciler=require('ReactReconciler');
var ReactChildReconciler=require('ReactChildReconciler');








var updateDepth=0;









var updateQueue=[];







var markupQueue=[];









function enqueueMarkup(parentID, markup, toIndex){

updateQueue.push({
parentID:parentID, 
parentNode:null, 
type:ReactMultiChildUpdateTypes.INSERT_MARKUP, 
markupIndex:markupQueue.push(markup) - 1, 
textContent:null, 
fromIndex:null, 
toIndex:toIndex});}











function enqueueMove(parentID, fromIndex, toIndex){

updateQueue.push({
parentID:parentID, 
parentNode:null, 
type:ReactMultiChildUpdateTypes.MOVE_EXISTING, 
markupIndex:null, 
textContent:null, 
fromIndex:fromIndex, 
toIndex:toIndex});}










function enqueueRemove(parentID, fromIndex){

updateQueue.push({
parentID:parentID, 
parentNode:null, 
type:ReactMultiChildUpdateTypes.REMOVE_NODE, 
markupIndex:null, 
textContent:null, 
fromIndex:fromIndex, 
toIndex:null});}










function enqueueTextContent(parentID, textContent){

updateQueue.push({
parentID:parentID, 
parentNode:null, 
type:ReactMultiChildUpdateTypes.TEXT_CONTENT, 
markupIndex:null, 
textContent:textContent, 
fromIndex:null, 
toIndex:null});}








function processQueue(){
if(updateQueue.length){
ReactComponentEnvironment.processChildrenUpdates(
updateQueue, 
markupQueue);

clearQueue();}}








function clearQueue(){
updateQueue.length = 0;
markupQueue.length = 0;}








var ReactMultiChild={








Mixin:{









mountChildren:function(nestedChildren, transaction, context){
var children=ReactChildReconciler.instantiateChildren(
nestedChildren, transaction, context);

this._renderedChildren = children;
var mountImages=[];
var index=0;
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child, 
rootID, 
transaction, 
context);

child._mountIndex = index;
mountImages.push(mountImage);
index++;}}


return mountImages;}, 








updateTextContent:function(nextContent){
updateDepth++;
var errorThrown=true;
try{
var prevChildren=this._renderedChildren;

ReactChildReconciler.unmountChildren(prevChildren);

for(var name in prevChildren) {
if(prevChildren.hasOwnProperty(name)){
this._unmountChildByName(prevChildren[name], name);}}



this.setTextContent(nextContent);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}}, 












updateChildren:function(nextNestedChildren, transaction, context){
updateDepth++;
var errorThrown=true;
try{
this._updateChildren(nextNestedChildren, transaction, context);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}}, 















_updateChildren:function(nextNestedChildren, transaction, context){
var prevChildren=this._renderedChildren;
var nextChildren=ReactChildReconciler.updateChildren(
prevChildren, nextNestedChildren, transaction, context);

this._renderedChildren = nextChildren;
if(!nextChildren && !prevChildren){
return;}

var name;


var lastIndex=0;
var nextIndex=0;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var nextChild=nextChildren[name];
if(prevChild === nextChild){
this.moveChild(prevChild, nextIndex, lastIndex);
lastIndex = Math.max(prevChild._mountIndex, lastIndex);
prevChild._mountIndex = nextIndex;}else 
{
if(prevChild){

lastIndex = Math.max(prevChild._mountIndex, lastIndex);
this._unmountChildByName(prevChild, name);}


this._mountChildByNameAtIndex(
nextChild, name, nextIndex, transaction, context);}


nextIndex++;}


for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
this._unmountChildByName(prevChildren[name], name);}}}, 










unmountChildren:function(){
var renderedChildren=this._renderedChildren;
ReactChildReconciler.unmountChildren(renderedChildren);
this._renderedChildren = null;}, 










moveChild:function(child, toIndex, lastIndex){



if(child._mountIndex < lastIndex){
enqueueMove(this._rootNodeID, child._mountIndex, toIndex);}}, 










createChild:function(child, mountImage){
enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);}, 








removeChild:function(child){
enqueueRemove(this._rootNodeID, child._mountIndex);}, 








setTextContent:function(textContent){
enqueueTextContent(this._rootNodeID, textContent);}, 













_mountChildByNameAtIndex:function(
child, 
name, 
index, 
transaction, 
context){

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child, 
rootID, 
transaction, 
context);

child._mountIndex = index;
this.createChild(child, mountImage);}, 











_unmountChildByName:function(child, name){
this.removeChild(child);
child._mountIndex = null;}}};






module.exports = ReactMultiChild;
});
__d('ReactChildReconciler',["ReactReconciler","flattenChildren","instantiateReactComponent","shouldUpdateReactComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactReconciler=require('ReactReconciler');

var flattenChildren=require('flattenChildren');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');






var ReactChildReconciler={









instantiateChildren:function(nestedChildNodes, transaction, context){
var children=flattenChildren(nestedChildNodes);
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];


var childInstance=instantiateReactComponent(child, null);
children[name] = childInstance;}}


return children;}, 












updateChildren:function(
prevChildren, 
nextNestedChildNodes, 
transaction, 
context){





var nextChildren=flattenChildren(nextNestedChildNodes);
if(!nextChildren && !prevChildren){
return null;}

var name;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var prevElement=prevChild && prevChild._currentElement;
var nextElement=nextChildren[name];
if(shouldUpdateReactComponent(prevElement, nextElement)){
ReactReconciler.receiveComponent(
prevChild, nextElement, transaction, context);

nextChildren[name] = prevChild;}else 
{
if(prevChild){
ReactReconciler.unmountComponent(prevChild, name);}


var nextChildInstance=instantiateReactComponent(
nextElement, 
null);

nextChildren[name] = nextChildInstance;}}



for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
ReactReconciler.unmountComponent(prevChildren[name]);}}


return nextChildren;}, 









unmountChildren:function(renderedChildren){
for(var name in renderedChildren) {
if(renderedChildren.hasOwnProperty(name)){
var renderedChild=renderedChildren[name];
ReactReconciler.unmountComponent(renderedChild);}}}};






module.exports = ReactChildReconciler;
});
__d('flattenChildren',["traverseAllChildren","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');






function flattenSingleChildIntoContext(traverseContext, child, name){

var result=traverseContext;
var keyUnique=result[name] === undefined;
if(__DEV__){
warning(
keyUnique, 
'flattenChildren(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.', 
name);}


if(keyUnique && child != null){
result[name] = child;}}








function flattenChildren(children){
if(children == null){
return children;}

var result={};
traverseAllChildren(children, flattenSingleChildIntoContext, result);
return result;}


module.exports = flattenChildren;
});
__d('styleDiffer',["deepDiffer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var deepDiffer=require('deepDiffer');

function styleDiffer(a, b){
return !styleEqual(a, b);}


function styleEqual(a, b){
if(!a){
return !b;}

if(!b){
return !a;}

if(typeof a !== typeof b){
return false;}

if(typeof a === 'number'){
return a === b;}


if(Array.isArray(a)){
if(!Array.isArray(b) || a.length !== b.length){
return false;}

for(var i=0; i < a.length; ++i) {
if(!styleEqual(a[i], b[i])){
return false;}}


return true;}


for(var key in a) {
if(deepDiffer(a[key], b[key])){
return false;}}



for(var key in b) {
if(!a.hasOwnProperty(key)){
return false;}}



return true;}


module.exports = styleDiffer;
});
__d('deepDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















var deepDiffer=function(one, two){
if(one === two){

return false;}

if(typeof one === 'function' && typeof two === 'function'){

return false;}

if(typeof one !== 'object' || one === null){

return one !== two;}

if(typeof two !== 'object' || two === null){


return true;}

if(one.constructor !== two.constructor){
return true;}

if(Array.isArray(one)){

var len=one.length;
if(two.length !== len){
return true;}

for(var ii=0; ii < len; ii++) {
if(deepDiffer(one[ii], two[ii])){
return true;}}}else 


{
for(var key in one) {
if(deepDiffer(one[key], two[key])){
return true;}}


for(var twoKey in two) {


if(one[twoKey] === undefined && two[twoKey] !== undefined){
return true;}}}



return false;};


module.exports = deepDiffer;
});
__d('diffRawProperties',["deepDiffer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var deepDiffer=require('deepDiffer');












function diffRawProperties(
updatePayload, 
prevProps, 
nextProps, 
validAttributes)
{
var validAttributeConfig;
var nextProp;
var prevProp;
var isScalar;
var shouldUpdate;
var differ;

if(nextProps){
for(var propKey in nextProps) {
validAttributeConfig = validAttributes[propKey];
if(!validAttributeConfig){
continue;}

prevProp = prevProps && prevProps[propKey];
nextProp = nextProps[propKey];



if(typeof prevProp === 'function'){
prevProp = true;}

if(typeof nextProp === 'function'){
nextProp = true;}


if(prevProp !== nextProp){


differ = validAttributeConfig.diff || deepDiffer;
isScalar = typeof nextProp !== 'object' || nextProp === null;
shouldUpdate = isScalar || !prevProp || differ(prevProp, nextProp);
if(shouldUpdate){
updatePayload = updatePayload || {};
updatePayload[propKey] = nextProp;}}}}








if(prevProps){
for(var propKey in prevProps) {
validAttributeConfig = validAttributes[propKey];
if(!validAttributeConfig){
continue;}

if(updatePayload && updatePayload[propKey] !== undefined){
continue;}

prevProp = prevProps[propKey];
nextProp = nextProps && nextProps[propKey];



if(typeof prevProp === 'function'){
prevProp = true;}

if(typeof nextProp === 'function'){
nextProp = true;}


if(prevProp !== nextProp){
if(nextProp === undefined){
nextProp = null;}



differ = validAttributeConfig.diff || deepDiffer;
isScalar = typeof nextProp !== 'object' || nextProp === null;
shouldUpdate = 
isScalar && 
prevProp !== nextProp || 
differ(prevProp, nextProp);
if(shouldUpdate){
updatePayload = updatePayload || {};
updatePayload[propKey] = nextProp;}}}}




return updatePayload;}


module.exports = diffRawProperties;
});
__d('RCTEventEmitter',["ReactNativeEventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeEventEmitter=require('ReactNativeEventEmitter');


module.exports = ReactNativeEventEmitter;
});
__d('RCTLog',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var invariant=require('invariant');

var levelsMap={
log:'log', 
info:'info', 
warn:'warn', 
error:'error', 
mustfix:'error'};var 


RCTLog=(function(){function RCTLog(){_classCallCheck(this, RCTLog);}_createClass(RCTLog, null, [{key:'logIfNoNativeHook', value:

function logIfNoNativeHook(){
var args=Array.prototype.slice.call(arguments);
var level=args.shift();
var logFn=levelsMap[level];
invariant(
logFn, 
'Level "' + level + '" not one of ' + Object.keys(levelsMap));

if(typeof global.nativeLoggingHook === 'undefined'){

console[logFn].apply(console, args);}

return true;}}]);return RCTLog;})();



module.exports = RCTLog;
});
__d('deprecated',["Object.assign","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var warning=require('warning');











function deprecated(fnName, newModule, ctx, fn){
var warned=false;
if(__DEV__){
var newFn=function(){
warning(
warned, 



'`require' + '("react").%s` is deprecated. Please use `require' + '("%s").%s` ' + 
'instead.', 
fnName, 
newModule, 
fnName);

warned = true;
return fn.apply(ctx, arguments);};



return assign(newFn, fn);}


return fn;}


module.exports = deprecated;
});
__d('onlyChild',["ReactElement","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var ReactElement=require('ReactElement');

var invariant=require('invariant');












function onlyChild(children){
invariant(
ReactElement.isValidElement(children), 
'onlyChild must be passed a children with exactly one child.');

return children;}


module.exports = onlyChild;
});
__d('ActivityIndicatorIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';function _objectWithoutProperties(obj, keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj, i))continue;target[i] = obj[i];}return target;}












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var GRAY='#999999';








var ActivityIndicatorIOS=React.createClass({displayName:'ActivityIndicatorIOS', 
mixins:[NativeMethodsMixin], 

propTypes:{



animating:PropTypes.bool, 



color:PropTypes.string, 



hidesWhenStopped:PropTypes.bool, 



size:PropTypes.oneOf([
'small', 
'large']), 






onLayout:PropTypes.func}, 


getDefaultProps:function(){
return {
animating:true, 
color:GRAY, 
hidesWhenStopped:true, 
size:'small'};}, 



render:function(){var _props=
this.props;var onLayout=_props.onLayout;var style=_props.style;var props=_objectWithoutProperties(_props, ['onLayout', 'style']);
var sizeStyle=this.props.size === 'large'?styles.sizeLarge:styles.sizeSmall;
return (
React.createElement(View, {
onLayout:onLayout, 
style:[styles.container, sizeStyle, style]}, 
React.createElement(RCTActivityIndicatorView, props)));}});





var styles=StyleSheet.create({
container:{
alignItems:'center', 
justifyContent:'center'}, 

sizeSmall:{
width:20, 
height:20}, 

sizeLarge:{
width:36, 
height:36}});



var RCTActivityIndicatorView=requireNativeComponent(
'RCTActivityIndicatorView', 
ActivityIndicatorIOS, 
{nativeOnly:{activityIndicatorViewStyle:true}});


module.exports = ActivityIndicatorIOS;
});
__d('StyleSheet',["StyleSheetRegistry","StyleSheetValidation"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var StyleSheetRegistry=require('StyleSheetRegistry');
var StyleSheetValidation=require('StyleSheetValidation');var 













































StyleSheet=(function(){function StyleSheet(){_classCallCheck(this, StyleSheet);}_createClass(StyleSheet, null, [{key:'create', value:
function create(obj){
var result={};
for(var key in obj) {
StyleSheetValidation.validateStyle(key, obj);
result[key] = StyleSheetRegistry.registerStyle(obj[key]);}

return result;}}]);return StyleSheet;})();



module.exports = StyleSheet;
});
__d('StyleSheetValidation',["ImageStylePropTypes","ReactPropTypeLocations","TextStylePropTypes","ViewStylePropTypes","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ImageStylePropTypes=require('ImageStylePropTypes');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var invariant=require('invariant');var 

StyleSheetValidation=(function(){function StyleSheetValidation(){_classCallCheck(this, StyleSheetValidation);}_createClass(StyleSheetValidation, null, [{key:'validateStyleProp', value:
function validateStyleProp(prop, style, caller){
if(!__DEV__){
return;}

if(allStylePropTypes[prop] === undefined){
var message1='"' + prop + '" is not a valid style property.';
var message2='\nValid style props: ' + 
JSON.stringify(Object.keys(allStylePropTypes).sort(), null, '  ');
styleError(message1, style, caller, message2);}

var error=allStylePropTypes[prop](
style, 
prop, 
caller, 
ReactPropTypeLocations.prop);

if(error){
styleError(error.message, style, caller);}}}, {key:'validateStyle', value:



function validateStyle(name, styles){
if(!__DEV__){
return;}

for(var prop in styles[name]) {
StyleSheetValidation.validateStyleProp(prop, styles[name], 'StyleSheet ' + name);}}}, {key:'addValidStylePropTypes', value:



function addValidStylePropTypes(stylePropTypes){
for(var key in stylePropTypes) {
allStylePropTypes[key] = stylePropTypes[key];}}}]);return StyleSheetValidation;})();




var styleError=function(message1, style, caller, message2){
invariant(
false, 
message1 + '\n' + (caller || '<<unknown>>') + ': ' + 
JSON.stringify(style, null, '  ') + (message2 || ''));};



var allStylePropTypes={};

StyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);

module.exports = StyleSheetValidation;
});
__d('View',["NativeMethodsMixin","ReactPropTypes","NativeModules","React","ReactNativeStyleAttributes","ReactNativeViewAttributes","StyleSheetPropType","ViewStylePropTypes","createReactNativeComponentClass"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;
var React=require('React');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');

var stylePropType=StyleSheetPropType(ViewStylePropTypes);

var AccessibilityTraits=[
'none', 
'button', 
'link', 
'header', 
'search', 
'image', 
'selected', 
'plays', 
'key', 
'text', 
'summary', 
'disabled', 
'frequentUpdates', 
'startsMedia', 
'adjustable', 
'allowsDirectInteraction', 
'pageTurn'];




























var View=React.createClass({displayName:'View', 
mixins:[NativeMethodsMixin], 





viewConfig:{
uiViewClassName:'RCTView', 
validAttributes:ReactNativeViewAttributes.RCTView}, 


propTypes:{




accessible:PropTypes.bool, 






accessibilityLabel:PropTypes.string, 





accessibilityTraits:PropTypes.oneOfType([
PropTypes.oneOf(AccessibilityTraits), 
PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]), 






onAcccessibilityTap:PropTypes.func, 





onMagicTap:PropTypes.func, 




testID:PropTypes.string, 






onMoveShouldSetResponder:PropTypes.func, 
onResponderGrant:PropTypes.func, 
onResponderMove:PropTypes.func, 
onResponderReject:PropTypes.func, 
onResponderRelease:PropTypes.func, 
onResponderTerminate:PropTypes.func, 
onResponderTerminationRequest:PropTypes.func, 
onStartShouldSetResponder:PropTypes.func, 
onStartShouldSetResponderCapture:PropTypes.func, 






onLayout:PropTypes.func, 































pointerEvents:PropTypes.oneOf([
'box-none', 
'none', 
'box-only', 
'auto']), 

style:stylePropType, 









removeClippedSubviews:PropTypes.bool, 













renderToHardwareTextureAndroid:PropTypes.bool}, 


render:function(){
return React.createElement(RCTView, this.props);}});



var RCTView=createReactNativeComponentClass({
validAttributes:ReactNativeViewAttributes.RCTView, 
uiViewClassName:'RCTView'});

RCTView.propTypes = View.propTypes;
if(__DEV__){
var viewConfig=RCTUIManager.viewConfigs && RCTUIManager.viewConfigs.RCTView || {};
for(var prop in viewConfig.nativeProps) {
var viewAny=View;
if(!viewAny.propTypes[prop] && !ReactNativeStyleAttributes[prop]){
throw new Error(
'View is missing propType for native prop `' + prop + '`');}}}





var ViewToExport=RCTView;
if(__DEV__){
ViewToExport = View;}


module.exports = ViewToExport;
});
__d('ReactNativeViewAttributes',["merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var merge=require('merge');

var ReactNativeViewAttributes={};

ReactNativeViewAttributes.UIView = {
pointerEvents:true, 
accessible:true, 
accessibilityLabel:true, 
accessibilityTraits:true, 
testID:true, 
onLayout:true, 
onAccessibilityTap:true, 
onMagicTap:true};


ReactNativeViewAttributes.RCTView = merge(
ReactNativeViewAttributes.UIView, {






removeClippedSubviews:true});


module.exports = ReactNativeViewAttributes;
});
__d('StyleSheetPropType',["createStrictShapeTypeChecker","flattenStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var flattenStyle=require('flattenStyle');

function StyleSheetPropType(
shape)
{
var shapePropType=createStrictShapeTypeChecker(shape);
return function(props, propName, componentName, location){
var newProps=props;
if(props[propName]){

newProps = {};
newProps[propName] = flattenStyle(props[propName]);}

return shapePropType(newProps, propName, componentName, location);};}



module.exports = StyleSheetPropType;
});
__d('createStrictShapeTypeChecker',["ReactPropTypeLocationNames","invariant","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var invariant=require('invariant');
var merge=require('merge');

function createStrictShapeTypeChecker(
shapeTypes)
{
function checkType(isRequired, props, propName, componentName, location){
if(!props[propName]){
if(isRequired){
invariant(
false, 
'Required object `' + propName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return;}

var propValue=props[propName];
var propType=typeof propValue;
var locationName=
location && ReactPropTypeLocationNames[location] || '(unknown)';
if(propType !== 'object'){
invariant(
false, 
'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}




var allKeys=merge(props[propName], shapeTypes);
for(var key in allKeys) {
var checker=shapeTypes[key];
if(!checker){
invariant(
false, 
'Invalid props.' + propName + ' key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + 
JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + 
JSON.stringify(Object.keys(shapeTypes), null, '  '));}


var error=checker(propValue, key, componentName, location);
if(error){
invariant(
false, 
error.message + '\nBad object: ' + 
JSON.stringify(props[propName], null, '  '));}}}




function chainedCheckType(
props, 
propName, 
componentName, 
location)
{
return checkType(false, props, propName, componentName, location);}

chainedCheckType.isRequired = checkType.bind(null, true);
return chainedCheckType;}


module.exports = createStrictShapeTypeChecker;
});
__d('requireNativeComponent',["verifyPropTypes","NativeModules","UnimplementedView","createReactNativeComponentClass","insetsDiffer","pointsDiffer","matricesDiffer","sizesDiffer","verifyPropTypes","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};










'use strict';

var RCTUIManager=require('NativeModules').UIManager;
var UnimplementedView=require('UnimplementedView');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var insetsDiffer=require('insetsDiffer');
var pointsDiffer=require('pointsDiffer');
var matricesDiffer=require('matricesDiffer');
var sizesDiffer=require('sizesDiffer');
var verifyPropTypes=require('verifyPropTypes');
var warning=require('warning');


















function requireNativeComponent(
viewName, 
componentInterface, 
extraConfig)
{
var viewConfig=RCTUIManager[viewName];
if(!viewConfig || !viewConfig.NativeProps){
warning(false, 'Native component for "%s" does not exist', viewName);
return UnimplementedView;}

var nativeProps=_extends({}, 
RCTUIManager.RCTView.NativeProps, 
viewConfig.NativeProps);

viewConfig.uiViewClassName = viewName;
viewConfig.validAttributes = {};
viewConfig.propTypes = componentInterface && componentInterface.propTypes;
for(var key in nativeProps) {
var differ=TypeToDifferMap[nativeProps[key]];
viewConfig.validAttributes[key] = differ?{diff:differ}:true;}

if(__DEV__){
componentInterface && verifyPropTypes(
componentInterface, 
viewConfig, 
extraConfig && extraConfig.nativeOnly);}


return createReactNativeComponentClass(viewConfig);}


var TypeToDifferMap={

CATransform3D:matricesDiffer, 
CGPoint:pointsDiffer, 
CGSize:sizesDiffer, 
UIEdgeInsets:insetsDiffer};




module.exports = requireNativeComponent;
});
__d('verifyPropTypes',["ReactNativeStyleAttributes","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var View=require('View');







function verifyPropTypes(
componentInterface, 
viewConfig, 
nativePropsToIgnore)
{
if(!viewConfig){
return;}

var componentName=componentInterface.name || 
componentInterface.displayName || 
'unknown';
if(!componentInterface.propTypes){
throw new Error(
'`' + componentName + '` has no propTypes defined`');}



var nativeProps=viewConfig.NativeProps;
for(var prop in nativeProps) {
if(!componentInterface.propTypes[prop] && 
!View.propTypes[prop] && 
!ReactNativeStyleAttributes[prop] && (
!nativePropsToIgnore || !nativePropsToIgnore[prop])){
throw new Error(
'`' + componentName + '` has no propType for native prop `' + 
viewConfig.uiViewClassName + '.' + prop + '` of native type `' + 
nativeProps[prop] + '`');}}}





module.exports = verifyPropTypes;
});
__d('UnimplementedView',["React","StyleSheet","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';








var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var UnimplementedView=React.createClass({displayName:'UnimplementedView', 
setNativeProps:function(){}, 




render:function(){
return (
React.createElement(View, {style:[styles.unimplementedView, this.props.style]}, 
this.props.children));}});





var styles=StyleSheet.create({
unimplementedView:{
borderWidth:1, 
borderColor:'red', 
alignSelf:'flex-start'}});



module.exports = UnimplementedView;
});
__d('insetsDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var dummyInsets={
top:undefined, 
left:undefined, 
right:undefined, 
bottom:undefined};


var insetsDiffer=function(
one, 
two)
{
one = one || dummyInsets;
two = two || dummyInsets;
return one !== two && (
one.top !== two.top || 
one.left !== two.left || 
one.right !== two.right || 
one.bottom !== two.bottom);};



module.exports = insetsDiffer;
});
__d('pointsDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var dummyPoint={x:undefined, y:undefined};

var pointsDiffer=function(one, two){
one = one || dummyPoint;
two = two || dummyPoint;
return one !== two && (
one.x !== two.x || 
one.y !== two.y);};



module.exports = pointsDiffer;
});
__d('DatePickerIOS',["NativeMethodsMixin","ReactPropTypes","React","NativeModules","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var RCTDatePickerIOSConsts=require('NativeModules').UIManager.RCTDatePicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var DATEPICKER='datepicker';














var DatePickerIOS=React.createClass({displayName:'DatePickerIOS', 
mixins:[NativeMethodsMixin], 

propTypes:{



date:PropTypes.instanceOf(Date).isRequired, 








onDateChange:PropTypes.func.isRequired, 






maximumDate:PropTypes.instanceOf(Date), 






minimumDate:PropTypes.instanceOf(Date), 




mode:PropTypes.oneOf(['date', 'time', 'datetime']), 




minuteInterval:PropTypes.oneOf([1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30]), 








timeZoneOffsetInMinutes:PropTypes.number}, 


getDefaultProps:function(){
return {
mode:'datetime'};}, 



_onChange:function(event){
var nativeTimeStamp=event.nativeEvent.timestamp;
this.props.onDateChange && this.props.onDateChange(
new Date(nativeTimeStamp));

this.props.onChange && this.props.onChange(event);





var propsTimeStamp=this.props.date.getTime();
if(nativeTimeStamp !== propsTimeStamp){
this.refs[DATEPICKER].setNativeProps({
date:propsTimeStamp});}}, 




render:function(){
var props=this.props;
return (
React.createElement(View, {style:props.style}, 
React.createElement(RCTDatePickerIOS, {
ref:DATEPICKER, 
style:styles.datePickerIOS, 
date:props.date.getTime(), 
maximumDate:
props.maximumDate?props.maximumDate.getTime():undefined, 

minimumDate:
props.minimumDate?props.minimumDate.getTime():undefined, 

mode:props.mode, 
minuteInterval:props.minuteInterval, 
timeZoneOffsetInMinutes:props.timeZoneOffsetInMinutes, 
onChange:this._onChange})));}});






var styles=StyleSheet.create({
datePickerIOS:{
height:RCTDatePickerIOSConsts.ComponentHeight, 
width:RCTDatePickerIOSConsts.ComponentWidth}});



var RCTDatePickerIOS=requireNativeComponent('RCTDatePicker', DatePickerIOS);

module.exports = DatePickerIOS;
});
__d('Image',["EdgeInsetsPropType","ImageResizeMode","ImageStylePropTypes","NativeMethodsMixin","NativeModules","ReactPropTypes","React","ReactNativeViewAttributes","StyleSheet","StyleSheetPropType","flattenStyle","invariant","requireNativeComponent","resolveAssetSource","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var ImageResizeMode=require('ImageResizeMode');
var ImageStylePropTypes=require('ImageStylePropTypes');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');

var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var requireNativeComponent=require('requireNativeComponent');
var resolveAssetSource=require('resolveAssetSource');
var warning=require('warning');

























var Image=React.createClass({displayName:'Image', 
propTypes:{
style:StyleSheetPropType(ImageStylePropTypes), 





source:PropTypes.shape({
uri:PropTypes.string}), 






defaultSource:PropTypes.shape({
uri:PropTypes.string}), 





accessible:PropTypes.bool, 





accessibilityLabel:PropTypes.string, 








capInsets:EdgeInsetsPropType, 




resizeMode:PropTypes.oneOf(['cover', 'contain', 'stretch']), 




testID:PropTypes.string, 




onLayout:PropTypes.func, 




onLoadStart:PropTypes.func, 




onProgress:PropTypes.func, 




onError:PropTypes.func, 




onLoad:PropTypes.func, 




onLoadEnd:PropTypes.func}, 


statics:{
resizeMode:ImageResizeMode}, 


mixins:[NativeMethodsMixin], 





viewConfig:{
uiViewClassName:'UIView', 
validAttributes:ReactNativeViewAttributes.UIView}, 


render:function(){
for(var prop in cfg.nativeOnly) {
if(this.props[prop] !== undefined){
console.warn('Prop `' + prop + ' = ' + this.props[prop] + '` should ' + 
'not be set directly on Image.');}}


var source=resolveAssetSource(this.props.source) || {};
var defaultSource=this.props.defaultSource && resolveAssetSource(this.props.defaultSource) || {};var 

width=source.width;var height=source.height;
var style=flattenStyle([{width:width, height:height}, styles.base, this.props.style]) || {};

var isNetwork=source.uri && source.uri.match(/^https?:/);
var RawImage=isNetwork?RCTNetworkImageView:RCTImageView;
var resizeMode=this.props.resizeMode || (style || {}).resizeMode || 'cover';
var tintColor=(style || {}).tintColor;

return (
React.createElement(RawImage, _extends({}, 
this.props, {
style:style, 
resizeMode:resizeMode, 
tintColor:tintColor, 
src:source.uri, 
defaultSrc:defaultSource.uri})));}});





var styles=StyleSheet.create({
base:{
overflow:'hidden'}});



var cfg={
nativeOnly:{
src:true, 
defaultImageSrc:true, 
imageTag:true, 
progressHandlerRegistered:true}};


var RCTImageView=requireNativeComponent('RCTImageView', Image, cfg);
var RCTNetworkImageView=NativeModules.NetworkImageViewManager?requireNativeComponent('RCTNetworkImageView', Image, cfg):RCTImageView;

module.exports = Image;
});
__d('EdgeInsetsPropType',["ReactPropTypes","createStrictShapeTypeChecker"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var EdgeInsetsPropType=createStrictShapeTypeChecker({
top:PropTypes.number, 
left:PropTypes.number, 
bottom:PropTypes.number, 
right:PropTypes.number});


module.exports = EdgeInsetsPropType;
});
__d('resolveAssetSource',["AssetRegistry","PixelRatio","Platform","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var AssetRegistry=require('AssetRegistry');
var PixelRatio=require('PixelRatio');
var Platform=require('Platform');
var SourceCode=require('NativeModules').SourceCode;

var _serverURL;

function getDevServerURL(){
if(!__DEV__){

return null;}

if(_serverURL === undefined){
var scriptURL=SourceCode.scriptURL;
var match=scriptURL && scriptURL.match(/^https?:\/\/.*?\//);
if(match){

_serverURL = match[0];}else 
{

_serverURL = null;}}



return _serverURL;}





function getPathInArchive(asset){
if(Platform.OS === 'android'){
var assetDir=getBasePath(asset);


return (assetDir + '/' + asset.name).
toLowerCase().
replace(/\//g, '_').
replace(/([^a-z0-9_])/g, '').
replace(/^assets_/, '');}else 
{

return getScaledAssetPath(asset);}}







function getPathOnDevserver(devServerUrl, asset){
return devServerUrl + getScaledAssetPath(asset) + '?hash=' + asset.hash;}





function getBasePath(asset){


var path=asset.httpServerLocation;
if(path[0] === '/'){
path = path.substr(1);}

return path;}





function getScaledAssetPath(asset){
var scale=pickScale(asset.scales, PixelRatio.get());
var scaleSuffix=scale === 1?'':'@' + scale + 'x';
var assetDir=getBasePath(asset);
return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;}


function pickScale(scales, deviceScale){

for(var i=0; i < scales.length; i++) {
if(scales[i] >= deviceScale){
return scales[i];}}






return scales[scales.length - 1] || 1;}


function resolveAssetSource(source){
if(typeof source === 'object'){
return source;}


var asset=AssetRegistry.getAssetByID(source);
if(asset){
return assetToImageSource(asset);}


return null;}


function assetToImageSource(asset){
var devServerURL=getDevServerURL();
if(devServerURL){
return {
width:asset.width, 
height:asset.height, 
uri:getPathOnDevserver(devServerURL, asset), 
isStatic:false};}else 

{
return {
width:asset.width, 
height:asset.height, 
uri:getPathInArchive(asset), 
isStatic:true};}}




module.exports = resolveAssetSource;
module.exports.pickScale = pickScale;
});
__d('AssetRegistry',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






var assets=[];

function registerAsset(asset){


return assets.push(asset);}


function getAssetByID(assetId){
return assets[assetId - 1];}


module.exports = {registerAsset:registerAsset, getAssetByID:getAssetByID};
});
__d('PixelRatio',["Dimensions"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var Dimensions=require('Dimensions');var 
































PixelRatio=(function(){function PixelRatio(){_classCallCheck(this, PixelRatio);}_createClass(PixelRatio, null, [{key:'get', value:


















function get(){
return Dimensions.get('window').scale;}}, {key:'getFontScale', value:













function getFontScale(){
return Dimensions.get('window').fontScale || PixelRatio.get();}}, {key:'getPixelSizeForLayoutSize', value:







function getPixelSizeForLayoutSize(layoutSize){
return Math.round(layoutSize * PixelRatio.get());}}, {key:'startDetecting', value:



function startDetecting(){}}]);return PixelRatio;})();


module.exports = PixelRatio;
});
__d('Dimensions',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var NativeModules=require('NativeModules');

var invariant=require('invariant');

var dimensions=NativeModules.UIManager.Dimensions;




if(dimensions && dimensions.windowPhysicalPixels){

dimensions = JSON.parse(JSON.stringify(dimensions));

var windowPhysicalPixels=dimensions.windowPhysicalPixels;
dimensions.window = {
width:windowPhysicalPixels.width / windowPhysicalPixels.scale, 
height:windowPhysicalPixels.height / windowPhysicalPixels.scale, 
scale:windowPhysicalPixels.scale, 
fontScale:windowPhysicalPixels.fontScale};



delete dimensions.windowPhysicalPixels;}var 


Dimensions=(function(){function Dimensions(){_classCallCheck(this, Dimensions);}_createClass(Dimensions, null, [{key:'set', value:





function set(dims){
Object.assign(dimensions, dims);
return true;}}, {key:'get', value:















function get(dim){
invariant(dimensions[dim], 'No dimension set for key ' + dim);
return dimensions[dim];}}]);return Dimensions;})();



module.exports = Dimensions;
});
__d('ListView',["ListViewDataSource","React","NativeModules","NativeModules","ScrollView","ScrollResponder","StaticRenderer","isEmpty","logError","merge","react-timer-mixin/TimerMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};function _objectWithoutProperties(obj, keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj, i))continue;target[i] = obj[i];}return target;}



























var ListViewDataSource=require('ListViewDataSource');
var React=require('React');
var RCTUIManager=require('NativeModules').UIManager;
var RCTScrollViewManager=require('NativeModules').ScrollViewManager;
var ScrollView=require('ScrollView');
var ScrollResponder=require('ScrollResponder');
var StaticRenderer=require('StaticRenderer');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');

var isEmpty=require('isEmpty');
var logError=require('logError');
var merge=require('merge');

var PropTypes=React.PropTypes;

var DEFAULT_PAGE_SIZE=1;
var DEFAULT_INITIAL_ROWS=10;
var DEFAULT_SCROLL_RENDER_AHEAD=1000;
var DEFAULT_END_REACHED_THRESHOLD=1000;
var DEFAULT_SCROLL_CALLBACK_THROTTLE=50;
var SCROLLVIEW_REF='listviewscroll';


















































var ListView=React.createClass({displayName:'ListView', 
mixins:[ScrollResponder.Mixin, TimerMixin], 

statics:{
DataSource:ListViewDataSource}, 









propTypes:_extends({}, 
ScrollView.propTypes, {

dataSource:PropTypes.instanceOf(ListViewDataSource).isRequired, 







renderSeparator:PropTypes.func, 










renderRow:PropTypes.func.isRequired, 





initialListSize:PropTypes.number, 





onEndReached:PropTypes.func, 



onEndReachedThreshold:PropTypes.number, 



pageSize:PropTypes.number, 








renderFooter:PropTypes.func, 
renderHeader:PropTypes.func, 









renderSectionHeader:PropTypes.func, 






renderScrollComponent:React.PropTypes.func.isRequired, 




scrollRenderAheadDistance:React.PropTypes.number, 









onChangeVisibleRows:React.PropTypes.func, 





removeClippedSubviews:React.PropTypes.bool}), 





getMetrics:function(){
return {
contentLength:this.scrollProperties.contentLength, 
totalRows:this.props.dataSource.getRowCount(), 
renderedRows:this.state.curRenderedRowsCount, 
visibleRows:Object.keys(this._visibleRows).length};}, 







getScrollResponder:function(){
return this.refs[SCROLLVIEW_REF] && 
this.refs[SCROLLVIEW_REF].getScrollResponder && 
this.refs[SCROLLVIEW_REF].getScrollResponder();}, 


setNativeProps:function(props){
this.refs[SCROLLVIEW_REF].setNativeProps(props);}, 






getDefaultProps:function(){
return {
initialListSize:DEFAULT_INITIAL_ROWS, 
pageSize:DEFAULT_PAGE_SIZE, 
renderScrollComponent:function(props){return React.createElement(ScrollView, props);}, 
scrollRenderAheadDistance:DEFAULT_SCROLL_RENDER_AHEAD, 
onEndReachedThreshold:DEFAULT_END_REACHED_THRESHOLD};}, 



getInitialState:function(){
return {
curRenderedRowsCount:this.props.initialListSize, 
prevRenderedRowsCount:0, 
highlightedRow:{}};}, 



getInnerViewNode:function(){
return this.refs[SCROLLVIEW_REF].getInnerViewNode();}, 


componentWillMount:function(){

this.scrollProperties = {
visibleLength:null, 
contentLength:null, 
offset:0};

this._childFrames = [];
this._visibleRows = {};}, 


componentDidMount:function(){var _this=this;


this.requestAnimationFrame(function(){
_this._measureAndUpdateScrollProps();});}, 



componentWillReceiveProps:function(nextProps){
if(this.props.dataSource !== nextProps.dataSource){
this.setState(function(state, props){
var rowsToRender=Math.min(
state.curRenderedRowsCount + props.pageSize, 
props.dataSource.getRowCount());

return {
prevRenderedRowsCount:0, 
curRenderedRowsCount:rowsToRender};});}}, 





componentDidUpdate:function(){var _this2=this;
this.requestAnimationFrame(function(){
_this2._measureAndUpdateScrollProps();});}, 



onRowHighlighted:function(sectionID, rowID){
this.setState({highlightedRow:{sectionID:sectionID, rowID:rowID}});}, 


render:function(){
var bodyComponents=[];

var dataSource=this.props.dataSource;
var allRowIDs=dataSource.rowIdentities;
var rowCount=0;
var sectionHeaderIndices=[];

var header=this.props.renderHeader && this.props.renderHeader();
var footer=this.props.renderFooter && this.props.renderFooter();
var totalIndex=header?1:0;

for(var sectionIdx=0; sectionIdx < allRowIDs.length; sectionIdx++) {
var sectionID=dataSource.sectionIdentities[sectionIdx];
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}


if(this.props.renderSectionHeader){
var shouldUpdateHeader=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.sectionHeaderShouldUpdate(sectionIdx);
bodyComponents.push(
React.createElement(StaticRenderer, {
key:'s_' + sectionID, 
shouldUpdate:!!shouldUpdateHeader, 
render:this.props.renderSectionHeader.bind(
null, 
dataSource.getSectionHeaderData(sectionIdx), 
sectionID)}));



sectionHeaderIndices.push(totalIndex++);}


for(var rowIdx=0; rowIdx < rowIDs.length; rowIdx++) {
var rowID=rowIDs[rowIdx];
var comboID=sectionID + rowID;
var shouldUpdateRow=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.rowShouldUpdate(sectionIdx, rowIdx);
var row=
React.createElement(StaticRenderer, {
key:'r_' + comboID, 
shouldUpdate:!!shouldUpdateRow, 
render:this.props.renderRow.bind(
null, 
dataSource.getRowData(sectionIdx, rowIdx), 
sectionID, 
rowID, 
this.onRowHighlighted)});


bodyComponents.push(row);
totalIndex++;

if(this.props.renderSeparator && (
rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)){
var adjacentRowHighlighted=
this.state.highlightedRow.sectionID === sectionID && (
this.state.highlightedRow.rowID === rowID || 
this.state.highlightedRow.rowID === rowIDs[rowIdx + 1]);

var separator=this.props.renderSeparator(
sectionID, 
rowID, 
adjacentRowHighlighted);

bodyComponents.push(separator);
totalIndex++;}

if(++rowCount === this.state.curRenderedRowsCount){
break;}}


if(rowCount >= this.state.curRenderedRowsCount){
break;}}var _props=






this.props;var renderScrollComponent=_props.renderScrollComponent;var props=_objectWithoutProperties(_props, ['renderScrollComponent']);
if(!props.scrollEventThrottle){
props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;}

Object.assign(props, {
onScroll:this._onScroll, 
stickyHeaderIndices:sectionHeaderIndices, 



onKeyboardWillShow:undefined, 
onKeyboardWillHide:undefined, 
onKeyboardDidShow:undefined, 
onKeyboardDidHide:undefined});




return React.cloneElement(renderScrollComponent(props), {
ref:SCROLLVIEW_REF}, 
header, bodyComponents, footer);}, 






_measureAndUpdateScrollProps:function(){
var scrollComponent=this.getScrollResponder();
if(!scrollComponent || !scrollComponent.getInnerViewNode){
return;}

RCTUIManager.measureLayout(
scrollComponent.getInnerViewNode(), 
React.findNodeHandle(scrollComponent), 
logError, 
this._setScrollContentLength);

RCTUIManager.measureLayoutRelativeToParent(
React.findNodeHandle(scrollComponent), 
logError, 
this._setScrollVisibleLength);




RCTScrollViewManager && RCTScrollViewManager.calculateChildFrames && 
RCTScrollViewManager.calculateChildFrames(
React.findNodeHandle(scrollComponent), 
this._updateChildFrames);}, 



_setScrollContentLength:function(left, top, width, height){
this.scrollProperties.contentLength = !this.props.horizontal?
height:width;}, 


_setScrollVisibleLength:function(left, top, width, height){
this.scrollProperties.visibleLength = !this.props.horizontal?
height:width;
this._updateVisibleRows();
this._renderMoreRowsIfNeeded();}, 


_updateChildFrames:function(childFrames){
this._updateVisibleRows(childFrames);}, 


_renderMoreRowsIfNeeded:function(){
if(this.scrollProperties.contentLength === null || 
this.scrollProperties.visibleLength === null || 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
return;}


var distanceFromEnd=this._getDistanceFromEnd(this.scrollProperties);
if(distanceFromEnd < this.props.scrollRenderAheadDistance){
this._pageInNewRows();}}, 



_pageInNewRows:function(){var _this3=this;
this.setState(function(state, props){
var rowsToRender=Math.min(
state.curRenderedRowsCount + props.pageSize, 
props.dataSource.getRowCount());

return {
prevRenderedRowsCount:state.curRenderedRowsCount, 
curRenderedRowsCount:rowsToRender};}, 

function(){
_this3._measureAndUpdateScrollProps();
_this3.setState(function(state){return {
prevRenderedRowsCount:state.curRenderedRowsCount};});});}, 




_getDistanceFromEnd:function(scrollProperties){
return scrollProperties.contentLength - 
scrollProperties.visibleLength - 
scrollProperties.offset;}, 


_updateVisibleRows:function(updatedFrames){var _this4=this;
if(!this.props.onChangeVisibleRows){
return;}

if(updatedFrames){
updatedFrames.forEach(function(newFrame){
_this4._childFrames[newFrame.index] = merge(newFrame);});}


var isVertical=!this.props.horizontal;
var dataSource=this.props.dataSource;
var visibleMin=this.scrollProperties.offset;
var visibleMax=visibleMin + this.scrollProperties.visibleLength;
var allRowIDs=dataSource.rowIdentities;

var header=this.props.renderHeader && this.props.renderHeader();
var totalIndex=header?1:0;
var visibilityChanged=false;
var changedRows={};
for(var sectionIdx=0; sectionIdx < allRowIDs.length; sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}

var sectionID=dataSource.sectionIdentities[sectionIdx];
if(this.props.renderSectionHeader){
totalIndex++;}

var visibleSection=this._visibleRows[sectionID];
if(!visibleSection){
visibleSection = {};}

for(var rowIdx=0; rowIdx < rowIDs.length; rowIdx++) {
var rowID=rowIDs[rowIdx];
var frame=this._childFrames[totalIndex];
totalIndex++;
if(!frame){
break;}

var rowVisible=visibleSection[rowID];
var min=isVertical?frame.y:frame.x;
var max=min + (isVertical?frame.height:frame.width);
if(min > visibleMax || max < visibleMin){
if(rowVisible){
visibilityChanged = true;
delete visibleSection[rowID];
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = false;}}else 

if(!rowVisible){
visibilityChanged = true;
visibleSection[rowID] = true;
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = true;}}


if(!isEmpty(visibleSection)){
this._visibleRows[sectionID] = visibleSection;}else 
if(this._visibleRows[sectionID]){
delete this._visibleRows[sectionID];}}


visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows, changedRows);}, 


_onScroll:function(e){
var isVertical=!this.props.horizontal;
this.scrollProperties.visibleLength = e.nativeEvent.layoutMeasurement[
isVertical?'height':'width'];

this.scrollProperties.contentLength = e.nativeEvent.contentSize[
isVertical?'height':'width'];

this.scrollProperties.offset = e.nativeEvent.contentOffset[
isVertical?'y':'x'];

this._updateVisibleRows(e.nativeEvent.updatedChildFrames);
var nearEnd=this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold;
if(nearEnd && 
this.props.onEndReached && 
this.scrollProperties.contentLength !== this._sentEndForContentLength && 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
this._sentEndForContentLength = this.scrollProperties.contentLength;
this.props.onEndReached(e);}else 
{
this._renderMoreRowsIfNeeded();}


this.props.onScroll && this.props.onScroll(e);}});



module.exports = ListView;
});
__d('ListViewDataSource',["invariant","isEmpty","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}





























var invariant=require('invariant');
var isEmpty=require('isEmpty');
var warning=require('warning');

function defaultGetRowData(
dataBlob, 
sectionID, 
rowID)
{
return dataBlob[sectionID][rowID];}


function defaultGetSectionHeaderData(
dataBlob, 
sectionID)
{
return dataBlob[sectionID];}var 













































ListViewDataSource=(function(){


























function ListViewDataSource(params){_classCallCheck(this, ListViewDataSource);
invariant(
params && typeof params.rowHasChanged === 'function', 
'Must provide a rowHasChanged function.');

this._rowHasChanged = params.rowHasChanged;
this._getRowData = params.getRowData || defaultGetRowData;
this._sectionHeaderHasChanged = params.sectionHeaderHasChanged;
this._getSectionHeaderData = 
params.getSectionHeaderData || defaultGetSectionHeaderData;

this._dataBlob = null;
this._dirtyRows = [];
this._dirtySections = [];
this._cachedRowCount = 0;



this.rowIdentities = [];
this.sectionIdentities = [];}_createClass(ListViewDataSource, [{key:'cloneWithRows', value:


















function cloneWithRows(
dataBlob, 
rowIdentities)
{
var rowIds=rowIdentities?[rowIdentities]:null;
if(!this._sectionHeaderHasChanged){
this._sectionHeaderHasChanged = function(){return false;};}

return this.cloneWithRowsAndSections({s1:dataBlob}, ['s1'], rowIds);}}, {key:'cloneWithRowsAndSections', value:













function cloneWithRowsAndSections(
dataBlob, 
sectionIdentities, 
rowIdentities)
{
invariant(
typeof this._sectionHeaderHasChanged === 'function', 
'Must provide a sectionHeaderHasChanged function with section data.');

var newSource=new ListViewDataSource({
getRowData:this._getRowData, 
getSectionHeaderData:this._getSectionHeaderData, 
rowHasChanged:this._rowHasChanged, 
sectionHeaderHasChanged:this._sectionHeaderHasChanged});

newSource._dataBlob = dataBlob;
if(sectionIdentities){
newSource.sectionIdentities = sectionIdentities;}else 
{
newSource.sectionIdentities = Object.keys(dataBlob);}

if(rowIdentities){
newSource.rowIdentities = rowIdentities;}else 
{
newSource.rowIdentities = [];
newSource.sectionIdentities.forEach(function(sectionID){
newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));});}


newSource._cachedRowCount = countRows(newSource.rowIdentities);

newSource._calculateDirtyArrays(
this._dataBlob, 
this.sectionIdentities, 
this.rowIdentities);


return newSource;}}, {key:'getRowCount', value:


function getRowCount(){
return this._cachedRowCount;}}, {key:'rowShouldUpdate', value:





function rowShouldUpdate(sectionIndex, rowIndex){
var needsUpdate=this._dirtyRows[sectionIndex][rowIndex];
warning(needsUpdate !== undefined, 
'missing dirtyBit for section, row: ' + sectionIndex + ', ' + rowIndex);
return needsUpdate;}}, {key:'getRowData', value:





function getRowData(sectionIndex, rowIndex){
var sectionID=this.sectionIdentities[sectionIndex];
var rowID=this.rowIdentities[sectionIndex][rowIndex];
warning(
sectionID !== undefined && rowID !== undefined, 
'rendering invalid section, row: ' + sectionIndex + ', ' + rowIndex);

return this._getRowData(this._dataBlob, sectionID, rowID);}}, {key:'getRowIDForFlatIndex', value:






function getRowIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0; ii < this.sectionIdentities.length; ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.rowIdentities[ii][accessIndex];}}


return null;}}, {key:'getSectionIDForFlatIndex', value:






function getSectionIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0; ii < this.sectionIdentities.length; ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.sectionIdentities[ii];}}


return null;}}, {key:'getSectionLengths', value:





function getSectionLengths(){
var results=[];
for(var ii=0; ii < this.sectionIdentities.length; ii++) {
results.push(this.rowIdentities[ii].length);}

return results;}}, {key:'sectionHeaderShouldUpdate', value:





function sectionHeaderShouldUpdate(sectionIndex){
var needsUpdate=this._dirtySections[sectionIndex];
warning(needsUpdate !== undefined, 
'missing dirtyBit for section: ' + sectionIndex);
return needsUpdate;}}, {key:'getSectionHeaderData', value:





function getSectionHeaderData(sectionIndex){
if(!this._getSectionHeaderData){
return null;}

var sectionID=this.sectionIdentities[sectionIndex];
warning(sectionID !== undefined, 
'renderSection called on invalid section: ' + sectionIndex);
return this._getSectionHeaderData(this._dataBlob, sectionID);}}, {key:'_calculateDirtyArrays', value:





















function _calculateDirtyArrays(
prevDataBlob, 
prevSectionIDs, 
prevRowIDs)
{

var prevSectionsHash=keyedDictionaryFromArray(prevSectionIDs);
var prevRowsHash={};
for(var ii=0; ii < prevRowIDs.length; ii++) {
var sectionID=prevSectionIDs[ii];
warning(
!prevRowsHash[sectionID], 
'SectionID appears more than once: ' + sectionID);

prevRowsHash[sectionID] = keyedDictionaryFromArray(prevRowIDs[ii]);}



this._dirtySections = [];
this._dirtyRows = [];

var dirty;
for(var sIndex=0; sIndex < this.sectionIdentities.length; sIndex++) {
var sectionID=this.sectionIdentities[sIndex];

dirty = !prevSectionsHash[sectionID];
var sectionHeaderHasChanged=this._sectionHeaderHasChanged;
if(!dirty && sectionHeaderHasChanged){
dirty = sectionHeaderHasChanged(
this._getSectionHeaderData(prevDataBlob, sectionID), 
this._getSectionHeaderData(this._dataBlob, sectionID));}


this._dirtySections.push(!!dirty);

this._dirtyRows[sIndex] = [];
for(var rIndex=0; rIndex < this.rowIdentities[sIndex].length; rIndex++) {
var rowID=this.rowIdentities[sIndex][rIndex];

dirty = 
!prevSectionsHash[sectionID] || 
!prevRowsHash[sectionID][rowID] || 
this._rowHasChanged(
this._getRowData(prevDataBlob, sectionID, rowID), 
this._getRowData(this._dataBlob, sectionID, rowID));

this._dirtyRows[sIndex].push(!!dirty);}}}}]);return ListViewDataSource;})();





function countRows(allRowIDs){
var totalRows=0;
for(var sectionIdx=0; sectionIdx < allRowIDs.length; sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
totalRows += rowIDs.length;}

return totalRows;}


function keyedDictionaryFromArray(arr){
if(isEmpty(arr)){
return {};}

var result={};
for(var ii=0; ii < arr.length; ii++) {
var key=arr[ii];
warning(!result[key], 'Value appears more than once in array: ' + key);
result[key] = true;}

return result;}



module.exports = ListViewDataSource;
});
__d('isEmpty',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 



















isEmpty(obj){
if(Array.isArray(obj)){
return obj.length === 0;}else 
if(typeof obj === 'object'){
for(var i in obj) {
return false;}

return true;}else 
{
return !obj;}}



module.exports = isEmpty;
});
__d('ScrollView',["EdgeInsetsPropType","Platform","PointPropType","NativeModules","React","ReactNativeViewAttributes","NativeModules","ScrollResponder","StyleSheet","StyleSheetPropType","View","ViewStylePropTypes","createReactNativeComponentClass","deepDiffer","flattenStyle","insetsDiffer","invariant","pointsDiffer","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var Platform=require('Platform');
var PointPropType=require('PointPropType');
var RCTScrollView=require('NativeModules').UIManager.RCTScrollView;
var RCTScrollViewConsts=RCTScrollView.Constants;
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTUIManager=require('NativeModules').UIManager;
var ScrollResponder=require('ScrollResponder');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');
var View=require('View');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var flattenStyle=require('flattenStyle');
var insetsDiffer=require('insetsDiffer');
var invariant=require('invariant');
var pointsDiffer=require('pointsDiffer');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;

var SCROLLVIEW='ScrollView';
var INNERVIEW='InnerScrollView';
















var ScrollView=React.createClass({displayName:'ScrollView', 
propTypes:{






automaticallyAdjustContentInsets:PropTypes.bool, 





contentInset:EdgeInsetsPropType, 





contentOffset:PointPropType, 







bounces:PropTypes.bool, 






bouncesZoom:PropTypes.bool, 






alwaysBounceHorizontal:PropTypes.bool, 






alwaysBounceVertical:PropTypes.bool, 







centerContent:PropTypes.bool, 















contentContainerStyle:StyleSheetPropType(ViewStylePropTypes), 







decelerationRate:PropTypes.number, 




horizontal:PropTypes.bool, 





directionalLockEnabled:PropTypes.bool, 





canCancelContentTouches:PropTypes.bool, 








keyboardDismissMode:PropTypes.oneOf([
'none', 
'interactive', 
'on-drag']), 








keyboardShouldPersistTaps:PropTypes.bool, 




maximumZoomScale:PropTypes.number, 




minimumZoomScale:PropTypes.number, 




onScroll:PropTypes.func, 




onScrollAnimationEnd:PropTypes.func, 






pagingEnabled:PropTypes.bool, 





scrollEnabled:PropTypes.bool, 









scrollEventThrottle:PropTypes.number, 






scrollIndicatorInsets:EdgeInsetsPropType, 





scrollsToTop:PropTypes.bool, 



showsHorizontalScrollIndicator:PropTypes.bool, 



showsVerticalScrollIndicator:PropTypes.bool, 








stickyHeaderIndices:PropTypes.arrayOf(PropTypes.number), 
style:StyleSheetPropType(ViewStylePropTypes), 






removeClippedSubviews:PropTypes.bool, 




zoomScale:PropTypes.number}, 


mixins:[ScrollResponder.Mixin], 

getInitialState:function(){
return this.scrollResponderMixinGetInitialState();}, 


setNativeProps:function(props){
this.refs[SCROLLVIEW].setNativeProps(props);}, 








getScrollResponder:function(){
return this;}, 


getInnerViewNode:function(){
return React.findNodeHandle(this.refs[INNERVIEW]);}, 


scrollTo:function(destY, destX){

this.getScrollResponder().scrollResponderScrollTo(destX || 0, destY || 0);}, 


scrollWithoutAnimationTo:function(destY, destX){
RCTUIManager.scrollWithoutAnimationTo(
React.findNodeHandle(this), 
destX || 0, 
destY || 0);}, 



handleScroll:function(e){
if(__DEV__){
if(this.props.onScroll && !this.props.scrollEventThrottle){
console.log(
'You specified `onScroll` on a <ScrollView> but not ' + 
'`scrollEventThrottle`. You will only receive one event. ' + 
'Using `16` you get all the events but be aware that it may ' + 
'cause frame drops, use a bigger number if you don\'t need as ' + 
'much precision.');}}



this.scrollResponderHandleScroll(e);}, 


render:function(){
var contentContainerStyle=[
this.props.horizontal && styles.contentContainerHorizontal, 
this.props.contentContainerStyle];

if(__DEV__ && this.props.style){
var style=flattenStyle(this.props.style);
var childLayoutProps=['alignItems', 'justifyContent'].
filter(function(prop){return style && style[prop] !== undefined;});
invariant(
childLayoutProps.length === 0, 
'ScrollView child layout (' + JSON.stringify(childLayoutProps) + 
') must by applied through the contentContainerStyle prop.');}



var contentContainer=
React.createElement(View, {
ref:INNERVIEW, 
style:contentContainerStyle, 
removeClippedSubviews:this.props.removeClippedSubviews}, 
this.props.children);


var alwaysBounceHorizontal=
this.props.alwaysBounceHorizontal !== undefined?
this.props.alwaysBounceHorizontal:
this.props.horizontal;

var alwaysBounceVertical=
this.props.alwaysBounceVertical !== undefined?
this.props.alwaysBounceVertical:
!this.props.horizontal;

var props=_extends({}, 
this.props, {
alwaysBounceHorizontal:alwaysBounceHorizontal, 
alwaysBounceVertical:alwaysBounceVertical, 
style:[styles.base, this.props.style], 
onTouchStart:this.scrollResponderHandleTouchStart, 
onTouchMove:this.scrollResponderHandleTouchMove, 
onTouchEnd:this.scrollResponderHandleTouchEnd, 
onScrollBeginDrag:this.scrollResponderHandleScrollBeginDrag, 
onScrollEndDrag:this.scrollResponderHandleScrollEndDrag, 
onMomentumScrollBegin:this.scrollResponderHandleMomentumScrollBegin, 
onMomentumScrollEnd:this.scrollResponderHandleMomentumScrollEnd, 
onStartShouldSetResponder:this.scrollResponderHandleStartShouldSetResponder, 
onStartShouldSetResponderCapture:this.scrollResponderHandleStartShouldSetResponderCapture, 
onScrollShouldSetResponder:this.scrollResponderHandleScrollShouldSetResponder, 
onScroll:this.handleScroll, 
onResponderGrant:this.scrollResponderHandleResponderGrant, 
onResponderTerminationRequest:this.scrollResponderHandleTerminationRequest, 
onResponderTerminate:this.scrollResponderHandleTerminate, 
onResponderRelease:this.scrollResponderHandleResponderRelease, 
onResponderReject:this.scrollResponderHandleResponderReject});


var ScrollViewClass;
if(Platform.OS === 'ios'){
ScrollViewClass = RCTScrollView;}else 
if(Platform.OS === 'android'){
if(this.props.horizontal){
ScrollViewClass = AndroidHorizontalScrollView;}else 
{
ScrollViewClass = AndroidScrollView;}

var keyboardDismissModeConstants={
'none':RCTScrollViewConsts.KeyboardDismissMode.None, 
'interactive':RCTScrollViewConsts.KeyboardDismissMode.Interactive, 
'on-drag':RCTScrollViewConsts.KeyboardDismissMode.OnDrag};

props.keyboardDismissMode = props.keyboardDismissMode?
keyboardDismissModeConstants[props.keyboardDismissMode]:undefined;}

invariant(
ScrollViewClass !== undefined, 
'ScrollViewClass must not be undefined');


return (
React.createElement(ScrollViewClass, _extends({}, props, {ref:SCROLLVIEW}), 
contentContainer));}});





var styles=StyleSheet.create({
base:{
flex:1}, 

contentContainerHorizontal:{
alignSelf:'flex-start', 
flexDirection:'row'}});



var validAttributes=_extends({}, 
ReactNativeViewAttributes.UIView, {
alwaysBounceHorizontal:true, 
alwaysBounceVertical:true, 
automaticallyAdjustContentInsets:true, 
bounces:true, 
centerContent:true, 
contentInset:{diff:insetsDiffer}, 
contentOffset:{diff:pointsDiffer}, 
decelerationRate:true, 
horizontal:true, 
keyboardDismissMode:true, 
keyboardShouldPersistTaps:true, 
maximumZoomScale:true, 
minimumZoomScale:true, 
pagingEnabled:true, 
removeClippedSubviews:true, 
scrollEnabled:true, 
scrollIndicatorInsets:{diff:insetsDiffer}, 
scrollsToTop:true, 
showsHorizontalScrollIndicator:true, 
showsVerticalScrollIndicator:true, 
stickyHeaderIndices:{diff:deepDiffer}, 
scrollEventThrottle:true, 
zoomScale:true});


if(Platform.OS === 'android'){
var AndroidScrollView=createReactNativeComponentClass({
validAttributes:validAttributes, 
uiViewClassName:'RCTScrollView'});

var AndroidHorizontalScrollView=createReactNativeComponentClass({
validAttributes:validAttributes, 
uiViewClassName:'AndroidHorizontalScrollView'});}else 

if(Platform.OS === 'ios'){
var RCTScrollView=requireNativeComponent('RCTScrollView', ScrollView);}


module.exports = ScrollView;
});
__d('PointPropType',["ReactPropTypes","createStrictShapeTypeChecker"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var PointPropType=createStrictShapeTypeChecker({
x:PropTypes.number, 
y:PropTypes.number});


module.exports = PointPropType;
});
__d('ScrollResponder',["NativeModules","Platform","RCTDeviceEventEmitter","React","Subscribable","TextInputState","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var Platform=require('Platform');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var Subscribable=require('Subscribable');
var TextInputState=require('TextInputState');

var RCTUIManager=NativeModules.UIManager;
var RCTScrollViewConsts=RCTUIManager.RCTScrollView.Constants;

var warning=require('warning');















































































var IS_ANIMATING_TOUCH_START_THRESHOLD_MS=16;










var ScrollResponderMixin={
mixins:[Subscribable.Mixin], 
statics:RCTScrollViewConsts, 
scrollResponderMixinGetInitialState:function(){
return {
isTouching:false, 
lastMomentumScrollBeginTime:0, 
lastMomentumScrollEndTime:0, 






observedScrollSinceBecomingResponder:false, 
becameResponderWhileAnimating:false};}, 






scrollResponderHandleScrollShouldSetResponder:function(){
return this.state.isTouching;}, 



























scrollResponderHandleStartShouldSetResponder:function(){
return false;}, 













scrollResponderHandleStartShouldSetResponderCapture:function(e){

var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps && 
currentlyFocusedTextInput != null && 
e.target !== currentlyFocusedTextInput){
return true;}

return this.scrollResponderIsAnimating();}, 












scrollResponderHandleResponderReject:function(){
warning(false, 'ScrollView doesn\'t take rejection well - scrolls anyway');}, 

















scrollResponderHandleTerminationRequest:function(){
return !this.state.observedScrollSinceBecomingResponder;}, 







scrollResponderHandleTouchEnd:function(e){
var nativeEvent=e.nativeEvent;
this.state.isTouching = nativeEvent.touches.length !== 0;
this.props.onTouchEnd && this.props.onTouchEnd(e);}, 





scrollResponderHandleResponderRelease:function(e){
this.props.onResponderRelease && this.props.onResponderRelease(e);



var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps && 
currentlyFocusedTextInput != null && 
e.target !== currentlyFocusedTextInput && 
!this.state.observedScrollSinceBecomingResponder && 
!this.state.becameResponderWhileAnimating){
this.props.onScrollResponderKeyboardDismissed && 
this.props.onScrollResponderKeyboardDismissed(e);
TextInputState.blurTextInput(currentlyFocusedTextInput);}}, 



scrollResponderHandleScroll:function(e){
this.state.observedScrollSinceBecomingResponder = true;
this.props.onScroll && this.props.onScroll(e);}, 





scrollResponderHandleResponderGrant:function(e){
this.state.observedScrollSinceBecomingResponder = false;
this.props.onResponderGrant && this.props.onResponderGrant(e);
this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();}, 









scrollResponderHandleScrollBeginDrag:function(e){
this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);}, 





scrollResponderHandleScrollEndDrag:function(e){
this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);}, 





scrollResponderHandleMomentumScrollBegin:function(e){
this.state.lastMomentumScrollBeginTime = Date.now();
this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);}, 





scrollResponderHandleMomentumScrollEnd:function(e){
this.state.lastMomentumScrollEndTime = Date.now();
this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);}, 













scrollResponderHandleTouchStart:function(e){
this.state.isTouching = true;
this.props.onTouchStart && this.props.onTouchStart(e);}, 













scrollResponderHandleTouchMove:function(e){
this.props.onTouchMove && this.props.onTouchMove(e);}, 







scrollResponderIsAnimating:function(){
var now=Date.now();
var timeSinceLastMomentumScrollEnd=now - this.state.lastMomentumScrollEndTime;
var isAnimating=timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || 
this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;
return isAnimating;}, 







scrollResponderScrollTo:function(offsetX, offsetY){
if(Platform.OS === 'android'){
RCTUIManager.dispatchViewManagerCommand(
React.findNodeHandle(this), 
RCTUIManager.RCTScrollView.Commands.scrollTo, 
[offsetX, offsetY]);}else 

{
RCTUIManager.scrollTo(
React.findNodeHandle(this), 
offsetX, 
offsetY);}}, 








scrollResponderZoomTo:function(rect){
RCTUIManager.zoomToRect(React.findNodeHandle(this), rect);}, 












scrollResponderScrollNativeHandleToKeyboard:function(nodeHandle, additionalOffset, preventNegativeScrollOffset){
this.additionalScrollOffset = additionalOffset || 0;
this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;
RCTUIManager.measureLayout(
nodeHandle, 
React.findNodeHandle(this.getInnerViewNode()), 
this.scrollResponderTextInputFocusError, 
this.scrollResponderInputMeasureAndScrollToKeyboard);}, 













scrollResponderInputMeasureAndScrollToKeyboard:function(left, top, width, height){
if(this.keyboardWillOpenTo){
var scrollOffsetY=
top - this.keyboardWillOpenTo.endCoordinates.screenY + height + 
this.additionalScrollOffset;





if(this.preventNegativeScrollOffset){
scrollOffsetY = Math.max(0, scrollOffsetY);}

this.scrollResponderScrollTo(0, scrollOffsetY);}

this.additionalOffset = 0;
this.preventNegativeScrollOffset = false;}, 


scrollResponderTextInputFocusError:function(e){
console.error('Error measuring text field: ', e);}, 








componentWillMount:function(){
this.keyboardWillOpenTo = null;
this.additionalScrollOffset = 0;
this.addListenerOn(RCTDeviceEventEmitter, 'keyboardWillShow', this.scrollResponderKeyboardWillShow);
this.addListenerOn(RCTDeviceEventEmitter, 'keyboardWillHide', this.scrollResponderKeyboardWillHide);
this.addListenerOn(RCTDeviceEventEmitter, 'keyboardDidShow', this.scrollResponderKeyboardDidShow);
this.addListenerOn(RCTDeviceEventEmitter, 'keyboardDidHide', this.scrollResponderKeyboardDidHide);
warning(this.getInnerViewNode, 'You need to implement getInnerViewNode in ' + 
this.constructor.displayName + ' to get full' + 
'functionality from ScrollResponder mixin. See example of ListView and' + 
' ScrollView.');}, 






























scrollResponderKeyboardWillShow:function(e){
this.keyboardWillOpenTo = e;
this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);}, 


scrollResponderKeyboardWillHide:function(e){
this.keyboardWillOpenTo = null;
this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);}, 


scrollResponderKeyboardDidShow:function(e){


if(e){
this.keyboardWillOpenTo = e;}

this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);}, 


scrollResponderKeyboardDidHide:function(){
this.keyboardWillOpenTo = null;
this.props.onKeyboardDidHide && this.props.onKeyboardDidHide();}};




var ScrollResponder={
Mixin:ScrollResponderMixin};


module.exports = ScrollResponder;
});
__d('Subscribable',["EventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






















var Subscribable={};

Subscribable.Mixin = {

componentWillMount:function(){
this._subscribableSubscriptions = [];}, 


componentWillUnmount:function(){
this._subscribableSubscriptions.forEach(
function(subscription){return subscription.remove();});

this._subscribableSubscriptions = null;}, 















addListenerOn:function(
eventEmitter, 
eventType, 
listener, 
context)
{
this._subscribableSubscriptions.push(
eventEmitter.addListener(eventType, listener, context));}};




module.exports = Subscribable;
});
__d('StaticRenderer',["React"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');

var StaticRenderer=React.createClass({displayName:'StaticRenderer', 
propTypes:{
shouldUpdate:React.PropTypes.bool.isRequired, 
render:React.PropTypes.func.isRequired}, 


shouldComponentUpdate:function(nextProps){
return nextProps.shouldUpdate;}, 


render:function(){
return this.props.render();}});



module.exports = StaticRenderer;
});
__d('react-timer-mixin/TimerMixin.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';










var GLOBAL=typeof window === 'undefined'?global:window;

var setter=function(_setter, _clearer, array){
return function(callback, delta){
var id=_setter((function(){
_clearer.call(this, id);
callback.apply(this, arguments);}).
bind(this), delta);

if(!this[array]){
this[array] = [id];}else 
{
this[array].push(id);}

return id;};};



var clearer=function(_clearer, array){
return function(id){
if(this[array]){
var index=this[array].indexOf(id);
if(index !== -1){
this[array].splice(index, 1);}}


_clearer(id);};};



var _timeouts='TimerMixin_timeouts';
var _clearTimeout=clearer(GLOBAL.clearTimeout, _timeouts);
var _setTimeout=setter(GLOBAL.setTimeout, _clearTimeout, _timeouts);

var _intervals='TimerMixin_intervals';
var _clearInterval=clearer(GLOBAL.clearInterval, _intervals);
var _setInterval=setter(GLOBAL.setInterval, function(){}, _intervals);

var _immediates='TimerMixin_immediates';
var _clearImmediate=clearer(GLOBAL.clearImmediate, _immediates);
var _setImmediate=setter(GLOBAL.setImmediate, _clearImmediate, _immediates);

var _rafs='TimerMixin_rafs';
var _cancelAnimationFrame=clearer(GLOBAL.cancelAnimationFrame, _rafs);
var _requestAnimationFrame=setter(GLOBAL.requestAnimationFrame, _cancelAnimationFrame, _rafs);

var TimerMixin={
componentWillUnmount:function(){
this[_timeouts] && this[_timeouts].forEach(this.clearTimeout);
this[_intervals] && this[_intervals].forEach(this.clearInterval);
this[_immediates] && this[_immediates].forEach(this.clearImmediate);
this[_rafs] && this[_rafs].forEach(this.cancelAnimationFrame);}, 


setTimeout:_setTimeout, 
clearTimeout:_clearTimeout, 

setInterval:_setInterval, 
clearInterval:_clearInterval, 

setImmediate:_setImmediate, 
clearImmediate:_clearImmediate, 

requestAnimationFrame:_requestAnimationFrame, 
cancelAnimationFrame:_cancelAnimationFrame};


module.exports = TimerMixin;
});
__d('MapView',["EdgeInsetsPropType","NativeMethodsMixin","Platform","React","ReactNativeViewAttributes","View","createReactNativeComponentClass","deepDiffer","insetsDiffer","merge","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var View=require('View');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var insetsDiffer=require('insetsDiffer');
var merge=require('merge');
var requireNativeComponent=require('requireNativeComponent');









var MapView=React.createClass({displayName:'MapView', 
mixins:[NativeMethodsMixin], 

checkAnnotationIds:function(annotations){

var newAnnotations=annotations.map(function(annotation){
if(!annotation.id){

annotation.id = encodeURIComponent(JSON.stringify(annotation));}


return annotation;});


this.setState({
annotations:newAnnotations});}, 



componentWillMount:function(){
if(this.props.annotations){
this.checkAnnotationIds(this.props.annotations);}}, 



componentWillReceiveProps:function(nextProps){
if(nextProps.annotations){
this.checkAnnotationIds(nextProps.annotations);}}, 



propTypes:{




style:View.propTypes.style, 









showsUserLocation:React.PropTypes.bool, 





zoomEnabled:React.PropTypes.bool, 








rotateEnabled:React.PropTypes.bool, 








pitchEnabled:React.PropTypes.bool, 





scrollEnabled:React.PropTypes.bool, 








mapType:React.PropTypes.oneOf([
'standard', 
'satellite', 
'hybrid']), 








region:React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired, 
longitude:React.PropTypes.number.isRequired, 





latitudeDelta:React.PropTypes.number.isRequired, 
longitudeDelta:React.PropTypes.number.isRequired}), 





annotations:React.PropTypes.arrayOf(React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired, 
longitude:React.PropTypes.number.isRequired, 




animateDrop:React.PropTypes.bool, 




title:React.PropTypes.string, 
subtitle:React.PropTypes.string, 




hasLeftCallout:React.PropTypes.bool, 
hasRightCallout:React.PropTypes.bool, 




onLeftCalloutPress:React.PropTypes.func, 
onRightCalloutPress:React.PropTypes.func, 




id:React.PropTypes.string})), 






maxDelta:React.PropTypes.number, 




minDelta:React.PropTypes.number, 





legalLabelInsets:EdgeInsetsPropType, 




onRegionChange:React.PropTypes.func, 




onRegionChangeComplete:React.PropTypes.func, 




onAnnotationPress:React.PropTypes.func}, 


_onChange:function(event){
if(event.nativeEvent.continuous){
this.props.onRegionChange && 
this.props.onRegionChange(event.nativeEvent.region);}else 
{
this.props.onRegionChangeComplete && 
this.props.onRegionChangeComplete(event.nativeEvent.region);}}, 



_onPress:function(event){
if(event.nativeEvent.action === 'annotation-click'){
this.props.onAnnotationPress && this.props.onAnnotationPress(event.nativeEvent.annotation);}


if(event.nativeEvent.action === 'callout-click'){
if(!this.props.annotations){
return;}



for(var i=0; i < this.props.annotations.length; i++) {
var annotation=this.props.annotations[i];
if(annotation.id === event.nativeEvent.annotationId){

if(event.nativeEvent.side === 'left'){
annotation.onLeftCalloutPress && annotation.onLeftCalloutPress(event.nativeEvent);}else 
if(event.nativeEvent.side === 'right'){
annotation.onRightCalloutPress && annotation.onRightCalloutPress(event.nativeEvent);}}}}}, 







render:function(){
return React.createElement(RCTMap, _extends({}, this.props, {onPress:this._onPress, onChange:this._onChange}));}});



if(Platform.OS === 'android'){
var RCTMap=createReactNativeComponentClass({
validAttributes:merge(
ReactNativeViewAttributes.UIView, {
active:true, 
showsUserLocation:true, 
zoomEnabled:true, 
rotateEnabled:true, 
pitchEnabled:true, 
scrollEnabled:true, 
region:{diff:deepDiffer}, 
annotations:{diff:deepDiffer}, 
maxDelta:true, 
minDelta:true, 
legalLabelInsets:{diff:insetsDiffer}}), 


uiViewClassName:'RCTMap'});}else 

{
var RCTMap=requireNativeComponent('RCTMap', MapView);}


module.exports = MapView;
});
__d('Navigator',["NativeModules","Dimensions","InteractionMixin","Map","NavigationContext","NavigatorBreadcrumbNavigationBar","NavigatorNavigationBar","NavigatorSceneConfigs","PanResponder","React","StaticContainer.react","StyleSheet","Subscribable","View","clamp","flattenStyle","invariant","react-timer-mixin/TimerMixin.js","rebound/rebound.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};




























var AnimationsDebugModule=require('NativeModules').AnimationsDebugModule;
var Dimensions=require('Dimensions');
var InteractionMixin=require('InteractionMixin');
var Map=require('Map');
var NavigationContext=require('NavigationContext');
var NavigatorBreadcrumbNavigationBar=require('NavigatorBreadcrumbNavigationBar');
var NavigatorNavigationBar=require('NavigatorNavigationBar');
var NavigatorSceneConfigs=require('NavigatorSceneConfigs');
var PanResponder=require('PanResponder');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var View=require('View');

var clamp=require('clamp');
var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var rebound=require('rebound/rebound.js');

var PropTypes=React.PropTypes;




var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;
var SCENE_DISABLED_NATIVE_PROPS={
pointerEvents:'none', 
style:{
top:SCREEN_HEIGHT, 
opacity:0}};



var __uid=0;
function getuid(){
return __uid++;}


function getRouteID(route){
if(route === null || typeof route !== 'object'){
return String(route);}


var key='__navigatorRouteID';

if(!route.hasOwnProperty(key)){
Object.defineProperty(route, key, {
enumerable:false, 
configurable:false, 
writable:false, 
value:getuid()});}


return route[key];}



var styles=StyleSheet.create({
container:{
flex:1, 
overflow:'hidden'}, 

defaultSceneStyle:{
position:'absolute', 
left:0, 
right:0, 
bottom:0, 
top:0}, 

baseScene:{
position:'absolute', 
overflow:'hidden', 
left:0, 
right:0, 
bottom:0, 
top:0}, 

disabledScene:{
top:SCREEN_HEIGHT}, 

transitioner:{
flex:1, 
backgroundColor:'transparent', 
overflow:'hidden'}});



var GESTURE_ACTIONS=[
'pop', 
'jumpBack', 
'jumpForward'];





























































var Navigator=React.createClass({displayName:'Navigator', 

propTypes:{









configureScene:PropTypes.func, 










renderScene:PropTypes.func.isRequired, 







initialRoute:PropTypes.object, 






initialRouteStack:PropTypes.arrayOf(PropTypes.object), 







onWillFocus:PropTypes.func, 








onDidFocus:PropTypes.func, 





navigationBar:PropTypes.node, 




navigator:PropTypes.object, 




sceneStyle:View.propTypes.style}, 


statics:{
BreadcrumbNavigationBar:NavigatorBreadcrumbNavigationBar, 
NavigationBar:NavigatorNavigationBar, 
SceneConfigs:NavigatorSceneConfigs}, 


mixins:[TimerMixin, InteractionMixin, Subscribable.Mixin], 

getDefaultProps:function(){
return {
configureScene:function(){return NavigatorSceneConfigs.PushFromRight;}, 
sceneStyle:styles.defaultSceneStyle};}, 



getInitialState:function(){var _this=this;
this._renderedSceneMap = new Map();

var routeStack=this.props.initialRouteStack || [this.props.initialRoute];
invariant(
routeStack.length >= 1, 
'Navigator requires props.initialRoute or props.initialRouteStack.');

var initialRouteIndex=routeStack.length - 1;
if(this.props.initialRoute){
initialRouteIndex = routeStack.indexOf(this.props.initialRoute);
invariant(
initialRouteIndex !== -1, 
'initialRoute is not in initialRouteStack.');}


return {
sceneConfigStack:routeStack.map(
function(route){return _this.props.configureScene(route);}), 

routeStack:routeStack, 
presentedIndex:initialRouteIndex, 
transitionFromIndex:null, 
activeGesture:null, 
pendingGestureProgress:null, 
transitionQueue:[]};}, 



componentWillMount:function(){var _this2=this;

this.__defineGetter__('navigationContext', this._getNavigationContext);

this._subRouteFocus = [];
this.parentNavigator = this.props.navigator;
this._handlers = {};
this.springSystem = new rebound.SpringSystem();
this.spring = this.springSystem.createSpring();
this.spring.setRestSpeedThreshold(0.05);
this.spring.setCurrentValue(0).setAtRest();
this.spring.addListener({
onSpringEndStateChange:function(){
if(!_this2._interactionHandle){
_this2._interactionHandle = _this2.createInteractionHandle();}}, 


onSpringUpdate:function(){
_this2._handleSpringUpdate();}, 

onSpringAtRest:function(){
_this2._completeTransition();}});


this.panGesture = PanResponder.create({
onMoveShouldSetPanResponder:this._handleMoveShouldSetPanResponder, 
onPanResponderGrant:this._handlePanResponderGrant, 
onPanResponderRelease:this._handlePanResponderRelease, 
onPanResponderMove:this._handlePanResponderMove, 
onPanResponderTerminate:this._handlePanResponderTerminate});

this._interactionHandle = null;
this._emitWillFocus(this.state.routeStack[this.state.presentedIndex]);}, 


componentDidMount:function(){
this._handleSpringUpdate();
this._emitDidFocus(this.state.routeStack[this.state.presentedIndex]);}, 


componentWillUnmount:function(){
if(this._navigationContext){
this._navigationContext.dispose();
this._navigationContext = null;}}, 










immediatelyResetRouteStack:function(nextRouteStack){var _this3=this;
var destIndex=nextRouteStack.length - 1;
this.setState({
routeStack:nextRouteStack, 
sceneConfigStack:nextRouteStack.map(
this.props.configureScene), 

presentedIndex:destIndex, 
activeGesture:null, 
transitionFromIndex:null, 
transitionQueue:[]}, 
function(){
_this3._handleSpringUpdate();});}, 



_transitionTo:function(destIndex, velocity, jumpSpringTo, cb){
if(destIndex === this.state.presentedIndex){
return;}

if(this.state.transitionFromIndex !== null){
this.state.transitionQueue.push({
destIndex:destIndex, 
velocity:velocity, 
cb:cb});

return;}

this.state.transitionFromIndex = this.state.presentedIndex;
this.state.presentedIndex = destIndex;
this.state.transitionCb = cb;
this._onAnimationStart();
if(AnimationsDebugModule){
AnimationsDebugModule.startRecordingFps();}

var sceneConfig=this.state.sceneConfigStack[this.state.transitionFromIndex] || 
this.state.sceneConfigStack[this.state.presentedIndex];
invariant(
sceneConfig, 
'Cannot configure scene at index ' + this.state.transitionFromIndex);

if(jumpSpringTo != null){
this.spring.setCurrentValue(jumpSpringTo);}

this.spring.setOvershootClampingEnabled(true);
this.spring.getSpringConfig().friction = sceneConfig.springFriction;
this.spring.getSpringConfig().tension = sceneConfig.springTension;
this.spring.setVelocity(velocity || sceneConfig.defaultTransitionVelocity);
this.spring.setEndValue(1);}, 






_handleSpringUpdate:function(){

if(this.state.transitionFromIndex != null){
this._transitionBetween(
this.state.transitionFromIndex, 
this.state.presentedIndex, 
this.spring.getCurrentValue());}else 

if(this.state.activeGesture != null){
var presentedToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(
this.state.presentedIndex, 
presentedToIndex, 
this.spring.getCurrentValue());}}, 







_completeTransition:function(){
if(this.spring.getCurrentValue() !== 1 && this.spring.getCurrentValue() !== 0){


if(this.state.pendingGestureProgress){
this.state.pendingGestureProgress = null;}

return;}

this._onAnimationEnd();
var presentedIndex=this.state.presentedIndex;
var didFocusRoute=this._subRouteFocus[presentedIndex] || this.state.routeStack[presentedIndex];
this._emitDidFocus(didFocusRoute);
if(AnimationsDebugModule){
AnimationsDebugModule.stopRecordingFps(Date.now());}

this.state.transitionFromIndex = null;
this.spring.setCurrentValue(0).setAtRest();
this._hideScenes();
if(this.state.transitionCb){
this.state.transitionCb();
this.state.transitionCb = null;}

if(this._interactionHandle){
this.clearInteractionHandle(this._interactionHandle);
this._interactionHandle = null;}

if(this.state.pendingGestureProgress){


var gestureToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gestureToIndex);
this.spring.setEndValue(this.state.pendingGestureProgress);
return;}

if(this.state.transitionQueue.length){
var queuedTransition=this.state.transitionQueue.shift();
this._enableScene(queuedTransition.destIndex);
this._emitWillFocus(this.state.routeStack[queuedTransition.destIndex]);
this._transitionTo(
queuedTransition.destIndex, 
queuedTransition.velocity, 
null, 
queuedTransition.cb);}}, 




_emitDidFocus:function(route){
this.navigationContext.emit('didfocus', {route:route});

if(this.props.onDidFocus){
this.props.onDidFocus(route);}}, 



_emitWillFocus:function(route){
this.navigationContext.emit('willfocus', {route:route});

var navBar=this._navBar;
if(navBar && navBar.handleWillFocus){
navBar.handleWillFocus(route);}

if(this.props.onWillFocus){
this.props.onWillFocus(route);}}, 






_hideScenes:function(){
var gesturingToIndex=null;
if(this.state.activeGesture){
gesturingToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

for(var i=0; i < this.state.routeStack.length; i++) {
if(i === this.state.presentedIndex || 
i === this.state.transitionFromIndex || 
i === gesturingToIndex){
continue;}

this._disableScene(i);}}, 






_disableScene:function(sceneIndex){
this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(SCENE_DISABLED_NATIVE_PROPS);}, 





_enableScene:function(sceneIndex){

var sceneStyle=flattenStyle([styles.baseScene, this.props.sceneStyle]);

var enabledSceneNativeProps={
pointerEvents:'auto', 
style:{
top:sceneStyle.top}};


if(sceneIndex !== this.state.transitionFromIndex && 
sceneIndex !== this.state.presentedIndex){


enabledSceneNativeProps.style.opacity = 0;}

this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(enabledSceneNativeProps);}, 


_onAnimationStart:function(){
var fromIndex=this.state.presentedIndex;
var toIndex=this.state.presentedIndex;
if(this.state.transitionFromIndex != null){
fromIndex = this.state.transitionFromIndex;}else 
if(this.state.activeGesture){
toIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

this._setRenderSceneToHarwareTextureAndroid(fromIndex, true);
this._setRenderSceneToHarwareTextureAndroid(toIndex, true);
var navBar=this._navBar;
if(navBar && navBar.onAnimationStart){
navBar.onAnimationStart(fromIndex, toIndex);}}, 



_onAnimationEnd:function(){
var max=this.state.routeStack.length - 1;
for(var index=0; index <= max; index++) {
this._setRenderSceneToHarwareTextureAndroid(index, false);}


var navBar=this._navBar;
if(navBar && navBar.onAnimationEnd){
navBar.onAnimationEnd();}}, 



_setRenderSceneToHarwareTextureAndroid:function(sceneIndex, shouldRenderToHardwareTexture){
var viewAtIndex=this.refs['scene_' + sceneIndex];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}

viewAtIndex.setNativeProps({renderToHardwareTextureAndroid:shouldRenderToHardwareTexture});}, 


_handleTouchStart:function(){
this._eligibleGestures = GESTURE_ACTIONS;}, 


_handleMoveShouldSetPanResponder:function(e, gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
this._expectingGestureGrant = this._matchGestureAction(this._eligibleGestures, sceneConfig.gestures, gestureState);
return !!this._expectingGestureGrant;}, 


_doesGestureOverswipe:function(gestureName){
var wouldOverswipeBack=this.state.presentedIndex <= 0 && (
gestureName === 'pop' || gestureName === 'jumpBack');
var wouldOverswipeForward=this.state.presentedIndex >= this.state.routeStack.length - 1 && 
gestureName === 'jumpForward';
return wouldOverswipeForward || wouldOverswipeBack;}, 


_handlePanResponderGrant:function(e, gestureState){
invariant(
this._expectingGestureGrant, 
'Responder granted unexpectedly.');

this._attachGesture(this._expectingGestureGrant);
this._onAnimationStart();
this._expectingGestureGrant = null;}, 


_deltaForGestureAction:function(gestureAction){
switch(gestureAction){
case 'pop':
case 'jumpBack':
return -1;
case 'jumpForward':
return 1;
default:
invariant(false, 'Unsupported gesture action ' + gestureAction);
return;}}, 



_handlePanResponderRelease:function(e, gestureState){var _this4=this;
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
var releaseGestureAction=this.state.activeGesture;
if(!releaseGestureAction){

return;}

var releaseGesture=sceneConfig.gestures[releaseGestureAction];
var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
if(this.spring.getCurrentValue() === 0){

this.spring.setCurrentValue(0).setAtRest();
this._completeTransition();
return;}

var isTravelVertical=releaseGesture.direction === 'top-to-bottom' || releaseGesture.direction === 'bottom-to-top';
var isTravelInverted=releaseGesture.direction === 'right-to-left' || releaseGesture.direction === 'bottom-to-top';
var velocity, gestureDistance;
if(isTravelVertical){
velocity = isTravelInverted?-gestureState.vy:gestureState.vy;
gestureDistance = isTravelInverted?-gestureState.dy:gestureState.dy;}else 
{
velocity = isTravelInverted?-gestureState.vx:gestureState.vx;
gestureDistance = isTravelInverted?-gestureState.dx:gestureState.dx;}

var transitionVelocity=clamp(-10, velocity, 10);
if(Math.abs(velocity) < releaseGesture.notMoving){

var hasGesturedEnoughToComplete=gestureDistance > releaseGesture.fullDistance * releaseGesture.stillCompletionRatio;
transitionVelocity = hasGesturedEnoughToComplete?releaseGesture.snapVelocity:-releaseGesture.snapVelocity;}

if(transitionVelocity < 0 || this._doesGestureOverswipe(releaseGestureAction)){


if(this.state.transitionFromIndex == null){

var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex, 
-transitionVelocity, 
1 - this.spring.getCurrentValue());}}else 


{

this._emitWillFocus(this.state.routeStack[destIndex]);
this._transitionTo(
destIndex, 
transitionVelocity, 
null, 
function(){
if(releaseGestureAction === 'pop'){
_this4._cleanScenesPastIndex(destIndex);}});}




this._detachGesture();}, 


_handlePanResponderTerminate:function(e, gestureState){
var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._detachGesture();
var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex, 
null, 
1 - this.spring.getCurrentValue());}, 



_attachGesture:function(gestureId){
this.state.activeGesture = gestureId;
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gesturingToIndex);}, 


_detachGesture:function(){
this.state.activeGesture = null;
this.state.pendingGestureProgress = null;
this._hideScenes();}, 


_handlePanResponderMove:function(e, gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
if(this.state.activeGesture){
var gesture=sceneConfig.gestures[this.state.activeGesture];
return this._moveAttachedGesture(gesture, gestureState);}

var matchedGesture=this._matchGestureAction(GESTURE_ACTIONS, sceneConfig.gestures, gestureState);
if(matchedGesture){
this._attachGesture(matchedGesture);}}, 



_moveAttachedGesture:function(gesture, gestureState){
var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var distance=isTravelVertical?gestureState.dy:gestureState.dx;
distance = isTravelInverted?-distance:distance;
var gestureDetectMovement=gesture.gestureDetectMovement;
var nextProgress=(distance - gestureDetectMovement) / (
gesture.fullDistance - gestureDetectMovement);
if(nextProgress < 0 && gesture.isDetachable){
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(this.state.presentedIndex, gesturingToIndex, 0);
this._detachGesture();
if(this.state.pendingGestureProgress != null){
this.spring.setCurrentValue(0);}

return;}

if(this._doesGestureOverswipe(this.state.activeGesture)){
var frictionConstant=gesture.overswipe.frictionConstant;
var frictionByDistance=gesture.overswipe.frictionByDistance;
var frictionRatio=1 / (frictionConstant + Math.abs(nextProgress) * frictionByDistance);
nextProgress *= frictionRatio;}

nextProgress = clamp(0, nextProgress, 1);
if(this.state.transitionFromIndex != null){
this.state.pendingGestureProgress = nextProgress;}else 
if(this.state.pendingGestureProgress){
this.spring.setEndValue(nextProgress);}else 
{
this.spring.setCurrentValue(nextProgress);}}, 



_matchGestureAction:function(eligibleGestures, gestures, gestureState){var _this5=this;
if(!gestures){
return null;}

var matchedGesture=null;
eligibleGestures.some(function(gestureName, gestureIndex){
var gesture=gestures[gestureName];
if(!gesture){
return;}

if(gesture.overswipe == null && _this5._doesGestureOverswipe(gestureName)){

return false;}

var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var currentLoc=isTravelVertical?gestureState.moveY:gestureState.moveX;
var travelDist=isTravelVertical?gestureState.dy:gestureState.dx;
var oppositeAxisTravelDist=
isTravelVertical?gestureState.dx:gestureState.dy;
var edgeHitWidth=gesture.edgeHitWidth;
if(isTravelInverted){
currentLoc = -currentLoc;
travelDist = -travelDist;
oppositeAxisTravelDist = -oppositeAxisTravelDist;
edgeHitWidth = isTravelVertical?
-(SCREEN_HEIGHT - edgeHitWidth):
-(SCREEN_WIDTH - edgeHitWidth);}

var moveStartedInRegion=gesture.edgeHitWidth == null || 
currentLoc < edgeHitWidth;
if(!moveStartedInRegion){
return false;}

var moveTravelledFarEnough=travelDist >= gesture.gestureDetectMovement;
if(!moveTravelledFarEnough){
return false;}

var directionIsCorrect=Math.abs(travelDist) > Math.abs(oppositeAxisTravelDist) * gesture.directionRatio;
if(directionIsCorrect){
matchedGesture = gestureName;
return true;}else 
{
_this5._eligibleGestures = _this5._eligibleGestures.slice().splice(gestureIndex, 1);}});


return matchedGesture;}, 


_transitionSceneStyle:function(fromIndex, toIndex, progress, index){
var viewAtIndex=this.refs['scene_' + index];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}


var sceneConfigIndex=fromIndex < toIndex?toIndex:fromIndex;
var sceneConfig=this.state.sceneConfigStack[sceneConfigIndex];

if(!sceneConfig){
sceneConfig = this.state.sceneConfigStack[sceneConfigIndex - 1];}

var styleToUse={};
var useFn=index < fromIndex || index < toIndex?
sceneConfig.animationInterpolators.out:
sceneConfig.animationInterpolators.into;
var directionAdjustedProgress=fromIndex < toIndex?progress:1 - progress;
var didChange=useFn(styleToUse, directionAdjustedProgress);
if(didChange){
viewAtIndex.setNativeProps({style:styleToUse});}}, 



_transitionBetween:function(fromIndex, toIndex, progress){
this._transitionSceneStyle(fromIndex, toIndex, progress, fromIndex);
this._transitionSceneStyle(fromIndex, toIndex, progress, toIndex);
var navBar=this._navBar;
if(navBar && navBar.updateProgress && toIndex >= 0 && fromIndex >= 0){
navBar.updateProgress(progress, fromIndex, toIndex);}}, 



_handleResponderTerminationRequest:function(){
return false;}, 


_getDestIndexWithinBounds:function(n){
var currentIndex=this.state.presentedIndex;
var destIndex=currentIndex + n;
invariant(
destIndex >= 0, 
'Cannot jump before the first route.');

var maxIndex=this.state.routeStack.length - 1;
invariant(
maxIndex >= destIndex, 
'Cannot jump past the last route.');

return destIndex;}, 


_jumpN:function(n){
var destIndex=this._getDestIndexWithinBounds(n);
this._enableScene(destIndex);
this._emitWillFocus(this.state.routeStack[destIndex]);
this._transitionTo(destIndex);}, 


jumpTo:function(route){
var destIndex=this.state.routeStack.indexOf(route);
invariant(
destIndex !== -1, 
'Cannot jump to route that is not in the route stack');

this._jumpN(destIndex - this.state.presentedIndex);}, 


jumpForward:function(){
this._jumpN(1);}, 


jumpBack:function(){
this._jumpN(-1);}, 


push:function(route){var _this6=this;
invariant(!!route, 'Must supply route to push');
var activeLength=this.state.presentedIndex + 1;
var activeStack=this.state.routeStack.slice(0, activeLength);
var activeAnimationConfigStack=this.state.sceneConfigStack.slice(0, activeLength);
var nextStack=activeStack.concat([route]);
var destIndex=nextStack.length - 1;
var nextAnimationConfigStack=activeAnimationConfigStack.concat([
this.props.configureScene(route)]);

this._emitWillFocus(nextStack[destIndex]);
this.setState({
routeStack:nextStack, 
sceneConfigStack:nextAnimationConfigStack}, 
function(){
_this6._enableScene(destIndex);
_this6._transitionTo(destIndex);});}, 



_popN:function(n){var _this7=this;
if(n === 0){
return;}

invariant(
this.state.presentedIndex - n >= 0, 
'Cannot pop below zero');

var popIndex=this.state.presentedIndex - n;
this._enableScene(popIndex);
this._emitWillFocus(this.state.routeStack[popIndex]);
this._transitionTo(
popIndex, 
null, 
null, 
function(){
_this7._cleanScenesPastIndex(popIndex);});}, 




pop:function(){
this._popN(1);}, 








replaceAtIndex:function(route, index, cb){var _this8=this;
invariant(!!route, 'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}


var nextRouteStack=this.state.routeStack.slice();
var nextAnimationModeStack=this.state.sceneConfigStack.slice();
nextRouteStack[index] = route;
nextAnimationModeStack[index] = this.props.configureScene(route);

if(index === this.state.presentedIndex){
this._emitWillFocus(route);}

this.setState({
routeStack:nextRouteStack, 
sceneConfigStack:nextAnimationModeStack}, 
function(){
if(index === _this8.state.presentedIndex){
_this8._emitDidFocus(route);}

cb && cb();});}, 






replace:function(route){
this.replaceAtIndex(route, this.state.presentedIndex);}, 





replacePrevious:function(route){
this.replaceAtIndex(route, this.state.presentedIndex - 1);}, 


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);}, 


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1, 
'Calling popToRoute for a route that doesn\'t exist!');

var numToPop=this.state.presentedIndex - indexOfRoute;
this._popN(numToPop);}, 


replacePreviousAndPop:function(route){
if(this.state.routeStack.length < 2){
return;}

this.replacePrevious(route);
this.pop();}, 


resetTo:function(route){var _this9=this;
invariant(!!route, 'Must supply route to push');
this.replaceAtIndex(route, 0, function(){


if(_this9.state.presentedIndex > 0){
_this9._popN(_this9.state.presentedIndex);}});}, 




getCurrentRoutes:function(){

return this.state.routeStack.slice();}, 


_cleanScenesPastIndex:function(index){
var newStackLength=index + 1;

if(newStackLength < this.state.routeStack.length){
this.setState({
sceneConfigStack:this.state.sceneConfigStack.slice(0, newStackLength), 
routeStack:this.state.routeStack.slice(0, newStackLength)});}}, 




_renderScene:function(route, i){var _this10=this;
var disabledSceneStyle=null;
var disabledScenePointerEvents='auto';
if(i !== this.state.presentedIndex){
disabledSceneStyle = styles.disabledScene;
disabledScenePointerEvents = 'none';}

return (
React.createElement(View, {
key:'scene_' + getRouteID(route), 
ref:'scene_' + i, 
onStartShouldSetResponderCapture:function(){
return _this10.state.transitionFromIndex != null || _this10.state.transitionFromIndex != null;}, 

pointerEvents:disabledScenePointerEvents, 
style:[styles.baseScene, this.props.sceneStyle, disabledSceneStyle]}, 
this.props.renderScene(
route, 
this)));}, 





_renderNavigationBar:function(){var _this11=this;
if(!this.props.navigationBar){
return null;}

return React.cloneElement(this.props.navigationBar, {
ref:function(navBar){_this11._navBar = navBar;}, 
navigator:this, 
navState:this.state});}, 



render:function(){var _this12=this;
var newRenderedSceneMap=new Map();
var scenes=this.state.routeStack.map(function(route, index){
var renderedScene;
if(_this12._renderedSceneMap.has(route) && 
index !== _this12.state.presentedIndex){
renderedScene = _this12._renderedSceneMap.get(route);}else 
{
renderedScene = _this12._renderScene(route, index);}

newRenderedSceneMap.set(route, renderedScene);
return renderedScene;});

this._renderedSceneMap = newRenderedSceneMap;
return (
React.createElement(View, {style:[styles.container, this.props.style]}, 
React.createElement(View, _extends({
style:styles.transitioner}, 
this.panGesture.panHandlers, {
onTouchStart:this._handleTouchStart, 
onResponderTerminationRequest:
this._handleResponderTerminationRequest}), 

scenes), 

this._renderNavigationBar()));}, 




_getNavigationContext:function(){
if(!this._navigationContext){
this._navigationContext = new NavigationContext();}

return this._navigationContext;}});



module.exports = Navigator;
});
__d('InteractionMixin',["InteractionManager"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';







var InteractionManager=require('InteractionManager');






var InteractionMixin={
componentWillUnmount:function(){
while(this._interactionMixinHandles.length) {
InteractionManager.clearInteractionHandle(
this._interactionMixinHandles.pop());}}, 




_interactionMixinHandles:[], 

createInteractionHandle:function(){
var handle=InteractionManager.createInteractionHandle();
this._interactionMixinHandles.push(handle);
return handle;}, 


clearInteractionHandle:function(clearHandle){
InteractionManager.clearInteractionHandle(clearHandle);
this._interactionMixinHandles = this._interactionMixinHandles.filter(
function(handle){return handle !== clearHandle;});}, 








runAfterInteractions:function(callback){
InteractionManager.runAfterInteractions(callback);}};



module.exports = InteractionMixin;
});
__d('NavigationContext',["NavigationEvent","EventSubscription","NavigationEventEmitter","emptyFunction","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

























'use strict';

var NavigationEventEmitter=require('NavigationEventEmitter');

var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 







NavigationContext=(function(){



function NavigationContext(){_classCallCheck(this, NavigationContext);
this._eventEmitter = new NavigationEventEmitter(this);
this._currentRoute = null;
this.addListener('willfocus', this._onFocus, this);
this.addListener('didfocus', this._onFocus, this);}_createClass(NavigationContext, [{key:'addListener', value:








function addListener(
eventType, 
listener, 
context)
{
var emitter=this._eventEmitter;
if(emitter){
return emitter.addListener(eventType, listener, context);}else 
{
return {remove:emptyFunction};}}}, {key:'emit', value:



function emit(eventType, data, didEmitCallback){
var emitter=this._eventEmitter;
if(emitter){
emitter.emit(eventType, data, didEmitCallback);}}}, {key:'dispose', value:



function dispose(){
var emitter=this._eventEmitter;
if(emitter){

emitter.removeAllListeners();
this._eventEmitter = null;
this._currentRoute = null;}}}, {key:'_onFocus', value:



function _onFocus(event){
invariant(
event.data && event.data.hasOwnProperty('route'), 
'didfocus event should provide route');

this._currentRoute = event.data.route;}}, {key:'currentRoute', get:function(){return this._currentRoute;}}]);return NavigationContext;})();



module.exports = NavigationContext;
});
__d('NavigationEvent',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}




























var invariant=require('invariant');var 

NavigationEventPool=(function(){


function NavigationEventPool(){_classCallCheck(this, NavigationEventPool);
this._list = [];}_createClass(NavigationEventPool, [{key:'get', value:


function get(type, target, data){
var event;
if(this._list.length > 0){
event = this._list.pop();
event.constructor.call(event, type, target, data);}else 
{
event = new NavigationEvent(type, target, data);}

return event;}}, {key:'put', value:


function put(event){
this._list.push(event);}}]);return NavigationEventPool;})();



var _navigationEventPool=new NavigationEventPool();var 

NavigationEvent=(function(){










function NavigationEvent(type, target, data){_classCallCheck(this, NavigationEvent);
this._type = type;
this._target = target;
this._data = data;
this._defaultPrevented = false;
this._disposed = false;}_createClass(NavigationEvent, [{key:'preventDefault', value:






















function preventDefault(){
this._defaultPrevented = true;}}, {key:'dispose', value:







function dispose(){
invariant(!this._disposed, 'NavigationEvent is already disposed');
this._disposed = true;


this._type = null;
this._target = null;
this._data = null;
this._defaultPrevented = false;


_navigationEventPool.put(this);}}, {key:'type', get:function(){return this._type;}}, {key:'target', get:function(){return this._target;}}, {key:'data', get:function(){return this._data;}}, {key:'defaultPrevented', get:function(){return this._defaultPrevented;}}], [{key:'pool', value:function pool(type, target, data){return _navigationEventPool.get(type, target, data);}}]);return NavigationEvent;})();



module.exports = NavigationEvent;
});
__d('NavigationEventEmitter',["EventEmitter","NavigationEvent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();var _get=function get(object, property, receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object, property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent, property, receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}




























var EventEmitter=require('EventEmitter');
var NavigationEvent=require('NavigationEvent');var 







NavigationEventEmitter=(function(_EventEmitter){




function NavigationEventEmitter(target){_classCallCheck(this, NavigationEventEmitter);
_get(Object.getPrototypeOf(NavigationEventEmitter.prototype), 'constructor', this).call(this);
this._emitting = false;
this._emitQueue = [];
this._target = target;}_inherits(NavigationEventEmitter, _EventEmitter);_createClass(NavigationEventEmitter, [{key:'emit', value:


function emit(
eventType, 
data, 
didEmitCallback)
{
if(this._emitting){


this._emitQueue.push({eventType:eventType, data:data, didEmitCallback:didEmitCallback});
return;}


this._emitting = true;

var event=new NavigationEvent(eventType, this._target, data);



_get(Object.getPrototypeOf(NavigationEventEmitter.prototype), 'emit', this).call(this, String(eventType), event);

if(typeof didEmitCallback === 'function'){
didEmitCallback.call(this._target, event);}

event.dispose();

this._emitting = false;

while(this._emitQueue.length) {
var arg=this._emitQueue.shift();
this.emit(arg.eventType, arg.data, arg.didEmitCallback);}}}]);return NavigationEventEmitter;})(EventEmitter);




module.exports = NavigationEventEmitter;
});
__d('NavigatorBreadcrumbNavigationBar',["NavigatorBreadcrumbNavigationBarStyles","NavigatorNavigationBarStyles","React","StaticContainer.react","StyleSheet","View","invariant","immutable/dist/immutable.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var NavigatorBreadcrumbNavigationBarStyles=require('NavigatorBreadcrumbNavigationBarStyles');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');var _require=

require('immutable/dist/immutable.js');var Map=_require.Map;

var invariant=require('invariant');

var Interpolators=NavigatorBreadcrumbNavigationBarStyles.Interpolators;
var PropTypes=React.PropTypes;




var CRUMB_PROPS=Interpolators.map(function(){return {style:{}};});
var ICON_PROPS=Interpolators.map(function(){return {style:{}};});
var SEPARATOR_PROPS=Interpolators.map(function(){return {style:{}};});
var TITLE_PROPS=Interpolators.map(function(){return {style:{}};});
var RIGHT_BUTTON_PROPS=Interpolators.map(function(){return {style:{}};});


var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};










var initStyle=function(index, presentedIndex){
return index === presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Center[index]:
index < presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Left[index]:
NavigatorBreadcrumbNavigationBarStyles.Right[index];};


var NavigatorBreadcrumbNavigationBar=React.createClass({displayName:'NavigatorBreadcrumbNavigationBar', 
propTypes:{
navigator:PropTypes.shape({
push:PropTypes.func, 
pop:PropTypes.func, 
replace:PropTypes.func, 
popToRoute:PropTypes.func, 
popToTop:PropTypes.func}), 

routeMapper:PropTypes.shape({
rightContentForRoute:PropTypes.func, 
titleContentForRoute:PropTypes.func, 
iconForRoute:PropTypes.func}), 

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object), 
presentedIndex:React.PropTypes.number}), 

style:View.propTypes.style}, 


statics:{
Styles:NavigatorBreadcrumbNavigationBarStyles}, 


_updateIndexProgress:function(progress, index, fromIndex, toIndex){
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
invariant(
Interpolators[index], 
'Cannot find breadcrumb interpolators for ' + index);

if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = Interpolators[index].RightToCenter;}else 
{
interpolate = Interpolators[index].RightToLeft;}


if(interpolate.Crumb(CRUMB_PROPS[index].style, amount)){
this.refs['crumb_' + index].setNativeProps(CRUMB_PROPS[index]);}

if(interpolate.Icon(ICON_PROPS[index].style, amount)){
this.refs['icon_' + index].setNativeProps(ICON_PROPS[index]);}

if(interpolate.Separator(SEPARATOR_PROPS[index].style, amount)){
this.refs['separator_' + index].setNativeProps(SEPARATOR_PROPS[index]);}

if(interpolate.Title(TITLE_PROPS[index].style, amount)){
this.refs['title_' + index].setNativeProps(TITLE_PROPS[index]);}

var right=this.refs['right_' + index];
if(right && 
interpolate.RightItem(RIGHT_BUTTON_PROPS[index].style, amount)){
right.setNativeProps(RIGHT_BUTTON_PROPS[index]);}}, 



updateProgress:function(progress, fromIndex, toIndex){
var max=Math.max(fromIndex, toIndex);
var min=Math.min(fromIndex, toIndex);
for(var index=min; index <= max; index++) {
this._updateIndexProgress(progress, index, fromIndex, toIndex);}}, 



onAnimationStart:function(fromIndex, toIndex){
var max=Math.max(fromIndex, toIndex);
var min=Math.min(fromIndex, toIndex);
for(var index=min; index <= max; index++) {
this._setRenderViewsToHardwareTextureAndroid(index, true);}}, 



onAnimationEnd:function(){
var max=this.props.navState.routeStack.length - 1;
for(var index=0; index <= max; index++) {
this._setRenderViewsToHardwareTextureAndroid(index, false);}}, 



_setRenderViewsToHardwareTextureAndroid:function(index, renderToHardwareTexture){
var props={
renderToHardwareTextureAndroid:renderToHardwareTexture};


this.refs['icon_' + index].setNativeProps(props);
this.refs['separator_' + index].setNativeProps(props);
this.refs['title_' + index].setNativeProps(props);
var right=this.refs['right_' + index];
if(right){
right.setNativeProps(props);}}, 



componentWillMount:function(){
this._descriptors = {
crumb:new Map(), 
title:new Map(), 
right:new Map()};}, 



render:function(){
var navState=this.props.navState;
var icons=navState && navState.routeStack.map(this._getBreadcrumb);
var titles=navState.routeStack.map(this._getTitle);
var buttons=navState.routeStack.map(this._getRightButton);
return (
React.createElement(View, {style:[styles.breadCrumbContainer, this.props.style]}, 
titles, 
icons, 
buttons));}, 




_getBreadcrumb:function(route, index){
if(this._descriptors.crumb.has(route)){
return this._descriptors.crumb.get(route);}


var navBarRouteMapper=this.props.routeMapper;
var firstStyles=initStyle(index, navStatePresentedIndex(this.props.navState));

var breadcrumbDescriptor=
React.createElement(View, {ref:'crumb_' + index, style:firstStyles.Crumb}, 
React.createElement(View, {ref:'icon_' + index, style:firstStyles.Icon}, 
navBarRouteMapper.iconForRoute(route, this.props.navigator)), 

React.createElement(View, {ref:'separator_' + index, style:firstStyles.Separator}, 
navBarRouteMapper.separatorForRoute(route, this.props.navigator)));




this._descriptors.crumb = this._descriptors.crumb.set(route, breadcrumbDescriptor);
return breadcrumbDescriptor;}, 


_getTitle:function(route, index){
if(this._descriptors.title.has(route)){
return this._descriptors.title.get(route);}


var titleContent=this.props.routeMapper.titleContentForRoute(
this.props.navState.routeStack[index], 
this.props.navigator);

var firstStyles=initStyle(index, navStatePresentedIndex(this.props.navState));

var titleDescriptor=
React.createElement(View, {ref:'title_' + index, style:firstStyles.Title}, 
titleContent);


this._descriptors.title = this._descriptors.title.set(route, titleDescriptor);
return titleDescriptor;}, 


_getRightButton:function(route, index){
if(this._descriptors.right.has(route)){
return this._descriptors.right.get(route);}

var rightContent=this.props.routeMapper.rightContentForRoute(
this.props.navState.routeStack[index], 
this.props.navigator);

if(!rightContent){
this._descriptors.right = this._descriptors.right.set(route, null);
return null;}

var firstStyles=initStyle(index, navStatePresentedIndex(this.props.navState));
var rightButtonDescriptor=
React.createElement(View, {ref:'right_' + index, style:firstStyles.RightItem}, 
rightContent);


this._descriptors.right = this._descriptors.right.set(route, rightButtonDescriptor);
return rightButtonDescriptor;}});



var styles=StyleSheet.create({
breadCrumbContainer:{
overflow:'hidden', 
position:'absolute', 
height:NavigatorNavigationBarStyles.General.TotalNavHeight, 
top:0, 
left:0, 
right:0}});



module.exports = NavigatorBreadcrumbNavigationBar;
});
__d('NavigatorBreadcrumbNavigationBarStyles',["Dimensions","NavigatorNavigationBarStyles","buildStyleInterpolator","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var STATUS_BAR_HEIGHT=NavigatorNavigationBarStyles.General.StatusBarHeight;
var NAV_BAR_HEIGHT=NavigatorNavigationBarStyles.General.NavBarHeight;

var SPACING=4;
var ICON_WIDTH=40;
var SEPARATOR_WIDTH=9;
var CRUMB_WIDTH=ICON_WIDTH + SEPARATOR_WIDTH;

var OPACITY_RATIO=100;
var ICON_INACTIVE_OPACITY=0.6;
var MAX_BREADCRUMBS=10;

var CRUMB_BASE={
position:'absolute', 
flexDirection:'row', 
top:STATUS_BAR_HEIGHT, 
width:CRUMB_WIDTH, 
height:NAV_BAR_HEIGHT, 
backgroundColor:'transparent'};


var ICON_BASE={
width:ICON_WIDTH, 
height:NAV_BAR_HEIGHT};


var SEPARATOR_BASE={
width:SEPARATOR_WIDTH, 
height:NAV_BAR_HEIGHT};


var TITLE_BASE={
position:'absolute', 
top:STATUS_BAR_HEIGHT, 
height:NAV_BAR_HEIGHT, 
backgroundColor:'transparent'};



var FIRST_TITLE_BASE=merge(TITLE_BASE, {
left:0, 
right:0, 
alignItems:'center', 
height:NAV_BAR_HEIGHT});


var RIGHT_BUTTON_BASE={
position:'absolute', 
top:STATUS_BAR_HEIGHT, 
right:SPACING, 
overflow:'hidden', 
opacity:1, 
height:NAV_BAR_HEIGHT, 
backgroundColor:'transparent'};






var LEFT=[];
var CENTER=[];
var RIGHT=[];
for(var i=0; i < MAX_BREADCRUMBS; i++) {
var crumbLeft=CRUMB_WIDTH * i + SPACING;
LEFT[i] = {
Crumb:merge(CRUMB_BASE, {left:crumbLeft}), 
Icon:merge(ICON_BASE, {opacity:ICON_INACTIVE_OPACITY}), 
Separator:merge(SEPARATOR_BASE, {opacity:1}), 
Title:merge(TITLE_BASE, {left:crumbLeft, opacity:0}), 
RightItem:merge(RIGHT_BUTTON_BASE, {opacity:0})};

CENTER[i] = {
Crumb:merge(CRUMB_BASE, {left:crumbLeft}), 
Icon:merge(ICON_BASE, {opacity:1}), 
Separator:merge(SEPARATOR_BASE, {opacity:0}), 
Title:merge(TITLE_BASE, {
left:crumbLeft + ICON_WIDTH, 
opacity:1}), 

RightItem:merge(RIGHT_BUTTON_BASE, {opacity:1})};

var crumbRight=SCREEN_WIDTH - 100;
RIGHT[i] = {
Crumb:merge(CRUMB_BASE, {left:crumbRight}), 
Icon:merge(ICON_BASE, {opacity:0}), 
Separator:merge(SEPARATOR_BASE, {opacity:0}), 
Title:merge(TITLE_BASE, {
left:crumbRight + ICON_WIDTH, 
opacity:0}), 

RightItem:merge(RIGHT_BUTTON_BASE, {opacity:0})};}




CENTER[0] = {
Crumb:merge(CRUMB_BASE, {left:SCREEN_WIDTH / 4}), 
Icon:merge(ICON_BASE, {opacity:0}), 
Separator:merge(SEPARATOR_BASE, {opacity:0}), 
Title:merge(FIRST_TITLE_BASE, {opacity:1}), 
RightItem:CENTER[0].RightItem};

LEFT[0].Title = merge(FIRST_TITLE_BASE, {left:-SCREEN_WIDTH / 4, opacity:0});
RIGHT[0].Title = merge(FIRST_TITLE_BASE, {opacity:0});


var buildIndexSceneInterpolator=function(startStyles, endStyles){
return {
Crumb:buildStyleInterpolator({
left:{
type:'linear', 
from:startStyles.Crumb.left, 
to:endStyles.Crumb.left, 
min:0, 
max:1, 
extrapolate:true}}), 


Icon:buildStyleInterpolator({
opacity:{
type:'linear', 
from:startStyles.Icon.opacity, 
to:endStyles.Icon.opacity, 
min:0, 
max:1}}), 


Separator:buildStyleInterpolator({
opacity:{
type:'linear', 
from:startStyles.Separator.opacity, 
to:endStyles.Separator.opacity, 
min:0, 
max:1}}), 


Title:buildStyleInterpolator({
opacity:{
type:'linear', 
from:startStyles.Title.opacity, 
to:endStyles.Title.opacity, 
min:0, 
max:1}, 

left:{
type:'linear', 
from:startStyles.Title.left, 
to:endStyles.Title.left, 
min:0, 
max:1, 
extrapolate:true}}), 


RightItem:buildStyleInterpolator({
opacity:{
type:'linear', 
from:startStyles.RightItem.opacity, 
to:endStyles.RightItem.opacity, 
min:0, 
max:1, 
round:OPACITY_RATIO}})};};





var Interpolators=CENTER.map(function(_, ii){
return {

RightToCenter:buildIndexSceneInterpolator(RIGHT[ii], CENTER[ii]), 

CenterToLeft:buildIndexSceneInterpolator(CENTER[ii], LEFT[ii]), 

RightToLeft:buildIndexSceneInterpolator(RIGHT[ii], LEFT[ii])};});







module.exports = {
Interpolators:Interpolators, 
Left:LEFT, 
Center:CENTER, 
Right:RIGHT, 
IconWidth:ICON_WIDTH, 
IconHeight:NAV_BAR_HEIGHT, 
SeparatorWidth:SEPARATOR_WIDTH, 
SeparatorHeight:NAV_BAR_HEIGHT};
});
__d('NavigatorNavigationBarStyles',["Dimensions","buildStyleInterpolator","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var NAV_BAR_HEIGHT=44;
var STATUS_BAR_HEIGHT=20;
var NAV_HEIGHT=NAV_BAR_HEIGHT + STATUS_BAR_HEIGHT;

var BASE_STYLES={
Title:{
position:'absolute', 
top:STATUS_BAR_HEIGHT, 
left:0, 
alignItems:'center', 
width:SCREEN_WIDTH, 
height:NAV_BAR_HEIGHT, 
backgroundColor:'transparent'}, 

LeftButton:{
position:'absolute', 
top:STATUS_BAR_HEIGHT, 
left:0, 
overflow:'hidden', 
opacity:1, 
width:SCREEN_WIDTH / 3, 
height:NAV_BAR_HEIGHT, 
backgroundColor:'transparent'}, 

RightButton:{
position:'absolute', 
top:STATUS_BAR_HEIGHT, 
left:2 * SCREEN_WIDTH / 3, 
overflow:'hidden', 
opacity:1, 
alignItems:'flex-end', 
width:SCREEN_WIDTH / 3, 
height:NAV_BAR_HEIGHT, 
backgroundColor:'transparent'}};










var Stages={
Left:{
Title:merge(BASE_STYLES.Title, {left:-SCREEN_WIDTH / 2, opacity:0}), 
LeftButton:merge(BASE_STYLES.LeftButton, {left:-SCREEN_WIDTH / 3, opacity:1}), 
RightButton:merge(BASE_STYLES.RightButton, {left:SCREEN_WIDTH / 3, opacity:0})}, 

Center:{
Title:merge(BASE_STYLES.Title, {left:0, opacity:1}), 
LeftButton:merge(BASE_STYLES.LeftButton, {left:0, opacity:1}), 
RightButton:merge(BASE_STYLES.RightButton, {left:2 * SCREEN_WIDTH / 3 - 0, opacity:1})}, 

Right:{
Title:merge(BASE_STYLES.Title, {left:SCREEN_WIDTH / 2, opacity:0}), 
LeftButton:merge(BASE_STYLES.LeftButton, {left:0, opacity:0}), 
RightButton:merge(BASE_STYLES.RightButton, {left:SCREEN_WIDTH, opacity:0})}};




var opacityRatio=100;

function buildSceneInterpolators(startStyles, endStyles){
return {
Title:buildStyleInterpolator({
opacity:{
type:'linear', 
from:startStyles.Title.opacity, 
to:endStyles.Title.opacity, 
min:0, 
max:1}, 

left:{
type:'linear', 
from:startStyles.Title.left, 
to:endStyles.Title.left, 
min:0, 
max:1, 
extrapolate:true}}), 


LeftButton:buildStyleInterpolator({
opacity:{
type:'linear', 
from:startStyles.LeftButton.opacity, 
to:endStyles.LeftButton.opacity, 
min:0, 
max:1, 
round:opacityRatio}, 

left:{
type:'linear', 
from:startStyles.LeftButton.left, 
to:endStyles.LeftButton.left, 
min:0, 
max:1}}), 


RightButton:buildStyleInterpolator({
opacity:{
type:'linear', 
from:startStyles.RightButton.opacity, 
to:endStyles.RightButton.opacity, 
min:0, 
max:1, 
round:opacityRatio}, 

left:{
type:'linear', 
from:startStyles.RightButton.left, 
to:endStyles.RightButton.left, 
min:0, 
max:1, 
extrapolate:true}})};}





var Interpolators={

RightToCenter:buildSceneInterpolators(Stages.Right, Stages.Center), 

CenterToLeft:buildSceneInterpolators(Stages.Center, Stages.Left), 

RightToLeft:buildSceneInterpolators(Stages.Right, Stages.Left)};



module.exports = {
General:{
NavBarHeight:NAV_BAR_HEIGHT, 
StatusBarHeight:STATUS_BAR_HEIGHT, 
TotalNavHeight:NAV_HEIGHT}, 

Interpolators:Interpolators, 
Stages:Stages};
});
__d('buildStyleInterpolator',["keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










keyOf=require('keyOf');

var X_DIM=keyOf({x:null});
var Y_DIM=keyOf({y:null});
var Z_DIM=keyOf({z:null});
var W_DIM=keyOf({w:null});

var TRANSFORM_ROTATE_NAME=keyOf({transformRotateRadians:null});

var ShouldAllocateReusableOperationVars={
transformRotateRadians:true, 
transformScale:true, 
transformTranslate:true};


var InitialOperationField={
transformRotateRadians:[0, 0, 0, 1], 
transformTranslate:[0, 0, 0], 
transformScale:[1, 1, 1]};



























































var ARGUMENT_NAMES_RE=/([^\s,]+)/g;



















var inline=function(func, replaceWithArgs){
var fnStr=func.toString();
var parameterNames=fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).
match(ARGUMENT_NAMES_RE) || 
[];
var replaceRegexStr=parameterNames.map(function(paramName){
return '\\b' + paramName + '\\b';}).
join('|');
var replaceRegex=new RegExp(replaceRegexStr, 'g');
var fnBody=fnStr.substring(fnStr.indexOf('{') + 1, fnStr.lastIndexOf('}'));
var newFnBody=fnBody.replace(replaceRegex, function(parameterName){
var indexInParameterNames=parameterNames.indexOf(parameterName);
var replacementName=replaceWithArgs[indexInParameterNames];
return replacementName;});

return newFnBody.split('\n');};






var MatrixOps={
unroll:function(matVar, m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15){
m0 = matVar[0];
m1 = matVar[1];
m2 = matVar[2];
m3 = matVar[3];
m4 = matVar[4];
m5 = matVar[5];
m6 = matVar[6];
m7 = matVar[7];
m8 = matVar[8];
m9 = matVar[9];
m10 = matVar[10];
m11 = matVar[11];
m12 = matVar[12];
m13 = matVar[13];
m14 = matVar[14];
m15 = matVar[15];}, 


matrixDiffers:function(retVar, matVar, m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15){
retVar = retVar || 
m0 !== matVar[0] || 
m1 !== matVar[1] || 
m2 !== matVar[2] || 
m3 !== matVar[3] || 
m4 !== matVar[4] || 
m5 !== matVar[5] || 
m6 !== matVar[6] || 
m7 !== matVar[7] || 
m8 !== matVar[8] || 
m9 !== matVar[9] || 
m10 !== matVar[10] || 
m11 !== matVar[11] || 
m12 !== matVar[12] || 
m13 !== matVar[13] || 
m14 !== matVar[14] || 
m15 !== matVar[15];}, 


transformScale:function(matVar, opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[0] = matVar[0] * x;
matVar[1] = matVar[1] * x;
matVar[2] = matVar[2] * x;
matVar[3] = matVar[3] * x;
matVar[4] = matVar[4] * y;
matVar[5] = matVar[5] * y;
matVar[6] = matVar[6] * y;
matVar[7] = matVar[7] * y;
matVar[8] = matVar[8] * z;
matVar[9] = matVar[9] * z;
matVar[10] = matVar[10] * z;
matVar[11] = matVar[11] * z;
matVar[12] = matVar[12];
matVar[13] = matVar[13];
matVar[14] = matVar[14];
matVar[15] = matVar[15];}, 






transformTranslate:function(matVar, opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[12] = matVar[0] * x + matVar[4] * y + matVar[8] * z + matVar[12];
matVar[13] = matVar[1] * x + matVar[5] * y + matVar[9] * z + matVar[13];
matVar[14] = matVar[2] * x + matVar[6] * y + matVar[10] * z + matVar[14];
matVar[15] = matVar[3] * x + matVar[7] * y + matVar[11] * z + matVar[15];}, 






transformRotateRadians:function(matVar, q){

var xQuat=q[0], yQuat=q[1], zQuat=q[2], wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var a00=matVar[0];
var a01=matVar[1];
var a02=matVar[2];
var a03=matVar[3];
var a10=matVar[4];
var a11=matVar[5];
var a12=matVar[6];
var a13=matVar[7];
var a20=matVar[8];
var a21=matVar[9];
var a22=matVar[10];
var a23=matVar[11];

var b0=quatMat0, b1=quatMat1, b2=quatMat2;
matVar[0] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[1] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[2] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[3] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[5] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[6] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[7] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[9] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[10] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[11] = b0 * a03 + b1 * a13 + b2 * a23;}};





var MatrixOpsInitial={
transformScale:function(matVar, opVar){

matVar[0] = opVar[0];
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = opVar[1];
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = opVar[2];
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;}, 


transformTranslate:function(matVar, opVar){

matVar[0] = 1;
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = 1;
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = 1;
matVar[11] = 0;
matVar[12] = opVar[0];
matVar[13] = opVar[1];
matVar[14] = opVar[2];
matVar[15] = 1;}, 







transformRotateRadians:function(matVar, q){


var xQuat=q[0], yQuat=q[1], zQuat=q[2], wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var b0=quatMat0, b1=quatMat1, b2=quatMat2;
matVar[0] = b0;
matVar[1] = b1;
matVar[2] = b2;
matVar[3] = 0;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0;
matVar[5] = b1;
matVar[6] = b2;
matVar[7] = 0;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0;
matVar[9] = b1;
matVar[10] = b2;
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;}};




var setNextValAndDetectChange=function(name, tmpVarName){
return (
'  if (!didChange) {\n' + 
'    var prevVal = result.' + name + ';\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'    didChange = didChange  || (' + tmpVarName + ' !== prevVal);\n' + 
'  } else {\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'  }\n');};



var computeNextValLinear=function(anim, from, to, tmpVarName){
var hasRoundRatio=('round' in anim);
var roundRatio=anim.round;
var fn='  ratio = (value - ' + anim.min + ') / ' + (anim.max - anim.min) + ';\n';
if(!anim.extrapolate){
fn += '  ratio = ratio > 1 ? 1 : (ratio < 0 ? 0 : ratio);\n';}


var roundOpen=hasRoundRatio?'Math.round(' + roundRatio + ' * ':'';
var roundClose=hasRoundRatio?') / ' + roundRatio:'';
fn += 
'  ' + tmpVarName + ' = ' + 
roundOpen + 
'(' + from + ' * (1 - ratio) + ' + to + ' * ratio)' + 
roundClose + ';\n';
return fn;};


var computeNextValLinearScalar=function(anim){
return computeNextValLinear(anim, anim.from, anim.to, 'nextScalarVal');};


var computeNextValConstant=function(anim){
var constantExpression=JSON.stringify(anim.value);
return '  nextScalarVal = ' + constantExpression + ';\n';};


var computeNextValStep=function(anim){
return (
'  nextScalarVal = value >= ' + (
anim.threshold + ' ? ' + anim.to + ' : ' + anim.from) + ';\n');};



var computeNextValIdentity=function(anim){
return '  nextScalarVal = value;\n';};


var operationVar=function(name){
return name + 'ReuseOp';};


var createReusableOperationVars=function(anims){
var ret='';
for(var name in anims) {
if(ShouldAllocateReusableOperationVars[name]){
ret += 'var ' + operationVar(name) + ' = [];\n';}}


return ret;};


var newlines=function(statements){
return '\n' + statements.join('\n') + '\n';};








var computeNextMatrixOperationField=function(anim, name, dimension, index){
var fieldAccess=operationVar(name) + '[' + index + ']';
if(anim.from[dimension] !== undefined && anim.to[dimension] !== undefined){
return '  ' + anim.from[dimension] !== anim.to[dimension]?
computeNextValLinear(anim, anim.from[dimension], anim.to[dimension], fieldAccess):
fieldAccess + ' = ' + anim.from[dimension] + ';';}else 
{
return '  ' + fieldAccess + ' = ' + InitialOperationField[name][index] + ';';}};



var unrolledVars=[];
for(var varIndex=0; varIndex < 16; varIndex++) {
unrolledVars.push('m' + varIndex);}

var setNextMatrixAndDetectChange=function(orderedMatrixOperations){
var fn=[
'  var transformMatrix = result.transformMatrix !== undefined ? ' + 
'result.transformMatrix : (result.transformMatrix = []);'];

fn.push.apply(
fn, 
inline(MatrixOps.unroll, ['transformMatrix'].concat(unrolledVars)));

for(var i=0; i < orderedMatrixOperations.length; i++) {
var opName=orderedMatrixOperations[i];
if(i === 0){
fn.push.apply(
fn, 
inline(MatrixOpsInitial[opName], ['transformMatrix', operationVar(opName)]));}else 

{
fn.push.apply(
fn, 
inline(MatrixOps[opName], ['transformMatrix', operationVar(opName)]));}}



fn.push.apply(
fn, 
inline(MatrixOps.matrixDiffers, ['didChange', 'transformMatrix'].concat(unrolledVars)));

return fn;};


var InterpolateMatrix={
transformTranslate:true, 
transformRotateRadians:true, 
transformScale:true};


var createFunctionString=function(anims){


var orderedMatrixOperations=[];



var fn='return (function() {\n';
fn += createReusableOperationVars(anims);
fn += 'return function(result, value) {\n';
fn += '  var didChange = false;\n';
fn += '  var nextScalarVal;\n';
fn += '  var ratio;\n';

for(var name in anims) {
var anim=anims[name];
if(anim.type === 'linear'){
if(InterpolateMatrix[name]){
orderedMatrixOperations.push(name);
var setOperations=[
computeNextMatrixOperationField(anim, name, X_DIM, 0), 
computeNextMatrixOperationField(anim, name, Y_DIM, 1), 
computeNextMatrixOperationField(anim, name, Z_DIM, 2)];

if(name === TRANSFORM_ROTATE_NAME){
setOperations.push(computeNextMatrixOperationField(anim, name, W_DIM, 3));}

fn += newlines(setOperations);}else 
{
fn += computeNextValLinearScalar(anim, 'nextScalarVal');
fn += setNextValAndDetectChange(name, 'nextScalarVal');}}else 

if(anim.type === 'constant'){
fn += computeNextValConstant(anim);
fn += setNextValAndDetectChange(name, 'nextScalarVal');}else 
if(anim.type === 'step'){
fn += computeNextValStep(anim);
fn += setNextValAndDetectChange(name, 'nextScalarVal');}else 
if(anim.type === 'identity'){
fn += computeNextValIdentity(anim);
fn += setNextValAndDetectChange(name, 'nextScalarVal');}}


if(orderedMatrixOperations.length){
fn += newlines(setNextMatrixAndDetectChange(orderedMatrixOperations));}

fn += '  return didChange;\n';
fn += '};\n';
fn += '})()';
return fn;};







var buildStyleInterpolator=function(anims){
return Function(createFunctionString(anims))();};



module.exports = buildStyleInterpolator;
});
__d('StaticContainer.react',["React","onlyChild"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();var _get=function get(object, property, receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object, property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent, property, receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}




















var React=require('React');

var onlyChild=require('onlyChild');var 
















StaticContainer=(function(_React$Component){function StaticContainer(){_classCallCheck(this, StaticContainer);_get(Object.getPrototypeOf(StaticContainer.prototype), 'constructor', this).apply(this, arguments);}_inherits(StaticContainer, _React$Component);_createClass(StaticContainer, [{key:'shouldComponentUpdate', value:

function shouldComponentUpdate(nextProps){
return !!nextProps.shouldUpdate;}}, {key:'render', value:


function render(){
var child=this.props.children;
return child === null || child === false?null:onlyChild(child);}}]);return StaticContainer;})(React.Component);




module.exports = StaticContainer;
});
__d('immutable/dist/immutable.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (







function(global, factory){
typeof exports === 'object' && typeof module !== 'undefined'?module.exports = factory():
typeof define === 'function' && define.amd?define(factory):
global.Immutable = factory();})(
this, function(){'use strict';var SLICE$0=Array.prototype.slice;

function createClass(ctor, superClass){
if(superClass){
ctor.prototype = Object.create(superClass.prototype);}

ctor.prototype.constructor = ctor;}



var DELETE='delete';


var SHIFT=5;
var SIZE=1 << SHIFT;
var MASK=SIZE - 1;



var NOT_SET={};


var CHANGE_LENGTH={value:false};
var DID_ALTER={value:false};

function MakeRef(ref){
ref.value = false;
return ref;}


function SetRef(ref){
ref && (ref.value = true);}





function OwnerID(){}


function arrCopy(arr, offset){
offset = offset || 0;
var len=Math.max(0, arr.length - offset);
var newArr=new Array(len);
for(var ii=0; ii < len; ii++) {
newArr[ii] = arr[ii + offset];}

return newArr;}


function ensureSize(iter){
if(iter.size === undefined){
iter.size = iter.__iterate(returnTrue);}

return iter.size;}


function wrapIndex(iter, index){
return index >= 0?+index:ensureSize(iter) + +index;}


function returnTrue(){
return true;}


function wholeSlice(begin, end, size){
return (begin === 0 || size !== undefined && begin <= -size) && (
end === undefined || size !== undefined && end >= size);}


function resolveBegin(begin, size){
return resolveIndex(begin, size, 0);}


function resolveEnd(end, size){
return resolveIndex(end, size, size);}


function resolveIndex(index, size, defaultIndex){
return index === undefined?
defaultIndex:
index < 0?
Math.max(0, size + index):
size === undefined?
index:
Math.min(size, index);}


function Iterable(value){
return isIterable(value)?value:Seq(value);}



createClass(KeyedIterable, Iterable);
function KeyedIterable(value){
return isKeyed(value)?value:KeyedSeq(value);}



createClass(IndexedIterable, Iterable);
function IndexedIterable(value){
return isIndexed(value)?value:IndexedSeq(value);}



createClass(SetIterable, Iterable);
function SetIterable(value){
return isIterable(value) && !isAssociative(value)?value:SetSeq(value);}




function isIterable(maybeIterable){
return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);}


function isKeyed(maybeKeyed){
return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);}


function isIndexed(maybeIndexed){
return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);}


function isAssociative(maybeAssociative){
return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);}


function isOrdered(maybeOrdered){
return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);}


Iterable.isIterable = isIterable;
Iterable.isKeyed = isKeyed;
Iterable.isIndexed = isIndexed;
Iterable.isAssociative = isAssociative;
Iterable.isOrdered = isOrdered;

Iterable.Keyed = KeyedIterable;
Iterable.Indexed = IndexedIterable;
Iterable.Set = SetIterable;


var IS_ITERABLE_SENTINEL='@@__IMMUTABLE_ITERABLE__@@';
var IS_KEYED_SENTINEL='@@__IMMUTABLE_KEYED__@@';
var IS_INDEXED_SENTINEL='@@__IMMUTABLE_INDEXED__@@';
var IS_ORDERED_SENTINEL='@@__IMMUTABLE_ORDERED__@@';



var ITERATE_KEYS=0;
var ITERATE_VALUES=1;
var ITERATE_ENTRIES=2;

var REAL_ITERATOR_SYMBOL=typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';

var ITERATOR_SYMBOL=REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;


function src_Iterator__Iterator(next){
this.next = next;}


src_Iterator__Iterator.prototype.toString = function(){
return '[Iterator]';};



src_Iterator__Iterator.KEYS = ITERATE_KEYS;
src_Iterator__Iterator.VALUES = ITERATE_VALUES;
src_Iterator__Iterator.ENTRIES = ITERATE_ENTRIES;

src_Iterator__Iterator.prototype.inspect = 
src_Iterator__Iterator.prototype.toSource = function(){return this.toString();};
src_Iterator__Iterator.prototype[ITERATOR_SYMBOL] = function(){
return this;};



function iteratorValue(type, k, v, iteratorResult){
var value=type === 0?k:type === 1?v:[k, v];
iteratorResult?iteratorResult.value = value:iteratorResult = {
value:value, done:false};

return iteratorResult;}


function iteratorDone(){
return {value:undefined, done:true};}


function hasIterator(maybeIterable){
return !!getIteratorFn(maybeIterable);}


function isIterator(maybeIterator){
return maybeIterator && typeof maybeIterator.next === 'function';}


function getIterator(iterable){
var iteratorFn=getIteratorFn(iterable);
return iteratorFn && iteratorFn.call(iterable);}


function getIteratorFn(iterable){
var iteratorFn=iterable && (
REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || 
iterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn === 'function'){
return iteratorFn;}}



function isArrayLike(value){
return value && typeof value.length === 'number';}


createClass(Seq, Iterable);
function Seq(value){
return value === null || value === undefined?emptySequence():
isIterable(value)?value.toSeq():seqFromValue(value);}


Seq.of = function(){
return Seq(arguments);};


Seq.prototype.toSeq = function(){
return this;};


Seq.prototype.toString = function(){
return this.__toString('Seq {', '}');};


Seq.prototype.cacheResult = function(){
if(!this._cache && this.__iterateUncached){
this._cache = this.entrySeq().toArray();
this.size = this._cache.length;}

return this;};




Seq.prototype.__iterate = function(fn, reverse){
return seqIterate(this, fn, reverse, true);};




Seq.prototype.__iterator = function(type, reverse){
return seqIterator(this, type, reverse, true);};




createClass(KeyedSeq, Seq);
function KeyedSeq(value){
return value === null || value === undefined?
emptySequence().toKeyedSeq():
isIterable(value)?
isKeyed(value)?value.toSeq():value.fromEntrySeq():
keyedSeqFromValue(value);}


KeyedSeq.prototype.toKeyedSeq = function(){
return this;};




createClass(IndexedSeq, Seq);
function IndexedSeq(value){
return value === null || value === undefined?emptySequence():
!isIterable(value)?indexedSeqFromValue(value):
isKeyed(value)?value.entrySeq():value.toIndexedSeq();}


IndexedSeq.of = function(){
return IndexedSeq(arguments);};


IndexedSeq.prototype.toIndexedSeq = function(){
return this;};


IndexedSeq.prototype.toString = function(){
return this.__toString('Seq [', ']');};


IndexedSeq.prototype.__iterate = function(fn, reverse){
return seqIterate(this, fn, reverse, false);};


IndexedSeq.prototype.__iterator = function(type, reverse){
return seqIterator(this, type, reverse, false);};




createClass(SetSeq, Seq);
function SetSeq(value){
return (
value === null || value === undefined?emptySequence():
!isIterable(value)?indexedSeqFromValue(value):
isKeyed(value)?value.entrySeq():value).
toSetSeq();}


SetSeq.of = function(){
return SetSeq(arguments);};


SetSeq.prototype.toSetSeq = function(){
return this;};




Seq.isSeq = isSeq;
Seq.Keyed = KeyedSeq;
Seq.Set = SetSeq;
Seq.Indexed = IndexedSeq;

var IS_SEQ_SENTINEL='@@__IMMUTABLE_SEQ__@@';

Seq.prototype[IS_SEQ_SENTINEL] = true;





createClass(ArraySeq, IndexedSeq);
function ArraySeq(array){
this._array = array;
this.size = array.length;}


ArraySeq.prototype.get = function(index, notSetValue){
return this.has(index)?this._array[wrapIndex(this, index)]:notSetValue;};


ArraySeq.prototype.__iterate = function(fn, reverse){
var array=this._array;
var maxIndex=array.length - 1;
for(var ii=0; ii <= maxIndex; ii++) {
if(fn(array[reverse?maxIndex - ii:ii], ii, this) === false){
return ii + 1;}}


return ii;};


ArraySeq.prototype.__iterator = function(type, reverse){
var array=this._array;
var maxIndex=array.length - 1;
var ii=0;
return new src_Iterator__Iterator(function()
{return ii > maxIndex?
iteratorDone():
iteratorValue(type, ii, array[reverse?maxIndex - ii++:ii++]);});};





createClass(ObjectSeq, KeyedSeq);
function ObjectSeq(object){
var keys=Object.keys(object);
this._object = object;
this._keys = keys;
this.size = keys.length;}


ObjectSeq.prototype.get = function(key, notSetValue){
if(notSetValue !== undefined && !this.has(key)){
return notSetValue;}

return this._object[key];};


ObjectSeq.prototype.has = function(key){
return this._object.hasOwnProperty(key);};


ObjectSeq.prototype.__iterate = function(fn, reverse){
var object=this._object;
var keys=this._keys;
var maxIndex=keys.length - 1;
for(var ii=0; ii <= maxIndex; ii++) {
var key=keys[reverse?maxIndex - ii:ii];
if(fn(object[key], key, this) === false){
return ii + 1;}}


return ii;};


ObjectSeq.prototype.__iterator = function(type, reverse){
var object=this._object;
var keys=this._keys;
var maxIndex=keys.length - 1;
var ii=0;
return new src_Iterator__Iterator(function(){
var key=keys[reverse?maxIndex - ii:ii];
return ii++ > maxIndex?
iteratorDone():
iteratorValue(type, key, object[key]);});};



ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;


createClass(IterableSeq, IndexedSeq);
function IterableSeq(iterable){
this._iterable = iterable;
this.size = iterable.length || iterable.size;}


IterableSeq.prototype.__iterateUncached = function(fn, reverse){
if(reverse){
return this.cacheResult().__iterate(fn, reverse);}

var iterable=this._iterable;
var iterator=getIterator(iterable);
var iterations=0;
if(isIterator(iterator)){
var step;
while(!(step = iterator.next()).done) {
if(fn(step.value, iterations++, this) === false){
break;}}}



return iterations;};


IterableSeq.prototype.__iteratorUncached = function(type, reverse){
if(reverse){
return this.cacheResult().__iterator(type, reverse);}

var iterable=this._iterable;
var iterator=getIterator(iterable);
if(!isIterator(iterator)){
return new src_Iterator__Iterator(iteratorDone);}

var iterations=0;
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:iteratorValue(type, iterations++, step.value);});};





createClass(IteratorSeq, IndexedSeq);
function IteratorSeq(iterator){
this._iterator = iterator;
this._iteratorCache = [];}


IteratorSeq.prototype.__iterateUncached = function(fn, reverse){
if(reverse){
return this.cacheResult().__iterate(fn, reverse);}

var iterator=this._iterator;
var cache=this._iteratorCache;
var iterations=0;
while(iterations < cache.length) {
if(fn(cache[iterations], iterations++, this) === false){
return iterations;}}


var step;
while(!(step = iterator.next()).done) {
var val=step.value;
cache[iterations] = val;
if(fn(val, iterations++, this) === false){
break;}}


return iterations;};


IteratorSeq.prototype.__iteratorUncached = function(type, reverse){
if(reverse){
return this.cacheResult().__iterator(type, reverse);}

var iterator=this._iterator;
var cache=this._iteratorCache;
var iterations=0;
return new src_Iterator__Iterator(function(){
if(iterations >= cache.length){
var step=iterator.next();
if(step.done){
return step;}

cache[iterations] = step.value;}

return iteratorValue(type, iterations, cache[iterations++]);});};








function isSeq(maybeSeq){
return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);}


var EMPTY_SEQ;

function emptySequence(){
return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));}


function keyedSeqFromValue(value){
var seq=
Array.isArray(value)?new ArraySeq(value).fromEntrySeq():
isIterator(value)?new IteratorSeq(value).fromEntrySeq():
hasIterator(value)?new IterableSeq(value).fromEntrySeq():
typeof value === 'object'?new ObjectSeq(value):
undefined;
if(!seq){
throw new TypeError(
'Expected Array or iterable object of [k, v] entries, ' + 
'or keyed object: ' + value);}


return seq;}


function indexedSeqFromValue(value){
var seq=maybeIndexedSeqFromValue(value);
if(!seq){
throw new TypeError(
'Expected Array or iterable object of values: ' + value);}


return seq;}


function seqFromValue(value){
var seq=maybeIndexedSeqFromValue(value) || 
typeof value === 'object' && new ObjectSeq(value);
if(!seq){
throw new TypeError(
'Expected Array or iterable object of values, or keyed object: ' + value);}


return seq;}


function maybeIndexedSeqFromValue(value){
return (
isArrayLike(value)?new ArraySeq(value):
isIterator(value)?new IteratorSeq(value):
hasIterator(value)?new IterableSeq(value):
undefined);}



function seqIterate(seq, fn, reverse, useKeys){
var cache=seq._cache;
if(cache){
var maxIndex=cache.length - 1;
for(var ii=0; ii <= maxIndex; ii++) {
var entry=cache[reverse?maxIndex - ii:ii];
if(fn(entry[1], useKeys?entry[0]:ii, seq) === false){
return ii + 1;}}


return ii;}

return seq.__iterateUncached(fn, reverse);}


function seqIterator(seq, type, reverse, useKeys){
var cache=seq._cache;
if(cache){
var maxIndex=cache.length - 1;
var ii=0;
return new src_Iterator__Iterator(function(){
var entry=cache[reverse?maxIndex - ii:ii];
return ii++ > maxIndex?
iteratorDone():
iteratorValue(type, useKeys?entry[0]:ii - 1, entry[1]);});}


return seq.__iteratorUncached(type, reverse);}


createClass(Collection, Iterable);
function Collection(){
throw TypeError('Abstract');}



createClass(KeyedCollection, Collection);function KeyedCollection(){}

createClass(IndexedCollection, Collection);function IndexedCollection(){}

createClass(SetCollection, Collection);function SetCollection(){}


Collection.Keyed = KeyedCollection;
Collection.Indexed = IndexedCollection;
Collection.Set = SetCollection;























































function is(valueA, valueB){
if(valueA === valueB || valueA !== valueA && valueB !== valueB){
return true;}

if(!valueA || !valueB){
return false;}

if(typeof valueA.valueOf === 'function' && 
typeof valueB.valueOf === 'function'){
valueA = valueA.valueOf();
valueB = valueB.valueOf();
if(valueA === valueB || valueA !== valueA && valueB !== valueB){
return true;}

if(!valueA || !valueB){
return false;}}


if(typeof valueA.equals === 'function' && 
typeof valueB.equals === 'function' && 
valueA.equals(valueB)){
return true;}

return false;}


function fromJS(json, converter){
return converter?
fromJSWith(converter, json, '', {'':json}):
fromJSDefault(json);}


function fromJSWith(converter, json, key, parentJSON){
if(Array.isArray(json)){
return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k){return fromJSWith(converter, v, k, json);}));}

if(isPlainObj(json)){
return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k){return fromJSWith(converter, v, k, json);}));}

return json;}


function fromJSDefault(json){
if(Array.isArray(json)){
return IndexedSeq(json).map(fromJSDefault).toList();}

if(isPlainObj(json)){
return KeyedSeq(json).map(fromJSDefault).toMap();}

return json;}


function isPlainObj(value){
return value && (value.constructor === Object || value.constructor === undefined);}


var src_Math__imul=
typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2?
Math.imul:
function src_Math__imul(a, b){
a = a | 0;
b = b | 0;
var c=a & 0xffff;
var d=b & 0xffff;

return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0;};






function smi(i32){
return i32 >>> 1 & 0x40000000 | i32 & 0xBFFFFFFF;}


function hash(o){
if(o === false || o === null || o === undefined){
return 0;}

if(typeof o.valueOf === 'function'){
o = o.valueOf();
if(o === false || o === null || o === undefined){
return 0;}}


if(o === true){
return 1;}

var type=typeof o;
if(type === 'number'){
var h=o | 0;
if(h !== o){
h ^= o * 0xFFFFFFFF;}

while(o > 0xFFFFFFFF) {
o /= 0xFFFFFFFF;
h ^= o;}

return smi(h);}

if(type === 'string'){
return o.length > STRING_HASH_CACHE_MIN_STRLEN?cachedHashString(o):hashString(o);}

if(typeof o.hashCode === 'function'){
return o.hashCode();}

return hashJSObj(o);}


function cachedHashString(string){
var hash=stringHashCache[string];
if(hash === undefined){
hash = hashString(string);
if(STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE){
STRING_HASH_CACHE_SIZE = 0;
stringHashCache = {};}

STRING_HASH_CACHE_SIZE++;
stringHashCache[string] = hash;}

return hash;}



function hashString(string){






var hash=0;
for(var ii=0; ii < string.length; ii++) {
hash = 31 * hash + string.charCodeAt(ii) | 0;}

return smi(hash);}


function hashJSObj(obj){
var hash;
if(usingWeakMap){
hash = weakMap.get(obj);
if(hash !== undefined){
return hash;}}



hash = obj[UID_HASH_KEY];
if(hash !== undefined){
return hash;}


if(!canDefineProperty){
hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
if(hash !== undefined){
return hash;}


hash = getIENodeHash(obj);
if(hash !== undefined){
return hash;}}



hash = ++objHashUID;
if(objHashUID & 0x40000000){
objHashUID = 0;}


if(usingWeakMap){
weakMap.set(obj, hash);}else 
if(isExtensible !== undefined && isExtensible(obj) === false){
throw new Error('Non-extensible objects are not allowed as keys.');}else 
if(canDefineProperty){
Object.defineProperty(obj, UID_HASH_KEY, {
'enumerable':false, 
'configurable':false, 
'writable':false, 
'value':hash});}else 

if(obj.propertyIsEnumerable !== undefined && 
obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable){




obj.propertyIsEnumerable = function(){
return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);};

obj.propertyIsEnumerable[UID_HASH_KEY] = hash;}else 
if(obj.nodeType !== undefined){




obj[UID_HASH_KEY] = hash;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}


return hash;}



var isExtensible=Object.isExtensible;


var canDefineProperty=(function(){
try{
Object.defineProperty({}, '@', {});
return true;}
catch(e) {
return false;}})();





function getIENodeHash(node){
if(node && node.nodeType > 0){
switch(node.nodeType){
case 1:
return node.uniqueID;
case 9:
return node.documentElement && node.documentElement.uniqueID;}}}





var usingWeakMap=typeof WeakMap === 'function';
var weakMap;
if(usingWeakMap){
weakMap = new WeakMap();}


var objHashUID=0;

var UID_HASH_KEY='__immutablehash__';
if(typeof Symbol === 'function'){
UID_HASH_KEY = Symbol(UID_HASH_KEY);}


var STRING_HASH_CACHE_MIN_STRLEN=16;
var STRING_HASH_CACHE_MAX_SIZE=255;
var STRING_HASH_CACHE_SIZE=0;
var stringHashCache={};

function invariant(condition, error){
if(!condition)throw new Error(error);}


function assertNotInfinite(size){
invariant(
size !== Infinity, 
'Cannot perform this action with an infinite size.');}



createClass(ToKeyedSequence, KeyedSeq);
function ToKeyedSequence(indexed, useKeys){
this._iter = indexed;
this._useKeys = useKeys;
this.size = indexed.size;}


ToKeyedSequence.prototype.get = function(key, notSetValue){
return this._iter.get(key, notSetValue);};


ToKeyedSequence.prototype.has = function(key){
return this._iter.has(key);};


ToKeyedSequence.prototype.valueSeq = function(){
return this._iter.valueSeq();};


ToKeyedSequence.prototype.reverse = function(){var this$0=this;
var reversedSequence=reverseFactory(this, true);
if(!this._useKeys){
reversedSequence.valueSeq = function(){return this$0._iter.toSeq().reverse();};}

return reversedSequence;};


ToKeyedSequence.prototype.map = function(mapper, context){var this$0=this;
var mappedSequence=mapFactory(this, mapper, context);
if(!this._useKeys){
mappedSequence.valueSeq = function(){return this$0._iter.toSeq().map(mapper, context);};}

return mappedSequence;};


ToKeyedSequence.prototype.__iterate = function(fn, reverse){var this$0=this;
var ii;
return this._iter.__iterate(
this._useKeys?
function(v, k){return fn(v, k, this$0);}:(
ii = reverse?resolveSize(this):0, 
function(v){return fn(v, reverse?--ii:ii++, this$0);}), 
reverse);};



ToKeyedSequence.prototype.__iterator = function(type, reverse){
if(this._useKeys){
return this._iter.__iterator(type, reverse);}

var iterator=this._iter.__iterator(ITERATE_VALUES, reverse);
var ii=reverse?resolveSize(this):0;
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type, reverse?--ii:ii++, step.value, step);});};



ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;


createClass(ToIndexedSequence, IndexedSeq);
function ToIndexedSequence(iter){
this._iter = iter;
this.size = iter.size;}


ToIndexedSequence.prototype.includes = function(value){
return this._iter.includes(value);};


ToIndexedSequence.prototype.__iterate = function(fn, reverse){var this$0=this;
var iterations=0;
return this._iter.__iterate(function(v){return fn(v, iterations++, this$0);}, reverse);};


ToIndexedSequence.prototype.__iterator = function(type, reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES, reverse);
var iterations=0;
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type, iterations++, step.value, step);});};





createClass(ToSetSequence, SetSeq);
function ToSetSequence(iter){
this._iter = iter;
this.size = iter.size;}


ToSetSequence.prototype.has = function(key){
return this._iter.includes(key);};


ToSetSequence.prototype.__iterate = function(fn, reverse){var this$0=this;
return this._iter.__iterate(function(v){return fn(v, v, this$0);}, reverse);};


ToSetSequence.prototype.__iterator = function(type, reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES, reverse);
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type, step.value, step.value, step);});};





createClass(FromEntriesSequence, KeyedSeq);
function FromEntriesSequence(entries){
this._iter = entries;
this.size = entries.size;}


FromEntriesSequence.prototype.entrySeq = function(){
return this._iter.toSeq();};


FromEntriesSequence.prototype.__iterate = function(fn, reverse){var this$0=this;
return this._iter.__iterate(function(entry){


if(entry){
validateEntry(entry);
var indexedIterable=isIterable(entry);
return fn(
indexedIterable?entry.get(1):entry[1], 
indexedIterable?entry.get(0):entry[0], 
this$0);}}, 


reverse);};


FromEntriesSequence.prototype.__iterator = function(type, reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES, reverse);
return new src_Iterator__Iterator(function(){
while(true) {
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;


if(entry){
validateEntry(entry);
var indexedIterable=isIterable(entry);
return iteratorValue(
type, 
indexedIterable?entry.get(0):entry[0], 
indexedIterable?entry.get(1):entry[1], 
step);}}});};







ToIndexedSequence.prototype.cacheResult = 
ToKeyedSequence.prototype.cacheResult = 
ToSetSequence.prototype.cacheResult = 
FromEntriesSequence.prototype.cacheResult = 
cacheResultThrough;


function flipFactory(iterable){
var flipSequence=makeSequence(iterable);
flipSequence._iter = iterable;
flipSequence.size = iterable.size;
flipSequence.flip = function(){return iterable;};
flipSequence.reverse = function(){
var reversedSequence=iterable.reverse.apply(this);
reversedSequence.flip = function(){return iterable.reverse();};
return reversedSequence;};

flipSequence.has = function(key){return iterable.includes(key);};
flipSequence.includes = function(key){return iterable.has(key);};
flipSequence.cacheResult = cacheResultThrough;
flipSequence.__iterateUncached = function(fn, reverse){var this$0=this;
return iterable.__iterate(function(v, k){return fn(k, v, this$0) !== false;}, reverse);};

flipSequence.__iteratorUncached = function(type, reverse){
if(type === ITERATE_ENTRIES){
var iterator=iterable.__iterator(type, reverse);
return new src_Iterator__Iterator(function(){
var step=iterator.next();
if(!step.done){
var k=step.value[0];
step.value[0] = step.value[1];
step.value[1] = k;}

return step;});}


return iterable.__iterator(
type === ITERATE_VALUES?ITERATE_KEYS:ITERATE_VALUES, 
reverse);};


return flipSequence;}



function mapFactory(iterable, mapper, context){
var mappedSequence=makeSequence(iterable);
mappedSequence.size = iterable.size;
mappedSequence.has = function(key){return iterable.has(key);};
mappedSequence.get = function(key, notSetValue){
var v=iterable.get(key, NOT_SET);
return v === NOT_SET?
notSetValue:
mapper.call(context, v, key, iterable);};

mappedSequence.__iterateUncached = function(fn, reverse){var this$0=this;
return iterable.__iterate(
function(v, k, c){return fn(mapper.call(context, v, k, c), k, this$0) !== false;}, 
reverse);};


mappedSequence.__iteratorUncached = function(type, reverse){
var iterator=iterable.__iterator(ITERATE_ENTRIES, reverse);
return new src_Iterator__Iterator(function(){
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var key=entry[0];
return iteratorValue(
type, 
key, 
mapper.call(context, entry[1], key, iterable), 
step);});};



return mappedSequence;}



function reverseFactory(iterable, useKeys){
var reversedSequence=makeSequence(iterable);
reversedSequence._iter = iterable;
reversedSequence.size = iterable.size;
reversedSequence.reverse = function(){return iterable;};
if(iterable.flip){
reversedSequence.flip = function(){
var flipSequence=flipFactory(iterable);
flipSequence.reverse = function(){return iterable.flip();};
return flipSequence;};}


reversedSequence.get = function(key, notSetValue)
{return iterable.get(useKeys?key:-1 - key, notSetValue);};
reversedSequence.has = function(key)
{return iterable.has(useKeys?key:-1 - key);};
reversedSequence.includes = function(value){return iterable.includes(value);};
reversedSequence.cacheResult = cacheResultThrough;
reversedSequence.__iterate = function(fn, reverse){var this$0=this;
return iterable.__iterate(function(v, k){return fn(v, k, this$0);}, !reverse);};

reversedSequence.__iterator = 
function(type, reverse){return iterable.__iterator(type, !reverse);};
return reversedSequence;}



function filterFactory(iterable, predicate, context, useKeys){
var filterSequence=makeSequence(iterable);
if(useKeys){
filterSequence.has = function(key){
var v=iterable.get(key, NOT_SET);
return v !== NOT_SET && !!predicate.call(context, v, key, iterable);};

filterSequence.get = function(key, notSetValue){
var v=iterable.get(key, NOT_SET);
return v !== NOT_SET && predicate.call(context, v, key, iterable)?
v:notSetValue;};}


filterSequence.__iterateUncached = function(fn, reverse){var this$0=this;
var iterations=0;
iterable.__iterate(function(v, k, c){
if(predicate.call(context, v, k, c)){
iterations++;
return fn(v, useKeys?k:iterations - 1, this$0);}}, 

reverse);
return iterations;};

filterSequence.__iteratorUncached = function(type, reverse){
var iterator=iterable.__iterator(ITERATE_ENTRIES, reverse);
var iterations=0;
return new src_Iterator__Iterator(function(){
while(true) {
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var key=entry[0];
var value=entry[1];
if(predicate.call(context, value, key, iterable)){
return iteratorValue(type, useKeys?key:iterations++, value, step);}}});};




return filterSequence;}



function countByFactory(iterable, grouper, context){
var groups=src_Map__Map().asMutable();
iterable.__iterate(function(v, k){
groups.update(
grouper.call(context, v, k, iterable), 
0, 
function(a){return a + 1;});});


return groups.asImmutable();}



function groupByFactory(iterable, grouper, context){
var isKeyedIter=isKeyed(iterable);
var groups=(isOrdered(iterable)?OrderedMap():src_Map__Map()).asMutable();
iterable.__iterate(function(v, k){
groups.update(
grouper.call(context, v, k, iterable), 
function(a){return (a = a || [], a.push(isKeyedIter?[k, v]:v), a);});});


var coerce=iterableClass(iterable);
return groups.map(function(arr){return reify(iterable, coerce(arr));});}



function sliceFactory(iterable, begin, end, useKeys){
var originalSize=iterable.size;

if(wholeSlice(begin, end, originalSize)){
return iterable;}


var resolvedBegin=resolveBegin(begin, originalSize);
var resolvedEnd=resolveEnd(end, originalSize);




if(resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd){
return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);}






var resolvedSize=resolvedEnd - resolvedBegin;
var sliceSize;
if(resolvedSize === resolvedSize){
sliceSize = resolvedSize < 0?0:resolvedSize;}


var sliceSeq=makeSequence(iterable);

sliceSeq.size = sliceSize;

if(!useKeys && isSeq(iterable) && sliceSize >= 0){
sliceSeq.get = function(index, notSetValue){
index = wrapIndex(this, index);
return index >= 0 && index < sliceSize?
iterable.get(index + resolvedBegin, notSetValue):
notSetValue;};}



sliceSeq.__iterateUncached = function(fn, reverse){var this$0=this;
if(sliceSize === 0){
return 0;}

if(reverse){
return this.cacheResult().__iterate(fn, reverse);}

var skipped=0;
var isSkipping=true;
var iterations=0;
iterable.__iterate(function(v, k){
if(!(isSkipping && (isSkipping = skipped++ < resolvedBegin))){
iterations++;
return fn(v, useKeys?k:iterations - 1, this$0) !== false && 
iterations !== sliceSize;}});


return iterations;};


sliceSeq.__iteratorUncached = function(type, reverse){
if(sliceSize !== 0 && reverse){
return this.cacheResult().__iterator(type, reverse);}


var iterator=sliceSize !== 0 && iterable.__iterator(type, reverse);
var skipped=0;
var iterations=0;
return new src_Iterator__Iterator(function(){
while(skipped++ < resolvedBegin) {
iterator.next();}

if(++iterations > sliceSize){
return iteratorDone();}

var step=iterator.next();
if(useKeys || type === ITERATE_VALUES){
return step;}else 
if(type === ITERATE_KEYS){
return iteratorValue(type, iterations - 1, undefined, step);}else 
{
return iteratorValue(type, iterations - 1, step.value[1], step);}});};




return sliceSeq;}



function takeWhileFactory(iterable, predicate, context){
var takeSequence=makeSequence(iterable);
takeSequence.__iterateUncached = function(fn, reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterate(fn, reverse);}

var iterations=0;
iterable.__iterate(function(v, k, c)
{return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0);});

return iterations;};

takeSequence.__iteratorUncached = function(type, reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterator(type, reverse);}

var iterator=iterable.__iterator(ITERATE_ENTRIES, reverse);
var iterating=true;
return new src_Iterator__Iterator(function(){
if(!iterating){
return iteratorDone();}

var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var k=entry[0];
var v=entry[1];
if(!predicate.call(context, v, k, this$0)){
iterating = false;
return iteratorDone();}

return type === ITERATE_ENTRIES?step:
iteratorValue(type, k, v, step);});};


return takeSequence;}



function skipWhileFactory(iterable, predicate, context, useKeys){
var skipSequence=makeSequence(iterable);
skipSequence.__iterateUncached = function(fn, reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterate(fn, reverse);}

var isSkipping=true;
var iterations=0;
iterable.__iterate(function(v, k, c){
if(!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))){
iterations++;
return fn(v, useKeys?k:iterations - 1, this$0);}});


return iterations;};

skipSequence.__iteratorUncached = function(type, reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterator(type, reverse);}

var iterator=iterable.__iterator(ITERATE_ENTRIES, reverse);
var skipping=true;
var iterations=0;
return new src_Iterator__Iterator(function(){
var step, k, v;
do {
step = iterator.next();
if(step.done){
if(useKeys || type === ITERATE_VALUES){
return step;}else 
if(type === ITERATE_KEYS){
return iteratorValue(type, iterations++, undefined, step);}else 
{
return iteratorValue(type, iterations++, step.value[1], step);}}


var entry=step.value;
k = entry[0];
v = entry[1];
skipping && (skipping = predicate.call(context, v, k, this$0));}while(
skipping);
return type === ITERATE_ENTRIES?step:
iteratorValue(type, k, v, step);});};


return skipSequence;}



function concatFactory(iterable, values){
var isKeyedIterable=isKeyed(iterable);
var iters=[iterable].concat(values).map(function(v){
if(!isIterable(v)){
v = isKeyedIterable?
keyedSeqFromValue(v):
indexedSeqFromValue(Array.isArray(v)?v:[v]);}else 
if(isKeyedIterable){
v = KeyedIterable(v);}

return v;}).
filter(function(v){return v.size !== 0;});

if(iters.length === 0){
return iterable;}


if(iters.length === 1){
var singleton=iters[0];
if(singleton === iterable || 
isKeyedIterable && isKeyed(singleton) || 
isIndexed(iterable) && isIndexed(singleton)){
return singleton;}}



var concatSeq=new ArraySeq(iters);
if(isKeyedIterable){
concatSeq = concatSeq.toKeyedSeq();}else 
if(!isIndexed(iterable)){
concatSeq = concatSeq.toSetSeq();}

concatSeq = concatSeq.flatten(true);
concatSeq.size = iters.reduce(
function(sum, seq){
if(sum !== undefined){
var size=seq.size;
if(size !== undefined){
return sum + size;}}}, 



0);

return concatSeq;}



function flattenFactory(iterable, depth, useKeys){
var flatSequence=makeSequence(iterable);
flatSequence.__iterateUncached = function(fn, reverse){
var iterations=0;
var stopped=false;
function flatDeep(iter, currentDepth){var this$0=this;
iter.__iterate(function(v, k){
if((!depth || currentDepth < depth) && isIterable(v)){
flatDeep(v, currentDepth + 1);}else 
if(fn(v, useKeys?k:iterations++, this$0) === false){
stopped = true;}

return !stopped;}, 
reverse);}

flatDeep(iterable, 0);
return iterations;};

flatSequence.__iteratorUncached = function(type, reverse){
var iterator=iterable.__iterator(type, reverse);
var stack=[];
var iterations=0;
return new src_Iterator__Iterator(function(){
while(iterator) {
var step=iterator.next();
if(step.done !== false){
iterator = stack.pop();
continue;}

var v=step.value;
if(type === ITERATE_ENTRIES){
v = v[1];}

if((!depth || stack.length < depth) && isIterable(v)){
stack.push(iterator);
iterator = v.__iterator(type, reverse);}else 
{
return useKeys?step:iteratorValue(type, iterations++, v, step);}}


return iteratorDone();});};


return flatSequence;}



function flatMapFactory(iterable, mapper, context){
var coerce=iterableClass(iterable);
return iterable.toSeq().map(
function(v, k){return coerce(mapper.call(context, v, k, iterable));}).
flatten(true);}



function interposeFactory(iterable, separator){
var interposedSequence=makeSequence(iterable);
interposedSequence.size = iterable.size && iterable.size * 2 - 1;
interposedSequence.__iterateUncached = function(fn, reverse){var this$0=this;
var iterations=0;
iterable.__iterate(function(v, k)
{return (!iterations || fn(separator, iterations++, this$0) !== false) && 
fn(v, iterations++, this$0) !== false;}, 
reverse);

return iterations;};

interposedSequence.__iteratorUncached = function(type, reverse){
var iterator=iterable.__iterator(ITERATE_VALUES, reverse);
var iterations=0;
var step;
return new src_Iterator__Iterator(function(){
if(!step || iterations % 2){
step = iterator.next();
if(step.done){
return step;}}


return iterations % 2?
iteratorValue(type, iterations++, separator):
iteratorValue(type, iterations++, step.value, step);});};


return interposedSequence;}



function sortFactory(iterable, comparator, mapper){
if(!comparator){
comparator = defaultComparator;}

var isKeyedIterable=isKeyed(iterable);
var index=0;
var entries=iterable.toSeq().map(
function(v, k){return [k, v, index++, mapper?mapper(v, k, iterable):v];}).
toArray();
entries.sort(function(a, b){return comparator(a[3], b[3]) || a[2] - b[2];}).forEach(
isKeyedIterable?
function(v, i){entries[i].length = 2;}:
function(v, i){entries[i] = v[1];});

return isKeyedIterable?KeyedSeq(entries):
isIndexed(iterable)?IndexedSeq(entries):
SetSeq(entries);}



function maxFactory(iterable, comparator, mapper){
if(!comparator){
comparator = defaultComparator;}

if(mapper){
var entry=iterable.toSeq().
map(function(v, k){return [v, mapper(v, k, iterable)];}).
reduce(function(a, b){return maxCompare(comparator, a[1], b[1])?b:a;});
return entry && entry[0];}else 
{
return iterable.reduce(function(a, b){return maxCompare(comparator, a, b)?b:a;});}}



function maxCompare(comparator, a, b){
var comp=comparator(b, a);


return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;}



function zipWithFactory(keyIter, zipper, iters){
var zipSequence=makeSequence(keyIter);
zipSequence.size = new ArraySeq(iters).map(function(i){return i.size;}).min();


zipSequence.__iterate = function(fn, reverse){













var iterator=this.__iterator(ITERATE_VALUES, reverse);
var step;
var iterations=0;
while(!(step = iterator.next()).done) {
if(fn(step.value, iterations++, this) === false){
break;}}


return iterations;};

zipSequence.__iteratorUncached = function(type, reverse){
var iterators=iters.map(function(i)
{return (i = Iterable(i), getIterator(reverse?i.reverse():i));});

var iterations=0;
var isDone=false;
return new src_Iterator__Iterator(function(){
var steps;
if(!isDone){
steps = iterators.map(function(i){return i.next();});
isDone = steps.some(function(s){return s.done;});}

if(isDone){
return iteratorDone();}

return iteratorValue(
type, 
iterations++, 
zipper.apply(null, steps.map(function(s){return s.value;})));});};



return zipSequence;}





function reify(iter, seq){
return isSeq(iter)?seq:iter.constructor(seq);}


function validateEntry(entry){
if(entry !== Object(entry)){
throw new TypeError('Expected [K, V] tuple: ' + entry);}}



function resolveSize(iter){
assertNotInfinite(iter.size);
return ensureSize(iter);}


function iterableClass(iterable){
return isKeyed(iterable)?KeyedIterable:
isIndexed(iterable)?IndexedIterable:
SetIterable;}


function makeSequence(iterable){
return Object.create(
(
isKeyed(iterable)?KeyedSeq:
isIndexed(iterable)?IndexedSeq:
SetSeq).
prototype);}



function cacheResultThrough(){
if(this._iter.cacheResult){
this._iter.cacheResult();
this.size = this._iter.size;
return this;}else 
{
return Seq.prototype.cacheResult.call(this);}}



function defaultComparator(a, b){
return a > b?1:a < b?-1:0;}


function forceIterator(keyPath){
var iter=getIterator(keyPath);
if(!iter){


if(!isArrayLike(keyPath)){
throw new TypeError('Expected iterable or array-like: ' + keyPath);}

iter = getIterator(Iterable(keyPath));}

return iter;}


createClass(src_Map__Map, KeyedCollection);



function src_Map__Map(value){
return value === null || value === undefined?emptyMap():
isMap(value)?value:
emptyMap().withMutations(function(map){
var iter=KeyedIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v, k){return map.set(k, v);});});}



src_Map__Map.prototype.toString = function(){
return this.__toString('Map {', '}');};




src_Map__Map.prototype.get = function(k, notSetValue){
return this._root?
this._root.get(0, undefined, k, notSetValue):
notSetValue;};




src_Map__Map.prototype.set = function(k, v){
return updateMap(this, k, v);};


src_Map__Map.prototype.setIn = function(keyPath, v){
return this.updateIn(keyPath, NOT_SET, function(){return v;});};


src_Map__Map.prototype.remove = function(k){
return updateMap(this, k, NOT_SET);};


src_Map__Map.prototype.deleteIn = function(keyPath){
return this.updateIn(keyPath, function(){return NOT_SET;});};


src_Map__Map.prototype.update = function(k, notSetValue, updater){
return arguments.length === 1?
k(this):
this.updateIn([k], notSetValue, updater);};


src_Map__Map.prototype.updateIn = function(keyPath, notSetValue, updater){
if(!updater){
updater = notSetValue;
notSetValue = undefined;}

var updatedValue=updateInDeepMap(
this, 
forceIterator(keyPath), 
notSetValue, 
updater);

return updatedValue === NOT_SET?undefined:updatedValue;};


src_Map__Map.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = 0;
this._root = null;
this.__hash = undefined;
this.__altered = true;
return this;}

return emptyMap();};




src_Map__Map.prototype.merge = function(){
return mergeIntoMapWith(this, undefined, arguments);};


src_Map__Map.prototype.mergeWith = function(merger){var iters=SLICE$0.call(arguments, 1);
return mergeIntoMapWith(this, merger, iters);};


src_Map__Map.prototype.mergeIn = function(keyPath){var iters=SLICE$0.call(arguments, 1);
return this.updateIn(
keyPath, 
emptyMap(), 
function(m){return typeof m.merge === 'function'?
m.merge.apply(m, iters):
iters[iters.length - 1];});};



src_Map__Map.prototype.mergeDeep = function(){
return mergeIntoMapWith(this, deepMerger(undefined), arguments);};


src_Map__Map.prototype.mergeDeepWith = function(merger){var iters=SLICE$0.call(arguments, 1);
return mergeIntoMapWith(this, deepMerger(merger), iters);};


src_Map__Map.prototype.mergeDeepIn = function(keyPath){var iters=SLICE$0.call(arguments, 1);
return this.updateIn(
keyPath, 
emptyMap(), 
function(m){return typeof m.mergeDeep === 'function'?
m.mergeDeep.apply(m, iters):
iters[iters.length - 1];});};



src_Map__Map.prototype.sort = function(comparator){

return OrderedMap(sortFactory(this, comparator));};


src_Map__Map.prototype.sortBy = function(mapper, comparator){

return OrderedMap(sortFactory(this, comparator, mapper));};




src_Map__Map.prototype.withMutations = function(fn){
var mutable=this.asMutable();
fn(mutable);
return mutable.wasAltered()?mutable.__ensureOwner(this.__ownerID):this;};


src_Map__Map.prototype.asMutable = function(){
return this.__ownerID?this:this.__ensureOwner(new OwnerID());};


src_Map__Map.prototype.asImmutable = function(){
return this.__ensureOwner();};


src_Map__Map.prototype.wasAltered = function(){
return this.__altered;};


src_Map__Map.prototype.__iterator = function(type, reverse){
return new MapIterator(this, type, reverse);};


src_Map__Map.prototype.__iterate = function(fn, reverse){var this$0=this;
var iterations=0;
this._root && this._root.iterate(function(entry){
iterations++;
return fn(entry[1], entry[0], this$0);}, 
reverse);
return iterations;};


src_Map__Map.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID = ownerID;
this.__altered = false;
return this;}

return makeMap(this.size, this._root, ownerID, this.__hash);};



function isMap(maybeMap){
return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);}


src_Map__Map.isMap = isMap;

var IS_MAP_SENTINEL='@@__IMMUTABLE_MAP__@@';

var MapPrototype=src_Map__Map.prototype;
MapPrototype[IS_MAP_SENTINEL] = true;
MapPrototype[DELETE] = MapPrototype.remove;
MapPrototype.removeIn = MapPrototype.deleteIn;






function ArrayMapNode(ownerID, entries){
this.ownerID = ownerID;
this.entries = entries;}


ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue){
var entries=this.entries;
for(var ii=0, len=entries.length; ii < len; ii++) {
if(is(key, entries[ii][0])){
return entries[ii][1];}}


return notSetValue;};


ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter){
var removed=value === NOT_SET;

var entries=this.entries;
var idx=0;
for(var len=entries.length; idx < len; idx++) {
if(is(key, entries[idx][0])){
break;}}


var exists=idx < len;

if(exists?entries[idx][1] === value:removed){
return this;}


SetRef(didAlter);
(removed || !exists) && SetRef(didChangeSize);

if(removed && entries.length === 1){
return;}


if(!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE){
return createNodes(ownerID, entries, key, value);}


var isEditable=ownerID && ownerID === this.ownerID;
var newEntries=isEditable?entries:arrCopy(entries);

if(exists){
if(removed){
idx === len - 1?newEntries.pop():newEntries[idx] = newEntries.pop();}else 
{
newEntries[idx] = [key, value];}}else 

{
newEntries.push([key, value]);}


if(isEditable){
this.entries = newEntries;
return this;}


return new ArrayMapNode(ownerID, newEntries);};





function BitmapIndexedNode(ownerID, bitmap, nodes){
this.ownerID = ownerID;
this.bitmap = bitmap;
this.nodes = nodes;}


BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue){
if(keyHash === undefined){
keyHash = hash(key);}

var bit=1 << ((shift === 0?keyHash:keyHash >>> shift) & MASK);
var bitmap=this.bitmap;
return (bitmap & bit) === 0?notSetValue:
this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT, keyHash, key, notSetValue);};


BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter){
if(keyHash === undefined){
keyHash = hash(key);}

var keyHashFrag=(shift === 0?keyHash:keyHash >>> shift) & MASK;
var bit=1 << keyHashFrag;
var bitmap=this.bitmap;
var exists=(bitmap & bit) !== 0;

if(!exists && value === NOT_SET){
return this;}


var idx=popCount(bitmap & bit - 1);
var nodes=this.nodes;
var node=exists?nodes[idx]:undefined;
var newNode=updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);

if(newNode === node){
return this;}


if(!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE){
return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);}


if(exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])){
return nodes[idx ^ 1];}


if(exists && newNode && nodes.length === 1 && isLeafNode(newNode)){
return newNode;}


var isEditable=ownerID && ownerID === this.ownerID;
var newBitmap=exists?newNode?bitmap:bitmap ^ bit:bitmap | bit;
var newNodes=exists?newNode?
setIn(nodes, idx, newNode, isEditable):
spliceOut(nodes, idx, isEditable):
spliceIn(nodes, idx, newNode, isEditable);

if(isEditable){
this.bitmap = newBitmap;
this.nodes = newNodes;
return this;}


return new BitmapIndexedNode(ownerID, newBitmap, newNodes);};





function HashArrayMapNode(ownerID, count, nodes){
this.ownerID = ownerID;
this.count = count;
this.nodes = nodes;}


HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue){
if(keyHash === undefined){
keyHash = hash(key);}

var idx=(shift === 0?keyHash:keyHash >>> shift) & MASK;
var node=this.nodes[idx];
return node?node.get(shift + SHIFT, keyHash, key, notSetValue):notSetValue;};


HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter){
if(keyHash === undefined){
keyHash = hash(key);}

var idx=(shift === 0?keyHash:keyHash >>> shift) & MASK;
var removed=value === NOT_SET;
var nodes=this.nodes;
var node=nodes[idx];

if(removed && !node){
return this;}


var newNode=updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
if(newNode === node){
return this;}


var newCount=this.count;
if(!node){
newCount++;}else 
if(!newNode){
newCount--;
if(newCount < MIN_HASH_ARRAY_MAP_SIZE){
return packNodes(ownerID, nodes, newCount, idx);}}



var isEditable=ownerID && ownerID === this.ownerID;
var newNodes=setIn(nodes, idx, newNode, isEditable);

if(isEditable){
this.count = newCount;
this.nodes = newNodes;
return this;}


return new HashArrayMapNode(ownerID, newCount, newNodes);};





function HashCollisionNode(ownerID, keyHash, entries){
this.ownerID = ownerID;
this.keyHash = keyHash;
this.entries = entries;}


HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue){
var entries=this.entries;
for(var ii=0, len=entries.length; ii < len; ii++) {
if(is(key, entries[ii][0])){
return entries[ii][1];}}


return notSetValue;};


HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter){
if(keyHash === undefined){
keyHash = hash(key);}


var removed=value === NOT_SET;

if(keyHash !== this.keyHash){
if(removed){
return this;}

SetRef(didAlter);
SetRef(didChangeSize);
return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);}


var entries=this.entries;
var idx=0;
for(var len=entries.length; idx < len; idx++) {
if(is(key, entries[idx][0])){
break;}}


var exists=idx < len;

if(exists?entries[idx][1] === value:removed){
return this;}


SetRef(didAlter);
(removed || !exists) && SetRef(didChangeSize);

if(removed && len === 2){
return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);}


var isEditable=ownerID && ownerID === this.ownerID;
var newEntries=isEditable?entries:arrCopy(entries);

if(exists){
if(removed){
idx === len - 1?newEntries.pop():newEntries[idx] = newEntries.pop();}else 
{
newEntries[idx] = [key, value];}}else 

{
newEntries.push([key, value]);}


if(isEditable){
this.entries = newEntries;
return this;}


return new HashCollisionNode(ownerID, this.keyHash, newEntries);};





function ValueNode(ownerID, keyHash, entry){
this.ownerID = ownerID;
this.keyHash = keyHash;
this.entry = entry;}


ValueNode.prototype.get = function(shift, keyHash, key, notSetValue){
return is(key, this.entry[0])?this.entry[1]:notSetValue;};


ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter){
var removed=value === NOT_SET;
var keyMatch=is(key, this.entry[0]);
if(keyMatch?value === this.entry[1]:removed){
return this;}


SetRef(didAlter);

if(removed){
SetRef(didChangeSize);
return;}


if(keyMatch){
if(ownerID && ownerID === this.ownerID){
this.entry[1] = value;
return this;}

return new ValueNode(ownerID, this.keyHash, [key, value]);}


SetRef(didChangeSize);
return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);};






ArrayMapNode.prototype.iterate = 
HashCollisionNode.prototype.iterate = function(fn, reverse){
var entries=this.entries;
for(var ii=0, maxIndex=entries.length - 1; ii <= maxIndex; ii++) {
if(fn(entries[reverse?maxIndex - ii:ii]) === false){
return false;}}};




BitmapIndexedNode.prototype.iterate = 
HashArrayMapNode.prototype.iterate = function(fn, reverse){
var nodes=this.nodes;
for(var ii=0, maxIndex=nodes.length - 1; ii <= maxIndex; ii++) {
var node=nodes[reverse?maxIndex - ii:ii];
if(node && node.iterate(fn, reverse) === false){
return false;}}};




ValueNode.prototype.iterate = function(fn, reverse){
return fn(this.entry);};


createClass(MapIterator, src_Iterator__Iterator);

function MapIterator(map, type, reverse){
this._type = type;
this._reverse = reverse;
this._stack = map._root && mapIteratorFrame(map._root);}


MapIterator.prototype.next = function(){
var type=this._type;
var stack=this._stack;
while(stack) {
var node=stack.node;
var index=stack.index++;
var maxIndex;
if(node.entry){
if(index === 0){
return mapIteratorValue(type, node.entry);}}else 

if(node.entries){
maxIndex = node.entries.length - 1;
if(index <= maxIndex){
return mapIteratorValue(type, node.entries[this._reverse?maxIndex - index:index]);}}else 

{
maxIndex = node.nodes.length - 1;
if(index <= maxIndex){
var subNode=node.nodes[this._reverse?maxIndex - index:index];
if(subNode){
if(subNode.entry){
return mapIteratorValue(type, subNode.entry);}

stack = this._stack = mapIteratorFrame(subNode, stack);}

continue;}}


stack = this._stack = this._stack.__prev;}

return iteratorDone();};



function mapIteratorValue(type, entry){
return iteratorValue(type, entry[0], entry[1]);}


function mapIteratorFrame(node, prev){
return {
node:node, 
index:0, 
__prev:prev};}



function makeMap(size, root, ownerID, hash){
var map=Object.create(MapPrototype);
map.size = size;
map._root = root;
map.__ownerID = ownerID;
map.__hash = hash;
map.__altered = false;
return map;}


var EMPTY_MAP;
function emptyMap(){
return EMPTY_MAP || (EMPTY_MAP = makeMap(0));}


function updateMap(map, k, v){
var newRoot;
var newSize;
if(!map._root){
if(v === NOT_SET){
return map;}

newSize = 1;
newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);}else 
{
var didChangeSize=MakeRef(CHANGE_LENGTH);
var didAlter=MakeRef(DID_ALTER);
newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
if(!didAlter.value){
return map;}

newSize = map.size + (didChangeSize.value?v === NOT_SET?-1:1:0);}

if(map.__ownerID){
map.size = newSize;
map._root = newRoot;
map.__hash = undefined;
map.__altered = true;
return map;}

return newRoot?makeMap(newSize, newRoot):emptyMap();}


function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter){
if(!node){
if(value === NOT_SET){
return node;}

SetRef(didAlter);
SetRef(didChangeSize);
return new ValueNode(ownerID, keyHash, [key, value]);}

return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);}


function isLeafNode(node){
return node.constructor === ValueNode || node.constructor === HashCollisionNode;}


function mergeIntoNode(node, ownerID, shift, keyHash, entry){
if(node.keyHash === keyHash){
return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);}


var idx1=(shift === 0?node.keyHash:node.keyHash >>> shift) & MASK;
var idx2=(shift === 0?keyHash:keyHash >>> shift) & MASK;

var newNode;
var nodes=idx1 === idx2?
[mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)]:(
newNode = new ValueNode(ownerID, keyHash, entry), idx1 < idx2?[node, newNode]:[newNode, node]);

return new BitmapIndexedNode(ownerID, 1 << idx1 | 1 << idx2, nodes);}


function createNodes(ownerID, entries, key, value){
if(!ownerID){
ownerID = new OwnerID();}

var node=new ValueNode(ownerID, hash(key), [key, value]);
for(var ii=0; ii < entries.length; ii++) {
var entry=entries[ii];
node = node.update(ownerID, 0, undefined, entry[0], entry[1]);}

return node;}


function packNodes(ownerID, nodes, count, excluding){
var bitmap=0;
var packedII=0;
var packedNodes=new Array(count);
for(var ii=0, bit=1, len=nodes.length; ii < len; ii++, bit <<= 1) {
var node=nodes[ii];
if(node !== undefined && ii !== excluding){
bitmap |= bit;
packedNodes[packedII++] = node;}}


return new BitmapIndexedNode(ownerID, bitmap, packedNodes);}


function expandNodes(ownerID, nodes, bitmap, including, node){
var count=0;
var expandedNodes=new Array(SIZE);
for(var ii=0; bitmap !== 0; ii++, bitmap >>>= 1) {
expandedNodes[ii] = bitmap & 1?nodes[count++]:undefined;}

expandedNodes[including] = node;
return new HashArrayMapNode(ownerID, count + 1, expandedNodes);}


function mergeIntoMapWith(map, merger, iterables){
var iters=[];
for(var ii=0; ii < iterables.length; ii++) {
var value=iterables[ii];
var iter=KeyedIterable(value);
if(!isIterable(value)){
iter = iter.map(function(v){return fromJS(v);});}

iters.push(iter);}

return mergeIntoCollectionWith(map, merger, iters);}


function deepMerger(merger){
return function(existing, value, key)
{return existing && existing.mergeDeepWith && isIterable(value)?
existing.mergeDeepWith(merger, value):
merger?merger(existing, value, key):value;};}


function mergeIntoCollectionWith(collection, merger, iters){
iters = iters.filter(function(x){return x.size !== 0;});
if(iters.length === 0){
return collection;}

if(collection.size === 0 && !collection.__ownerID && iters.length === 1){
return collection.constructor(iters[0]);}

return collection.withMutations(function(collection){
var mergeIntoMap=merger?
function(value, key){
collection.update(key, NOT_SET, function(existing)
{return existing === NOT_SET?value:merger(existing, value, key);});}:


function(value, key){
collection.set(key, value);};

for(var ii=0; ii < iters.length; ii++) {
iters[ii].forEach(mergeIntoMap);}});}




function updateInDeepMap(existing, keyPathIter, notSetValue, updater){
var isNotSet=existing === NOT_SET;
var step=keyPathIter.next();
if(step.done){
var existingValue=isNotSet?notSetValue:existing;
var newValue=updater(existingValue);
return newValue === existingValue?existing:newValue;}

invariant(
isNotSet || existing && existing.set, 
'invalid keyPath');

var key=step.value;
var nextExisting=isNotSet?NOT_SET:existing.get(key, NOT_SET);
var nextUpdated=updateInDeepMap(
nextExisting, 
keyPathIter, 
notSetValue, 
updater);

return nextUpdated === nextExisting?existing:
nextUpdated === NOT_SET?existing.remove(key):
(isNotSet?emptyMap():existing).set(key, nextUpdated);}


function popCount(x){
x = x - (x >> 1 & 0x55555555);
x = (x & 0x33333333) + (x >> 2 & 0x33333333);
x = x + (x >> 4) & 0x0f0f0f0f;
x = x + (x >> 8);
x = x + (x >> 16);
return x & 0x7f;}


function setIn(array, idx, val, canEdit){
var newArray=canEdit?array:arrCopy(array);
newArray[idx] = val;
return newArray;}


function spliceIn(array, idx, val, canEdit){
var newLen=array.length + 1;
if(canEdit && idx + 1 === newLen){
array[idx] = val;
return array;}

var newArray=new Array(newLen);
var after=0;
for(var ii=0; ii < newLen; ii++) {
if(ii === idx){
newArray[ii] = val;
after = -1;}else 
{
newArray[ii] = array[ii + after];}}


return newArray;}


function spliceOut(array, idx, canEdit){
var newLen=array.length - 1;
if(canEdit && idx === newLen){
array.pop();
return array;}

var newArray=new Array(newLen);
var after=0;
for(var ii=0; ii < newLen; ii++) {
if(ii === idx){
after = 1;}

newArray[ii] = array[ii + after];}

return newArray;}


var MAX_ARRAY_MAP_SIZE=SIZE / 4;
var MAX_BITMAP_INDEXED_SIZE=SIZE / 2;
var MIN_HASH_ARRAY_MAP_SIZE=SIZE / 4;

createClass(List, IndexedCollection);



function List(value){
var empty=emptyList();
if(value === null || value === undefined){
return empty;}

if(isList(value)){
return value;}

var iter=IndexedIterable(value);
var size=iter.size;
if(size === 0){
return empty;}

assertNotInfinite(size);
if(size > 0 && size < SIZE){
return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));}

return empty.withMutations(function(list){
list.setSize(size);
iter.forEach(function(v, i){return list.set(i, v);});});}



List.of = function(){
return this(arguments);};


List.prototype.toString = function(){
return this.__toString('List [', ']');};




List.prototype.get = function(index, notSetValue){
index = wrapIndex(this, index);
if(index < 0 || index >= this.size){
return notSetValue;}

index += this._origin;
var node=listNodeFor(this, index);
return node && node.array[index & MASK];};




List.prototype.set = function(index, value){
return updateList(this, index, value);};


List.prototype.remove = function(index){
return !this.has(index)?this:
index === 0?this.shift():
index === this.size - 1?this.pop():
this.splice(index, 1);};


List.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = this._origin = this._capacity = 0;
this._level = SHIFT;
this._root = this._tail = null;
this.__hash = undefined;
this.__altered = true;
return this;}

return emptyList();};


List.prototype.push = function(){
var values=arguments;
var oldSize=this.size;
return this.withMutations(function(list){
setListBounds(list, 0, oldSize + values.length);
for(var ii=0; ii < values.length; ii++) {
list.set(oldSize + ii, values[ii]);}});};




List.prototype.pop = function(){
return setListBounds(this, 0, -1);};


List.prototype.unshift = function(){
var values=arguments;
return this.withMutations(function(list){
setListBounds(list, -values.length);
for(var ii=0; ii < values.length; ii++) {
list.set(ii, values[ii]);}});};




List.prototype.shift = function(){
return setListBounds(this, 1);};




List.prototype.merge = function(){
return mergeIntoListWith(this, undefined, arguments);};


List.prototype.mergeWith = function(merger){var iters=SLICE$0.call(arguments, 1);
return mergeIntoListWith(this, merger, iters);};


List.prototype.mergeDeep = function(){
return mergeIntoListWith(this, deepMerger(undefined), arguments);};


List.prototype.mergeDeepWith = function(merger){var iters=SLICE$0.call(arguments, 1);
return mergeIntoListWith(this, deepMerger(merger), iters);};


List.prototype.setSize = function(size){
return setListBounds(this, 0, size);};




List.prototype.slice = function(begin, end){
var size=this.size;
if(wholeSlice(begin, end, size)){
return this;}

return setListBounds(
this, 
resolveBegin(begin, size), 
resolveEnd(end, size));};



List.prototype.__iterator = function(type, reverse){
var index=0;
var values=iterateList(this, reverse);
return new src_Iterator__Iterator(function(){
var value=values();
return value === DONE?
iteratorDone():
iteratorValue(type, index++, value);});};



List.prototype.__iterate = function(fn, reverse){
var index=0;
var values=iterateList(this, reverse);
var value;
while((value = values()) !== DONE) {
if(fn(value, index++, this) === false){
break;}}


return index;};


List.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID = ownerID;
return this;}

return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);};



function isList(maybeList){
return !!(maybeList && maybeList[IS_LIST_SENTINEL]);}


List.isList = isList;

var IS_LIST_SENTINEL='@@__IMMUTABLE_LIST__@@';

var ListPrototype=List.prototype;
ListPrototype[IS_LIST_SENTINEL] = true;
ListPrototype[DELETE] = ListPrototype.remove;
ListPrototype.setIn = MapPrototype.setIn;
ListPrototype.deleteIn = 
ListPrototype.removeIn = MapPrototype.removeIn;
ListPrototype.update = MapPrototype.update;
ListPrototype.updateIn = MapPrototype.updateIn;
ListPrototype.mergeIn = MapPrototype.mergeIn;
ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
ListPrototype.withMutations = MapPrototype.withMutations;
ListPrototype.asMutable = MapPrototype.asMutable;
ListPrototype.asImmutable = MapPrototype.asImmutable;
ListPrototype.wasAltered = MapPrototype.wasAltered;



function VNode(array, ownerID){
this.array = array;
this.ownerID = ownerID;}




VNode.prototype.removeBefore = function(ownerID, level, index){
if(index === level?1 << level:0 || this.array.length === 0){
return this;}

var originIndex=index >>> level & MASK;
if(originIndex >= this.array.length){
return new VNode([], ownerID);}

var removingFirst=originIndex === 0;
var newChild;
if(level > 0){
var oldChild=this.array[originIndex];
newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
if(newChild === oldChild && removingFirst){
return this;}}


if(removingFirst && !newChild){
return this;}

var editable=editableVNode(this, ownerID);
if(!removingFirst){
for(var ii=0; ii < originIndex; ii++) {
editable.array[ii] = undefined;}}


if(newChild){
editable.array[originIndex] = newChild;}

return editable;};


VNode.prototype.removeAfter = function(ownerID, level, index){
if(index === level?1 << level:0 || this.array.length === 0){
return this;}

var sizeIndex=index - 1 >>> level & MASK;
if(sizeIndex >= this.array.length){
return this;}

var removingLast=sizeIndex === this.array.length - 1;
var newChild;
if(level > 0){
var oldChild=this.array[sizeIndex];
newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
if(newChild === oldChild && removingLast){
return this;}}


if(removingLast && !newChild){
return this;}

var editable=editableVNode(this, ownerID);
if(!removingLast){
editable.array.pop();}

if(newChild){
editable.array[sizeIndex] = newChild;}

return editable;};




var DONE={};

function iterateList(list, reverse){
var left=list._origin;
var right=list._capacity;
var tailPos=getTailOffset(right);
var tail=list._tail;

return iterateNodeOrLeaf(list._root, list._level, 0);

function iterateNodeOrLeaf(node, level, offset){
return level === 0?
iterateLeaf(node, offset):
iterateNode(node, level, offset);}


function iterateLeaf(node, offset){
var array=offset === tailPos?tail && tail.array:node && node.array;
var from=offset > left?0:left - offset;
var to=right - offset;
if(to > SIZE){
to = SIZE;}

return function(){
if(from === to){
return DONE;}

var idx=reverse?--to:from++;
return array && array[idx];};}



function iterateNode(node, level, offset){
var values;
var array=node && node.array;
var from=offset > left?0:left - offset >> level;
var to=(right - offset >> level) + 1;
if(to > SIZE){
to = SIZE;}

return function(){
do {
if(values){
var value=values();
if(value !== DONE){
return value;}

values = null;}

if(from === to){
return DONE;}

var idx=reverse?--to:from++;
values = iterateNodeOrLeaf(
array && array[idx], level - SHIFT, offset + (idx << level));}while(

true);};}}




function makeList(origin, capacity, level, root, tail, ownerID, hash){
var list=Object.create(ListPrototype);
list.size = capacity - origin;
list._origin = origin;
list._capacity = capacity;
list._level = level;
list._root = root;
list._tail = tail;
list.__ownerID = ownerID;
list.__hash = hash;
list.__altered = false;
return list;}


var EMPTY_LIST;
function emptyList(){
return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));}


function updateList(list, index, value){
index = wrapIndex(list, index);

if(index >= list.size || index < 0){
return list.withMutations(function(list){
index < 0?
setListBounds(list, index).set(0, value):
setListBounds(list, 0, index + 1).set(index, value);});}



index += list._origin;

var newTail=list._tail;
var newRoot=list._root;
var didAlter=MakeRef(DID_ALTER);
if(index >= getTailOffset(list._capacity)){
newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);}else 
{
newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);}


if(!didAlter.value){
return list;}


if(list.__ownerID){
list._root = newRoot;
list._tail = newTail;
list.__hash = undefined;
list.__altered = true;
return list;}

return makeList(list._origin, list._capacity, list._level, newRoot, newTail);}


function updateVNode(node, ownerID, level, index, value, didAlter){
var idx=index >>> level & MASK;
var nodeHas=node && idx < node.array.length;
if(!nodeHas && value === undefined){
return node;}


var newNode;

if(level > 0){
var lowerNode=node && node.array[idx];
var newLowerNode=updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
if(newLowerNode === lowerNode){
return node;}

newNode = editableVNode(node, ownerID);
newNode.array[idx] = newLowerNode;
return newNode;}


if(nodeHas && node.array[idx] === value){
return node;}


SetRef(didAlter);

newNode = editableVNode(node, ownerID);
if(value === undefined && idx === newNode.array.length - 1){
newNode.array.pop();}else 
{
newNode.array[idx] = value;}

return newNode;}


function editableVNode(node, ownerID){
if(ownerID && node && ownerID === node.ownerID){
return node;}

return new VNode(node?node.array.slice():[], ownerID);}


function listNodeFor(list, rawIndex){
if(rawIndex >= getTailOffset(list._capacity)){
return list._tail;}

if(rawIndex < 1 << list._level + SHIFT){
var node=list._root;
var level=list._level;
while(node && level > 0) {
node = node.array[rawIndex >>> level & MASK];
level -= SHIFT;}

return node;}}



function setListBounds(list, begin, end){
var owner=list.__ownerID || new OwnerID();
var oldOrigin=list._origin;
var oldCapacity=list._capacity;
var newOrigin=oldOrigin + begin;
var newCapacity=end === undefined?oldCapacity:end < 0?oldCapacity + end:oldOrigin + end;
if(newOrigin === oldOrigin && newCapacity === oldCapacity){
return list;}



if(newOrigin >= newCapacity){
return list.clear();}


var newLevel=list._level;
var newRoot=list._root;


var offsetShift=0;
while(newOrigin + offsetShift < 0) {
newRoot = new VNode(newRoot && newRoot.array.length?[undefined, newRoot]:[], owner);
newLevel += SHIFT;
offsetShift += 1 << newLevel;}

if(offsetShift){
newOrigin += offsetShift;
oldOrigin += offsetShift;
newCapacity += offsetShift;
oldCapacity += offsetShift;}


var oldTailOffset=getTailOffset(oldCapacity);
var newTailOffset=getTailOffset(newCapacity);


while(newTailOffset >= 1 << newLevel + SHIFT) {
newRoot = new VNode(newRoot && newRoot.array.length?[newRoot]:[], owner);
newLevel += SHIFT;}



var oldTail=list._tail;
var newTail=newTailOffset < oldTailOffset?
listNodeFor(list, newCapacity - 1):
newTailOffset > oldTailOffset?new VNode([], owner):oldTail;


if(oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length){
newRoot = editableVNode(newRoot, owner);
var node=newRoot;
for(var level=newLevel; level > SHIFT; level -= SHIFT) {
var idx=oldTailOffset >>> level & MASK;
node = node.array[idx] = editableVNode(node.array[idx], owner);}

node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;}



if(newCapacity < oldCapacity){
newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);}



if(newOrigin >= newTailOffset){
newOrigin -= newTailOffset;
newCapacity -= newTailOffset;
newLevel = SHIFT;
newRoot = null;
newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);}else 


if(newOrigin > oldOrigin || newTailOffset < oldTailOffset){
offsetShift = 0;


while(newRoot) {
var beginIndex=newOrigin >>> newLevel & MASK;
if(beginIndex !== newTailOffset >>> newLevel & MASK){
break;}

if(beginIndex){
offsetShift += (1 << newLevel) * beginIndex;}

newLevel -= SHIFT;
newRoot = newRoot.array[beginIndex];}



if(newRoot && newOrigin > oldOrigin){
newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);}

if(newRoot && newTailOffset < oldTailOffset){
newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);}

if(offsetShift){
newOrigin -= offsetShift;
newCapacity -= offsetShift;}}



if(list.__ownerID){
list.size = newCapacity - newOrigin;
list._origin = newOrigin;
list._capacity = newCapacity;
list._level = newLevel;
list._root = newRoot;
list._tail = newTail;
list.__hash = undefined;
list.__altered = true;
return list;}

return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);}


function mergeIntoListWith(list, merger, iterables){
var iters=[];
var maxSize=0;
for(var ii=0; ii < iterables.length; ii++) {
var value=iterables[ii];
var iter=IndexedIterable(value);
if(iter.size > maxSize){
maxSize = iter.size;}

if(!isIterable(value)){
iter = iter.map(function(v){return fromJS(v);});}

iters.push(iter);}

if(maxSize > list.size){
list = list.setSize(maxSize);}

return mergeIntoCollectionWith(list, merger, iters);}


function getTailOffset(size){
return size < SIZE?0:size - 1 >>> SHIFT << SHIFT;}


createClass(OrderedMap, src_Map__Map);



function OrderedMap(value){
return value === null || value === undefined?emptyOrderedMap():
isOrderedMap(value)?value:
emptyOrderedMap().withMutations(function(map){
var iter=KeyedIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v, k){return map.set(k, v);});});}



OrderedMap.of = function(){
return this(arguments);};


OrderedMap.prototype.toString = function(){
return this.__toString('OrderedMap {', '}');};




OrderedMap.prototype.get = function(k, notSetValue){
var index=this._map.get(k);
return index !== undefined?this._list.get(index)[1]:notSetValue;};




OrderedMap.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = 0;
this._map.clear();
this._list.clear();
return this;}

return emptyOrderedMap();};


OrderedMap.prototype.set = function(k, v){
return updateOrderedMap(this, k, v);};


OrderedMap.prototype.remove = function(k){
return updateOrderedMap(this, k, NOT_SET);};


OrderedMap.prototype.wasAltered = function(){
return this._map.wasAltered() || this._list.wasAltered();};


OrderedMap.prototype.__iterate = function(fn, reverse){var this$0=this;
return this._list.__iterate(
function(entry){return entry && fn(entry[1], entry[0], this$0);}, 
reverse);};



OrderedMap.prototype.__iterator = function(type, reverse){
return this._list.fromEntrySeq().__iterator(type, reverse);};


OrderedMap.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

var newMap=this._map.__ensureOwner(ownerID);
var newList=this._list.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID = ownerID;
this._map = newMap;
this._list = newList;
return this;}

return makeOrderedMap(newMap, newList, ownerID, this.__hash);};



function isOrderedMap(maybeOrderedMap){
return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);}


OrderedMap.isOrderedMap = isOrderedMap;

OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;



function makeOrderedMap(map, list, ownerID, hash){
var omap=Object.create(OrderedMap.prototype);
omap.size = map?map.size:0;
omap._map = map;
omap._list = list;
omap.__ownerID = ownerID;
omap.__hash = hash;
return omap;}


var EMPTY_ORDERED_MAP;
function emptyOrderedMap(){
return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));}


function updateOrderedMap(omap, k, v){
var map=omap._map;
var list=omap._list;
var i=map.get(k);
var has=i !== undefined;
var newMap;
var newList;
if(v === NOT_SET){
if(!has){
return omap;}

if(list.size >= SIZE && list.size >= map.size * 2){
newList = list.filter(function(entry, idx){return entry !== undefined && i !== idx;});
newMap = newList.toKeyedSeq().map(function(entry){return entry[0];}).flip().toMap();
if(omap.__ownerID){
newMap.__ownerID = newList.__ownerID = omap.__ownerID;}}else 

{
newMap = map.remove(k);
newList = i === list.size - 1?list.pop():list.set(i, undefined);}}else 

{
if(has){
if(v === list.get(i)[1]){
return omap;}

newMap = map;
newList = list.set(i, [k, v]);}else 
{
newMap = map.set(k, list.size);
newList = list.set(list.size, [k, v]);}}


if(omap.__ownerID){
omap.size = newMap.size;
omap._map = newMap;
omap._list = newList;
omap.__hash = undefined;
return omap;}

return makeOrderedMap(newMap, newList);}


createClass(Stack, IndexedCollection);



function Stack(value){
return value === null || value === undefined?emptyStack():
isStack(value)?value:
emptyStack().unshiftAll(value);}


Stack.of = function(){
return this(arguments);};


Stack.prototype.toString = function(){
return this.__toString('Stack [', ']');};




Stack.prototype.get = function(index, notSetValue){
var head=this._head;
index = wrapIndex(this, index);
while(head && index--) {
head = head.next;}

return head?head.value:notSetValue;};


Stack.prototype.peek = function(){
return this._head && this._head.value;};




Stack.prototype.push = function(){
if(arguments.length === 0){
return this;}

var newSize=this.size + arguments.length;
var head=this._head;
for(var ii=arguments.length - 1; ii >= 0; ii--) {
head = {
value:arguments[ii], 
next:head};}


if(this.__ownerID){
this.size = newSize;
this._head = head;
this.__hash = undefined;
this.__altered = true;
return this;}

return makeStack(newSize, head);};


Stack.prototype.pushAll = function(iter){
iter = IndexedIterable(iter);
if(iter.size === 0){
return this;}

assertNotInfinite(iter.size);
var newSize=this.size;
var head=this._head;
iter.reverse().forEach(function(value){
newSize++;
head = {
value:value, 
next:head};});


if(this.__ownerID){
this.size = newSize;
this._head = head;
this.__hash = undefined;
this.__altered = true;
return this;}

return makeStack(newSize, head);};


Stack.prototype.pop = function(){
return this.slice(1);};


Stack.prototype.unshift = function(){
return this.push.apply(this, arguments);};


Stack.prototype.unshiftAll = function(iter){
return this.pushAll(iter);};


Stack.prototype.shift = function(){
return this.pop.apply(this, arguments);};


Stack.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = 0;
this._head = undefined;
this.__hash = undefined;
this.__altered = true;
return this;}

return emptyStack();};


Stack.prototype.slice = function(begin, end){
if(wholeSlice(begin, end, this.size)){
return this;}

var resolvedBegin=resolveBegin(begin, this.size);
var resolvedEnd=resolveEnd(end, this.size);
if(resolvedEnd !== this.size){

return IndexedCollection.prototype.slice.call(this, begin, end);}

var newSize=this.size - resolvedBegin;
var head=this._head;
while(resolvedBegin--) {
head = head.next;}

if(this.__ownerID){
this.size = newSize;
this._head = head;
this.__hash = undefined;
this.__altered = true;
return this;}

return makeStack(newSize, head);};




Stack.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID = ownerID;
this.__altered = false;
return this;}

return makeStack(this.size, this._head, ownerID, this.__hash);};




Stack.prototype.__iterate = function(fn, reverse){
if(reverse){
return this.reverse().__iterate(fn);}

var iterations=0;
var node=this._head;
while(node) {
if(fn(node.value, iterations++, this) === false){
break;}

node = node.next;}

return iterations;};


Stack.prototype.__iterator = function(type, reverse){
if(reverse){
return this.reverse().__iterator(type);}

var iterations=0;
var node=this._head;
return new src_Iterator__Iterator(function(){
if(node){
var value=node.value;
node = node.next;
return iteratorValue(type, iterations++, value);}

return iteratorDone();});};




function isStack(maybeStack){
return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);}


Stack.isStack = isStack;

var IS_STACK_SENTINEL='@@__IMMUTABLE_STACK__@@';

var StackPrototype=Stack.prototype;
StackPrototype[IS_STACK_SENTINEL] = true;
StackPrototype.withMutations = MapPrototype.withMutations;
StackPrototype.asMutable = MapPrototype.asMutable;
StackPrototype.asImmutable = MapPrototype.asImmutable;
StackPrototype.wasAltered = MapPrototype.wasAltered;


function makeStack(size, head, ownerID, hash){
var map=Object.create(StackPrototype);
map.size = size;
map._head = head;
map.__ownerID = ownerID;
map.__hash = hash;
map.__altered = false;
return map;}


var EMPTY_STACK;
function emptyStack(){
return EMPTY_STACK || (EMPTY_STACK = makeStack(0));}


createClass(src_Set__Set, SetCollection);



function src_Set__Set(value){
return value === null || value === undefined?emptySet():
isSet(value)?value:
emptySet().withMutations(function(set){
var iter=SetIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v){return set.add(v);});});}



src_Set__Set.of = function(){
return this(arguments);};


src_Set__Set.fromKeys = function(value){
return this(KeyedIterable(value).keySeq());};


src_Set__Set.prototype.toString = function(){
return this.__toString('Set {', '}');};




src_Set__Set.prototype.has = function(value){
return this._map.has(value);};




src_Set__Set.prototype.add = function(value){
return updateSet(this, this._map.set(value, true));};


src_Set__Set.prototype.remove = function(value){
return updateSet(this, this._map.remove(value));};


src_Set__Set.prototype.clear = function(){
return updateSet(this, this._map.clear());};




src_Set__Set.prototype.union = function(){var iters=SLICE$0.call(arguments, 0);
iters = iters.filter(function(x){return x.size !== 0;});
if(iters.length === 0){
return this;}

if(this.size === 0 && !this.__ownerID && iters.length === 1){
return this.constructor(iters[0]);}

return this.withMutations(function(set){
for(var ii=0; ii < iters.length; ii++) {
SetIterable(iters[ii]).forEach(function(value){return set.add(value);});}});};




src_Set__Set.prototype.intersect = function(){var iters=SLICE$0.call(arguments, 0);
if(iters.length === 0){
return this;}

iters = iters.map(function(iter){return SetIterable(iter);});
var originalSet=this;
return this.withMutations(function(set){
originalSet.forEach(function(value){
if(!iters.every(function(iter){return iter.includes(value);})){
set.remove(value);}});});};





src_Set__Set.prototype.subtract = function(){var iters=SLICE$0.call(arguments, 0);
if(iters.length === 0){
return this;}

iters = iters.map(function(iter){return SetIterable(iter);});
var originalSet=this;
return this.withMutations(function(set){
originalSet.forEach(function(value){
if(iters.some(function(iter){return iter.includes(value);})){
set.remove(value);}});});};





src_Set__Set.prototype.merge = function(){
return this.union.apply(this, arguments);};


src_Set__Set.prototype.mergeWith = function(merger){var iters=SLICE$0.call(arguments, 1);
return this.union.apply(this, iters);};


src_Set__Set.prototype.sort = function(comparator){

return OrderedSet(sortFactory(this, comparator));};


src_Set__Set.prototype.sortBy = function(mapper, comparator){

return OrderedSet(sortFactory(this, comparator, mapper));};


src_Set__Set.prototype.wasAltered = function(){
return this._map.wasAltered();};


src_Set__Set.prototype.__iterate = function(fn, reverse){var this$0=this;
return this._map.__iterate(function(_, k){return fn(k, k, this$0);}, reverse);};


src_Set__Set.prototype.__iterator = function(type, reverse){
return this._map.map(function(_, k){return k;}).__iterator(type, reverse);};


src_Set__Set.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

var newMap=this._map.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID = ownerID;
this._map = newMap;
return this;}

return this.__make(newMap, ownerID);};



function isSet(maybeSet){
return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);}


src_Set__Set.isSet = isSet;

var IS_SET_SENTINEL='@@__IMMUTABLE_SET__@@';

var SetPrototype=src_Set__Set.prototype;
SetPrototype[IS_SET_SENTINEL] = true;
SetPrototype[DELETE] = SetPrototype.remove;
SetPrototype.mergeDeep = SetPrototype.merge;
SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
SetPrototype.withMutations = MapPrototype.withMutations;
SetPrototype.asMutable = MapPrototype.asMutable;
SetPrototype.asImmutable = MapPrototype.asImmutable;

SetPrototype.__empty = emptySet;
SetPrototype.__make = makeSet;

function updateSet(set, newMap){
if(set.__ownerID){
set.size = newMap.size;
set._map = newMap;
return set;}

return newMap === set._map?set:
newMap.size === 0?set.__empty():
set.__make(newMap);}


function makeSet(map, ownerID){
var set=Object.create(SetPrototype);
set.size = map?map.size:0;
set._map = map;
set.__ownerID = ownerID;
return set;}


var EMPTY_SET;
function emptySet(){
return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));}


createClass(OrderedSet, src_Set__Set);



function OrderedSet(value){
return value === null || value === undefined?emptyOrderedSet():
isOrderedSet(value)?value:
emptyOrderedSet().withMutations(function(set){
var iter=SetIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v){return set.add(v);});});}



OrderedSet.of = function(){
return this(arguments);};


OrderedSet.fromKeys = function(value){
return this(KeyedIterable(value).keySeq());};


OrderedSet.prototype.toString = function(){
return this.__toString('OrderedSet {', '}');};



function isOrderedSet(maybeOrderedSet){
return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);}


OrderedSet.isOrderedSet = isOrderedSet;

var OrderedSetPrototype=OrderedSet.prototype;
OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

OrderedSetPrototype.__empty = emptyOrderedSet;
OrderedSetPrototype.__make = makeOrderedSet;

function makeOrderedSet(map, ownerID){
var set=Object.create(OrderedSetPrototype);
set.size = map?map.size:0;
set._map = map;
set.__ownerID = ownerID;
return set;}


var EMPTY_ORDERED_SET;
function emptyOrderedSet(){
return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));}


createClass(Record, KeyedCollection);

function Record(defaultValues, name){
var hasInitialized;

var RecordType=function Record(values){
if(values instanceof RecordType){
return values;}

if(!(this instanceof RecordType)){
return new RecordType(values);}

if(!hasInitialized){
hasInitialized = true;
var keys=Object.keys(defaultValues);
setProps(RecordTypePrototype, keys);
RecordTypePrototype.size = keys.length;
RecordTypePrototype._name = name;
RecordTypePrototype._keys = keys;
RecordTypePrototype._defaultValues = defaultValues;}

this._map = src_Map__Map(values);};


var RecordTypePrototype=RecordType.prototype = Object.create(RecordPrototype);
RecordTypePrototype.constructor = RecordType;

return RecordType;}


Record.prototype.toString = function(){
return this.__toString(recordName(this) + ' {', '}');};




Record.prototype.has = function(k){
return this._defaultValues.hasOwnProperty(k);};


Record.prototype.get = function(k, notSetValue){
if(!this.has(k)){
return notSetValue;}

var defaultVal=this._defaultValues[k];
return this._map?this._map.get(k, defaultVal):defaultVal;};




Record.prototype.clear = function(){
if(this.__ownerID){
this._map && this._map.clear();
return this;}

var RecordType=this.constructor;
return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));};


Record.prototype.set = function(k, v){
if(!this.has(k)){
throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));}

var newMap=this._map && this._map.set(k, v);
if(this.__ownerID || newMap === this._map){
return this;}

return makeRecord(this, newMap);};


Record.prototype.remove = function(k){
if(!this.has(k)){
return this;}

var newMap=this._map && this._map.remove(k);
if(this.__ownerID || newMap === this._map){
return this;}

return makeRecord(this, newMap);};


Record.prototype.wasAltered = function(){
return this._map.wasAltered();};


Record.prototype.__iterator = function(type, reverse){var this$0=this;
return KeyedIterable(this._defaultValues).map(function(_, k){return this$0.get(k);}).__iterator(type, reverse);};


Record.prototype.__iterate = function(fn, reverse){var this$0=this;
return KeyedIterable(this._defaultValues).map(function(_, k){return this$0.get(k);}).__iterate(fn, reverse);};


Record.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

var newMap=this._map && this._map.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID = ownerID;
this._map = newMap;
return this;}

return makeRecord(this, newMap, ownerID);};



var RecordPrototype=Record.prototype;
RecordPrototype[DELETE] = RecordPrototype.remove;
RecordPrototype.deleteIn = 
RecordPrototype.removeIn = MapPrototype.removeIn;
RecordPrototype.merge = MapPrototype.merge;
RecordPrototype.mergeWith = MapPrototype.mergeWith;
RecordPrototype.mergeIn = MapPrototype.mergeIn;
RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
RecordPrototype.setIn = MapPrototype.setIn;
RecordPrototype.update = MapPrototype.update;
RecordPrototype.updateIn = MapPrototype.updateIn;
RecordPrototype.withMutations = MapPrototype.withMutations;
RecordPrototype.asMutable = MapPrototype.asMutable;
RecordPrototype.asImmutable = MapPrototype.asImmutable;


function makeRecord(likeRecord, map, ownerID){
var record=Object.create(Object.getPrototypeOf(likeRecord));
record._map = map;
record.__ownerID = ownerID;
return record;}


function recordName(record){
return record._name || record.constructor.name || 'Record';}


function setProps(prototype, names){
try{
names.forEach(setProp.bind(undefined, prototype));}
catch(error) {}}




function setProp(prototype, name){
Object.defineProperty(prototype, name, {
get:function(){
return this.get(name);}, 

set:function(value){
invariant(this.__ownerID, 'Cannot set on an immutable record.');
this.set(name, value);}});}




function deepEqual(a, b){
if(a === b){
return true;}


if(
!isIterable(b) || 
a.size !== undefined && b.size !== undefined && a.size !== b.size || 
a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || 
isKeyed(a) !== isKeyed(b) || 
isIndexed(a) !== isIndexed(b) || 
isOrdered(a) !== isOrdered(b))
{
return false;}


if(a.size === 0 && b.size === 0){
return true;}


var notAssociative=!isAssociative(a);

if(isOrdered(a)){
var entries=a.entries();
return b.every(function(v, k){
var entry=entries.next().value;
return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));}) && 
entries.next().done;}


var flipped=false;

if(a.size === undefined){
if(b.size === undefined){
if(typeof a.cacheResult === 'function'){
a.cacheResult();}}else 

{
flipped = true;
var _=a;
a = b;
b = _;}}



var allEqual=true;
var bSize=b.__iterate(function(v, k){
if(notAssociative?!a.has(v):
flipped?!is(v, a.get(k, NOT_SET)):!is(a.get(k, NOT_SET), v)){
allEqual = false;
return false;}});



return allEqual && a.size === bSize;}


createClass(Range, IndexedSeq);

function Range(start, end, step){
if(!(this instanceof Range)){
return new Range(start, end, step);}

invariant(step !== 0, 'Cannot step a Range by 0');
start = start || 0;
if(end === undefined){
end = Infinity;}

step = step === undefined?1:Math.abs(step);
if(end < start){
step = -step;}

this._start = start;
this._end = end;
this._step = step;
this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
if(this.size === 0){
if(EMPTY_RANGE){
return EMPTY_RANGE;}

EMPTY_RANGE = this;}}



Range.prototype.toString = function(){
if(this.size === 0){
return 'Range []';}

return 'Range [ ' + 
this._start + '...' + this._end + (
this._step > 1?' by ' + this._step:'') + 
' ]';};


Range.prototype.get = function(index, notSetValue){
return this.has(index)?
this._start + wrapIndex(this, index) * this._step:
notSetValue;};


Range.prototype.includes = function(searchValue){
var possibleIndex=(searchValue - this._start) / this._step;
return possibleIndex >= 0 && 
possibleIndex < this.size && 
possibleIndex === Math.floor(possibleIndex);};


Range.prototype.slice = function(begin, end){
if(wholeSlice(begin, end, this.size)){
return this;}

begin = resolveBegin(begin, this.size);
end = resolveEnd(end, this.size);
if(end <= begin){
return new Range(0, 0);}

return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);};


Range.prototype.indexOf = function(searchValue){
var offsetValue=searchValue - this._start;
if(offsetValue % this._step === 0){
var index=offsetValue / this._step;
if(index >= 0 && index < this.size){
return index;}}


return -1;};


Range.prototype.lastIndexOf = function(searchValue){
return this.indexOf(searchValue);};


Range.prototype.__iterate = function(fn, reverse){
var maxIndex=this.size - 1;
var step=this._step;
var value=reverse?this._start + maxIndex * step:this._start;
for(var ii=0; ii <= maxIndex; ii++) {
if(fn(value, ii, this) === false){
return ii + 1;}

value += reverse?-step:step;}

return ii;};


Range.prototype.__iterator = function(type, reverse){
var maxIndex=this.size - 1;
var step=this._step;
var value=reverse?this._start + maxIndex * step:this._start;
var ii=0;
return new src_Iterator__Iterator(function(){
var v=value;
value += reverse?-step:step;
return ii > maxIndex?iteratorDone():iteratorValue(type, ii++, v);});};



Range.prototype.equals = function(other){
return other instanceof Range?
this._start === other._start && 
this._end === other._end && 
this._step === other._step:
deepEqual(this, other);};



var EMPTY_RANGE;

createClass(Repeat, IndexedSeq);

function Repeat(value, times){
if(!(this instanceof Repeat)){
return new Repeat(value, times);}

this._value = value;
this.size = times === undefined?Infinity:Math.max(0, times);
if(this.size === 0){
if(EMPTY_REPEAT){
return EMPTY_REPEAT;}

EMPTY_REPEAT = this;}}



Repeat.prototype.toString = function(){
if(this.size === 0){
return 'Repeat []';}

return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';};


Repeat.prototype.get = function(index, notSetValue){
return this.has(index)?this._value:notSetValue;};


Repeat.prototype.includes = function(searchValue){
return is(this._value, searchValue);};


Repeat.prototype.slice = function(begin, end){
var size=this.size;
return wholeSlice(begin, end, size)?this:
new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));};


Repeat.prototype.reverse = function(){
return this;};


Repeat.prototype.indexOf = function(searchValue){
if(is(this._value, searchValue)){
return 0;}

return -1;};


Repeat.prototype.lastIndexOf = function(searchValue){
if(is(this._value, searchValue)){
return this.size;}

return -1;};


Repeat.prototype.__iterate = function(fn, reverse){
for(var ii=0; ii < this.size; ii++) {
if(fn(this._value, ii, this) === false){
return ii + 1;}}


return ii;};


Repeat.prototype.__iterator = function(type, reverse){var this$0=this;
var ii=0;
return new src_Iterator__Iterator(function()
{return ii < this$0.size?iteratorValue(type, ii++, this$0._value):iteratorDone();});};



Repeat.prototype.equals = function(other){
return other instanceof Repeat?
is(this._value, other._value):
deepEqual(other);};



var EMPTY_REPEAT;




function mixin(ctor, methods){
var keyCopier=function(key){ctor.prototype[key] = methods[key];};
Object.keys(methods).forEach(keyCopier);
Object.getOwnPropertySymbols && 
Object.getOwnPropertySymbols(methods).forEach(keyCopier);
return ctor;}


Iterable.Iterator = src_Iterator__Iterator;

mixin(Iterable, {



toArray:function(){
assertNotInfinite(this.size);
var array=new Array(this.size || 0);
this.valueSeq().__iterate(function(v, i){array[i] = v;});
return array;}, 


toIndexedSeq:function(){
return new ToIndexedSequence(this);}, 


toJS:function(){
return this.toSeq().map(
function(value){return value && typeof value.toJS === 'function'?value.toJS():value;}).
__toJS();}, 


toJSON:function(){
return this.toSeq().map(
function(value){return value && typeof value.toJSON === 'function'?value.toJSON():value;}).
__toJS();}, 


toKeyedSeq:function(){
return new ToKeyedSequence(this, true);}, 


toMap:function(){

return src_Map__Map(this.toKeyedSeq());}, 


toObject:function(){
assertNotInfinite(this.size);
var object={};
this.__iterate(function(v, k){object[k] = v;});
return object;}, 


toOrderedMap:function(){

return OrderedMap(this.toKeyedSeq());}, 


toOrderedSet:function(){

return OrderedSet(isKeyed(this)?this.valueSeq():this);}, 


toSet:function(){

return src_Set__Set(isKeyed(this)?this.valueSeq():this);}, 


toSetSeq:function(){
return new ToSetSequence(this);}, 


toSeq:function(){
return isIndexed(this)?this.toIndexedSeq():
isKeyed(this)?this.toKeyedSeq():
this.toSetSeq();}, 


toStack:function(){

return Stack(isKeyed(this)?this.valueSeq():this);}, 


toList:function(){

return List(isKeyed(this)?this.valueSeq():this);}, 





toString:function(){
return '[Iterable]';}, 


__toString:function(head, tail){
if(this.size === 0){
return head + tail;}

return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;}, 





concat:function(){var values=SLICE$0.call(arguments, 0);
return reify(this, concatFactory(this, values));}, 


contains:function(searchValue){
return this.includes(searchValue);}, 


includes:function(searchValue){
return this.some(function(value){return is(value, searchValue);});}, 


entries:function(){
return this.__iterator(ITERATE_ENTRIES);}, 


every:function(predicate, context){
assertNotInfinite(this.size);
var returnValue=true;
this.__iterate(function(v, k, c){
if(!predicate.call(context, v, k, c)){
returnValue = false;
return false;}});


return returnValue;}, 


filter:function(predicate, context){
return reify(this, filterFactory(this, predicate, context, true));}, 


find:function(predicate, context, notSetValue){
var entry=this.findEntry(predicate, context);
return entry?entry[1]:notSetValue;}, 


findEntry:function(predicate, context){
var found;
this.__iterate(function(v, k, c){
if(predicate.call(context, v, k, c)){
found = [k, v];
return false;}});


return found;}, 


findLastEntry:function(predicate, context){
return this.toSeq().reverse().findEntry(predicate, context);}, 


forEach:function(sideEffect, context){
assertNotInfinite(this.size);
return this.__iterate(context?sideEffect.bind(context):sideEffect);}, 


join:function(separator){
assertNotInfinite(this.size);
separator = separator !== undefined?'' + separator:',';
var joined='';
var isFirst=true;
this.__iterate(function(v){
isFirst?isFirst = false:joined += separator;
joined += v !== null && v !== undefined?v.toString():'';});

return joined;}, 


keys:function(){
return this.__iterator(ITERATE_KEYS);}, 


map:function(mapper, context){
return reify(this, mapFactory(this, mapper, context));}, 


reduce:function(reducer, initialReduction, context){
assertNotInfinite(this.size);
var reduction;
var useFirst;
if(arguments.length < 2){
useFirst = true;}else 
{
reduction = initialReduction;}

this.__iterate(function(v, k, c){
if(useFirst){
useFirst = false;
reduction = v;}else 
{
reduction = reducer.call(context, reduction, v, k, c);}});


return reduction;}, 


reduceRight:function(reducer, initialReduction, context){
var reversed=this.toKeyedSeq().reverse();
return reversed.reduce.apply(reversed, arguments);}, 


reverse:function(){
return reify(this, reverseFactory(this, true));}, 


slice:function(begin, end){
return reify(this, sliceFactory(this, begin, end, true));}, 


some:function(predicate, context){
return !this.every(not(predicate), context);}, 


sort:function(comparator){
return reify(this, sortFactory(this, comparator));}, 


values:function(){
return this.__iterator(ITERATE_VALUES);}, 





butLast:function(){
return this.slice(0, -1);}, 


isEmpty:function(){
return this.size !== undefined?this.size === 0:!this.some(function(){return true;});}, 


count:function(predicate, context){
return ensureSize(
predicate?this.toSeq().filter(predicate, context):this);}, 



countBy:function(grouper, context){
return countByFactory(this, grouper, context);}, 


equals:function(other){
return deepEqual(this, other);}, 


entrySeq:function(){
var iterable=this;
if(iterable._cache){

return new ArraySeq(iterable._cache);}

var entriesSequence=iterable.toSeq().map(entryMapper).toIndexedSeq();
entriesSequence.fromEntrySeq = function(){return iterable.toSeq();};
return entriesSequence;}, 


filterNot:function(predicate, context){
return this.filter(not(predicate), context);}, 


findLast:function(predicate, context, notSetValue){
return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);}, 


first:function(){
return this.find(returnTrue);}, 


flatMap:function(mapper, context){
return reify(this, flatMapFactory(this, mapper, context));}, 


flatten:function(depth){
return reify(this, flattenFactory(this, depth, true));}, 


fromEntrySeq:function(){
return new FromEntriesSequence(this);}, 


get:function(searchKey, notSetValue){
return this.find(function(_, key){return is(key, searchKey);}, undefined, notSetValue);}, 


getIn:function(searchKeyPath, notSetValue){
var nested=this;


var iter=forceIterator(searchKeyPath);
var step;
while(!(step = iter.next()).done) {
var key=step.value;
nested = nested && nested.get?nested.get(key, NOT_SET):NOT_SET;
if(nested === NOT_SET){
return notSetValue;}}


return nested;}, 


groupBy:function(grouper, context){
return groupByFactory(this, grouper, context);}, 


has:function(searchKey){
return this.get(searchKey, NOT_SET) !== NOT_SET;}, 


hasIn:function(searchKeyPath){
return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;}, 


isSubset:function(iter){
iter = typeof iter.includes === 'function'?iter:Iterable(iter);
return this.every(function(value){return iter.includes(value);});}, 


isSuperset:function(iter){
iter = typeof iter.isSubset === 'function'?iter:Iterable(iter);
return iter.isSubset(this);}, 


keySeq:function(){
return this.toSeq().map(keyMapper).toIndexedSeq();}, 


last:function(){
return this.toSeq().reverse().first();}, 


max:function(comparator){
return maxFactory(this, comparator);}, 


maxBy:function(mapper, comparator){
return maxFactory(this, comparator, mapper);}, 


min:function(comparator){
return maxFactory(this, comparator?neg(comparator):defaultNegComparator);}, 


minBy:function(mapper, comparator){
return maxFactory(this, comparator?neg(comparator):defaultNegComparator, mapper);}, 


rest:function(){
return this.slice(1);}, 


skip:function(amount){
return this.slice(Math.max(0, amount));}, 


skipLast:function(amount){
return reify(this, this.toSeq().reverse().skip(amount).reverse());}, 


skipWhile:function(predicate, context){
return reify(this, skipWhileFactory(this, predicate, context, true));}, 


skipUntil:function(predicate, context){
return this.skipWhile(not(predicate), context);}, 


sortBy:function(mapper, comparator){
return reify(this, sortFactory(this, comparator, mapper));}, 


take:function(amount){
return this.slice(0, Math.max(0, amount));}, 


takeLast:function(amount){
return reify(this, this.toSeq().reverse().take(amount).reverse());}, 


takeWhile:function(predicate, context){
return reify(this, takeWhileFactory(this, predicate, context));}, 


takeUntil:function(predicate, context){
return this.takeWhile(not(predicate), context);}, 


valueSeq:function(){
return this.toIndexedSeq();}, 





hashCode:function(){
return this.__hash || (this.__hash = hashIterable(this));}});















var IterablePrototype=Iterable.prototype;
IterablePrototype[IS_ITERABLE_SENTINEL] = true;
IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
IterablePrototype.__toJS = IterablePrototype.toArray;
IterablePrototype.__toStringMapper = quoteString;
IterablePrototype.inspect = 
IterablePrototype.toSource = function(){return this.toString();};
IterablePrototype.chain = IterablePrototype.flatMap;


(function(){
try{
Object.defineProperty(IterablePrototype, 'length', {
get:function(){
if(!Iterable.noLengthWarning){
var stack;
try{
throw new Error();}
catch(error) {
stack = error.stack;}

if(stack.indexOf('_wrapObject') === -1){
console && console.warn && console.warn(
'iterable.length has been deprecated, ' + 
'use iterable.size or iterable.count(). ' + 
'This warning will become a silent error in a future version. ' + 
stack);

return this.size;}}}});}




catch(e) {}})();




mixin(KeyedIterable, {



flip:function(){
return reify(this, flipFactory(this));}, 


findKey:function(predicate, context){
var entry=this.findEntry(predicate, context);
return entry && entry[0];}, 


findLastKey:function(predicate, context){
return this.toSeq().reverse().findKey(predicate, context);}, 


keyOf:function(searchValue){
return this.findKey(function(value){return is(value, searchValue);});}, 


lastKeyOf:function(searchValue){
return this.findLastKey(function(value){return is(value, searchValue);});}, 


mapEntries:function(mapper, context){var this$0=this;
var iterations=0;
return reify(this, 
this.toSeq().map(
function(v, k){return mapper.call(context, [k, v], iterations++, this$0);}).
fromEntrySeq());}, 



mapKeys:function(mapper, context){var this$0=this;
return reify(this, 
this.toSeq().flip().map(
function(k, v){return mapper.call(context, k, v, this$0);}).
flip());}});





var KeyedIterablePrototype=KeyedIterable.prototype;
KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
KeyedIterablePrototype.__toStringMapper = function(v, k){return JSON.stringify(k) + ': ' + quoteString(v);};



mixin(IndexedIterable, {



toKeyedSeq:function(){
return new ToKeyedSequence(this, false);}, 





filter:function(predicate, context){
return reify(this, filterFactory(this, predicate, context, false));}, 


findIndex:function(predicate, context){
var entry=this.findEntry(predicate, context);
return entry?entry[0]:-1;}, 


indexOf:function(searchValue){
var key=this.toKeyedSeq().keyOf(searchValue);
return key === undefined?-1:key;}, 


lastIndexOf:function(searchValue){
return this.toSeq().reverse().indexOf(searchValue);}, 


reverse:function(){
return reify(this, reverseFactory(this, false));}, 


slice:function(begin, end){
return reify(this, sliceFactory(this, begin, end, false));}, 


splice:function(index, removeNum){
var numArgs=arguments.length;
removeNum = Math.max(removeNum | 0, 0);
if(numArgs === 0 || numArgs === 2 && !removeNum){
return this;}

index = resolveBegin(index, this.size);
var spliced=this.slice(0, index);
return reify(
this, 
numArgs === 1?
spliced:
spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));}, 






findLastIndex:function(predicate, context){
var key=this.toKeyedSeq().findLastKey(predicate, context);
return key === undefined?-1:key;}, 


first:function(){
return this.get(0);}, 


flatten:function(depth){
return reify(this, flattenFactory(this, depth, false));}, 


get:function(index, notSetValue){
index = wrapIndex(this, index);
return index < 0 || (this.size === Infinity || 
this.size !== undefined && index > this.size)?
notSetValue:
this.find(function(_, key){return key === index;}, undefined, notSetValue);}, 


has:function(index){
index = wrapIndex(this, index);
return index >= 0 && (this.size !== undefined?
this.size === Infinity || index < this.size:
this.indexOf(index) !== -1);}, 



interpose:function(separator){
return reify(this, interposeFactory(this, separator));}, 


interleave:function(){
var iterables=[this].concat(arrCopy(arguments));
var zipped=zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
var interleaved=zipped.flatten(true);
if(zipped.size){
interleaved.size = zipped.size * iterables.length;}

return reify(this, interleaved);}, 


last:function(){
return this.get(-1);}, 


skipWhile:function(predicate, context){
return reify(this, skipWhileFactory(this, predicate, context, false));}, 


zip:function(){
var iterables=[this].concat(arrCopy(arguments));
return reify(this, zipWithFactory(this, defaultZipper, iterables));}, 


zipWith:function(zipper){
var iterables=arrCopy(arguments);
iterables[0] = this;
return reify(this, zipWithFactory(this, zipper, iterables));}});




IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;



mixin(SetIterable, {



get:function(value, notSetValue){
return this.has(value)?value:notSetValue;}, 


includes:function(value){
return this.has(value);}, 





keySeq:function(){
return this.valueSeq();}});




SetIterable.prototype.has = IterablePrototype.includes;




mixin(KeyedSeq, KeyedIterable.prototype);
mixin(IndexedSeq, IndexedIterable.prototype);
mixin(SetSeq, SetIterable.prototype);

mixin(KeyedCollection, KeyedIterable.prototype);
mixin(IndexedCollection, IndexedIterable.prototype);
mixin(SetCollection, SetIterable.prototype);




function keyMapper(v, k){
return k;}


function entryMapper(v, k){
return [k, v];}


function not(predicate){
return function(){
return !predicate.apply(this, arguments);};}



function neg(predicate){
return function(){
return -predicate.apply(this, arguments);};}



function quoteString(value){
return typeof value === 'string'?JSON.stringify(value):value;}


function defaultZipper(){
return arrCopy(arguments);}


function defaultNegComparator(a, b){
return a < b?1:a > b?-1:0;}


function hashIterable(iterable){
if(iterable.size === Infinity){
return 0;}

var ordered=isOrdered(iterable);
var keyed=isKeyed(iterable);
var h=ordered?1:0;
var size=iterable.__iterate(
keyed?
ordered?
function(v, k){h = 31 * h + hashMerge(hash(v), hash(k)) | 0;}:
function(v, k){h = h + hashMerge(hash(v), hash(k)) | 0;}:
ordered?
function(v){h = 31 * h + hash(v) | 0;}:
function(v){h = h + hash(v) | 0;});

return murmurHashOfSize(size, h);}


function murmurHashOfSize(size, h){
h = src_Math__imul(h, 0xCC9E2D51);
h = src_Math__imul(h << 15 | h >>> -15, 0x1B873593);
h = src_Math__imul(h << 13 | h >>> -13, 5);
h = (h + 0xE6546B64 | 0) ^ size;
h = src_Math__imul(h ^ h >>> 16, 0x85EBCA6B);
h = src_Math__imul(h ^ h >>> 13, 0xC2B2AE35);
h = smi(h ^ h >>> 16);
return h;}


function hashMerge(a, b){
return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0;}


var Immutable={

Iterable:Iterable, 

Seq:Seq, 
Collection:Collection, 
Map:src_Map__Map, 
OrderedMap:OrderedMap, 
List:List, 
Stack:Stack, 
Set:src_Set__Set, 
OrderedSet:OrderedSet, 

Record:Record, 
Range:Range, 
Repeat:Repeat, 

is:is, 
fromJS:fromJS};



return Immutable;});
});
__d('NavigatorNavigationBar',["React","NavigatorNavigationBarStyles","StaticContainer.react","StyleSheet","View","immutable/dist/immutable.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var React=require('React');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');var _require=

require('immutable/dist/immutable.js');var Map=_require.Map;

var COMPONENT_NAMES=['Title', 'LeftButton', 'RightButton'];

var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};


var NavigatorNavigationBar=React.createClass({displayName:'NavigatorNavigationBar', 

propTypes:{
navigator:React.PropTypes.object, 
routeMapper:React.PropTypes.shape({
Title:React.PropTypes.func.isRequired, 
LeftButton:React.PropTypes.func.isRequired, 
RightButton:React.PropTypes.func.isRequired}), 

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object), 
presentedIndex:React.PropTypes.number}), 

style:View.propTypes.style}, 


statics:{
Styles:NavigatorNavigationBarStyles}, 


componentWillMount:function(){var _this=this;
this._components = {};
this._descriptors = {};

COMPONENT_NAMES.forEach(function(componentName){
_this._components[componentName] = new Map();
_this._descriptors[componentName] = new Map();});}, 



_getReusableProps:function(
componentName, 
index)
{
if(!this._reusableProps){
this._reusableProps = {};}

var propStack=this._reusableProps[componentName];
if(!propStack){
propStack = this._reusableProps[componentName] = [];}

var props=propStack[index];
if(!props){
props = propStack[index] = {style:{}};}

return props;}, 


_updateIndexProgress:function(
progress, 
index, 
fromIndex, 
toIndex)
{
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = NavigatorNavigationBarStyles.Interpolators.CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToCenter;}else 
{
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToLeft;}


COMPONENT_NAMES.forEach(function(componentName){
var component=this._components[componentName].get(this.props.navState.routeStack[index]);
var props=this._getReusableProps(componentName, index);
if(component && interpolate[componentName](props.style, amount)){
component.setNativeProps(props);}}, 

this);}, 


updateProgress:function(
progress, 
fromIndex, 
toIndex)
{
var max=Math.max(fromIndex, toIndex);
var min=Math.min(fromIndex, toIndex);
for(var index=min; index <= max; index++) {
this._updateIndexProgress(progress, index, fromIndex, toIndex);}}, 



render:function(){
var navState=this.props.navState;
var components=COMPONENT_NAMES.map(function(componentName){
return navState.routeStack.map(
this._getComponent.bind(this, componentName));}, 

this);

return (
React.createElement(View, {style:[styles.navBarContainer, this.props.style]}, 
components));}, 




_getComponent:function(
componentName, 
route, 
index)
{var _this2=this;
if(this._descriptors[componentName].includes(route)){
return this._descriptors[componentName].get(route);}


var rendered=null;

var content=this.props.routeMapper[componentName](
this.props.navState.routeStack[index], 
this.props.navigator, 
index, 
this.props.navState);

if(!content){
return null;}


var initialStage=index === navStatePresentedIndex(this.props.navState)?
NavigatorNavigationBarStyles.Stages.Center:NavigatorNavigationBarStyles.Stages.Left;
rendered = 
React.createElement(View, {
ref:function(ref){
_this2._components[componentName] = _this2._components[componentName].set(route, ref);}, 

style:initialStage[componentName]}, 
content);



this._descriptors[componentName] = this._descriptors[componentName].set(route, rendered);
return rendered;}});





var styles=StyleSheet.create({
navBarContainer:{
position:'absolute', 
height:NavigatorNavigationBarStyles.General.TotalNavHeight, 
top:0, 
left:0, 
right:0, 
backgroundColor:'transparent'}});



module.exports = NavigatorNavigationBar;
});
__d('NavigatorSceneConfigs',["Dimensions","PixelRatio","buildStyleInterpolator"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};



























var Dimensions=require('Dimensions');
var PixelRatio=require('PixelRatio');

var buildStyleInterpolator=require('buildStyleInterpolator');

var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;

var FadeToTheLeft={


transformTranslate:{
from:{x:0, y:0, z:0}, 
to:{x:-Math.round(Dimensions.get('window').width * 0.3), y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 












transformScale:{
from:{x:1, y:1, z:1}, 
to:{x:0.95, y:0.95, z:1}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true}, 

opacity:{
from:1, 
to:0.3, 
min:0, 
max:1, 
type:'linear', 
extrapolate:false, 
round:100}, 

translateX:{
from:0, 
to:-Math.round(Dimensions.get('window').width * 0.3), 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

scaleX:{
from:1, 
to:0.95, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true}, 

scaleY:{
from:1, 
to:0.95, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true}};



var FadeToTheRight=_extends({}, 
FadeToTheLeft, {
transformTranslate:{
from:{x:0, y:0, z:0}, 
to:{x:Math.round(SCREEN_WIDTH * 0.3), y:0, z:0}}, 

translateX:{
from:0, 
to:Math.round(SCREEN_WIDTH * 0.3)}});



var FadeIn={
opacity:{
from:0, 
to:1, 
min:0.5, 
max:1, 
type:'linear', 
extrapolate:false, 
round:100}};



var FadeOut={
opacity:{
from:1, 
to:0, 
min:0, 
max:0.5, 
type:'linear', 
extrapolate:false, 
round:100}};



var ToTheLeft={
transformTranslate:{
from:{x:0, y:0, z:0}, 
to:{x:-Dimensions.get('window').width, y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

opacity:{
value:1.0, 
type:'constant'}, 


translateX:{
from:0, 
to:-Dimensions.get('window').width, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}};



var ToTheUp={
transformTranslate:{
from:{x:0, y:0, z:0}, 
to:{x:0, y:-Dimensions.get('window').height, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

opacity:{
value:1.0, 
type:'constant'}, 

translateY:{
from:0, 
to:-Dimensions.get('window').height, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}};



var ToTheDown={
transformTranslate:{
from:{x:0, y:0, z:0}, 
to:{x:0, y:Dimensions.get('window').height, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

opacity:{
value:1.0, 
type:'constant'}, 

translateY:{
from:0, 
to:Dimensions.get('window').height, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}};



var FromTheRight={
opacity:{
value:1.0, 
type:'constant'}, 


transformTranslate:{
from:{x:Dimensions.get('window').width, y:0, z:0}, 
to:{x:0, y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 


translateX:{
from:Dimensions.get('window').width, 
to:0, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 


scaleX:{
value:1, 
type:'constant'}, 

scaleY:{
value:1, 
type:'constant'}};



var FromTheLeft=_extends({}, 
FromTheRight, {
transformTranslate:{
from:{x:-SCREEN_WIDTH, y:0, z:0}, 
to:{x:0, y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

translateX:{
from:-SCREEN_WIDTH, 
to:0, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}});



var FromTheDown=_extends({}, 
FromTheRight, {
transformTranslate:{
from:{y:SCREEN_HEIGHT, x:0, z:0}, 
to:{x:0, y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

translateY:{
from:SCREEN_HEIGHT, 
to:0, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}});



var FromTheTop=_extends({}, 
FromTheRight, {
transformTranslate:{
from:{y:-SCREEN_HEIGHT, x:0, z:0}, 
to:{x:0, y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

translateY:{
from:-SCREEN_HEIGHT, 
to:0, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}});



var ToTheBack={


transformTranslate:{
from:{x:0, y:0, z:0}, 
to:{x:0, y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

transformScale:{
from:{x:1, y:1, z:1}, 
to:{x:0.95, y:0.95, z:1}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true}, 

opacity:{
from:1, 
to:0.3, 
min:0, 
max:1, 
type:'linear', 
extrapolate:false, 
round:100}, 

scaleX:{
from:1, 
to:0.95, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true}, 

scaleY:{
from:1, 
to:0.95, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true}};



var FromTheFront={
opacity:{
value:1.0, 
type:'constant'}, 


transformTranslate:{
from:{x:0, y:Dimensions.get('window').height, z:0}, 
to:{x:0, y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

translateY:{
from:Dimensions.get('window').height, 
to:0, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

scaleX:{
value:1, 
type:'constant'}, 

scaleY:{
value:1, 
type:'constant'}};



var ToTheBackAndroid={
opacity:{
value:1, 
type:'constant'}};



var FromTheFrontAndroid={
opacity:{
from:0, 
to:1, 
min:0.5, 
max:1, 
type:'linear', 
extrapolate:false, 
round:100}, 

transformTranslate:{
from:{x:0, y:100, z:0}, 
to:{x:0, y:0, z:0}, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}, 

translateY:{
from:100, 
to:0, 
min:0, 
max:1, 
type:'linear', 
extrapolate:true, 
round:PixelRatio.get()}};



var BaseOverswipeConfig={
frictionConstant:1, 
frictionByDistance:1.5};


var BaseLeftToRightGesture={


isDetachable:false, 


gestureDetectMovement:2, 


notMoving:0.3, 


directionRatio:0.66, 


snapVelocity:2, 


edgeHitWidth:30, 


stillCompletionRatio:3 / 5, 

fullDistance:SCREEN_WIDTH, 

direction:'left-to-right'};



var BaseRightToLeftGesture=_extends({}, 
BaseLeftToRightGesture, {
direction:'right-to-left'});


var BaseDownUpGesture=_extends({}, 
BaseLeftToRightGesture, {
fullDistance:SCREEN_HEIGHT, 
direction:'down-to-up'});


var BaseUpDownGesture=_extends({}, 
BaseLeftToRightGesture, {
fullDistance:SCREEN_HEIGHT, 
direction:'up-to-down'});


var BaseConfig={

gestures:{
pop:BaseLeftToRightGesture}, 



springFriction:26, 
springTension:200, 


defaultTransitionVelocity:1.5, 


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight), 
out:buildStyleInterpolator(FadeToTheLeft)}};



var NavigatorSceneConfigs={
PushFromRight:_extends({}, 
BaseConfig), 


FloatFromRight:_extends({}, 
BaseConfig), 


FloatFromLeft:_extends({}, 
BaseConfig, {
animationInterpolators:{
into:buildStyleInterpolator(FromTheLeft), 
out:buildStyleInterpolator(FadeToTheRight)}}), 


FloatFromBottom:_extends({}, 
BaseConfig, {
gestures:{
pop:_extends({}, 
BaseLeftToRightGesture, {
edgeHitWidth:150, 
direction:'top-to-bottom', 
fullDistance:SCREEN_HEIGHT})}, 


animationInterpolators:{
into:buildStyleInterpolator(FromTheFront), 
out:buildStyleInterpolator(ToTheBack)}}), 


FloatFromBottomAndroid:_extends({}, 
BaseConfig, {
gestures:null, 
defaultTransitionVelocity:3, 
springFriction:20, 
animationInterpolators:{
into:buildStyleInterpolator(FromTheFrontAndroid), 
out:buildStyleInterpolator(ToTheBackAndroid)}}), 


FadeAndroid:_extends({}, 
BaseConfig, {
gestures:null, 
animationInterpolators:{
into:buildStyleInterpolator(FadeIn), 
out:buildStyleInterpolator(FadeOut)}}), 


HorizontalSwipeJump:_extends({}, 
BaseConfig, {
gestures:{
jumpBack:_extends({}, 
BaseLeftToRightGesture, {
overswipe:BaseOverswipeConfig, 
edgeHitWidth:null, 
isDetachable:true}), 

jumpForward:_extends({}, 
BaseRightToLeftGesture, {
overswipe:BaseOverswipeConfig, 
edgeHitWidth:null, 
isDetachable:true})}, 


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight), 
out:buildStyleInterpolator(ToTheLeft)}}), 


VerticalUpSwipeJump:_extends({}, 
BaseConfig, {
gestures:{
jumpBack:_extends({}, 
BaseDownUpGesture, {
overswipe:BaseOverswipeConfig, 
edgeHitWidth:null, 
isDetachable:true}), 

jumpForward:_extends({}, 
BaseDownUpGesture, {
overswipe:BaseOverswipeConfig, 
edgeHitWidth:null, 
isDetachable:true})}, 


animationInterpolators:{
into:buildStyleInterpolator(FromTheDown), 
out:buildStyleInterpolator(ToTheUp)}}), 


VerticalDownSwipeJump:_extends({}, 
BaseConfig, {
gestures:{
jumpBack:_extends({}, 
BaseUpDownGesture, {
overswipe:BaseOverswipeConfig, 
edgeHitWidth:null, 
isDetachable:true}), 

jumpForward:_extends({}, 
BaseUpDownGesture, {
overswipe:BaseOverswipeConfig, 
edgeHitWidth:null, 
isDetachable:true})}, 


animationInterpolators:{
into:buildStyleInterpolator(FromTheTop), 
out:buildStyleInterpolator(ToTheDown)}})};




module.exports = NavigatorSceneConfigs;
});
__d('PanResponder',["TouchHistoryMath"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var TouchHistoryMath=require("TouchHistoryMath");

var currentCentroidXOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
var currentCentroidYOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
var previousCentroidXOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
var previousCentroidYOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
var currentCentroidX=TouchHistoryMath.currentCentroidX;
var currentCentroidY=TouchHistoryMath.currentCentroidY;















































































var PanResponder={
































































_initializeGestureState:function(gestureState){
gestureState.moveX = 0;
gestureState.moveY = 0;
gestureState.x0 = 0;
gestureState.y0 = 0;
gestureState.dx = 0;
gestureState.dy = 0;
gestureState.vx = 0;
gestureState.vy = 0;
gestureState.numberActiveTouches = 0;

gestureState._accountsForMovesUpTo = 0;}, 


























_updateGestureStateOnMove:function(gestureState, touchHistory){
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
gestureState.moveX = currentCentroidXOfTouchesChangedAfter(
touchHistory, 
gestureState._accountsForMovesUpTo);

gestureState.moveY = currentCentroidYOfTouchesChangedAfter(
touchHistory, 
gestureState._accountsForMovesUpTo);

var movedAfter=gestureState._accountsForMovesUpTo;
var prevX=previousCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
var x=currentCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
var prevY=previousCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
var y=currentCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
var nextDX=gestureState.dx + (x - prevX);
var nextDY=gestureState.dy + (y - prevY);


var dt=
touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;
gestureState.vx = (nextDX - gestureState.dx) / dt;
gestureState.vy = (nextDY - gestureState.dy) / dt;

gestureState.dx = nextDX;
gestureState.dy = nextDY;
gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;}, 


































create:function(config){
var gestureState={

stateID:Math.random()};

PanResponder._initializeGestureState(gestureState);
var panHandlers={
onStartShouldSetResponder:function(e){
return config.onStartShouldSetPanResponder === undefined?false:
config.onStartShouldSetPanResponder(e, gestureState);}, 

onMoveShouldSetResponder:function(e){
return config.onMoveShouldSetPanResponder === undefined?false:
config.onMoveShouldSetPanResponder(e, gestureState);}, 

onStartShouldSetResponderCapture:function(e){


if(e.nativeEvent.touches.length === 1){
PanResponder._initializeGestureState(gestureState);}

gestureState.numberActiveTouches = e.touchHistory.numberActiveTouches;
return config.onStartShouldSetPanResponderCapture !== undefined?
config.onStartShouldSetPanResponderCapture(e, gestureState):false;}, 


onMoveShouldSetResponderCapture:function(e){
var touchHistory=e.touchHistory;



if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return false;}

PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
return config.onMoveShouldSetPanResponderCapture?
config.onMoveShouldSetPanResponderCapture(e, gestureState):false;}, 


onResponderGrant:function(e){
gestureState.x0 = currentCentroidX(e.touchHistory);
gestureState.y0 = currentCentroidY(e.touchHistory);
gestureState.dx = 0;
gestureState.dy = 0;
config.onPanResponderGrant && config.onPanResponderGrant(e, gestureState);

return config.onShouldBlockNativeResponder === undefined?true:
config.onShouldBlockNativeResponder();}, 


onResponderReject:function(e){
config.onPanResponderReject && config.onPanResponderReject(e, gestureState);}, 


onResponderRelease:function(e){
config.onPanResponderRelease && config.onPanResponderRelease(e, gestureState);
PanResponder._initializeGestureState(gestureState);}, 


onResponderStart:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderStart && config.onPanResponderStart(e, gestureState);}, 


onResponderMove:function(e){
var touchHistory=e.touchHistory;


if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return;}



PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
config.onPanResponderMove && config.onPanResponderMove(e, gestureState);}, 


onResponderEnd:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderEnd && config.onPanResponderEnd(e, gestureState);}, 


onResponderTerminate:function(e){
config.onPanResponderTerminate && 
config.onPanResponderTerminate(e, gestureState);
PanResponder._initializeGestureState(gestureState);}, 


onResponderTerminationRequest:function(e){
return config.onPanResponderTerminationRequest === undefined?true:
config.onPanResponderTerminationRequest(e, gestureState);}};


return {panHandlers:panHandlers};}};



module.exports = PanResponder;
});
__d('TouchHistoryMath',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var TouchHistoryMath={
















centroidDimension:function(touchHistory, touchesChangedAfter, isXAxis, ofCurrent){
var touchBank=touchHistory.touchBank;
var total=0;
var count=0;

var oneTouchData=touchHistory.numberActiveTouches === 1?
touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]:null;

if(oneTouchData !== null){
if(oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter){
total += ofCurrent && isXAxis?oneTouchData.currentPageX:
ofCurrent && !isXAxis?oneTouchData.currentPageY:
!ofCurrent && isXAxis?oneTouchData.previousPageX:
oneTouchData.previousPageY;
count = 1;}}else 

{
for(var i=0; i < touchBank.length; i++) {
var touchTrack=touchBank[i];
if(touchTrack !== null && 
touchTrack !== undefined && 
touchTrack.touchActive && 
touchTrack.currentTimeStamp >= touchesChangedAfter){
var toAdd;
if(ofCurrent && isXAxis){
toAdd = touchTrack.currentPageX;}else 
if(ofCurrent && !isXAxis){
toAdd = touchTrack.currentPageY;}else 
if(!ofCurrent && isXAxis){
toAdd = touchTrack.previousPageX;}else 
{
toAdd = touchTrack.previousPageY;}

total += toAdd;
count++;}}}



return count > 0?total / count:TouchHistoryMath.noCentroid;}, 


currentCentroidXOfTouchesChangedAfter:function(touchHistory, touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory, 
touchesChangedAfter, 
true, 
true);}, 



currentCentroidYOfTouchesChangedAfter:function(touchHistory, touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory, 
touchesChangedAfter, 
false, 
true);}, 



previousCentroidXOfTouchesChangedAfter:function(touchHistory, touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory, 
touchesChangedAfter, 
true, 
false);}, 



previousCentroidYOfTouchesChangedAfter:function(touchHistory, touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory, 
touchesChangedAfter, 
false, 
false);}, 



currentCentroidX:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory, 
0, 
true, 
true);}, 



currentCentroidY:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory, 
0, 
false, 
true);}, 



noCentroid:-1};


module.exports = TouchHistoryMath;
});
__d('clamp',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 























clamp(min, value, max){
if(value < min){
return min;}

if(value > max){
return max;}

return value;}


module.exports = clamp;
});
__d('rebound/rebound.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (


























































































































function(){
var rebound={};
var util=rebound.util = {};
var concat=Array.prototype.concat;
var slice=Array.prototype.slice;


util.bind = function bind(func, context){
var args=slice.call(arguments, 2);
return function(){
func.apply(context, concat.call(args, slice.call(arguments)));};};




util.extend = function extend(target, source){
for(var key in source) {
if(source.hasOwnProperty(key)){
target[key] = source[key];}}};









var SpringSystem=rebound.SpringSystem = function SpringSystem(looper){
this._springRegistry = {};
this._activeSprings = [];
this.listeners = [];
this._idleSpringIndices = [];
this.looper = looper || new AnimationLooper();
this.looper.springSystem = this;};


util.extend(SpringSystem.prototype, {

_springRegistry:null, 

_isIdle:true, 

_lastTimeMillis:-1, 

_activeSprings:null, 

listeners:null, 

_idleSpringIndices:null, 






setLooper:function(looper){
this.looper = looper;
looper.springSystem = this;}, 






createSpring:function(tension, friction){
var springConfig;
if(tension === undefined || friction === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromOrigamiTensionAndFriction(tension, friction);}

return this.createSpringWithConfig(springConfig);}, 





createSpringWithBouncinessAndSpeed:function(bounciness, speed){
var springConfig;
if(bounciness === undefined || speed === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromBouncinessAndSpeed(bounciness, speed);}

return this.createSpringWithConfig(springConfig);}, 



createSpringWithConfig:function(springConfig){
var spring=new Spring(this);
this.registerSpring(spring);
spring.setSpringConfig(springConfig);
return spring;}, 






getIsIdle:function(){
return this._isIdle;}, 





getSpringById:function(id){
return this._springRegistry[id];}, 




getAllSprings:function(){
var vals=[];
for(var id in this._springRegistry) {
if(this._springRegistry.hasOwnProperty(id)){
vals.push(this._springRegistry[id]);}}


return vals;}, 






registerSpring:function(spring){
this._springRegistry[spring.getId()] = spring;}, 






deregisterSpring:function(spring){
removeFirst(this._activeSprings, spring);
delete this._springRegistry[spring.getId()];}, 


advance:function(time, deltaTime){
while(this._idleSpringIndices.length > 0) this._idleSpringIndices.pop();
for(var i=0, len=this._activeSprings.length; i < len; i++) {
var spring=this._activeSprings[i];
if(spring.systemShouldAdvance()){
spring.advance(time / 1000.0, deltaTime / 1000.0);}else 
{
this._idleSpringIndices.push(this._activeSprings.indexOf(spring));}}


while(this._idleSpringIndices.length > 0) {
var idx=this._idleSpringIndices.pop();
idx >= 0 && this._activeSprings.splice(idx, 1);}}, 
















loop:function(currentTimeMillis){
var listener;
if(this._lastTimeMillis === -1){
this._lastTimeMillis = currentTimeMillis - 1;}

var ellapsedMillis=currentTimeMillis - this._lastTimeMillis;
this._lastTimeMillis = currentTimeMillis;

var i=0, len=this.listeners.length;
for(i = 0; i < len; i++) {
listener = this.listeners[i];
listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);}


this.advance(currentTimeMillis, ellapsedMillis);
if(this._activeSprings.length === 0){
this._isIdle = true;
this._lastTimeMillis = -1;}


for(i = 0; i < len; i++) {
listener = this.listeners[i];
listener.onAfterIntegrate && listener.onAfterIntegrate(this);}


if(!this._isIdle){
this.looper.run();}}, 






activateSpring:function(springId){
var spring=this._springRegistry[springId];
if(this._activeSprings.indexOf(spring) == -1){
this._activeSprings.push(spring);}

if(this.getIsIdle()){
this._isIdle = false;
this.looper.run();}}, 






addListener:function(listener){
this.listeners.push(listener);}, 



removeListener:function(listener){
removeFirst(this.listeners, listener);}, 



removeAllListeners:function(){
this.listeners = [];}});


















var Spring=rebound.Spring = function Spring(springSystem){
this._id = 's' + Spring._ID++;
this._springSystem = springSystem;
this.listeners = [];
this._currentState = new PhysicsState();
this._previousState = new PhysicsState();
this._tempState = new PhysicsState();};


util.extend(Spring, {
_ID:0, 

MAX_DELTA_TIME_SEC:0.064, 

SOLVER_TIMESTEP_SEC:0.001});



util.extend(Spring.prototype, {

_id:0, 

_springConfig:null, 

_overshootClampingEnabled:false, 

_currentState:null, 

_previousState:null, 

_tempState:null, 

_startValue:0, 

_endValue:0, 

_wasAtRest:true, 

_restSpeedThreshold:0.001, 

_displacementFromRestThreshold:0.001, 

listeners:null, 

_timeAccumulator:0, 

_springSystem:null, 


destroy:function(){
this.listeners = [];
this.frames = [];
this._springSystem.deregisterSpring(this);}, 




getId:function(){
return this._id;}, 





setSpringConfig:function(springConfig){
this._springConfig = springConfig;
return this;}, 



getSpringConfig:function(){
return this._springConfig;}, 





























setCurrentValue:function(currentValue, skipSetAtRest){
this._startValue = currentValue;
this._currentState.position = currentValue;
if(!skipSetAtRest){
this.setAtRest();}

this.notifyPositionUpdated(false, false);
return this;}, 





getStartValue:function(){
return this._startValue;}, 



getCurrentValue:function(){
return this._currentState.position;}, 




getCurrentDisplacementDistance:function(){
return this.getDisplacementDistanceForState(this._currentState);}, 


getDisplacementDistanceForState:function(state){
return Math.abs(this._endValue - state.position);}, 








setEndValue:function(endValue){
if(this._endValue == endValue && this.isAtRest()){
return this;}

this._startValue = this.getCurrentValue();
this._endValue = endValue;
this._springSystem.activateSpring(this.getId());
for(var i=0, len=this.listeners.length; i < len; i++) {
var listener=this.listeners[i];
var onChange=listener.onSpringEndStateChange;
onChange && onChange(this);}

return this;}, 



getEndValue:function(){
return this._endValue;}, 









setVelocity:function(velocity){
if(velocity === this._currentState.velocity){
return this;}

this._currentState.velocity = velocity;
this._springSystem.activateSpring(this.getId());
return this;}, 



getVelocity:function(){
return this._currentState.velocity;}, 




setRestSpeedThreshold:function(restSpeedThreshold){
this._restSpeedThreshold = restSpeedThreshold;
return this;}, 



getRestSpeedThreshold:function(){
return this._restSpeedThreshold;}, 





setRestDisplacementThreshold:function(displacementFromRestThreshold){
this._displacementFromRestThreshold = displacementFromRestThreshold;}, 



getRestDisplacementThreshold:function(){
return this._displacementFromRestThreshold;}, 







setOvershootClampingEnabled:function(enabled){
this._overshootClampingEnabled = enabled;
return this;}, 



isOvershootClampingEnabled:function(){
return this._overshootClampingEnabled;}, 





isOvershooting:function(){
var start=this._startValue;
var end=this._endValue;
return this._springConfig.tension > 0 && (
start < end && this.getCurrentValue() > end || 
start > end && this.getCurrentValue() < end);}, 







advance:function(time, realDeltaTime){
var isAtRest=this.isAtRest();

if(isAtRest && this._wasAtRest){
return;}


var adjustedDeltaTime=realDeltaTime;
if(realDeltaTime > Spring.MAX_DELTA_TIME_SEC){
adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;}


this._timeAccumulator += adjustedDeltaTime;

var tension=this._springConfig.tension, 
friction=this._springConfig.friction, 

position=this._currentState.position, 
velocity=this._currentState.velocity, 
tempPosition=this._tempState.position, 
tempVelocity=this._tempState.velocity, 

aVelocity, aAcceleration, 
bVelocity, bAcceleration, 
cVelocity, cAcceleration, 
dVelocity, dAcceleration, 

dxdt, dvdt;

while(this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {

this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;

if(this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC){
this._previousState.position = position;
this._previousState.velocity = velocity;}


aVelocity = velocity;
aAcceleration = 
tension * (this._endValue - tempPosition) - friction * velocity;

tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
bVelocity = tempVelocity;
bAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
cVelocity = tempVelocity;
cAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
dVelocity = tempVelocity;
dAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

dxdt = 
1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);
dvdt = 1.0 / 6.0 * (
aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);


position += dxdt * Spring.SOLVER_TIMESTEP_SEC;
velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;}


this._tempState.position = tempPosition;
this._tempState.velocity = tempVelocity;

this._currentState.position = position;
this._currentState.velocity = velocity;

if(this._timeAccumulator > 0){
this.interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);}


if(this.isAtRest() || 
this._overshootClampingEnabled && this.isOvershooting()){

if(this._springConfig.tension > 0){
this._startValue = this._endValue;
this._currentState.position = this._endValue;}else 
{
this._endValue = this._currentState.position;
this._startValue = this._endValue;}

this.setVelocity(0);
isAtRest = true;}


var notifyActivate=false;
if(this._wasAtRest){
this._wasAtRest = false;
notifyActivate = true;}


var notifyAtRest=false;
if(isAtRest){
this._wasAtRest = true;
notifyAtRest = true;}


this.notifyPositionUpdated(notifyActivate, notifyAtRest);}, 


notifyPositionUpdated:function(notifyActivate, notifyAtRest){
for(var i=0, len=this.listeners.length; i < len; i++) {
var listener=this.listeners[i];
if(notifyActivate && listener.onSpringActivate){
listener.onSpringActivate(this);}


if(listener.onSpringUpdate){
listener.onSpringUpdate(this);}


if(notifyAtRest && listener.onSpringAtRest){
listener.onSpringAtRest(this);}}}, 









systemShouldAdvance:function(){
return !this.isAtRest() || !this.wasAtRest();}, 


wasAtRest:function(){
return this._wasAtRest;}, 








isAtRest:function(){
return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (
this.getDisplacementDistanceForState(this._currentState) <= 
this._displacementFromRestThreshold || 
this._springConfig.tension === 0);}, 






setAtRest:function(){
this._endValue = this._currentState.position;
this._tempState.position = this._currentState.position;
this._currentState.velocity = 0;
return this;}, 


interpolate:function(alpha){
this._currentState.position = this._currentState.position * 
alpha + this._previousState.position * (1 - alpha);
this._currentState.velocity = this._currentState.velocity * 
alpha + this._previousState.velocity * (1 - alpha);}, 


getListeners:function(){
return this.listeners;}, 


addListener:function(newListener){
this.listeners.push(newListener);
return this;}, 


removeListener:function(listenerToRemove){
removeFirst(this.listeners, listenerToRemove);
return this;}, 


removeAllListeners:function(){
this.listeners = [];
return this;}, 


currentValueIsApproximately:function(value){
return Math.abs(this.getCurrentValue() - value) <= 
this.getRestDisplacementThreshold();}});









var PhysicsState=function PhysicsState(){};

util.extend(PhysicsState.prototype, {
position:0, 
velocity:0});








var SpringConfig=rebound.SpringConfig = 
function SpringConfig(tension, friction){
this.tension = tension;
this.friction = friction;};







var AnimationLooper=rebound.AnimationLooper = function AnimationLooper(){
this.springSystem = null;
var _this=this;
var _run=function(){
_this.springSystem.loop(Date.now());};


this.run = function(){
util.onFrame(_run);};};









rebound.SimulationLooper = function SimulationLooper(timestep){
this.springSystem = null;
var time=0;
var running=false;
timestep = timestep || 16.667;

this.run = function(){
if(running){
return;}

running = true;
while(!this.springSystem.getIsIdle()) {
this.springSystem.loop(time += timestep);}

running = false;};};








rebound.SteppingSimulationLooper = function(timestep){
this.springSystem = null;
var time=0;



this.run = function(){};


this.step = function(timestep){
this.springSystem.loop(time += timestep);};};








var OrigamiValueConverter=rebound.OrigamiValueConverter = {
tensionFromOrigamiValue:function(oValue){
return (oValue - 30.0) * 3.62 + 194.0;}, 


origamiValueFromTension:function(tension){
return (tension - 194.0) / 3.62 + 30.0;}, 


frictionFromOrigamiValue:function(oValue){
return (oValue - 8.0) * 3.0 + 25.0;}, 


origamiFromFriction:function(friction){
return (friction - 25.0) / 3.0 + 8.0;}};










var BouncyConversion=rebound.BouncyConversion = function(bounciness, speed){
this.bounciness = bounciness;
this.speed = speed;
var b=this.normalize(bounciness / 1.7, 0, 20.0);
b = this.projectNormal(b, 0.0, 0.8);
var s=this.normalize(speed / 1.7, 0, 20.0);
this.bouncyTension = this.projectNormal(s, 0.5, 200);
this.bouncyFriction = this.quadraticOutInterpolation(
b, 
this.b3Nobounce(this.bouncyTension), 
0.01);};


util.extend(BouncyConversion.prototype, {

normalize:function(value, startValue, endValue){
return (value - startValue) / (endValue - startValue);}, 


projectNormal:function(n, start, end){
return start + n * (end - start);}, 


linearInterpolation:function(t, start, end){
return t * end + (1.0 - t) * start;}, 


quadraticOutInterpolation:function(t, start, end){
return this.linearInterpolation(2 * t - t * t, start, end);}, 


b3Friction1:function(x){
return 0.0007 * Math.pow(x, 3) - 
0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;}, 


b3Friction2:function(x){
return 0.000044 * Math.pow(x, 3) - 
0.006 * Math.pow(x, 2) + 0.36 * x + 2;}, 


b3Friction3:function(x){
return 0.00000045 * Math.pow(x, 3) - 
0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;}, 


b3Nobounce:function(tension){
var friction=0;
if(tension <= 18){
friction = this.b3Friction1(tension);}else 
if(tension > 18 && tension <= 44){
friction = this.b3Friction2(tension);}else 
{
friction = this.b3Friction3(tension);}

return friction;}});



util.extend(SpringConfig, {




fromOrigamiTensionAndFriction:function(tension, friction){
return new SpringConfig(
OrigamiValueConverter.tensionFromOrigamiValue(tension), 
OrigamiValueConverter.frictionFromOrigamiValue(friction));}, 





fromBouncinessAndSpeed:function(bounciness, speed){
var bouncyConversion=new rebound.BouncyConversion(bounciness, speed);
return this.fromOrigamiTensionAndFriction(
bouncyConversion.bouncyTension, 
bouncyConversion.bouncyFriction);}, 




coastingConfigWithOrigamiFriction:function(friction){
return new SpringConfig(
0, 
OrigamiValueConverter.frictionFromOrigamiValue(friction));}});




SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = 
SpringConfig.fromOrigamiTensionAndFriction(40, 7);

util.extend(SpringConfig.prototype, {friction:0, tension:0});




var colorCache={};
util.hexToRGB = function(color){
if(colorCache[color]){
return colorCache[color];}

color = color.replace('#', '');
if(color.length === 3){
color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];}

var parts=color.match(/.{2}/g);

var ret={
r:parseInt(parts[0], 16), 
g:parseInt(parts[1], 16), 
b:parseInt(parts[2], 16)};


colorCache[color] = ret;
return ret;};


util.rgbToHex = function(r, g, b){
r = r.toString(16);
g = g.toString(16);
b = b.toString(16);
r = r.length < 2?'0' + r:r;
g = g.length < 2?'0' + g:g;
b = b.length < 2?'0' + b:b;
return '#' + r + g + b;};


var MathUtil=rebound.MathUtil = {








mapValueInRange:function(value, fromLow, fromHigh, toLow, toHigh){
var fromRangeSize=fromHigh - fromLow;
var toRangeSize=toHigh - toLow;
var valueScale=(value - fromLow) / fromRangeSize;
return toLow + valueScale * toRangeSize;}, 





interpolateColor:
function(val, startColor, endColor, fromLow, fromHigh, asRGB){
fromLow = fromLow === undefined?0:fromLow;
fromHigh = fromHigh === undefined?1:fromHigh;
startColor = util.hexToRGB(startColor);
endColor = util.hexToRGB(endColor);
var r=Math.floor(
util.mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r));

var g=Math.floor(
util.mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g));

var b=Math.floor(
util.mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b));

if(asRGB){
return 'rgb(' + r + ',' + g + ',' + b + ')';}else 
{
return util.rgbToHex(r, g, b);}}, 



degreesToRadians:function(deg){
return deg * Math.PI / 180;}, 


radiansToDegrees:function(rad){
return rad * 180 / Math.PI;}};




util.extend(util, MathUtil);







function removeFirst(array, item){
var idx=array.indexOf(item);
idx != -1 && array.splice(idx, 1);}


var _onFrame;
if(typeof window !== 'undefined'){
_onFrame = window.requestAnimationFrame || 
window.webkitRequestAnimationFrame || 
window.mozRequestAnimationFrame || 
window.msRequestAnimationFrame || 
window.oRequestAnimationFrame;}

if(!_onFrame && typeof process !== 'undefined' && process.title === 'node'){
_onFrame = setImmediate;}



util.onFrame = function onFrame(func){
return _onFrame(func);};




if(typeof exports != 'undefined'){
util.extend(exports, rebound);}else 
if(typeof window != 'undefined'){
window.rebound = rebound;}})();
});
__d('NavigatorIOS',["EventEmitter","Image","NavigationContext","React","NativeModules","StyleSheet","StaticContainer.react","View","requireNativeComponent","invariant","logError"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var EventEmitter=require('EventEmitter');
var Image=require('Image');
var NavigationContext=require('NavigationContext');
var React=require('React');
var RCTNavigatorManager=require('NativeModules').NavigatorManager;
var StyleSheet=require('StyleSheet');
var StaticContainer=require('StaticContainer.react');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var invariant=require('invariant');
var logError=require('logError');

var TRANSITIONER_REF='transitionerRef';

var PropTypes=React.PropTypes;

var __uid=0;
function getuid(){
return __uid++;}


var NavigatorTransitionerIOS=React.createClass({displayName:'NavigatorTransitionerIOS', 
requestSchedulingNavigation:function(cb){
RCTNavigatorManager.requestSchedulingJavaScriptNavigation(
React.findNodeHandle(this), 
logError, 
cb);}, 



render:function(){
return (
React.createElement(RCTNavigator, this.props));}});

























































































































var NavigatorIOS=React.createClass({displayName:'NavigatorIOS', 

propTypes:{






initialRoute:PropTypes.shape({



component:PropTypes.func.isRequired, 




title:PropTypes.string.isRequired, 





passProps:PropTypes.object, 






backButtonIcon:Image.propTypes.source, 






backButtonTitle:PropTypes.string, 




leftButtonIcon:Image.propTypes.source, 




leftButtonTitle:PropTypes.string, 




onLeftButtonPress:PropTypes.func, 




rightButtonIcon:Image.propTypes.source, 




rightButtonTitle:PropTypes.string, 




onRightButtonPress:PropTypes.func, 




wrapperStyle:View.propTypes.style}).

isRequired, 




navigationBarHidden:PropTypes.bool, 




shadowHidden:PropTypes.bool, 





itemWrapperStyle:View.propTypes.style, 




tintColor:PropTypes.string, 




barTintColor:PropTypes.string, 




titleTextColor:PropTypes.string, 




translucent:PropTypes.bool}, 



navigator:undefined, 
navigationContext:new NavigationContext(), 

componentWillMount:function(){


this.navigator = {
push:this.push, 
pop:this.pop, 
popN:this.popN, 
replace:this.replace, 
replacePrevious:this.replacePrevious, 
replacePreviousAndPop:this.replacePreviousAndPop, 
resetTo:this.resetTo, 
popToRoute:this.popToRoute, 
popToTop:this.popToTop, 
navigationContext:this.navigationContext};

this._emitWillFocus(this.state.routeStack[this.state.observedTopOfStack]);}, 


componentDidMount:function(){
this._emitDidFocus(this.state.routeStack[this.state.observedTopOfStack]);}, 


componentWillUnmount:function(){
this.navigationContext.dispose();
this.navigationContext = new NavigationContext();}, 


getInitialState:function(){
return {
idStack:[getuid()], 
routeStack:[this.props.initialRoute], 

requestedTopOfStack:0, 






observedTopOfStack:0, 
progress:1, 
fromIndex:0, 
toIndex:0, 


makingNavigatorRequest:false, 



updatingAllIndicesAtOrBeyond:0};}, 



_toFocusOnNavigationComplete:undefined, 

_handleFocusRequest:function(item){
if(this.state.makingNavigatorRequest){
this._toFocusOnNavigationComplete = item;}else 
{
this._getFocusEmitter().emit('focus', item);}}, 



_focusEmitter:undefined, 

_getFocusEmitter:function(){

var focusEmitter=this._focusEmitter;
if(!focusEmitter){
focusEmitter = new EventEmitter();
this._focusEmitter = focusEmitter;}

return focusEmitter;}, 


getChildContext:function()


{
return {
onFocusRequested:this._handleFocusRequest, 
focusEmitter:this._getFocusEmitter()};}, 



childContextTypes:{
onFocusRequested:React.PropTypes.func, 
focusEmitter:React.PropTypes.instanceOf(EventEmitter)}, 


_tryLockNavigator:function(cb){
this.refs[TRANSITIONER_REF].requestSchedulingNavigation(
function(acquiredLock){return acquiredLock && cb();});}, 



_handleNavigatorStackChanged:function(e){
var newObservedTopOfStack=e.nativeEvent.stackLength - 1;
this._emitDidFocus(this.state.routeStack[newObservedTopOfStack]);

invariant(
newObservedTopOfStack <= this.state.requestedTopOfStack, 
'No navigator item should be pushed without JS knowing about it %s %s', newObservedTopOfStack, this.state.requestedTopOfStack);

var wasWaitingForConfirmation=
this.state.requestedTopOfStack !== this.state.observedTopOfStack;
if(wasWaitingForConfirmation){
invariant(
newObservedTopOfStack === this.state.requestedTopOfStack, 
'If waiting for observedTopOfStack to reach requestedTopOfStack, ' + 
'the only valid observedTopOfStack should be requestedTopOfStack.');}











var nextState={
observedTopOfStack:newObservedTopOfStack, 
makingNavigatorRequest:false, 
updatingAllIndicesAtOrBeyond:null, 
progress:1, 
toIndex:newObservedTopOfStack, 
fromIndex:newObservedTopOfStack};

this.setState(nextState, this._eliminateUnneededChildren);}, 


_eliminateUnneededChildren:function(){



var updatingAllIndicesAtOrBeyond=
this.state.routeStack.length > this.state.observedTopOfStack + 1?
this.state.observedTopOfStack + 1:
null;
this.setState({
idStack:this.state.idStack.slice(0, this.state.observedTopOfStack + 1), 
routeStack:this.state.routeStack.slice(0, this.state.observedTopOfStack + 1), 

requestedTopOfStack:this.state.observedTopOfStack, 
makingNavigatorRequest:true, 
updatingAllIndicesAtOrBeyond:updatingAllIndicesAtOrBeyond});}, 



_emitDidFocus:function(route){
this.navigationContext.emit('didfocus', {route:route});}, 


_emitWillFocus:function(route){
this.navigationContext.emit('willfocus', {route:route});}, 


push:function(route){var _this=this;
invariant(!!route, 'Must supply route to push');

if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
this._tryLockNavigator(function(){
_this._emitWillFocus(route);

var nextStack=_this.state.routeStack.concat([route]);
var nextIDStack=_this.state.idStack.concat([getuid()]);
_this.setState({


idStack:nextIDStack, 
routeStack:nextStack, 
requestedTopOfStack:nextStack.length - 1, 
makingNavigatorRequest:true, 
updatingAllIndicesAtOrBeyond:nextStack.length - 1});});}}, 





popN:function(n){var _this2=this;
if(n === 0){
return;}


if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
if(this.state.requestedTopOfStack > 0){
this._tryLockNavigator(function(){
var newRequestedTopOfStack=_this2.state.requestedTopOfStack - n;
invariant(newRequestedTopOfStack >= 0, 'Cannot pop below 0');
_this2._emitWillFocus(_this2.state.routeStack[newRequestedTopOfStack]);
_this2.setState({
requestedTopOfStack:newRequestedTopOfStack, 
makingNavigatorRequest:true, 


updatingAllIndicesAtOrBeyond:null});});}}}, 






pop:function(){
this.popN(1);}, 








replaceAtIndex:function(route, index){
invariant(!!route, 'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}




var nextIDStack=this.state.idStack.slice();
var nextRouteStack=this.state.routeStack.slice();
nextIDStack[index] = getuid();
nextRouteStack[index] = route;

this.setState({
idStack:nextIDStack, 
routeStack:nextRouteStack, 
makingNavigatorRequest:false, 
updatingAllIndicesAtOrBeyond:index});


this._emitWillFocus(route);
this._emitDidFocus(route);}, 





replace:function(route){
this.replaceAtIndex(route, -1);}, 





replacePrevious:function(route){
this.replaceAtIndex(route, -2);}, 


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);}, 


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1, 
'Calling pop to route for a route that doesn\'t exist!');

var numToPop=this.state.routeStack.length - indexOfRoute - 1;
this.popN(numToPop);}, 


replacePreviousAndPop:function(route){var _this3=this;

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

if(this.state.routeStack.length < 2){
return;}

this._tryLockNavigator(function(){
_this3.replacePrevious(route);
_this3.setState({
requestedTopOfStack:_this3.state.requestedTopOfStack - 1, 
makingNavigatorRequest:true});});}, 




resetTo:function(route){
invariant(!!route, 'Must supply route to push');

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

this.replaceAtIndex(route, 0);
this.popToRoute(route);}, 


handleNavigationComplete:function(e){
if(this._toFocusOnNavigationComplete){
this._getFocusEmitter().emit('focus', this._toFocusOnNavigationComplete);
this._toFocusOnNavigationComplete = null;}

this._handleNavigatorStackChanged(e);}, 


_routeToStackItem:function(route, i){
var Component=route.component;
var shouldUpdateChild=this.state.updatingAllIndicesAtOrBeyond !== null && 
this.state.updatingAllIndicesAtOrBeyond >= i;

return (
React.createElement(StaticContainer, {key:'nav' + i, shouldUpdate:shouldUpdateChild}, 
React.createElement(RCTNavigatorItem, {
title:route.title, 
style:[
styles.stackItem, 
this.props.itemWrapperStyle, 
route.wrapperStyle], 

backButtonIcon:this._imageNameFromSource(route.backButtonIcon), 
backButtonTitle:route.backButtonTitle, 
leftButtonIcon:this._imageNameFromSource(route.leftButtonIcon), 
leftButtonTitle:route.leftButtonTitle, 
onNavLeftButtonTap:route.onLeftButtonPress, 
rightButtonIcon:this._imageNameFromSource(route.rightButtonIcon), 
rightButtonTitle:route.rightButtonTitle, 
onNavRightButtonTap:route.onRightButtonPress, 
navigationBarHidden:this.props.navigationBarHidden, 
shadowHidden:this.props.shadowHidden, 
tintColor:this.props.tintColor, 
barTintColor:this.props.barTintColor, 
translucent:this.props.translucent !== false, 
titleTextColor:this.props.titleTextColor}, 
React.createElement(Component, _extends({
navigator:this.navigator, 
route:route}, 
route.passProps)))));}, 






_imageNameFromSource:function(source){
return source?source.uri:undefined;}, 


renderNavigationStackItems:function(){
var shouldRecurseToNavigator=
this.state.makingNavigatorRequest || 
this.state.updatingAllIndicesAtOrBeyond !== null;


var items=shouldRecurseToNavigator?
this.state.routeStack.map(this._routeToStackItem):null;
return (
React.createElement(StaticContainer, {shouldUpdate:shouldRecurseToNavigator}, 
React.createElement(NavigatorTransitionerIOS, {
ref:TRANSITIONER_REF, 
style:styles.transitioner, 
vertical:this.props.vertical, 
requestedTopOfStack:this.state.requestedTopOfStack, 
onNavigationComplete:this.handleNavigationComplete}, 
items)));}, 





render:function(){
return (
React.createElement(View, {style:this.props.style}, 
this.renderNavigationStackItems()));}});





var styles=StyleSheet.create({
stackItem:{
backgroundColor:'white', 
overflow:'hidden', 
position:'absolute', 
top:0, 
left:0, 
right:0, 
bottom:0}, 

transitioner:{
flex:1}});



var RCTNavigator=requireNativeComponent('RCTNavigator');
var RCTNavigatorItem=requireNativeComponent('RCTNavItem');

module.exports = NavigatorIOS;
});
__d('PickerIOS',["NativeMethodsMixin","React","ReactChildren","ReactNativeViewAttributes","NativeModules","StyleSheet","View","requireNativeComponent","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactChildren=require('ReactChildren');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTPickerIOSConsts=require('NativeModules').UIManager.RCTPicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var merge=require('merge');

var PICKER='picker';

var PickerIOS=React.createClass({displayName:'PickerIOS', 
mixins:[NativeMethodsMixin], 

propTypes:{
onValueChange:React.PropTypes.func, 
selectedValue:React.PropTypes.any}, 


getInitialState:function(){
return this._stateFromProps(this.props);}, 


componentWillReceiveProps:function(nextProps){
this.setState(this._stateFromProps(nextProps));}, 



_stateFromProps:function(props){
var selectedIndex=0;
var items=[];
ReactChildren.forEach(props.children, function(child, index){
if(child.props.value === props.selectedValue){
selectedIndex = index;}

items.push({value:child.props.value, label:child.props.label});});

return {selectedIndex:selectedIndex, items:items};}, 


render:function(){
return (
React.createElement(View, {style:this.props.style}, 
React.createElement(RCTPickerIOS, {
ref:PICKER, 
style:styles.pickerIOS, 
items:this.state.items, 
selectedIndex:this.state.selectedIndex, 
onChange:this._onChange})));}, 





_onChange:function(event){
if(this.props.onChange){
this.props.onChange(event);}

if(this.props.onValueChange){
this.props.onValueChange(event.nativeEvent.newValue);}








if(this.state.selectedIndex !== event.nativeEvent.newIndex){
this.refs[PICKER].setNativeProps({
selectedIndex:this.state.selectedIndex});}}});





PickerIOS.Item = React.createClass({displayName:'Item', 
propTypes:{
value:React.PropTypes.any, 
label:React.PropTypes.string}, 


render:function(){

return null;}});



var styles=StyleSheet.create({
pickerIOS:{



height:RCTPickerIOSConsts.ComponentHeight}});



var RCTPickerIOS=requireNativeComponent('RCTPicker', null);

module.exports = PickerIOS;
});
__d('ProgressViewIOS',["Image","NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var Image=require('Image');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');




var ProgressViewIOS=React.createClass({displayName:'ProgressViewIOS', 
mixins:[NativeMethodsMixin], 

propTypes:{



progressViewStyle:PropTypes.oneOf(['default', 'bar']), 




progress:PropTypes.number, 




progressTintColor:PropTypes.string, 




trackTintColor:PropTypes.string, 




progressImage:Image.propTypes.source, 




trackImage:Image.propTypes.source}, 


render:function(){
return (
React.createElement(RCTProgressView, _extends({}, 
this.props, {
style:[styles.progressView, this.props.style]})));}});





var styles=StyleSheet.create({
progressView:{
height:NativeModules.ProgressViewManager.ComponentHeight}});



var RCTProgressView=requireNativeComponent(
'RCTProgressView', 
ProgressViewIOS);


module.exports = ProgressViewIOS;
});
__d('SegmentedControlIOS',["NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');






var SEGMENTED_CONTROL_REFERENCE='segmentedcontrol';






var SegmentedControlIOS=React.createClass({displayName:'SegmentedControlIOS', 
mixins:[NativeMethodsMixin], 

propTypes:{



values:PropTypes.arrayOf(PropTypes.string), 




selectedIndex:PropTypes.number, 





onValueChange:PropTypes.func, 





onChange:PropTypes.func, 





enabled:PropTypes.bool, 




tintColor:PropTypes.string, 





momentary:PropTypes.bool}, 


getDefaultProps:function(){
return {
values:[], 
enabled:true};}, 



_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);}, 


render:function(){
return (
React.createElement(RCTSegmentedControl, _extends({}, 
this.props, {
ref:SEGMENTED_CONTROL_REFERENCE, 
style:[styles.segmentedControl, this.props.style], 
onChange:this._onChange})));}});





var styles=StyleSheet.create({
segmentedControl:{
height:NativeModules.SegmentedControlManager.ComponentHeight}});



var RCTSegmentedControl=requireNativeComponent(
'RCTSegmentedControl', 
SegmentedControlIOS);


module.exports = SegmentedControlIOS;
});
__d('SliderIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');



var SliderIOS=React.createClass({displayName:'SliderIOS', 
mixins:[NativeMethodsMixin], 

propTypes:{




style:View.propTypes.style, 









value:PropTypes.number, 




minimumValue:PropTypes.number, 




maximumValue:PropTypes.number, 





minimumTrackTintColor:PropTypes.string, 





maximumTrackTintColor:PropTypes.string, 




onValueChange:PropTypes.func, 





onSlidingComplete:PropTypes.func}, 


_onValueChange:function(event){
this.props.onChange && this.props.onChange(event);
if(event.nativeEvent.continuous){
this.props.onValueChange && 
this.props.onValueChange(event.nativeEvent.value);}else 
{
this.props.onSlidingComplete && event.nativeEvent.value !== undefined && 
this.props.onSlidingComplete(event.nativeEvent.value);}}, 



render:function(){
return (
React.createElement(RCTSlider, {
style:[styles.slider, this.props.style], 
value:this.props.value, 
maximumValue:this.props.maximumValue, 
minimumValue:this.props.minimumValue, 
minimumTrackTintColor:this.props.minimumTrackTintColor, 
maximumTrackTintColor:this.props.maximumTrackTintColor, 
onChange:this._onValueChange}));}});





var styles=StyleSheet.create({
slider:{
height:40}});



var RCTSlider=requireNativeComponent('RCTSlider', SliderIOS);

module.exports = SliderIOS;
});
__d('SwitchIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');

var SWITCH='switch';















var SwitchIOS=React.createClass({displayName:'SwitchIOS', 
mixins:[NativeMethodsMixin], 

propTypes:{




value:PropTypes.bool, 





disabled:PropTypes.bool, 




onValueChange:PropTypes.func, 




onTintColor:PropTypes.string, 




thumbTintColor:PropTypes.string, 




tintColor:PropTypes.string}, 


getDefaultProps:function(){
return {
value:false, 
disabled:false};}, 



_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);



this.refs[SWITCH].setNativeProps({value:this.props.value});}, 


render:function(){
return (
React.createElement(RCTSwitch, _extends({}, 
this.props, {
ref:SWITCH, 
onChange:this._onChange, 
style:[styles.rkSwitch, this.props.style]})));}});





var styles=StyleSheet.create({
rkSwitch:{
height:31, 
width:51}});



var RCTSwitch=requireNativeComponent('RCTSwitch', SwitchIOS);

module.exports = SwitchIOS;
});
__d('TabBarIOS',["React","StyleSheet","TabBarItemIOS","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var TabBarItemIOS=require('TabBarItemIOS');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarIOS=React.createClass({displayName:'TabBarIOS', 
statics:{
Item:TabBarItemIOS}, 


propTypes:{
style:View.propTypes.style, 



tintColor:React.PropTypes.string, 



barTintColor:React.PropTypes.string, 



translucent:React.PropTypes.bool}, 


render:function(){
return (
React.createElement(RCTTabBar, {
style:[styles.tabGroup, this.props.style], 
tintColor:this.props.tintColor, 
barTintColor:this.props.barTintColor, 
translucent:this.props.translucent !== false}, 
this.props.children));}});





var styles=StyleSheet.create({
tabGroup:{
flex:1}});



var RCTTabBar=requireNativeComponent('RCTTabBar', TabBarIOS);

module.exports = TabBarIOS;
});
__d('TabBarItemIOS',["Image","React","StaticContainer.react","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var Image=require('Image');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarItemIOS=React.createClass({displayName:'TabBarItemIOS', 
propTypes:{



badge:React.PropTypes.oneOfType([
React.PropTypes.string, 
React.PropTypes.number]), 






systemIcon:React.PropTypes.oneOf([
'bookmarks', 
'contacts', 
'downloads', 
'favorites', 
'featured', 
'history', 
'more', 
'most-recent', 
'most-viewed', 
'recents', 
'search', 
'top-rated']), 




icon:Image.propTypes.source, 




selectedIcon:Image.propTypes.source, 




onPress:React.PropTypes.func, 




selected:React.PropTypes.bool, 



style:View.propTypes.style, 




title:React.PropTypes.string}, 


getInitialState:function(){
return {
hasBeenSelected:false};}, 



componentWillMount:function(){
if(this.props.selected){
this.setState({hasBeenSelected:true});}}, 



componentWillReceiveProps:function(nextProps){
if(this.state.hasBeenSelected || nextProps.selected){
this.setState({hasBeenSelected:true});}}, 



render:function(){
var tabContents=null;


if(this.state.hasBeenSelected){
tabContents = 
React.createElement(StaticContainer, {shouldUpdate:this.props.selected}, 
this.props.children);}else 

{
tabContents = React.createElement(View, null);}


var icon=this.props.systemIcon || 
this.props.icon && this.props.icon.uri;


var badge=typeof this.props.badge === 'number'?
'' + this.props.badge:
this.props.badge;

return (
React.createElement(RCTTabBarItem, {
icon:icon, 
selectedIcon:this.props.selectedIcon && this.props.selectedIcon.uri, 
onPress:this.props.onPress, 
selected:this.props.selected, 
badge:badge, 
title:this.props.title, 
style:[styles.tab, this.props.style]}, 
tabContents));}});





var styles=StyleSheet.create({
tab:{
position:'absolute', 
top:0, 
right:0, 
bottom:0, 
left:0}});



var RCTTabBarItem=requireNativeComponent('RCTTabBarItem', TabBarItemIOS);

module.exports = TabBarItemIOS;
});
__d('Text',["NativeMethodsMixin","Platform","React","ReactInstanceMap","ReactNativeViewAttributes","StyleSheetPropType","TextStylePropTypes","Touchable","createReactNativeComponentClass","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var TextStylePropTypes=require('TextStylePropTypes');
var Touchable=require('Touchable');

var createReactNativeComponentClass=
require('createReactNativeComponentClass');
var merge=require('merge');

var stylePropType=StyleSheetPropType(TextStylePropTypes);

var viewConfig={
validAttributes:merge(ReactNativeViewAttributes.UIView, {
isHighlighted:true, 
numberOfLines:true}), 

uiViewClassName:'RCTText'};



































var Text=React.createClass({displayName:'Text', 

mixins:[Touchable.Mixin, NativeMethodsMixin], 

propTypes:{





numberOfLines:React.PropTypes.number, 





onLayout:React.PropTypes.func, 



onPress:React.PropTypes.func, 





suppressHighlighting:React.PropTypes.bool, 
style:stylePropType, 



testID:React.PropTypes.string}, 


viewConfig:viewConfig, 

getInitialState:function(){
return merge(this.touchableGetInitialState(), {
isHighlighted:false});}, 



onStartShouldSetResponder:function(){
var shouldSetFromProps=this.props.onStartShouldSetResponder && 
this.props.onStartShouldSetResponder();
return shouldSetFromProps || !!this.props.onPress;}, 





handleResponderTerminationRequest:function(){


var allowTermination=this.touchableHandleResponderTerminationRequest();
if(allowTermination && this.props.onResponderTerminationRequest){
allowTermination = this.props.onResponderTerminationRequest();}

return allowTermination;}, 


handleResponderGrant:function(e, dispatchID){
this.touchableHandleResponderGrant(e, dispatchID);
this.props.onResponderGrant && 
this.props.onResponderGrant.apply(this, arguments);}, 


handleResponderMove:function(e){
this.touchableHandleResponderMove(e);
this.props.onResponderMove && 
this.props.onResponderMove.apply(this, arguments);}, 


handleResponderRelease:function(e){
this.touchableHandleResponderRelease(e);
this.props.onResponderRelease && 
this.props.onResponderRelease.apply(this, arguments);}, 


handleResponderTerminate:function(e){
this.touchableHandleResponderTerminate(e);
this.props.onResponderTerminate && 
this.props.onResponderTerminate.apply(this, arguments);}, 


touchableHandleActivePressIn:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:true});}, 



touchableHandleActivePressOut:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:false});}, 



touchableHandlePress:function(){
this.props.onPress && this.props.onPress();}, 


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;}, 


getChildContext:function(){
return {isInAParentText:true};}, 


childContextTypes:{
isInAParentText:React.PropTypes.bool}, 


render:function(){
var props={};
for(var key in this.props) {
props[key] = this.props[key];}


if(props.accessible !== false){
props.accessible = true;}

props.isHighlighted = this.state.isHighlighted;
props.onStartShouldSetResponder = this.onStartShouldSetResponder;
props.onResponderTerminationRequest = 
this.handleResponderTerminationRequest;
props.onResponderGrant = this.handleResponderGrant;
props.onResponderMove = this.handleResponderMove;
props.onResponderRelease = this.handleResponderRelease;
props.onResponderTerminate = this.handleResponderTerminate;


var context=ReactInstanceMap.get(this)._context;
if(context.isInAParentText){
return React.createElement(RCTVirtualText, props);}else 
{
return React.createElement(RCTText, props);}}});











var PRESS_RECT_OFFSET={top:20, left:20, right:20, bottom:30};

var RCTText=createReactNativeComponentClass(viewConfig);
var RCTVirtualText=RCTText;

if(Platform.OS === 'android'){
RCTVirtualText = createReactNativeComponentClass({
validAttributes:merge(ReactNativeViewAttributes.UIView, {
isHighlighted:true}), 

uiViewClassName:'RCTVirtualText'});}



module.exports = Text;
});
__d('Touchable',["BoundingDimensions","Position","TouchEventUtils","keyMirror","queryLayoutByID"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





var BoundingDimensions=require('BoundingDimensions');
var Position=require('Position');
var TouchEventUtils=require('TouchEventUtils');

var keyMirror=require('keyMirror');
var queryLayoutByID=require('queryLayoutByID');

























































































var States=keyMirror({
NOT_RESPONDER:null, 
RESPONDER_INACTIVE_PRESS_IN:null, 
RESPONDER_INACTIVE_PRESS_OUT:null, 
RESPONDER_ACTIVE_PRESS_IN:null, 
RESPONDER_ACTIVE_PRESS_OUT:null, 
RESPONDER_ACTIVE_LONG_PRESS_IN:null, 
RESPONDER_ACTIVE_LONG_PRESS_OUT:null, 
ERROR:null});





var IsActive={
RESPONDER_ACTIVE_PRESS_OUT:true, 
RESPONDER_ACTIVE_PRESS_IN:true};






var IsPressingIn={
RESPONDER_INACTIVE_PRESS_IN:true, 
RESPONDER_ACTIVE_PRESS_IN:true, 
RESPONDER_ACTIVE_LONG_PRESS_IN:true};


var IsLongPressingIn={
RESPONDER_ACTIVE_LONG_PRESS_IN:true};





var Signals=keyMirror({
DELAY:null, 
RESPONDER_GRANT:null, 
RESPONDER_RELEASE:null, 
RESPONDER_TERMINATED:null, 
ENTER_PRESS_RECT:null, 
LEAVE_PRESS_RECT:null, 
LONG_PRESS_DETECTED:null});





var Transitions={
NOT_RESPONDER:{
DELAY:States.ERROR, 
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN, 
RESPONDER_RELEASE:States.ERROR, 
RESPONDER_TERMINATED:States.ERROR, 
ENTER_PRESS_RECT:States.ERROR, 
LEAVE_PRESS_RECT:States.ERROR, 
LONG_PRESS_DETECTED:States.ERROR}, 

RESPONDER_INACTIVE_PRESS_IN:{
DELAY:States.RESPONDER_ACTIVE_PRESS_IN, 
RESPONDER_GRANT:States.ERROR, 
RESPONDER_RELEASE:States.NOT_RESPONDER, 
RESPONDER_TERMINATED:States.NOT_RESPONDER, 
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN, 
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT, 
LONG_PRESS_DETECTED:States.ERROR}, 

RESPONDER_INACTIVE_PRESS_OUT:{
DELAY:States.RESPONDER_ACTIVE_PRESS_OUT, 
RESPONDER_GRANT:States.ERROR, 
RESPONDER_RELEASE:States.NOT_RESPONDER, 
RESPONDER_TERMINATED:States.NOT_RESPONDER, 
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN, 
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT, 
LONG_PRESS_DETECTED:States.ERROR}, 

RESPONDER_ACTIVE_PRESS_IN:{
DELAY:States.ERROR, 
RESPONDER_GRANT:States.ERROR, 
RESPONDER_RELEASE:States.NOT_RESPONDER, 
RESPONDER_TERMINATED:States.NOT_RESPONDER, 
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN, 
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT, 
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN}, 

RESPONDER_ACTIVE_PRESS_OUT:{
DELAY:States.ERROR, 
RESPONDER_GRANT:States.ERROR, 
RESPONDER_RELEASE:States.NOT_RESPONDER, 
RESPONDER_TERMINATED:States.NOT_RESPONDER, 
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN, 
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT, 
LONG_PRESS_DETECTED:States.ERROR}, 

RESPONDER_ACTIVE_LONG_PRESS_IN:{
DELAY:States.ERROR, 
RESPONDER_GRANT:States.ERROR, 
RESPONDER_RELEASE:States.NOT_RESPONDER, 
RESPONDER_TERMINATED:States.NOT_RESPONDER, 
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN, 
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT, 
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN}, 

RESPONDER_ACTIVE_LONG_PRESS_OUT:{
DELAY:States.ERROR, 
RESPONDER_GRANT:States.ERROR, 
RESPONDER_RELEASE:States.NOT_RESPONDER, 
RESPONDER_TERMINATED:States.NOT_RESPONDER, 
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN, 
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT, 
LONG_PRESS_DETECTED:States.ERROR}, 

error:{
DELAY:States.NOT_RESPONDER, 
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN, 
RESPONDER_RELEASE:States.NOT_RESPONDER, 
RESPONDER_TERMINATED:States.NOT_RESPONDER, 
ENTER_PRESS_RECT:States.NOT_RESPONDER, 
LEAVE_PRESS_RECT:States.NOT_RESPONDER, 
LONG_PRESS_DETECTED:States.NOT_RESPONDER}};






var HIGHLIGHT_DELAY_MS=130;

var PRESS_EXPAND_PX=20;

var LONG_PRESS_THRESHOLD=500;

var LONG_PRESS_DELAY_MS=LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;

var LONG_PRESS_ALLOWED_MOVEMENT=10;



































































var TouchableMixin={







touchableGetInitialState:function(){
return {
touchable:{touchState:undefined, responderID:null}};}, 







touchableHandleResponderTerminationRequest:function(){
return !this.props.rejectResponderTermination;}, 





touchableHandleStartShouldSetResponder:function(){
return true;}, 





touchableLongPressCancelsPress:function(){
return true;}, 








touchableHandleResponderGrant:function(e, dispatchID){



e.persist();

this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
this.pressOutDelayTimeout = null;

this.state.touchable.touchState = States.NOT_RESPONDER;
this.state.touchable.responderID = dispatchID;
this._receiveSignal(Signals.RESPONDER_GRANT, e);
var delayMS=
this.touchableGetHighlightDelayMS !== undefined?
Math.max(this.touchableGetHighlightDelayMS(), 0):HIGHLIGHT_DELAY_MS;
delayMS = isNaN(delayMS)?HIGHLIGHT_DELAY_MS:delayMS;
if(delayMS !== 0){
this.touchableDelayTimeout = setTimeout(
this._handleDelay.bind(this, e), 
delayMS);}else 

{
this._handleDelay(e);}


var longDelayMS=
this.touchableGetLongPressDelayMS !== undefined?
Math.max(this.touchableGetLongPressDelayMS(), 10):LONG_PRESS_DELAY_MS;
longDelayMS = isNaN(longDelayMS)?LONG_PRESS_DELAY_MS:longDelayMS;
this.longPressDelayTimeout = setTimeout(
this._handleLongDelay.bind(this, e), 
longDelayMS + delayMS);}, 






touchableHandleResponderRelease:function(e){
this._receiveSignal(Signals.RESPONDER_RELEASE, e);}, 





touchableHandleResponderTerminate:function(e){
this._receiveSignal(Signals.RESPONDER_TERMINATED, e);}, 





touchableHandleResponderMove:function(e){


if(this.state.touchable.touchState === States.RESPONDER_INACTIVE_PRESS_IN){
return;}



if(!this.state.touchable.positionOnActivate){
return;}


var positionOnActivate=this.state.touchable.positionOnActivate;
var dimensionsOnActivate=this.state.touchable.dimensionsOnActivate;
var pressRectOffset=this.touchableGetPressRectOffset?
this.touchableGetPressRectOffset():null;
var pressExpandLeft=
pressRectOffset.left != null?pressRectOffset.left:PRESS_EXPAND_PX;
var pressExpandTop=
pressRectOffset.top != null?pressRectOffset.top:PRESS_EXPAND_PX;
var pressExpandRight=
pressRectOffset.right != null?pressRectOffset.right:PRESS_EXPAND_PX;
var pressExpandBottom=
pressRectOffset.bottom != null?pressRectOffset.bottom:PRESS_EXPAND_PX;

var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;

if(this.pressInLocation){
var movedDistance=this._getDistanceBetweenPoints(pageX, pageY, this.pressInLocation.pageX, this.pressInLocation.pageY);
if(movedDistance > LONG_PRESS_ALLOWED_MOVEMENT){
this._cancelLongPressDelayTimeout();}}



var isTouchWithinActive=
pageX > positionOnActivate.left - pressExpandLeft && 
pageY > positionOnActivate.top - pressExpandTop && 
pageX < 
positionOnActivate.left + 
dimensionsOnActivate.width + 
pressExpandRight && 
pageY < 
positionOnActivate.top + 
dimensionsOnActivate.height + 
pressExpandBottom;
if(isTouchWithinActive){
this._receiveSignal(Signals.ENTER_PRESS_RECT, e);}else 
{
this._cancelLongPressDelayTimeout();
this._receiveSignal(Signals.LEAVE_PRESS_RECT, e);}}, 

















































































_remeasureMetricsOnActivation:function(){
queryLayoutByID(
this.state.touchable.responderID, 
null, 
this._handleQueryLayout);}, 



_handleQueryLayout:function(l, t, w, h, globalX, globalY){
this.state.touchable.positionOnActivate && 
Position.release(this.state.touchable.positionOnActivate);
this.state.touchable.dimensionsOnActivate && 
BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
this.state.touchable.positionOnActivate = Position.getPooled(globalX, globalY);
this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w, h);}, 


_handleDelay:function(e){
this.touchableDelayTimeout = null;
this._receiveSignal(Signals.DELAY, e);}, 


_handleLongDelay:function(e){
this.longPressDelayTimeout = null;
this._receiveSignal(Signals.LONG_PRESS_DETECTED, e);}, 










_receiveSignal:function(signal, e){
var curState=this.state.touchable.touchState;
if(!(Transitions[curState] && Transitions[curState][signal])){
throw new Error(
'Unrecognized signal `' + signal + '` or state `' + curState + 
'` for Touchable responder `' + this.state.touchable.responderID + '`');}


var nextState=Transitions[curState][signal];
if(nextState === States.ERROR){
throw new Error(
'Touchable cannot transition from `' + curState + '` to `' + signal + 
'` for responder `' + this.state.touchable.responderID + '`');}


if(curState !== nextState){
this._performSideEffectsForTransition(curState, nextState, signal, e);
this.state.touchable.touchState = nextState;}}, 



_cancelLongPressDelayTimeout:function(){
this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
this.longPressDelayTimeout = null;}, 


_isHighlight:function(state){
return state === States.RESPONDER_ACTIVE_PRESS_IN || 
state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;}, 


_savePressInLocation:function(e){
var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;
this.pressInLocation = {pageX:pageX, pageY:pageY};}, 


_getDistanceBetweenPoints:function(aX, aY, bX, bY){
var deltaX=aX - bX;
var deltaY=aY - bY;
return Math.sqrt(deltaX * deltaX + deltaY * deltaY);}, 













_performSideEffectsForTransition:function(curState, nextState, signal, e){
var curIsHighlight=this._isHighlight(curState);
var newIsHighlight=this._isHighlight(nextState);

var isFinalSignal=
signal === Signals.RESPONDER_TERMINATED || 
signal === Signals.RESPONDER_RELEASE;

if(isFinalSignal){
this._cancelLongPressDelayTimeout();}


if(!IsActive[curState] && IsActive[nextState]){
this._remeasureMetricsOnActivation();}


if(IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED){
this.touchableHandleLongPress && this.touchableHandleLongPress();}


if(newIsHighlight && !curIsHighlight){
this._savePressInLocation(e);
this.touchableHandleActivePressIn && this.touchableHandleActivePressIn();}else 
if(!newIsHighlight && curIsHighlight && this.touchableHandleActivePressOut){
if(this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()){
this.pressOutDelayTimeout = this.setTimeout(function(){
this.touchableHandleActivePressOut();}, 
this.touchableGetPressOutDelayMS());}else 
{
this.touchableHandleActivePressOut();}}



if(IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE){
var hasLongPressHandler=!!this.props.onLongPress;
var pressIsLongButStillCallOnPress=
IsLongPressingIn[curState] && (
!hasLongPressHandler || 
!this.touchableLongPressCancelsPress());


var shouldInvokePress=!IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;
if(shouldInvokePress && this.touchableHandlePress){
this.touchableHandlePress(e);}}



this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
this.touchableDelayTimeout = null;}};




var Touchable={
Mixin:TouchableMixin};


module.exports = Touchable;
});
__d('BoundingDimensions',["PooledClass"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var PooledClass=require("PooledClass");

var twoArgumentPooler=PooledClass.twoArgumentPooler;








function BoundingDimensions(width, height){
this.width = width;
this.height = height;}






BoundingDimensions.getPooledFromElement = function(element){
return BoundingDimensions.getPooled(
element.offsetWidth, 
element.offsetHeight);};



PooledClass.addPoolingTo(BoundingDimensions, twoArgumentPooler);

module.exports = BoundingDimensions;
});
__d('Position',["PooledClass"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var PooledClass=require("PooledClass");

var twoArgumentPooler=PooledClass.twoArgumentPooler;









function Position(left, top){
this.left = left;
this.top = top;}


PooledClass.addPoolingTo(Position, twoArgumentPooler);

module.exports = Position;
});
__d('TouchEventUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










TouchEventUtils={










extractSingleTouch:function(nativeEvent){
var touches=nativeEvent.touches;
var changedTouches=nativeEvent.changedTouches;
var hasTouches=touches && touches.length > 0;
var hasChangedTouches=changedTouches && changedTouches.length > 0;

return !hasTouches && hasChangedTouches?changedTouches[0]:
hasTouches?touches[0]:
nativeEvent;}};



module.exports = TouchEventUtils;
});
__d('queryLayoutByID',["ReactNativeTagHandles","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var RCTUIManager=require('NativeModules').UIManager;
































var queryLayoutByID=function(
rootNodeID, 
onError, 
onSuccess)
{

RCTUIManager.measure(
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID], 
onSuccess);};



module.exports = queryLayoutByID;
});
__d('TextInput',["DocumentSelectionState","EventEmitter","NativeMethodsMixin","NativeModules","Platform","ReactPropTypes","React","ReactChildren","StyleSheet","Text","TextInputState","TouchableWithoutFeedback","createReactNativeComponentClass","emptyFunction","invariant","requireNativeComponent","react-timer-mixin/TimerMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var DocumentSelectionState=require('DocumentSelectionState');
var EventEmitter=require('EventEmitter');
var NativeMethodsMixin=require('NativeMethodsMixin');
var RCTUIManager=require('NativeModules').UIManager;
var Platform=require('Platform');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactChildren=require('ReactChildren');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TextInputState=require('TextInputState');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');
var requireNativeComponent=require('requireNativeComponent');

var onlyMultiline={
onSelectionChange:true, 
onTextInput:true, 
children:true};


var notMultiline={
onSubmitEditing:true};


var AndroidTextInputAttributes={
autoCapitalize:true, 
autoCorrect:true, 
autoFocus:true, 
textAlign:true, 
textAlignVertical:true, 
keyboardType:true, 
multiline:true, 
password:true, 
placeholder:true, 
placeholderTextColor:true, 
text:true, 
testID:true, 
underlineColorAndroid:true};


var viewConfigAndroid={
uiViewClassName:'AndroidTextInput', 
validAttributes:AndroidTextInputAttributes};


var RCTTextView=requireNativeComponent('RCTTextView', null);
var RCTTextField=requireNativeComponent('RCTTextField', null);


































var TextInput=React.createClass({displayName:'TextInput', 
propTypes:{








autoCapitalize:PropTypes.oneOf([
'none', 
'sentences', 
'words', 
'characters']), 




autoCorrect:PropTypes.bool, 




autoFocus:PropTypes.bool, 




textAlign:PropTypes.oneOf([
'start', 
'center', 
'end']), 





textAlignVertical:PropTypes.oneOf([
'top', 
'center', 
'bottom']), 





editable:PropTypes.bool, 








keyboardType:PropTypes.oneOf([

'default', 
'numeric', 
'email-address', 

'ascii-capable', 
'numbers-and-punctuation', 
'url', 
'number-pad', 
'phone-pad', 
'name-phone-pad', 
'decimal-pad', 
'twitter', 
'web-search']), 





returnKeyType:PropTypes.oneOf([
'default', 
'go', 
'google', 
'join', 
'next', 
'route', 
'search', 
'send', 
'yahoo', 
'done', 
'emergency-call']), 






maxLength:PropTypes.number, 





enablesReturnKeyAutomatically:PropTypes.bool, 




multiline:PropTypes.bool, 



onBlur:PropTypes.func, 



onFocus:PropTypes.func, 



onChange:PropTypes.func, 




onChangeText:PropTypes.func, 



onEndEditing:PropTypes.func, 



onSubmitEditing:PropTypes.func, 



onLayout:PropTypes.func, 



placeholder:PropTypes.string, 



placeholderTextColor:PropTypes.string, 




secureTextEntry:PropTypes.bool, 





selectionState:PropTypes.instanceOf(DocumentSelectionState), 









value:PropTypes.string, 





defaultValue:PropTypes.string, 




clearButtonMode:PropTypes.oneOf([
'never', 
'while-editing', 
'unless-editing', 
'always']), 





clearTextOnFocus:PropTypes.bool, 




selectTextOnFocus:PropTypes.bool, 



style:Text.propTypes.style, 



testID:PropTypes.string, 




underlineColorAndroid:PropTypes.string}, 






mixins:[NativeMethodsMixin, TimerMixin], 

viewConfig:Platform.OS === 'ios'?RCTTextField.viewConfig:
Platform.OS === 'android'?viewConfigAndroid:{}, 

isFocused:function(){
return TextInputState.currentlyFocusedField() === 
React.findNodeHandle(this.refs.input);}, 


getInitialState:function(){
return {
mostRecentEventCount:0};}, 



contextTypes:{
onFocusRequested:React.PropTypes.func, 
focusEmitter:React.PropTypes.instanceOf(EventEmitter)}, 


_focusSubscription:undefined, 

componentDidMount:function(){var _this=this;
if(!this.context.focusEmitter){
if(this.props.autoFocus){
this.requestAnimationFrame(this.focus);}

return;}

this._focusSubscription = this.context.focusEmitter.addListener(
'focus', 
function(el){
if(_this === el){
_this.requestAnimationFrame(_this.focus);}else 
if(_this.isFocused()){
_this.blur();}});



if(this.props.autoFocus){
this.context.onFocusRequested(this);}}, 



componentWillUnmount:function(){
this._focusSubscription && this._focusSubscription.remove();
if(this.isFocused()){
this.blur();}}, 



getChildContext:function(){
return {isInAParentText:true};}, 


childContextTypes:{
isInAParentText:React.PropTypes.bool}, 


clear:function(){
this.setNativeProps({text:''});}, 


render:function(){
if(Platform.OS === 'ios'){
return this._renderIOS();}else 
if(Platform.OS === 'android'){
return this._renderAndroid();}}, 



_getText:function(){
return typeof this.props.value === 'string'?
this.props.value:
this.props.defaultValue;}, 


_renderIOS:function(){
var textContainer;

var props=Object.assign({}, this.props);
props.style = [styles.input, this.props.style];
if(!props.multiline){
for(var propKey in onlyMultiline) {
if(props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` is only supported with multiline.');}}



textContainer = 
React.createElement(RCTTextField, _extends({
ref:'input'}, 
props, {
onFocus:this._onFocus, 
onBlur:this._onBlur, 
onChange:this._onChange, 
onSelectionChangeShouldSetResponder:function(){return true;}, 
text:this._getText(), 
mostRecentEventCount:this.state.mostRecentEventCount}));}else 

{
for(var propKey in notMultiline) {
if(props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` cannot be used with multiline.');}}




var children=props.children;
var childCount=0;
ReactChildren.forEach(children, function(){return ++childCount;});
invariant(
!(props.value && childCount), 
'Cannot specify both value and children.');

if(childCount > 1){
children = React.createElement(Text, null, children);}

if(props.inputView){
children = [children, props.inputView];}

textContainer = 
React.createElement(RCTTextView, _extends({
ref:'input'}, 
props, {
children:children, 
mostRecentEventCount:this.state.mostRecentEventCount, 
onFocus:this._onFocus, 
onBlur:this._onBlur, 
onChange:this._onChange, 
onSelectionChange:this._onSelectionChange, 
onTextInput:this._onTextInput, 
onSelectionChangeShouldSetResponder:emptyFunction.thatReturnsTrue, 
text:this._getText()}));}



return (
React.createElement(TouchableWithoutFeedback, {
onPress:this._onPress, 
rejectResponderTermination:true, 
testID:props.testID}, 
textContainer));}, 




_renderAndroid:function(){
var autoCapitalize=RCTUIManager.UIText.AutocapitalizationType[this.props.autoCapitalize];
var textAlign=
RCTUIManager.AndroidTextInput.Constants.TextAlign[this.props.textAlign];
var textAlignVertical=
RCTUIManager.AndroidTextInput.Constants.TextAlignVertical[this.props.textAlignVertical];
var children=this.props.children;
var childCount=0;
ReactChildren.forEach(children, function(){return ++childCount;});
invariant(
!(this.props.value && childCount), 
'Cannot specify both value and children.');

if(childCount > 1){
children = React.createElement(Text, null, children);}

var textContainer=
React.createElement(AndroidTextInput, {
ref:'input', 
style:[this.props.style], 
autoCapitalize:autoCapitalize, 
autoCorrect:this.props.autoCorrect, 
textAlign:textAlign, 
textAlignVertical:textAlignVertical, 
keyboardType:this.props.keyboardType, 
multiline:this.props.multiline, 
onFocus:this._onFocus, 
onBlur:this._onBlur, 
onChange:this._onChange, 
onTextInput:this._onTextInput, 
onEndEditing:this.props.onEndEditing, 
onSubmitEditing:this.props.onSubmitEditing, 
onLayout:this.props.onLayout, 
password:this.props.password || this.props.secureTextEntry, 
placeholder:this.props.placeholder, 
placeholderTextColor:this.props.placeholderTextColor, 
text:this._getText(), 
underlineColorAndroid:this.props.underlineColorAndroid, 
children:children});


return (
React.createElement(TouchableWithoutFeedback, {
onPress:this._onPress, 
testID:this.props.testID}, 
textContainer));}, 




_onFocus:function(event){
if(this.props.onFocus){
this.props.onFocus(event);}}, 



_onPress:function(event){
if(this.props.editable || this.props.editable === undefined){
this.focus();}}, 



_onChange:function(event){var _this2=this;
var text=event.nativeEvent.text;
var eventCount=event.nativeEvent.eventCount;
this.props.onChange && this.props.onChange(event);
this.props.onChangeText && this.props.onChangeText(text);
this.setState({mostRecentEventCount:eventCount}, function(){



if(text !== _this2.props.value && typeof _this2.props.value === 'string'){
_this2.refs.input.setNativeProps({
text:_this2.props.value});}});}, 





_onBlur:function(event){
this.blur();
if(this.props.onBlur){
this.props.onBlur(event);}}, 



_onSelectionChange:function(event){
if(this.props.selectionState){
var selection=event.nativeEvent.selection;
this.props.selectionState.update(selection.start, selection.end);}

this.props.onSelectionChange && this.props.onSelectionChange(event);}, 


_onTextInput:function(event){
this.props.onTextInput && this.props.onTextInput(event);}});



var styles=StyleSheet.create({
input:{
alignSelf:'stretch'}});



var AndroidTextInput=createReactNativeComponentClass({
validAttributes:AndroidTextInputAttributes, 
uiViewClassName:'AndroidTextInput'});


module.exports = TextInput;
});
__d('DocumentSelectionState',["mixInEventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var mixInEventEmitter=require('mixInEventEmitter');var 










DocumentSelectionState=(function(){




function DocumentSelectionState(anchor, focus){_classCallCheck(this, DocumentSelectionState);
this._anchorOffset = anchor;
this._focusOffset = focus;
this._hasFocus = false;}_createClass(DocumentSelectionState, [{key:'update', value:









function update(anchor, focus){
if(this._anchorOffset !== anchor || this._focusOffset !== focus){
this._anchorOffset = anchor;
this._focusOffset = focus;
this.emit('update');}}}, {key:'constrainLength', value:









function constrainLength(maxLength){
this.update(
Math.min(this._anchorOffset, maxLength), 
Math.min(this._focusOffset, maxLength));}}, {key:'focus', value:



function focus(){
if(!this._hasFocus){
this._hasFocus = true;
this.emit('focus');}}}, {key:'blur', value:



function blur(){
if(this._hasFocus){
this._hasFocus = false;
this.emit('blur');}}}, {key:'hasFocus', value:






function hasFocus(){
return this._hasFocus;}}, {key:'isCollapsed', value:





function isCollapsed(){
return this._anchorOffset === this._focusOffset;}}, {key:'isBackward', value:





function isBackward(){
return this._anchorOffset > this._focusOffset;}}, {key:'getAnchorOffset', value:





function getAnchorOffset(){
return this._hasFocus?this._anchorOffset:null;}}, {key:'getFocusOffset', value:





function getFocusOffset(){
return this._hasFocus?this._focusOffset:null;}}, {key:'getStartOffset', value:





function getStartOffset(){
return (
this._hasFocus?Math.min(this._anchorOffset, this._focusOffset):null);}}, {key:'getEndOffset', value:






function getEndOffset(){
return (
this._hasFocus?Math.max(this._anchorOffset, this._focusOffset):null);}}, {key:'overlaps', value:








function overlaps(start, end){
return (
this.hasFocus() && 
this.getStartOffset() <= end && start <= this.getEndOffset());}}]);return DocumentSelectionState;})();




mixInEventEmitter(DocumentSelectionState, {
'blur':true, 
'focus':true, 
'update':true});


module.exports = DocumentSelectionState;
});
__d('mixInEventEmitter',["EventEmitter","EventEmitterWithHolding","EventHolder","EventValidator","copyProperties","invariant","keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
















EventEmitter=require('EventEmitter');
var EventEmitterWithHolding=require('EventEmitterWithHolding');
var EventHolder=require('EventHolder');
var EventValidator=require('EventValidator');

var copyProperties=require('copyProperties');
var invariant=require('invariant');
var keyOf=require('keyOf');

var TYPES_KEY=keyOf({__types:true});






















function mixInEventEmitter(klass, types){
invariant(types, 'Must supply set of valid event types');
invariant(!this.__eventEmitter, 'An active emitter is already mixed in');



var target=klass.prototype || klass;

var ctor=klass.constructor;
if(ctor){
invariant(
ctor === Object || ctor === Function, 
'Mix EventEmitter into a class, not an instance');}





if(target.hasOwnProperty(TYPES_KEY)){
copyProperties(target.__types, types);}else 
if(target.__types){
target.__types = copyProperties({}, target.__types, types);}else 
{
target.__types = types;}

copyProperties(target, EventEmitterMixin);}


var EventEmitterMixin={
emit:function(eventType, a, b, c, d, e, _){
return this.__getEventEmitter().emit(eventType, a, b, c, d, e, _);}, 


emitAndHold:function(eventType, a, b, c, d, e, _){
return this.__getEventEmitter().emitAndHold(eventType, a, b, c, d, e, _);}, 


addListener:function(eventType, listener, context){
return this.__getEventEmitter().addListener(eventType, listener, context);}, 


once:function(eventType, listener, context){
return this.__getEventEmitter().once(eventType, listener, context);}, 


addRetroactiveListener:function(eventType, listener, context){
return this.__getEventEmitter().addRetroactiveListener(
eventType, 
listener, 
context);}, 



addListenerMap:function(listenerMap, context){
return this.__getEventEmitter().addListenerMap(listenerMap, context);}, 


addRetroactiveListenerMap:function(listenerMap, context){
return this.__getEventEmitter().addListenerMap(listenerMap, context);}, 


removeAllListeners:function(){
this.__getEventEmitter().removeAllListeners();}, 


removeCurrentListener:function(){
this.__getEventEmitter().removeCurrentListener();}, 


releaseHeldEventType:function(eventType){
this.__getEventEmitter().releaseHeldEventType(eventType);}, 


__getEventEmitter:function(){
if(!this.__eventEmitter){
var emitter=new EventEmitter();
emitter = EventValidator.addValidation(emitter, this.__types);

var holder=new EventHolder();
this.__eventEmitter = new EventEmitterWithHolding(emitter, holder);}

return this.__eventEmitter;}};



module.exports = mixInEventEmitter;
});
__d('EventEmitterWithHolding',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






























EventEmitterWithHolding=(function(){







function EventEmitterWithHolding(emitter, holder){_classCallCheck(this, EventEmitterWithHolding);
this._emitter = emitter;
this._eventHolder = holder;
this._currentEventToken = null;
this._emittingHeldEvents = false;}_createClass(EventEmitterWithHolding, [{key:'addListener', value:





function addListener(eventType, listener, context){
return this._emitter.addListener(eventType, listener, context);}}, {key:'once', value:





function once(eventType, listener, context){
return this._emitter.once(eventType, listener, context);}}, {key:'addRetroactiveListener', value:






















function addRetroactiveListener(
eventType, listener, context){
var subscription=this._emitter.addListener(eventType, listener, context);

this._emittingHeldEvents = true;
this._eventHolder.emitToListener(eventType, listener, context);
this._emittingHeldEvents = false;

return subscription;}}, {key:'removeAllListeners', value:





function removeAllListeners(eventType){
this._emitter.removeAllListeners(eventType);}}, {key:'removeCurrentListener', value:





function removeCurrentListener(){
this._emitter.removeCurrentListener();}}, {key:'listeners', value:





function listeners(eventType){
return this._emitter.listeners(eventType);}}, {key:'emit', value:





function emit(eventType, a, b, c, d, e, _){
this._emitter.emit(eventType, a, b, c, d, e, _);}}, {key:'emitAndHold', value:

















function emitAndHold(eventType, a, b, c, d, e, _){
this._currentEventToken = this._eventHolder.holdEvent(
eventType, 
a, b, c, d, e, _);

this._emitter.emit(eventType, a, b, c, d, e, _);
this._currentEventToken = null;}}, {key:'releaseCurrentEvent', value:





function releaseCurrentEvent(){
if(this._currentEventToken !== null){
this._eventHolder.releaseEvent(this._currentEventToken);}else 
if(this._emittingHeldEvents){
this._eventHolder.releaseCurrentEvent();}}}, {key:'releaseHeldEventType', value:







function releaseHeldEventType(eventType){
this._eventHolder.releaseEventType(eventType);}}]);return EventEmitterWithHolding;})();



module.exports = EventEmitterWithHolding;
});
__d('EventHolder',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 

EventHolder=(function(){
function EventHolder(){_classCallCheck(this, EventHolder);
this._heldEvents = {};
this._currentEventKey = null;}_createClass(EventHolder, [{key:'holdEvent', value:























function holdEvent(eventType, a, b, c, d, e, _){
this._heldEvents[eventType] = this._heldEvents[eventType] || [];
var eventsOfType=this._heldEvents[eventType];
var key={
eventType:eventType, 
index:eventsOfType.length};

eventsOfType.push([a, b, c, d, e, _]);
return key;}}, {key:'emitToListener', value:










function emitToListener(eventType, listener, context){var _this=this;
var eventsOfType=this._heldEvents[eventType];
if(!eventsOfType){
return;}

var origEventKey=this._currentEventKey;
eventsOfType.forEach(function(eventHeld, index){
if(!eventHeld){
return;}

_this._currentEventKey = {
eventType:eventType, 
index:index};

listener.apply(context, eventHeld);});

this._currentEventKey = origEventKey;}}, {key:'releaseCurrentEvent', value:










function releaseCurrentEvent(){
invariant(
this._currentEventKey !== null, 
'Not in an emitting cycle; there is no current event');

this.releaseEvent(this._currentEventKey);}}, {key:'releaseEvent', value:








function releaseEvent(token){
delete this._heldEvents[token.eventType][token.index];}}, {key:'releaseEventType', value:







function releaseEventType(type){
this._heldEvents[type] = [];}}]);return EventHolder;})();



module.exports = EventHolder;
});
__d('EventValidator',["copyProperties"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var copyProperties=require('copyProperties');










var EventValidator={










addValidation:function(emitter, types){
var eventTypes=Object.keys(types);
var emitterWithValidation=Object.create(emitter);

copyProperties(emitterWithValidation, {
emit:function emit(type, a, b, c, d, e, _){
assertAllowsEventType(type, eventTypes);
return emitter.emit.call(this, type, a, b, c, d, e, _);}});



return emitterWithValidation;}};



function assertAllowsEventType(type, allowedTypes){
if(allowedTypes.indexOf(type) === -1){
throw new TypeError(errorMessageFor(type, allowedTypes));}}



function errorMessageFor(type, allowedTypes){
var message='Unknown event type "' + type + '". ';
if(__DEV__){
message += recommendationFor(type, allowedTypes);}

message += 'Known event types: ' + allowedTypes.join(', ') + '.';
return message;}



if(__DEV__){
var recommendationFor=function(type, allowedTypes){
var closestTypeRecommendation=closestTypeFor(type, allowedTypes);
if(isCloseEnough(closestTypeRecommendation, type)){
return 'Did you mean "' + closestTypeRecommendation.type + '"? ';}else 
{
return '';}};



var closestTypeFor=function(type, allowedTypes){
var typeRecommendations=allowedTypes.map(
typeRecommendationFor.bind(this, type));

return typeRecommendations.sort(recommendationSort)[0];};


var typeRecommendationFor=function(type, recomendedType){
return {
type:recomendedType, 
distance:damerauLevenshteinDistance(type, recomendedType)};};



var recommendationSort=function(recommendationA, recommendationB){
if(recommendationA.distance < recommendationB.distance){
return -1;}else 
if(recommendationA.distance > recommendationB.distance){
return 1;}else 
{
return 0;}};



var isCloseEnough=function(closestType, actualType){
return closestType.distance / actualType.length < 0.334;};


var damerauLevenshteinDistance=function(a, b){
var i, j;
var d=[];

for(i = 0; i <= a.length; i++) {
d[i] = [i];}


for(j = 1; j <= b.length; j++) {
d[0][j] = j;}


for(i = 1; i <= a.length; i++) {
for(j = 1; j <= b.length; j++) {
var cost=a.charAt(i - 1) === b.charAt(j - 1)?0:1;

d[i][j] = Math.min(
d[i - 1][j] + 1, 
d[i][j - 1] + 1, 
d[i - 1][j - 1] + cost);


if(i > 1 && j > 1 && 
a.charAt(i - 1) == b.charAt(j - 2) && 
a.charAt(i - 2) == b.charAt(j - 1)){
d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);}}}




return d[a.length][b.length];};}



module.exports = EventValidator;
});
__d('copyProperties',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 























copyProperties(obj, a, b, c, d, e, f){
obj = obj || {};

if(__DEV__){
if(f){
throw new Error('Too many arguments passed to copyProperties');}}



var args=[a, b, c, d, e];
var ii=0, v;
while(args[ii]) {
v = args[ii++];
for(var k in v) {
obj[k] = v[k];}




if(v.hasOwnProperty && v.hasOwnProperty('toString') && 
typeof v.toString != 'undefined' && obj.toString !== v.toString){
obj.toString = v.toString;}}



return obj;}


module.exports = copyProperties;
});
__d('TouchableWithoutFeedback',["React","Touchable","ensurePositiveDelayProps","onlyChild","react-timer-mixin/TimerMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var onlyChild=require('onlyChild');







var PRESS_RECT_OFFSET={top:20, left:20, right:20, bottom:30};








var TouchableWithoutFeedback=React.createClass({displayName:'TouchableWithoutFeedback', 
mixins:[TimerMixin, Touchable.Mixin], 

propTypes:{




accessible:React.PropTypes.bool, 
onPress:React.PropTypes.func, 
onPressIn:React.PropTypes.func, 
onPressOut:React.PropTypes.func, 
onLongPress:React.PropTypes.func, 



delayPressIn:React.PropTypes.number, 



delayPressOut:React.PropTypes.number, 



delayLongPress:React.PropTypes.number}, 


getInitialState:function(){
return this.touchableGetInitialState();}, 


componentDidMount:function(){
ensurePositiveDelayProps(this.props);}, 


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);}, 






touchableHandlePress:function(e){
this.props.onPress && this.props.onPress(e);}, 


touchableHandleActivePressIn:function(){
this.props.onPressIn && this.props.onPressIn();}, 


touchableHandleActivePressOut:function(){
this.props.onPressOut && this.props.onPressOut();}, 


touchableHandleLongPress:function(){
this.props.onLongPress && this.props.onLongPress();}, 


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;}, 


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn || 0;}, 


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress === 0?0:
this.props.delayLongPress || 500;}, 


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut || 0;}, 


render:function(){

return React.cloneElement(onlyChild(this.props.children), {
accessible:this.props.accessible !== false, 
testID:this.props.testID, 
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder, 
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest, 
onResponderGrant:this.touchableHandleResponderGrant, 
onResponderMove:this.touchableHandleResponderMove, 
onResponderRelease:this.touchableHandleResponderRelease, 
onResponderTerminate:this.touchableHandleResponderTerminate});}});




module.exports = TouchableWithoutFeedback;
});
__d('ensurePositiveDelayProps',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');

var ensurePositiveDelayProps=function(props){
invariant(
!(props.delayPressIn < 0 || props.delayPressOut < 0 || 
props.delayLongPress < 0), 
'Touchable components cannot have negative delay properties');};



module.exports = ensurePositiveDelayProps;
});
__d('TouchableHighlight',["NativeMethodsMixin","React","ReactNativeViewAttributes","StyleSheet","Touchable","TouchableWithoutFeedback","View","cloneWithProps","ensureComponentIsNative","ensurePositiveDelayProps","keyOf","merge","onlyChild","react-timer-mixin/TimerMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var cloneWithProps=require('cloneWithProps');
var ensureComponentIsNative=require('ensureComponentIsNative');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var keyOf=require('keyOf');
var merge=require('merge');
var onlyChild=require('onlyChild');

var DEFAULT_PROPS={
activeOpacity:0.8, 
underlayColor:'black'};


























var TouchableHighlight=React.createClass({displayName:'TouchableHighlight', 
propTypes:_extends({}, 
TouchableWithoutFeedback.propTypes, {




activeOpacity:React.PropTypes.number, 




underlayColor:React.PropTypes.string, 
style:View.propTypes.style, 



onShowUnderlay:React.PropTypes.func, 



onHideUnderlay:React.PropTypes.func}), 


mixins:[NativeMethodsMixin, TimerMixin, Touchable.Mixin], 

getDefaultProps:function(){return DEFAULT_PROPS;}, 


computeSyntheticState:function(props){
return {
activeProps:{
style:{
opacity:props.activeOpacity}}, 


activeUnderlayProps:{
style:{
backgroundColor:props.underlayColor}}, 


underlayStyle:[
INACTIVE_UNDERLAY_PROPS.style, 
props.style]};}, 




getInitialState:function(){
return merge(
this.touchableGetInitialState(), this.computeSyntheticState(this.props));}, 



componentDidMount:function(){
ensurePositiveDelayProps(this.props);
ensureComponentIsNative(this.refs[CHILD_REF]);}, 


componentDidUpdate:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);}, 


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);
if(nextProps.activeOpacity !== this.props.activeOpacity || 
nextProps.underlayColor !== this.props.underlayColor || 
nextProps.style !== this.props.style){
this.setState(this.computeSyntheticState(nextProps));}}, 



viewConfig:{
uiViewClassName:'RCTView', 
validAttributes:ReactNativeViewAttributes.RCTView}, 






touchableHandleActivePressIn:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
this._showUnderlay();
this.props.onPressIn && this.props.onPressIn();}, 


touchableHandleActivePressOut:function(){
if(!this._hideTimeout){
this._hideUnderlay();}

this.props.onPressOut && this.props.onPressOut();}, 


touchableHandlePress:function(){
this.clearTimeout(this._hideTimeout);
this._showUnderlay();
this._hideTimeout = this.setTimeout(this._hideUnderlay, 
this.props.delayPressOut || 100);
this.props.onPress && this.props.onPress();}, 


touchableHandleLongPress:function(){
this.props.onLongPress && this.props.onLongPress();}, 


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;}, 


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn;}, 


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress;}, 


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;}, 


_showUnderlay:function(){
if(!this.isMounted()){
return;}


this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
this.refs[CHILD_REF].setNativeProps(this.state.activeProps);
this.props.onShowUnderlay && this.props.onShowUnderlay();}, 


_hideUnderlay:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
if(this.refs[UNDERLAY_REF]){
this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
this.refs[UNDERLAY_REF].setNativeProps(_extends({}, 
INACTIVE_UNDERLAY_PROPS, {
style:this.state.underlayStyle}));

this.props.onHideUnderlay && this.props.onHideUnderlay();}}, 



render:function(){
return (
React.createElement(View, {
ref:UNDERLAY_REF, 
style:this.state.underlayStyle, 
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder, 
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest, 
onResponderGrant:this.touchableHandleResponderGrant, 
onResponderMove:this.touchableHandleResponderMove, 
onResponderRelease:this.touchableHandleResponderRelease, 
onResponderTerminate:this.touchableHandleResponderTerminate}, 
cloneWithProps(
onlyChild(this.props.children), 
{
ref:CHILD_REF, 
accessible:true, 
testID:this.props.testID})));}});







var PRESS_RECT_OFFSET={top:20, left:20, right:20, bottom:30};
var CHILD_REF=keyOf({childRef:null});
var UNDERLAY_REF=keyOf({underlayRef:null});
var INACTIVE_CHILD_PROPS={
style:StyleSheet.create({x:{opacity:1.0}}).x};

var INACTIVE_UNDERLAY_PROPS={
style:StyleSheet.create({x:{backgroundColor:'transparent'}}).x};


module.exports = TouchableHighlight;
});
__d('cloneWithProps',["ReactElement","ReactPropTransferer","keyOf","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactElement=require('ReactElement');
var ReactPropTransferer=require('ReactPropTransferer');

var keyOf=require('keyOf');
var warning=require('warning');

var CHILDREN_PROP=keyOf({children:null});










function cloneWithProps(child, props){
if(__DEV__){
warning(
!child.ref, 
'You are calling cloneWithProps() on a child with a ref. This is ' + 
'dangerous because you\'re creating a new child which will not be ' + 
'added as a ref to its parent.');}



var newProps=ReactPropTransferer.mergeProps(props, child.props);


if(!newProps.hasOwnProperty(CHILDREN_PROP) && 
child.props.hasOwnProperty(CHILDREN_PROP)){
newProps.children = child.props.children;}




return ReactElement.createElement(child.type, newProps);}


module.exports = cloneWithProps;
});
__d('ReactPropTransferer',["Object.assign","emptyFunction","joinClasses"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var joinClasses=require('joinClasses');








function createTransferStrategy(mergeStrategy){
return function(props, key, value){
if(!props.hasOwnProperty(key)){
props[key] = value;}else 
{
props[key] = mergeStrategy(props[key], value);}};}




var transferStrategyMerge=createTransferStrategy(function(a, b){



return assign({}, b, a);});







var TransferStrategies={



children:emptyFunction, 



className:createTransferStrategy(joinClasses), 



style:transferStrategyMerge};










function transferInto(props, newProps){
for(var thisKey in newProps) {
if(!newProps.hasOwnProperty(thisKey)){
continue;}


var transferStrategy=TransferStrategies[thisKey];

if(transferStrategy && TransferStrategies.hasOwnProperty(thisKey)){
transferStrategy(props, thisKey, newProps[thisKey]);}else 
if(!props.hasOwnProperty(thisKey)){
props[thisKey] = newProps[thisKey];}}


return props;}








var ReactPropTransferer={








mergeProps:function(oldProps, newProps){
return transferInto(assign({}, oldProps), newProps);}};




module.exports = ReactPropTransferer;
});
__d('joinClasses',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















function joinClasses(className){
if(!className){
className = '';}

var nextClass;
var argLength=arguments.length;
if(argLength > 1){
for(var ii=1; ii < argLength; ii++) {
nextClass = arguments[ii];
if(nextClass){
className = (className?className + ' ':'') + nextClass;}}}



return className;}


module.exports = joinClasses;
});
__d('ensureComponentIsNative',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');

var ensureComponentIsNative=function(component){
invariant(
component && typeof component.setNativeProps === 'function', 
'Touchable child must either be native or forward setNativeProps to a ' + 
'native component');};



module.exports = ensureComponentIsNative;
});
__d('TouchableOpacity',["Animated","NativeMethodsMixin","React","Touchable","TouchableWithoutFeedback","ensurePositiveDelayProps","flattenStyle","keyOf","react-timer-mixin/TimerMixin.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};













var Animated=require('Animated');
var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var flattenStyle=require('flattenStyle');
var keyOf=require('keyOf');


























var TouchableOpacity=React.createClass({displayName:'TouchableOpacity', 
mixins:[TimerMixin, Touchable.Mixin, NativeMethodsMixin], 

propTypes:_extends({}, 
TouchableWithoutFeedback.propTypes, {




activeOpacity:React.PropTypes.number}), 


getDefaultProps:function(){
return {
activeOpacity:0.2};}, 



getInitialState:function(){
return _extends({}, 
this.touchableGetInitialState(), {
anim:new Animated.Value(1)});}, 



componentDidMount:function(){
ensurePositiveDelayProps(this.props);}, 


componentDidUpdate:function(){}, 


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);}, 


setOpacityTo:function(value){
Animated.timing(
this.state.anim, 
{toValue:value, duration:150}).
start();}, 






touchableHandleActivePressIn:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
this._opacityActive();
this.props.onPressIn && this.props.onPressIn();}, 


touchableHandleActivePressOut:function(){
if(!this._hideTimeout){
this._opacityInactive();}

this.props.onPressOut && this.props.onPressOut();}, 


touchableHandlePress:function(){
this.clearTimeout(this._hideTimeout);
this._opacityActive();
this._hideTimeout = this.setTimeout(
this._opacityInactive, 
this.props.delayPressOut || 100);

this.props.onPress && this.props.onPress();}, 


touchableHandleLongPress:function(){
this.props.onLongPress && this.props.onLongPress();}, 


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;}, 


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn || 0;}, 


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress === 0?0:
this.props.delayLongPress || 500;}, 


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;}, 


_opacityActive:function(){
this.setOpacityTo(this.props.activeOpacity);}, 


_opacityInactive:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
var childStyle=flattenStyle(this.props.style) || {};
this.setOpacityTo(
childStyle.opacity === undefined?1:childStyle.opacity);}, 



render:function(){
return (
React.createElement(Animated.View, {
accessible:true, 
style:[this.props.style, {opacity:this.state.anim}], 
testID:this.props.testID, 
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder, 
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest, 
onResponderGrant:this.touchableHandleResponderGrant, 
onResponderMove:this.touchableHandleResponderMove, 
onResponderRelease:this.touchableHandleResponderRelease, 
onResponderTerminate:this.touchableHandleResponderTerminate}, 
this.props.children));}});











var PRESS_RECT_OFFSET={top:20, left:20, right:20, bottom:30};


module.exports = TouchableOpacity;
});
__d('Animated',["Interpolation","Easing","Image","InteractionManager","Interpolation","React","Set","Text","View","invariant","flattenStyle","requestAnimationFrame","rebound/rebound.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};var _get=function get(object, property, receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object, property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent, property, receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}










'use strict';

var Easing=require('Easing');
var Image=require('Image');
var InteractionManager=require('InteractionManager');
var Interpolation=require('Interpolation');
var React=require('React');
var Set=require('Set');
var Text=require('Text');
var View=require('View');
var invariant=require('invariant');

var flattenStyle=require('flattenStyle');
var rebound=require('rebound/rebound.js');
var requestAnimationFrame=require('requestAnimationFrame');var 








Animated=(function(){function Animated(){_classCallCheck(this, Animated);}_createClass(Animated, [{key:'attach', value:
function attach(){}}, {key:'detach', value:
function detach(){}}, {key:'__getValue', value:
function __getValue(){}}, {key:'getAnimatedValue', value:
function getAnimatedValue(){return this.__getValue();}}, {key:'addChild', value:
function addChild(child){}}, {key:'removeChild', value:
function removeChild(child){}}, {key:'getChildren', value:
function getChildren(){return [];}}]);return Animated;})();var 





Animation=(function(){function Animation(){_classCallCheck(this, Animation);}_createClass(Animation, [{key:'start', value:


function start(
fromValue, 
onUpdate, 
onEnd, 
previousAnimation)
{}}, {key:'stop', value:
function stop(){}}, {key:'__debouncedOnEnd', value:

function __debouncedOnEnd(result){
var onEnd=this.__onEnd;
this.__onEnd = null;
onEnd && onEnd(result);}}]);return Animation;})();var 



AnimatedWithChildren=(function(_Animated){


function AnimatedWithChildren(){_classCallCheck(this, AnimatedWithChildren);
_get(Object.getPrototypeOf(AnimatedWithChildren.prototype), 'constructor', this).call(this);
this._children = [];}_inherits(AnimatedWithChildren, _Animated);_createClass(AnimatedWithChildren, [{key:'addChild', value:


function addChild(child){
if(this._children.length === 0){
this.attach();}

this._children.push(child);}}, {key:'removeChild', value:


function removeChild(child){
var index=this._children.indexOf(child);
if(index === -1){
console.warn('Trying to remove a child that doesn\'t exist');
return;}

this._children.splice(index, 1);
if(this._children.length === 0){
this.detach();}}}, {key:'getChildren', value:



function getChildren(){
return this._children;}}]);return AnimatedWithChildren;})(Animated);

























function _flush(rootNode){
var animatedStyles=new Set();
function findAnimatedStyles(node){
if(typeof node.update === 'function'){
animatedStyles.add(node);}else 
{
node.getChildren().forEach(findAnimatedStyles);}}


findAnimatedStyles(rootNode);
animatedStyles.forEach(function(animatedStyle){return animatedStyle.update();});}









var easeInOut=Easing.inOut(Easing.ease);var 

TimingAnimation=(function(_Animation){










function TimingAnimation(
config)
{_classCallCheck(this, TimingAnimation);
_get(Object.getPrototypeOf(TimingAnimation.prototype), 'constructor', this).call(this);
this._toValue = config.toValue;
this._easing = config.easing || easeInOut;
this._duration = config.duration !== undefined?config.duration:500;
this._delay = config.delay || 0;}_inherits(TimingAnimation, _Animation);_createClass(TimingAnimation, [{key:'start', value:


function start(
fromValue, 
onUpdate, 
onEnd)
{var _this=this;
this.__active = true;
this._fromValue = fromValue;
this._onUpdate = onUpdate;
this.__onEnd = onEnd;

var start=function(){
if(_this._duration === 0){
_this._onUpdate(_this._toValue);
_this.__debouncedOnEnd({finished:true});}else 
{
_this._startTime = Date.now();
_this._animationFrame = requestAnimationFrame(_this.onUpdate.bind(_this));}};


if(this._delay){
this._timeout = setTimeout(start, this._delay);}else 
{
start();}}}, {key:'onUpdate', value:



function onUpdate(){
var now=Date.now();
if(now >= this._startTime + this._duration){
if(this._duration === 0){
this._onUpdate(this._toValue);}else 
{
this._onUpdate(
this._fromValue + this._easing(1) * (this._toValue - this._fromValue));}


this.__debouncedOnEnd({finished:true});
return;}


this._onUpdate(
this._fromValue + 
this._easing((now - this._startTime) / this._duration) * (
this._toValue - this._fromValue));

if(this.__active){
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}}}, {key:'stop', value:



function stop(){
this.__active = false;
clearTimeout(this._timeout);
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return TimingAnimation;})(Animation);var 













DecayAnimation=(function(_Animation2){








function DecayAnimation(
config)
{_classCallCheck(this, DecayAnimation);
_get(Object.getPrototypeOf(DecayAnimation.prototype), 'constructor', this).call(this);
this._deceleration = config.deceleration || 0.998;
this._velocity = config.velocity;}_inherits(DecayAnimation, _Animation2);_createClass(DecayAnimation, [{key:'start', value:


function start(
fromValue, 
onUpdate, 
onEnd)
{
this.__active = true;
this._lastValue = fromValue;
this._fromValue = fromValue;
this._onUpdate = onUpdate;
this.__onEnd = onEnd;
this._startTime = Date.now();
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}}, {key:'onUpdate', value:


function onUpdate(){
var now=Date.now();

var value=this._fromValue + 
this._velocity / (1 - this._deceleration) * (
1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));

this._onUpdate(value);

if(Math.abs(this._lastValue - value) < 0.1){
this.__debouncedOnEnd({finished:true});
return;}


this._lastValue = value;
if(this.__active){
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}}}, {key:'stop', value:



function stop(){
this.__active = false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return DecayAnimation;})(Animation);



























function withDefault(value, defaultValue){
if(value === undefined || value === null){
return defaultValue;}

return value;}var 


SpringAnimation=(function(_Animation3){















function SpringAnimation(
config)
{_classCallCheck(this, SpringAnimation);
_get(Object.getPrototypeOf(SpringAnimation.prototype), 'constructor', this).call(this);

this._overshootClamping = withDefault(config.overshootClamping, false);
this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);
this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);
this._initialVelocity = config.velocity;
this._lastVelocity = withDefault(config.velocity, 0);
this._toValue = config.toValue;

var springConfig;
if(config.bounciness !== undefined || config.speed !== undefined){
invariant(
config.tension === undefined && config.friction === undefined, 
'You can only define bounciness/speed or tension/friction but not both');

springConfig = rebound.SpringConfig.fromBouncinessAndSpeed(
withDefault(config.bounciness, 8), 
withDefault(config.speed, 12));}else 

{
springConfig = rebound.SpringConfig.fromOrigamiTensionAndFriction(
withDefault(config.tension, 40), 
withDefault(config.friction, 7));}


this._tension = springConfig.tension;
this._friction = springConfig.friction;}_inherits(SpringAnimation, _Animation3);_createClass(SpringAnimation, [{key:'start', value:


function start(
fromValue, 
onUpdate, 
onEnd, 
previousAnimation)
{
this.__active = true;
this._startPosition = fromValue;
this._lastPosition = this._startPosition;

this._onUpdate = onUpdate;
this.__onEnd = onEnd;
this._lastTime = Date.now();

if(previousAnimation instanceof SpringAnimation){
var internalState=previousAnimation.getInternalState();
this._lastPosition = internalState.lastPosition;
this._lastVelocity = internalState.lastVelocity;
this._lastTime = internalState.lastTime;}

if(this._initialVelocity !== undefined && 
this._initialVelocity !== null){
this._lastVelocity = this._initialVelocity;}

this.onUpdate();}}, {key:'getInternalState', value:


function getInternalState(){
return {
lastPosition:this._lastPosition, 
lastVelocity:this._lastVelocity, 
lastTime:this._lastTime};}}, {key:'onUpdate', value:



function onUpdate(){
var position=this._lastPosition;
var velocity=this._lastVelocity;

var tempPosition=this._lastPosition;
var tempVelocity=this._lastVelocity;





var MAX_STEPS=64;
var now=Date.now();
if(now > this._lastTime + MAX_STEPS){
now = this._lastTime + MAX_STEPS;}





var TIMESTEP_MSEC=1;
var numSteps=Math.floor((now - this._lastTime) / TIMESTEP_MSEC);

for(var i=0; i < numSteps; ++i) {

var step=TIMESTEP_MSEC / 1000;



var aVelocity=velocity;
var aAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
var tempPosition=position + aVelocity * step / 2;
var tempVelocity=velocity + aAcceleration * step / 2;

var bVelocity=tempVelocity;
var bAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + bVelocity * step / 2;
tempVelocity = velocity + bAcceleration * step / 2;

var cVelocity=tempVelocity;
var cAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + cVelocity * step / 2;
tempVelocity = velocity + cAcceleration * step / 2;

var dVelocity=tempVelocity;
var dAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + cVelocity * step / 2;
tempVelocity = velocity + cAcceleration * step / 2;

var dxdt=(aVelocity + 2 * (bVelocity + cVelocity) + dVelocity) / 6;
var dvdt=(aAcceleration + 2 * (bAcceleration + cAcceleration) + dAcceleration) / 6;

position += dxdt * step;
velocity += dvdt * step;}


this._lastTime = now;
this._lastPosition = position;
this._lastVelocity = velocity;

this._onUpdate(position);
if(!this.__active){
return;}



var isOvershooting=false;
if(this._overshootClamping && this._tension !== 0){
if(this._startPosition < this._toValue){
isOvershooting = position > this._toValue;}else 
{
isOvershooting = position < this._toValue;}}


var isVelocity=Math.abs(velocity) <= this._restSpeedThreshold;
var isDisplacement=true;
if(this._tension !== 0){
isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;}


if(isOvershooting || isVelocity && isDisplacement){
if(this._tension !== 0){

this._onUpdate(this._toValue);}


this.__debouncedOnEnd({finished:true});
return;}

this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}}, {key:'stop', value:


function stop(){
this.__active = false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return SpringAnimation;})(Animation);





var _uniqueId=1;var 

AnimatedValue=(function(_AnimatedWithChildren){






function AnimatedValue(value){_classCallCheck(this, AnimatedValue);
_get(Object.getPrototypeOf(AnimatedValue.prototype), 'constructor', this).call(this);
this._value = value;
this._offset = 0;
this._animation = null;
this._listeners = {};}_inherits(AnimatedValue, _AnimatedWithChildren);_createClass(AnimatedValue, [{key:'detach', value:


function detach(){
this.stopAnimation();}}, {key:'__getValue', value:


function __getValue(){
return this._value + this._offset;}}, {key:'setValue', value:


function setValue(value){
if(this._animation){
this._animation.stop();
this._animation = null;}

this._updateValue(value);}}, {key:'setOffset', value:


function setOffset(offset){
this._offset = offset;}}, {key:'flattenOffset', value:


function flattenOffset(){
this._value += this._offset;
this._offset = 0;}}, {key:'addListener', value:


function addListener(callback){
var id=String(_uniqueId++);
this._listeners[id] = callback;
return id;}}, {key:'removeListener', value:


function removeListener(id){
delete this._listeners[id];}}, {key:'removeAllListeners', value:


function removeAllListeners(){
this._listeners = {};}}, {key:'animate', value:


function animate(animation, callback){var _this2=this;
var handle=InteractionManager.createInteractionHandle();
var previousAnimation=this._animation;
this._animation && this._animation.stop();
this._animation = animation;
animation.start(
this._value, 
function(value){
_this2._updateValue(value);}, 

function(result){
_this2._animation = null;
InteractionManager.clearInteractionHandle(handle);
callback && callback(result);}, 

previousAnimation);}}, {key:'stopAnimation', value:



function stopAnimation(callback){
this.stopTracking();
this._animation && this._animation.stop();
this._animation = null;
callback && callback(this.__getValue());}}, {key:'stopTracking', value:


function stopTracking(){
this._tracking && this._tracking.detach();
this._tracking = null;}}, {key:'track', value:


function track(tracking){
this.stopTracking();
this._tracking = tracking;}}, {key:'interpolate', value:


function interpolate(config){
return new AnimatedInterpolation(this, Interpolation.create(config));}}, {key:'_updateValue', value:


function _updateValue(value){
this._value = value;
_flush(this);
for(var key in this._listeners) {
this._listeners[key]({value:this.__getValue()});}}}]);return AnimatedValue;})(AnimatedWithChildren);var 





AnimatedValueXY=(function(_AnimatedWithChildren2){




function AnimatedValueXY(valueIn){_classCallCheck(this, AnimatedValueXY);
_get(Object.getPrototypeOf(AnimatedValueXY.prototype), 'constructor', this).call(this);
var value=valueIn || {x:0, y:0};
if(typeof value.x === 'number' && typeof value.y === 'number'){
this.x = new AnimatedValue(value.x);
this.y = new AnimatedValue(value.y);}else 
{
invariant(
value.x instanceof AnimatedValue && 
value.y instanceof AnimatedValue, 
'AnimatedValueXY must be initalized with an object of numbers or ' + 
'AnimatedValues.');

this.x = value.x;
this.y = value.y;}

this._listeners = {};}_inherits(AnimatedValueXY, _AnimatedWithChildren2);_createClass(AnimatedValueXY, [{key:'setValue', value:


function setValue(value){
this.x.setValue(value.x);
this.y.setValue(value.y);}}, {key:'setOffset', value:


function setOffset(offset){
this.x.setOffset(offset.x);
this.y.setOffset(offset.y);}}, {key:'flattenOffset', value:


function flattenOffset(){
this.x.flattenOffset();
this.y.flattenOffset();}}, {key:'__getValue', value:


function __getValue(){
return {
x:this.x.__getValue(), 
y:this.y.__getValue()};}}, {key:'stopAnimation', value:



function stopAnimation(callback){
this.x.stopAnimation();
this.y.stopAnimation();
callback && callback(this.__getValue());}}, {key:'addListener', value:


function addListener(callback){var _this3=this;
var id=String(_uniqueId++);
var jointCallback=function(_ref){var number=_ref.value;
callback(_this3.__getValue());};

this._listeners[id] = {
x:this.x.addListener(jointCallback), 
y:this.y.addListener(jointCallback)};

return id;}}, {key:'removeListener', value:


function removeListener(id){
this.x.removeListener(this._listeners[id].x);
this.y.removeListener(this._listeners[id].y);
delete this._listeners[id];}}, {key:'getLayout', value:


function getLayout(){
return {
left:this.x, 
top:this.y};}}, {key:'getTranslateTransform', value:



function getTranslateTransform(){
return [
{translateX:this.x}, 
{translateY:this.y}];}}]);return AnimatedValueXY;})(AnimatedWithChildren);var 




AnimatedInterpolation=(function(_AnimatedWithChildren3){



function AnimatedInterpolation(parent, interpolation){_classCallCheck(this, AnimatedInterpolation);
_get(Object.getPrototypeOf(AnimatedInterpolation.prototype), 'constructor', this).call(this);
this._parent = parent;
this._interpolation = interpolation;}_inherits(AnimatedInterpolation, _AnimatedWithChildren3);_createClass(AnimatedInterpolation, [{key:'__getValue', value:


function __getValue(){
var parentValue=this._parent.__getValue();
invariant(
typeof parentValue === 'number', 
'Cannot interpolate an input which is not a number.');

return this._interpolation(parentValue);}}, {key:'interpolate', value:


function interpolate(config){
return new AnimatedInterpolation(this, Interpolation.create(config));}}, {key:'attach', value:


function attach(){
this._parent.addChild(this);}}, {key:'detach', value:


function detach(){
this._parent.removeChild(this);}}]);return AnimatedInterpolation;})(AnimatedWithChildren);var 



AnimatedTransform=(function(_AnimatedWithChildren4){


function AnimatedTransform(transforms){_classCallCheck(this, AnimatedTransform);
_get(Object.getPrototypeOf(AnimatedTransform.prototype), 'constructor', this).call(this);
this._transforms = transforms;}_inherits(AnimatedTransform, _AnimatedWithChildren4);_createClass(AnimatedTransform, [{key:'__getValue', value:


function __getValue(){
return this._transforms.map(function(transform){
var result={};
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
result[key] = value.__getValue();}else 
{
result[key] = value;}}


return result;});}}, {key:'getAnimatedValue', value:



function getAnimatedValue(){
return this._transforms.map(function(transform){
var result={};
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
result[key] = value.getAnimatedValue();}else 
{

result[key] = value;}}


return result;});}}, {key:'attach', value:



function attach(){var _this4=this;
this._transforms.forEach(function(transform){
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
value.addChild(_this4);}}});}}, {key:'detach', value:





function detach(){var _this5=this;
this._transforms.forEach(function(transform){
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
value.removeChild(_this5);}}});}}]);return AnimatedTransform;})(AnimatedWithChildren);var 






AnimatedStyle=(function(_AnimatedWithChildren5){


function AnimatedStyle(style){_classCallCheck(this, AnimatedStyle);
_get(Object.getPrototypeOf(AnimatedStyle.prototype), 'constructor', this).call(this);
style = flattenStyle(style) || {};
if(style.transform){
style = _extends({}, 
style, {
transform:new AnimatedTransform(style.transform)});}


this._style = style;}_inherits(AnimatedStyle, _AnimatedWithChildren5);_createClass(AnimatedStyle, [{key:'__getValue', value:


function __getValue(){
var style={};
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
style[key] = value.__getValue();}else 
{
style[key] = value;}}


return style;}}, {key:'getAnimatedValue', value:


function getAnimatedValue(){
var style={};
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
style[key] = value.getAnimatedValue();}}


return style;}}, {key:'attach', value:


function attach(){
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
value.addChild(this);}}}}, {key:'detach', value:




function detach(){
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
value.removeChild(this);}}}}]);return AnimatedStyle;})(AnimatedWithChildren);var 





AnimatedProps=(function(_Animated2){



function AnimatedProps(
props, 
callback)
{_classCallCheck(this, AnimatedProps);
_get(Object.getPrototypeOf(AnimatedProps.prototype), 'constructor', this).call(this);
if(props.style){
props = _extends({}, 
props, {
style:new AnimatedStyle(props.style)});}


this._props = props;
this._callback = callback;
this.attach();}_inherits(AnimatedProps, _Animated2);_createClass(AnimatedProps, [{key:'__getValue', value:


function __getValue(){
var props={};
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
props[key] = value.__getValue();}else 
{
props[key] = value;}}


return props;}}, {key:'getAnimatedValue', value:


function getAnimatedValue(){
var props={};
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
props[key] = value.getAnimatedValue();}}


return props;}}, {key:'attach', value:


function attach(){
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
value.addChild(this);}}}}, {key:'detach', value:




function detach(){
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
value.removeChild(this);}}}}, {key:'update', value:




function update(){
this._callback();}}]);return AnimatedProps;})(Animated);



function createAnimatedComponent(Component){
var refName='node';var 

AnimatedComponent=(function(_React$Component){function AnimatedComponent(){_classCallCheck(this, AnimatedComponent);_get(Object.getPrototypeOf(AnimatedComponent.prototype), 'constructor', this).apply(this, arguments);}_inherits(AnimatedComponent, _React$Component);_createClass(AnimatedComponent, [{key:'componentWillUnmount', value:


function componentWillUnmount(){
this._propsAnimated && this._propsAnimated.detach();}}, {key:'setNativeProps', value:


function setNativeProps(props){
this.refs[refName].setNativeProps(props);}}, {key:'componentWillMount', value:


function componentWillMount(){
this.attachProps(this.props);}}, {key:'attachProps', value:


function attachProps(nextProps){var _this6=this;
var oldPropsAnimated=this._propsAnimated;







var callback=function(){
if(_this6.refs[refName].setNativeProps){
var value=_this6._propsAnimated.getAnimatedValue();
_this6.refs[refName].setNativeProps(value);}else 
{
_this6.forceUpdate();}};



this._propsAnimated = new AnimatedProps(
nextProps, 
callback);










oldPropsAnimated && oldPropsAnimated.detach();}}, {key:'componentWillReceiveProps', value:


function componentWillReceiveProps(nextProps){
this.attachProps(nextProps);}}, {key:'render', value:


function render(){
return (
React.createElement(Component, _extends({}, 
this._propsAnimated.__getValue(), {
ref:refName})));}}]);return AnimatedComponent;})(React.Component);





return AnimatedComponent;}var 


AnimatedTracking=(function(_Animated3){






function AnimatedTracking(
value, 
parent, 
animationClass, 
animationConfig, 
callback)
{_classCallCheck(this, AnimatedTracking);
_get(Object.getPrototypeOf(AnimatedTracking.prototype), 'constructor', this).call(this);
this._value = value;
this._parent = parent;
this._animationClass = animationClass;
this._animationConfig = animationConfig;
this._callback = callback;
this.attach();}_inherits(AnimatedTracking, _Animated3);_createClass(AnimatedTracking, [{key:'__getValue', value:


function __getValue(){
return this._parent.__getValue();}}, {key:'attach', value:


function attach(){
this._parent.addChild(this);}}, {key:'detach', value:


function detach(){
this._parent.removeChild(this);}}, {key:'update', value:


function update(){
this._value.animate(new this._animationClass(_extends({}, 
this._animationConfig, {
toValue:this._animationConfig.toValue.__getValue()})), 
this._callback);}}]);return AnimatedTracking;})(Animated);








var maybeVectorAnim=function(
value, 
config, 
anim)
{
if(value instanceof AnimatedValueXY){
var configX=_extends({}, config);
var configY=_extends({}, config);
for(var key in config) {var _config$key=
config[key];var x=_config$key.x;var y=_config$key.y;
if(x !== undefined && y !== undefined){
configX[key] = x;
configY[key] = y;}}


var aX=anim(value.x, configX);
var aY=anim(value.y, configY);


return parallel([aX, aY], {stopTogether:false});}

return null;};


var spring=function(
value, 
config)
{
return maybeVectorAnim(value, config, spring) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue, 
config.toValue, 
SpringAnimation, 
singleConfig, 
callback));}else 

{
singleValue.animate(new SpringAnimation(singleConfig), callback);}}, 



stop:function(){
value.stopAnimation();}};};




var timing=function(
value, 
config)
{
return maybeVectorAnim(value, config, timing) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue, 
config.toValue, 
TimingAnimation, 
singleConfig, 
callback));}else 

{
singleValue.animate(new TimingAnimation(singleConfig), callback);}}, 



stop:function(){
value.stopAnimation();}};};




var decay=function(
value, 
config)
{
return maybeVectorAnim(value, config, decay) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
singleValue.animate(new DecayAnimation(singleConfig), callback);}, 


stop:function(){
value.stopAnimation();}};};




var sequence=function(
animations)
{
var current=0;
return {
start:function(callback){
var onComplete=function(result){
if(!result.finished){
callback && callback(result);
return;}


current++;

if(current === animations.length){
callback && callback(result);
return;}


animations[current].start(onComplete);};


if(animations.length === 0){
callback && callback({finished:true});}else 
{
animations[current].start(onComplete);}}, 



stop:function(){
if(current < animations.length){
animations[current].stop();}}};};








var parallel=function(
animations, 
config)
{
var doneCount=0;

var hasEnded={};
var stopTogether=!(config && config.stopTogether === false);

var result={
start:function(callback){
if(doneCount === animations.length){
callback && callback({finished:true});
return;}


animations.forEach(function(animation, idx){
var cb=function(endResult){
hasEnded[idx] = true;
doneCount++;
if(doneCount === animations.length){
doneCount = 0;
callback && callback(endResult);
return;}


if(!endResult.finished && stopTogether){
result.stop();}};



if(!animation){
cb({finished:true});}else 
{
animation.start(cb);}});}, 




stop:function(){
animations.forEach(function(animation, idx){
!hasEnded[idx] && animation.stop();
hasEnded[idx] = true;});}};




return result;};


var delay=function(time){

return timing(new AnimatedValue(0), {toValue:0, delay:time, duration:0});};


var stagger=function(
time, 
animations)
{
return parallel(animations.map(function(animation, i){
return sequence([
delay(time * i), 
animation]);}));};






















var event=function(
argMapping, 
config)
{
return function(){for(var _len=arguments.length, args=Array(_len), _key=0; _key < _len; _key++) {args[_key] = arguments[_key];}
var traverse=function(recMapping, recEvt, key){
if(typeof recEvt === 'number'){
invariant(
recMapping instanceof AnimatedValue, 
'Bad mapping of type ' + typeof recMapping + ' for key ' + key + 
', event value must map to AnimatedValue');

recMapping.setValue(recEvt);
return;}

invariant(
typeof recMapping === 'object', 
'Bad mapping of type ' + typeof recMapping + ' for key ' + key);

invariant(
typeof recEvt === 'object', 
'Bad event of type ' + typeof recEvt + ' for key ' + key);

for(var key in recMapping) {
traverse(recMapping[key], recEvt[key], key);}};


argMapping.forEach(function(mapping, idx){
traverse(mapping, args[idx], 'arg' + idx);});

if(config && config.listener){
config.listener.apply(null, args);}};};




module.exports = {
delay:delay, 
sequence:sequence, 
parallel:parallel, 
stagger:stagger, 

decay:decay, 
timing:timing, 
spring:spring, 

event:event, 

Value:AnimatedValue, 
ValueXY:AnimatedValueXY, 
__PropsOnlyForTests:AnimatedProps, 
View:createAnimatedComponent(View), 
Text:createAnimatedComponent(Text), 
Image:createAnimatedComponent(Image), 
createAnimatedComponent:createAnimatedComponent};
});
__d('Interpolation',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}













var invariant=function(condition, message){
if(!condition){
var error=new Error(message);
error.framesToPop = 1;
throw error;}};















var linear=function(t){return t;};var 





Interpolation=(function(){function Interpolation(){_classCallCheck(this, Interpolation);}_createClass(Interpolation, null, [{key:'create', value:
function create(config){

if(config.outputRange && typeof config.outputRange[0] === 'string'){
return createInterpolationFromStringOutputRange(config);}


var outputRange=config.outputRange;
checkInfiniteRange('outputRange', outputRange);

var inputRange=config.inputRange;
checkInfiniteRange('inputRange', inputRange);
checkValidInputRange(inputRange);

invariant(
inputRange.length === outputRange.length, 
'inputRange (' + inputRange.length + ') and outputRange (' + 
outputRange.length + ') must have the same length');


var easing=config.easing || linear;

var extrapolateLeft='extend';
if(config.extrapolateLeft !== undefined){
extrapolateLeft = config.extrapolateLeft;}else 
if(config.extrapolate !== undefined){
extrapolateLeft = config.extrapolate;}


var extrapolateRight='extend';
if(config.extrapolateRight !== undefined){
extrapolateRight = config.extrapolateRight;}else 
if(config.extrapolate !== undefined){
extrapolateRight = config.extrapolate;}


return function(input){
invariant(
typeof input === 'number', 
'Cannot interpolation an input which is not a number');


var range=findRange(input, inputRange);
return interpolate(
input, 
inputRange[range], 
inputRange[range + 1], 
outputRange[range], 
outputRange[range + 1], 
easing, 
extrapolateLeft, 
extrapolateRight);};}}]);return Interpolation;})();





function interpolate(
input, 
inputMin, 
inputMax, 
outputMin, 
outputMax, 
easing, 
extrapolateLeft, 
extrapolateRight)
{
var result=input;


if(result < inputMin){
if(extrapolateLeft === 'identity'){
return result;}else 
if(extrapolateLeft === 'clamp'){
result = inputMin;}else 
if(extrapolateLeft === 'extend'){}}




if(result > inputMax){
if(extrapolateRight === 'identity'){
return result;}else 
if(extrapolateRight === 'clamp'){
result = inputMax;}else 
if(extrapolateRight === 'extend'){}}




if(outputMin === outputMax){
return outputMin;}


if(inputMin === inputMax){
if(input <= inputMin){
return outputMin;}

return outputMax;}



if(inputMin === -Infinity){
result = -result;}else 
if(inputMax === Infinity){
result = result - inputMin;}else 
{
result = (result - inputMin) / (inputMax - inputMin);}



result = easing(result);


if(outputMin === -Infinity){
result = -result;}else 
if(outputMax === Infinity){
result = result + outputMin;}else 
{
result = result * (outputMax - outputMin) + outputMin;}


return result;}


var stringShapeRegex=/[0-9\.-]+/g;









function createInterpolationFromStringOutputRange(
config)
{
var outputRange=config.outputRange;
invariant(outputRange.length >= 2, 'Bad output range');
checkPattern(outputRange);









var outputRanges=outputRange[0].match(stringShapeRegex).map(function(){return [];});
outputRange.forEach(function(value){
value.match(stringShapeRegex).forEach(function(number, i){
outputRanges[i].push(+number);});});



var interpolations=outputRange[0].match(stringShapeRegex).map(function(value, i){
return Interpolation.create(_extends({}, 
config, {
outputRange:outputRanges[i]}));});



return function(input){
var i=0;



return outputRange[0].replace(stringShapeRegex, function(){
return String(interpolations[i++](input));});};}




function checkPattern(arr){
var pattern=arr[0].replace(stringShapeRegex, '');
for(var i=1; i < arr.length; ++i) {
invariant(
pattern === arr[i].replace(stringShapeRegex, ''), 
'invalid pattern ' + arr[0] + ' and ' + arr[i]);}}




function findRange(input, inputRange){
for(var i=1; i < inputRange.length - 1; ++i) {
if(inputRange[i] >= input){
break;}}


return i - 1;}


function checkValidInputRange(arr){
invariant(arr.length >= 2, 'inputRange must have at least 2 elements');
for(var i=1; i < arr.length; ++i) {
invariant(
arr[i] >= arr[i - 1], 






'inputRange must be monotonically increasing ' + arr);}}




function checkInfiniteRange(name, arr){
invariant(arr.length >= 2, name + ' must have at least 2 elements');
invariant(
arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity, 






name + 'cannot be ]-infinity;+infinity[ ' + arr);}



module.exports = Interpolation;
});
__d('Easing',["bezier"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var _bezier=require('bezier');var 






Easing=(function(){function Easing(){_classCallCheck(this, Easing);}_createClass(Easing, null, [{key:'step0', value:
function step0(n){
return n > 0?1:0;}}, {key:'step1', value:


function step1(n){
return n >= 1?1:0;}}, {key:'linear', value:


function linear(t){
return t;}}, {key:'ease', value:(function(_ease){function ease(_x){return _ease.apply(this, arguments);}ease.toString = function(){return _ease.toString();};return ease;})(


function(t){
return ease(t);})}, {key:'quad', value:


function quad(t){
return t * t;}}, {key:'cubic', value:


function cubic(t){
return t * t * t;}}, {key:'poly', value:


function poly(n){
return function(t){return Math.pow(t, n);};}}, {key:'sin', value:


function sin(t){
return 1 - Math.cos(t * Math.PI / 2);}}, {key:'circle', value:


function circle(t){
return 1 - Math.sqrt(1 - t * t);}}, {key:'exp', value:


function exp(t){
return Math.pow(2, 10 * (t - 1));}}, {key:'elastic', value:


function elastic(a, p){
var tau=Math.PI * 2;


var s;
if(arguments.length < 2){
p = 0.45;}

if(arguments.length){
s = p / tau * Math.asin(1 / a);}else 
{
a = 1;
s = p / 4;}

return function(t){return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * tau / p);};}}, {key:'back', value:


function back(s){
if(s === undefined){
s = 1.70158;}

return function(t){return t * t * ((s + 1) * t - s);};}}, {key:'bounce', value:


function bounce(t){
if(t < 1 / 2.75){
return 7.5625 * t * t;}


if(t < 2 / 2.75){
t -= 1.5 / 2.75;
return 7.5625 * t * t + 0.75;}


if(t < 2.5 / 2.75){
t -= 2.25 / 2.75;
return 7.5625 * t * t + 0.9375;}


t -= 2.625 / 2.75;
return 7.5625 * t * t + 0.984375;}}, {key:'bezier', value:


function bezier(
x1, 
y1, 
x2, 
y2, 
epsilon)
{
if(epsilon === undefined){


var duration=500;
epsilon = 1000 / 60 / duration / 4;}


return _bezier(x1, y1, x2, y2, epsilon);}}, {key:'in', value:


function _in(
easing)
{
return easing;}}, {key:'out', value:


function out(
easing)
{
return function(t){return 1 - easing(1 - t);};}}, {key:'inOut', value:


function inOut(
easing)
{
return function(t){
if(t < 0.5){
return easing(t * 2) / 2;}

return 1 - easing((1 - t) * 2) / 2;};}}]);return Easing;})();




var ease=Easing.bezier(0.42, 0, 1, 1);

module.exports = Easing;
});
__d('bezier',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.





























exports = function(x1, y1, x2, y2, epsilon){

var curveX=function(t){
var v=1 - t;
return 3 * v * v * t * x1 + 3 * v * t * t * x2 + t * t * t;};


var curveY=function(t){
var v=1 - t;
return 3 * v * v * t * y1 + 3 * v * t * t * y2 + t * t * t;};


var derivativeCurveX=function(t){
var v=1 - t;
return 3 * (2 * (t - 1) * t + v * v) * x1 + 3 * (-t * t * t + 2 * v * t) * x2;};


return function(t){

var x=t, t0, t1, t2, x2, d2, i;


for(t2 = x, i = 0; i < 8; i++) {
x2 = curveX(t2) - x;
if(Math.abs(x2) < epsilon)return curveY(t2);
d2 = derivativeCurveX(t2);
if(Math.abs(d2) < 1e-6)break;
t2 = t2 - x2 / d2;}


t0 = 0, t1 = 1, t2 = x;

if(t2 < t0)return curveY(t0);
if(t2 > t1)return curveY(t1);


while(t0 < t1) {
x2 = curveX(t2);
if(Math.abs(x2 - x) < epsilon)return curveY(t2);
if(x > x2)t0 = t2;else 
t1 = t2;
t2 = (t1 - t0) * .5 + t0;}



return curveY(t2);};};
});
__d('requestAnimationFrame',["emptyFunction","nativeRequestAnimationFrame"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










emptyFunction=require('emptyFunction');
var nativeRequestAnimationFrame=require('nativeRequestAnimationFrame');

var lastTime=0;

var requestAnimationFrame=
nativeRequestAnimationFrame || 
function(callback){
var currTime=Date.now();
var timeDelay=Math.max(0, 16 - (currTime - lastTime));
lastTime = currTime + timeDelay;
return global.setTimeout(function(){
callback(Date.now());}, 
timeDelay);};



requestAnimationFrame(emptyFunction);

module.exports = requestAnimationFrame;
});
__d('nativeRequestAnimationFrame',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










nativeRequestAnimationFrame=
global.requestAnimationFrame || 
global.webkitRequestAnimationFrame || 
global.mozRequestAnimationFrame || 
global.oRequestAnimationFrame || 
global.msRequestAnimationFrame;

module.exports = nativeRequestAnimationFrame;
});
__d('WebView',["ActivityIndicatorIOS","EdgeInsetsPropType","React","StyleSheet","Text","View","invariant","keyMirror","requireNativeComponent","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ActivityIndicatorIOS=require('ActivityIndicatorIOS');
var EdgeInsetsPropType=require('EdgeInsetsPropType');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;
var RCTWebViewManager=require('NativeModules').WebViewManager;

var BGWASH='rgba(255,255,255,0.8)';
var RCT_WEBVIEW_REF='webview';

var WebViewState=keyMirror({
IDLE:null, 
LOADING:null, 
ERROR:null});


var NavigationType={
click:RCTWebViewManager.NavigationType.LinkClicked, 
formsubmit:RCTWebViewManager.NavigationType.FormSubmitted, 
backforward:RCTWebViewManager.NavigationType.BackForward, 
reload:RCTWebViewManager.NavigationType.Reload, 
formresubmit:RCTWebViewManager.NavigationType.FormResubmitted, 
other:RCTWebViewManager.NavigationType.Other};


var JSNavigationScheme=RCTWebViewManager.JSNavigationScheme;









var defaultRenderLoading=function(){return (
React.createElement(View, {style:styles.loadingView}, 
React.createElement(ActivityIndicatorIOS, null)));};


var defaultRenderError=function(errorDomain, errorCode, errorDesc){return (
React.createElement(View, {style:styles.errorContainer}, 
React.createElement(Text, {style:styles.errorTextTitle}, 'Error loading page'), 


React.createElement(Text, {style:styles.errorText}, 
'Domain: ' + errorDomain), 

React.createElement(Text, {style:styles.errorText}, 
'Error Code: ' + errorCode), 

React.createElement(Text, {style:styles.errorText}, 
'Description: ' + errorDesc)));};




var WebView=React.createClass({displayName:'WebView', 
statics:{
JSNavigationScheme:JSNavigationScheme, 
NavigationType:NavigationType}, 


propTypes:{
url:PropTypes.string, 
html:PropTypes.string, 
renderError:PropTypes.func, 
renderLoading:PropTypes.func, 
bounces:PropTypes.bool, 
scrollEnabled:PropTypes.bool, 
automaticallyAdjustContentInsets:PropTypes.bool, 
contentInset:EdgeInsetsPropType, 
onNavigationStateChange:PropTypes.func, 
startInLoadingState:PropTypes.bool, 
style:View.propTypes.style, 



javaScriptEnabledAndroid:PropTypes.bool, 



injectedJavaScript:PropTypes.string, 





scalesPageToFit:PropTypes.bool}, 


getInitialState:function(){
return {
viewState:WebViewState.IDLE, 
lastErrorEvent:null, 
startInLoadingState:true};}, 



componentWillMount:function(){
if(this.props.startInLoadingState){
this.setState({viewState:WebViewState.LOADING});}}, 



render:function(){
var otherView=null;

if(this.state.viewState === WebViewState.LOADING){
otherView = (this.props.renderLoading || defaultRenderLoading)();}else 
if(this.state.viewState === WebViewState.ERROR){
var errorEvent=this.state.lastErrorEvent;
invariant(
errorEvent != null, 
'lastErrorEvent expected to be non-null');

otherView = (this.props.renderError || defaultRenderError)(
errorEvent.domain, 
errorEvent.code, 
errorEvent.description);}else 

if(this.state.viewState !== WebViewState.IDLE){
console.error(
'RCTWebView invalid state encountered: ' + this.state.loading);}



var webViewStyles=[styles.container, styles.webView, this.props.style];
if(this.state.viewState === WebViewState.LOADING || 
this.state.viewState === WebViewState.ERROR){

webViewStyles.push(styles.hidden);}


var webView=
React.createElement(RCTWebView, {
ref:RCT_WEBVIEW_REF, 
key:'webViewKey', 
style:webViewStyles, 
url:this.props.url, 
html:this.props.html, 
injectedJavaScript:this.props.injectedJavaScript, 
bounces:this.props.bounces, 
scrollEnabled:this.props.scrollEnabled, 
contentInset:this.props.contentInset, 
automaticallyAdjustContentInsets:this.props.automaticallyAdjustContentInsets, 
onLoadingStart:this.onLoadingStart, 
onLoadingFinish:this.onLoadingFinish, 
onLoadingError:this.onLoadingError, 
scalesPageToFit:this.props.scalesPageToFit});


return (
React.createElement(View, {style:styles.container}, 
webView, 
otherView));}, 




goForward:function(){
RCTWebViewManager.goForward(this.getWebViewHandle());}, 


goBack:function(){
RCTWebViewManager.goBack(this.getWebViewHandle());}, 


reload:function(){
RCTWebViewManager.reload(this.getWebViewHandle());}, 






updateNavigationState:function(event){
if(this.props.onNavigationStateChange){
this.props.onNavigationStateChange(event.nativeEvent);}}, 



getWebViewHandle:function(){
return React.findNodeHandle(this.refs[RCT_WEBVIEW_REF]);}, 


onLoadingStart:function(event){
this.updateNavigationState(event);}, 


onLoadingError:function(event){
event.persist();
console.error('Encountered an error loading page', event.nativeEvent);

this.setState({
lastErrorEvent:event.nativeEvent, 
viewState:WebViewState.ERROR});}, 



onLoadingFinish:function(event){
this.setState({
viewState:WebViewState.IDLE});

this.updateNavigationState(event);}});



var RCTWebView=requireNativeComponent('RCTWebView', WebView);

var styles=StyleSheet.create({
container:{
flex:1}, 

errorContainer:{
flex:1, 
justifyContent:'center', 
alignItems:'center', 
backgroundColor:BGWASH}, 

errorText:{
fontSize:14, 
textAlign:'center', 
marginBottom:2}, 

errorTextTitle:{
fontSize:15, 
fontWeight:'500', 
marginBottom:10}, 

hidden:{
height:0, 
flex:0}, 

loadingView:{
backgroundColor:BGWASH, 
flex:1, 
justifyContent:'center', 
alignItems:'center'}, 

webView:{
backgroundColor:'#ffffff'}});



module.exports = WebView;
});
__d('ActionSheetIOS',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTActionSheetManager=require('NativeModules').ActionSheetManager;

var invariant=require('invariant');

var ActionSheetIOS={
showActionSheetWithOptions:function(options, callback){
invariant(
typeof options === 'object' && options !== null, 
'Options must a valid object');

invariant(
typeof callback === 'function', 
'Must provide a valid callback');

RCTActionSheetManager.showActionSheetWithOptions(
options, 
function(){}, 
callback);}, 



showShareActionSheetWithOptions:function(
options, 
failureCallback, 
successCallback)
{
invariant(
typeof options === 'object' && options !== null, 
'Options must a valid object');

invariant(
typeof failureCallback === 'function', 
'Must provide a valid failureCallback');

invariant(
typeof successCallback === 'function', 
'Must provide a valid successCallback');

RCTActionSheetManager.showShareActionSheetWithOptions(
options, 
failureCallback, 
successCallback);}};




module.exports = ActionSheetIOS;
});
__d('AdSupportIOS',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var AdSupport=require('NativeModules').AdSupport;

module.exports = {
getAdvertisingId:function(onSuccess, onFailure){
AdSupport.getAdvertisingId(onSuccess, onFailure);}, 


getAdvertisingTrackingEnabled:function(onSuccess, onFailure){
AdSupport.getAdvertisingTrackingEnabled(onSuccess, onFailure);}};
});
__d('AlertIOS',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTAlertManager=require('NativeModules').AlertManager;
var invariant=require('invariant');

var DEFAULT_BUTTON_TEXT='OK';
var DEFAULT_BUTTON={
text:DEFAULT_BUTTON_TEXT, 
onPress:null};var 
























AlertIOS=(function(){function AlertIOS(){_classCallCheck(this, AlertIOS);}_createClass(AlertIOS, null, [{key:'alert', value:
function alert(
title, 
message, 
buttons, 



type)
{
var callbacks=[];
var buttonsSpec=[];
title = title || '';
message = message || '';
buttons = buttons || [DEFAULT_BUTTON];
type = type || '';

buttons.forEach(function(btn, index){
callbacks[index] = btn.onPress;
var btnDef={};
btnDef[index] = btn.text || DEFAULT_BUTTON_TEXT;
buttonsSpec.push(btnDef);});

RCTAlertManager.alertWithArgs({
title:title, 
message:message, 
buttons:buttonsSpec, 
type:type}, 
function(id, value){
var cb=callbacks[id];
cb && cb(value);});}}, {key:'prompt', value:



function prompt(
title, 
value, 
buttons, 



callback)
{
if(arguments.length === 2){
if(typeof value === 'object'){
buttons = value;
value = undefined;}else 
if(typeof value === 'function'){
callback = value;
value = undefined;}}else 

if(arguments.length === 3 && typeof buttons === 'function'){
callback = buttons;
buttons = undefined;}


invariant(
!(callback && buttons) && (callback || buttons), 
'Must provide either a button list or a callback, but not both');


if(!buttons){
buttons = [{
text:'Cancel'}, 
{
text:'OK', 
onPress:callback}];}


this.alert(title, value, buttons, 'plain-text');}}]);return AlertIOS;})();



module.exports = AlertIOS;
});
__d('AppRegistry',["invariant","renderApplication","RCTRenderingPerf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');
var renderApplication=require('renderApplication');

if(__DEV__){


require('RCTRenderingPerf');}


var runnables={};


















var AppRegistry={
registerConfig:function(config){
for(var i=0; i < config.length; ++i) {
var appConfig=config[i];
if(appConfig.run){
AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);}else 
{
AppRegistry.registerComponent(appConfig.appKey, appConfig.component);}}}, 




registerComponent:function(appKey, getComponentFunc){
runnables[appKey] = {
run:function(appParameters){return (
renderApplication(getComponentFunc(), appParameters.initialProps, appParameters.rootTag));}};

return appKey;}, 


registerRunnable:function(appKey, func){
runnables[appKey] = {run:func};
return appKey;}, 


runApplication:function(appKey, appParameters){
console.log(
'Running application "' + appKey + '" with appParams: ' + 
JSON.stringify(appParameters) + '. ' + 
'__DEV__ === ' + String(__DEV__) + 
', development-level warning are ' + (__DEV__?'ON':'OFF') + 
', performance optimizations are ' + (__DEV__?'OFF':'ON'));

invariant(
runnables[appKey] && runnables[appKey].run, 
'Application ' + appKey + ' has not been registered. This ' + 
'is either due to a require() error during initialization ' + 
'or failure to call AppRegistry.registerComponent.');

runnables[appKey].run(appParameters);}};



module.exports = AppRegistry;
});
__d('renderApplication',["Inspector","RCTDeviceEventEmitter","React","StyleSheet","Subscribable","View","WarningBox","invariant","setupDevtools"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};











var Inspector=require('Inspector');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var View=require('View');
var WarningBox=require('WarningBox');

var invariant=require('invariant');

var AppContainer=React.createClass({displayName:'AppContainer', 
mixins:[Subscribable.Mixin], 

getInitialState:function(){
return {inspector:null};}, 


toggleElementInspector:function(){
var inspector=this.state.inspector?
null:
React.createElement(Inspector, {
rootTag:this.props.rootTag, 
inspectedViewTag:React.findNodeHandle(this.refs.main)});

this.setState({inspector:inspector});}, 


componentDidMount:function(){
this.addListenerOn(
RCTDeviceEventEmitter, 
'toggleElementInspector', 
this.toggleElementInspector);}, 



render:function(){
var shouldRenderWarningBox=__DEV__ && console.yellowBoxEnabled;
var warningBox=shouldRenderWarningBox?React.createElement(WarningBox, null):null;
return (
React.createElement(View, {style:styles.appContainer}, 
React.createElement(View, {collapsible:false, style:styles.appContainer, ref:'main'}, 
this.props.children), 

warningBox, 
this.state.inspector));}});





function renderApplication(
RootComponent, 
initialProps, 
rootTag)
{
invariant(
rootTag, 
'Expect to have a valid rootTag, instead got ', rootTag);


if(__DEV__ && !window.document){
var setupDevtools=require('setupDevtools');
setupDevtools();}

React.render(
React.createElement(AppContainer, {rootTag:rootTag}, 
React.createElement(RootComponent, _extends({}, 
initialProps, {
rootTag:rootTag}))), 


rootTag);}



var styles=StyleSheet.create({
appContainer:{
position:'absolute', 
left:0, 
top:0, 
right:0, 
bottom:0}});



module.exports = renderApplication;
});
__d('Inspector',["Dimensions","InspectorOverlay","InspectorPanel","InspectorUtils","React","StyleSheet","NativeModules","View","flattenStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();var _get=function get(object, property, receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object, property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent, property, receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var Dimensions=require('Dimensions');
var InspectorOverlay=require('InspectorOverlay');
var InspectorPanel=require('InspectorPanel');
var InspectorUtils=require('InspectorUtils');
var React=require('React');
var StyleSheet=require('StyleSheet');
var UIManager=require('NativeModules').UIManager;
var View=require('View');

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){

window.__REACT_DEVTOOLS_GLOBAL_HOOK__.resolveRNStyle = require('flattenStyle');}var 


Inspector=(function(_React$Component){


function Inspector(props){_classCallCheck(this, Inspector);
_get(Object.getPrototypeOf(Inspector.prototype), 'constructor', this).call(this, props);

this.state = {
devtoolsAgent:null, 
panelPos:'bottom', 
inspecting:true, 
perfing:false, 
inspected:null};}_inherits(Inspector, _React$Component);_createClass(Inspector, [{key:'componentDidMount', value:



function componentDidMount(){
if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){
this.attachToDevtools = this.attachToDevtools.bind(this);
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.on('react-devtools', this.attachToDevtools);

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent){
this.attachToDevtools(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent);}}}}, {key:'componentWillUnmount', value:




function componentWillUnmount(){
if(this._subs){
this._subs.map(function(fn){return fn();});}

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.off('react-devtools', this.attachToDevtools);}}}, {key:'attachToDevtools', value:



function attachToDevtools(agent){var _this=this;
var _hideWait=null;
var hlSub=agent.sub('highlight', function(_ref){var node=_ref.node;var name=_ref.name;var props=_ref.props;
clearTimeout(_hideWait);
UIManager.measure(node, function(x, y, width, height, left, top){
_this.setState({
hierarchy:[], 
inspected:{
frame:{left:left, top:top, width:width, height:height}, 
style:props?props.style:{}}});});});




var hideSub=agent.sub('hideHighlight', function(){
if(_this.state.inspected === null){
return;}


_hideWait = setTimeout(function(){
_this.setState({
inspected:null});}, 

100);});

this._subs = [hlSub, hideSub];

agent.on('shutdown', function(){
_this.setState({devtoolsAgent:null});
_this._subs = null;});

this.setState({
devtoolsAgent:agent});}}, {key:'setSelection', value:



function setSelection(i){var _this2=this;
var instance=this.state.hierarchy[i];
var publicInstance=instance.getPublicInstance();
UIManager.measure(React.findNodeHandle(instance), function(x, y, width, height, left, top){
_this2.setState({
inspected:{
frame:{left:left, top:top, width:width, height:height}, 
style:publicInstance.props?publicInstance.props.style:{}}, 

selection:i});});}}, {key:'onTouchInstance', value:




function onTouchInstance(instance, frame, pointerY){
if(this.state.devtoolsAgent){
this.state.devtoolsAgent.selectFromReactInstance(instance, true);}

var hierarchy=InspectorUtils.getOwnerHierarchy(instance);
var publicInstance=instance.getPublicInstance();
var props=publicInstance.props || {};
this.setState({
panelPos:pointerY > Dimensions.get('window').height / 2?'top':'bottom', 
selection:hierarchy.length - 1, 
hierarchy:hierarchy, 
inspected:{
style:props.style || {}, 
frame:frame}});}}, {key:'setPerfing', value:




function setPerfing(val){
this.setState({
perfing:val, 
inspecting:false, 
inspected:null});}}, {key:'setInspecting', value:



function setInspecting(val){
this.setState({
inspecting:val, 
inspected:null});}}, {key:'render', value:



function render(){
var panelContainerStyle=this.state.panelPos === 'bottom'?{bottom:0}:{top:0};
return (
React.createElement(View, {style:styles.container, pointerEvents:'box-none'}, 
this.state.inspecting && 
React.createElement(InspectorOverlay, {
rootTag:this.props.rootTag, 
inspected:this.state.inspected, 
inspectedViewTag:this.props.inspectedViewTag, 
onTouchInstance:this.onTouchInstance.bind(this)}), 

React.createElement(View, {style:[styles.panelContainer, panelContainerStyle]}, 
React.createElement(InspectorPanel, {
devtoolsIsOpen:!!this.state.devtoolsAgent, 
inspecting:this.state.inspecting, 
perfing:this.state.perfing, 
setPerfing:this.setPerfing.bind(this), 
setInspecting:this.setInspecting.bind(this), 
inspected:this.state.inspected, 
hierarchy:this.state.hierarchy, 
selection:this.state.selection, 
setSelection:this.setSelection.bind(this)}))));}}]);return Inspector;})(React.Component);







var styles=StyleSheet.create({
container:{
position:'absolute', 
backgroundColor:'transparent', 
top:0, 
left:0, 
right:0, 
bottom:0}, 

panelContainer:{
position:'absolute', 
left:0, 
right:0}});



module.exports = Inspector;
});
__d('InspectorOverlay',["Dimensions","InspectorUtils","React","StyleSheet","NativeModules","View","ElementBox"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var Dimensions=require('Dimensions');
var InspectorUtils=require('InspectorUtils');
var React=require('React');
var StyleSheet=require('StyleSheet');
var UIManager=require('NativeModules').UIManager;
var View=require('View');
var ElementBox=require('ElementBox');

var PropTypes=React.PropTypes;





var InspectorOverlay=React.createClass({displayName:'InspectorOverlay', 
propTypes:{
inspected:PropTypes.shape({
frame:PropTypes.object, 
style:PropTypes.any}), 

inspectedViewTag:PropTypes.number, 
onTouchInstance:PropTypes.func.isRequired}, 


findViewForTouchEvent:function(e){var _this=this;var _e$nativeEvent$touches$0=
e.nativeEvent.touches[0];var locationX=_e$nativeEvent$touches$0.locationX;var locationY=_e$nativeEvent$touches$0.locationY;
UIManager.findSubviewIn(
this.props.inspectedViewTag, 
[locationX, locationY], 
function(nativeViewTag, left, top, width, height){
var instance=InspectorUtils.findInstanceByNativeTag(_this.props.rootTag, nativeViewTag);
if(!instance){
return;}

_this.props.onTouchInstance(instance, {left:left, top:top, width:width, height:height}, locationY);});}, 




shouldSetResponser:function(e){
this.findViewForTouchEvent(e);
return true;}, 


render:function(){
var content=null;
if(this.props.inspected){
content = React.createElement(ElementBox, {frame:this.props.inspected.frame, style:this.props.inspected.style});}


return (
React.createElement(View, {
onStartShouldSetResponder:this.shouldSetResponser, 
onResponderMove:this.findViewForTouchEvent, 
style:[styles.inspector, {height:Dimensions.get('window').height}]}, 
content));}});





var styles=StyleSheet.create({
inspector:{
backgroundColor:'transparent', 
position:'absolute', 
left:0, 
top:0, 
right:0}});



module.exports = InspectorOverlay;
});
__d('ElementBox',["React","View","StyleSheet","BorderBox","resolveBoxStyle","flattenStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();var _get=function get(object, property, receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object, property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent, property, receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var React=require('React');
var View=require('View');
var StyleSheet=require('StyleSheet');
var BorderBox=require('BorderBox');
var resolveBoxStyle=require('resolveBoxStyle');

var flattenStyle=require('flattenStyle');var 

ElementBox=(function(_React$Component){function ElementBox(){_classCallCheck(this, ElementBox);_get(Object.getPrototypeOf(ElementBox.prototype), 'constructor', this).apply(this, arguments);}_inherits(ElementBox, _React$Component);_createClass(ElementBox, [{key:'render', value:
function render(){
var style=flattenStyle(this.props.style) || {};
var margin=resolveBoxStyle('margin', style);
var padding=resolveBoxStyle('padding', style);
var frameStyle=this.props.frame;
if(margin){
frameStyle = {
top:frameStyle.top - margin.top, 
left:frameStyle.left - margin.left, 
height:frameStyle.height + margin.top + margin.bottom, 
width:frameStyle.width + margin.left + margin.right};}


var contentStyle={
width:this.props.frame.width, 
height:this.props.frame.height};

if(padding){
contentStyle = {
width:contentStyle.width - padding.left - padding.right, 
height:contentStyle.height - padding.top - padding.bottom};}


return (
React.createElement(View, {style:[styles.frame, frameStyle], pointerEvents:'none'}, 
React.createElement(BorderBox, {box:margin, style:styles.margin}, 
React.createElement(BorderBox, {box:padding, style:styles.padding}, 
React.createElement(View, {style:[styles.content, contentStyle]})))));}}]);return ElementBox;})(React.Component);







var styles=StyleSheet.create({
frame:{
position:'absolute'}, 

content:{
backgroundColor:'rgba(200, 230, 255, 0.8)'}, 

padding:{
borderColor:'rgba(77, 255, 0, 0.3)'}, 

margin:{
borderColor:'rgba(255, 132, 0, 0.3)'}});



module.exports = ElementBox;
});
__d('BorderBox',["React","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();var _get=function get(object, property, receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object, property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent, property, receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var React=require('React');
var View=require('View');var 

BorderBox=(function(_React$Component){function BorderBox(){_classCallCheck(this, BorderBox);_get(Object.getPrototypeOf(BorderBox.prototype), 'constructor', this).apply(this, arguments);}_inherits(BorderBox, _React$Component);_createClass(BorderBox, [{key:'render', value:
function render(){
var box=this.props.box;
if(!box){
return this.props.children;}

var style={
borderTopWidth:box.top, 
borderBottomWidth:box.bottom, 
borderLeftWidth:box.left, 
borderRightWidth:box.right};

return (
React.createElement(View, {style:[style, this.props.style]}, 
this.props.children));}}]);return BorderBox;})(React.Component);





module.exports = BorderBox;
});
__d('resolveBoxStyle',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





















function resolveBoxStyle(prefix, style){
var res={};
var subs=['top', 'left', 'bottom', 'right'];
var set=false;
subs.forEach(function(sub){
res[sub] = style[prefix] || 0;});

if(style[prefix]){
set = true;}

if(style[prefix + 'Vertical']){
res.top = res.bottom = style[prefix + 'Vertical'];
set = true;}

if(style[prefix + 'Horizontal']){
res.left = res.right = style[prefix + 'Horizontal'];
set = true;}

subs.forEach(function(sub){
var val=style[prefix + capFirst(sub)];
if(val){
res[sub] = val;
set = true;}});


if(!set){
return;}

return res;}


function capFirst(text){
return text[0].toUpperCase() + text.slice(1);}


module.exports = resolveBoxStyle;
});
__d('InspectorPanel',["React","StyleSheet","Text","View","ElementProperties","PerformanceOverlay","TouchableHighlight"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();var _get=function get(object, property, receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object, property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent, property, receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var ElementProperties=require('ElementProperties');
var PerformanceOverlay=require('PerformanceOverlay');
var TouchableHighlight=require('TouchableHighlight');

var PropTypes=React.PropTypes;var 

InspectorPanel=(function(_React$Component){function InspectorPanel(){_classCallCheck(this, InspectorPanel);_get(Object.getPrototypeOf(InspectorPanel.prototype), 'constructor', this).apply(this, arguments);}_inherits(InspectorPanel, _React$Component);_createClass(InspectorPanel, [{key:'renderWaiting', value:
function renderWaiting(){
if(this.props.inspecting){
return (
React.createElement(Text, {style:styles.waitingText}, 'Tap something to inspect it'));}




return React.createElement(Text, {style:styles.waitingText}, 'Nothing is inspected');}}, {key:'render', value:


function render(){
var contents;
if(this.props.inspected){
contents = 
React.createElement(ElementProperties, {
style:this.props.inspected.style, 
frame:this.props.inspected.frame, 
hierarchy:this.props.hierarchy, 
selection:this.props.selection, 
setSelection:this.props.setSelection});}else 


if(this.props.perfing){
contents = 
React.createElement(PerformanceOverlay, null);}else 

{
contents = 
React.createElement(View, {style:styles.waiting}, 
this.renderWaiting());}



return (
React.createElement(View, {style:styles.container}, 
!this.props.devtoolsIsOpen && contents, 
React.createElement(View, {style:styles.buttonRow}, 
React.createElement(Button, {
title:'Inspect', 
pressed:this.props.inspecting, 
onClick:this.props.setInspecting}), 

React.createElement(Button, {title:'Perf', 
pressed:this.props.perfing, 
onClick:this.props.setPerfing}))));}}]);return InspectorPanel;})(React.Component);







InspectorPanel.propTypes = {
devtoolsIsOpen:PropTypes.bool, 
inspecting:PropTypes.bool, 
setInspecting:PropTypes.func, 
inspected:PropTypes.object, 
perfing:PropTypes.bool, 
setPerfing:PropTypes.func};var 


Button=(function(_React$Component2){function Button(){_classCallCheck(this, Button);_get(Object.getPrototypeOf(Button.prototype), 'constructor', this).apply(this, arguments);}_inherits(Button, _React$Component2);_createClass(Button, [{key:'render', value:
function render(){var _this=this;
return (
React.createElement(TouchableHighlight, {onPress:function(){return _this.props.onClick(!_this.props.pressed);}, style:[
styles.button, 
this.props.pressed && styles.buttonPressed]}, 

React.createElement(Text, {style:styles.buttonText}, this.props.title)));}}]);return Button;})(React.Component);





var styles=StyleSheet.create({
buttonRow:{
flexDirection:'row'}, 

button:{
backgroundColor:'rgba(0, 0, 0, 0.3)', 
margin:2, 
height:30, 
justifyContent:'center', 
alignItems:'center'}, 

buttonPressed:{
backgroundColor:'rgba(255, 255, 255, 0.3)'}, 

buttonText:{
textAlign:'center', 
color:'white', 
margin:5}, 

container:{
backgroundColor:'rgba(0, 0, 0, 0.7)'}, 

waiting:{
height:100}, 

waitingText:{
fontSize:20, 
textAlign:'center', 
marginVertical:20}});



module.exports = InspectorPanel;
});
__d('ElementProperties',["BoxInspector","ReactPropTypes","React","StyleInspector","StyleSheet","Text","TouchableHighlight","TouchableWithoutFeedback","View","flattenStyle","mapWithSeparator"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var BoxInspector=require('BoxInspector');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleInspector=require('StyleInspector');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TouchableHighlight=require('TouchableHighlight');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var flattenStyle=require('flattenStyle');
var mapWithSeparator=require('mapWithSeparator');

var ElementProperties=React.createClass({displayName:'ElementProperties', 
propTypes:{
hierarchy:PropTypes.array.isRequired, 
style:PropTypes.oneOfType([
PropTypes.object, 
PropTypes.array, 
PropTypes.number])}, 



render:function(){var _this=this;
var style=flattenStyle(this.props.style);
var selection=this.props.selection;


return (
React.createElement(TouchableWithoutFeedback, null, 
React.createElement(View, {style:styles.info}, 
React.createElement(View, {style:styles.breadcrumb}, 
mapWithSeparator(
this.props.hierarchy, 
function(item, i){return (
React.createElement(TouchableHighlight, {
style:[styles.breadItem, i === selection && styles.selected], 
onPress:function(){return _this.props.setSelection(i);}}, 
React.createElement(Text, {style:styles.breadItemText}, 
item.getName?item.getName():'Unknown')));}, 



function(){return React.createElement(Text, {style:styles.breadSep}, '▸');})), 


React.createElement(View, {style:styles.row}, 
React.createElement(StyleInspector, {style:style}), 
React.createElement(BoxInspector, {style:style, frame:this.props.frame})))));}});







var styles=StyleSheet.create({
breadSep:{
fontSize:8, 
color:'white'}, 

breadcrumb:{
flexDirection:'row', 
flexWrap:'wrap', 
marginBottom:5}, 

selected:{
borderColor:'white', 
borderRadius:5}, 

breadItem:{
borderWidth:1, 
borderColor:'transparent', 
marginHorizontal:2}, 

breadItemText:{
fontSize:10, 
color:'white', 
marginHorizontal:5}, 

row:{
flexDirection:'row', 
alignItems:'center', 
justifyContent:'space-between'}, 

info:{
padding:10}, 

path:{
color:'white', 
fontSize:9}});



module.exports = ElementProperties;
});
__d('BoxInspector',["React","StyleSheet","Text","View","resolveBoxStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();var _get=function get(object, property, receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object, property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent, property, receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var resolveBoxStyle=require('resolveBoxStyle');

var blank={
top:0, 
left:0, 
right:0, 
bottom:0};var 


BoxInspector=(function(_React$Component){function BoxInspector(){_classCallCheck(this, BoxInspector);_get(Object.getPrototypeOf(BoxInspector.prototype), 'constructor', this).apply(this, arguments);}_inherits(BoxInspector, _React$Component);_createClass(BoxInspector, [{key:'render', value:
function render(){
var frame=this.props.frame;
var style=this.props.style;
var margin=style && resolveBoxStyle('margin', style) || blank;
var padding=style && resolveBoxStyle('padding', style) || blank;
return (
React.createElement(BoxContainer, {title:'margin', titleStyle:styles.marginLabel, box:margin}, 
React.createElement(BoxContainer, {title:'padding', box:padding}, 
React.createElement(View, null, 
React.createElement(Text, {style:styles.innerText}, '(', 
frame.left, ', ', frame.top, ')'), 

React.createElement(Text, {style:styles.innerText}, 
frame.width, ' × ', frame.height)))));}}]);return BoxInspector;})(React.Component);var 








BoxContainer=(function(_React$Component2){function BoxContainer(){_classCallCheck(this, BoxContainer);_get(Object.getPrototypeOf(BoxContainer.prototype), 'constructor', this).apply(this, arguments);}_inherits(BoxContainer, _React$Component2);_createClass(BoxContainer, [{key:'render', value:
function render(){
var box=this.props.box;
return (
React.createElement(View, {style:styles.box}, 
React.createElement(View, {style:styles.row}, 
React.createElement(Text, {style:[this.props.titleStyle, styles.label]}, this.props.title), 
React.createElement(Text, {style:styles.boxText}, box.top)), 

React.createElement(View, {style:styles.row}, 
React.createElement(Text, {style:styles.boxText}, box.left), 
this.props.children, 
React.createElement(Text, {style:styles.boxText}, box.right)), 

React.createElement(Text, {style:styles.boxText}, box.bottom)));}}]);return BoxContainer;})(React.Component);





var styles=StyleSheet.create({
row:{
flexDirection:'row', 
alignItems:'center', 
justifyContent:'space-around'}, 

marginLabel:{
width:60}, 

label:{
fontSize:10, 
color:'rgb(255,100,0)', 
marginLeft:5, 
flex:1, 
textAlign:'left', 
top:-3}, 

buffer:{
fontSize:10, 
color:'yellow', 
flex:1, 
textAlign:'center'}, 

innerText:{
color:'yellow', 
fontSize:12, 
textAlign:'center', 
width:70}, 

box:{
borderWidth:1, 
borderColor:'grey'}, 

boxText:{
color:'white', 
fontSize:12, 
marginHorizontal:3, 
marginVertical:2, 
textAlign:'center'}});



module.exports = BoxInspector;
});
__d('StyleInspector',["React","StyleSheet","Text","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();var _get=function get(object, property, receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object, property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent, property, receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');var 

StyleInspector=(function(_React$Component){function StyleInspector(){_classCallCheck(this, StyleInspector);_get(Object.getPrototypeOf(StyleInspector.prototype), 'constructor', this).apply(this, arguments);}_inherits(StyleInspector, _React$Component);_createClass(StyleInspector, [{key:'render', value:
function render(){var _this=this;
if(!this.props.style){
return React.createElement(Text, {style:styles.noStyle}, 'No style');}

var names=Object.keys(this.props.style);
return (
React.createElement(View, {style:styles.container}, 
React.createElement(View, null, 
names.map(function(name){return React.createElement(Text, {style:styles.attr}, name, ':');})), 

React.createElement(View, null, 
names.map(function(name){return React.createElement(Text, {style:styles.value}, _this.props.style[name]);}))));}}]);return StyleInspector;})(React.Component);






var styles=StyleSheet.create({
container:{
flexDirection:'row'}, 

row:{
flexDirection:'row', 
alignItems:'center', 
justifyContent:'space-around'}, 

attr:{
fontSize:10, 
color:'#ccc'}, 

value:{
fontSize:10, 
color:'white', 
marginLeft:10}, 

noStyle:{
color:'white', 
fontSize:10}});



module.exports = StyleInspector;
});
__d('mapWithSeparator',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






function mapWithSeparator(array, valueFunction, separatorFunction){
var results=[];
for(var i=0; i < array.length; i++) {
results.push(valueFunction(array[i], i, array));
if(i !== array.length - 1){
results.push(separatorFunction(i));}}


return results;}


module.exports = mapWithSeparator;
});
__d('PerformanceOverlay',["PerformanceLogger","React","StyleSheet","Text","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PerformanceLogger=require('PerformanceLogger');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var PerformanceOverlay=React.createClass({displayName:'PerformanceOverlay', 
render:function(){
var perfLogs=PerformanceLogger.getTimespans();
var items=[];

for(var key in perfLogs) {
if(perfLogs[key].totalTime){
items.push(
React.createElement(View, {style:styles.row}, 
React.createElement(Text, {style:[styles.text, styles.label]}, key), 
React.createElement(Text, {style:[styles.text, styles.totalTime]}, 
perfLogs[key].totalTime + 'ms')));}}






return (
React.createElement(View, {style:styles.container}, 
items));}});





var styles=StyleSheet.create({
container:{
height:100, 
paddingTop:10}, 

label:{
flex:1}, 

row:{
flexDirection:'row', 
paddingHorizontal:10}, 

text:{
color:'white', 
fontSize:12}, 

totalTime:{
paddingRight:100}});



module.exports = PerformanceOverlay;
});
__d('WarningBox',["AsyncStorage","EventEmitter","Map","PanResponder","React","StyleSheet","Text","TouchableOpacity","View","invariant","stringifySafe","Dimensions","rebound/rebound.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};











var AsyncStorage=require('AsyncStorage');
var EventEmitter=require('EventEmitter');
var Map=require('Map');
var PanResponder=require('PanResponder');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TouchableOpacity=require('TouchableOpacity');
var View=require('View');

var invariant=require('invariant');
var rebound=require('rebound/rebound.js');
var stringifySafe=require('stringifySafe');

var SCREEN_WIDTH=require('Dimensions').get('window').width;
var IGNORED_WARNINGS_KEY='__DEV_WARNINGS_IGNORED';

var consoleWarn=console.warn.bind(console);

var warningCounts=new Map();
var ignoredWarnings=[];
var totalWarningCount=0;
var warningCountEvents=new EventEmitter();























if(__DEV__){
console.warn = function(){
consoleWarn.apply(null, arguments);
if(!console.yellowBoxEnabled){
return;}

var warning=Array.prototype.map.call(arguments, stringifySafe).join(' ');
if(!console.yellowBoxResetIgnored && 
ignoredWarnings.indexOf(warning) !== -1){
return;}

var count=warningCounts.has(warning)?warningCounts.get(warning) + 1:1;
warningCounts.set(warning, count);
totalWarningCount += 1;
warningCountEvents.emit('count', totalWarningCount);};}



function saveIgnoredWarnings(){
AsyncStorage.setItem(
IGNORED_WARNINGS_KEY, 
JSON.stringify(ignoredWarnings), 
function(err){
if(err){
console.warn('Could not save ignored warnings.', err);}});}





AsyncStorage.getItem(IGNORED_WARNINGS_KEY, function(err, data){
if(!err && data && !console.yellowBoxResetIgnored){
ignoredWarnings = JSON.parse(data);}});



var WarningRow=React.createClass({displayName:'WarningRow', 
componentWillMount:function(){var _this=this;
this.springSystem = new rebound.SpringSystem();
this.dismissalSpring = this.springSystem.createSpring();
this.dismissalSpring.setRestSpeedThreshold(0.05);
this.dismissalSpring.setCurrentValue(0);
this.dismissalSpring.addListener({
onSpringUpdate:function(){
var val=_this.dismissalSpring.getCurrentValue();
_this.text && _this.text.setNativeProps({
left:SCREEN_WIDTH * val});

_this.container && _this.container.setNativeProps({
opacity:1 - val});

_this.closeButton && _this.closeButton.setNativeProps({
opacity:1 - val * 5});}, 


onSpringAtRest:function(){
if(_this.dismissalSpring.getCurrentValue()){
_this.collapseSpring.setEndValue(1);}}});



this.collapseSpring = this.springSystem.createSpring();
this.collapseSpring.setRestSpeedThreshold(0.05);
this.collapseSpring.setCurrentValue(0);
this.collapseSpring.getSpringConfig().friction = 20;
this.collapseSpring.getSpringConfig().tension = 200;
this.collapseSpring.addListener({
onSpringUpdate:function(){
var val=_this.collapseSpring.getCurrentValue();
_this.container && _this.container.setNativeProps({
height:Math.abs(46 - val * 46)});}, 


onSpringAtRest:function(){
_this.props.onDismissed();}});


this.panGesture = PanResponder.create({
onStartShouldSetPanResponder:function(){
return !!_this.dismissalSpring.getCurrentValue();}, 

onMoveShouldSetPanResponder:function(){return true;}, 
onPanResponderGrant:function(){
_this.isResponderOnlyToBlockTouches = 
!!_this.dismissalSpring.getCurrentValue();}, 

onPanResponderMove:function(e, gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

_this.dismissalSpring.setCurrentValue(gestureState.dx / SCREEN_WIDTH);}, 

onPanResponderRelease:function(e, gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

var gestureCompletion=gestureState.dx / SCREEN_WIDTH;
var doesGestureRelease=gestureState.vx + gestureCompletion > 0.5;
_this.dismissalSpring.setEndValue(doesGestureRelease?1:0);}});}, 



render:function(){var _this2=this;
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text, {style:styles.bold}, '(', 
warningCounts.get(this.props.warning), ')', ' ');}



return (
React.createElement(View, _extends({
style:styles.warningBox, 
ref:function(container){_this2.container = container;}}, 
this.panGesture.panHandlers), 
React.createElement(TouchableOpacity, {
onPress:this.props.onOpened}, 
React.createElement(Text, {
style:styles.warningText, 
numberOfLines:2, 
ref:function(text){_this2.text = text;}}, 
countText, 
this.props.warning)), 


React.createElement(View, {
ref:function(closeButton){_this2.closeButton = closeButton;}, 
style:styles.closeButton}, 
React.createElement(TouchableOpacity, {
onPress:function(){
_this2.dismissalSpring.setEndValue(1);}}, 

React.createElement(Text, {style:styles.closeButtonText}, '✕')))));}});







var WarningBoxOpened=React.createClass({displayName:'WarningBoxOpened', 
render:function(){
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text, {style:styles.bold}, '(', 
warningCounts.get(this.props.warning), ')', ' ');}



return (
React.createElement(TouchableOpacity, {
activeOpacity:0.9, 
onPress:this.props.onClose, 
style:styles.yellowBox}, 
React.createElement(Text, {style:styles.yellowBoxText}, 
countText, 
this.props.warning), 

React.createElement(View, {style:styles.yellowBoxButtons}, 
React.createElement(TouchableOpacity, {
onPress:this.props.onDismissed, 
style:styles.yellowBoxButton}, 
React.createElement(Text, {style:styles.yellowBoxButtonText}, 'Dismiss')), 



React.createElement(TouchableOpacity, {
onPress:this.props.onIgnored, 
style:styles.yellowBoxButton}, 
React.createElement(Text, {style:styles.yellowBoxButtonText}, 'Ignore')))));}});









var canMountWarningBox=true;

var WarningBox=React.createClass({displayName:'WarningBox', 
getInitialState:function(){
return {
totalWarningCount:totalWarningCount, 
openWarning:null};}, 


componentWillMount:function(){
if(console.yellowBoxResetIgnored){
AsyncStorage.setItem(IGNORED_WARNINGS_KEY, '[]', function(err){
if(err){
console.warn('Could not reset ignored warnings.', err);}});


ignoredWarnings = [];}}, 


componentDidMount:function(){
invariant(
canMountWarningBox, 
'There can only be one WarningBox');

canMountWarningBox = false;
warningCountEvents.addListener(
'count', 
this._onWarningCount);}, 


componentWillUnmount:function(){
warningCountEvents.removeAllListeners();
canMountWarningBox = true;}, 

_onWarningCount:function(totalWarningCount){var _this3=this;


setImmediate(function(){
_this3.setState({totalWarningCount:totalWarningCount});});}, 


_onDismiss:function(warning){
warningCounts.delete(warning);
this.setState({
openWarning:null});}, 


render:function(){var _this4=this;
if(warningCounts.size === 0){
return React.createElement(View, null);}

if(this.state.openWarning){
return (
React.createElement(WarningBoxOpened, {
warning:this.state.openWarning, 
onClose:function(){
_this4.setState({openWarning:null});}, 

onDismissed:this._onDismiss.bind(this, this.state.openWarning), 
onIgnored:function(){
ignoredWarnings.push(_this4.state.openWarning);
saveIgnoredWarnings();
_this4._onDismiss(_this4.state.openWarning);}}));}




var warningRows=[];
warningCounts.forEach(function(count, warning){
warningRows.push(
React.createElement(WarningRow, {
key:warning, 
onOpened:function(){
_this4.setState({openWarning:warning});}, 

onDismissed:_this4._onDismiss.bind(_this4, warning), 
warning:warning}));});



return (
React.createElement(View, {style:styles.warningContainer}, 
warningRows));}});





var styles=StyleSheet.create({
bold:{
fontWeight:'bold'}, 

closeButton:{
position:'absolute', 
right:0, 
height:46, 
width:46}, 

closeButtonText:{
color:'white', 
fontSize:32, 
position:'relative', 
left:8}, 

warningContainer:{
position:'absolute', 
left:0, 
right:0, 
bottom:0}, 

warningBox:{
position:'relative', 
backgroundColor:'rgba(171, 124, 36, 0.9)', 
flex:1, 
height:46}, 

warningText:{
color:'white', 
position:'absolute', 
left:0, 
marginLeft:15, 
marginRight:46, 
top:7}, 

yellowBox:{
backgroundColor:'rgba(171, 124, 36, 0.9)', 
position:'absolute', 
left:0, 
right:0, 
top:0, 
bottom:0, 
padding:15, 
paddingTop:35}, 

yellowBoxText:{
color:'white', 
fontSize:20}, 

yellowBoxButtons:{
flexDirection:'row', 
position:'absolute', 
bottom:0}, 

yellowBoxButton:{
flex:1, 
padding:25}, 

yellowBoxButtonText:{
color:'white', 
fontSize:16}});



module.exports = WarningBox;
});
__d('AsyncStorage',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTAsyncLocalStorage=NativeModules.AsyncLocalStorage;
var RCTAsyncRocksDBStorage=NativeModules.AsyncRocksDBStorage;


var RCTAsyncStorage=RCTAsyncRocksDBStorage || RCTAsyncLocalStorage;













var AsyncStorage={




getItem:function(
key, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiGet([key], function(errors, result){

var value=result && result[0] && result[0][1]?result[0][1]:null;
callback && callback(errors && convertError(errors[0]) || null, value);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(value);}});});}, 









setItem:function(
key, 
value, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiSet([[key, value]], function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});}, 







removeItem:function(
key, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiRemove([key], function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});}, 










mergeItem:function(
key, 
value, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiMerge([[key, value]], function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});}, 










clear:function(callback){
return new Promise(function(resolve, reject){
RCTAsyncStorage.clear(function(error){
callback && callback(convertError(error));
if(error && convertError(error)){
reject(convertError(error));}else 
{
resolve(null);}});});}, 








getAllKeys:function(callback){
return new Promise(function(resolve, reject){
RCTAsyncStorage.getAllKeys(function(error, keys){
callback && callback(convertError(error), keys);
if(error){
reject(convertError(error));}else 
{
resolve(keys);}});});}, 





















multiGet:function(
keys, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiGet(keys, function(errors, result){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error, result);
if(errors){
reject(error);}else 
{
resolve(result);}});});}, 











multiSet:function(
keyValuePairs, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiSet(keyValuePairs, function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});}, 








multiRemove:function(
keys, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiRemove(keys, function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});}, 











multiMerge:function(
keyValuePairs, 
callback)
{
return new Promise(function(resolve, reject){
RCTAsyncStorage.multiMerge(keyValuePairs, function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});}};







if(!RCTAsyncStorage.multiMerge){
delete AsyncStorage.mergeItem;
delete AsyncStorage.multiMerge;}


function convertError(error){
if(!error){
return null;}

var out=new Error(error.message);
out.key = error.key;
return out;}


module.exports = AsyncStorage;
});
__d('setupDevtools',["flattenStyle","ReactCurrentOwner","ReactInstanceHandles","ReactNativeMount","ReactReconciler","ReactNativeTextComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












function setupDevtools(){
var messageListeners=[];
var closeListeners=[];
var ws=new window.WebSocket('ws://192.168.1.123:8081/devtools');

var FOR_BACKEND={
resolveRNStyle:require('flattenStyle'), 
wall:{
listen:function(fn){
messageListeners.push(fn);}, 

onClose:function(fn){
closeListeners.push(fn);}, 

send:function(data){
ws.send(JSON.stringify(data));}}};



ws.onclose = function(){
console.warn('devtools socket closed');
closeListeners.forEach(function(fn){return fn();});};

ws.onerror = function(error){
console.warn('devtools socket errored', error);
closeListeners.forEach(function(fn){return fn();});};

ws.onopen = function(){
tryToConnect();};


function tryToConnect(){
ws.send('attach:agent');
var _interval=setInterval(function(){return ws.send('attach:agent');}, 500);
ws.onmessage = function(evt){
if(evt.data.indexOf('eval:') === 0){
clearInterval(_interval);
initialize(evt.data.slice('eval:'.length));}};}




function initialize(text){
try{

eval(text);}
catch(e) {
console.error('Failed to eval' + e.message);
return;}

window.__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:require('ReactCurrentOwner'), 
InstanceHandles:require('ReactInstanceHandles'), 
Mount:require('ReactNativeMount'), 
Reconciler:require('ReactReconciler'), 
TextComponent:require('ReactNativeTextComponent')});

ws.onmessage = handleMessage;}


function handleMessage(evt){
var data;
try{
data = JSON.parse(evt.data);}
catch(e) {
return console.error('failed to parse json: ' + evt.data);}


if(data.$close || data.$error){
closeListeners.forEach(function(fn){return fn();});
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.emit('shutdown');
tryToConnect();
return;}

if(data.$open){
return;}

messageListeners.forEach(function(fn){
try{
fn(data);}
catch(e) {



console.log(data);
throw e;}});}}





module.exports = setupDevtools;
});
__d('RCTRenderingPerf',["ReactDefaultPerf","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactDefaultPerf=require('ReactDefaultPerf');

var invariant=require('invariant');






var perfModules=[];
var enabled=false;

var RCTRenderingPerf={

toggle:function(){
console.log('Render perfomance measurements enabled');
enabled = true;}, 


start:function(){
if(!enabled){
return;}


ReactDefaultPerf.start();
perfModules.forEach(function(module){return module.start();});}, 


stop:function(){
if(!enabled){
return;}


ReactDefaultPerf.stop();
ReactDefaultPerf.printInclusive();
ReactDefaultPerf.printWasted();

var totalRender=0;
var totalTime=0;
var measurements=ReactDefaultPerf.getLastMeasurements();
for(var ii=0; ii < measurements.length; ii++) {
var render=measurements[ii].render;
for(var nodeName in render) {
totalRender += render[nodeName];}

totalTime += measurements[ii].totalTime;}

console.log('Total time spent in render(): ' + totalRender + 'ms');

perfModules.forEach(function(module){return module.stop();});}, 


register:function(module){
invariant(
typeof module.start === 'function', 
'Perf module should have start() function');

invariant(
typeof module.stop === 'function', 
'Perf module should have stop() function');

perfModules.push(module);}};



module.exports = RCTRenderingPerf;
});
__d('ReactDefaultPerf',["DOMProperty","ReactDefaultPerfAnalysis","ReactMount","ReactPerf","performanceNow"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var DOMProperty=require('DOMProperty');
var ReactDefaultPerfAnalysis=require('ReactDefaultPerfAnalysis');
var ReactMount=require('ReactMount');
var ReactPerf=require('ReactPerf');

var performanceNow=require('performanceNow');

function roundFloat(val){
return Math.floor(val * 100) / 100;}


function addValue(obj, key, val){
obj[key] = (obj[key] || 0) + val;}


var ReactDefaultPerf={
_allMeasurements:[], 
_mountStack:[0], 
_injected:false, 

start:function(){
if(!ReactDefaultPerf._injected){
ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);}


ReactDefaultPerf._allMeasurements.length = 0;
ReactPerf.enableMeasure = true;}, 


stop:function(){
ReactPerf.enableMeasure = false;}, 


getLastMeasurements:function(){
return ReactDefaultPerf._allMeasurements;}, 


printExclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Component class name':item.componentName, 
'Total inclusive time (ms)':roundFloat(item.inclusive), 
'Exclusive mount time (ms)':roundFloat(item.exclusive), 
'Exclusive render time (ms)':roundFloat(item.render), 
'Mount time per instance (ms)':roundFloat(item.exclusive / item.count), 
'Render time per instance (ms)':roundFloat(item.render / item.count), 
'Instances':item.count};}));}, 






printInclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Owner > component':item.componentName, 
'Inclusive time (ms)':roundFloat(item.time), 
'Instances':item.count};}));


console.log(
'Total time:', 
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');}, 



getMeasurementsSummaryMap:function(measurements){
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(
measurements, 
true);

return summary.map(function(item){
return {
'Owner > component':item.componentName, 
'Wasted time (ms)':item.time, 
'Instances':item.count};});}, 




printWasted:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
console.log(
'Total time:', 
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');}, 



printDOM:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getDOMSummary(measurements);
console.table(summary.map(function(item){
var result={};
result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
result['type'] = item.type;
result['args'] = JSON.stringify(item.args);
return result;}));

console.log(
'Total time:', 
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');}, 



_recordWrite:function(id, fnName, totalTime, args){

var writes=
ReactDefaultPerf.
_allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].
writes;
writes[id] = writes[id] || [];
writes[id].push({
type:fnName, 
time:totalTime, 
args:args});}, 



measure:function(moduleName, fnName, func){
return function(){for(var _len=arguments.length, args=Array(_len), _key=0; _key < _len; _key++) {args[_key] = arguments[_key];}
var totalTime;
var rv;
var start;

if(fnName === '_renderNewRootComponent' || 
fnName === 'flushBatchedUpdates'){




ReactDefaultPerf._allMeasurements.push({
exclusive:{}, 
inclusive:{}, 
render:{}, 
counts:{}, 
writes:{}, 
displayNames:{}, 
totalTime:0});

start = performanceNow();
rv = func.apply(this, args);
ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1].
totalTime = performanceNow() - start;
return rv;}else 
if(fnName === '_mountImageIntoNode' || 
moduleName === 'ReactDOMIDOperations'){
start = performanceNow();
rv = func.apply(this, args);
totalTime = performanceNow() - start;

if(fnName === '_mountImageIntoNode'){
var mountID=ReactMount.getID(args[1]);
ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);}else 
if(fnName === 'dangerouslyProcessChildrenUpdates'){

args[0].forEach(function(update){
var writeArgs={};
if(update.fromIndex !== null){
writeArgs.fromIndex = update.fromIndex;}

if(update.toIndex !== null){
writeArgs.toIndex = update.toIndex;}

if(update.textContent !== null){
writeArgs.textContent = update.textContent;}

if(update.markupIndex !== null){
writeArgs.markup = args[1][update.markupIndex];}

ReactDefaultPerf._recordWrite(
update.parentID, 
update.type, 
totalTime, 
writeArgs);});}else 


{

ReactDefaultPerf._recordWrite(
args[0], 
fnName, 
totalTime, 
Array.prototype.slice.call(args, 1));}


return rv;}else 
if(moduleName === 'ReactCompositeComponent' && (
fnName === 'mountComponent' || 
fnName === 'updateComponent' || 
fnName === '_renderValidatedComponent')){

if(typeof this._currentElement.type === 'string'){
return func.apply(this, args);}


var rootNodeID=fnName === 'mountComponent'?
args[0]:
this._rootNodeID;
var isRender=fnName === '_renderValidatedComponent';
var isMount=fnName === 'mountComponent';

var mountStack=ReactDefaultPerf._mountStack;
var entry=ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1];


if(isRender){
addValue(entry.counts, rootNodeID, 1);}else 
if(isMount){
mountStack.push(0);}


start = performanceNow();
rv = func.apply(this, args);
totalTime = performanceNow() - start;

if(isRender){
addValue(entry.render, rootNodeID, totalTime);}else 
if(isMount){
var subMountTime=mountStack.pop();
mountStack[mountStack.length - 1] += totalTime;
addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
addValue(entry.inclusive, rootNodeID, totalTime);}else 
{
addValue(entry.inclusive, rootNodeID, totalTime);}


entry.displayNames[rootNodeID] = {
current:this.getName(), 
owner:this._currentElement._owner?
this._currentElement._owner.getName():
'<root>'};


return rv;}else 
{
return func.apply(this, args);}};}};





module.exports = ReactDefaultPerf;
});
__d('DOMProperty',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var invariant=require('invariant');

function checkMask(value, bitmask){
return (value & bitmask) === bitmask;}


var DOMPropertyInjection={




MUST_USE_ATTRIBUTE:0x1, 
MUST_USE_PROPERTY:0x2, 
HAS_SIDE_EFFECTS:0x4, 
HAS_BOOLEAN_VALUE:0x8, 
HAS_NUMERIC_VALUE:0x10, 
HAS_POSITIVE_NUMERIC_VALUE:0x20 | 0x10, 
HAS_OVERLOADED_BOOLEAN_VALUE:0x40, 





























injectDOMPropertyConfig:function(domPropertyConfig){
var Injection=DOMPropertyInjection;
var Properties=domPropertyConfig.Properties || {};
var DOMAttributeNamespaces=domPropertyConfig.DOMAttributeNamespaces || {};
var DOMAttributeNames=domPropertyConfig.DOMAttributeNames || {};
var DOMPropertyNames=domPropertyConfig.DOMPropertyNames || {};
var DOMMutationMethods=domPropertyConfig.DOMMutationMethods || {};

if(domPropertyConfig.isCustomAttribute){
DOMProperty._isCustomAttributeFunctions.push(
domPropertyConfig.isCustomAttribute);}



for(var propName in Properties) {
invariant(
!DOMProperty.properties.hasOwnProperty(propName), 
'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + 
'\'%s\' which has already been injected. You may be accidentally ' + 
'injecting the same DOM property config twice, or you may be ' + 
'injecting two configs that have conflicting property names.', 
propName);


var lowerCased=propName.toLowerCase();
var propConfig=Properties[propName];

var propertyInfo={
attributeName:lowerCased, 
attributeNamespace:null, 
propertyName:propName, 
mutationMethod:null, 

mustUseAttribute:checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE), 
mustUseProperty:checkMask(propConfig, Injection.MUST_USE_PROPERTY), 
hasSideEffects:checkMask(propConfig, Injection.HAS_SIDE_EFFECTS), 
hasBooleanValue:checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE), 
hasNumericValue:checkMask(propConfig, Injection.HAS_NUMERIC_VALUE), 
hasPositiveNumericValue:
checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE), 
hasOverloadedBooleanValue:
checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)};


invariant(
!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty, 
'DOMProperty: Cannot require using both attribute and property: %s', 
propName);

invariant(
propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects, 
'DOMProperty: Properties that have side effects must use property: %s', 
propName);

invariant(
propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + 
propertyInfo.hasOverloadedBooleanValue <= 1, 
'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 
'numeric value, but not a combination: %s', 
propName);


if(__DEV__){
DOMProperty.getPossibleStandardName[lowerCased] = propName;}


if(DOMAttributeNames.hasOwnProperty(propName)){
var attributeName=DOMAttributeNames[propName];
propertyInfo.attributeName = attributeName;
if(__DEV__){
DOMProperty.getPossibleStandardName[attributeName] = propName;}}



if(DOMAttributeNamespaces.hasOwnProperty(propName)){
propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];}


if(DOMPropertyNames.hasOwnProperty(propName)){
propertyInfo.propertyName = DOMPropertyNames[propName];}


if(DOMMutationMethods.hasOwnProperty(propName)){
propertyInfo.mutationMethod = DOMMutationMethods[propName];}


DOMProperty.properties[propName] = propertyInfo;}}};



var defaultValueCache={};














var DOMProperty={

ID_ATTRIBUTE_NAME:'data-reactid', 





































properties:{}, 






getPossibleStandardName:__DEV__?{}:null, 




_isCustomAttributeFunctions:[], 





isCustomAttribute:function(attributeName){
for(var i=0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
var isCustomAttributeFn=DOMProperty._isCustomAttributeFunctions[i];
if(isCustomAttributeFn(attributeName)){
return true;}}


return false;}, 










getDefaultValueForProperty:function(nodeName, prop){
var nodeDefaults=defaultValueCache[nodeName];
var testElement;
if(!nodeDefaults){
defaultValueCache[nodeName] = nodeDefaults = {};}

if(!(prop in nodeDefaults)){
testElement = document.createElement(nodeName);
nodeDefaults[prop] = testElement[prop];}

return nodeDefaults[prop];}, 


injection:DOMPropertyInjection};


module.exports = DOMProperty;
});
__d('ReactDefaultPerfAnalysis',["Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










assign=require('Object.assign');


var DONT_CARE_THRESHOLD=1.2;
var DOM_OPERATION_TYPES={
'_mountImageIntoNode':'set innerHTML', 
INSERT_MARKUP:'set innerHTML', 
MOVE_EXISTING:'move', 
REMOVE_NODE:'remove', 
TEXT_CONTENT:'set textContent', 
'updatePropertyByID':'update attribute', 
'deletePropertyByID':'delete attribute', 
'updateStylesByID':'update styles', 
'updateInnerHTMLByID':'set innerHTML', 
'dangerouslyReplaceNodeWithMarkupByID':'replace'};


function getTotalTime(measurements){




var totalTime=0;
for(var i=0; i < measurements.length; i++) {
var measurement=measurements[i];
totalTime += measurement.totalTime;}

return totalTime;}


function getDOMSummary(measurements){
var items=[];
for(var i=0; i < measurements.length; i++) {
var measurement=measurements[i];
var id;

for(id in measurement.writes) {
measurement.writes[id].forEach(function(write){
items.push({
id:id, 
type:DOM_OPERATION_TYPES[write.type] || write.type, 
args:write.args});});}}




return items;}


function getExclusiveSummary(measurements){
var candidates={};
var displayName;

for(var i=0; i < measurements.length; i++) {
var measurement=measurements[i];
var allIDs=assign(
{}, 
measurement.exclusive, 
measurement.inclusive);


for(var id in allIDs) {
displayName = measurement.displayNames[id].current;

candidates[displayName] = candidates[displayName] || {
componentName:displayName, 
inclusive:0, 
exclusive:0, 
render:0, 
count:0};

if(measurement.render[id]){
candidates[displayName].render += measurement.render[id];}

if(measurement.exclusive[id]){
candidates[displayName].exclusive += measurement.exclusive[id];}

if(measurement.inclusive[id]){
candidates[displayName].inclusive += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[displayName].count += measurement.counts[id];}}}





var arr=[];
for(displayName in candidates) {
if(candidates[displayName].exclusive >= DONT_CARE_THRESHOLD){
arr.push(candidates[displayName]);}}



arr.sort(function(a, b){
return b.exclusive - a.exclusive;});


return arr;}


function getInclusiveSummary(measurements, onlyClean){
var candidates={};
var inclusiveKey;

for(var i=0; i < measurements.length; i++) {
var measurement=measurements[i];
var allIDs=assign(
{}, 
measurement.exclusive, 
measurement.inclusive);

var cleanComponents;

if(onlyClean){
cleanComponents = getUnchangedComponents(measurement);}


for(var id in allIDs) {
if(onlyClean && !cleanComponents[id]){
continue;}


var displayName=measurement.displayNames[id];




inclusiveKey = displayName.owner + ' > ' + displayName.current;

candidates[inclusiveKey] = candidates[inclusiveKey] || {
componentName:inclusiveKey, 
time:0, 
count:0};


if(measurement.inclusive[id]){
candidates[inclusiveKey].time += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[inclusiveKey].count += measurement.counts[id];}}}





var arr=[];
for(inclusiveKey in candidates) {
if(candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD){
arr.push(candidates[inclusiveKey]);}}



arr.sort(function(a, b){
return b.time - a.time;});


return arr;}


function getUnchangedComponents(measurement){



var cleanComponents={};
var dirtyLeafIDs=Object.keys(measurement.writes);
var allIDs=assign({}, measurement.exclusive, measurement.inclusive);

for(var id in allIDs) {
var isDirty=false;


for(var i=0; i < dirtyLeafIDs.length; i++) {
if(dirtyLeafIDs[i].indexOf(id) === 0){
isDirty = true;
break;}}


if(!isDirty && measurement.counts[id] > 0){
cleanComponents[id] = true;}}


return cleanComponents;}


var ReactDefaultPerfAnalysis={
getExclusiveSummary:getExclusiveSummary, 
getInclusiveSummary:getInclusiveSummary, 
getDOMSummary:getDOMSummary, 
getTotalTime:getTotalTime};


module.exports = ReactDefaultPerfAnalysis;
});
__d('ReactMount',["DOMProperty","ReactBrowserEventEmitter","ReactCurrentOwner","ReactElement","ReactEmptyComponent","ReactInstanceHandles","ReactInstanceMap","ReactMarkupChecksum","ReactPerf","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","containsNode","instantiateReactComponent","invariant","setInnerHTML","shouldUpdateReactComponent","validateDOMNesting","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var DOMProperty=require('DOMProperty');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMarkupChecksum=require('ReactMarkupChecksum');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var emptyObject=require('emptyObject');
var containsNode=require('containsNode');
var instantiateReactComponent=require('instantiateReactComponent');
var invariant=require('invariant');
var setInnerHTML=require('setInnerHTML');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var validateDOMNesting=require('validateDOMNesting');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;

var ATTR_NAME=DOMProperty.ID_ATTRIBUTE_NAME;
var nodeCache={};

var ELEMENT_NODE_TYPE=1;
var DOC_NODE_TYPE=9;
var DOCUMENT_FRAGMENT_NODE_TYPE=11;


var instancesByReactRootID={};


var containersByReactRootID={};

if(__DEV__){

var rootElementsByReactRootID={};}



var findComponentRootReusableArray=[];







function firstDifferenceIndex(string1, string2){
var minLen=Math.min(string1.length, string2.length);
for(var i=0; i < minLen; i++) {
if(string1.charAt(i) !== string2.charAt(i)){
return i;}}


return string1.length === string2.length?-1:minLen;}







function getReactRootElementInContainer(container){
if(!container){
return null;}


if(container.nodeType === DOC_NODE_TYPE){
return container.documentElement;}else 
{
return container.firstChild;}}







function getReactRootID(container){
var rootElement=getReactRootElementInContainer(container);
return rootElement && ReactMount.getID(rootElement);}












function getID(node){
var id=internalGetID(node);
if(id){
if(nodeCache.hasOwnProperty(id)){
var cached=nodeCache[id];
if(cached !== node){
invariant(
!isValid(cached, id), 
'ReactMount: Two valid but unequal nodes with the same `%s`: %s', 
ATTR_NAME, id);


nodeCache[id] = node;}}else 

{
nodeCache[id] = node;}}



return id;}


function internalGetID(node){



return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';}








function setID(node, id){
var oldID=internalGetID(node);
if(oldID !== id){
delete nodeCache[oldID];}

node.setAttribute(ATTR_NAME, id);
nodeCache[id] = node;}









function getNode(id){
if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}









function getNodeFromInstance(instance){
var id=ReactInstanceMap.get(instance)._rootNodeID;
if(ReactEmptyComponent.isNullComponentID(id)){
return null;}

if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}












function isValid(node, id){
if(node){
invariant(
internalGetID(node) === id, 
'ReactMount: Unexpected modification of `%s`', 
ATTR_NAME);


var container=ReactMount.findReactContainerForID(id);
if(container && containsNode(container, node)){
return true;}}



return false;}







function purgeID(id){
delete nodeCache[id];}


var deepestNodeSoFar=null;
function findDeepestCachedAncestorImpl(ancestorID){
var ancestor=nodeCache[ancestorID];
if(ancestor && isValid(ancestor, ancestorID)){
deepestNodeSoFar = ancestor;}else 
{


return false;}}






function findDeepestCachedAncestor(targetID){
deepestNodeSoFar = null;
ReactInstanceHandles.traverseAncestors(
targetID, 
findDeepestCachedAncestorImpl);


var foundNode=deepestNodeSoFar;
deepestNodeSoFar = null;
return foundNode;}











function mountComponentIntoNode(
componentInstance, 
rootID, 
container, 
transaction, 
shouldReuseMarkup, 
context){
if(__DEV__){
if(context === emptyObject){
context = {};}

var tag=container.nodeName.toLowerCase();
context[validateDOMNesting.ancestorInfoContextKey] = 
validateDOMNesting.updatedAncestorInfo(null, tag, null);}

var markup=ReactReconciler.mountComponent(
componentInstance, rootID, transaction, context);

componentInstance._renderedComponent._topLevelWrapper = componentInstance;
ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup);}










function batchedMountComponentIntoNode(
componentInstance, 
rootID, 
container, 
shouldReuseMarkup, 
context){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode, 
null, 
componentInstance, 
rootID, 
container, 
transaction, 
shouldReuseMarkup, 
context);

ReactUpdates.ReactReconcileTransaction.release(transaction);}











function unmountComponentFromNode(instance, container){
ReactReconciler.unmountComponent(instance);

if(container.nodeType === DOC_NODE_TYPE){
container = container.documentElement;}



while(container.lastChild) {
container.removeChild(container.lastChild);}}








var TopLevelWrapper=function(){};
TopLevelWrapper.prototype.render = function(){

return this.props;};




















var ReactMount={

_instancesByReactRootID:instancesByReactRootID, 









scrollMonitor:function(container, renderCallback){
renderCallback();}, 









_updateRootComponent:function(
prevComponent, 
nextElement, 
container, 
callback){
ReactMount.scrollMonitor(container, function(){
ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);}});



if(__DEV__){

rootElementsByReactRootID[getReactRootID(container)] = 
getReactRootElementInContainer(container);}


return prevComponent;}, 









_registerComponent:function(nextComponent, container){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE || 
container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE), 

'_registerComponent(...): Target container is not a DOM element.');


ReactBrowserEventEmitter.ensureScrollValueMonitoring();

var reactRootID=ReactMount.registerContainer(container);
instancesByReactRootID[reactRootID] = nextComponent;
return reactRootID;}, 









_renderNewRootComponent:function(
nextElement, 
container, 
shouldReuseMarkup, 
context)
{



warning(
ReactCurrentOwner.current == null, 
'_renderNewRootComponent(): Render methods should be a pure function ' + 
'of props and state; triggering nested component updates from ' + 
'render is not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate. Check the render method of %s.', 
ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 
'ReactCompositeComponent');


var componentInstance=instantiateReactComponent(nextElement, null);
var reactRootID=ReactMount._registerComponent(
componentInstance, 
container);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode, 
componentInstance, 
reactRootID, 
container, 
shouldReuseMarkup, 
context);


if(__DEV__){

rootElementsByReactRootID[reactRootID] = 
getReactRootElementInContainer(container);}


return componentInstance;}, 















renderSubtreeIntoContainer:function(parentComponent, nextElement, container, callback){
invariant(
parentComponent != null && parentComponent._reactInternalInstance != null, 
'parentComponent must be a valid React Component');

return ReactMount._renderSubtreeIntoContainer(
parentComponent, 
nextElement, 
container, 
callback);}, 



_renderSubtreeIntoContainer:function(parentComponent, nextElement, container, callback){
invariant(
ReactElement.isValidElement(nextElement), 
'React.render(): Invalid component element.%s', 

typeof nextElement === 'string'?
' Instead of passing an element string, make sure to instantiate ' + 
'it by passing it to React.createElement.':
typeof nextElement === 'function'?
' Instead of passing a component class, make sure to instantiate ' + 
'it by passing it to React.createElement.':

nextElement != null && nextElement.props !== undefined?
' This may be caused by unintentionally loading two independent ' + 
'copies of React.':
'');



warning(
!container || !container.tagName || 
container.tagName.toUpperCase() !== 'BODY', 
'render(): Rendering components directly into document.body is ' + 
'discouraged, since its children are often manipulated by third-party ' + 
'scripts and browser extensions. This may lead to subtle ' + 
'reconciliation issues. Try rendering into a container element created ' + 
'for your app.');


var nextWrappedElement=new ReactElement(
TopLevelWrapper, 
null, 
null, 
null, 
nextElement);


var prevComponent=instancesByReactRootID[getReactRootID(container)];

if(prevComponent){
var prevWrappedElement=prevComponent._currentElement;
var prevElement=prevWrappedElement.props;
if(shouldUpdateReactComponent(prevElement, nextElement)){
return ReactMount._updateRootComponent(
prevComponent, 
nextWrappedElement, 
container, 
callback).
_renderedComponent.getPublicInstance();}else 
{
ReactMount.unmountComponentAtNode(container);}}



var reactRootElement=getReactRootElementInContainer(container);
var containerHasReactMarkup=
reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

if(__DEV__){
if(!containerHasReactMarkup || reactRootElement.nextSibling){
var rootElementSibling=reactRootElement;
while(rootElementSibling) {
if(ReactMount.isRenderedByReact(rootElementSibling)){
warning(
false, 
'render(): Target node has markup rendered by React, but there ' + 
'are unrelated nodes as well. This is most commonly caused by ' + 
'white-space inserted around server-rendered markup.');

break;}


rootElementSibling = rootElementSibling.nextSibling;}}}




var shouldReuseMarkup=containerHasReactMarkup && !prevComponent;
var component=ReactMount._renderNewRootComponent(
nextWrappedElement, 
container, 
shouldReuseMarkup, 
parentComponent != null?
parentComponent._reactInternalInstance._processChildContext(
parentComponent._reactInternalInstance._context):

emptyObject).
_renderedComponent.getPublicInstance();
if(callback){
callback.call(component);}

return component;}, 















render:function(nextElement, container, callback){
return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);}, 










registerContainer:function(container){
var reactRootID=getReactRootID(container);
if(reactRootID){

reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);}

if(!reactRootID){

reactRootID = ReactInstanceHandles.createReactRootID();}

containersByReactRootID[reactRootID] = container;
return reactRootID;}, 









unmountComponentAtNode:function(container){




warning(
ReactCurrentOwner.current == null, 
'unmountComponentAtNode(): Render methods should be a pure function ' + 
'of props and state; triggering nested component updates from render ' + 
'is not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate. Check the render method of %s.', 
ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 
'ReactCompositeComponent');


invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE || 
container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE), 

'unmountComponentAtNode(...): Target container is not a DOM element.');


var reactRootID=getReactRootID(container);
var component=instancesByReactRootID[reactRootID];
if(!component){
return false;}

ReactUpdates.batchedUpdates(
unmountComponentFromNode, 
component, 
container);

delete instancesByReactRootID[reactRootID];
delete containersByReactRootID[reactRootID];
if(__DEV__){
delete rootElementsByReactRootID[reactRootID];}

return true;}, 









findReactContainerForID:function(id){
var reactRootID=ReactInstanceHandles.getReactRootIDFromNodeID(id);
var container=containersByReactRootID[reactRootID];

if(__DEV__){
var rootElement=rootElementsByReactRootID[reactRootID];
if(rootElement && rootElement.parentNode !== container){
warning(


internalGetID(rootElement) === reactRootID, 
'ReactMount: Root element ID differed from reactRootID.');

var containerChild=container.firstChild;
if(containerChild && 
reactRootID === internalGetID(containerChild)){




rootElementsByReactRootID[reactRootID] = containerChild;}else 
{
warning(
false, 
'ReactMount: Root element has been removed from its original ' + 
'container. New container: %s', 
rootElement.parentNode);}}}





return container;}, 








findReactNodeByID:function(id){
var reactRoot=ReactMount.findReactContainerForID(id);
return ReactMount.findComponentRoot(reactRoot, id);}, 









isRenderedByReact:function(node){
if(node.nodeType !== 1){

return false;}

var id=ReactMount.getID(node);
return id?id.charAt(0) === SEPARATOR:false;}, 










getFirstReactDOM:function(node){
var current=node;
while(current && current.parentNode !== current) {
if(ReactMount.isRenderedByReact(current)){
return current;}

current = current.parentNode;}

return null;}, 












findComponentRoot:function(ancestorNode, targetID){
var firstChildren=findComponentRootReusableArray;
var childIndex=0;

var deepestAncestor=findDeepestCachedAncestor(targetID) || ancestorNode;

firstChildren[0] = deepestAncestor.firstChild;
firstChildren.length = 1;

while(childIndex < firstChildren.length) {
var child=firstChildren[childIndex++];
var targetChild;

while(child) {
var childID=ReactMount.getID(child);
if(childID){





if(targetID === childID){
targetChild = child;}else 
if(ReactInstanceHandles.isAncestorIDOf(childID, targetID)){




firstChildren.length = childIndex = 0;
firstChildren.push(child.firstChild);}}else 


{





firstChildren.push(child.firstChild);}


child = child.nextSibling;}


if(targetChild){



firstChildren.length = 0;

return targetChild;}}



firstChildren.length = 0;

invariant(
false, 
'findComponentRoot(..., %s): Unable to find element. This probably ' + 
'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 
'usually due to forgetting a <tbody> when using tables, nesting tags ' + 
'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 
'parent. ' + 
'Try inspecting the child nodes of the element with React ID `%s`.', 
targetID, 
ReactMount.getID(ancestorNode));}, 



_mountImageIntoNode:function(markup, container, shouldReuseMarkup){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE || 
container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE), 

'mountComponentIntoNode(...): Target container is not valid.');


if(shouldReuseMarkup){
var rootElement=getReactRootElementInContainer(container);
if(ReactMarkupChecksum.canReuseMarkup(markup, rootElement)){
return;}else 
{
var checksum=rootElement.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

var rootMarkup=rootElement.outerHTML;
rootElement.setAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME, 
checksum);


var diffIndex=firstDifferenceIndex(markup, rootMarkup);
var difference=' (client) ' + 
markup.substring(diffIndex - 20, diffIndex + 20) + 
'\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

invariant(
container.nodeType !== DOC_NODE_TYPE, 
'You\'re trying to render a component to the document using ' + 
'server rendering but the checksum was invalid. This usually ' + 
'means you rendered a different component type or props on ' + 
'the client from the one on the server, or your render() ' + 
'methods are impure. React cannot handle this case due to ' + 
'cross-browser quirks by rendering at the document root. You ' + 
'should look for environment dependent code in your components ' + 
'and ensure the props are the same client and server side:\n%s', 
difference);


if(__DEV__){
warning(
false, 
'React attempted to reuse markup in a container but the ' + 
'checksum was invalid. This generally means that you are ' + 
'using server rendering and the markup generated on the ' + 
'server was not what the client was expecting. React injected ' + 
'new markup to compensate which works but you have lost many ' + 
'of the benefits of server rendering. Instead, figure out ' + 
'why the markup being generated is different on the client ' + 
'or server:\n%s', 
difference);}}}





invariant(
container.nodeType !== DOC_NODE_TYPE, 
'You\'re trying to render a component to the document but ' + 
'you didn\'t use server rendering. We can\'t do this ' + 
'without using server rendering due to cross-browser quirks. ' + 
'See React.renderToString() for server rendering.');


setInnerHTML(container, markup);}, 






getReactRootID:getReactRootID, 

getID:getID, 

setID:setID, 

getNode:getNode, 

getNodeFromInstance:getNodeFromInstance, 

purgeID:purgeID};


ReactPerf.measureMethods(ReactMount, 'ReactMount', {
_renderNewRootComponent:'_renderNewRootComponent', 
_mountImageIntoNode:'_mountImageIntoNode'});


module.exports = ReactMount;
});
__d('ReactBrowserEventEmitter',["EventConstants","EventPluginHub","EventPluginRegistry","ReactEventEmitterMixin","ViewportMetrics","Object.assign","isEventSupported"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPluginRegistry=require('EventPluginRegistry');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ViewportMetrics=require('ViewportMetrics');

var assign=require('Object.assign');
var isEventSupported=require('isEventSupported');
























































var alreadyListeningTo={};
var isMonitoringScrollValue=false;
var reactTopListenersCounter=0;




var topEventMapping={
topBlur:'blur', 
topChange:'change', 
topClick:'click', 
topCompositionEnd:'compositionend', 
topCompositionStart:'compositionstart', 
topCompositionUpdate:'compositionupdate', 
topContextMenu:'contextmenu', 
topCopy:'copy', 
topCut:'cut', 
topDoubleClick:'dblclick', 
topDrag:'drag', 
topDragEnd:'dragend', 
topDragEnter:'dragenter', 
topDragExit:'dragexit', 
topDragLeave:'dragleave', 
topDragOver:'dragover', 
topDragStart:'dragstart', 
topDrop:'drop', 
topFocus:'focus', 
topInput:'input', 
topKeyDown:'keydown', 
topKeyPress:'keypress', 
topKeyUp:'keyup', 
topMouseDown:'mousedown', 
topMouseMove:'mousemove', 
topMouseOut:'mouseout', 
topMouseOver:'mouseover', 
topMouseUp:'mouseup', 
topPaste:'paste', 
topScroll:'scroll', 
topSelectionChange:'selectionchange', 
topTextInput:'textInput', 
topTouchCancel:'touchcancel', 
topTouchEnd:'touchend', 
topTouchMove:'touchmove', 
topTouchStart:'touchstart', 
topWheel:'wheel'};





var topListenersIDKey='_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt){


if(!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)){
mountAt[topListenersIDKey] = reactTopListenersCounter++;
alreadyListeningTo[mountAt[topListenersIDKey]] = {};}

return alreadyListeningTo[mountAt[topListenersIDKey]];}












var ReactBrowserEventEmitter=assign({}, ReactEventEmitterMixin, {




ReactEventListener:null, 

injection:{



injectReactEventListener:function(ReactEventListener){
ReactEventListener.setHandleTopLevel(
ReactBrowserEventEmitter.handleTopLevel);

ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;}}, 








setEnabled:function(enabled){
if(ReactBrowserEventEmitter.ReactEventListener){
ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);}}, 






isEnabled:function(){
return !!(
ReactBrowserEventEmitter.ReactEventListener && 
ReactBrowserEventEmitter.ReactEventListener.isEnabled());}, 
























listenTo:function(registrationName, contentDocumentHandle){
var mountAt=contentDocumentHandle;
var isListening=getListeningForDocument(mountAt);
var dependencies=
EventPluginRegistry.registrationNameDependencies[registrationName];

var topLevelTypes=EventConstants.topLevelTypes;
for(var i=0; i < dependencies.length; i++) {
var dependency=dependencies[i];
if(!(
isListening.hasOwnProperty(dependency) && 
isListening[dependency]))
{
if(dependency === topLevelTypes.topWheel){
if(isEventSupported('wheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel, 
'wheel', 
mountAt);}else 

if(isEventSupported('mousewheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel, 
'mousewheel', 
mountAt);}else 

{


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel, 
'DOMMouseScroll', 
mountAt);}}else 


if(dependency === topLevelTypes.topScroll){

if(isEventSupported('scroll', true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topScroll, 
'scroll', 
mountAt);}else 

{
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topScroll, 
'scroll', 
ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);}}else 


if(dependency === topLevelTypes.topFocus || 
dependency === topLevelTypes.topBlur){

if(isEventSupported('focus', true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topFocus, 
'focus', 
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topBlur, 
'blur', 
mountAt);}else 

if(isEventSupported('focusin')){


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topFocus, 
'focusin', 
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topBlur, 
'focusout', 
mountAt);}




isListening[topLevelTypes.topBlur] = true;
isListening[topLevelTypes.topFocus] = true;}else 
if(topEventMapping.hasOwnProperty(dependency)){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
dependency, 
topEventMapping[dependency], 
mountAt);}



isListening[dependency] = true;}}}, 




trapBubbledEvent:function(topLevelType, handlerBaseName, handle){
return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelType, 
handlerBaseName, 
handle);}, 



trapCapturedEvent:function(topLevelType, handlerBaseName, handle){
return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelType, 
handlerBaseName, 
handle);}, 











ensureScrollValueMonitoring:function(){
if(!isMonitoringScrollValue){
var refresh=ViewportMetrics.refreshScrollValues;
ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
isMonitoringScrollValue = true;}}, 



eventNameDispatchConfigs:EventPluginHub.eventNameDispatchConfigs, 

registrationNameModules:EventPluginHub.registrationNameModules, 

putListener:EventPluginHub.putListener, 

getListener:EventPluginHub.getListener, 

deleteListener:EventPluginHub.deleteListener, 

deleteAllListeners:EventPluginHub.deleteAllListeners});



module.exports = ReactBrowserEventEmitter;
});
__d('ViewportMetrics',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ViewportMetrics={

currentScrollLeft:0, 

currentScrollTop:0, 

refreshScrollValues:function(scrollPosition){
ViewportMetrics.currentScrollLeft = scrollPosition.x;
ViewportMetrics.currentScrollTop = scrollPosition.y;}};




module.exports = ViewportMetrics;
});
__d('isEventSupported',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ExecutionEnvironment=require('ExecutionEnvironment');

var useHasFeature;
if(ExecutionEnvironment.canUseDOM){
useHasFeature = 
document.implementation && 
document.implementation.hasFeature && 


document.implementation.hasFeature('', '') !== true;}
















function isEventSupported(eventNameSuffix, capture){
if(!ExecutionEnvironment.canUseDOM || 
capture && !('addEventListener' in document)){
return false;}


var eventName='on' + eventNameSuffix;
var isSupported=(eventName in document);

if(!isSupported){
var element=document.createElement('div');
element.setAttribute(eventName, 'return;');
isSupported = typeof element[eventName] === 'function';}


if(!isSupported && useHasFeature && eventNameSuffix === 'wheel'){

isSupported = document.implementation.hasFeature('Events.wheel', '3.0');}


return isSupported;}


module.exports = isEventSupported;
});
__d('ReactMarkupChecksum',["adler32"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var adler32=require('adler32');

var ReactMarkupChecksum={
CHECKSUM_ATTR_NAME:'data-react-checksum', 





addChecksumToMarkup:function(markup){
var checksum=adler32(markup);
return markup.replace(
'>', 
' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">');}, 








canReuseMarkup:function(markup, element){
var existingChecksum=element.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
var markupChecksum=adler32(markup);
return markupChecksum === existingChecksum;}};



module.exports = ReactMarkupChecksum;
});
__d('adler32',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var MOD=65521;





function adler32(data){
var a=1;
var b=0;
for(var i=0; i < data.length; i++) {
a = (a + data.charCodeAt(i)) % MOD;
b = (b + a) % MOD;}

return a | b << 16;}


module.exports = adler32;
});
__d('containsNode',["isTextNode"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











isTextNode=require('isTextNode');










function containsNode(outerNode, innerNode){
if(!outerNode || !innerNode){
return false;}else 
if(outerNode === innerNode){
return true;}else 
if(isTextNode(outerNode)){
return false;}else 
if(isTextNode(innerNode)){
return containsNode(outerNode, innerNode.parentNode);}else 
if(outerNode.contains){
return outerNode.contains(innerNode);}else 
if(outerNode.compareDocumentPosition){
return !!(outerNode.compareDocumentPosition(innerNode) & 16);}else 
{
return false;}}



module.exports = containsNode;
});
__d('isTextNode',["isNode"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











isNode=require('isNode');





function isTextNode(object){
return isNode(object) && object.nodeType == 3;}


module.exports = isTextNode;
});
__d('setInnerHTML',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var ExecutionEnvironment=require('ExecutionEnvironment');

var WHITESPACE_TEST=/^[ \r\n\t\f]/;
var NONVISIBLE_TEST=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;









var setInnerHTML=function(node, html){
node.innerHTML = html;};



if(typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction){
setInnerHTML = function(node, html){
MSApp.execUnsafeLocalFunction(function(){
node.innerHTML = html;});};}




if(ExecutionEnvironment.canUseDOM){






var testElement=document.createElement('div');
testElement.innerHTML = ' ';
if(testElement.innerHTML === ''){
setInnerHTML = function(node, html){





if(node.parentNode){
node.parentNode.replaceChild(node, node);}






if(WHITESPACE_TEST.test(html) || 
html[0] === '<' && NONVISIBLE_TEST.test(html)){






node.innerHTML = String.fromCharCode(0xFEFF) + html;



var textNode=node.firstChild;
if(textNode.data.length === 1){
node.removeChild(textNode);}else 
{
textNode.deleteData(0, 1);}}else 

{
node.innerHTML = html;}};}}





module.exports = setInnerHTML;
});
__d('validateDOMNesting',["Object.assign","emptyFunction","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var warning=require('warning');

var validateDOMNesting=emptyFunction;

if(__DEV__){












var specialTags=[
'address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 
'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 
'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 
'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 
'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 
'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 
'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 
'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 
'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 
'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 
'xmp'];



var inScopeTags=[
'applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 
'template', 




'foreignObject', 'desc', 'title'];



var buttonScopeTags=inScopeTags.concat(['button']);


var impliedEndTags=
['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

var emptyAncestorInfo={
parentTag:null, 

formTag:null, 
aTagInScope:null, 
buttonTagInScope:null, 
nobrTagInScope:null, 
pTagInButtonScope:null, 

listItemTagAutoclosing:null, 
dlItemTagAutoclosing:null};


var updatedAncestorInfo=function(oldInfo, tag, instance){
var ancestorInfo=assign({}, oldInfo || emptyAncestorInfo);
var info={tag:tag, instance:instance};

if(inScopeTags.indexOf(tag) !== -1){
ancestorInfo.aTagInScope = null;
ancestorInfo.buttonTagInScope = null;
ancestorInfo.nobrTagInScope = null;}

if(buttonScopeTags.indexOf(tag) !== -1){
ancestorInfo.pTagInButtonScope = null;}




if(
specialTags.indexOf(tag) !== -1 && 
tag !== 'address' && tag !== 'div' && tag !== 'p')
{
ancestorInfo.listItemTagAutoclosing = null;
ancestorInfo.dlItemTagAutoclosing = null;}


ancestorInfo.parentTag = info;

if(tag === 'form'){
ancestorInfo.formTag = info;}

if(tag === 'a'){
ancestorInfo.aTagInScope = info;}

if(tag === 'button'){
ancestorInfo.buttonTagInScope = info;}

if(tag === 'nobr'){
ancestorInfo.nobrTagInScope = info;}

if(tag === 'p'){
ancestorInfo.pTagInButtonScope = info;}

if(tag === 'li'){
ancestorInfo.listItemTagAutoclosing = info;}

if(tag === 'dd' || tag === 'dt'){
ancestorInfo.dlItemTagAutoclosing = info;}


return ancestorInfo;};





var isTagValidWithParent=function(tag, parentTag){

switch(parentTag){

case 'select':
return tag === 'option' || tag === 'optgroup' || tag === '#text';
case 'optgroup':
return tag === 'option' || tag === '#text';


case 'option':
return tag === '#text';







case 'tr':
return (
tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || 
tag === 'template');



case 'tbody':
case 'thead':
case 'tfoot':
return (
tag === 'tr' || tag === 'style' || tag === 'script' || 
tag === 'template');



case 'colgroup':
return tag === 'col' || tag === 'template';


case 'table':
return (
tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || 
tag === 'tfoot' || tag === 'thead' || tag === 'style' || 
tag === 'script' || tag === 'template');



case 'head':
return (
tag === 'base' || tag === 'basefont' || tag === 'bgsound' || 
tag === 'link' || tag === 'meta' || tag === 'title' || 
tag === 'noscript' || tag === 'noframes' || tag === 'style' || 
tag === 'script' || tag === 'template');



case 'html':
return tag === 'head' || tag === 'body';}





switch(tag){
case 'h1':
case 'h2':
case 'h3':
case 'h4':
case 'h5':
case 'h6':
return (
parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && 
parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6');


case 'rp':
case 'rt':
return impliedEndTags.indexOf(parentTag) === -1;

case 'caption':
case 'col':
case 'colgroup':
case 'frame':
case 'head':
case 'tbody':
case 'td':
case 'tfoot':
case 'th':
case 'thead':
case 'tr':




return parentTag == null;}


return true;};





var findInvalidAncestorForTag=function(tag, ancestorInfo){
switch(tag){
case 'address':
case 'article':
case 'aside':
case 'blockquote':
case 'center':
case 'details':
case 'dialog':
case 'dir':
case 'div':
case 'dl':
case 'fieldset':
case 'figcaption':
case 'figure':
case 'footer':
case 'header':
case 'hgroup':
case 'main':
case 'menu':
case 'nav':
case 'ol':
case 'p':
case 'section':
case 'summary':
case 'ul':

case 'pre':
case 'listing':

case 'table':

case 'hr':

case 'xmp':

case 'h1':
case 'h2':
case 'h3':
case 'h4':
case 'h5':
case 'h6':
return ancestorInfo.pTagInButtonScope;

case 'form':
return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

case 'li':
return ancestorInfo.listItemTagAutoclosing;

case 'dd':
case 'dt':
return ancestorInfo.dlItemTagAutoclosing;

case 'button':
return ancestorInfo.buttonTagInScope;

case 'a':


return ancestorInfo.aTagInScope;

case 'nobr':
return ancestorInfo.nobrTagInScope;}


return null;};






var findOwnerStack=function(instance){
if(!instance){
return [];}


var stack=[];

do {

stack.push(instance);}while(
instance = instance._currentElement._owner);
stack.reverse();
return stack;};


var didWarn={};

validateDOMNesting = function(childTag, childInstance, ancestorInfo){
ancestorInfo = ancestorInfo || emptyAncestorInfo;
var parentInfo=ancestorInfo.parentTag;
var parentTag=parentInfo && parentInfo.tag;

var invalidParent=
isTagValidWithParent(childTag, parentTag)?null:parentInfo;
var invalidAncestor=
invalidParent?null:findInvalidAncestorForTag(childTag, ancestorInfo);
var problematic=invalidParent || invalidAncestor;

if(problematic){
var ancestorTag=problematic.tag;
var ancestorInstance=problematic.instance;

var childOwner=childInstance && childInstance._currentElement._owner;
var ancestorOwner=
ancestorInstance && ancestorInstance._currentElement._owner;

var childOwners=findOwnerStack(childOwner);
var ancestorOwners=findOwnerStack(ancestorOwner);

var minStackLen=Math.min(childOwners.length, ancestorOwners.length);
var i;

var deepestCommon=-1;
for(i = 0; i < minStackLen; i++) {
if(childOwners[i] === ancestorOwners[i]){
deepestCommon = i;}else 
{
break;}}



var UNKNOWN='(unknown)';
var childOwnerNames=childOwners.slice(deepestCommon + 1).map(
function(inst){return inst.getName() || UNKNOWN;});

var ancestorOwnerNames=ancestorOwners.slice(deepestCommon + 1).map(
function(inst){return inst.getName() || UNKNOWN;});

var ownerInfo=[].concat(


deepestCommon !== -1?
childOwners[deepestCommon].getName() || UNKNOWN:
[], 
ancestorOwnerNames, 
ancestorTag, 

invalidAncestor?['...']:[], 
childOwnerNames, 
childTag).
join(' > ');

var warnKey=
!!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
if(didWarn[warnKey]){
return;}

didWarn[warnKey] = true;

if(invalidParent){
var info='';
if(ancestorTag === 'table' && childTag === 'tr'){
info += 
' Add a <tbody> to your code to match the DOM tree generated by ' + 
'the browser.';}

warning(
false, 
'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 
'See %s.%s', 
childTag, 
ancestorTag, 
ownerInfo, 
info);}else 

{
warning(
false, 
'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + 
'<%s>. See %s.', 
childTag, 
ancestorTag, 
ownerInfo);}}};





validateDOMNesting.ancestorInfoContextKey = 
'__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);

validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;


validateDOMNesting.isTagValidInContext = function(tag, ancestorInfo){
ancestorInfo = ancestorInfo || emptyAncestorInfo;
var parentInfo=ancestorInfo.parentTag;
var parentTag=parentInfo && parentInfo.tag;
return (
isTagValidWithParent(tag, parentTag) && 
!findInvalidAncestorForTag(tag, ancestorInfo));};}




module.exports = validateDOMNesting;
});
__d('AppStateIOS',["Map","NativeModules","RCTDeviceEventEmitter","logError","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var Map=require('Map');
var NativeModules=require('NativeModules');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTAppState=NativeModules.AppState;

var logError=require('logError');
var invariant=require('invariant');

var _eventHandlers={
change:new Map(), 
memoryWarning:new Map()};





















































var AppStateIOS={





addEventListener:function(
type, 
handler)
{
invariant(
['change', 'memoryWarning'].indexOf(type) !== -1, 
'Trying to subscribe to unknown event: "%s"', type);

if(type === 'change'){
_eventHandlers[type].set(handler, RCTDeviceEventEmitter.addListener(
'appStateDidChange', 
function(appStateData){
handler(appStateData.app_state);}));}else 


if(type === 'memoryWarning'){
_eventHandlers[type].set(handler, RCTDeviceEventEmitter.addListener(
'memoryWarning', 
handler));}}, 







removeEventListener:function(
type, 
handler)
{
invariant(
['change', 'memoryWarning'].indexOf(type) !== -1, 
'Trying to remove listener for unknown event: "%s"', type);

if(!_eventHandlers[type].has(handler)){
return;}

_eventHandlers[type].get(handler).remove();
_eventHandlers[type].delete(handler);}, 






currentState:'active'};



RCTDeviceEventEmitter.addListener(
'appStateDidChange', 
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;});



RCTAppState.getCurrentAppState(
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;}, 

logError);


module.exports = AppStateIOS;
});
__d('CameraRoll',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","deepFreezeAndThrowOnMutationInDev","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ReactPropTypes=require('ReactPropTypes');
var RCTCameraRollManager=require('NativeModules').CameraRollManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var deepFreezeAndThrowOnMutationInDev=
require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');

var GROUP_TYPES_OPTIONS=[
'Album', 
'All', 
'Event', 
'Faces', 
'Library', 
'PhotoStream', 
'SavedPhotos'];


var ASSET_TYPE_OPTIONS=[
'All', 
'Videos', 
'Photos'];




deepFreezeAndThrowOnMutationInDev(GROUP_TYPES_OPTIONS);
deepFreezeAndThrowOnMutationInDev(ASSET_TYPE_OPTIONS);




var getPhotosParamChecker=createStrictShapeTypeChecker({




first:ReactPropTypes.number.isRequired, 





after:ReactPropTypes.string, 




groupTypes:ReactPropTypes.oneOf(GROUP_TYPES_OPTIONS), 





groupName:ReactPropTypes.string, 




assetType:ReactPropTypes.oneOf(ASSET_TYPE_OPTIONS), 




mimeTypes:ReactPropTypes.arrayOf(ReactPropTypes.string)});





var getPhotosReturnChecker=createStrictShapeTypeChecker({
edges:ReactPropTypes.arrayOf(createStrictShapeTypeChecker({
node:createStrictShapeTypeChecker({
type:ReactPropTypes.string.isRequired, 
group_name:ReactPropTypes.string.isRequired, 
image:createStrictShapeTypeChecker({
uri:ReactPropTypes.string.isRequired, 
height:ReactPropTypes.number.isRequired, 
width:ReactPropTypes.number.isRequired, 
isStored:ReactPropTypes.bool}).
isRequired, 
timestamp:ReactPropTypes.number.isRequired, 
location:createStrictShapeTypeChecker({
latitude:ReactPropTypes.number, 
longitude:ReactPropTypes.number, 
altitude:ReactPropTypes.number, 
heading:ReactPropTypes.number, 
speed:ReactPropTypes.number})}).

isRequired})).
isRequired, 
page_info:createStrictShapeTypeChecker({
has_next_page:ReactPropTypes.bool.isRequired, 
start_cursor:ReactPropTypes.string, 
end_cursor:ReactPropTypes.string}).
isRequired});var 





CameraRoll=(function(){function CameraRoll(){_classCallCheck(this, CameraRoll);}_createClass(CameraRoll, null, [{key:'saveImageWithTag', value:



















function saveImageWithTag(tag, successCallback, errorCallback){
invariant(
typeof tag === 'string', 
'CameraRoll.saveImageWithTag tag must be a valid string.');

RCTCameraRollManager.saveImageWithTag(
tag, 
function(imageTag){
successCallback && successCallback(imageTag);}, 

function(errorMessage){
errorCallback && errorCallback(errorMessage);});}}, {key:'getPhotos', value:












function getPhotos(params, callback, errorCallback){
var metaCallback=callback;
if(__DEV__){
getPhotosParamChecker({params:params}, 'params', 'CameraRoll.getPhotos');
invariant(
typeof callback === 'function', 
'CameraRoll.getPhotos callback must be a valid function.');

invariant(
typeof errorCallback === 'function', 
'CameraRoll.getPhotos errorCallback must be a valid function.');}


if(__DEV__){
metaCallback = function(response){
getPhotosReturnChecker(
{response:response}, 
'response', 
'CameraRoll.getPhotos callback');

callback(response);};}


RCTCameraRollManager.getPhotos(params, metaCallback, errorCallback);}}]);return CameraRoll;})();



CameraRoll.GroupTypesOptions = GROUP_TYPES_OPTIONS;
CameraRoll.AssetTypeOptions = ASSET_TYPE_OPTIONS;

module.exports = CameraRoll;
});
__d('ImagePickerIOS',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1; i < arguments.length; i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source, key)){target[key] = source[key];}}}return target;};












var RCTImagePicker=require('NativeModules').ImagePickerIOS;

var ImagePickerIOS={
canRecordVideos:function(callback){
return RCTImagePicker.canRecordVideos(callback);}, 

canUseCamera:function(callback){
return RCTImagePicker.canUseCamera(callback);}, 

openCameraDialog:function(config, successCallback, cancelCallback){
config = _extends({
videoMode:false}, 
config);

return RCTImagePicker.openCameraDialog(config, successCallback, cancelCallback);}, 

openSelectDialog:function(config, successCallback, cancelCallback){
config = _extends({
showImages:true, 
showVideos:false}, 
config);

return RCTImagePicker.openSelectDialog(config, successCallback, cancelCallback);}};



module.exports = ImagePickerIOS;
});
__d('LayoutAnimation',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var keyMirror=require('keyMirror');

var TypesEnum={
spring:true, 
linear:true, 
easeInEaseOut:true, 
easeIn:true, 
easeOut:true, 
keyboard:true};

var Types=keyMirror(TypesEnum);

var PropertiesEnum={
opacity:true, 
scaleXY:true};

var Properties=keyMirror(PropertiesEnum);

var animChecker=createStrictShapeTypeChecker({
duration:PropTypes.number, 
delay:PropTypes.number, 
springDamping:PropTypes.number, 
initialVelocity:PropTypes.number, 
type:PropTypes.oneOf(
Object.keys(Types)), 

property:PropTypes.oneOf(
Object.keys(Properties))});












var configChecker=createStrictShapeTypeChecker({
duration:PropTypes.number.isRequired, 
create:animChecker, 
update:animChecker, 
delete:animChecker});









function configureNext(config, onAnimationDidEnd, onError){
configChecker({config:config}, 'config', 'LayoutAnimation.configureNext');
RCTUIManager.configureNextLayoutAnimation(config, onAnimationDidEnd, onError);}


function create(duration, type, creationProp){
return {
duration:duration, 
create:{
type:type, 
property:creationProp}, 

update:{
type:type}};}




var Presets={
easeInEaseOut:create(
300, Types.easeInEaseOut, Properties.opacity), 

linear:create(
500, Types.linear, Properties.opacity), 

spring:{
duration:700, 
create:{
type:Types.linear, 
property:Properties.opacity}, 

update:{
type:Types.spring, 
springDamping:0.4}}};




var LayoutAnimation={
configureNext:configureNext, 
create:create, 
Types:Types, 
Properties:Properties, 
configChecker:configChecker, 
Presets:Presets, 
easeInEaseOut:configureNext.bind(
null, Presets.easeInEaseOut), 

linear:configureNext.bind(
null, Presets.linear), 

spring:configureNext.bind(
null, Presets.spring)};



module.exports = LayoutAnimation;
});
__d('LinkingIOS',["RCTDeviceEventEmitter","NativeModules","Map","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLinkingManager=require('NativeModules').LinkingManager;
var Map=require('Map');
var invariant=require('invariant');

var _notifHandlers=new Map();
var _initialURL=RCTLinkingManager && 
RCTLinkingManager.initialURL;

var DEVICE_NOTIF_EVENT='openURL';var 





























































LinkingIOS=(function(){function LinkingIOS(){_classCallCheck(this, LinkingIOS);}_createClass(LinkingIOS, null, [{key:'addEventListener', value:




function addEventListener(type, handler){
invariant(
type === 'url', 
'LinkingIOS only supports `url` events');

var listener=RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT, 
handler);

_notifHandlers.set(handler, listener);}}, {key:'removeEventListener', value:





function removeEventListener(type, handler){
invariant(
type === 'url', 
'LinkingIOS only supports `url` events');

var listener=_notifHandlers.get(handler);
if(!listener){
return;}

listener.remove();
_notifHandlers.delete(handler);}}, {key:'openURL', value:





function openURL(url){
invariant(
typeof url === 'string', 
'Invalid url: should be a string');

RCTLinkingManager.openURL(url);}}, {key:'canOpenURL', value:






function canOpenURL(url, callback){
invariant(
typeof url === 'string', 
'Invalid url: should be a string');

invariant(
typeof callback === 'function', 
'A valid callback function is required');

RCTLinkingManager.canOpenURL(url, callback);}}, {key:'popInitialURL', value:






function popInitialURL(){
var initialURL=_initialURL;
_initialURL = null;
return initialURL;}}]);return LinkingIOS;})();



module.exports = LinkingIOS;
});
__d('NetInfo',["Map","NativeModules","Platform","RCTDeviceEventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var Map=require('Map');
var NativeModules=require('NativeModules');
var Platform=require('Platform');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');

if(Platform.OS === 'ios'){
var RCTNetInfo=NativeModules.Reachability;}else 
if(Platform.OS === 'android'){
var RCTNetInfo=NativeModules.NetInfo;}


var DEVICE_REACHABILITY_EVENT='reachabilityDidChange';






















































































































var _subscriptions=new Map();

var NetInfo={
addEventListener:function(
eventName, 
handler)
{
var listener=RCTDeviceEventEmitter.addListener(
DEVICE_REACHABILITY_EVENT, 
function(appStateData){
handler(appStateData.network_reachability);});


_subscriptions.set(handler, listener);}, 


removeEventListener:function(
eventName, 
handler)
{
var listener=_subscriptions.get(handler);
if(!listener){
return;}

listener.remove();
_subscriptions.delete(handler);}, 


fetch:function(){
return new Promise(function(resolve, reject){
RCTNetInfo.getCurrentReachability(
function(resp){
resolve(resp.network_reachability);}, 

reject);});}, 




isConnected:{}, 

isConnectionMetered:{}};


if(Platform.OS === 'ios'){
var _isConnected=function(
reachability)
{
return reachability !== 'none' && 
reachability !== 'unknown';};}else 

if(Platform.OS === 'android'){
var _isConnected=function(
connectionType)
{
return connectionType !== 'NONE' && connectionType !== 'UNKNOWN';};}



var _isConnectedSubscriptions=new Map();

NetInfo.isConnected = {
addEventListener:function(
eventName, 
handler)
{
var listener=function(connection){
handler(_isConnected(connection));};

_isConnectedSubscriptions.set(handler, listener);
NetInfo.addEventListener(
eventName, 
listener);}, 



removeEventListener:function(
eventName, 
handler)
{
var listener=_isConnectedSubscriptions.get(handler);
NetInfo.removeEventListener(
eventName, 
listener);

_isConnectedSubscriptions.delete(handler);}, 


fetch:function(){
return NetInfo.fetch().then(
function(connection){return _isConnected(connection);});}};




if(Platform.OS === 'android'){
NetInfo.isConnectionMetered = function(callback){
RCTNetInfo.isConnectionMetered(function(_isMetered){
callback(_isMetered);});};}




module.exports = NetInfo;
});
__d('PushNotificationIOS',["Map","RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var Map=require('Map');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTPushNotificationManager=require('NativeModules').PushNotificationManager;
var invariant=require('invariant');

var _notifHandlers=new Map();
var _initialNotification=RCTPushNotificationManager && 
RCTPushNotificationManager.initialNotification;

var DEVICE_NOTIF_EVENT='remoteNotificationReceived';
var NOTIF_REGISTER_EVENT='remoteNotificationsRegistered';var 








PushNotificationIOS=(function(){




















































































































































































function PushNotificationIOS(nativeNotif){var _this=this;_classCallCheck(this, PushNotificationIOS);
this._data = {};





Object.keys(nativeNotif).forEach(function(notifKey){
var notifVal=nativeNotif[notifKey];
if(notifKey === 'aps'){
_this._alert = notifVal.alert;
_this._sound = notifVal.sound;
_this._badgeCount = notifVal.badge;}else 
{
_this._data[notifKey] = notifVal;}});}_createClass(PushNotificationIOS, [{key:'getMessage', value:







function getMessage(){

return this._alert;}}, {key:'getSound', value:





function getSound(){
return this._sound;}}, {key:'getAlert', value:





function getAlert(){
return this._alert;}}, {key:'getBadgeCount', value:





function getBadgeCount(){
return this._badgeCount;}}, {key:'getData', value:





function getData(){
return this._data;}}], [{key:'presentLocalNotification', value:function presentLocalNotification(details){RCTPushNotificationManager.presentLocalNotification(details);}}, {key:'scheduleLocalNotification', value:function scheduleLocalNotification(details){RCTPushNotificationManager.scheduleLocalNotification(details);}}, {key:'setApplicationIconBadgeNumber', value:function setApplicationIconBadgeNumber(number){RCTPushNotificationManager.setApplicationIconBadgeNumber(number);}}, {key:'getApplicationIconBadgeNumber', value:function getApplicationIconBadgeNumber(callback){RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);}}, {key:'addEventListener', value:function addEventListener(type, handler){invariant(type === 'notification' || type === 'register', 'PushNotificationIOS only supports `notification` and `register` events');var listener;if(type === 'notification'){listener = RCTDeviceEventEmitter.addListener(DEVICE_NOTIF_EVENT, function(notifData){handler(new PushNotificationIOS(notifData));});}else if(type === 'register'){listener = RCTDeviceEventEmitter.addListener(NOTIF_REGISTER_EVENT, function(registrationInfo){handler(registrationInfo.deviceToken);});}_notifHandlers.set(handler, listener);}}, {key:'requestPermissions', value:function requestPermissions(permissions){var requestedPermissions={};if(permissions){requestedPermissions = {alert:!!permissions.alert, badge:!!permissions.badge, sound:!!permissions.sound};}else {requestedPermissions = {alert:true, badge:true, sound:true};}RCTPushNotificationManager.requestPermissions(requestedPermissions);}}, {key:'abandonPermissions', value:function abandonPermissions(){RCTPushNotificationManager.abandonPermissions();}}, {key:'checkPermissions', value:function checkPermissions(callback){invariant(typeof callback === 'function', 'Must provide a valid callback');RCTPushNotificationManager.checkPermissions(callback);}}, {key:'removeEventListener', value:function removeEventListener(type, handler){invariant(type === 'notification' || type === 'register', 'PushNotificationIOS only supports `notification` and `register` events');var listener=_notifHandlers.get(handler);if(!listener){return;}listener.remove();_notifHandlers.delete(handler);}}, {key:'popInitialNotification', value:function popInitialNotification(){var initialNotification=_initialNotification && new PushNotificationIOS(_initialNotification);_initialNotification = null;return initialNotification;}}]);return PushNotificationIOS;})();



module.exports = PushNotificationIOS;
});
__d('Settings',["RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTSettingsManager=require('NativeModules').SettingsManager;

var invariant=require('invariant');

var subscriptions=[];

var Settings={
_settings:RCTSettingsManager && RCTSettingsManager.settings, 

get:function(key){
return this._settings[key];}, 


set:function(settings){
this._settings = Object.assign(this._settings, settings);
RCTSettingsManager.setValues(settings);}, 


watchKeys:function(keys, callback){
if(typeof keys === 'string'){
keys = [keys];}


invariant(
Array.isArray(keys), 
'keys should be a string or array of strings');


var sid=subscriptions.length;
subscriptions.push({keys:keys, callback:callback});
return sid;}, 


clearWatch:function(watchId){
if(watchId < subscriptions.length){
subscriptions[watchId] = {keys:[], callback:null};}}, 



_sendObservations:function(body){var _this=this;
Object.keys(body).forEach(function(key){
var newValue=body[key];
var didChange=_this._settings[key] !== newValue;
_this._settings[key] = newValue;

if(didChange){
subscriptions.forEach(function(sub){
if(sub.keys.indexOf(key) !== -1 && sub.callback){
sub.callback();}});}});}};







RCTDeviceEventEmitter.addListener(
'settingsUpdated', 
Settings._sendObservations.bind(Settings));


module.exports = Settings;
});
__d('StatusBarIOS',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTStatusBarManager=require('NativeModules').StatusBarManager;












var StatusBarIOS={

setStyle:function(style, animated){
animated = animated || false;
RCTStatusBarManager.setStyle(style, animated);}, 


setHidden:function(hidden, animation){
animation = animation || 'none';
RCTStatusBarManager.setHidden(hidden, animation);}, 


setNetworkActivityIndicatorVisible:function(visible){
RCTStatusBarManager.setNetworkActivityIndicatorVisible(visible);}};



module.exports = StatusBarIOS;
});
__d('VibrationIOS',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTVibration=require('NativeModules').Vibration;

var invariant=require('invariant');












var VibrationIOS={
vibrate:function(){
invariant(
arguments[0] === undefined, 
'Vibration patterns not supported.');

RCTVibration.vibrate();}};



module.exports = VibrationIOS;
});
__d('RCTNativeAppEventEmitter',["EventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTNativeAppEventEmitter=new EventEmitter();

module.exports = RCTNativeAppEventEmitter;
});
__d('LinkedStateMixin',["ReactLink","ReactStateSetters"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactLink=require('ReactLink');
var ReactStateSetters=require('ReactStateSetters');




var LinkedStateMixin={









linkState:function(key){
return new ReactLink(
this.state[key], 
ReactStateSetters.createStateKeySetter(this, key));}};




module.exports = LinkedStateMixin;
});
__d('ReactLink',["React"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




































var React=require('React');





function ReactLink(value, requestChange){
this.value = value;
this.requestChange = requestChange;}










function createLinkTypeChecker(linkType){
var shapes={
value:typeof linkType === 'undefined'?
React.PropTypes.any.isRequired:
linkType.isRequired, 
requestChange:React.PropTypes.func.isRequired};

return React.PropTypes.shape(shapes);}


ReactLink.PropTypes = {
link:createLinkTypeChecker};


module.exports = ReactLink;
});
__d('ReactStateSetters',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactStateSetters={










createStateSetter:function(component, funcReturningState){
return function(a, b, c, d, e, f){
var partialState=funcReturningState.call(component, a, b, c, d, e, f);
if(partialState){
component.setState(partialState);}};}, 















createStateKeySetter:function(component, key){

var cache=component.__keySetters || (component.__keySetters = {});
return cache[key] || (cache[key] = createStateKeySetter(component, key));}};



function createStateKeySetter(component, key){



var partialState={};
return function stateKeySetter(value){
partialState[key] = value;
component.setState(partialState);};}



ReactStateSetters.Mixin = {
















createStateSetter:function(funcReturningState){
return ReactStateSetters.createStateSetter(this, funcReturningState);}, 

















createStateKeySetter:function(key){
return ReactStateSetters.createStateKeySetter(this, key);}};



module.exports = ReactStateSetters;
});
__d('ReactComponentWithPureRenderMixin',["shallowCompare"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var shallowCompare=require('shallowCompare');

























var ReactComponentWithPureRenderMixin={
shouldComponentUpdate:function(nextProps, nextState){
return shallowCompare(this, nextProps, nextState);}};



module.exports = ReactComponentWithPureRenderMixin;
});
__d('shallowCompare',["shallowEqual"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var shallowEqual=require('shallowEqual');





function shallowCompare(instance, nextProps, nextState){
return (
!shallowEqual(instance.props, nextProps) || 
!shallowEqual(instance.state, nextState));}



module.exports = shallowCompare;
});
__d('shallowEqual',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















function shallowEqual(objA, objB){
if(objA === objB){
return true;}


if(typeof objA !== 'object' || objA === null || 
typeof objB !== 'object' || objB === null){
return false;}


var keysA=Object.keys(objA);
var keysB=Object.keys(objB);

if(keysA.length !== keysB.length){
return false;}



var bHasOwnProperty=Object.prototype.hasOwnProperty.bind(objB);
for(var i=0; i < keysA.length; i++) {
if(!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]){
return false;}}



return true;}


module.exports = shallowEqual;
});
__d('update',["Object.assign","keyOf","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var assign=require('Object.assign');
var keyOf=require('keyOf');
var invariant=require('invariant');
var hasOwnProperty=({}).hasOwnProperty;

function shallowCopy(x){
if(Array.isArray(x)){
return x.concat();}else 
if(x && typeof x === 'object'){
return assign(new x.constructor(), x);}else 
{
return x;}}



var COMMAND_PUSH=keyOf({$push:null});
var COMMAND_UNSHIFT=keyOf({$unshift:null});
var COMMAND_SPLICE=keyOf({$splice:null});
var COMMAND_SET=keyOf({$set:null});
var COMMAND_MERGE=keyOf({$merge:null});
var COMMAND_APPLY=keyOf({$apply:null});

var ALL_COMMANDS_LIST=[
COMMAND_PUSH, 
COMMAND_UNSHIFT, 
COMMAND_SPLICE, 
COMMAND_SET, 
COMMAND_MERGE, 
COMMAND_APPLY];


var ALL_COMMANDS_SET={};

ALL_COMMANDS_LIST.forEach(function(command){
ALL_COMMANDS_SET[command] = true;});


function invariantArrayCase(value, spec, command){
invariant(
Array.isArray(value), 
'update(): expected target of %s to be an array; got %s.', 
command, 
value);

var specValue=spec[command];
invariant(
Array.isArray(specValue), 
'update(): expected spec of %s to be an array; got %s. ' + 
'Did you forget to wrap your parameter in an array?', 
command, 
specValue);}



function update(value, spec){
invariant(
typeof spec === 'object', 
'update(): You provided a key path to update() that did not contain one ' + 
'of %s. Did you forget to include {%s: ...}?', 
ALL_COMMANDS_LIST.join(', '), 
COMMAND_SET);


if(hasOwnProperty.call(spec, COMMAND_SET)){
invariant(
Object.keys(spec).length === 1, 
'Cannot have more than one key in an object with %s', 
COMMAND_SET);


return spec[COMMAND_SET];}


var nextValue=shallowCopy(value);

if(hasOwnProperty.call(spec, COMMAND_MERGE)){
var mergeObj=spec[COMMAND_MERGE];
invariant(
mergeObj && typeof mergeObj === 'object', 
'update(): %s expects a spec of type \'object\'; got %s', 
COMMAND_MERGE, 
mergeObj);

invariant(
nextValue && typeof nextValue === 'object', 
'update(): %s expects a target of type \'object\'; got %s', 
COMMAND_MERGE, 
nextValue);

assign(nextValue, spec[COMMAND_MERGE]);}


if(hasOwnProperty.call(spec, COMMAND_PUSH)){
invariantArrayCase(value, spec, COMMAND_PUSH);
spec[COMMAND_PUSH].forEach(function(item){
nextValue.push(item);});}



if(hasOwnProperty.call(spec, COMMAND_UNSHIFT)){
invariantArrayCase(value, spec, COMMAND_UNSHIFT);
spec[COMMAND_UNSHIFT].forEach(function(item){
nextValue.unshift(item);});}



if(hasOwnProperty.call(spec, COMMAND_SPLICE)){
invariant(
Array.isArray(value), 
'Expected %s target to be an array; got %s', 
COMMAND_SPLICE, 
value);

invariant(
Array.isArray(spec[COMMAND_SPLICE]), 
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?', 
COMMAND_SPLICE, 
spec[COMMAND_SPLICE]);

spec[COMMAND_SPLICE].forEach(function(args){
invariant(
Array.isArray(args), 
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?', 
COMMAND_SPLICE, 
spec[COMMAND_SPLICE]);

nextValue.splice.apply(nextValue, args);});}



if(hasOwnProperty.call(spec, COMMAND_APPLY)){
invariant(
typeof spec[COMMAND_APPLY] === 'function', 
'update(): expected spec of %s to be a function; got %s.', 
COMMAND_APPLY, 
spec[COMMAND_APPLY]);

nextValue = spec[COMMAND_APPLY](nextValue);}


for(var k in spec) {
if(!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])){
nextValue[k] = update(value[k], spec[k]);}}



return nextValue;}


module.exports = update;
});
__d('ReactTestUtils',["EventConstants","EventPluginHub","EventPropagators","React","ReactElement","ReactEmptyComponent","ReactBrowserEventEmitter","ReactCompositeComponent","ReactInstanceHandles","ReactInstanceMap","ReactMount","ReactUpdates","SyntheticEvent","Object.assign","emptyObject","findDOMNode","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPropagators=require('EventPropagators');
var React=require('React');
var ReactElement=require('ReactElement');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');
var ReactUpdates=require('ReactUpdates');
var SyntheticEvent=require('SyntheticEvent');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var findDOMNode=require('findDOMNode');
var invariant=require('invariant');

var topLevelTypes=EventConstants.topLevelTypes;

function Event(suffix){}





function findAllInRenderedTreeInternal(inst, test){
if(!inst || !inst.getPublicInstance){
return [];}

var publicInst=inst.getPublicInstance();
var ret=test(publicInst)?[publicInst]:[];
if(ReactTestUtils.isDOMComponent(publicInst)){
var renderedChildren=inst._renderedChildren;
var key;
for(key in renderedChildren) {
if(!renderedChildren.hasOwnProperty(key)){
continue;}

ret = ret.concat(
findAllInRenderedTreeInternal(
renderedChildren[key], 
test));}}else 



if(ReactTestUtils.isCompositeComponent(publicInst)){
ret = ret.concat(
findAllInRenderedTreeInternal(inst._renderedComponent, test));}


return ret;}







var ReactTestUtils={
renderIntoDocument:function(instance){
var div=document.createElement('div');





return React.render(instance, div);}, 


isElement:function(element){
return ReactElement.isValidElement(element);}, 


isElementOfType:function(inst, convenienceConstructor){
return (
ReactElement.isValidElement(inst) && 
inst.type === convenienceConstructor);}, 



isDOMComponent:function(inst){


return !!(inst && inst.nodeType === 1 && inst.tagName);}, 


isDOMComponentElement:function(inst){
return !!(inst && 
ReactElement.isValidElement(inst) && 
!!inst.tagName);}, 


isCompositeComponent:function(inst){
if(ReactTestUtils.isDOMComponent(inst)){


return false;}

return typeof inst.render === 'function' && 
typeof inst.setState === 'function';}, 


isCompositeComponentWithType:function(inst, type){
if(!ReactTestUtils.isCompositeComponent(inst)){
return false;}

var internalInstance=ReactInstanceMap.get(inst);
var constructor=internalInstance.
_currentElement.
type;

return constructor === type;}, 


isCompositeComponentElement:function(inst){
if(!ReactElement.isValidElement(inst)){
return false;}



var prototype=inst.type.prototype;
return (
typeof prototype.render === 'function' && 
typeof prototype.setState === 'function');}, 



isCompositeComponentElementWithType:function(inst, type){
var internalInstance=ReactInstanceMap.get(inst);
var constructor=internalInstance.
_currentElement.
type;

return !!(ReactTestUtils.isCompositeComponentElement(inst) && 
constructor === type);}, 


getRenderedChildOfCompositeComponent:function(inst){
if(!ReactTestUtils.isCompositeComponent(inst)){
return null;}

var internalInstance=ReactInstanceMap.get(inst);
return internalInstance._renderedComponent.getPublicInstance();}, 


findAllInRenderedTree:function(inst, test){
if(!inst){
return [];}

invariant(
ReactTestUtils.isCompositeComponent(inst), 
'findAllInRenderedTree(...): instance must be a composite component');

return findAllInRenderedTreeInternal(ReactInstanceMap.get(inst), test);}, 







scryRenderedDOMComponentsWithClass:function(root, className){
return ReactTestUtils.findAllInRenderedTree(root, function(inst){
if(ReactTestUtils.isDOMComponent(inst)){
var instClassName=React.findDOMNode(inst).className;
return (
instClassName && 
('' + instClassName).split(/\s+/).indexOf(className) !== -1);}


return false;});}, 









findRenderedDOMComponentWithClass:function(root, className){
var all=
ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);
if(all.length !== 1){
throw new Error('Did not find exactly one match ' + 
'(found: ' + all.length + ') for class:' + className);}


return all[0];}, 








scryRenderedDOMComponentsWithTag:function(root, tagName){
return ReactTestUtils.findAllInRenderedTree(root, function(inst){
return ReactTestUtils.isDOMComponent(inst) && 
inst.tagName === tagName.toUpperCase();});}, 









findRenderedDOMComponentWithTag:function(root, tagName){
var all=ReactTestUtils.scryRenderedDOMComponentsWithTag(root, tagName);
if(all.length !== 1){
throw new Error('Did not find exactly one match for tag:' + tagName);}

return all[0];}, 







scryRenderedComponentsWithType:function(root, componentType){
return ReactTestUtils.findAllInRenderedTree(root, function(inst){
return ReactTestUtils.isCompositeComponentWithType(
inst, 
componentType);});}, 










findRenderedComponentWithType:function(root, componentType){
var all=ReactTestUtils.scryRenderedComponentsWithType(
root, 
componentType);

if(all.length !== 1){
throw new Error(
'Did not find exactly one match for componentType:' + componentType + 
' (found ' + all.length + ')');}


return all[0];}, 















mockComponent:function(module, mockTagName){
mockTagName = mockTagName || module.mockTagName || 'div';

module.prototype.render.mockImplementation(function(){
return React.createElement(
mockTagName, 
null, 
this.props.children);});



return this;}, 









simulateNativeEventOnNode:function(topLevelType, node, fakeNativeEvent){
fakeNativeEvent.target = node;
ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(
topLevelType, 
fakeNativeEvent);}, 










simulateNativeEventOnDOMComponent:function(
topLevelType, 
comp, 
fakeNativeEvent){
ReactTestUtils.simulateNativeEventOnNode(
topLevelType, 
findDOMNode(comp), 
fakeNativeEvent);}, 



nativeTouchData:function(x, y){
return {
touches:[
{pageX:x, pageY:y}]};}, 




createRenderer:function(){
return new ReactShallowRenderer();}, 


Simulate:null, 
SimulateNative:{}};





var ReactShallowRenderer=function(){
this._instance = null;};


ReactShallowRenderer.prototype.getRenderOutput = function(){
return (
this._instance && this._instance._renderedComponent && 
this._instance._renderedComponent._renderedOutput || 
null);};



var NoopInternalComponent=function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;};


NoopInternalComponent.prototype = {

mountComponent:function(){}, 


receiveComponent:function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;}, 


unmountComponent:function(){}};




var ShallowComponentWrapper=function(){};
assign(
ShallowComponentWrapper.prototype, 
ReactCompositeComponent.Mixin, {
_instantiateReactComponent:function(element){
return new NoopInternalComponent(element);}, 

_replaceNodeWithMarkupByID:function(){}, 
_renderValidatedComponent:
ReactCompositeComponent.Mixin.
_renderValidatedComponentWithoutOwnerOrContext});



ReactShallowRenderer.prototype.render = function(element, context){
if(!context){
context = emptyObject;}

var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
this._render(element, transaction, context);
ReactUpdates.ReactReconcileTransaction.release(transaction);};


ReactShallowRenderer.prototype.unmount = function(){
if(this._instance){
this._instance.unmountComponent();}};



ReactShallowRenderer.prototype._render = function(element, transaction, context){
if(!this._instance){
var rootID=ReactInstanceHandles.createReactRootID();
var instance=new ShallowComponentWrapper(element.type);
instance.construct(element);

instance.mountComponent(rootID, transaction, context);

this._instance = instance;}else 
{
this._instance.receiveComponent(element, transaction, context);}};











function makeSimulator(eventType){
return function(domComponentOrNode, eventData){
var node;
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
node = findDOMNode(domComponentOrNode);}else 
if(domComponentOrNode.tagName){
node = domComponentOrNode;}


var dispatchConfig=
ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType];

var fakeNativeEvent=new Event();
fakeNativeEvent.target = node;


var event=new SyntheticEvent(
dispatchConfig, 
ReactMount.getID(node), 
fakeNativeEvent, 
node);

assign(event, eventData);

if(dispatchConfig.phasedRegistrationNames){
EventPropagators.accumulateTwoPhaseDispatches(event);}else 
{
EventPropagators.accumulateDirectDispatches(event);}


ReactUpdates.batchedUpdates(function(){
EventPluginHub.enqueueEvents(event);
EventPluginHub.processEventQueue();});};}




function buildSimulators(){
ReactTestUtils.Simulate = {};

var eventType;
for(eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {




ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);}}




var oldInjectEventPluginOrder=EventPluginHub.injection.injectEventPluginOrder;
EventPluginHub.injection.injectEventPluginOrder = function(){
oldInjectEventPluginOrder.apply(this, arguments);
buildSimulators();};

var oldInjectEventPlugins=EventPluginHub.injection.injectEventPluginsByName;
EventPluginHub.injection.injectEventPluginsByName = function(){
oldInjectEventPlugins.apply(this, arguments);
buildSimulators();};


buildSimulators();

















function makeNativeSimulator(eventType){
return function(domComponentOrNode, nativeEventData){
var fakeNativeEvent=new Event(eventType);
assign(fakeNativeEvent, nativeEventData);
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
ReactTestUtils.simulateNativeEventOnDOMComponent(
eventType, 
domComponentOrNode, 
fakeNativeEvent);}else 

if(!!domComponentOrNode.tagName){

ReactTestUtils.simulateNativeEventOnNode(
eventType, 
domComponentOrNode, 
fakeNativeEvent);}};}





var eventType;
for(eventType in topLevelTypes) {

var convenienceName=eventType.indexOf('top') === 0?
eventType.charAt(3).toLowerCase() + eventType.substr(4):eventType;




ReactTestUtils.SimulateNative[convenienceName] = 
makeNativeSimulator(eventType);}


module.exports = ReactTestUtils;
});
__d('findDOMNode',["ReactCurrentOwner","ReactInstanceMap","ReactMount","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');

var invariant=require('invariant');
var warning=require('warning');







function findDOMNode(componentOrElement){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender, 
'%s is accessing getDOMNode or findDOMNode inside its render(). ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.', 
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


if(componentOrElement == null){
return null;}

if(componentOrElement.nodeType === 1){
return componentOrElement;}

if(ReactInstanceMap.has(componentOrElement)){
return ReactMount.getNodeFromInstance(componentOrElement);}

invariant(
componentOrElement.render == null || 
typeof componentOrElement.render !== 'function', 
'Component (with keys: %s) contains `render` method ' + 
'but is not mounted in the DOM', 
Object.keys(componentOrElement));

invariant(
false, 
'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', 
Object.keys(componentOrElement));}



module.exports = findDOMNode;
});
__d('yarn/app/views/wordstrip/wordstrip.js',["react-native/Libraries/react-native/react-native.js","yarn/app/uiconfig.js","yarn/app/views/wordstrip/wordbutton.js","yarn/app/views/statusbar/navbarbutton.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=


React.StyleSheet;var ScrollView=React.ScrollView;var View=React.View;

var uiConfig=require('yarn/app/uiconfig.js');
var WordButton=require('yarn/app/views/wordstrip/wordbutton.js');
var NavbarButton=require('yarn/app/views/statusbar/navbarbutton.js');
var BUTTON_TYPES=WordButton.BUTTON_TYPES;

var lastScrollLeft=0;

var WordStrip=React.createClass({displayName:'WordStrip', 
getInitialState:function(){
return {
height:uiConfig.TOOLBAR_HEIGHT, 
scrollToStart:true};}, 



componentWillReceiveProps:function(newProps){
var wordsWillChange=newProps.words && newProps.words[0] && 
this.props.words && this.props.words[0] && 
newProps.words[0].text !== this.props.words[0].text;

this.setState({
scrollToStart:wordsWillChange});}, 



getButtonRect:function(buttonIndex, cb){
this.refs['button-' + buttonIndex].getButtonRect(cb);}, 


render:function(){

var wordsToRender=this.prepareWords();

if(!wordsToRender.length){
return React.createElement(View, null);}


var words=wordsToRender.map((function(word, i){
var type;

if(i === 0){
type = BUTTON_TYPES.QUESTION;}else 

if(this.props.disabled){
if(word.target){
type = word.chosen?BUTTON_TYPES.CORRECT_ANSWER_SELECTED:BUTTON_TYPES.CORRECT_ANSWER_NOT_SELECTED;}else 

if(word.chosen){
type = BUTTON_TYPES.WRONG_ANSWER_SELECTED;}else 

{
type = BUTTON_TYPES.ANSWER_DISABLED;}}else 


{
type = BUTTON_TYPES.ANSWER_ENABLED;}


return (
React.createElement(WordButton, {
index:i, 
key:'word-' + i, 
height:this.state.height, 
arrow:i === 1, 
ref:'button-' + i, 
onAction:this.props.type !== BUTTON_TYPES.QUESTION?this.props.onAction:function(){}, 
text:i === 0?word.text:word.definition, 
type:type}));}).


bind(this));





var contentOffset={x:lastScrollLeft, y:0};
if(this.state.scrollToStart){
lastScrollLeft = lastScrollLeft?0:0.1;
contentOffset.x = lastScrollLeft;}


return (
React.createElement(View, {style:styles.toolbar}, 
React.createElement(ScrollView, {
horizontal:true, 
showsHorizontalScrollIndicator:false, 
contentOffset:contentOffset}, 

React.createElement(View, {style:styles.words}, 
words))));}, 






prepareWords:function(){
if(!this.props.words || !this.props.words.length){
return [];}


var words=JSON.parse(JSON.stringify(this.props.words));
var outputWords=[];

while(words.length) {
var nextWord=words.pop();

if(nextWord.target){
outputWords.unshift(nextWord);}

outputWords.push(nextWord);}

return outputWords;}});



var styles=StyleSheet.create({

toolbar:{
backgroundColor:uiConfig.COLORS.SELECTED_GREY, 
flexDirection:'row'}, 


words:{
flex:1, 
flexDirection:'row'}});




module.exports = WordStrip;
});
__d('yarn/app/uiconfig.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {

COLORS:{
LIGHT_GREY:'rgb(242, 242, 242)', 
SELECTED_GREY:'rgb(120, 120, 120)', 
MID_GREY:'rgb(190, 190, 190)', 
GREEN:'rgb(65, 172, 96)', 
BLUE:'rgb(39, 170, 225)', 
TEXT:'rgb(65, 64, 66)', 
ORANGE:'rgb(247, 148, 30)', 
RED:'rgb(223, 28, 36)'}, 


TOOLBAR_HEIGHT:50, 
WORDBUTTON_PADDING:14, 
TOOLBAR_FONT_SIZE:14, 
TOOLBAR_ICON_SIZE:22, 
PROGRESSBAR_FONT_SIZE:12, 
PROGRESSBAR_HEIGHT:2, 
TOOLBAR_BUTTON_WIDTH:70, 
TOOLBAR_ANIMATION_OFFSET:15};
});
__d('yarn/app/views/wordstrip/wordbutton.js',["react-native/Libraries/react-native/react-native.js","yarn/app/uiconfig.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

TouchableWithoutFeedback=



React.TouchableWithoutFeedback;var StyleSheet=React.StyleSheet;var Text=React.Text;var View=React.View;

var uiConfig=require('yarn/app/uiconfig.js');
var FIRST_BUTTON_ARROW_SIZE=10;

var BUTTON_TYPES={
QUESTION:'QUESTION', 
ANSWER_ENABLED:'ANSWER_ENABLED', 
ANSWER_DISABLED:'ANSWER_DISABLED', 
CORRECT_ANSWER_SELECTED:'CORRECT_ANSWER_SELECTED', 
CORRECT_ANSWER_NOT_SELECTED:'CORRECT_ANSWER_NOT_SELECTED', 
WRONG_ANSWER_SELECTED:'WRONG_ANSWER_SELECTED'};


var WordButton=React.createClass({displayName:'WordButton', 

render:function(){
var arrow;
var height=this.props.height;

var buttonColors=BUTTON_COLORS[this.props.type] || {};

var additionalStyle={
height:height, 
backgroundColor:buttonColors.backgroundColor};


var additionalTextStyle={
lineHeight:height * 0.65};


if(this.props.arrow){
arrow = 
React.createElement(View, {style:[styles.buttonArrow, {
borderTopWidth:height / 2, 
borderBottomWidth:height / 2}]});



additionalTextStyle.paddingLeft = uiConfig.WORDBUTTON_PADDING - FIRST_BUTTON_ARROW_SIZE / 4;}


if(this.props.type !== BUTTON_TYPES.QUESTION){
additionalStyle.borderRightWidth = 1;
additionalStyle.borderRightColor = '#FFFFFF';}


return (
React.createElement(TouchableWithoutFeedback, {onPress:this.onButtonPressed}, 
React.createElement(View, {ref:'button', style:[styles.wordButton, additionalStyle]}, 
arrow, 
React.createElement(Text, {style:[styles.wordButtonText, additionalTextStyle, buttonColors]}, 
this.props.text))));}, 






getButtonRect:function(cb){
this.refs.button.measure(function(ox, oy, width, height, px, py){
cb({
x:px, 
y:py, 
width:width, 
height:height});});}, 




onButtonPressed:function(){
this.getButtonRect((function(rect){
this.props.onAction(rect, this.props.text, this.props.index);}).
bind(this));}});












var styles=StyleSheet.create({

wordButton:{
flexDirection:'row'}, 


wordButtonText:{
paddingLeft:uiConfig.WORDBUTTON_PADDING, 
paddingRight:uiConfig.WORDBUTTON_PADDING, 
fontSize:uiConfig.TOOLBAR_FONT_SIZE, 
fontWeight:'500'}, 


buttonArrow:{
width:FIRST_BUTTON_ARROW_SIZE, 
borderLeftWidth:Math.ceil(FIRST_BUTTON_ARROW_SIZE / 2), 
borderTopColor:'rgba(0,0,0,0)', 
borderBottomColor:'rgba(0,0,0,0)', 
backgroundColor:'rgba(0,0,0,0)', 
borderLeftColor:uiConfig.COLORS.LIGHT_GREY}});




var BUTTON_COLORS={
QUESTION:{
backgroundColor:uiConfig.COLORS.LIGHT_GREY, 
color:uiConfig.COLORS.TEXT}, 


ANSWER_ENABLED:{
backgroundColor:uiConfig.COLORS.SELECTED_GREY, 
color:'#FFFFFF'}, 


ANSWER_DISABLED:{
backgroundColor:uiConfig.COLORS.MID_GREY, 
color:'#FFFFFF'}, 


CORRECT_ANSWER_SELECTED:{
backgroundColor:uiConfig.COLORS.GREEN, 
color:'#FFFFFF'}, 


CORRECT_ANSWER_NOT_SELECTED:{
backgroundColor:uiConfig.COLORS.LIGHT_GREY, 
color:'#41AC60'}, 


WRONG_ANSWER_SELECTED:{
backgroundColor:uiConfig.COLORS.RED, 
color:'#FFFFFF'}};



WordButton.BUTTON_TYPES = BUTTON_TYPES;

module.exports = WordButton;
});
__d('yarn/app/views/statusbar/navbarbutton.js',["image!settings-icon","image!next-icon","react-native/Libraries/react-native/react-native.js","yarn/app/uiconfig.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=




React.StyleSheet;var View=React.View;var Text=React.Text;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;var Image=React.Image;

var uiConfig=require('yarn/app/uiconfig.js');

var NavBarButton=React.createClass({displayName:'NavBarButton', 

getDefaultProps:function(){
return {
icon:''};}, 



getInitialState:function(){
return {
height:uiConfig.TOOLBAR_HEIGHT};}, 



render:function(){
var img=this.renderIcon();
return (
React.createElement(TouchableWithoutFeedback, {onPress:this.props.onPress}, 
React.createElement(View, {style:styles.wrap}, 
img)));}, 





renderIcon:function(){

switch(this.props.icon){
case 'settings':
return (
React.createElement(Image, {source:require('image!settings-icon'), style:styles.icon}));

case 'next':
return (
React.createElement(Image, {source:require('image!next-icon'), style:styles.icon}));

default:
return React.createElement(View, null);}}});




var styles=StyleSheet.create({
wrap:{
backgroundColor:'#FFFFFF', 
width:uiConfig.TOOLBAR_BUTTON_WIDTH, 
borderLeftWidth:1, 
borderLeftColor:uiConfig.COLORS.MID_GREY, 
alignSelf:'stretch', 

alignItems:'center', 
justifyContent:'center'}, 


icon:{
width:uiConfig.TOOLBAR_ICON_SIZE, 
height:uiConfig.TOOLBAR_ICON_SIZE, 
marginTop:Math.floor((uiConfig.TOOLBAR_HEIGHT - uiConfig.TOOLBAR_ICON_SIZE) / 2)}});




module.exports = NavBarButton;
});
__d('image!settings-icon',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/mateusz/workspace/weaverdigital/yarn/iOS/Images.xcassets/settings-icon.imageset/settings-icon.png","uri":"settings-icon","width":44,"height":44,"deprecated":true};
});
__d('image!next-icon',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/mateusz/workspace/weaverdigital/yarn/iOS/Images.xcassets/next-icon.imageset/next-icon.png","uri":"next-icon","width":44,"height":44,"deprecated":true};
});
__d('yarn/app/views/browser/browser.js',["react-native/Libraries/react-native/react-native.js","yarn/app/stores/gamestatestore.js","yarn/app/views/browser/yarnwebview.js","yarn/app/actions/actions.js","yarn/app/logger/logger.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=





React.StyleSheet;var Text=React.Text;var TextInput=React.TextInput;var TouchableOpacity=React.TouchableOpacity;var View=React.View;var WebView=React.WebView;

var gameSateStore=require('yarn/app/stores/gamestatestore.js');
var YarnWebView=require('yarn/app/views/browser/yarnwebview.js');
var actions=require('yarn/app/actions/actions.js');
var log=require('yarn/app/logger/logger.js');

var BORDER='#E7EAEA';
var BGWASH='rgba(255,255,255,0.8)';
var HEADER='#F9FAFB';
var DISABLED_WASH='rgba(255,255,255,0.25)';

var WEBVIEW_REF='webview';
var TEXT_INPUT_REF='urlInput';

var Browser=React.createClass({displayName:'Browser', 
lastUrl:'', 

getInitialState:function(){
return {
url:this.props.url, 
urlInInput:this.props.url, 
status:'No Page Loaded', 
backButtonEnabled:false, 
forwardButtonEnabled:false, 
loading:true};}, 



handleTextInputChange:function(event){
this.setState({
urlInInput:event.nativeEvent.text});}, 



render:function(){
return (
React.createElement(View, {style:[styles.container]}, 
React.createElement(View, {style:[styles.addressBarRow]}, 
React.createElement(TouchableOpacity, {onPress:this.goBack}, 
React.createElement(View, {style:this.state.backButtonEnabled?styles.navButton:styles.disabledButton}, 
React.createElement(Text, null, '<'))), 


React.createElement(TouchableOpacity, {onPress:this.goForward}, 
React.createElement(View, {style:this.state.forwardButtonEnabled?styles.navButton:styles.disabledButton}, 
React.createElement(Text, null, '>'))), 


React.createElement(TextInput, {
ref:TEXT_INPUT_REF, 
autoCapitalize:'none', 
value:this.state.urlInInput, 
onSubmitEditing:this.onSubmitEditing, 
onChange:this.handleTextInputChange, 
clearButtonMode:'while-editing', 
style:styles.addressBarTextInput}), 

React.createElement(TouchableOpacity, {onPress:this.pressGoButton}, 
React.createElement(View, {style:styles.goButton}, 
React.createElement(Text, null, 'Go!')))), 



React.createElement(YarnWebView, {
ref:WEBVIEW_REF, 
style:styles.webView, 
userRange:this.props.userRange, 
userLevel:this.props.userLevel, 
url:this.state.url, 
onNavigationStateChange:this.onNavigationStateChange, 
onWordsParsed:this.onWordsParsed, 
onVisibleWordsChanged:this.onVisibleWordsChanged, 
onScroll:this.props.onScroll || function(){}})));}, 





componentDidMount:function(){
gameSateStore.addChangeListener(this.onGameStateChanged);

var webView=this.refs[WEBVIEW_REF];
actions.on(actions.WORDS_READY, webView.prepareWords);
actions.on(actions.START_GAME, webView.stopScrollTracking);}, 


onVisibleWordsChanged:function(words){
actions.emit(actions.VISITED_WORDS_CHANGED, words);}, 


onGameStateChanged:function(){
if(gameSateStore.get('currentState') === gameSateStore.GAME_STATES.WAITING_FOR_ANSWER){
var currentWord=gameSateStore.get('currentWord');
this.highlightWord(currentWord.text);}}, 



onWordsParsed:function(words){
log({
message:'words parsed', 
url:this.state.url, 
words:words});

actions.emit('WORDS_PARSED', words);}, 


goBack:function(){
this.refs[WEBVIEW_REF].goBack();}, 


goForward:function(){
this.refs[WEBVIEW_REF].goForward();}, 


reload:function(){
this.refs[WEBVIEW_REF].reload();}, 


onNavigationStateChange:function(navState){
this.setState({
backButtonEnabled:navState.canGoBack, 
forwardButtonEnabled:navState.canGoForward, 
url:navState.url, 
status:navState.title, 
loading:navState.loading});

if(navState.url !== this.lastUrl){
this.lastUrl = navState.url;
this.refs[WEBVIEW_REF].resetLastParsedContent();
this.props.onUrlChange && this.props.onUrlChange(navState);}}, 



onSubmitEditing:function(event){
this.setState({
words:[]});

this.pressGoButton();}, 


pressGoButton:function(){
var url=this.state.urlInInput.toLowerCase();
log({
message:'Page loading started', 
url:url});

if(url === this.state.url){
this.reload();}else 
{
this.setState({
url:this.state.urlInInput});}



this.refs[TEXT_INPUT_REF].blur();}, 


highlightWord:function(word){
this.refs[WEBVIEW_REF].highlightWord(word);}, 


scrollToWord:function(word){
this.refs[WEBVIEW_REF].scrollToWord(word);}, 


unhighlightWords:function(){
this.refs[WEBVIEW_REF].unhighlightWords();}, 


resetLastParsedContent:function(){
this.refs[WEBVIEW_REF].resetLastParsedContent();}});



var styles=StyleSheet.create({
container:{
flex:1, 
backgroundColor:HEADER}, 

addressBarRow:{
flexDirection:'row', 
padding:8, 
borderBottomWidth:1, 
borderBottomColor:BORDER}, 

addressBarTextInput:{
backgroundColor:BGWASH, 
borderColor:BORDER, 
borderRadius:3, 
borderWidth:1, 
height:24, 
paddingLeft:10, 
paddingTop:3, 
paddingBottom:3, 
flex:1, 
fontSize:14}, 

navButton:{
width:20, 
padding:3, 
marginRight:3, 
alignItems:'center', 
justifyContent:'center', 
backgroundColor:BGWASH, 
borderWidth:1, 
borderColor:BORDER, 
borderRadius:3}, 

disabledButton:{
width:20, 
padding:3, 
marginRight:3, 
alignItems:'center', 
justifyContent:'center', 
backgroundColor:DISABLED_WASH, 
borderColor:'transparent', 
borderRadius:3}, 

goButton:{
height:24, 
padding:3, 
marginLeft:8, 
alignItems:'center', 
backgroundColor:BGWASH, 
borderColor:BORDER, 
borderWidth:1, 
borderRadius:3, 
alignSelf:'stretch'}, 

spinner:{
width:20, 
marginRight:6}});


module.exports = Browser;
});
__d('yarn/app/stores/gamestatestore.js',["events/events.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var Events=require('events/events.js');
var eventEmitter=new Events.EventEmitter();
var CHANGE_EVENT='store:changed';

var GAME_STATES={
NOT_STARTED:'NOT_STARTED', 
WAITING_FOR_ANSWER:'WAITING_FOR_ANSWER', 
WRONG_ANSWER_CHOSEN:'WRONG_ANSWER_CHOSEN', 
CORRECT_ANSWER_CHOSEN:'CORRECT_ANSWER_CHOSEN'};


var initialData={
pageWords:[], 
visitedPageWords:[], 
currentWordIndex:-1, 
currentWord:'', 
currentQuestion:null, 
chosenAnswer:'', 
randomWordsCount:6, 
currentState:GAME_STATES.NOT_STARTED, 
correct:0, 
wrong:0, 
finished:false};


var data=JSON.parse(JSON.stringify(initialData));
var listenersPaused=false;

function set(key, d){
data[key] = d;
!listenersPaused && emitChange();}


function get(key){
return data[key];}


function emitChange(){
eventEmitter.emit(CHANGE_EVENT);}


function addChangeListener(listener){
eventEmitter.on(CHANGE_EVENT, listener);}


function reset(){
data = JSON.parse(JSON.stringify(initialData));
!listenersPaused && emitChange();}


function pause(b){
listenersPaused = b;
!listenersPaused && emitChange();}


module.exports = {
addChangeListener:addChangeListener, 
get:get, 
set:set, 
reset:reset, 
pause:pause, 
GAME_STATES:GAME_STATES};
});
__d('events/events.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 




















EventEmitter(){
this._events = this._events || {};
this._maxListeners = this._maxListeners || undefined;}

module.exports = EventEmitter;


EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;



EventEmitter.defaultMaxListeners = 10;



EventEmitter.prototype.setMaxListeners = function(n){
if(!isNumber(n) || n < 0 || isNaN(n))
throw TypeError('n must be a positive number');
this._maxListeners = n;
return this;};


EventEmitter.prototype.emit = function(type){
var er, handler, len, args, i, listeners;

if(!this._events)
this._events = {};


if(type === 'error'){
if(!this._events.error || 
isObject(this._events.error) && !this._events.error.length){
er = arguments[1];
if(er instanceof Error){
throw er;}

throw TypeError('Uncaught, unspecified "error" event.');}}



handler = this._events[type];

if(isUndefined(handler))
return false;

if(isFunction(handler)){
switch(arguments.length){

case 1:
handler.call(this);
break;
case 2:
handler.call(this, arguments[1]);
break;
case 3:
handler.call(this, arguments[1], arguments[2]);
break;

default:
len = arguments.length;
args = new Array(len - 1);
for(i = 1; i < len; i++) 
args[i - 1] = arguments[i];
handler.apply(this, args);}}else 

if(isObject(handler)){
len = arguments.length;
args = new Array(len - 1);
for(i = 1; i < len; i++) 
args[i - 1] = arguments[i];

listeners = handler.slice();
len = listeners.length;
for(i = 0; i < len; i++) 
listeners[i].apply(this, args);}


return true;};


EventEmitter.prototype.addListener = function(type, listener){
var m;

if(!isFunction(listener))
throw TypeError('listener must be a function');

if(!this._events)
this._events = {};



if(this._events.newListener)
this.emit('newListener', type, 
isFunction(listener.listener)?
listener.listener:listener);

if(!this._events[type])

this._events[type] = listener;else 
if(isObject(this._events[type]))

this._events[type].push(listener);else 


this._events[type] = [this._events[type], listener];


if(isObject(this._events[type]) && !this._events[type].warned){
var m;
if(!isUndefined(this._maxListeners)){
m = this._maxListeners;}else 
{
m = EventEmitter.defaultMaxListeners;}


if(m && m > 0 && this._events[type].length > m){
this._events[type].warned = true;
console.error('(node) warning: possible EventEmitter memory ' + 
'leak detected. %d listeners added. ' + 
'Use emitter.setMaxListeners() to increase limit.', 
this._events[type].length);
if(typeof console.trace === 'function'){

console.trace();}}}




return this;};


EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener){
if(!isFunction(listener))
throw TypeError('listener must be a function');

var fired=false;

function g(){
this.removeListener(type, g);

if(!fired){
fired = true;
listener.apply(this, arguments);}}



g.listener = listener;
this.on(type, g);

return this;};



EventEmitter.prototype.removeListener = function(type, listener){
var list, position, length, i;

if(!isFunction(listener))
throw TypeError('listener must be a function');

if(!this._events || !this._events[type])
return this;

list = this._events[type];
length = list.length;
position = -1;

if(list === listener || 
isFunction(list.listener) && list.listener === listener){
delete this._events[type];
if(this._events.removeListener)
this.emit('removeListener', type, listener);}else 

if(isObject(list)){
for(i = length; i-- > 0;) {
if(list[i] === listener || 
list[i].listener && list[i].listener === listener){
position = i;
break;}}



if(position < 0)
return this;

if(list.length === 1){
list.length = 0;
delete this._events[type];}else 
{
list.splice(position, 1);}


if(this._events.removeListener)
this.emit('removeListener', type, listener);}


return this;};


EventEmitter.prototype.removeAllListeners = function(type){
var key, listeners;

if(!this._events)
return this;


if(!this._events.removeListener){
if(arguments.length === 0)
this._events = {};else 
if(this._events[type])
delete this._events[type];
return this;}



if(arguments.length === 0){
for(key in this._events) {
if(key === 'removeListener')continue;
this.removeAllListeners(key);}

this.removeAllListeners('removeListener');
this._events = {};
return this;}


listeners = this._events[type];

if(isFunction(listeners)){
this.removeListener(type, listeners);}else 
{

while(listeners.length) 
this.removeListener(type, listeners[listeners.length - 1]);}

delete this._events[type];

return this;};


EventEmitter.prototype.listeners = function(type){
var ret;
if(!this._events || !this._events[type])
ret = [];else 
if(isFunction(this._events[type]))
ret = [this._events[type]];else 

ret = this._events[type].slice();
return ret;};


EventEmitter.listenerCount = function(emitter, type){
var ret;
if(!emitter._events || !emitter._events[type])
ret = 0;else 
if(isFunction(emitter._events[type]))
ret = 1;else 

ret = emitter._events[type].length;
return ret;};


function isFunction(arg){
return typeof arg === 'function';}


function isNumber(arg){
return typeof arg === 'number';}


function isObject(arg){
return typeof arg === 'object' && arg !== null;}


function isUndefined(arg){
return arg === void 0;}
});
__d('yarn/app/views/browser/yarnwebview.js',["react-native/Libraries/react-native/react-native.js","react-native-webview-bridge/jsx/WebViewBridge.js","yarn/app/logger/logger.js","node-read/index.js","yarn/app/views/browser/wordHelpers.js","yarn/app/views/browser/websiteapi.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=

React.StyleSheet;var WebView=React.WebView;

var WebViewBridge=require('react-native-webview-bridge/jsx/WebViewBridge.js');

var log=require('yarn/app/logger/logger.js');
var readability=require('node-read/index.js');
var wordHelpers=require('yarn/app/views/browser/wordHelpers.js');

var YARN_API=require('yarn/app/views/browser/websiteapi.js').toString();
YARN_API = '(' + YARN_API + '())';



function encodeMessage(name, data){
return JSON.stringify({
name:name, 
data:data});}



function decodeMessage(msg){
return JSON.parse(msg);}


var HIGHLIGHT_COLOR='#22FF22';

var BORDER='#E7EAEA';
var BGWASH='rgba(255,255,255,0.8)';
var HEADER='#F9FAFB';

var WEBVIEW_REF='webview';
















var Browser=React.createClass({displayName:'Browser', 
lastParsedContent:'', 

getInitialState:function(){
return {
status:'No Page Loaded', 
backButtonEnabled:false, 
forwardButtonEnabled:false, 
loading:true};}, 



handleTextInputChange:function(event){
this.inputText = event.nativeEvent.text;}, 


render:function(){
return (
React.createElement(WebViewBridge, {
ref:WEBVIEW_REF, 
automaticallyAdjustContentInsets:false, 
style:styles.webView, 
url:this.props.url, 
javaScriptEnabledAndroid:true, 
onNavigationStateChange:this.onNavigationStateChange, 
startInLoadingState:true}));}, 




componentDidMount:function(){

this.refs[WEBVIEW_REF].onMessage((function(message){
var msg=decodeMessage(message);

switch(msg.name){
case 'WEBSITE_CONTENT':
console.log('website content received', msg.data.length);
log({
message:'Page content received', 
url:this.props.url, 
length:msg.data.length});

if(!msg.data || msg.data.indexOf('body') === -1){
return this.scheduleParsing();}

this.parseWebsiteContent(msg.data);
break;

case 'WORDS_CHANGED':
console.log('words changed', msg.data);
break;

case 'LOG':
var args=['WEBVIEW LOG:'].concat(msg.data);
console.log.apply(console, args);
break;

case 'WEBSITE_READY':
this.sendCommand('GET_HTML');
break;

case 'WORDS':
console.log('visited words:', msg.data);
this.props.onVisibleWordsChanged && this.props.onVisibleWordsChanged(msg.data);
break;

case 'SCROLL':
this.props.onScroll && this.props.onScroll(msg.data);
break;}}).


bind(this));}, 


onNavigationStateChange:function(navState){

this.props.onNavigationStateChange && this.props.onNavigationStateChange(navState);

console.log('onNavigationStateChange', navState);
this.setState({
url:navState.url, 
status:navState.title, 
loading:navState.loading});

if(!navState.loading){
this.scheduleParsing();}}, 



scheduleParsing:function(fast){
if(this.parseTimeout){
clearTimeout(this.parseTimeout);}

console.log('schedule parsing');


this.parseTimeout = setTimeout((function(){
this.parseTimeout = undefined;













console.log('sending YARN API to webview');
this.refs[WEBVIEW_REF].injectBridgeScript();
this.refs[WEBVIEW_REF].evalScript(YARN_API);}).

bind(this), fast?300:700);}, 


parseWebsiteContent:function(html){
readability(html, (function(err, article, meta){


if(err){
throw err;}

var content=(article.content || '').replace(/\s/g, ' ');

if(!content.length){
return this.scheduleParsing();}








var contentToParse=article.title + ' ' + article.content;

if(this.lastParsedContent === contentToParse){
console.log('content was already parsed - terminating');
return;}

this.lastParsedContent = contentToParse;
var range=this.props.userRange;
var level=this.props.userLevel || 50;
var words=wordHelpers.extractWordsFromArticle(contentToParse, level - range, level + range);

var attempts=0;
while(words.length < 8 && attempts++ < 5) {
log({
message:'Not enough words, extending the range', 
previousRange:range, 
wordsForPreviousRange:words, 
newRange:range + 5});

range += 5;
words = wordHelpers.extractWordsFromArticle(contentToParse, level - range, level + range);}




console.log('parsed words:', words);
this.props.onWordsParsed && this.props.onWordsParsed(words);}).
bind(this));}, 


sendCommand:function(command, data){
this.refs[WEBVIEW_REF].send(encodeMessage(command, data));}, 


prepareWords:function(words){
this.sendCommand('PREPARE_WORDS', words);}, 


stopScrollTracking:function(){
this.sendCommand('STOP_SCROLL_TRACKING');}, 


goBack:function(){
this.refs[WEBVIEW_REF].goBack();}, 


goForward:function(){
this.refs[WEBVIEW_REF].goForward();}, 


reload:function(){
this.refs[WEBVIEW_REF].reload();}, 


highlightWord:function(word){
this.sendCommand('HIGHLIGHT_WORD', word);}, 


scrollToWord:function(word){
this.sendCommand('SCROLL_TO_WORD', word);}, 


unhighlightWords:function(){
this.sendCommand('UNHIGHLIGHT_WORDS');}, 


resetLastParsedContent:function(){
this.lastParsedContent = '';}});



var styles=StyleSheet.create({
webView:{
backgroundColor:BGWASH, 
height:350}});


module.exports = Browser;
});
__d('react-native-webview-bridge/jsx/WebViewBridge.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target, props){for(var i=0; i < props.length; i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function(Constructor, protoProps, staticProps){if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;};})();var _get=function get(object, property, receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object, property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent, property, receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance, Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass, superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, {constructor:{value:subClass, enumerable:false, writable:true, configurable:true}});if(superClass)subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');var 


WebView=



React.WebView;var WebViewManager=React.NativeModules.WebViewManager;var 

WebViewBridge=(function(_WebView){
function WebViewBridge(props){_classCallCheck(this, WebViewBridge);
_get(Object.getPrototypeOf(WebViewBridge.prototype), 'constructor', this).call(this, props);
this.handlerId = 0;}_inherits(WebViewBridge, _WebView);_createClass(WebViewBridge, [{key:'getWebViewBridgeHandler', value:





function getWebViewBridgeHandler(fn){var _this=this;



var handler=this.getWebWiewHandle || this.getWebViewHandle;

if(this.handlerId){
fn(this.handlerId);}else 
{


setTimeout(function(){
_this.handlerId = handler();
fn(_this.handlerId);}, 
0);}}}, {key:'injectBridgeScript', value:






function injectBridgeScript(){
this.getWebViewBridgeHandler(function(handlerId){
WebViewManager.injectBridgeScript(handlerId);});}}, {key:'onMessage', value:



function onMessage(cb){var _this2=this;
this.getWebViewBridgeHandler(function(handlerId){
WebViewManager.onMessage(handlerId, function(messages){
messages.forEach(function(message){
cb(message);});



_this2.onMessage(cb);});});}}, {key:'evalScript', value:




function evalScript(value){
this.getWebViewBridgeHandler(function(handlerId){
WebViewManager.eval(handlerId, value);});}}, {key:'send', value:



function send(message){
if(typeof message !== 'string'){
message = JSON.stringify(message);}


this.getWebViewBridgeHandler(function(handlerId){
WebViewManager.send(handlerId, message);});}}, {key:'componentDidMount', value:



function componentDidMount(){
if(_get(Object.getPrototypeOf(WebViewBridge.prototype), 'componentDidMount', this)){
_get(Object.getPrototypeOf(WebViewBridge.prototype), 'componentDidMount', this).call(this);}


this.getWebViewBridgeHandler(function(handlerId){
WebViewManager.bridgeSetup(handlerId);});}}, {key:'componentWillUnmount', value:



function componentWillUnmount(){var _this3=this;
if(_get(Object.getPrototypeOf(WebViewBridge.prototype), 'componentWillUnmount', this)){
_get(Object.getPrototypeOf(WebViewBridge.prototype), 'componentWillMount', this).call(this);}



this.getWebViewBridgeHandler(function(handlerId){
WebViewManager.callbackCleanup(handlerId);
_this3.handlerId = 0;});}}]);return WebViewBridge;})(WebView);




module.exports = WebViewBridge;
});
__d('yarn/app/logger/logger.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';


var url='http://logs-01.loggly.com/bulk/41096412-3533-4c39-bed4-a19e96b4aa42/tag/bulk/';
var sessionTimestamp=Date.now();

module.exports = function(data){
if(typeof data === 'string'){
data = {
message:data};}


data.sessionTimestamp = sessionTimestamp;
data.timestamp = Date.now();

var dataStr=JSON.stringify(data);

console.log(data.message, data);


return fetch(url, {
method:'post', 
headers:{
'Accept':'application/json', 
'Content-Type':'application/json'}, 

body:dataStr});};
});
__d('node-read/index.js',["node-read/lib/utils.js","url/url.js","cheerio/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var utils=require('node-read/lib/utils.js');
var url=require('url/url.js');
var cheerio=require('cheerio/index.js');

function Article(dom, options, uri){
this.$ = dom;
this.originalDOM = dom;
this.cache = {};

if(uri && typeof uri != 'undefined'){
this.base = uri.protocol + '//' + uri.hostname + uri.pathname;
if(uri.port && uri.port != 80)this.base += ':' + uri.port;}else 
{
this.base = false;}


this.options = options;
this.__defineGetter__('content', function(){
return this.getContent(true);});

this.__defineGetter__('title', function(){
return this.getTitle(true);});

this.__defineGetter__('html', function(){
return this.getHTML(true);});

this.__defineGetter__('dom', function(){
return this.getDOM(true);});}



Article.prototype.getContent = function(){
if(typeof this.cache['article-content'] !== 'undefined'){
return this.cache['article-content'];}

var content=utils.extract(this.$, this.base, this.options).text();

return this.cache['article-content'] = content;};




Article.prototype.getTitle = function(){
if(typeof this.cache['article-title'] !== 'undefined'){
return this.cache['article-title'];}





var preferredTitle=this.$('.entry-title, .instapaper_title');
if(preferredTitle.length > 0){
return this.cache['article-title'] = preferredTitle.first().text().trim();}


var title=this.$('title').text();
var betterTitle;
var commonSeparatingCharacters=[' | ', ' _ ', ' - ', '«', '»', '—'];

var self=this;
commonSeparatingCharacters.forEach(function(char){
var tmpArray=title.split(char);
if(tmpArray.length > 1){
if(betterTitle)return self.cache['article-title'] = title;
betterTitle = tmpArray[0].trim();}});



if(betterTitle && betterTitle.length > 10){
return this.cache['article-title'] = betterTitle;}


return this.cache['article-title'] = title.trim();};


Article.prototype.getDOM = function(){
return this.originalDOM;};


Article.prototype.getHTML = function(){
return this.$.html();};


var read=module.exports = function(html, options, callback){
if(typeof options === 'function'){
callback = options;
options = {
considerDIVs:true, 
nodesToRemove:'meta,iframe,noscript,style,aside,object,script'};}



if(!html.match(/^\s*</)){

parseDOM('<html></html>', null);}else 
{
parseDOM(html, null);}


function parseDOM(html, url){
if(!html)return callback(new Error('Empty html'));
var $=cheerio.load(html, {
normalizeWhitespace:true});

if($('body').length < 1)return callback(new Error('No body tag was found'));
return callback(null, new Article($, options, url), url);}};
});
__d('node-read/lib/utils.js',["url/url.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 



url=require('url/url.js');





var regexps={
unlikelyCandidatesRe:/combx|pager|comment|disqus|foot|header|menu|meta|nav|rss|shoutbox|sidebar|sponsor|share|bookmark|social|advert|leaderboard|instapaper_ignore|entry-unrelated/i, 
okMaybeItsACandidateRe:/and|article|body|column|main/i, 
positiveRe:/article|body|content|entry|hentry|page|pagination|post|text/i, 
negativeRe:/combx|comment|captcha|contact|foot|footer|footnote|link|media|meta|promo|related|scroll|shoutbox|sponsor|utility|tags|widget|tip|dialog/i, 
divToPElementsRe:/<(a|blockquote|dl|div|img|ol|p|pre|table|ul)/i, 
replaceBrsRe:/(<br[^>]*>[ \n\r\t]*){2,}/gi, 
replaceFontsRe:/<(\/?)font[^>]*>/gi, 
trimRe:/^\s+|\s+$/g, 
normalizeRe:/\s{2,}/g, 
killBreaksRe:/(<br\s*\/?>(\s|&nbsp;?)*){1,}/g, 
videoRe:/http:\/\/(www\.)?(youtube|vimeo|youku|tudou|56|yinyuetai)\.com/i, 
nextLink:/(next|weiter|continue|>([^\|]|$)|»([^\|]|$))/i};






var nodeTypes={
'mostPositive':['div'], 
'positive':['pre', 'td', 'blockquote'], 
'negative':['address', 'ol', 'ul', 'dl', 'dd', 'dt', 'li'], 
'mostNegative':['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'th']};






function getArticle(candidates, $, options){
var topCandidate=null;

candidates.forEach(function(elem){
var linkDensity=getLinkDensity(elem, $);
var score=elem.data('readabilityScore');
var siblings=elem.children('p').length;

elem.data('readabilityScore', Math.min(2, Math.max(siblings, 1)) * score * (1 - linkDensity));
if(!topCandidate || elem.data('readabilityScore') > topCandidate.data('readabilityScore')){
topCandidate = elem;}});






if(topCandidate === null){
return $('body');}



var parent;
if(!(parent = topCandidate.parent()) || parent.length == 0 || topCandidate.children('p').length > 5){
return filterCandidates(topCandidate, topCandidate.children(), $);}else 
{
return filterCandidates(topCandidate, parent.children(), $);}}








function filterCandidates(topCandidate, siblings, $){
var articleContent=$('<div id=\'readabilityArticle\'></div>');
var siblingScoreThreshold=Math.max(10, topCandidate.data('readabilityScore') * 0.2);

siblings.each(function(index, elem){

var node=$(this);
var append=false;
var type=node.get(0).name;
var score=node.data('readabilityScore');
var children=siblings.contents().length;

if(node.is(topCandidate) || score > siblingScoreThreshold){
append = true;}


if(children > 0){
siblings.contents().each(function(index, elem){
if(elem.name == 'img')append = true;});}



if(!append && (type == 'p' || type == 'ul' || type == 'blockquote' || type == 'pre' || type == 'h2')){
$(elem).find('a').each(function(index, elems){
if($(elems).text().length > 1)return;
if(elems.name == 'a')$(elems).remove();});


var linkDensity=getLinkDensity(node, $);
var len=node.text().length;
if(len < 3)return;

if(len > 80 && linkDensity < 0.25){
append = true;}else 
if(len < 80 && linkDensity == 0 && node.text().replace(regexps.trimRe, '').length > 0){
append = true;}}



if(append){
articleContent.append(node);}});


return articleContent;}






function getCandidates($, base, options){


$(options.nodesToRemove).remove();


var candidates=[];


$('*', 'body').each(function(index, element){
var node=$(this);


if(!node || node.length == 0)return;
var nodeType=node.get(0).name;


var classAndID=(node.attr('class') || '') + (node.attr('id') || '');
if(classAndID.search(regexps.unlikelyCandidatesRe) !== -1 && classAndID.search(regexps.okMaybeItsACandidateRe) == -1){
return node.remove();}



if(nodeType == 'div' && node.children().length < 1 && node.text().trim().length < 1){
return node.remove();}



node.removeAttr('style');


if(nodeType === 'div' && options.considerDIVs){
if(node.html().search(regexps.divToPElementsRe) === -1){
node.replaceWith('<p class="node-read-div2p">' + node.html() + '</p>');}else 
{
node.contents().each(function(index, element){
var child=$(this), 
childEntity;
if(!child || !(childEntity = child.get(0))){
return;}

if(childEntity.type == 'text' && childEntity.data && childEntity.data.replace(regexps.trimRe, '').length > 1){
child.replaceWith('<p class="node-read-div2p">' + childEntity.data + '</p>');}});}}






if(nodeType == 'p' || nodeType == 'pre'){
return calculateNodeScore(node, candidates);}



if(base){
if(nodeType == 'img' && typeof node.attr('src') != 'undefined'){
node.attr('src', url.resolve(base, node.attr('src')));}

if(nodeType == 'a' && typeof node.attr('href') != 'undefined'){
node.attr('href', url.resolve(base, node.attr('href')));}}




if(['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].indexOf(nodeType) !== -1){
var weight=getClassWeight(node, $);
var density=getLinkDensity(node, $);
if(weight < 0 || density > 0.3){
node.remove();}}});





$('p.node-read-div2p', 'body').each(function(){
calculateNodeScore($(this), candidates);});


return candidates;}








function scoreCandidate(node, contentScore, candidates){
var score;
if(typeof node.data('readabilityScore') == 'undefined'){
score = initializeNode(node);
candidates.push(node);}else 
{
score = node.data('readabilityScore') || 0;}

node.data('readabilityScore', score + contentScore);}







function calculateNodeScore(node, candidates){
var txt=node.text();
var contentScore=1;


if(txt.length < 25)return;



var commas=txt.match(/[,，.。;；?？、]/g);
if(commas && commas.length){
contentScore += commas.length;}



contentScore += Math.min(Math.floor(txt.length / 100), 3);



var parent=node.parent();

if(parent && parent.length > 0){
scoreCandidate(parent, contentScore, candidates);
var grandParent=parent.parent();
if(grandParent && grandParent.length > 0){
scoreCandidate(grandParent, contentScore / 2, candidates);}}}








function initializeNode(node){
if(!node || node.length == 0)return 0;
var tag=node.get(0).name;
if(nodeTypes['mostPositive'].indexOf(tag))return 5 + getClassWeight(node);
if(nodeTypes['positive'].indexOf(tag))return 3 + getClassWeight(node);
if(nodeTypes['negative'].indexOf(tag))return -3 + getClassWeight(node);
if(nodeTypes['mostNegative'].indexOf(tag))return -5 + getClassWeight(node);
return -1;}






function getClassWeight(node){
if(node == null || node.length == 0)return 0;
var classAndID=(node.attr('class') || '') + (node.attr('id') || '');
var weight=0;

if(node.get(0).name == 'article')weight += 25;
if(classAndID.search(regexps.negativeRe) !== -1)weight -= 25;
if(classAndID.search(regexps.positiveRe) !== -1)weight += 25;

return weight;}








function getLinkDensity(node, $){
var links=node.find('a');
var textLength=node.text().length;
var linkLength=0;

links.each(function(index, elem){
var href=$(this).attr('href');
if(!href || href.length > 0 && href[0] === '#')return;
linkLength += $(this).text().length;});


return linkLength / textLength || 0;}







module.exports.extract = function($, base, options){
var candidates=getCandidates($, base, options);
article = getArticle(candidates, $, options);
if(article.length < 1){
article = getArticle([$('body')], $, options);}

return article;};
});
__d('url/url.js',["punycode/punycode.js","querystring/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




















punycode=require('punycode/punycode.js');

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url(){
this.protocol = null;
this.slashes = null;
this.auth = null;
this.host = null;
this.port = null;
this.hostname = null;
this.hash = null;
this.search = null;
this.query = null;
this.pathname = null;
this.path = null;
this.href = null;}






var protocolPattern=/^([a-z0-9.+-]+:)/i, 
portPattern=/:[0-9]*$/, 



delims=['<', '>', '"', '`', ' ', '\r', '\n', '\t'], 


unwise=['{', '}', '|', '\\', '^', '`'].concat(delims), 


autoEscape=['\''].concat(unwise), 




nonHostChars=['%', '/', '?', ';', '#'].concat(autoEscape), 
hostEndingChars=['/', '?', '#'], 
hostnameMaxLen=255, 
hostnamePartPattern=/^[a-z0-9A-Z_-]{0,63}$/, 
hostnamePartStart=/^([a-z0-9A-Z_-]{0,63})(.*)$/, 

unsafeProtocol={
'javascript':true, 
'javascript:':true}, 


hostlessProtocol={
'javascript':true, 
'javascript:':true}, 


slashedProtocol={
'http':true, 
'https':true, 
'ftp':true, 
'gopher':true, 
'file':true, 
'http:':true, 
'https:':true, 
'ftp:':true, 
'gopher:':true, 
'file:':true}, 

querystring=require('querystring/index.js');

function urlParse(url, parseQueryString, slashesDenoteHost){
if(url && isObject(url) && url instanceof Url)return url;

var u=new Url();
u.parse(url, parseQueryString, slashesDenoteHost);
return u;}


Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost){
if(!isString(url)){
throw new TypeError('Parameter \'url\' must be a string, not ' + typeof url);}


var rest=url;



rest = rest.trim();

var proto=protocolPattern.exec(rest);
if(proto){
proto = proto[0];
var lowerProto=proto.toLowerCase();
this.protocol = lowerProto;
rest = rest.substr(proto.length);}






if(slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)){
var slashes=rest.substr(0, 2) === '//';
if(slashes && !(proto && hostlessProtocol[proto])){
rest = rest.substr(2);
this.slashes = true;}}



if(!hostlessProtocol[proto] && (
slashes || proto && !slashedProtocol[proto])){

















var hostEnd=-1;
for(var i=0; i < hostEndingChars.length; i++) {
var hec=rest.indexOf(hostEndingChars[i]);
if(hec !== -1 && (hostEnd === -1 || hec < hostEnd))
hostEnd = hec;}




var auth, atSign;
if(hostEnd === -1){

atSign = rest.lastIndexOf('@');}else 
{


atSign = rest.lastIndexOf('@', hostEnd);}




if(atSign !== -1){
auth = rest.slice(0, atSign);
rest = rest.slice(atSign + 1);
this.auth = decodeURIComponent(auth);}



hostEnd = -1;
for(var i=0; i < nonHostChars.length; i++) {
var hec=rest.indexOf(nonHostChars[i]);
if(hec !== -1 && (hostEnd === -1 || hec < hostEnd))
hostEnd = hec;}


if(hostEnd === -1)
hostEnd = rest.length;

this.host = rest.slice(0, hostEnd);
rest = rest.slice(hostEnd);


this.parseHost();



this.hostname = this.hostname || '';



var ipv6Hostname=this.hostname[0] === '[' && 
this.hostname[this.hostname.length - 1] === ']';


if(!ipv6Hostname){
var hostparts=this.hostname.split(/\./);
for(var i=0, l=hostparts.length; i < l; i++) {
var part=hostparts[i];
if(!part)continue;
if(!part.match(hostnamePartPattern)){
var newpart='';
for(var j=0, k=part.length; j < k; j++) {
if(part.charCodeAt(j) > 127){



newpart += 'x';}else 
{
newpart += part[j];}}



if(!newpart.match(hostnamePartPattern)){
var validParts=hostparts.slice(0, i);
var notHost=hostparts.slice(i + 1);
var bit=part.match(hostnamePartStart);
if(bit){
validParts.push(bit[1]);
notHost.unshift(bit[2]);}

if(notHost.length){
rest = '/' + notHost.join('.') + rest;}

this.hostname = validParts.join('.');
break;}}}}





if(this.hostname.length > hostnameMaxLen){
this.hostname = '';}else 
{

this.hostname = this.hostname.toLowerCase();}


if(!ipv6Hostname){




var domainArray=this.hostname.split('.');
var newOut=[];
for(var i=0; i < domainArray.length; ++i) {
var s=domainArray[i];
newOut.push(s.match(/[^A-Za-z0-9_-]/)?
'xn--' + punycode.encode(s):s);}

this.hostname = newOut.join('.');}


var p=this.port?':' + this.port:'';
var h=this.hostname || '';
this.host = h + p;
this.href += this.host;



if(ipv6Hostname){
this.hostname = this.hostname.substr(1, this.hostname.length - 2);
if(rest[0] !== '/'){
rest = '/' + rest;}}}






if(!unsafeProtocol[lowerProto]){




for(var i=0, l=autoEscape.length; i < l; i++) {
var ae=autoEscape[i];
var esc=encodeURIComponent(ae);
if(esc === ae){
esc = escape(ae);}

rest = rest.split(ae).join(esc);}}





var hash=rest.indexOf('#');
if(hash !== -1){

this.hash = rest.substr(hash);
rest = rest.slice(0, hash);}

var qm=rest.indexOf('?');
if(qm !== -1){
this.search = rest.substr(qm);
this.query = rest.substr(qm + 1);
if(parseQueryString){
this.query = querystring.parse(this.query);}

rest = rest.slice(0, qm);}else 
if(parseQueryString){

this.search = '';
this.query = {};}

if(rest)this.pathname = rest;
if(slashedProtocol[lowerProto] && 
this.hostname && !this.pathname){
this.pathname = '/';}



if(this.pathname || this.search){
var p=this.pathname || '';
var s=this.search || '';
this.path = p + s;}



this.href = this.format();
return this;};



function urlFormat(obj){




if(isString(obj))obj = urlParse(obj);
if(!(obj instanceof Url))return Url.prototype.format.call(obj);
return obj.format();}


Url.prototype.format = function(){
var auth=this.auth || '';
if(auth){
auth = encodeURIComponent(auth);
auth = auth.replace(/%3A/i, ':');
auth += '@';}


var protocol=this.protocol || '', 
pathname=this.pathname || '', 
hash=this.hash || '', 
host=false, 
query='';

if(this.host){
host = auth + this.host;}else 
if(this.hostname){
host = auth + (this.hostname.indexOf(':') === -1?
this.hostname:
'[' + this.hostname + ']');
if(this.port){
host += ':' + this.port;}}



if(this.query && 
isObject(this.query) && 
Object.keys(this.query).length){
query = querystring.stringify(this.query);}


var search=this.search || query && '?' + query || '';

if(protocol && protocol.substr(-1) !== ':')protocol += ':';



if(this.slashes || 
(!protocol || slashedProtocol[protocol]) && host !== false){
host = '//' + (host || '');
if(pathname && pathname.charAt(0) !== '/')pathname = '/' + pathname;}else 
if(!host){
host = '';}


if(hash && hash.charAt(0) !== '#')hash = '#' + hash;
if(search && search.charAt(0) !== '?')search = '?' + search;

pathname = pathname.replace(/[?#]/g, function(match){
return encodeURIComponent(match);});

search = search.replace('#', '%23');

return protocol + host + pathname + search + hash;};


function urlResolve(source, relative){
return urlParse(source, false, true).resolve(relative);}


Url.prototype.resolve = function(relative){
return this.resolveObject(urlParse(relative, false, true)).format();};


function urlResolveObject(source, relative){
if(!source)return relative;
return urlParse(source, false, true).resolveObject(relative);}


Url.prototype.resolveObject = function(relative){
if(isString(relative)){
var rel=new Url();
rel.parse(relative, false, true);
relative = rel;}


var result=new Url();
Object.keys(this).forEach(function(k){
result[k] = this[k];}, 
this);



result.hash = relative.hash;


if(relative.href === ''){
result.href = result.format();
return result;}



if(relative.slashes && !relative.protocol){

Object.keys(relative).forEach(function(k){
if(k !== 'protocol')
result[k] = relative[k];});



if(slashedProtocol[result.protocol] && 
result.hostname && !result.pathname){
result.path = result.pathname = '/';}


result.href = result.format();
return result;}


if(relative.protocol && relative.protocol !== result.protocol){








if(!slashedProtocol[relative.protocol]){
Object.keys(relative).forEach(function(k){
result[k] = relative[k];});

result.href = result.format();
return result;}


result.protocol = relative.protocol;
if(!relative.host && !hostlessProtocol[relative.protocol]){
var relPath=(relative.pathname || '').split('/');
while(relPath.length && !(relative.host = relPath.shift()));
if(!relative.host)relative.host = '';
if(!relative.hostname)relative.hostname = '';
if(relPath[0] !== '')relPath.unshift('');
if(relPath.length < 2)relPath.unshift('');
result.pathname = relPath.join('/');}else 
{
result.pathname = relative.pathname;}

result.search = relative.search;
result.query = relative.query;
result.host = relative.host || '';
result.auth = relative.auth;
result.hostname = relative.hostname || relative.host;
result.port = relative.port;

if(result.pathname || result.search){
var p=result.pathname || '';
var s=result.search || '';
result.path = p + s;}

result.slashes = result.slashes || relative.slashes;
result.href = result.format();
return result;}


var isSourceAbs=result.pathname && result.pathname.charAt(0) === '/', 
isRelAbs=
relative.host || 
relative.pathname && relative.pathname.charAt(0) === '/', 

mustEndAbs=isRelAbs || isSourceAbs || 
result.host && relative.pathname, 
removeAllDots=mustEndAbs, 
srcPath=result.pathname && result.pathname.split('/') || [], 
relPath=relative.pathname && relative.pathname.split('/') || [], 
psychotic=result.protocol && !slashedProtocol[result.protocol];






if(psychotic){
result.hostname = '';
result.port = null;
if(result.host){
if(srcPath[0] === '')srcPath[0] = result.host;else 
srcPath.unshift(result.host);}

result.host = '';
if(relative.protocol){
relative.hostname = null;
relative.port = null;
if(relative.host){
if(relPath[0] === '')relPath[0] = relative.host;else 
relPath.unshift(relative.host);}

relative.host = null;}

mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');}


if(isRelAbs){

result.host = relative.host || relative.host === ''?
relative.host:result.host;
result.hostname = relative.hostname || relative.hostname === ''?
relative.hostname:result.hostname;
result.search = relative.search;
result.query = relative.query;
srcPath = relPath;}else 

if(relPath.length){


if(!srcPath)srcPath = [];
srcPath.pop();
srcPath = srcPath.concat(relPath);
result.search = relative.search;
result.query = relative.query;}else 
if(!isNullOrUndefined(relative.search)){



if(psychotic){
result.hostname = result.host = srcPath.shift();



var authInHost=result.host && result.host.indexOf('@') > 0?
result.host.split('@'):false;
if(authInHost){
result.auth = authInHost.shift();
result.host = result.hostname = authInHost.shift();}}


result.search = relative.search;
result.query = relative.query;

if(!isNull(result.pathname) || !isNull(result.search)){
result.path = (result.pathname?result.pathname:'') + (
result.search?result.search:'');}

result.href = result.format();
return result;}


if(!srcPath.length){


result.pathname = null;

if(result.search){
result.path = '/' + result.search;}else 
{
result.path = null;}

result.href = result.format();
return result;}





var last=srcPath.slice(-1)[0];
var hasTrailingSlash=
(result.host || relative.host) && (last === '.' || last === '..') || 
last === '';



var up=0;
for(var i=srcPath.length; i >= 0; i--) {
last = srcPath[i];
if(last == '.'){
srcPath.splice(i, 1);}else 
if(last === '..'){
srcPath.splice(i, 1);
up++;}else 
if(up){
srcPath.splice(i, 1);
up--;}}




if(!mustEndAbs && !removeAllDots){
for(; up--; up) {
srcPath.unshift('..');}}



if(mustEndAbs && srcPath[0] !== '' && (
!srcPath[0] || srcPath[0].charAt(0) !== '/')){
srcPath.unshift('');}


if(hasTrailingSlash && srcPath.join('/').substr(-1) !== '/'){
srcPath.push('');}


var isAbsolute=srcPath[0] === '' || 
srcPath[0] && srcPath[0].charAt(0) === '/';


if(psychotic){
result.hostname = result.host = isAbsolute?'':
srcPath.length?srcPath.shift():'';



var authInHost=result.host && result.host.indexOf('@') > 0?
result.host.split('@'):false;
if(authInHost){
result.auth = authInHost.shift();
result.host = result.hostname = authInHost.shift();}}



mustEndAbs = mustEndAbs || result.host && srcPath.length;

if(mustEndAbs && !isAbsolute){
srcPath.unshift('');}


if(!srcPath.length){
result.pathname = null;
result.path = null;}else 
{
result.pathname = srcPath.join('/');}



if(!isNull(result.pathname) || !isNull(result.search)){
result.path = (result.pathname?result.pathname:'') + (
result.search?result.search:'');}

result.auth = relative.auth || result.auth;
result.slashes = result.slashes || relative.slashes;
result.href = result.format();
return result;};


Url.prototype.parseHost = function(){
var host=this.host;
var port=portPattern.exec(host);
if(port){
port = port[0];
if(port !== ':'){
this.port = port.substr(1);}

host = host.substr(0, host.length - port.length);}

if(host)this.hostname = host;};


function isString(arg){
return typeof arg === 'string';}


function isObject(arg){
return typeof arg === 'object' && arg !== null;}


function isNull(arg){
return arg === null;}

function isNullOrUndefined(arg){
return arg == null;}
});
__d('punycode/punycode.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  ;
(function(root){


var freeExports=typeof exports == 'object' && exports && 
!exports.nodeType && exports;
var freeModule=typeof module == 'object' && module && 
!module.nodeType && module;
var freeGlobal=typeof global == 'object' && global;
if(
freeGlobal.global === freeGlobal || 
freeGlobal.window === freeGlobal || 
freeGlobal.self === freeGlobal)
{
root = freeGlobal;}







var punycode, 


maxInt=2147483647, 


base=36, 
tMin=1, 
tMax=26, 
skew=38, 
damp=700, 
initialBias=72, 
initialN=128, 
delimiter='-', 


regexPunycode=/^xn--/, 
regexNonASCII=/[^\x20-\x7E]/, 
regexSeparators=/[\x2E\u3002\uFF0E\uFF61]/g, 


errors={
'overflow':'Overflow: input needs wider integers to process', 
'not-basic':'Illegal input >= 0x80 (not a basic code point)', 
'invalid-input':'Invalid input'}, 



baseMinusTMin=base - tMin, 
floor=Math.floor, 
stringFromCharCode=String.fromCharCode, 


key;









function error(type){
throw RangeError(errors[type]);}










function map(array, fn){
var length=array.length;
var result=[];
while(length--) {
result[length] = fn(array[length]);}

return result;}












function mapDomain(string, fn){
var parts=string.split('@');
var result='';
if(parts.length > 1){


result = parts[0] + '@';
string = parts[1];}


string = string.replace(regexSeparators, '.');
var labels=string.split('.');
var encoded=map(labels, fn).join('.');
return result + encoded;}















function ucs2decode(string){
var output=[], 
counter=0, 
length=string.length, 
value, 
extra;
while(counter < length) {
value = string.charCodeAt(counter++);
if(value >= 0xD800 && value <= 0xDBFF && counter < length){

extra = string.charCodeAt(counter++);
if((extra & 0xFC00) == 0xDC00){
output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);}else 
{


output.push(value);
counter--;}}else 

{
output.push(value);}}


return output;}










function ucs2encode(array){
return map(array, function(value){
var output='';
if(value > 0xFFFF){
value -= 0x10000;
output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
value = 0xDC00 | value & 0x3FF;}

output += stringFromCharCode(value);
return output;}).
join('');}











function basicToDigit(codePoint){
if(codePoint - 48 < 10){
return codePoint - 22;}

if(codePoint - 65 < 26){
return codePoint - 65;}

if(codePoint - 97 < 26){
return codePoint - 97;}

return base;}













function digitToBasic(digit, flag){


return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);}







function adapt(delta, numPoints, firstTime){
var k=0;
delta = firstTime?floor(delta / damp):delta >> 1;
delta += floor(delta / numPoints);
for(; delta > baseMinusTMin * tMax >> 1; k += base) {
delta = floor(delta / baseMinusTMin);}

return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));}









function decode(input){

var output=[], 
inputLength=input.length, 
out, 
i=0, 
n=initialN, 
bias=initialBias, 
basic, 
j, 
index, 
oldi, 
w, 
k, 
digit, 
t, 

baseMinusT;





basic = input.lastIndexOf(delimiter);
if(basic < 0){
basic = 0;}


for(j = 0; j < basic; ++j) {

if(input.charCodeAt(j) >= 0x80){
error('not-basic');}

output.push(input.charCodeAt(j));}





for(index = basic > 0?basic + 1:0; index < inputLength;) {






for(oldi = i, w = 1, k = base;; k += base) {

if(index >= inputLength){
error('invalid-input');}


digit = basicToDigit(input.charCodeAt(index++));

if(digit >= base || digit > floor((maxInt - i) / w)){
error('overflow');}


i += digit * w;
t = k <= bias?tMin:k >= bias + tMax?tMax:k - bias;

if(digit < t){
break;}


baseMinusT = base - t;
if(w > floor(maxInt / baseMinusT)){
error('overflow');}


w *= baseMinusT;}



out = output.length + 1;
bias = adapt(i - oldi, out, oldi == 0);



if(floor(i / out) > maxInt - n){
error('overflow');}


n += floor(i / out);
i %= out;


output.splice(i++, 0, n);}



return ucs2encode(output);}









function encode(input){
var n, 
delta, 
handledCPCount, 
basicLength, 
bias, 
j, 
m, 
q, 
k, 
t, 
currentValue, 
output=[], 

inputLength, 

handledCPCountPlusOne, 
baseMinusT, 
qMinusT;


input = ucs2decode(input);


inputLength = input.length;


n = initialN;
delta = 0;
bias = initialBias;


for(j = 0; j < inputLength; ++j) {
currentValue = input[j];
if(currentValue < 0x80){
output.push(stringFromCharCode(currentValue));}}



handledCPCount = basicLength = output.length;





if(basicLength){
output.push(delimiter);}



while(handledCPCount < inputLength) {



for(m = maxInt, j = 0; j < inputLength; ++j) {
currentValue = input[j];
if(currentValue >= n && currentValue < m){
m = currentValue;}}





handledCPCountPlusOne = handledCPCount + 1;
if(m - n > floor((maxInt - delta) / handledCPCountPlusOne)){
error('overflow');}


delta += (m - n) * handledCPCountPlusOne;
n = m;

for(j = 0; j < inputLength; ++j) {
currentValue = input[j];

if(currentValue < n && ++delta > maxInt){
error('overflow');}


if(currentValue == n){

for(q = delta, k = base;; k += base) {
t = k <= bias?tMin:k >= bias + tMax?tMax:k - bias;
if(q < t){
break;}

qMinusT = q - t;
baseMinusT = base - t;
output.push(
stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));

q = floor(qMinusT / baseMinusT);}


output.push(stringFromCharCode(digitToBasic(q, 0)));
bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
delta = 0;
++handledCPCount;}}



++delta;
++n;}


return output.join('');}













function toUnicode(input){
return mapDomain(input, function(string){
return regexPunycode.test(string)?
decode(string.slice(4).toLowerCase()):
string;});}














function toASCII(input){
return mapDomain(input, function(string){
return regexNonASCII.test(string)?
'xn--' + encode(string):
string;});}






punycode = {





'version':'1.3.2', 







'ucs2':{
'decode':ucs2decode, 
'encode':ucs2encode}, 

'decode':decode, 
'encode':encode, 
'toASCII':toASCII, 
'toUnicode':toUnicode};





if(
typeof define == 'function' && 
typeof define.amd == 'object' && 
define.amd)
{
define('punycode', function(){
return punycode;});}else 

if(freeExports && freeModule){
if(module.exports == freeExports){
freeModule.exports = punycode;}else 
{
for(key in punycode) {
punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);}}}else 


{
root.punycode = punycode;}})(


this);
});
__d('querystring/index.js',["querystring/decode.js","querystring/encode.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

exports.decode = exports.parse = require('querystring/decode.js');
exports.encode = exports.stringify = require('querystring/encode.js');
});
__d('querystring/decode.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

























function hasOwnProperty(obj, prop){
return Object.prototype.hasOwnProperty.call(obj, prop);}


module.exports = function(qs, sep, eq, options){
sep = sep || '&';
eq = eq || '=';
var obj={};

if(typeof qs !== 'string' || qs.length === 0){
return obj;}


var regexp=/\+/g;
qs = qs.split(sep);

var maxKeys=1000;
if(options && typeof options.maxKeys === 'number'){
maxKeys = options.maxKeys;}


var len=qs.length;

if(maxKeys > 0 && len > maxKeys){
len = maxKeys;}


for(var i=0; i < len; ++i) {
var x=qs[i].replace(regexp, '%20'), 
idx=x.indexOf(eq), 
kstr, vstr, k, v;

if(idx >= 0){
kstr = x.substr(0, idx);
vstr = x.substr(idx + 1);}else 
{
kstr = x;
vstr = '';}


k = decodeURIComponent(kstr);
v = decodeURIComponent(vstr);

if(!hasOwnProperty(obj, k)){
obj[k] = v;}else 
if(Array.isArray(obj[k])){
obj[k].push(v);}else 
{
obj[k] = [obj[k], v];}}



return obj;};
});
__d('querystring/encode.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






















var stringifyPrimitive=function(v){
switch(typeof v){
case 'string':
return v;

case 'boolean':
return v?'true':'false';

case 'number':
return isFinite(v)?v:'';

default:
return '';}};



module.exports = function(obj, sep, eq, name){
sep = sep || '&';
eq = eq || '=';
if(obj === null){
obj = undefined;}


if(typeof obj === 'object'){
return Object.keys(obj).map(function(k){
var ks=encodeURIComponent(stringifyPrimitive(k)) + eq;
if(Array.isArray(obj[k])){
return obj[k].map(function(v){
return ks + encodeURIComponent(stringifyPrimitive(v));}).
join(sep);}else 
{
return ks + encodeURIComponent(stringifyPrimitive(obj[k]));}}).

join(sep);}



if(!name)return '';
return encodeURIComponent(stringifyPrimitive(name)) + eq + 
encodeURIComponent(stringifyPrimitive(obj));};
});
__d('cheerio/index.js',["cheerio/lib/cheerio.js","cheerio/package.json"],function(global, require, requireDynamic, requireLazy, module, exports) {  exports = 



module.exports = require('cheerio/lib/cheerio.js');





exports.version = require('cheerio/package.json').version;
});
__d('cheerio/lib/cheerio.js',["path/path.js","cheerio/lib/parse.js","lodash/dist/lodash.js","cheerio/lib/api/attributes.js","cheerio/lib/api/traversing.js","cheerio/lib/api/manipulation.js","cheerio/lib/api/css.js","cheerio/lib/static.js","cheerio/lib/static.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 



path=require('path/path.js'), 
parse=require('cheerio/lib/parse.js'), 
_=require('lodash/dist/lodash.js');





var api=[
require('cheerio/lib/api/attributes.js'), 
require('cheerio/lib/api/traversing.js'), 
require('cheerio/lib/api/manipulation.js'), 
require('cheerio/lib/api/css.js')];






var quickExpr=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/;





var $=require('cheerio/lib/static.js');





var Cheerio=module.exports = function(selector, context, root, options){
if(!(this instanceof Cheerio))return new Cheerio(selector, context, root, options);

this.options = _.defaults(options || {}, this.options);


if(!selector)return this;

if(root){
if(typeof root === 'string')root = parse(root, this.options);
this._root = Cheerio.call(this, root);}



if(selector.cheerio)return selector;


if(isNode(selector))
selector = [selector];


if(Array.isArray(selector)){
_.forEach(selector, function(elem, idx){
this[idx] = elem;}, 
this);
this.length = selector.length;
return this;}



if(typeof selector === 'string' && isHtml(selector)){
return Cheerio.call(this, parse(selector, this.options).children);}



if(!context){
context = this._root;}else 
if(typeof context === 'string'){
if(isHtml(context)){

context = parse(context, this.options);
context = Cheerio.call(this, context);}else 
{

selector = [context, selector].join(' ');
context = this._root;}}else 


if(!context.cheerio){
context = Cheerio.call(this, context);}



if(!context)return this;


return context.find(selector);};






_.extend(Cheerio, require('cheerio/lib/static.js'));





Cheerio.prototype.cheerio = '[cheerio object]';





Cheerio.prototype.options = {
normalizeWhitespace:false, 
xmlMode:false, 
decodeEntities:false};






Cheerio.prototype.length = 0;
Cheerio.prototype.splice = Array.prototype.splice;




var isHtml=function(str){

if(str.charAt(0) === '<' && str.charAt(str.length - 1) === '>' && str.length >= 3)return true;


var match=quickExpr.exec(str);
return !!(match && match[1]);};








Cheerio.prototype._make = function(dom){
var cheerio=new Cheerio(dom, undefined, undefined, this.options);
cheerio.prevObject = this;
return cheerio;};








Cheerio.prototype.toArray = function(){
return this.get();};





api.forEach(function(mod){
_.extend(Cheerio.prototype, mod);});


var isNode=function(obj){
return obj.name || obj.type === 'text' || obj.type === 'comment';};
});
__d('path/path.js',["util/util.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var process=process || {};
(function(){
'use strict';























var isWindows=process.platform === 'win32';
var util=require('util/util.js');






function normalizeArray(parts, allowAboveRoot){

var up=0;
for(var i=parts.length - 1; i >= 0; i--) {
var last=parts[i];
if(last === '.'){
parts.splice(i, 1);}else 
if(last === '..'){
parts.splice(i, 1);
up++;}else 
if(up){
parts.splice(i, 1);
up--;}}




if(allowAboveRoot){
for(; up--; up) {
parts.unshift('..');}}



return parts;}



if(isWindows){


var splitDeviceRe=
/^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/;


var splitTailRe=
/^([\s\S]*?)((?:\.{1,2}|[^\\\/]+?|)(\.[^.\/\\]*|))(?:[\\\/]*)$/;



var splitPath=function(filename){

var result=splitDeviceRe.exec(filename), 
device=(result[1] || '') + (result[2] || ''), 
tail=result[3] || '';

var result2=splitTailRe.exec(tail), 
dir=result2[1], 
basename=result2[2], 
ext=result2[3];
return [device, dir, basename, ext];};


var normalizeUNCRoot=function(device){
return '\\\\' + device.replace(/^[\\\/]+/, '').replace(/[\\\/]+/g, '\\');};




exports.resolve = function(){
var resolvedDevice='', 
resolvedTail='', 
resolvedAbsolute=false;

for(var i=arguments.length - 1; i >= -1; i--) {
var path;
if(i >= 0){
path = arguments[i];}else 
if(!resolvedDevice){
path = process.cwd();}else 
{




path = process.env['=' + resolvedDevice];


if(!path || path.substr(0, 3).toLowerCase() !== 
resolvedDevice.toLowerCase() + '\\'){
path = resolvedDevice + '\\';}}




if(!util.isString(path)){
throw new TypeError('Arguments to path.resolve must be strings');}else 
if(!path){
continue;}


var result=splitDeviceRe.exec(path), 
device=result[1] || '', 
isUnc=device && device.charAt(1) !== ':', 
isAbsolute=exports.isAbsolute(path), 
tail=result[3];

if(device && 
resolvedDevice && 
device.toLowerCase() !== resolvedDevice.toLowerCase()){

continue;}


if(!resolvedDevice){
resolvedDevice = device;}

if(!resolvedAbsolute){
resolvedTail = tail + '\\' + resolvedTail;
resolvedAbsolute = isAbsolute;}


if(resolvedDevice && resolvedAbsolute){
break;}}





if(isUnc){
resolvedDevice = normalizeUNCRoot(resolvedDevice);}








function f(p){
return !!p;}


resolvedTail = normalizeArray(resolvedTail.split(/[\\\/]+/).filter(f), 
!resolvedAbsolute).join('\\');

return resolvedDevice + (resolvedAbsolute?'\\':'') + resolvedTail || 
'.';};



exports.normalize = function(path){
var result=splitDeviceRe.exec(path), 
device=result[1] || '', 
isUnc=device && device.charAt(1) !== ':', 
isAbsolute=exports.isAbsolute(path), 
tail=result[3], 
trailingSlash=/[\\\/]$/.test(tail);


if(device && device.charAt(1) === ':'){
device = device[0].toLowerCase() + device.substr(1);}



tail = normalizeArray(tail.split(/[\\\/]+/).filter(function(p){
return !!p;}), 
!isAbsolute).join('\\');

if(!tail && !isAbsolute){
tail = '.';}

if(tail && trailingSlash){
tail += '\\';}




if(isUnc){
device = normalizeUNCRoot(device);}


return device + (isAbsolute?'\\':'') + tail;};



exports.isAbsolute = function(path){
var result=splitDeviceRe.exec(path), 
device=result[1] || '', 
isUnc=!!device && device.charAt(1) !== ':';

return !!result[2] || isUnc;};



exports.join = function(){
function f(p){
if(!util.isString(p)){
throw new TypeError('Arguments to path.join must be strings');}

return p;}


var paths=Array.prototype.filter.call(arguments, f);
var joined=paths.join('\\');














if(!/^[\\\/]{2}[^\\\/]/.test(paths[0])){
joined = joined.replace(/^[\\\/]{2,}/, '\\');}


return exports.normalize(joined);};








exports.relative = function(from, to){
from = exports.resolve(from);
to = exports.resolve(to);


var lowerFrom=from.toLowerCase();
var lowerTo=to.toLowerCase();

function trim(arr){
var start=0;
for(; start < arr.length; start++) {
if(arr[start] !== '')break;}


var end=arr.length - 1;
for(; end >= 0; end--) {
if(arr[end] !== '')break;}


if(start > end)return [];
return arr.slice(start, end + 1);}


var toParts=trim(to.split('\\'));

var lowerFromParts=trim(lowerFrom.split('\\'));
var lowerToParts=trim(lowerTo.split('\\'));

var length=Math.min(lowerFromParts.length, lowerToParts.length);
var samePartsLength=length;
for(var i=0; i < length; i++) {
if(lowerFromParts[i] !== lowerToParts[i]){
samePartsLength = i;
break;}}



if(samePartsLength == 0){
return to;}


var outputParts=[];
for(var i=samePartsLength; i < lowerFromParts.length; i++) {
outputParts.push('..');}


outputParts = outputParts.concat(toParts.slice(samePartsLength));

return outputParts.join('\\');};


exports.sep = '\\';
exports.delimiter = ';';}else 

{



var splitPathRe=
/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath=function(filename){
return splitPathRe.exec(filename).slice(1);};




exports.resolve = function(){
var resolvedPath='', 
resolvedAbsolute=false;

for(var i=arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
var path=i >= 0?arguments[i]:process.cwd();


if(!util.isString(path)){
throw new TypeError('Arguments to path.resolve must be strings');}else 
if(!path){
continue;}


resolvedPath = path + '/' + resolvedPath;
resolvedAbsolute = path.charAt(0) === '/';}






resolvedPath = normalizeArray(resolvedPath.split('/').filter(function(p){
return !!p;}), 
!resolvedAbsolute).join('/');

return (resolvedAbsolute?'/':'') + resolvedPath || '.';};




exports.normalize = function(path){
var isAbsolute=exports.isAbsolute(path), 
trailingSlash=path[path.length - 1] === '/', 
segments=path.split('/'), 
nonEmptySegments=[];


for(var i=0; i < segments.length; i++) {
if(segments[i]){
nonEmptySegments.push(segments[i]);}}


path = normalizeArray(nonEmptySegments, !isAbsolute).join('/');

if(!path && !isAbsolute){
path = '.';}

if(path && trailingSlash){
path += '/';}


return (isAbsolute?'/':'') + path;};



exports.isAbsolute = function(path){
return path.charAt(0) === '/';};



exports.join = function(){
var path='';
for(var i=0; i < arguments.length; i++) {
var segment=arguments[i];
if(!util.isString(segment)){
throw new TypeError('Arguments to path.join must be strings');}

if(segment){
if(!path){
path += segment;}else 
{
path += '/' + segment;}}}



return exports.normalize(path);};





exports.relative = function(from, to){
from = exports.resolve(from).substr(1);
to = exports.resolve(to).substr(1);

function trim(arr){
var start=0;
for(; start < arr.length; start++) {
if(arr[start] !== '')break;}


var end=arr.length - 1;
for(; end >= 0; end--) {
if(arr[end] !== '')break;}


if(start > end)return [];
return arr.slice(start, end + 1);}


var fromParts=trim(from.split('/'));
var toParts=trim(to.split('/'));

var length=Math.min(fromParts.length, toParts.length);
var samePartsLength=length;
for(var i=0; i < length; i++) {
if(fromParts[i] !== toParts[i]){
samePartsLength = i;
break;}}



var outputParts=[];
for(var i=samePartsLength; i < fromParts.length; i++) {
outputParts.push('..');}


outputParts = outputParts.concat(toParts.slice(samePartsLength));

return outputParts.join('/');};


exports.sep = '/';
exports.delimiter = ':';}


exports.dirname = function(path){
var result=splitPath(path), 
root=result[0], 
dir=result[1];

if(!root && !dir){

return '.';}


if(dir){

dir = dir.substr(0, dir.length - 1);}


return root + dir;};



exports.basename = function(path, ext){
var f=splitPath(path)[2];

if(ext && f.substr(-1 * ext.length) === ext){
f = f.substr(0, f.length - ext.length);}

return f;};



exports.extname = function(path){
return splitPath(path)[3];};



exports.exists = util.deprecate(function(path, callback){
require('fs').exists(path, callback);}, 
'path.exists is now called `fs.exists`.');


exports.existsSync = util.deprecate(function(path){
return require('fs').existsSync(path);}, 
'path.existsSync is now called `fs.existsSync`.');


if(isWindows){
exports._makeLong = function(path){

if(!util.isString(path))
return path;

if(!path){
return '';}


var resolvedPath=exports.resolve(path);

if(/^[a-zA-Z]\:\\/.test(resolvedPath)){


return '\\\\?\\' + resolvedPath;}else 
if(/^\\\\[^?.]/.test(resolvedPath)){


return '\\\\?\\UNC\\' + resolvedPath.substring(2);}


return path;};}else 

{
exports._makeLong = function(path){
return path;};}})();
});
__d('util/util.js',["util/support/isBufferBrowser.js","inherits/inherits_browser.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




















formatRegExp=/%[sdj%]/g;
exports.format = function(f){
if(!isString(f)){
var objects=[];
for(var i=0; i < arguments.length; i++) {
objects.push(inspect(arguments[i]));}

return objects.join(' ');}


var i=1;
var args=arguments;
var len=args.length;
var str=String(f).replace(formatRegExp, function(x){
if(x === '%%')return '%';
if(i >= len)return x;
switch(x){
case '%s':return String(args[i++]);
case '%d':return Number(args[i++]);
case '%j':
try{
return JSON.stringify(args[i++]);}
catch(_) {
return '[Circular]';}

default:
return x;}});


for(var x=args[i]; i < len; x = args[++i]) {
if(isNull(x) || !isObject(x)){
str += ' ' + x;}else 
{
str += ' ' + inspect(x);}}


return str;};






exports.deprecate = function(fn, msg){

if(isUndefined(global.process)){
return function(){
return exports.deprecate(fn, msg).apply(this, arguments);};}



if(process.noDeprecation === true){
return fn;}


var warned=false;
function deprecated(){
if(!warned){
if(process.throwDeprecation){
throw new Error(msg);}else 
if(process.traceDeprecation){
console.trace(msg);}else 
{
console.error(msg);}

warned = true;}

return fn.apply(this, arguments);}


return deprecated;};



var debugs={};
var debugEnviron;
exports.debuglog = function(set){
if(isUndefined(debugEnviron))
debugEnviron = process.env.NODE_DEBUG || '';
set = set.toUpperCase();
if(!debugs[set]){
if(new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)){
var pid=process.pid;
debugs[set] = function(){
var msg=exports.format.apply(exports, arguments);
console.error('%s %d: %s', set, pid, msg);};}else 

{
debugs[set] = function(){};}}


return debugs[set];};











function inspect(obj, opts){

var ctx={
seen:[], 
stylize:stylizeNoColor};


if(arguments.length >= 3)ctx.depth = arguments[2];
if(arguments.length >= 4)ctx.colors = arguments[3];
if(isBoolean(opts)){

ctx.showHidden = opts;}else 
if(opts){

exports._extend(ctx, opts);}


if(isUndefined(ctx.showHidden))ctx.showHidden = false;
if(isUndefined(ctx.depth))ctx.depth = 2;
if(isUndefined(ctx.colors))ctx.colors = false;
if(isUndefined(ctx.customInspect))ctx.customInspect = true;
if(ctx.colors)ctx.stylize = stylizeWithColor;
return formatValue(ctx, obj, ctx.depth);}

exports.inspect = inspect;



inspect.colors = {
'bold':[1, 22], 
'italic':[3, 23], 
'underline':[4, 24], 
'inverse':[7, 27], 
'white':[37, 39], 
'grey':[90, 39], 
'black':[30, 39], 
'blue':[34, 39], 
'cyan':[36, 39], 
'green':[32, 39], 
'magenta':[35, 39], 
'red':[31, 39], 
'yellow':[33, 39]};



inspect.styles = {
'special':'cyan', 
'number':'yellow', 
'boolean':'yellow', 
'undefined':'grey', 
'null':'bold', 
'string':'green', 
'date':'magenta', 

'regexp':'red'};



function stylizeWithColor(str, styleType){
var style=inspect.styles[styleType];

if(style){
return '\u001b[' + inspect.colors[style][0] + 'm' + str + 
'\u001b[' + inspect.colors[style][1] + 'm';}else 
{
return str;}}




function stylizeNoColor(str, styleType){
return str;}



function arrayToHash(array){
var hash={};

array.forEach(function(val, idx){
hash[val] = true;});


return hash;}



function formatValue(ctx, value, recurseTimes){


if(ctx.customInspect && 
value && 
isFunction(value.inspect) && 

value.inspect !== exports.inspect && 

!(value.constructor && value.constructor.prototype === value)){
var ret=value.inspect(recurseTimes, ctx);
if(!isString(ret)){
ret = formatValue(ctx, ret, recurseTimes);}

return ret;}



var primitive=formatPrimitive(ctx, value);
if(primitive){
return primitive;}



var keys=Object.keys(value);
var visibleKeys=arrayToHash(keys);

if(ctx.showHidden){
keys = Object.getOwnPropertyNames(value);}




if(isError(value) && (
keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)){
return formatError(value);}



if(keys.length === 0){
if(isFunction(value)){
var name=value.name?': ' + value.name:'';
return ctx.stylize('[Function' + name + ']', 'special');}

if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');}

if(isDate(value)){
return ctx.stylize(Date.prototype.toString.call(value), 'date');}

if(isError(value)){
return formatError(value);}}



var base='', array=false, braces=['{', '}'];


if(isArray(value)){
array = true;
braces = ['[', ']'];}



if(isFunction(value)){
var n=value.name?': ' + value.name:'';
base = ' [Function' + n + ']';}



if(isRegExp(value)){
base = ' ' + RegExp.prototype.toString.call(value);}



if(isDate(value)){
base = ' ' + Date.prototype.toUTCString.call(value);}



if(isError(value)){
base = ' ' + formatError(value);}


if(keys.length === 0 && (!array || value.length == 0)){
return braces[0] + base + braces[1];}


if(recurseTimes < 0){
if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');}else 
{
return ctx.stylize('[Object]', 'special');}}



ctx.seen.push(value);

var output;
if(array){
output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);}else 
{
output = keys.map(function(key){
return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);});}



ctx.seen.pop();

return reduceToSingleString(output, base, braces);}



function formatPrimitive(ctx, value){
if(isUndefined(value))
return ctx.stylize('undefined', 'undefined');
if(isString(value)){
var simple='\'' + JSON.stringify(value).replace(/^"|"$/g, '').
replace(/'/g, '\\\'').
replace(/\\"/g, '"') + '\'';
return ctx.stylize(simple, 'string');}

if(isNumber(value))
return ctx.stylize('' + value, 'number');
if(isBoolean(value))
return ctx.stylize('' + value, 'boolean');

if(isNull(value))
return ctx.stylize('null', 'null');}



function formatError(value){
return '[' + Error.prototype.toString.call(value) + ']';}



function formatArray(ctx, value, recurseTimes, visibleKeys, keys){
var output=[];
for(var i=0, l=value.length; i < l; ++i) {
if(hasOwnProperty(value, String(i))){
output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, 
String(i), true));}else 
{
output.push('');}}


keys.forEach(function(key){
if(!key.match(/^\d+$/)){
output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, 
key, true));}});


return output;}



function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array){
var name, str, desc;
desc = Object.getOwnPropertyDescriptor(value, key) || {value:value[key]};
if(desc.get){
if(desc.set){
str = ctx.stylize('[Getter/Setter]', 'special');}else 
{
str = ctx.stylize('[Getter]', 'special');}}else 

{
if(desc.set){
str = ctx.stylize('[Setter]', 'special');}}


if(!hasOwnProperty(visibleKeys, key)){
name = '[' + key + ']';}

if(!str){
if(ctx.seen.indexOf(desc.value) < 0){
if(isNull(recurseTimes)){
str = formatValue(ctx, desc.value, null);}else 
{
str = formatValue(ctx, desc.value, recurseTimes - 1);}

if(str.indexOf('\n') > -1){
if(array){
str = str.split('\n').map(function(line){
return '  ' + line;}).
join('\n').substr(2);}else 
{
str = '\n' + str.split('\n').map(function(line){
return '   ' + line;}).
join('\n');}}}else 


{
str = ctx.stylize('[Circular]', 'special');}}


if(isUndefined(name)){
if(array && key.match(/^\d+$/)){
return str;}

name = JSON.stringify('' + key);
if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){
name = name.substr(1, name.length - 2);
name = ctx.stylize(name, 'name');}else 
{
name = name.replace(/'/g, '\\\'').
replace(/\\"/g, '"').
replace(/(^"|"$)/g, '\'');
name = ctx.stylize(name, 'string');}}



return name + ': ' + str;}



function reduceToSingleString(output, base, braces){
var numLinesEst=0;
var length=output.reduce(function(prev, cur){
numLinesEst++;
if(cur.indexOf('\n') >= 0)numLinesEst++;
return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;}, 
0);

if(length > 60){
return braces[0] + (
base === ''?'':base + '\n ') + 
' ' + 
output.join(',\n  ') + 
' ' + 
braces[1];}


return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];}





function isArray(ar){
return Array.isArray(ar);}

exports.isArray = isArray;

function isBoolean(arg){
return typeof arg === 'boolean';}

exports.isBoolean = isBoolean;

function isNull(arg){
return arg === null;}

exports.isNull = isNull;

function isNullOrUndefined(arg){
return arg == null;}

exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg){
return typeof arg === 'number';}

exports.isNumber = isNumber;

function isString(arg){
return typeof arg === 'string';}

exports.isString = isString;

function isSymbol(arg){
return typeof arg === 'symbol';}

exports.isSymbol = isSymbol;

function isUndefined(arg){
return arg === void 0;}

exports.isUndefined = isUndefined;

function isRegExp(re){
return isObject(re) && objectToString(re) === '[object RegExp]';}

exports.isRegExp = isRegExp;

function isObject(arg){
return typeof arg === 'object' && arg !== null;}

exports.isObject = isObject;

function isDate(d){
return isObject(d) && objectToString(d) === '[object Date]';}

exports.isDate = isDate;

function isError(e){
return isObject(e) && (
objectToString(e) === '[object Error]' || e instanceof Error);}

exports.isError = isError;

function isFunction(arg){
return typeof arg === 'function';}

exports.isFunction = isFunction;

function isPrimitive(arg){
return arg === null || 
typeof arg === 'boolean' || 
typeof arg === 'number' || 
typeof arg === 'string' || 
typeof arg === 'symbol' || 
typeof arg === 'undefined';}

exports.isPrimitive = isPrimitive;

exports.isBuffer = require('util/support/isBufferBrowser.js');

function objectToString(o){
return Object.prototype.toString.call(o);}



function pad(n){
return n < 10?'0' + n.toString(10):n.toString(10);}



var months=['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 
'Oct', 'Nov', 'Dec'];


function timestamp(){
var d=new Date();
var time=[pad(d.getHours()), 
pad(d.getMinutes()), 
pad(d.getSeconds())].join(':');
return [d.getDate(), months[d.getMonth()], time].join(' ');}




exports.log = function(){
console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));};
















exports.inherits = require('inherits/inherits_browser.js');

exports._extend = function(origin, add){

if(!add || !isObject(add))return origin;

var keys=Object.keys(add);
var i=keys.length;
while(i--) {
origin[keys[i]] = add[keys[i]];}

return origin;};


function hasOwnProperty(obj, prop){
return Object.prototype.hasOwnProperty.call(obj, prop);}
});
__d('util/support/isBufferBrowser.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = function isBuffer(arg){
return arg && typeof arg === 'object' && 
typeof arg.copy === 'function' && 
typeof arg.fill === 'function' && 
typeof arg.readUInt8 === 'function';};
});
__d('inherits/inherits_browser.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  if(typeof Object.create === 'function'){

module.exports = function inherits(ctor, superCtor){
ctor.super_ = superCtor;
ctor.prototype = Object.create(superCtor.prototype, {
constructor:{
value:ctor, 
enumerable:false, 
writable:true, 
configurable:true}});};}else 



{

module.exports = function inherits(ctor, superCtor){
ctor.super_ = superCtor;
var TempCtor=function(){};
TempCtor.prototype = superCtor.prototype;
ctor.prototype = new TempCtor();
ctor.prototype.constructor = ctor;};}
});
__d('cheerio/lib/parse.js',["htmlparser2/lib/index.js","lodash/dist/lodash.js","cheerio/lib/utils.js","cheerio/lib/utils.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 


htmlparser=require('htmlparser2/lib/index.js'), 
_=require('lodash/dist/lodash.js'), 
utils=require('cheerio/lib/utils.js'), 
decode=utils.decode, 
isTag=utils.isTag, 
camelCase=require('cheerio/lib/utils.js').camelCase;




exports = module.exports = function(content, options){
var dom=evaluate(content, options);


var root={
type:'root', 
name:'root', 
parent:null, 
prev:null, 
next:null, 
children:[]};



update(dom, root);

return root;};


var evaluate=exports.evaluate = function(content, options){


var dom;

if(_.isString(content)){
dom = htmlparser.parseDOM(content, options);}else 
{
dom = content;}


_.forEach(dom, parseData);

return dom;};





var update=exports.update = function(arr, parent){

if(!Array.isArray(arr))arr = [arr];


if(parent){
parent.children = arr;}else 
{
parent = null;}



for(var i=0; i < arr.length; i++) {
var node=arr[i];


var oldSiblings=node.parent && node.parent.children;
if(oldSiblings && oldSiblings !== arr){
oldSiblings.splice(oldSiblings.indexOf(node), 1);
if(node.prev){
node.prev.next = node.next;}

if(node.next){
node.next.prev = node.prev;}}



if(parent){
node.prev = arr[i - 1] || null;
node.next = arr[i + 1] || null;}else 
{
node.prev = node.next = null;}


if(parent && parent.type === 'root'){
node.root = parent;
node.parent = null;}else 
{
node.root = null;
node.parent = parent;}}



return parent;};









var parseData=exports.parseData = function(elem){
if(elem.data === undefined)elem.data = {};
var value;
for(var key in elem.attribs) {
value = decode(elem.attribs[key]);

if(key.substr(0, 5) === 'data-'){
key = key.slice(5);
key = camelCase(key);
elem.data[key] = value;}else 
{
elem.attribs[key] = value;}}



_.forEach(elem.children, parseData);};
});
__d('htmlparser2/lib/index.js',["htmlparser2/lib/Parser.js","domhandler/index.js","htmlparser2/lib/Tokenizer.js","domelementtype/index.js","htmlparser2/lib/FeedHandler.js","htmlparser2/lib/Stream.js","htmlparser2/lib/WritableStream.js","htmlparser2/lib/ProxyHandler.js","domutils/index.js","htmlparser2/lib/CollectingHandler.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var Parser=require("htmlparser2/lib/Parser.js"), 
DomHandler=require("domhandler/index.js");

function defineProp(name, value){
delete module.exports[name];
module.exports[name] = value;
return value;}


module.exports = {
Parser:Parser, 
Tokenizer:require("htmlparser2/lib/Tokenizer.js"), 
ElementType:require("domelementtype/index.js"), 
DomHandler:DomHandler, 
get FeedHandler() {
return defineProp("FeedHandler", require("htmlparser2/lib/FeedHandler.js"));}, 

get Stream() {
return defineProp("Stream", require("htmlparser2/lib/Stream.js"));}, 

get WritableStream() {
return defineProp("WritableStream", require("htmlparser2/lib/WritableStream.js"));}, 

get ProxyHandler() {
return defineProp("ProxyHandler", require("htmlparser2/lib/ProxyHandler.js"));}, 

get DomUtils() {
return defineProp("DomUtils", require("domutils/index.js"));}, 

get CollectingHandler() {
return defineProp("CollectingHandler", require("htmlparser2/lib/CollectingHandler.js"));}, 


DefaultHandler:DomHandler, 
get RssHandler() {
return defineProp("RssHandler", this.FeedHandler);}, 


parseDOM:function(data, options){
var handler=new DomHandler(options);
new Parser(handler, options).end(data);
return handler.dom;}, 

parseFeed:function(feed, options){
var handler=new module.exports.FeedHandler(options);
new Parser(handler, options).end(feed);
return handler.dom;}, 

createDomStream:function(cb, options, elementCb){
var handler=new DomHandler(cb, options, elementCb);
return new Parser(handler, options);}, 


EVENTS:{
attribute:2, 
cdatastart:0, 
cdataend:0, 
text:1, 
processinginstruction:2, 
comment:1, 
commentend:0, 
closetag:1, 
opentag:2, 
opentagname:1, 
error:1, 
end:0}};
});
__d('htmlparser2/lib/Parser.js',["htmlparser2/lib/Tokenizer.js","util/util.js","events/events.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var Tokenizer=require("htmlparser2/lib/Tokenizer.js");
























var formTags={
input:true, 
option:true, 
optgroup:true, 
select:true, 
button:true, 
datalist:true, 
textarea:true};


var openImpliesClose={
tr:{tr:true, th:true, td:true}, 
th:{th:true}, 
td:{thead:true, td:true}, 
body:{head:true, link:true, script:true}, 
li:{li:true}, 
p:{p:true}, 
select:formTags, 
input:formTags, 
output:formTags, 
button:formTags, 
datalist:formTags, 
textarea:formTags, 
option:{option:true}, 
optgroup:{optgroup:true}};


var voidElements={
__proto__:null, 
area:true, 
base:true, 
basefont:true, 
br:true, 
col:true, 
command:true, 
embed:true, 
frame:true, 
hr:true, 
img:true, 
input:true, 
isindex:true, 
keygen:true, 
link:true, 
meta:true, 
param:true, 
source:true, 
track:true, 
wbr:true, 


path:true, 
circle:true, 
ellipse:true, 
line:true, 
rect:true, 
use:true};


var re_nameEnd=/\s|\//;

function Parser(cbs, options){
this._options = options || {};
this._cbs = cbs || {};

this._tagname = "";
this._attribname = "";
this._attribvalue = "";
this._attribs = null;
this._stack = [];

this.startIndex = 0;
this.endIndex = null;

this._lowerCaseTagNames = "lowerCaseTags" in this._options?
!!this._options.lowerCaseTags:
!this._options.xmlMode;
this._lowerCaseAttributeNames = "lowerCaseAttributeNames" in this._options?
!!this._options.lowerCaseAttributeNames:
!this._options.xmlMode;

this._tokenizer = new Tokenizer(this._options, this);}


require("util/util.js").inherits(Parser, require("events/events.js").EventEmitter);

Parser.prototype._updatePosition = function(initialOffset){
if(this.endIndex === null){
if(this._tokenizer._sectionStart <= initialOffset){
this.startIndex = 0;}else 
{
this.startIndex = this._tokenizer._sectionStart - initialOffset;}}else 


this.startIndex = this.endIndex + 1;
this.endIndex = this._tokenizer._index;};



Parser.prototype.ontext = function(data){
this._updatePosition(1);
this.endIndex--;

if(this._cbs.ontext)this._cbs.ontext(data);};


Parser.prototype.onopentagname = function(name){
if(this._lowerCaseTagNames){
name = name.toLowerCase();}


this._tagname = name;

if(!this._options.xmlMode && name in openImpliesClose){
for(
var el; (
(el = this._stack[this._stack.length - 1]) in openImpliesClose[name]); 
this.onclosetag(el));}



if(this._options.xmlMode || !(name in voidElements)){
this._stack.push(name);}


if(this._cbs.onopentagname)this._cbs.onopentagname(name);
if(this._cbs.onopentag)this._attribs = {};};


Parser.prototype.onopentagend = function(){
this._updatePosition(1);

if(this._attribs){
if(this._cbs.onopentag)this._cbs.onopentag(this._tagname, this._attribs);
this._attribs = null;}


if(!this._options.xmlMode && this._cbs.onclosetag && this._tagname in voidElements){
this._cbs.onclosetag(this._tagname);}


this._tagname = "";};


Parser.prototype.onclosetag = function(name){
this._updatePosition(1);

if(this._lowerCaseTagNames){
name = name.toLowerCase();}


if(this._stack.length && (!(name in voidElements) || this._options.xmlMode)){
var pos=this._stack.lastIndexOf(name);
if(pos !== -1){
if(this._cbs.onclosetag){
pos = this._stack.length - pos;
while(pos--) this._cbs.onclosetag(this._stack.pop());}else 

this._stack.length = pos;}else 
if(name === "p" && !this._options.xmlMode){
this.onopentagname(name);
this._closeCurrentTag();}}else 

if(!this._options.xmlMode && (name === "br" || name === "p")){
this.onopentagname(name);
this._closeCurrentTag();}};



Parser.prototype.onselfclosingtag = function(){
if(this._options.xmlMode || this._options.recognizeSelfClosing){
this._closeCurrentTag();}else 
{
this.onopentagend();}};



Parser.prototype._closeCurrentTag = function(){
var name=this._tagname;

this.onopentagend();



if(this._stack[this._stack.length - 1] === name){
if(this._cbs.onclosetag){
this._cbs.onclosetag(name);}

this._stack.pop();}};



Parser.prototype.onattribname = function(name){
if(this._lowerCaseAttributeNames){
name = name.toLowerCase();}

this._attribname = name;};


Parser.prototype.onattribdata = function(value){
this._attribvalue += value;};


Parser.prototype.onattribend = function(){
if(this._cbs.onattribute)this._cbs.onattribute(this._attribname, this._attribvalue);
if(
this._attribs && 
!Object.prototype.hasOwnProperty.call(this._attribs, this._attribname))
{
this._attribs[this._attribname] = this._attribvalue;}

this._attribname = "";
this._attribvalue = "";};


Parser.prototype._getInstructionName = function(value){
var idx=value.search(re_nameEnd), 
name=idx < 0?value:value.substr(0, idx);

if(this._lowerCaseTagNames){
name = name.toLowerCase();}


return name;};


Parser.prototype.ondeclaration = function(value){
if(this._cbs.onprocessinginstruction){
var name=this._getInstructionName(value);
this._cbs.onprocessinginstruction("!" + name, "!" + value);}};



Parser.prototype.onprocessinginstruction = function(value){
if(this._cbs.onprocessinginstruction){
var name=this._getInstructionName(value);
this._cbs.onprocessinginstruction("?" + name, "?" + value);}};



Parser.prototype.oncomment = function(value){
this._updatePosition(4);

if(this._cbs.oncomment)this._cbs.oncomment(value);
if(this._cbs.oncommentend)this._cbs.oncommentend();};


Parser.prototype.oncdata = function(value){
this._updatePosition(1);

if(this._options.xmlMode || this._options.recognizeCDATA){
if(this._cbs.oncdatastart)this._cbs.oncdatastart();
if(this._cbs.ontext)this._cbs.ontext(value);
if(this._cbs.oncdataend)this._cbs.oncdataend();}else 
{
this.oncomment("[CDATA[" + value + "]]");}};



Parser.prototype.onerror = function(err){
if(this._cbs.onerror)this._cbs.onerror(err);};


Parser.prototype.onend = function(){
if(this._cbs.onclosetag){
for(
var i=this._stack.length; 
i > 0; 
this._cbs.onclosetag(this._stack[--i]));}


if(this._cbs.onend)this._cbs.onend();};




Parser.prototype.reset = function(){
if(this._cbs.onreset)this._cbs.onreset();
this._tokenizer.reset();

this._tagname = "";
this._attribname = "";
this._attribs = null;
this._stack = [];};



Parser.prototype.parseComplete = function(data){
this.reset();
this.end(data);};


Parser.prototype.write = function(chunk){
this._tokenizer.write(chunk);};


Parser.prototype.end = function(chunk){
this._tokenizer.end(chunk);};


Parser.prototype.pause = function(){
this._tokenizer.pause();};


Parser.prototype.resume = function(){
this._tokenizer.resume();};



Parser.prototype.parseChunk = Parser.prototype.write;
Parser.prototype.done = Parser.prototype.end;

module.exports = Parser;
});
__d('htmlparser2/lib/Tokenizer.js',["entities/lib/decode_codepoint.js","entities/maps/entities.json","entities/maps/legacy.json","entities/maps/xml.json"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = Tokenizer;

var decodeCodePoint=require("entities/lib/decode_codepoint.js"), 
entityMap=require("entities/maps/entities.json"), 
legacyMap=require("entities/maps/legacy.json"), 
xmlMap=require("entities/maps/xml.json"), 

i=0, 

TEXT=i++, 
BEFORE_TAG_NAME=i++, 
IN_TAG_NAME=i++, 
IN_SELF_CLOSING_TAG=i++, 
BEFORE_CLOSING_TAG_NAME=i++, 
IN_CLOSING_TAG_NAME=i++, 
AFTER_CLOSING_TAG_NAME=i++, 


BEFORE_ATTRIBUTE_NAME=i++, 
IN_ATTRIBUTE_NAME=i++, 
AFTER_ATTRIBUTE_NAME=i++, 
BEFORE_ATTRIBUTE_VALUE=i++, 
IN_ATTRIBUTE_VALUE_DQ=i++, 
IN_ATTRIBUTE_VALUE_SQ=i++, 
IN_ATTRIBUTE_VALUE_NQ=i++, 


BEFORE_DECLARATION=i++, 
IN_DECLARATION=i++, 


IN_PROCESSING_INSTRUCTION=i++, 


BEFORE_COMMENT=i++, 
IN_COMMENT=i++, 
AFTER_COMMENT_1=i++, 
AFTER_COMMENT_2=i++, 


BEFORE_CDATA_1=i++, 
BEFORE_CDATA_2=i++, 
BEFORE_CDATA_3=i++, 
BEFORE_CDATA_4=i++, 
BEFORE_CDATA_5=i++, 
BEFORE_CDATA_6=i++, 
IN_CDATA=i++, 
AFTER_CDATA_1=i++, 
AFTER_CDATA_2=i++, 


BEFORE_SPECIAL=i++, 
BEFORE_SPECIAL_END=i++, 

BEFORE_SCRIPT_1=i++, 
BEFORE_SCRIPT_2=i++, 
BEFORE_SCRIPT_3=i++, 
BEFORE_SCRIPT_4=i++, 
BEFORE_SCRIPT_5=i++, 
AFTER_SCRIPT_1=i++, 
AFTER_SCRIPT_2=i++, 
AFTER_SCRIPT_3=i++, 
AFTER_SCRIPT_4=i++, 
AFTER_SCRIPT_5=i++, 

BEFORE_STYLE_1=i++, 
BEFORE_STYLE_2=i++, 
BEFORE_STYLE_3=i++, 
BEFORE_STYLE_4=i++, 
AFTER_STYLE_1=i++, 
AFTER_STYLE_2=i++, 
AFTER_STYLE_3=i++, 
AFTER_STYLE_4=i++, 

BEFORE_ENTITY=i++, 
BEFORE_NUMERIC_ENTITY=i++, 
IN_NAMED_ENTITY=i++, 
IN_NUMERIC_ENTITY=i++, 
IN_HEX_ENTITY=i++, 

j=0, 

SPECIAL_NONE=j++, 
SPECIAL_SCRIPT=j++, 
SPECIAL_STYLE=j++;

function whitespace(c){
return c === " " || c === "\n" || c === "\t" || c === "\f" || c === "\r";}


function characterState(char, SUCCESS){
return function(c){
if(c === char)this._state = SUCCESS;};}



function ifElseState(upper, SUCCESS, FAILURE){
var lower=upper.toLowerCase();

if(upper === lower){
return function(c){
if(c === lower){
this._state = SUCCESS;}else 
{
this._state = FAILURE;
this._index--;}};}else 


{
return function(c){
if(c === lower || c === upper){
this._state = SUCCESS;}else 
{
this._state = FAILURE;
this._index--;}};}}





function consumeSpecialNameChar(upper, NEXT_STATE){
var lower=upper.toLowerCase();

return function(c){
if(c === lower || c === upper){
this._state = NEXT_STATE;}else 
{
this._state = IN_TAG_NAME;
this._index--;}};}




function Tokenizer(options, cbs){
this._state = TEXT;
this._buffer = "";
this._sectionStart = 0;
this._index = 0;
this._baseState = TEXT;
this._special = SPECIAL_NONE;
this._cbs = cbs;
this._running = true;
this._ended = false;
this._xmlMode = !!(options && options.xmlMode);
this._decodeEntities = !!(options && options.decodeEntities);}


Tokenizer.prototype._stateText = function(c){
if(c === "<"){
if(this._index > this._sectionStart){
this._cbs.ontext(this._getSection());}

this._state = BEFORE_TAG_NAME;
this._sectionStart = this._index;}else 
if(this._decodeEntities && this._special === SPECIAL_NONE && c === "&"){
if(this._index > this._sectionStart){
this._cbs.ontext(this._getSection());}

this._baseState = TEXT;
this._state = BEFORE_ENTITY;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateBeforeTagName = function(c){
if(c === "/"){
this._state = BEFORE_CLOSING_TAG_NAME;}else 
if(c === ">" || this._special !== SPECIAL_NONE || whitespace(c)){
this._state = TEXT;}else 
if(c === "!"){
this._state = BEFORE_DECLARATION;
this._sectionStart = this._index + 1;}else 
if(c === "?"){
this._state = IN_PROCESSING_INSTRUCTION;
this._sectionStart = this._index + 1;}else 
if(c === "<"){
this._cbs.ontext(this._getSection());
this._sectionStart = this._index;}else 
{
this._state = !this._xmlMode && (c === "s" || c === "S")?
BEFORE_SPECIAL:IN_TAG_NAME;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateInTagName = function(c){
if(c === "/" || c === ">" || whitespace(c)){
this._emitToken("onopentagname");
this._state = BEFORE_ATTRIBUTE_NAME;
this._index--;}};



Tokenizer.prototype._stateBeforeCloseingTagName = function(c){
if(whitespace(c));else 
if(c === ">"){
this._state = TEXT;}else 
if(this._special !== SPECIAL_NONE){
if(c === "s" || c === "S"){
this._state = BEFORE_SPECIAL_END;}else 
{
this._state = TEXT;
this._index--;}}else 

{
this._state = IN_CLOSING_TAG_NAME;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateInCloseingTagName = function(c){
if(c === ">" || whitespace(c)){
this._emitToken("onclosetag");
this._state = AFTER_CLOSING_TAG_NAME;
this._index--;}};



Tokenizer.prototype._stateAfterCloseingTagName = function(c){

if(c === ">"){
this._state = TEXT;
this._sectionStart = this._index + 1;}};



Tokenizer.prototype._stateBeforeAttributeName = function(c){
if(c === ">"){
this._cbs.onopentagend();
this._state = TEXT;
this._sectionStart = this._index + 1;}else 
if(c === "/"){
this._state = IN_SELF_CLOSING_TAG;}else 
if(!whitespace(c)){
this._state = IN_ATTRIBUTE_NAME;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateInSelfClosingTag = function(c){
if(c === ">"){
this._cbs.onselfclosingtag();
this._state = TEXT;
this._sectionStart = this._index + 1;}else 
if(!whitespace(c)){
this._state = BEFORE_ATTRIBUTE_NAME;
this._index--;}};



Tokenizer.prototype._stateInAttributeName = function(c){
if(c === "=" || c === "/" || c === ">" || whitespace(c)){
this._cbs.onattribname(this._getSection());
this._sectionStart = -1;
this._state = AFTER_ATTRIBUTE_NAME;
this._index--;}};



Tokenizer.prototype._stateAfterAttributeName = function(c){
if(c === "="){
this._state = BEFORE_ATTRIBUTE_VALUE;}else 
if(c === "/" || c === ">"){
this._cbs.onattribend();
this._state = BEFORE_ATTRIBUTE_NAME;
this._index--;}else 
if(!whitespace(c)){
this._cbs.onattribend();
this._state = IN_ATTRIBUTE_NAME;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateBeforeAttributeValue = function(c){
if(c === "\""){
this._state = IN_ATTRIBUTE_VALUE_DQ;
this._sectionStart = this._index + 1;}else 
if(c === "'"){
this._state = IN_ATTRIBUTE_VALUE_SQ;
this._sectionStart = this._index + 1;}else 
if(!whitespace(c)){
this._state = IN_ATTRIBUTE_VALUE_NQ;
this._sectionStart = this._index;
this._index--;}};



Tokenizer.prototype._stateInAttributeValueDoubleQuotes = function(c){
if(c === "\""){
this._emitToken("onattribdata");
this._cbs.onattribend();
this._state = BEFORE_ATTRIBUTE_NAME;}else 
if(this._decodeEntities && c === "&"){
this._emitToken("onattribdata");
this._baseState = this._state;
this._state = BEFORE_ENTITY;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateInAttributeValueSingleQuotes = function(c){
if(c === "'"){
this._emitToken("onattribdata");
this._cbs.onattribend();
this._state = BEFORE_ATTRIBUTE_NAME;}else 
if(this._decodeEntities && c === "&"){
this._emitToken("onattribdata");
this._baseState = this._state;
this._state = BEFORE_ENTITY;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateInAttributeValueNoQuotes = function(c){
if(whitespace(c) || c === ">"){
this._emitToken("onattribdata");
this._cbs.onattribend();
this._state = BEFORE_ATTRIBUTE_NAME;
this._index--;}else 
if(this._decodeEntities && c === "&"){
this._emitToken("onattribdata");
this._baseState = this._state;
this._state = BEFORE_ENTITY;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateBeforeDeclaration = function(c){
this._state = c === "["?BEFORE_CDATA_1:
c === "-"?BEFORE_COMMENT:
IN_DECLARATION;};


Tokenizer.prototype._stateInDeclaration = function(c){
if(c === ">"){
this._cbs.ondeclaration(this._getSection());
this._state = TEXT;
this._sectionStart = this._index + 1;}};



Tokenizer.prototype._stateInProcessingInstruction = function(c){
if(c === ">"){
this._cbs.onprocessinginstruction(this._getSection());
this._state = TEXT;
this._sectionStart = this._index + 1;}};



Tokenizer.prototype._stateBeforeComment = function(c){
if(c === "-"){
this._state = IN_COMMENT;
this._sectionStart = this._index + 1;}else 
{
this._state = IN_DECLARATION;}};



Tokenizer.prototype._stateInComment = function(c){
if(c === "-")this._state = AFTER_COMMENT_1;};


Tokenizer.prototype._stateAfterComment1 = function(c){
if(c === "-"){
this._state = AFTER_COMMENT_2;}else 
{
this._state = IN_COMMENT;}};



Tokenizer.prototype._stateAfterComment2 = function(c){
if(c === ">"){

this._cbs.oncomment(this._buffer.substring(this._sectionStart, this._index - 2));
this._state = TEXT;
this._sectionStart = this._index + 1;}else 
if(c !== "-"){
this._state = IN_COMMENT;}};




Tokenizer.prototype._stateBeforeCdata1 = ifElseState("C", BEFORE_CDATA_2, IN_DECLARATION);
Tokenizer.prototype._stateBeforeCdata2 = ifElseState("D", BEFORE_CDATA_3, IN_DECLARATION);
Tokenizer.prototype._stateBeforeCdata3 = ifElseState("A", BEFORE_CDATA_4, IN_DECLARATION);
Tokenizer.prototype._stateBeforeCdata4 = ifElseState("T", BEFORE_CDATA_5, IN_DECLARATION);
Tokenizer.prototype._stateBeforeCdata5 = ifElseState("A", BEFORE_CDATA_6, IN_DECLARATION);

Tokenizer.prototype._stateBeforeCdata6 = function(c){
if(c === "["){
this._state = IN_CDATA;
this._sectionStart = this._index + 1;}else 
{
this._state = IN_DECLARATION;
this._index--;}};



Tokenizer.prototype._stateInCdata = function(c){
if(c === "]")this._state = AFTER_CDATA_1;};


Tokenizer.prototype._stateAfterCdata1 = characterState("]", AFTER_CDATA_2);

Tokenizer.prototype._stateAfterCdata2 = function(c){
if(c === ">"){

this._cbs.oncdata(this._buffer.substring(this._sectionStart, this._index - 2));
this._state = TEXT;
this._sectionStart = this._index + 1;}else 
if(c !== "]"){
this._state = IN_CDATA;}};




Tokenizer.prototype._stateBeforeSpecial = function(c){
if(c === "c" || c === "C"){
this._state = BEFORE_SCRIPT_1;}else 
if(c === "t" || c === "T"){
this._state = BEFORE_STYLE_1;}else 
{
this._state = IN_TAG_NAME;
this._index--;}};



Tokenizer.prototype._stateBeforeSpecialEnd = function(c){
if(this._special === SPECIAL_SCRIPT && (c === "c" || c === "C")){
this._state = AFTER_SCRIPT_1;}else 
if(this._special === SPECIAL_STYLE && (c === "t" || c === "T")){
this._state = AFTER_STYLE_1;}else 

this._state = TEXT;};


Tokenizer.prototype._stateBeforeScript1 = consumeSpecialNameChar("R", BEFORE_SCRIPT_2);
Tokenizer.prototype._stateBeforeScript2 = consumeSpecialNameChar("I", BEFORE_SCRIPT_3);
Tokenizer.prototype._stateBeforeScript3 = consumeSpecialNameChar("P", BEFORE_SCRIPT_4);
Tokenizer.prototype._stateBeforeScript4 = consumeSpecialNameChar("T", BEFORE_SCRIPT_5);

Tokenizer.prototype._stateBeforeScript5 = function(c){
if(c === "/" || c === ">" || whitespace(c)){
this._special = SPECIAL_SCRIPT;}

this._state = IN_TAG_NAME;
this._index--;};


Tokenizer.prototype._stateAfterScript1 = ifElseState("R", AFTER_SCRIPT_2, TEXT);
Tokenizer.prototype._stateAfterScript2 = ifElseState("I", AFTER_SCRIPT_3, TEXT);
Tokenizer.prototype._stateAfterScript3 = ifElseState("P", AFTER_SCRIPT_4, TEXT);
Tokenizer.prototype._stateAfterScript4 = ifElseState("T", AFTER_SCRIPT_5, TEXT);

Tokenizer.prototype._stateAfterScript5 = function(c){
if(c === ">" || whitespace(c)){
this._special = SPECIAL_NONE;
this._state = IN_CLOSING_TAG_NAME;
this._sectionStart = this._index - 6;
this._index--;}else 

this._state = TEXT;};


Tokenizer.prototype._stateBeforeStyle1 = consumeSpecialNameChar("Y", BEFORE_STYLE_2);
Tokenizer.prototype._stateBeforeStyle2 = consumeSpecialNameChar("L", BEFORE_STYLE_3);
Tokenizer.prototype._stateBeforeStyle3 = consumeSpecialNameChar("E", BEFORE_STYLE_4);

Tokenizer.prototype._stateBeforeStyle4 = function(c){
if(c === "/" || c === ">" || whitespace(c)){
this._special = SPECIAL_STYLE;}

this._state = IN_TAG_NAME;
this._index--;};


Tokenizer.prototype._stateAfterStyle1 = ifElseState("Y", AFTER_STYLE_2, TEXT);
Tokenizer.prototype._stateAfterStyle2 = ifElseState("L", AFTER_STYLE_3, TEXT);
Tokenizer.prototype._stateAfterStyle3 = ifElseState("E", AFTER_STYLE_4, TEXT);

Tokenizer.prototype._stateAfterStyle4 = function(c){
if(c === ">" || whitespace(c)){
this._special = SPECIAL_NONE;
this._state = IN_CLOSING_TAG_NAME;
this._sectionStart = this._index - 5;
this._index--;}else 

this._state = TEXT;};


Tokenizer.prototype._stateBeforeEntity = ifElseState("#", BEFORE_NUMERIC_ENTITY, IN_NAMED_ENTITY);
Tokenizer.prototype._stateBeforeNumericEntity = ifElseState("X", IN_HEX_ENTITY, IN_NUMERIC_ENTITY);


Tokenizer.prototype._parseNamedEntityStrict = function(){

if(this._sectionStart + 1 < this._index){
var entity=this._buffer.substring(this._sectionStart + 1, this._index), 
map=this._xmlMode?xmlMap:entityMap;

if(map.hasOwnProperty(entity)){
this._emitPartial(map[entity]);
this._sectionStart = this._index + 1;}}};






Tokenizer.prototype._parseLegacyEntity = function(){
var start=this._sectionStart + 1, 
limit=this._index - start;

if(limit > 6)limit = 6;

while(limit >= 2) {
var entity=this._buffer.substr(start, limit);

if(legacyMap.hasOwnProperty(entity)){
this._emitPartial(legacyMap[entity]);
this._sectionStart += limit + 1;
return;}else 
{
limit--;}}};




Tokenizer.prototype._stateInNamedEntity = function(c){
if(c === ";"){
this._parseNamedEntityStrict();
if(this._sectionStart + 1 < this._index && !this._xmlMode){
this._parseLegacyEntity();}

this._state = this._baseState;}else 
if((c < "a" || c > "z") && (c < "A" || c > "Z") && (c < "0" || c > "9")){
if(this._xmlMode);else 
if(this._sectionStart + 1 === this._index);else 
if(this._baseState !== TEXT){
if(c !== "="){
this._parseNamedEntityStrict();}}else 

{
this._parseLegacyEntity();}


this._state = this._baseState;
this._index--;}};



Tokenizer.prototype._decodeNumericEntity = function(offset, base){
var sectionStart=this._sectionStart + offset;

if(sectionStart !== this._index){

var entity=this._buffer.substring(sectionStart, this._index);
var parsed=parseInt(entity, base);

this._emitPartial(decodeCodePoint(parsed));
this._sectionStart = this._index;}else 
{
this._sectionStart--;}


this._state = this._baseState;};


Tokenizer.prototype._stateInNumericEntity = function(c){
if(c === ";"){
this._decodeNumericEntity(2, 10);
this._sectionStart++;}else 
if(c < "0" || c > "9"){
if(!this._xmlMode){
this._decodeNumericEntity(2, 10);}else 
{
this._state = this._baseState;}

this._index--;}};



Tokenizer.prototype._stateInHexEntity = function(c){
if(c === ";"){
this._decodeNumericEntity(3, 16);
this._sectionStart++;}else 
if((c < "a" || c > "f") && (c < "A" || c > "F") && (c < "0" || c > "9")){
if(!this._xmlMode){
this._decodeNumericEntity(3, 16);}else 
{
this._state = this._baseState;}

this._index--;}};



Tokenizer.prototype._cleanup = function(){
if(this._sectionStart < 0){
this._buffer = "";
this._index = 0;}else 
if(this._running){
if(this._state === TEXT){
if(this._sectionStart !== this._index){
this._cbs.ontext(this._buffer.substr(this._sectionStart));}

this._buffer = "";
this._index = 0;}else 
if(this._sectionStart === this._index){

this._buffer = "";
this._index = 0;}else 
{

this._buffer = this._buffer.substr(this._sectionStart);
this._index -= this._sectionStart;}


this._sectionStart = 0;}};




Tokenizer.prototype.write = function(chunk){
if(this._ended)this._cbs.onerror(Error(".write() after done!"));

this._buffer += chunk;
this._parse();};


Tokenizer.prototype._parse = function(){
while(this._index < this._buffer.length && this._running) {
var c=this._buffer.charAt(this._index);
if(this._state === TEXT){
this._stateText(c);}else 
if(this._state === BEFORE_TAG_NAME){
this._stateBeforeTagName(c);}else 
if(this._state === IN_TAG_NAME){
this._stateInTagName(c);}else 
if(this._state === BEFORE_CLOSING_TAG_NAME){
this._stateBeforeCloseingTagName(c);}else 
if(this._state === IN_CLOSING_TAG_NAME){
this._stateInCloseingTagName(c);}else 
if(this._state === AFTER_CLOSING_TAG_NAME){
this._stateAfterCloseingTagName(c);}else 
if(this._state === IN_SELF_CLOSING_TAG){
this._stateInSelfClosingTag(c);}else 





if(this._state === BEFORE_ATTRIBUTE_NAME){
this._stateBeforeAttributeName(c);}else 
if(this._state === IN_ATTRIBUTE_NAME){
this._stateInAttributeName(c);}else 
if(this._state === AFTER_ATTRIBUTE_NAME){
this._stateAfterAttributeName(c);}else 
if(this._state === BEFORE_ATTRIBUTE_VALUE){
this._stateBeforeAttributeValue(c);}else 
if(this._state === IN_ATTRIBUTE_VALUE_DQ){
this._stateInAttributeValueDoubleQuotes(c);}else 
if(this._state === IN_ATTRIBUTE_VALUE_SQ){
this._stateInAttributeValueSingleQuotes(c);}else 
if(this._state === IN_ATTRIBUTE_VALUE_NQ){
this._stateInAttributeValueNoQuotes(c);}else 





if(this._state === BEFORE_DECLARATION){
this._stateBeforeDeclaration(c);}else 
if(this._state === IN_DECLARATION){
this._stateInDeclaration(c);}else 





if(this._state === IN_PROCESSING_INSTRUCTION){
this._stateInProcessingInstruction(c);}else 





if(this._state === BEFORE_COMMENT){
this._stateBeforeComment(c);}else 
if(this._state === IN_COMMENT){
this._stateInComment(c);}else 
if(this._state === AFTER_COMMENT_1){
this._stateAfterComment1(c);}else 
if(this._state === AFTER_COMMENT_2){
this._stateAfterComment2(c);}else 





if(this._state === BEFORE_CDATA_1){
this._stateBeforeCdata1(c);}else 
if(this._state === BEFORE_CDATA_2){
this._stateBeforeCdata2(c);}else 
if(this._state === BEFORE_CDATA_3){
this._stateBeforeCdata3(c);}else 
if(this._state === BEFORE_CDATA_4){
this._stateBeforeCdata4(c);}else 
if(this._state === BEFORE_CDATA_5){
this._stateBeforeCdata5(c);}else 
if(this._state === BEFORE_CDATA_6){
this._stateBeforeCdata6(c);}else 
if(this._state === IN_CDATA){
this._stateInCdata(c);}else 
if(this._state === AFTER_CDATA_1){
this._stateAfterCdata1(c);}else 
if(this._state === AFTER_CDATA_2){
this._stateAfterCdata2(c);}else 





if(this._state === BEFORE_SPECIAL){
this._stateBeforeSpecial(c);}else 
if(this._state === BEFORE_SPECIAL_END){
this._stateBeforeSpecialEnd(c);}else 





if(this._state === BEFORE_SCRIPT_1){
this._stateBeforeScript1(c);}else 
if(this._state === BEFORE_SCRIPT_2){
this._stateBeforeScript2(c);}else 
if(this._state === BEFORE_SCRIPT_3){
this._stateBeforeScript3(c);}else 
if(this._state === BEFORE_SCRIPT_4){
this._stateBeforeScript4(c);}else 
if(this._state === BEFORE_SCRIPT_5){
this._stateBeforeScript5(c);}else 


if(this._state === AFTER_SCRIPT_1){
this._stateAfterScript1(c);}else 
if(this._state === AFTER_SCRIPT_2){
this._stateAfterScript2(c);}else 
if(this._state === AFTER_SCRIPT_3){
this._stateAfterScript3(c);}else 
if(this._state === AFTER_SCRIPT_4){
this._stateAfterScript4(c);}else 
if(this._state === AFTER_SCRIPT_5){
this._stateAfterScript5(c);}else 





if(this._state === BEFORE_STYLE_1){
this._stateBeforeStyle1(c);}else 
if(this._state === BEFORE_STYLE_2){
this._stateBeforeStyle2(c);}else 
if(this._state === BEFORE_STYLE_3){
this._stateBeforeStyle3(c);}else 
if(this._state === BEFORE_STYLE_4){
this._stateBeforeStyle4(c);}else 


if(this._state === AFTER_STYLE_1){
this._stateAfterStyle1(c);}else 
if(this._state === AFTER_STYLE_2){
this._stateAfterStyle2(c);}else 
if(this._state === AFTER_STYLE_3){
this._stateAfterStyle3(c);}else 
if(this._state === AFTER_STYLE_4){
this._stateAfterStyle4(c);}else 





if(this._state === BEFORE_ENTITY){
this._stateBeforeEntity(c);}else 
if(this._state === BEFORE_NUMERIC_ENTITY){
this._stateBeforeNumericEntity(c);}else 
if(this._state === IN_NAMED_ENTITY){
this._stateInNamedEntity(c);}else 
if(this._state === IN_NUMERIC_ENTITY){
this._stateInNumericEntity(c);}else 
if(this._state === IN_HEX_ENTITY){
this._stateInHexEntity(c);}else 


{
this._cbs.onerror(Error("unknown _state"), this._state);}


this._index++;}


this._cleanup();};


Tokenizer.prototype.pause = function(){
this._running = false;};

Tokenizer.prototype.resume = function(){
this._running = true;

if(this._index < this._buffer.length){
this._parse();}

if(this._ended){
this._finish();}};



Tokenizer.prototype.end = function(chunk){
if(this._ended)this._cbs.onerror(Error(".end() after done!"));
if(chunk)this.write(chunk);

this._ended = true;

if(this._running)this._finish();};


Tokenizer.prototype._finish = function(){

if(this._sectionStart < this._index){
this._handleTrailingData();}


this._cbs.onend();};


Tokenizer.prototype._handleTrailingData = function(){
var data=this._buffer.substr(this._sectionStart);

if(this._state === IN_CDATA || this._state === AFTER_CDATA_1 || this._state === AFTER_CDATA_2){
this._cbs.oncdata(data);}else 
if(this._state === IN_COMMENT || this._state === AFTER_COMMENT_1 || this._state === AFTER_COMMENT_2){
this._cbs.oncomment(data);}else 
if(this._state === IN_NAMED_ENTITY && !this._xmlMode){
this._parseLegacyEntity();
if(this._sectionStart < this._index){
this._state = this._baseState;
this._handleTrailingData();}}else 

if(this._state === IN_NUMERIC_ENTITY && !this._xmlMode){
this._decodeNumericEntity(2, 10);
if(this._sectionStart < this._index){
this._state = this._baseState;
this._handleTrailingData();}}else 

if(this._state === IN_HEX_ENTITY && !this._xmlMode){
this._decodeNumericEntity(3, 16);
if(this._sectionStart < this._index){
this._state = this._baseState;
this._handleTrailingData();}}else 

if(
this._state !== IN_TAG_NAME && 
this._state !== BEFORE_ATTRIBUTE_NAME && 
this._state !== BEFORE_ATTRIBUTE_VALUE && 
this._state !== AFTER_ATTRIBUTE_NAME && 
this._state !== IN_ATTRIBUTE_NAME && 
this._state !== IN_ATTRIBUTE_VALUE_SQ && 
this._state !== IN_ATTRIBUTE_VALUE_DQ && 
this._state !== IN_ATTRIBUTE_VALUE_NQ && 
this._state !== IN_CLOSING_TAG_NAME)
{
this._cbs.ontext(data);}};





Tokenizer.prototype.reset = function(){
Tokenizer.call(this, {xmlMode:this._xmlMode, decodeEntities:this._decodeEntities}, this._cbs);};


Tokenizer.prototype._getSection = function(){
return this._buffer.substring(this._sectionStart, this._index);};


Tokenizer.prototype._emitToken = function(name){
this._cbs[name](this._getSection());
this._sectionStart = -1;};


Tokenizer.prototype._emitPartial = function(value){
if(this._baseState !== TEXT){
this._cbs.onattribdata(value);}else 
{
this._cbs.ontext(value);}};
});
__d('entities/lib/decode_codepoint.js',["entities/maps/decode.json"],function(global, require, requireDynamic, requireLazy, module, exports) {  var decodeMap=require("entities/maps/decode.json");

module.exports = decodeCodePoint;


function decodeCodePoint(codePoint){

if(codePoint >= 0xD800 && codePoint <= 0xDFFF || codePoint > 0x10FFFF){
return "�";}


if(codePoint in decodeMap){
codePoint = decodeMap[codePoint];}


var output="";

if(codePoint > 0xFFFF){
codePoint -= 0x10000;
output += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);
codePoint = 0xDC00 | codePoint & 0x3FF;}


output += String.fromCharCode(codePoint);
return output;}
});
__d('entities/maps/decode.json',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"0":65533,"128":8364,"130":8218,"131":402,"132":8222,"133":8230,"134":8224,"135":8225,"136":710,"137":8240,"138":352,"139":8249,"140":338,"142":381,"145":8216,"146":8217,"147":8220,"148":8221,"149":8226,"150":8211,"151":8212,"152":732,"153":8482,"154":353,"155":8250,"156":339,"158":382,"159":376};
});
__d('entities/maps/entities.json',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"Aacute":"\u00C1","aacute":"\u00E1","Abreve":"\u0102","abreve":"\u0103","ac":"\u223E","acd":"\u223F","acE":"\u223E\u0333","Acirc":"\u00C2","acirc":"\u00E2","acute":"\u00B4","Acy":"\u0410","acy":"\u0430","AElig":"\u00C6","aelig":"\u00E6","af":"\u2061","Afr":"\uD835\uDD04","afr":"\uD835\uDD1E","Agrave":"\u00C0","agrave":"\u00E0","alefsym":"\u2135","aleph":"\u2135","Alpha":"\u0391","alpha":"\u03B1","Amacr":"\u0100","amacr":"\u0101","amalg":"\u2A3F","amp":"&","AMP":"&","andand":"\u2A55","And":"\u2A53","and":"\u2227","andd":"\u2A5C","andslope":"\u2A58","andv":"\u2A5A","ang":"\u2220","ange":"\u29A4","angle":"\u2220","angmsdaa":"\u29A8","angmsdab":"\u29A9","angmsdac":"\u29AA","angmsdad":"\u29AB","angmsdae":"\u29AC","angmsdaf":"\u29AD","angmsdag":"\u29AE","angmsdah":"\u29AF","angmsd":"\u2221","angrt":"\u221F","angrtvb":"\u22BE","angrtvbd":"\u299D","angsph":"\u2222","angst":"\u00C5","angzarr":"\u237C","Aogon":"\u0104","aogon":"\u0105","Aopf":"\uD835\uDD38","aopf":"\uD835\uDD52","apacir":"\u2A6F","ap":"\u2248","apE":"\u2A70","ape":"\u224A","apid":"\u224B","apos":"'","ApplyFunction":"\u2061","approx":"\u2248","approxeq":"\u224A","Aring":"\u00C5","aring":"\u00E5","Ascr":"\uD835\uDC9C","ascr":"\uD835\uDCB6","Assign":"\u2254","ast":"*","asymp":"\u2248","asympeq":"\u224D","Atilde":"\u00C3","atilde":"\u00E3","Auml":"\u00C4","auml":"\u00E4","awconint":"\u2233","awint":"\u2A11","backcong":"\u224C","backepsilon":"\u03F6","backprime":"\u2035","backsim":"\u223D","backsimeq":"\u22CD","Backslash":"\u2216","Barv":"\u2AE7","barvee":"\u22BD","barwed":"\u2305","Barwed":"\u2306","barwedge":"\u2305","bbrk":"\u23B5","bbrktbrk":"\u23B6","bcong":"\u224C","Bcy":"\u0411","bcy":"\u0431","bdquo":"\u201E","becaus":"\u2235","because":"\u2235","Because":"\u2235","bemptyv":"\u29B0","bepsi":"\u03F6","bernou":"\u212C","Bernoullis":"\u212C","Beta":"\u0392","beta":"\u03B2","beth":"\u2136","between":"\u226C","Bfr":"\uD835\uDD05","bfr":"\uD835\uDD1F","bigcap":"\u22C2","bigcirc":"\u25EF","bigcup":"\u22C3","bigodot":"\u2A00","bigoplus":"\u2A01","bigotimes":"\u2A02","bigsqcup":"\u2A06","bigstar":"\u2605","bigtriangledown":"\u25BD","bigtriangleup":"\u25B3","biguplus":"\u2A04","bigvee":"\u22C1","bigwedge":"\u22C0","bkarow":"\u290D","blacklozenge":"\u29EB","blacksquare":"\u25AA","blacktriangle":"\u25B4","blacktriangledown":"\u25BE","blacktriangleleft":"\u25C2","blacktriangleright":"\u25B8","blank":"\u2423","blk12":"\u2592","blk14":"\u2591","blk34":"\u2593","block":"\u2588","bne":"=\u20E5","bnequiv":"\u2261\u20E5","bNot":"\u2AED","bnot":"\u2310","Bopf":"\uD835\uDD39","bopf":"\uD835\uDD53","bot":"\u22A5","bottom":"\u22A5","bowtie":"\u22C8","boxbox":"\u29C9","boxdl":"\u2510","boxdL":"\u2555","boxDl":"\u2556","boxDL":"\u2557","boxdr":"\u250C","boxdR":"\u2552","boxDr":"\u2553","boxDR":"\u2554","boxh":"\u2500","boxH":"\u2550","boxhd":"\u252C","boxHd":"\u2564","boxhD":"\u2565","boxHD":"\u2566","boxhu":"\u2534","boxHu":"\u2567","boxhU":"\u2568","boxHU":"\u2569","boxminus":"\u229F","boxplus":"\u229E","boxtimes":"\u22A0","boxul":"\u2518","boxuL":"\u255B","boxUl":"\u255C","boxUL":"\u255D","boxur":"\u2514","boxuR":"\u2558","boxUr":"\u2559","boxUR":"\u255A","boxv":"\u2502","boxV":"\u2551","boxvh":"\u253C","boxvH":"\u256A","boxVh":"\u256B","boxVH":"\u256C","boxvl":"\u2524","boxvL":"\u2561","boxVl":"\u2562","boxVL":"\u2563","boxvr":"\u251C","boxvR":"\u255E","boxVr":"\u255F","boxVR":"\u2560","bprime":"\u2035","breve":"\u02D8","Breve":"\u02D8","brvbar":"\u00A6","bscr":"\uD835\uDCB7","Bscr":"\u212C","bsemi":"\u204F","bsim":"\u223D","bsime":"\u22CD","bsolb":"\u29C5","bsol":"\\","bsolhsub":"\u27C8","bull":"\u2022","bullet":"\u2022","bump":"\u224E","bumpE":"\u2AAE","bumpe":"\u224F","Bumpeq":"\u224E","bumpeq":"\u224F","Cacute":"\u0106","cacute":"\u0107","capand":"\u2A44","capbrcup":"\u2A49","capcap":"\u2A4B","cap":"\u2229","Cap":"\u22D2","capcup":"\u2A47","capdot":"\u2A40","CapitalDifferentialD":"\u2145","caps":"\u2229\uFE00","caret":"\u2041","caron":"\u02C7","Cayleys":"\u212D","ccaps":"\u2A4D","Ccaron":"\u010C","ccaron":"\u010D","Ccedil":"\u00C7","ccedil":"\u00E7","Ccirc":"\u0108","ccirc":"\u0109","Cconint":"\u2230","ccups":"\u2A4C","ccupssm":"\u2A50","Cdot":"\u010A","cdot":"\u010B","cedil":"\u00B8","Cedilla":"\u00B8","cemptyv":"\u29B2","cent":"\u00A2","centerdot":"\u00B7","CenterDot":"\u00B7","cfr":"\uD835\uDD20","Cfr":"\u212D","CHcy":"\u0427","chcy":"\u0447","check":"\u2713","checkmark":"\u2713","Chi":"\u03A7","chi":"\u03C7","circ":"\u02C6","circeq":"\u2257","circlearrowleft":"\u21BA","circlearrowright":"\u21BB","circledast":"\u229B","circledcirc":"\u229A","circleddash":"\u229D","CircleDot":"\u2299","circledR":"\u00AE","circledS":"\u24C8","CircleMinus":"\u2296","CirclePlus":"\u2295","CircleTimes":"\u2297","cir":"\u25CB","cirE":"\u29C3","cire":"\u2257","cirfnint":"\u2A10","cirmid":"\u2AEF","cirscir":"\u29C2","ClockwiseContourIntegral":"\u2232","CloseCurlyDoubleQuote":"\u201D","CloseCurlyQuote":"\u2019","clubs":"\u2663","clubsuit":"\u2663","colon":":","Colon":"\u2237","Colone":"\u2A74","colone":"\u2254","coloneq":"\u2254","comma":",","commat":"@","comp":"\u2201","compfn":"\u2218","complement":"\u2201","complexes":"\u2102","cong":"\u2245","congdot":"\u2A6D","Congruent":"\u2261","conint":"\u222E","Conint":"\u222F","ContourIntegral":"\u222E","copf":"\uD835\uDD54","Copf":"\u2102","coprod":"\u2210","Coproduct":"\u2210","copy":"\u00A9","COPY":"\u00A9","copysr":"\u2117","CounterClockwiseContourIntegral":"\u2233","crarr":"\u21B5","cross":"\u2717","Cross":"\u2A2F","Cscr":"\uD835\uDC9E","cscr":"\uD835\uDCB8","csub":"\u2ACF","csube":"\u2AD1","csup":"\u2AD0","csupe":"\u2AD2","ctdot":"\u22EF","cudarrl":"\u2938","cudarrr":"\u2935","cuepr":"\u22DE","cuesc":"\u22DF","cularr":"\u21B6","cularrp":"\u293D","cupbrcap":"\u2A48","cupcap":"\u2A46","CupCap":"\u224D","cup":"\u222A","Cup":"\u22D3","cupcup":"\u2A4A","cupdot":"\u228D","cupor":"\u2A45","cups":"\u222A\uFE00","curarr":"\u21B7","curarrm":"\u293C","curlyeqprec":"\u22DE","curlyeqsucc":"\u22DF","curlyvee":"\u22CE","curlywedge":"\u22CF","curren":"\u00A4","curvearrowleft":"\u21B6","curvearrowright":"\u21B7","cuvee":"\u22CE","cuwed":"\u22CF","cwconint":"\u2232","cwint":"\u2231","cylcty":"\u232D","dagger":"\u2020","Dagger":"\u2021","daleth":"\u2138","darr":"\u2193","Darr":"\u21A1","dArr":"\u21D3","dash":"\u2010","Dashv":"\u2AE4","dashv":"\u22A3","dbkarow":"\u290F","dblac":"\u02DD","Dcaron":"\u010E","dcaron":"\u010F","Dcy":"\u0414","dcy":"\u0434","ddagger":"\u2021","ddarr":"\u21CA","DD":"\u2145","dd":"\u2146","DDotrahd":"\u2911","ddotseq":"\u2A77","deg":"\u00B0","Del":"\u2207","Delta":"\u0394","delta":"\u03B4","demptyv":"\u29B1","dfisht":"\u297F","Dfr":"\uD835\uDD07","dfr":"\uD835\uDD21","dHar":"\u2965","dharl":"\u21C3","dharr":"\u21C2","DiacriticalAcute":"\u00B4","DiacriticalDot":"\u02D9","DiacriticalDoubleAcute":"\u02DD","DiacriticalGrave":"`","DiacriticalTilde":"\u02DC","diam":"\u22C4","diamond":"\u22C4","Diamond":"\u22C4","diamondsuit":"\u2666","diams":"\u2666","die":"\u00A8","DifferentialD":"\u2146","digamma":"\u03DD","disin":"\u22F2","div":"\u00F7","divide":"\u00F7","divideontimes":"\u22C7","divonx":"\u22C7","DJcy":"\u0402","djcy":"\u0452","dlcorn":"\u231E","dlcrop":"\u230D","dollar":"$","Dopf":"\uD835\uDD3B","dopf":"\uD835\uDD55","Dot":"\u00A8","dot":"\u02D9","DotDot":"\u20DC","doteq":"\u2250","doteqdot":"\u2251","DotEqual":"\u2250","dotminus":"\u2238","dotplus":"\u2214","dotsquare":"\u22A1","doublebarwedge":"\u2306","DoubleContourIntegral":"\u222F","DoubleDot":"\u00A8","DoubleDownArrow":"\u21D3","DoubleLeftArrow":"\u21D0","DoubleLeftRightArrow":"\u21D4","DoubleLeftTee":"\u2AE4","DoubleLongLeftArrow":"\u27F8","DoubleLongLeftRightArrow":"\u27FA","DoubleLongRightArrow":"\u27F9","DoubleRightArrow":"\u21D2","DoubleRightTee":"\u22A8","DoubleUpArrow":"\u21D1","DoubleUpDownArrow":"\u21D5","DoubleVerticalBar":"\u2225","DownArrowBar":"\u2913","downarrow":"\u2193","DownArrow":"\u2193","Downarrow":"\u21D3","DownArrowUpArrow":"\u21F5","DownBreve":"\u0311","downdownarrows":"\u21CA","downharpoonleft":"\u21C3","downharpoonright":"\u21C2","DownLeftRightVector":"\u2950","DownLeftTeeVector":"\u295E","DownLeftVectorBar":"\u2956","DownLeftVector":"\u21BD","DownRightTeeVector":"\u295F","DownRightVectorBar":"\u2957","DownRightVector":"\u21C1","DownTeeArrow":"\u21A7","DownTee":"\u22A4","drbkarow":"\u2910","drcorn":"\u231F","drcrop":"\u230C","Dscr":"\uD835\uDC9F","dscr":"\uD835\uDCB9","DScy":"\u0405","dscy":"\u0455","dsol":"\u29F6","Dstrok":"\u0110","dstrok":"\u0111","dtdot":"\u22F1","dtri":"\u25BF","dtrif":"\u25BE","duarr":"\u21F5","duhar":"\u296F","dwangle":"\u29A6","DZcy":"\u040F","dzcy":"\u045F","dzigrarr":"\u27FF","Eacute":"\u00C9","eacute":"\u00E9","easter":"\u2A6E","Ecaron":"\u011A","ecaron":"\u011B","Ecirc":"\u00CA","ecirc":"\u00EA","ecir":"\u2256","ecolon":"\u2255","Ecy":"\u042D","ecy":"\u044D","eDDot":"\u2A77","Edot":"\u0116","edot":"\u0117","eDot":"\u2251","ee":"\u2147","efDot":"\u2252","Efr":"\uD835\uDD08","efr":"\uD835\uDD22","eg":"\u2A9A","Egrave":"\u00C8","egrave":"\u00E8","egs":"\u2A96","egsdot":"\u2A98","el":"\u2A99","Element":"\u2208","elinters":"\u23E7","ell":"\u2113","els":"\u2A95","elsdot":"\u2A97","Emacr":"\u0112","emacr":"\u0113","empty":"\u2205","emptyset":"\u2205","EmptySmallSquare":"\u25FB","emptyv":"\u2205","EmptyVerySmallSquare":"\u25AB","emsp13":"\u2004","emsp14":"\u2005","emsp":"\u2003","ENG":"\u014A","eng":"\u014B","ensp":"\u2002","Eogon":"\u0118","eogon":"\u0119","Eopf":"\uD835\uDD3C","eopf":"\uD835\uDD56","epar":"\u22D5","eparsl":"\u29E3","eplus":"\u2A71","epsi":"\u03B5","Epsilon":"\u0395","epsilon":"\u03B5","epsiv":"\u03F5","eqcirc":"\u2256","eqcolon":"\u2255","eqsim":"\u2242","eqslantgtr":"\u2A96","eqslantless":"\u2A95","Equal":"\u2A75","equals":"=","EqualTilde":"\u2242","equest":"\u225F","Equilibrium":"\u21CC","equiv":"\u2261","equivDD":"\u2A78","eqvparsl":"\u29E5","erarr":"\u2971","erDot":"\u2253","escr":"\u212F","Escr":"\u2130","esdot":"\u2250","Esim":"\u2A73","esim":"\u2242","Eta":"\u0397","eta":"\u03B7","ETH":"\u00D0","eth":"\u00F0","Euml":"\u00CB","euml":"\u00EB","euro":"\u20AC","excl":"!","exist":"\u2203","Exists":"\u2203","expectation":"\u2130","exponentiale":"\u2147","ExponentialE":"\u2147","fallingdotseq":"\u2252","Fcy":"\u0424","fcy":"\u0444","female":"\u2640","ffilig":"\uFB03","fflig":"\uFB00","ffllig":"\uFB04","Ffr":"\uD835\uDD09","ffr":"\uD835\uDD23","filig":"\uFB01","FilledSmallSquare":"\u25FC","FilledVerySmallSquare":"\u25AA","fjlig":"fj","flat":"\u266D","fllig":"\uFB02","fltns":"\u25B1","fnof":"\u0192","Fopf":"\uD835\uDD3D","fopf":"\uD835\uDD57","forall":"\u2200","ForAll":"\u2200","fork":"\u22D4","forkv":"\u2AD9","Fouriertrf":"\u2131","fpartint":"\u2A0D","frac12":"\u00BD","frac13":"\u2153","frac14":"\u00BC","frac15":"\u2155","frac16":"\u2159","frac18":"\u215B","frac23":"\u2154","frac25":"\u2156","frac34":"\u00BE","frac35":"\u2157","frac38":"\u215C","frac45":"\u2158","frac56":"\u215A","frac58":"\u215D","frac78":"\u215E","frasl":"\u2044","frown":"\u2322","fscr":"\uD835\uDCBB","Fscr":"\u2131","gacute":"\u01F5","Gamma":"\u0393","gamma":"\u03B3","Gammad":"\u03DC","gammad":"\u03DD","gap":"\u2A86","Gbreve":"\u011E","gbreve":"\u011F","Gcedil":"\u0122","Gcirc":"\u011C","gcirc":"\u011D","Gcy":"\u0413","gcy":"\u0433","Gdot":"\u0120","gdot":"\u0121","ge":"\u2265","gE":"\u2267","gEl":"\u2A8C","gel":"\u22DB","geq":"\u2265","geqq":"\u2267","geqslant":"\u2A7E","gescc":"\u2AA9","ges":"\u2A7E","gesdot":"\u2A80","gesdoto":"\u2A82","gesdotol":"\u2A84","gesl":"\u22DB\uFE00","gesles":"\u2A94","Gfr":"\uD835\uDD0A","gfr":"\uD835\uDD24","gg":"\u226B","Gg":"\u22D9","ggg":"\u22D9","gimel":"\u2137","GJcy":"\u0403","gjcy":"\u0453","gla":"\u2AA5","gl":"\u2277","glE":"\u2A92","glj":"\u2AA4","gnap":"\u2A8A","gnapprox":"\u2A8A","gne":"\u2A88","gnE":"\u2269","gneq":"\u2A88","gneqq":"\u2269","gnsim":"\u22E7","Gopf":"\uD835\uDD3E","gopf":"\uD835\uDD58","grave":"`","GreaterEqual":"\u2265","GreaterEqualLess":"\u22DB","GreaterFullEqual":"\u2267","GreaterGreater":"\u2AA2","GreaterLess":"\u2277","GreaterSlantEqual":"\u2A7E","GreaterTilde":"\u2273","Gscr":"\uD835\uDCA2","gscr":"\u210A","gsim":"\u2273","gsime":"\u2A8E","gsiml":"\u2A90","gtcc":"\u2AA7","gtcir":"\u2A7A","gt":">","GT":">","Gt":"\u226B","gtdot":"\u22D7","gtlPar":"\u2995","gtquest":"\u2A7C","gtrapprox":"\u2A86","gtrarr":"\u2978","gtrdot":"\u22D7","gtreqless":"\u22DB","gtreqqless":"\u2A8C","gtrless":"\u2277","gtrsim":"\u2273","gvertneqq":"\u2269\uFE00","gvnE":"\u2269\uFE00","Hacek":"\u02C7","hairsp":"\u200A","half":"\u00BD","hamilt":"\u210B","HARDcy":"\u042A","hardcy":"\u044A","harrcir":"\u2948","harr":"\u2194","hArr":"\u21D4","harrw":"\u21AD","Hat":"^","hbar":"\u210F","Hcirc":"\u0124","hcirc":"\u0125","hearts":"\u2665","heartsuit":"\u2665","hellip":"\u2026","hercon":"\u22B9","hfr":"\uD835\uDD25","Hfr":"\u210C","HilbertSpace":"\u210B","hksearow":"\u2925","hkswarow":"\u2926","hoarr":"\u21FF","homtht":"\u223B","hookleftarrow":"\u21A9","hookrightarrow":"\u21AA","hopf":"\uD835\uDD59","Hopf":"\u210D","horbar":"\u2015","HorizontalLine":"\u2500","hscr":"\uD835\uDCBD","Hscr":"\u210B","hslash":"\u210F","Hstrok":"\u0126","hstrok":"\u0127","HumpDownHump":"\u224E","HumpEqual":"\u224F","hybull":"\u2043","hyphen":"\u2010","Iacute":"\u00CD","iacute":"\u00ED","ic":"\u2063","Icirc":"\u00CE","icirc":"\u00EE","Icy":"\u0418","icy":"\u0438","Idot":"\u0130","IEcy":"\u0415","iecy":"\u0435","iexcl":"\u00A1","iff":"\u21D4","ifr":"\uD835\uDD26","Ifr":"\u2111","Igrave":"\u00CC","igrave":"\u00EC","ii":"\u2148","iiiint":"\u2A0C","iiint":"\u222D","iinfin":"\u29DC","iiota":"\u2129","IJlig":"\u0132","ijlig":"\u0133","Imacr":"\u012A","imacr":"\u012B","image":"\u2111","ImaginaryI":"\u2148","imagline":"\u2110","imagpart":"\u2111","imath":"\u0131","Im":"\u2111","imof":"\u22B7","imped":"\u01B5","Implies":"\u21D2","incare":"\u2105","in":"\u2208","infin":"\u221E","infintie":"\u29DD","inodot":"\u0131","intcal":"\u22BA","int":"\u222B","Int":"\u222C","integers":"\u2124","Integral":"\u222B","intercal":"\u22BA","Intersection":"\u22C2","intlarhk":"\u2A17","intprod":"\u2A3C","InvisibleComma":"\u2063","InvisibleTimes":"\u2062","IOcy":"\u0401","iocy":"\u0451","Iogon":"\u012E","iogon":"\u012F","Iopf":"\uD835\uDD40","iopf":"\uD835\uDD5A","Iota":"\u0399","iota":"\u03B9","iprod":"\u2A3C","iquest":"\u00BF","iscr":"\uD835\uDCBE","Iscr":"\u2110","isin":"\u2208","isindot":"\u22F5","isinE":"\u22F9","isins":"\u22F4","isinsv":"\u22F3","isinv":"\u2208","it":"\u2062","Itilde":"\u0128","itilde":"\u0129","Iukcy":"\u0406","iukcy":"\u0456","Iuml":"\u00CF","iuml":"\u00EF","Jcirc":"\u0134","jcirc":"\u0135","Jcy":"\u0419","jcy":"\u0439","Jfr":"\uD835\uDD0D","jfr":"\uD835\uDD27","jmath":"\u0237","Jopf":"\uD835\uDD41","jopf":"\uD835\uDD5B","Jscr":"\uD835\uDCA5","jscr":"\uD835\uDCBF","Jsercy":"\u0408","jsercy":"\u0458","Jukcy":"\u0404","jukcy":"\u0454","Kappa":"\u039A","kappa":"\u03BA","kappav":"\u03F0","Kcedil":"\u0136","kcedil":"\u0137","Kcy":"\u041A","kcy":"\u043A","Kfr":"\uD835\uDD0E","kfr":"\uD835\uDD28","kgreen":"\u0138","KHcy":"\u0425","khcy":"\u0445","KJcy":"\u040C","kjcy":"\u045C","Kopf":"\uD835\uDD42","kopf":"\uD835\uDD5C","Kscr":"\uD835\uDCA6","kscr":"\uD835\uDCC0","lAarr":"\u21DA","Lacute":"\u0139","lacute":"\u013A","laemptyv":"\u29B4","lagran":"\u2112","Lambda":"\u039B","lambda":"\u03BB","lang":"\u27E8","Lang":"\u27EA","langd":"\u2991","langle":"\u27E8","lap":"\u2A85","Laplacetrf":"\u2112","laquo":"\u00AB","larrb":"\u21E4","larrbfs":"\u291F","larr":"\u2190","Larr":"\u219E","lArr":"\u21D0","larrfs":"\u291D","larrhk":"\u21A9","larrlp":"\u21AB","larrpl":"\u2939","larrsim":"\u2973","larrtl":"\u21A2","latail":"\u2919","lAtail":"\u291B","lat":"\u2AAB","late":"\u2AAD","lates":"\u2AAD\uFE00","lbarr":"\u290C","lBarr":"\u290E","lbbrk":"\u2772","lbrace":"{","lbrack":"[","lbrke":"\u298B","lbrksld":"\u298F","lbrkslu":"\u298D","Lcaron":"\u013D","lcaron":"\u013E","Lcedil":"\u013B","lcedil":"\u013C","lceil":"\u2308","lcub":"{","Lcy":"\u041B","lcy":"\u043B","ldca":"\u2936","ldquo":"\u201C","ldquor":"\u201E","ldrdhar":"\u2967","ldrushar":"\u294B","ldsh":"\u21B2","le":"\u2264","lE":"\u2266","LeftAngleBracket":"\u27E8","LeftArrowBar":"\u21E4","leftarrow":"\u2190","LeftArrow":"\u2190","Leftarrow":"\u21D0","LeftArrowRightArrow":"\u21C6","leftarrowtail":"\u21A2","LeftCeiling":"\u2308","LeftDoubleBracket":"\u27E6","LeftDownTeeVector":"\u2961","LeftDownVectorBar":"\u2959","LeftDownVector":"\u21C3","LeftFloor":"\u230A","leftharpoondown":"\u21BD","leftharpoonup":"\u21BC","leftleftarrows":"\u21C7","leftrightarrow":"\u2194","LeftRightArrow":"\u2194","Leftrightarrow":"\u21D4","leftrightarrows":"\u21C6","leftrightharpoons":"\u21CB","leftrightsquigarrow":"\u21AD","LeftRightVector":"\u294E","LeftTeeArrow":"\u21A4","LeftTee":"\u22A3","LeftTeeVector":"\u295A","leftthreetimes":"\u22CB","LeftTriangleBar":"\u29CF","LeftTriangle":"\u22B2","LeftTriangleEqual":"\u22B4","LeftUpDownVector":"\u2951","LeftUpTeeVector":"\u2960","LeftUpVectorBar":"\u2958","LeftUpVector":"\u21BF","LeftVectorBar":"\u2952","LeftVector":"\u21BC","lEg":"\u2A8B","leg":"\u22DA","leq":"\u2264","leqq":"\u2266","leqslant":"\u2A7D","lescc":"\u2AA8","les":"\u2A7D","lesdot":"\u2A7F","lesdoto":"\u2A81","lesdotor":"\u2A83","lesg":"\u22DA\uFE00","lesges":"\u2A93","lessapprox":"\u2A85","lessdot":"\u22D6","lesseqgtr":"\u22DA","lesseqqgtr":"\u2A8B","LessEqualGreater":"\u22DA","LessFullEqual":"\u2266","LessGreater":"\u2276","lessgtr":"\u2276","LessLess":"\u2AA1","lesssim":"\u2272","LessSlantEqual":"\u2A7D","LessTilde":"\u2272","lfisht":"\u297C","lfloor":"\u230A","Lfr":"\uD835\uDD0F","lfr":"\uD835\uDD29","lg":"\u2276","lgE":"\u2A91","lHar":"\u2962","lhard":"\u21BD","lharu":"\u21BC","lharul":"\u296A","lhblk":"\u2584","LJcy":"\u0409","ljcy":"\u0459","llarr":"\u21C7","ll":"\u226A","Ll":"\u22D8","llcorner":"\u231E","Lleftarrow":"\u21DA","llhard":"\u296B","lltri":"\u25FA","Lmidot":"\u013F","lmidot":"\u0140","lmoustache":"\u23B0","lmoust":"\u23B0","lnap":"\u2A89","lnapprox":"\u2A89","lne":"\u2A87","lnE":"\u2268","lneq":"\u2A87","lneqq":"\u2268","lnsim":"\u22E6","loang":"\u27EC","loarr":"\u21FD","lobrk":"\u27E6","longleftarrow":"\u27F5","LongLeftArrow":"\u27F5","Longleftarrow":"\u27F8","longleftrightarrow":"\u27F7","LongLeftRightArrow":"\u27F7","Longleftrightarrow":"\u27FA","longmapsto":"\u27FC","longrightarrow":"\u27F6","LongRightArrow":"\u27F6","Longrightarrow":"\u27F9","looparrowleft":"\u21AB","looparrowright":"\u21AC","lopar":"\u2985","Lopf":"\uD835\uDD43","lopf":"\uD835\uDD5D","loplus":"\u2A2D","lotimes":"\u2A34","lowast":"\u2217","lowbar":"_","LowerLeftArrow":"\u2199","LowerRightArrow":"\u2198","loz":"\u25CA","lozenge":"\u25CA","lozf":"\u29EB","lpar":"(","lparlt":"\u2993","lrarr":"\u21C6","lrcorner":"\u231F","lrhar":"\u21CB","lrhard":"\u296D","lrm":"\u200E","lrtri":"\u22BF","lsaquo":"\u2039","lscr":"\uD835\uDCC1","Lscr":"\u2112","lsh":"\u21B0","Lsh":"\u21B0","lsim":"\u2272","lsime":"\u2A8D","lsimg":"\u2A8F","lsqb":"[","lsquo":"\u2018","lsquor":"\u201A","Lstrok":"\u0141","lstrok":"\u0142","ltcc":"\u2AA6","ltcir":"\u2A79","lt":"<","LT":"<","Lt":"\u226A","ltdot":"\u22D6","lthree":"\u22CB","ltimes":"\u22C9","ltlarr":"\u2976","ltquest":"\u2A7B","ltri":"\u25C3","ltrie":"\u22B4","ltrif":"\u25C2","ltrPar":"\u2996","lurdshar":"\u294A","luruhar":"\u2966","lvertneqq":"\u2268\uFE00","lvnE":"\u2268\uFE00","macr":"\u00AF","male":"\u2642","malt":"\u2720","maltese":"\u2720","Map":"\u2905","map":"\u21A6","mapsto":"\u21A6","mapstodown":"\u21A7","mapstoleft":"\u21A4","mapstoup":"\u21A5","marker":"\u25AE","mcomma":"\u2A29","Mcy":"\u041C","mcy":"\u043C","mdash":"\u2014","mDDot":"\u223A","measuredangle":"\u2221","MediumSpace":"\u205F","Mellintrf":"\u2133","Mfr":"\uD835\uDD10","mfr":"\uD835\uDD2A","mho":"\u2127","micro":"\u00B5","midast":"*","midcir":"\u2AF0","mid":"\u2223","middot":"\u00B7","minusb":"\u229F","minus":"\u2212","minusd":"\u2238","minusdu":"\u2A2A","MinusPlus":"\u2213","mlcp":"\u2ADB","mldr":"\u2026","mnplus":"\u2213","models":"\u22A7","Mopf":"\uD835\uDD44","mopf":"\uD835\uDD5E","mp":"\u2213","mscr":"\uD835\uDCC2","Mscr":"\u2133","mstpos":"\u223E","Mu":"\u039C","mu":"\u03BC","multimap":"\u22B8","mumap":"\u22B8","nabla":"\u2207","Nacute":"\u0143","nacute":"\u0144","nang":"\u2220\u20D2","nap":"\u2249","napE":"\u2A70\u0338","napid":"\u224B\u0338","napos":"\u0149","napprox":"\u2249","natural":"\u266E","naturals":"\u2115","natur":"\u266E","nbsp":"\u00A0","nbump":"\u224E\u0338","nbumpe":"\u224F\u0338","ncap":"\u2A43","Ncaron":"\u0147","ncaron":"\u0148","Ncedil":"\u0145","ncedil":"\u0146","ncong":"\u2247","ncongdot":"\u2A6D\u0338","ncup":"\u2A42","Ncy":"\u041D","ncy":"\u043D","ndash":"\u2013","nearhk":"\u2924","nearr":"\u2197","neArr":"\u21D7","nearrow":"\u2197","ne":"\u2260","nedot":"\u2250\u0338","NegativeMediumSpace":"\u200B","NegativeThickSpace":"\u200B","NegativeThinSpace":"\u200B","NegativeVeryThinSpace":"\u200B","nequiv":"\u2262","nesear":"\u2928","nesim":"\u2242\u0338","NestedGreaterGreater":"\u226B","NestedLessLess":"\u226A","NewLine":"\n","nexist":"\u2204","nexists":"\u2204","Nfr":"\uD835\uDD11","nfr":"\uD835\uDD2B","ngE":"\u2267\u0338","nge":"\u2271","ngeq":"\u2271","ngeqq":"\u2267\u0338","ngeqslant":"\u2A7E\u0338","nges":"\u2A7E\u0338","nGg":"\u22D9\u0338","ngsim":"\u2275","nGt":"\u226B\u20D2","ngt":"\u226F","ngtr":"\u226F","nGtv":"\u226B\u0338","nharr":"\u21AE","nhArr":"\u21CE","nhpar":"\u2AF2","ni":"\u220B","nis":"\u22FC","nisd":"\u22FA","niv":"\u220B","NJcy":"\u040A","njcy":"\u045A","nlarr":"\u219A","nlArr":"\u21CD","nldr":"\u2025","nlE":"\u2266\u0338","nle":"\u2270","nleftarrow":"\u219A","nLeftarrow":"\u21CD","nleftrightarrow":"\u21AE","nLeftrightarrow":"\u21CE","nleq":"\u2270","nleqq":"\u2266\u0338","nleqslant":"\u2A7D\u0338","nles":"\u2A7D\u0338","nless":"\u226E","nLl":"\u22D8\u0338","nlsim":"\u2274","nLt":"\u226A\u20D2","nlt":"\u226E","nltri":"\u22EA","nltrie":"\u22EC","nLtv":"\u226A\u0338","nmid":"\u2224","NoBreak":"\u2060","NonBreakingSpace":"\u00A0","nopf":"\uD835\uDD5F","Nopf":"\u2115","Not":"\u2AEC","not":"\u00AC","NotCongruent":"\u2262","NotCupCap":"\u226D","NotDoubleVerticalBar":"\u2226","NotElement":"\u2209","NotEqual":"\u2260","NotEqualTilde":"\u2242\u0338","NotExists":"\u2204","NotGreater":"\u226F","NotGreaterEqual":"\u2271","NotGreaterFullEqual":"\u2267\u0338","NotGreaterGreater":"\u226B\u0338","NotGreaterLess":"\u2279","NotGreaterSlantEqual":"\u2A7E\u0338","NotGreaterTilde":"\u2275","NotHumpDownHump":"\u224E\u0338","NotHumpEqual":"\u224F\u0338","notin":"\u2209","notindot":"\u22F5\u0338","notinE":"\u22F9\u0338","notinva":"\u2209","notinvb":"\u22F7","notinvc":"\u22F6","NotLeftTriangleBar":"\u29CF\u0338","NotLeftTriangle":"\u22EA","NotLeftTriangleEqual":"\u22EC","NotLess":"\u226E","NotLessEqual":"\u2270","NotLessGreater":"\u2278","NotLessLess":"\u226A\u0338","NotLessSlantEqual":"\u2A7D\u0338","NotLessTilde":"\u2274","NotNestedGreaterGreater":"\u2AA2\u0338","NotNestedLessLess":"\u2AA1\u0338","notni":"\u220C","notniva":"\u220C","notnivb":"\u22FE","notnivc":"\u22FD","NotPrecedes":"\u2280","NotPrecedesEqual":"\u2AAF\u0338","NotPrecedesSlantEqual":"\u22E0","NotReverseElement":"\u220C","NotRightTriangleBar":"\u29D0\u0338","NotRightTriangle":"\u22EB","NotRightTriangleEqual":"\u22ED","NotSquareSubset":"\u228F\u0338","NotSquareSubsetEqual":"\u22E2","NotSquareSuperset":"\u2290\u0338","NotSquareSupersetEqual":"\u22E3","NotSubset":"\u2282\u20D2","NotSubsetEqual":"\u2288","NotSucceeds":"\u2281","NotSucceedsEqual":"\u2AB0\u0338","NotSucceedsSlantEqual":"\u22E1","NotSucceedsTilde":"\u227F\u0338","NotSuperset":"\u2283\u20D2","NotSupersetEqual":"\u2289","NotTilde":"\u2241","NotTildeEqual":"\u2244","NotTildeFullEqual":"\u2247","NotTildeTilde":"\u2249","NotVerticalBar":"\u2224","nparallel":"\u2226","npar":"\u2226","nparsl":"\u2AFD\u20E5","npart":"\u2202\u0338","npolint":"\u2A14","npr":"\u2280","nprcue":"\u22E0","nprec":"\u2280","npreceq":"\u2AAF\u0338","npre":"\u2AAF\u0338","nrarrc":"\u2933\u0338","nrarr":"\u219B","nrArr":"\u21CF","nrarrw":"\u219D\u0338","nrightarrow":"\u219B","nRightarrow":"\u21CF","nrtri":"\u22EB","nrtrie":"\u22ED","nsc":"\u2281","nsccue":"\u22E1","nsce":"\u2AB0\u0338","Nscr":"\uD835\uDCA9","nscr":"\uD835\uDCC3","nshortmid":"\u2224","nshortparallel":"\u2226","nsim":"\u2241","nsime":"\u2244","nsimeq":"\u2244","nsmid":"\u2224","nspar":"\u2226","nsqsube":"\u22E2","nsqsupe":"\u22E3","nsub":"\u2284","nsubE":"\u2AC5\u0338","nsube":"\u2288","nsubset":"\u2282\u20D2","nsubseteq":"\u2288","nsubseteqq":"\u2AC5\u0338","nsucc":"\u2281","nsucceq":"\u2AB0\u0338","nsup":"\u2285","nsupE":"\u2AC6\u0338","nsupe":"\u2289","nsupset":"\u2283\u20D2","nsupseteq":"\u2289","nsupseteqq":"\u2AC6\u0338","ntgl":"\u2279","Ntilde":"\u00D1","ntilde":"\u00F1","ntlg":"\u2278","ntriangleleft":"\u22EA","ntrianglelefteq":"\u22EC","ntriangleright":"\u22EB","ntrianglerighteq":"\u22ED","Nu":"\u039D","nu":"\u03BD","num":"#","numero":"\u2116","numsp":"\u2007","nvap":"\u224D\u20D2","nvdash":"\u22AC","nvDash":"\u22AD","nVdash":"\u22AE","nVDash":"\u22AF","nvge":"\u2265\u20D2","nvgt":">\u20D2","nvHarr":"\u2904","nvinfin":"\u29DE","nvlArr":"\u2902","nvle":"\u2264\u20D2","nvlt":"<\u20D2","nvltrie":"\u22B4\u20D2","nvrArr":"\u2903","nvrtrie":"\u22B5\u20D2","nvsim":"\u223C\u20D2","nwarhk":"\u2923","nwarr":"\u2196","nwArr":"\u21D6","nwarrow":"\u2196","nwnear":"\u2927","Oacute":"\u00D3","oacute":"\u00F3","oast":"\u229B","Ocirc":"\u00D4","ocirc":"\u00F4","ocir":"\u229A","Ocy":"\u041E","ocy":"\u043E","odash":"\u229D","Odblac":"\u0150","odblac":"\u0151","odiv":"\u2A38","odot":"\u2299","odsold":"\u29BC","OElig":"\u0152","oelig":"\u0153","ofcir":"\u29BF","Ofr":"\uD835\uDD12","ofr":"\uD835\uDD2C","ogon":"\u02DB","Ograve":"\u00D2","ograve":"\u00F2","ogt":"\u29C1","ohbar":"\u29B5","ohm":"\u03A9","oint":"\u222E","olarr":"\u21BA","olcir":"\u29BE","olcross":"\u29BB","oline":"\u203E","olt":"\u29C0","Omacr":"\u014C","omacr":"\u014D","Omega":"\u03A9","omega":"\u03C9","Omicron":"\u039F","omicron":"\u03BF","omid":"\u29B6","ominus":"\u2296","Oopf":"\uD835\uDD46","oopf":"\uD835\uDD60","opar":"\u29B7","OpenCurlyDoubleQuote":"\u201C","OpenCurlyQuote":"\u2018","operp":"\u29B9","oplus":"\u2295","orarr":"\u21BB","Or":"\u2A54","or":"\u2228","ord":"\u2A5D","order":"\u2134","orderof":"\u2134","ordf":"\u00AA","ordm":"\u00BA","origof":"\u22B6","oror":"\u2A56","orslope":"\u2A57","orv":"\u2A5B","oS":"\u24C8","Oscr":"\uD835\uDCAA","oscr":"\u2134","Oslash":"\u00D8","oslash":"\u00F8","osol":"\u2298","Otilde":"\u00D5","otilde":"\u00F5","otimesas":"\u2A36","Otimes":"\u2A37","otimes":"\u2297","Ouml":"\u00D6","ouml":"\u00F6","ovbar":"\u233D","OverBar":"\u203E","OverBrace":"\u23DE","OverBracket":"\u23B4","OverParenthesis":"\u23DC","para":"\u00B6","parallel":"\u2225","par":"\u2225","parsim":"\u2AF3","parsl":"\u2AFD","part":"\u2202","PartialD":"\u2202","Pcy":"\u041F","pcy":"\u043F","percnt":"%","period":".","permil":"\u2030","perp":"\u22A5","pertenk":"\u2031","Pfr":"\uD835\uDD13","pfr":"\uD835\uDD2D","Phi":"\u03A6","phi":"\u03C6","phiv":"\u03D5","phmmat":"\u2133","phone":"\u260E","Pi":"\u03A0","pi":"\u03C0","pitchfork":"\u22D4","piv":"\u03D6","planck":"\u210F","planckh":"\u210E","plankv":"\u210F","plusacir":"\u2A23","plusb":"\u229E","pluscir":"\u2A22","plus":"+","plusdo":"\u2214","plusdu":"\u2A25","pluse":"\u2A72","PlusMinus":"\u00B1","plusmn":"\u00B1","plussim":"\u2A26","plustwo":"\u2A27","pm":"\u00B1","Poincareplane":"\u210C","pointint":"\u2A15","popf":"\uD835\uDD61","Popf":"\u2119","pound":"\u00A3","prap":"\u2AB7","Pr":"\u2ABB","pr":"\u227A","prcue":"\u227C","precapprox":"\u2AB7","prec":"\u227A","preccurlyeq":"\u227C","Precedes":"\u227A","PrecedesEqual":"\u2AAF","PrecedesSlantEqual":"\u227C","PrecedesTilde":"\u227E","preceq":"\u2AAF","precnapprox":"\u2AB9","precneqq":"\u2AB5","precnsim":"\u22E8","pre":"\u2AAF","prE":"\u2AB3","precsim":"\u227E","prime":"\u2032","Prime":"\u2033","primes":"\u2119","prnap":"\u2AB9","prnE":"\u2AB5","prnsim":"\u22E8","prod":"\u220F","Product":"\u220F","profalar":"\u232E","profline":"\u2312","profsurf":"\u2313","prop":"\u221D","Proportional":"\u221D","Proportion":"\u2237","propto":"\u221D","prsim":"\u227E","prurel":"\u22B0","Pscr":"\uD835\uDCAB","pscr":"\uD835\uDCC5","Psi":"\u03A8","psi":"\u03C8","puncsp":"\u2008","Qfr":"\uD835\uDD14","qfr":"\uD835\uDD2E","qint":"\u2A0C","qopf":"\uD835\uDD62","Qopf":"\u211A","qprime":"\u2057","Qscr":"\uD835\uDCAC","qscr":"\uD835\uDCC6","quaternions":"\u210D","quatint":"\u2A16","quest":"?","questeq":"\u225F","quot":"\"","QUOT":"\"","rAarr":"\u21DB","race":"\u223D\u0331","Racute":"\u0154","racute":"\u0155","radic":"\u221A","raemptyv":"\u29B3","rang":"\u27E9","Rang":"\u27EB","rangd":"\u2992","range":"\u29A5","rangle":"\u27E9","raquo":"\u00BB","rarrap":"\u2975","rarrb":"\u21E5","rarrbfs":"\u2920","rarrc":"\u2933","rarr":"\u2192","Rarr":"\u21A0","rArr":"\u21D2","rarrfs":"\u291E","rarrhk":"\u21AA","rarrlp":"\u21AC","rarrpl":"\u2945","rarrsim":"\u2974","Rarrtl":"\u2916","rarrtl":"\u21A3","rarrw":"\u219D","ratail":"\u291A","rAtail":"\u291C","ratio":"\u2236","rationals":"\u211A","rbarr":"\u290D","rBarr":"\u290F","RBarr":"\u2910","rbbrk":"\u2773","rbrace":"}","rbrack":"]","rbrke":"\u298C","rbrksld":"\u298E","rbrkslu":"\u2990","Rcaron":"\u0158","rcaron":"\u0159","Rcedil":"\u0156","rcedil":"\u0157","rceil":"\u2309","rcub":"}","Rcy":"\u0420","rcy":"\u0440","rdca":"\u2937","rdldhar":"\u2969","rdquo":"\u201D","rdquor":"\u201D","rdsh":"\u21B3","real":"\u211C","realine":"\u211B","realpart":"\u211C","reals":"\u211D","Re":"\u211C","rect":"\u25AD","reg":"\u00AE","REG":"\u00AE","ReverseElement":"\u220B","ReverseEquilibrium":"\u21CB","ReverseUpEquilibrium":"\u296F","rfisht":"\u297D","rfloor":"\u230B","rfr":"\uD835\uDD2F","Rfr":"\u211C","rHar":"\u2964","rhard":"\u21C1","rharu":"\u21C0","rharul":"\u296C","Rho":"\u03A1","rho":"\u03C1","rhov":"\u03F1","RightAngleBracket":"\u27E9","RightArrowBar":"\u21E5","rightarrow":"\u2192","RightArrow":"\u2192","Rightarrow":"\u21D2","RightArrowLeftArrow":"\u21C4","rightarrowtail":"\u21A3","RightCeiling":"\u2309","RightDoubleBracket":"\u27E7","RightDownTeeVector":"\u295D","RightDownVectorBar":"\u2955","RightDownVector":"\u21C2","RightFloor":"\u230B","rightharpoondown":"\u21C1","rightharpoonup":"\u21C0","rightleftarrows":"\u21C4","rightleftharpoons":"\u21CC","rightrightarrows":"\u21C9","rightsquigarrow":"\u219D","RightTeeArrow":"\u21A6","RightTee":"\u22A2","RightTeeVector":"\u295B","rightthreetimes":"\u22CC","RightTriangleBar":"\u29D0","RightTriangle":"\u22B3","RightTriangleEqual":"\u22B5","RightUpDownVector":"\u294F","RightUpTeeVector":"\u295C","RightUpVectorBar":"\u2954","RightUpVector":"\u21BE","RightVectorBar":"\u2953","RightVector":"\u21C0","ring":"\u02DA","risingdotseq":"\u2253","rlarr":"\u21C4","rlhar":"\u21CC","rlm":"\u200F","rmoustache":"\u23B1","rmoust":"\u23B1","rnmid":"\u2AEE","roang":"\u27ED","roarr":"\u21FE","robrk":"\u27E7","ropar":"\u2986","ropf":"\uD835\uDD63","Ropf":"\u211D","roplus":"\u2A2E","rotimes":"\u2A35","RoundImplies":"\u2970","rpar":")","rpargt":"\u2994","rppolint":"\u2A12","rrarr":"\u21C9","Rrightarrow":"\u21DB","rsaquo":"\u203A","rscr":"\uD835\uDCC7","Rscr":"\u211B","rsh":"\u21B1","Rsh":"\u21B1","rsqb":"]","rsquo":"\u2019","rsquor":"\u2019","rthree":"\u22CC","rtimes":"\u22CA","rtri":"\u25B9","rtrie":"\u22B5","rtrif":"\u25B8","rtriltri":"\u29CE","RuleDelayed":"\u29F4","ruluhar":"\u2968","rx":"\u211E","Sacute":"\u015A","sacute":"\u015B","sbquo":"\u201A","scap":"\u2AB8","Scaron":"\u0160","scaron":"\u0161","Sc":"\u2ABC","sc":"\u227B","sccue":"\u227D","sce":"\u2AB0","scE":"\u2AB4","Scedil":"\u015E","scedil":"\u015F","Scirc":"\u015C","scirc":"\u015D","scnap":"\u2ABA","scnE":"\u2AB6","scnsim":"\u22E9","scpolint":"\u2A13","scsim":"\u227F","Scy":"\u0421","scy":"\u0441","sdotb":"\u22A1","sdot":"\u22C5","sdote":"\u2A66","searhk":"\u2925","searr":"\u2198","seArr":"\u21D8","searrow":"\u2198","sect":"\u00A7","semi":";","seswar":"\u2929","setminus":"\u2216","setmn":"\u2216","sext":"\u2736","Sfr":"\uD835\uDD16","sfr":"\uD835\uDD30","sfrown":"\u2322","sharp":"\u266F","SHCHcy":"\u0429","shchcy":"\u0449","SHcy":"\u0428","shcy":"\u0448","ShortDownArrow":"\u2193","ShortLeftArrow":"\u2190","shortmid":"\u2223","shortparallel":"\u2225","ShortRightArrow":"\u2192","ShortUpArrow":"\u2191","shy":"\u00AD","Sigma":"\u03A3","sigma":"\u03C3","sigmaf":"\u03C2","sigmav":"\u03C2","sim":"\u223C","simdot":"\u2A6A","sime":"\u2243","simeq":"\u2243","simg":"\u2A9E","simgE":"\u2AA0","siml":"\u2A9D","simlE":"\u2A9F","simne":"\u2246","simplus":"\u2A24","simrarr":"\u2972","slarr":"\u2190","SmallCircle":"\u2218","smallsetminus":"\u2216","smashp":"\u2A33","smeparsl":"\u29E4","smid":"\u2223","smile":"\u2323","smt":"\u2AAA","smte":"\u2AAC","smtes":"\u2AAC\uFE00","SOFTcy":"\u042C","softcy":"\u044C","solbar":"\u233F","solb":"\u29C4","sol":"/","Sopf":"\uD835\uDD4A","sopf":"\uD835\uDD64","spades":"\u2660","spadesuit":"\u2660","spar":"\u2225","sqcap":"\u2293","sqcaps":"\u2293\uFE00","sqcup":"\u2294","sqcups":"\u2294\uFE00","Sqrt":"\u221A","sqsub":"\u228F","sqsube":"\u2291","sqsubset":"\u228F","sqsubseteq":"\u2291","sqsup":"\u2290","sqsupe":"\u2292","sqsupset":"\u2290","sqsupseteq":"\u2292","square":"\u25A1","Square":"\u25A1","SquareIntersection":"\u2293","SquareSubset":"\u228F","SquareSubsetEqual":"\u2291","SquareSuperset":"\u2290","SquareSupersetEqual":"\u2292","SquareUnion":"\u2294","squarf":"\u25AA","squ":"\u25A1","squf":"\u25AA","srarr":"\u2192","Sscr":"\uD835\uDCAE","sscr":"\uD835\uDCC8","ssetmn":"\u2216","ssmile":"\u2323","sstarf":"\u22C6","Star":"\u22C6","star":"\u2606","starf":"\u2605","straightepsilon":"\u03F5","straightphi":"\u03D5","strns":"\u00AF","sub":"\u2282","Sub":"\u22D0","subdot":"\u2ABD","subE":"\u2AC5","sube":"\u2286","subedot":"\u2AC3","submult":"\u2AC1","subnE":"\u2ACB","subne":"\u228A","subplus":"\u2ABF","subrarr":"\u2979","subset":"\u2282","Subset":"\u22D0","subseteq":"\u2286","subseteqq":"\u2AC5","SubsetEqual":"\u2286","subsetneq":"\u228A","subsetneqq":"\u2ACB","subsim":"\u2AC7","subsub":"\u2AD5","subsup":"\u2AD3","succapprox":"\u2AB8","succ":"\u227B","succcurlyeq":"\u227D","Succeeds":"\u227B","SucceedsEqual":"\u2AB0","SucceedsSlantEqual":"\u227D","SucceedsTilde":"\u227F","succeq":"\u2AB0","succnapprox":"\u2ABA","succneqq":"\u2AB6","succnsim":"\u22E9","succsim":"\u227F","SuchThat":"\u220B","sum":"\u2211","Sum":"\u2211","sung":"\u266A","sup1":"\u00B9","sup2":"\u00B2","sup3":"\u00B3","sup":"\u2283","Sup":"\u22D1","supdot":"\u2ABE","supdsub":"\u2AD8","supE":"\u2AC6","supe":"\u2287","supedot":"\u2AC4","Superset":"\u2283","SupersetEqual":"\u2287","suphsol":"\u27C9","suphsub":"\u2AD7","suplarr":"\u297B","supmult":"\u2AC2","supnE":"\u2ACC","supne":"\u228B","supplus":"\u2AC0","supset":"\u2283","Supset":"\u22D1","supseteq":"\u2287","supseteqq":"\u2AC6","supsetneq":"\u228B","supsetneqq":"\u2ACC","supsim":"\u2AC8","supsub":"\u2AD4","supsup":"\u2AD6","swarhk":"\u2926","swarr":"\u2199","swArr":"\u21D9","swarrow":"\u2199","swnwar":"\u292A","szlig":"\u00DF","Tab":"\t","target":"\u2316","Tau":"\u03A4","tau":"\u03C4","tbrk":"\u23B4","Tcaron":"\u0164","tcaron":"\u0165","Tcedil":"\u0162","tcedil":"\u0163","Tcy":"\u0422","tcy":"\u0442","tdot":"\u20DB","telrec":"\u2315","Tfr":"\uD835\uDD17","tfr":"\uD835\uDD31","there4":"\u2234","therefore":"\u2234","Therefore":"\u2234","Theta":"\u0398","theta":"\u03B8","thetasym":"\u03D1","thetav":"\u03D1","thickapprox":"\u2248","thicksim":"\u223C","ThickSpace":"\u205F\u200A","ThinSpace":"\u2009","thinsp":"\u2009","thkap":"\u2248","thksim":"\u223C","THORN":"\u00DE","thorn":"\u00FE","tilde":"\u02DC","Tilde":"\u223C","TildeEqual":"\u2243","TildeFullEqual":"\u2245","TildeTilde":"\u2248","timesbar":"\u2A31","timesb":"\u22A0","times":"\u00D7","timesd":"\u2A30","tint":"\u222D","toea":"\u2928","topbot":"\u2336","topcir":"\u2AF1","top":"\u22A4","Topf":"\uD835\uDD4B","topf":"\uD835\uDD65","topfork":"\u2ADA","tosa":"\u2929","tprime":"\u2034","trade":"\u2122","TRADE":"\u2122","triangle":"\u25B5","triangledown":"\u25BF","triangleleft":"\u25C3","trianglelefteq":"\u22B4","triangleq":"\u225C","triangleright":"\u25B9","trianglerighteq":"\u22B5","tridot":"\u25EC","trie":"\u225C","triminus":"\u2A3A","TripleDot":"\u20DB","triplus":"\u2A39","trisb":"\u29CD","tritime":"\u2A3B","trpezium":"\u23E2","Tscr":"\uD835\uDCAF","tscr":"\uD835\uDCC9","TScy":"\u0426","tscy":"\u0446","TSHcy":"\u040B","tshcy":"\u045B","Tstrok":"\u0166","tstrok":"\u0167","twixt":"\u226C","twoheadleftarrow":"\u219E","twoheadrightarrow":"\u21A0","Uacute":"\u00DA","uacute":"\u00FA","uarr":"\u2191","Uarr":"\u219F","uArr":"\u21D1","Uarrocir":"\u2949","Ubrcy":"\u040E","ubrcy":"\u045E","Ubreve":"\u016C","ubreve":"\u016D","Ucirc":"\u00DB","ucirc":"\u00FB","Ucy":"\u0423","ucy":"\u0443","udarr":"\u21C5","Udblac":"\u0170","udblac":"\u0171","udhar":"\u296E","ufisht":"\u297E","Ufr":"\uD835\uDD18","ufr":"\uD835\uDD32","Ugrave":"\u00D9","ugrave":"\u00F9","uHar":"\u2963","uharl":"\u21BF","uharr":"\u21BE","uhblk":"\u2580","ulcorn":"\u231C","ulcorner":"\u231C","ulcrop":"\u230F","ultri":"\u25F8","Umacr":"\u016A","umacr":"\u016B","uml":"\u00A8","UnderBar":"_","UnderBrace":"\u23DF","UnderBracket":"\u23B5","UnderParenthesis":"\u23DD","Union":"\u22C3","UnionPlus":"\u228E","Uogon":"\u0172","uogon":"\u0173","Uopf":"\uD835\uDD4C","uopf":"\uD835\uDD66","UpArrowBar":"\u2912","uparrow":"\u2191","UpArrow":"\u2191","Uparrow":"\u21D1","UpArrowDownArrow":"\u21C5","updownarrow":"\u2195","UpDownArrow":"\u2195","Updownarrow":"\u21D5","UpEquilibrium":"\u296E","upharpoonleft":"\u21BF","upharpoonright":"\u21BE","uplus":"\u228E","UpperLeftArrow":"\u2196","UpperRightArrow":"\u2197","upsi":"\u03C5","Upsi":"\u03D2","upsih":"\u03D2","Upsilon":"\u03A5","upsilon":"\u03C5","UpTeeArrow":"\u21A5","UpTee":"\u22A5","upuparrows":"\u21C8","urcorn":"\u231D","urcorner":"\u231D","urcrop":"\u230E","Uring":"\u016E","uring":"\u016F","urtri":"\u25F9","Uscr":"\uD835\uDCB0","uscr":"\uD835\uDCCA","utdot":"\u22F0","Utilde":"\u0168","utilde":"\u0169","utri":"\u25B5","utrif":"\u25B4","uuarr":"\u21C8","Uuml":"\u00DC","uuml":"\u00FC","uwangle":"\u29A7","vangrt":"\u299C","varepsilon":"\u03F5","varkappa":"\u03F0","varnothing":"\u2205","varphi":"\u03D5","varpi":"\u03D6","varpropto":"\u221D","varr":"\u2195","vArr":"\u21D5","varrho":"\u03F1","varsigma":"\u03C2","varsubsetneq":"\u228A\uFE00","varsubsetneqq":"\u2ACB\uFE00","varsupsetneq":"\u228B\uFE00","varsupsetneqq":"\u2ACC\uFE00","vartheta":"\u03D1","vartriangleleft":"\u22B2","vartriangleright":"\u22B3","vBar":"\u2AE8","Vbar":"\u2AEB","vBarv":"\u2AE9","Vcy":"\u0412","vcy":"\u0432","vdash":"\u22A2","vDash":"\u22A8","Vdash":"\u22A9","VDash":"\u22AB","Vdashl":"\u2AE6","veebar":"\u22BB","vee":"\u2228","Vee":"\u22C1","veeeq":"\u225A","vellip":"\u22EE","verbar":"|","Verbar":"\u2016","vert":"|","Vert":"\u2016","VerticalBar":"\u2223","VerticalLine":"|","VerticalSeparator":"\u2758","VerticalTilde":"\u2240","VeryThinSpace":"\u200A","Vfr":"\uD835\uDD19","vfr":"\uD835\uDD33","vltri":"\u22B2","vnsub":"\u2282\u20D2","vnsup":"\u2283\u20D2","Vopf":"\uD835\uDD4D","vopf":"\uD835\uDD67","vprop":"\u221D","vrtri":"\u22B3","Vscr":"\uD835\uDCB1","vscr":"\uD835\uDCCB","vsubnE":"\u2ACB\uFE00","vsubne":"\u228A\uFE00","vsupnE":"\u2ACC\uFE00","vsupne":"\u228B\uFE00","Vvdash":"\u22AA","vzigzag":"\u299A","Wcirc":"\u0174","wcirc":"\u0175","wedbar":"\u2A5F","wedge":"\u2227","Wedge":"\u22C0","wedgeq":"\u2259","weierp":"\u2118","Wfr":"\uD835\uDD1A","wfr":"\uD835\uDD34","Wopf":"\uD835\uDD4E","wopf":"\uD835\uDD68","wp":"\u2118","wr":"\u2240","wreath":"\u2240","Wscr":"\uD835\uDCB2","wscr":"\uD835\uDCCC","xcap":"\u22C2","xcirc":"\u25EF","xcup":"\u22C3","xdtri":"\u25BD","Xfr":"\uD835\uDD1B","xfr":"\uD835\uDD35","xharr":"\u27F7","xhArr":"\u27FA","Xi":"\u039E","xi":"\u03BE","xlarr":"\u27F5","xlArr":"\u27F8","xmap":"\u27FC","xnis":"\u22FB","xodot":"\u2A00","Xopf":"\uD835\uDD4F","xopf":"\uD835\uDD69","xoplus":"\u2A01","xotime":"\u2A02","xrarr":"\u27F6","xrArr":"\u27F9","Xscr":"\uD835\uDCB3","xscr":"\uD835\uDCCD","xsqcup":"\u2A06","xuplus":"\u2A04","xutri":"\u25B3","xvee":"\u22C1","xwedge":"\u22C0","Yacute":"\u00DD","yacute":"\u00FD","YAcy":"\u042F","yacy":"\u044F","Ycirc":"\u0176","ycirc":"\u0177","Ycy":"\u042B","ycy":"\u044B","yen":"\u00A5","Yfr":"\uD835\uDD1C","yfr":"\uD835\uDD36","YIcy":"\u0407","yicy":"\u0457","Yopf":"\uD835\uDD50","yopf":"\uD835\uDD6A","Yscr":"\uD835\uDCB4","yscr":"\uD835\uDCCE","YUcy":"\u042E","yucy":"\u044E","yuml":"\u00FF","Yuml":"\u0178","Zacute":"\u0179","zacute":"\u017A","Zcaron":"\u017D","zcaron":"\u017E","Zcy":"\u0417","zcy":"\u0437","Zdot":"\u017B","zdot":"\u017C","zeetrf":"\u2128","ZeroWidthSpace":"\u200B","Zeta":"\u0396","zeta":"\u03B6","zfr":"\uD835\uDD37","Zfr":"\u2128","ZHcy":"\u0416","zhcy":"\u0436","zigrarr":"\u21DD","zopf":"\uD835\uDD6B","Zopf":"\u2124","Zscr":"\uD835\uDCB5","zscr":"\uD835\uDCCF","zwj":"\u200D","zwnj":"\u200C"};
});
__d('entities/maps/legacy.json',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"Aacute":"\u00C1","aacute":"\u00E1","Acirc":"\u00C2","acirc":"\u00E2","acute":"\u00B4","AElig":"\u00C6","aelig":"\u00E6","Agrave":"\u00C0","agrave":"\u00E0","amp":"&","AMP":"&","Aring":"\u00C5","aring":"\u00E5","Atilde":"\u00C3","atilde":"\u00E3","Auml":"\u00C4","auml":"\u00E4","brvbar":"\u00A6","Ccedil":"\u00C7","ccedil":"\u00E7","cedil":"\u00B8","cent":"\u00A2","copy":"\u00A9","COPY":"\u00A9","curren":"\u00A4","deg":"\u00B0","divide":"\u00F7","Eacute":"\u00C9","eacute":"\u00E9","Ecirc":"\u00CA","ecirc":"\u00EA","Egrave":"\u00C8","egrave":"\u00E8","ETH":"\u00D0","eth":"\u00F0","Euml":"\u00CB","euml":"\u00EB","frac12":"\u00BD","frac14":"\u00BC","frac34":"\u00BE","gt":">","GT":">","Iacute":"\u00CD","iacute":"\u00ED","Icirc":"\u00CE","icirc":"\u00EE","iexcl":"\u00A1","Igrave":"\u00CC","igrave":"\u00EC","iquest":"\u00BF","Iuml":"\u00CF","iuml":"\u00EF","laquo":"\u00AB","lt":"<","LT":"<","macr":"\u00AF","micro":"\u00B5","middot":"\u00B7","nbsp":"\u00A0","not":"\u00AC","Ntilde":"\u00D1","ntilde":"\u00F1","Oacute":"\u00D3","oacute":"\u00F3","Ocirc":"\u00D4","ocirc":"\u00F4","Ograve":"\u00D2","ograve":"\u00F2","ordf":"\u00AA","ordm":"\u00BA","Oslash":"\u00D8","oslash":"\u00F8","Otilde":"\u00D5","otilde":"\u00F5","Ouml":"\u00D6","ouml":"\u00F6","para":"\u00B6","plusmn":"\u00B1","pound":"\u00A3","quot":"\"","QUOT":"\"","raquo":"\u00BB","reg":"\u00AE","REG":"\u00AE","sect":"\u00A7","shy":"\u00AD","sup1":"\u00B9","sup2":"\u00B2","sup3":"\u00B3","szlig":"\u00DF","THORN":"\u00DE","thorn":"\u00FE","times":"\u00D7","Uacute":"\u00DA","uacute":"\u00FA","Ucirc":"\u00DB","ucirc":"\u00FB","Ugrave":"\u00D9","ugrave":"\u00F9","uml":"\u00A8","Uuml":"\u00DC","uuml":"\u00FC","Yacute":"\u00DD","yacute":"\u00FD","yen":"\u00A5","yuml":"\u00FF"};
});
__d('entities/maps/xml.json',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"amp":"&","apos":"'","gt":">","lt":"<","quot":"\""}
;
});
__d('domhandler/index.js',["domelementtype/index.js","domhandler/lib/node.js","domhandler/lib/element.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var ElementType=require("domelementtype/index.js");

var re_whitespace=/\s+/g;
var NodePrototype=require("domhandler/lib/node.js");
var ElementPrototype=require("domhandler/lib/element.js");

function DomHandler(callback, options, elementCB){
if(typeof callback === "object"){
elementCB = options;
options = callback;
callback = null;}else 
if(typeof options === "function"){
elementCB = options;
options = defaultOpts;}

this._callback = callback;
this._options = options || defaultOpts;
this._elementCB = elementCB;
this.dom = [];
this._done = false;
this._tagStack = [];}



var defaultOpts={
normalizeWhitespace:false};



DomHandler.prototype.onreset = function(){
DomHandler.call(this, this._callback, this._options, this._elementCB);};



DomHandler.prototype.onend = function(){
if(this._done)return;
this._done = true;
this._handleCallback(null);};


DomHandler.prototype._handleCallback = 
DomHandler.prototype.onerror = function(error){
if(typeof this._callback === "function"){
this._callback(error, this.dom);}else 
{
if(error)throw error;}};



DomHandler.prototype.onclosetag = function(){

var elem=this._tagStack.pop();
if(this._elementCB)this._elementCB(elem);};


DomHandler.prototype._addDomElement = function(element){
var parent=this._tagStack[this._tagStack.length - 1];
var siblings=parent?parent.children:this.dom;
var previousSibling=siblings[siblings.length - 1];

element.next = null;

if(this._options.withDomLvl1){
element.__proto__ = element.type === "tag"?ElementPrototype:NodePrototype;}


if(previousSibling){
element.prev = previousSibling;
previousSibling.next = element;}else 
{
element.prev = null;}


siblings.push(element);
element.parent = parent || null;};


DomHandler.prototype.onopentag = function(name, attribs){
var element={
type:name === "script"?ElementType.Script:name === "style"?ElementType.Style:ElementType.Tag, 
name:name, 
attribs:attribs, 
children:[]};


this._addDomElement(element);

this._tagStack.push(element);};


DomHandler.prototype.ontext = function(data){


var normalize=this._options.normalizeWhitespace || this._options.ignoreWhitespace;

var lastTag;

if(!this._tagStack.length && this.dom.length && (lastTag = this.dom[this.dom.length - 1]).type === ElementType.Text){
if(normalize){
lastTag.data = (lastTag.data + data).replace(re_whitespace, " ");}else 
{
lastTag.data += data;}}else 

{
if(
this._tagStack.length && (
lastTag = this._tagStack[this._tagStack.length - 1]) && (
lastTag = lastTag.children[lastTag.children.length - 1]) && 
lastTag.type === ElementType.Text)
{
if(normalize){
lastTag.data = (lastTag.data + data).replace(re_whitespace, " ");}else 
{
lastTag.data += data;}}else 

{
if(normalize){
data = data.replace(re_whitespace, " ");}


this._addDomElement({
data:data, 
type:ElementType.Text});}}};





DomHandler.prototype.oncomment = function(data){
var lastTag=this._tagStack[this._tagStack.length - 1];

if(lastTag && lastTag.type === ElementType.Comment){
lastTag.data += data;
return;}


var element={
data:data, 
type:ElementType.Comment};


this._addDomElement(element);
this._tagStack.push(element);};


DomHandler.prototype.oncdatastart = function(){
var element={
children:[{
data:"", 
type:ElementType.Text}], 

type:ElementType.CDATA};


this._addDomElement(element);
this._tagStack.push(element);};


DomHandler.prototype.oncommentend = DomHandler.prototype.oncdataend = function(){
this._tagStack.pop();};


DomHandler.prototype.onprocessinginstruction = function(name, data){
this._addDomElement({
name:name, 
data:data, 
type:ElementType.Directive});};



module.exports = DomHandler;
});
__d('domelementtype/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.
exports = {
Text:"text", 
Directive:"directive", 
Comment:"comment", 
Script:"script", 
Style:"style", 
Tag:"tag", 
CDATA:"cdata", 
Doctype:"doctype", 

isTag:function(elem){
return elem.type === "tag" || elem.type === "script" || elem.type === "style";}};
});
__d('domhandler/lib/node.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

NodePrototype=module.exports = {
get firstChild() {
var children=this.children;
return children && children[0] || null;}, 

get lastChild() {
var children=this.children;
return children && children[children.length - 1] || null;}, 

get nodeType() {
return nodeTypes[this.type] || nodeTypes.element;}};



var domLvl1={
tagName:"name", 
childNodes:"children", 
parentNode:"parent", 
previousSibling:"prev", 
nextSibling:"next", 
nodeValue:"data"};


var nodeTypes={
element:1, 
text:3, 
cdata:4, 
comment:8};


Object.keys(domLvl1).forEach(function(key){
var shorthand=domLvl1[key];
Object.defineProperty(NodePrototype, key, {
get:function(){
return this[shorthand] || null;}, 

set:function(val){
this[shorthand] = val;
return val;}});});
});
__d('domhandler/lib/element.js',["domhandler/lib/node.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
NodePrototype=require("domhandler/lib/node.js");
var ElementPrototype=module.exports = Object.create(NodePrototype);

var domLvl1={
tagName:"name"};


Object.keys(domLvl1).forEach(function(key){
var shorthand=domLvl1[key];
Object.defineProperty(ElementPrototype, key, {
get:function(){
return this[shorthand] || null;}, 

set:function(val){
this[shorthand] = val;
return val;}});});
});
__d('htmlparser2/lib/FeedHandler.js',["htmlparser2/lib/index.js","util/util.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var index=require("htmlparser2/lib/index.js"), 
DomHandler=index.DomHandler, 
DomUtils=index.DomUtils;


function FeedHandler(callback, options){
this.init(callback, options);}


require("util/util.js").inherits(FeedHandler, DomHandler);

FeedHandler.prototype.init = DomHandler;

function getElements(what, where){
return DomUtils.getElementsByTagName(what, where, true);}

function getOneElement(what, where){
return DomUtils.getElementsByTagName(what, where, true, 1)[0];}

function fetch(what, where, recurse){
return DomUtils.getText(
DomUtils.getElementsByTagName(what, where, recurse, 1)).
trim();}


function addConditionally(obj, prop, what, where, recurse){
var tmp=fetch(what, where, recurse);
if(tmp)obj[prop] = tmp;}


var isValidFeed=function(value){
return value === "rss" || value === "feed" || value === "rdf:RDF";};


FeedHandler.prototype.onend = function(){
var feed={}, 
feedRoot=getOneElement(isValidFeed, this.dom), 
tmp, childs;

if(feedRoot){
if(feedRoot.name === "feed"){
childs = feedRoot.children;

feed.type = "atom";
addConditionally(feed, "id", "id", childs);
addConditionally(feed, "title", "title", childs);
if((tmp = getOneElement("link", childs)) && (tmp = tmp.attribs) && (tmp = tmp.href))feed.link = tmp;
addConditionally(feed, "description", "subtitle", childs);
if(tmp = fetch("updated", childs))feed.updated = new Date(tmp);
addConditionally(feed, "author", "email", childs, true);

feed.items = getElements("entry", childs).map(function(item){
var entry={}, tmp;

item = item.children;

addConditionally(entry, "id", "id", item);
addConditionally(entry, "title", "title", item);
if((tmp = getOneElement("link", item)) && (tmp = tmp.attribs) && (tmp = tmp.href))entry.link = tmp;
addConditionally(entry, "description", "summary", item);
if(tmp = fetch("updated", item))entry.pubDate = new Date(tmp);
return entry;});}else 

{
childs = getOneElement("channel", feedRoot.children).children;

feed.type = feedRoot.name.substr(0, 3);
feed.id = "";
addConditionally(feed, "title", "title", childs);
addConditionally(feed, "link", "link", childs);
addConditionally(feed, "description", "description", childs);
if(tmp = fetch("lastBuildDate", childs))feed.updated = new Date(tmp);
addConditionally(feed, "author", "managingEditor", childs, true);

feed.items = getElements("item", feedRoot.children).map(function(item){
var entry={}, tmp;

item = item.children;

addConditionally(entry, "id", "guid", item);
addConditionally(entry, "title", "title", item);
addConditionally(entry, "link", "link", item);
addConditionally(entry, "description", "description", item);
if(tmp = fetch("pubDate", item))entry.pubDate = new Date(tmp);
return entry;});}}



this.dom = feed;
DomHandler.prototype._handleCallback.call(
this, feedRoot?null:Error("couldn't find root of feed"));};



module.exports = FeedHandler;
});
__d('htmlparser2/lib/Stream.js',["htmlparser2/lib/WritableStream.js","util/util.js","htmlparser2/lib/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = Stream;

var Parser=require("htmlparser2/lib/WritableStream.js");

function Stream(options){
Parser.call(this, new Cbs(this), options);}


require("util/util.js").inherits(Stream, Parser);

Stream.prototype.readable = true;

function Cbs(scope){
this.scope = scope;}


var EVENTS=require("htmlparser2/lib/index.js").EVENTS;

Object.keys(EVENTS).forEach(function(name){
if(EVENTS[name] === 0){
Cbs.prototype["on" + name] = function(){
this.scope.emit(name);};}else 

if(EVENTS[name] === 1){
Cbs.prototype["on" + name] = function(a){
this.scope.emit(name, a);};}else 

if(EVENTS[name] === 2){
Cbs.prototype["on" + name] = function(a, b){
this.scope.emit(name, a, b);};}else 

{
throw Error("wrong number of arguments!");}});
});
__d('htmlparser2/lib/WritableStream.js',["htmlparser2/lib/Parser.js","readable-stream/readable.js","util/util.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = Stream;

var Parser=require("htmlparser2/lib/Parser.js"), 
WritableStream=require("stream").Writable || require("readable-stream/readable.js").Writable;

function Stream(cbs, options){
var parser=this._parser = new Parser(cbs, options);

WritableStream.call(this, {decodeStrings:false});

this.once("finish", function(){
parser.end();});}



require("util/util.js").inherits(Stream, WritableStream);

WritableStream.prototype._write = function(chunk, encoding, cb){
this._parser.write(chunk);
cb();};
});
__d('readable-stream/readable.js',["readable-stream/lib/_stream_readable.js","readable-stream/lib/_stream_writable.js","readable-stream/lib/_stream_duplex.js","readable-stream/lib/_stream_transform.js","readable-stream/lib/_stream_passthrough.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  exports = module.exports = require('readable-stream/lib/_stream_readable.js');
exports.Stream = require('stream');
exports.Readable = exports;
exports.Writable = require('readable-stream/lib/_stream_writable.js');
exports.Duplex = require('readable-stream/lib/_stream_duplex.js');
exports.Transform = require('readable-stream/lib/_stream_transform.js');
exports.PassThrough = require('readable-stream/lib/_stream_passthrough.js');
});
__d('readable-stream/lib/_stream_readable.js',["isarray/index.js","events/events.js","core-util-is/lib/util.js","inherits/inherits_browser.js","util/util.js","readable-stream/lib/_stream_duplex.js","string_decoder/index.js","readable-stream/lib/_stream_duplex.js","string_decoder/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.




















exports = Readable;


var isArray=require('isarray/index.js');




var Buffer=require('buffer').Buffer;


Readable.ReadableState = ReadableState;

var EE=require('events/events.js').EventEmitter;


if(!EE.listenerCount)EE.listenerCount = function(emitter, type){
return emitter.listeners(type).length;};



var Stream=require('stream');


var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


var StringDecoder;



var debug=require('util/util.js');
if(debug && debug.debuglog){
debug = debug.debuglog('stream');}else 
{
debug = function(){};}




util.inherits(Readable, Stream);

function ReadableState(options, stream){
var Duplex=require('readable-stream/lib/_stream_duplex.js');

options = options || {};



var hwm=options.highWaterMark;
var defaultHwm=options.objectMode?16:16 * 1024;
this.highWaterMark = hwm || hwm === 0?hwm:defaultHwm;


this.highWaterMark = ~ ~this.highWaterMark;

this.buffer = [];
this.length = 0;
this.pipes = null;
this.pipesCount = 0;
this.flowing = null;
this.ended = false;
this.endEmitted = false;
this.reading = false;





this.sync = true;



this.needReadable = false;
this.emittedReadable = false;
this.readableListening = false;




this.objectMode = !!options.objectMode;

if(stream instanceof Duplex)
this.objectMode = this.objectMode || !!options.readableObjectMode;




this.defaultEncoding = options.defaultEncoding || 'utf8';



this.ranOut = false;


this.awaitDrain = 0;


this.readingMore = false;

this.decoder = null;
this.encoding = null;
if(options.encoding){
if(!StringDecoder)
StringDecoder = require('string_decoder/index.js').StringDecoder;
this.decoder = new StringDecoder(options.encoding);
this.encoding = options.encoding;}}



function Readable(options){
var Duplex=require('readable-stream/lib/_stream_duplex.js');

if(!(this instanceof Readable))
return new Readable(options);

this._readableState = new ReadableState(options, this);


this.readable = true;

Stream.call(this);}






Readable.prototype.push = function(chunk, encoding){
var state=this._readableState;

if(util.isString(chunk) && !state.objectMode){
encoding = encoding || state.defaultEncoding;
if(encoding !== state.encoding){
chunk = new Buffer(chunk, encoding);
encoding = '';}}



return readableAddChunk(this, state, chunk, encoding, false);};



Readable.prototype.unshift = function(chunk){
var state=this._readableState;
return readableAddChunk(this, state, chunk, '', true);};


function readableAddChunk(stream, state, chunk, encoding, addToFront){
var er=chunkInvalid(state, chunk);
if(er){
stream.emit('error', er);}else 
if(util.isNullOrUndefined(chunk)){
state.reading = false;
if(!state.ended)
onEofChunk(stream, state);}else 
if(state.objectMode || chunk && chunk.length > 0){
if(state.ended && !addToFront){
var e=new Error('stream.push() after EOF');
stream.emit('error', e);}else 
if(state.endEmitted && addToFront){
var e=new Error('stream.unshift() after end event');
stream.emit('error', e);}else 
{
if(state.decoder && !addToFront && !encoding)
chunk = state.decoder.write(chunk);

if(!addToFront)
state.reading = false;


if(state.flowing && state.length === 0 && !state.sync){
stream.emit('data', chunk);
stream.read(0);}else 
{

state.length += state.objectMode?1:chunk.length;
if(addToFront)
state.buffer.unshift(chunk);else 

state.buffer.push(chunk);

if(state.needReadable)
emitReadable(stream);}


maybeReadMore(stream, state);}}else 

if(!addToFront){
state.reading = false;}


return needMoreData(state);}











function needMoreData(state){
return !state.ended && (
state.needReadable || 
state.length < state.highWaterMark || 
state.length === 0);}



Readable.prototype.setEncoding = function(enc){
if(!StringDecoder)
StringDecoder = require('string_decoder/index.js').StringDecoder;
this._readableState.decoder = new StringDecoder(enc);
this._readableState.encoding = enc;
return this;};



var MAX_HWM=0x800000;
function roundUpToNextPowerOf2(n){
if(n >= MAX_HWM){
n = MAX_HWM;}else 
{

n--;
for(var p=1; p < 32; p <<= 1) n |= n >> p;
n++;}

return n;}


function howMuchToRead(n, state){
if(state.length === 0 && state.ended)
return 0;

if(state.objectMode)
return n === 0?0:1;

if(isNaN(n) || util.isNull(n)){

if(state.flowing && state.buffer.length)
return state.buffer[0].length;else 

return state.length;}


if(n <= 0)
return 0;





if(n > state.highWaterMark)
state.highWaterMark = roundUpToNextPowerOf2(n);


if(n > state.length){
if(!state.ended){
state.needReadable = true;
return 0;}else 

return state.length;}


return n;}



Readable.prototype.read = function(n){
debug('read', n);
var state=this._readableState;
var nOrig=n;

if(!util.isNumber(n) || n > 0)
state.emittedReadable = false;




if(n === 0 && 
state.needReadable && (
state.length >= state.highWaterMark || state.ended)){
debug('read: emitReadable', state.length, state.ended);
if(state.length === 0 && state.ended)
endReadable(this);else 

emitReadable(this);
return null;}


n = howMuchToRead(n, state);


if(n === 0 && state.ended){
if(state.length === 0)
endReadable(this);
return null;}

























var doRead=state.needReadable;
debug('need readable', doRead);


if(state.length === 0 || state.length - n < state.highWaterMark){
doRead = true;
debug('length less than watermark', doRead);}




if(state.ended || state.reading){
doRead = false;
debug('reading or ended', doRead);}


if(doRead){
debug('do read');
state.reading = true;
state.sync = true;

if(state.length === 0)
state.needReadable = true;

this._read(state.highWaterMark);
state.sync = false;}




if(doRead && !state.reading)
n = howMuchToRead(nOrig, state);

var ret;
if(n > 0)
ret = fromList(n, state);else 

ret = null;

if(util.isNull(ret)){
state.needReadable = true;
n = 0;}


state.length -= n;



if(state.length === 0 && !state.ended)
state.needReadable = true;


if(nOrig !== n && state.ended && state.length === 0)
endReadable(this);

if(!util.isNull(ret))
this.emit('data', ret);

return ret;};


function chunkInvalid(state, chunk){
var er=null;
if(!util.isBuffer(chunk) && 
!util.isString(chunk) && 
!util.isNullOrUndefined(chunk) && 
!state.objectMode){
er = new TypeError('Invalid non-string/buffer chunk');}

return er;}



function onEofChunk(stream, state){
if(state.decoder && !state.ended){
var chunk=state.decoder.end();
if(chunk && chunk.length){
state.buffer.push(chunk);
state.length += state.objectMode?1:chunk.length;}}


state.ended = true;


emitReadable(stream);}





function emitReadable(stream){
var state=stream._readableState;
state.needReadable = false;
if(!state.emittedReadable){
debug('emitReadable', state.flowing);
state.emittedReadable = true;
if(state.sync)
process.nextTick(function(){
emitReadable_(stream);});else 


emitReadable_(stream);}}



function emitReadable_(stream){
debug('emit readable');
stream.emit('readable');
flow(stream);}









function maybeReadMore(stream, state){
if(!state.readingMore){
state.readingMore = true;
process.nextTick(function(){
maybeReadMore_(stream, state);});}}




function maybeReadMore_(stream, state){
var len=state.length;
while(!state.reading && !state.flowing && !state.ended && 
state.length < state.highWaterMark) {
debug('maybeReadMore read 0');
stream.read(0);
if(len === state.length)

break;else 

len = state.length;}

state.readingMore = false;}






Readable.prototype._read = function(n){
this.emit('error', new Error('not implemented'));};


Readable.prototype.pipe = function(dest, pipeOpts){
var src=this;
var state=this._readableState;

switch(state.pipesCount){
case 0:
state.pipes = dest;
break;
case 1:
state.pipes = [state.pipes, dest];
break;
default:
state.pipes.push(dest);
break;}

state.pipesCount += 1;
debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

var doEnd=(!pipeOpts || pipeOpts.end !== false) && 
dest !== process.stdout && 
dest !== process.stderr;

var endFn=doEnd?onend:cleanup;
if(state.endEmitted)
process.nextTick(endFn);else 

src.once('end', endFn);

dest.on('unpipe', onunpipe);
function onunpipe(readable){
debug('onunpipe');
if(readable === src){
cleanup();}}



function onend(){
debug('onend');
dest.end();}






var ondrain=pipeOnDrain(src);
dest.on('drain', ondrain);

function cleanup(){
debug('cleanup');

dest.removeListener('close', onclose);
dest.removeListener('finish', onfinish);
dest.removeListener('drain', ondrain);
dest.removeListener('error', onerror);
dest.removeListener('unpipe', onunpipe);
src.removeListener('end', onend);
src.removeListener('end', cleanup);
src.removeListener('data', ondata);






if(state.awaitDrain && (
!dest._writableState || dest._writableState.needDrain))
ondrain();}


src.on('data', ondata);
function ondata(chunk){
debug('ondata');
var ret=dest.write(chunk);
if(false === ret){
debug('false write response, pause', 
src._readableState.awaitDrain);
src._readableState.awaitDrain++;
src.pause();}}





function onerror(er){
debug('onerror', er);
unpipe();
dest.removeListener('error', onerror);
if(EE.listenerCount(dest, 'error') === 0)
dest.emit('error', er);}



if(!dest._events || !dest._events.error)
dest.on('error', onerror);else 
if(isArray(dest._events.error))
dest._events.error.unshift(onerror);else 

dest._events.error = [onerror, dest._events.error];




function onclose(){
dest.removeListener('finish', onfinish);
unpipe();}

dest.once('close', onclose);
function onfinish(){
debug('onfinish');
dest.removeListener('close', onclose);
unpipe();}

dest.once('finish', onfinish);

function unpipe(){
debug('unpipe');
src.unpipe(dest);}



dest.emit('pipe', src);


if(!state.flowing){
debug('pipe resume');
src.resume();}


return dest;};


function pipeOnDrain(src){
return function(){
var state=src._readableState;
debug('pipeOnDrain', state.awaitDrain);
if(state.awaitDrain)
state.awaitDrain--;
if(state.awaitDrain === 0 && EE.listenerCount(src, 'data')){
state.flowing = true;
flow(src);}};}





Readable.prototype.unpipe = function(dest){
var state=this._readableState;


if(state.pipesCount === 0)
return this;


if(state.pipesCount === 1){

if(dest && dest !== state.pipes)
return this;

if(!dest)
dest = state.pipes;


state.pipes = null;
state.pipesCount = 0;
state.flowing = false;
if(dest)
dest.emit('unpipe', this);
return this;}




if(!dest){

var dests=state.pipes;
var len=state.pipesCount;
state.pipes = null;
state.pipesCount = 0;
state.flowing = false;

for(var i=0; i < len; i++) 
dests[i].emit('unpipe', this);
return this;}



var i=indexOf(state.pipes, dest);
if(i === -1)
return this;

state.pipes.splice(i, 1);
state.pipesCount -= 1;
if(state.pipesCount === 1)
state.pipes = state.pipes[0];

dest.emit('unpipe', this);

return this;};




Readable.prototype.on = function(ev, fn){
var res=Stream.prototype.on.call(this, ev, fn);



if(ev === 'data' && false !== this._readableState.flowing){
this.resume();}


if(ev === 'readable' && this.readable){
var state=this._readableState;
if(!state.readableListening){
state.readableListening = true;
state.emittedReadable = false;
state.needReadable = true;
if(!state.reading){
var self=this;
process.nextTick(function(){
debug('readable nexttick read 0');
self.read(0);});}else 

if(state.length){
emitReadable(this, state);}}}




return res;};

Readable.prototype.addListener = Readable.prototype.on;



Readable.prototype.resume = function(){
var state=this._readableState;
if(!state.flowing){
debug('resume');
state.flowing = true;
if(!state.reading){
debug('resume read 0');
this.read(0);}

resume(this, state);}

return this;};


function resume(stream, state){
if(!state.resumeScheduled){
state.resumeScheduled = true;
process.nextTick(function(){
resume_(stream, state);});}}




function resume_(stream, state){
state.resumeScheduled = false;
stream.emit('resume');
flow(stream);
if(state.flowing && !state.reading)
stream.read(0);}


Readable.prototype.pause = function(){
debug('call pause flowing=%j', this._readableState.flowing);
if(false !== this._readableState.flowing){
debug('pause');
this._readableState.flowing = false;
this.emit('pause');}

return this;};


function flow(stream){
var state=stream._readableState;
debug('flow', state.flowing);
if(state.flowing){
do {
var chunk=stream.read();}while(
null !== chunk && state.flowing);}}






Readable.prototype.wrap = function(stream){
var state=this._readableState;
var paused=false;

var self=this;
stream.on('end', function(){
debug('wrapped end');
if(state.decoder && !state.ended){
var chunk=state.decoder.end();
if(chunk && chunk.length)
self.push(chunk);}


self.push(null);});


stream.on('data', function(chunk){
debug('wrapped data');
if(state.decoder)
chunk = state.decoder.write(chunk);
if(!chunk || !state.objectMode && !chunk.length)
return;

var ret=self.push(chunk);
if(!ret){
paused = true;
stream.pause();}});





for(var i in stream) {
if(util.isFunction(stream[i]) && util.isUndefined(this[i])){
this[i] = (function(method){return function(){
return stream[method].apply(stream, arguments);};})(
i);}}




var events=['error', 'close', 'destroy', 'pause', 'resume'];
forEach(events, function(ev){
stream.on(ev, self.emit.bind(self, ev));});




self._read = function(n){
debug('wrapped _read', n);
if(paused){
paused = false;
stream.resume();}};



return self;};





Readable._fromList = fromList;



function fromList(n, state){
var list=state.buffer;
var length=state.length;
var stringMode=!!state.decoder;
var objectMode=!!state.objectMode;
var ret;


if(list.length === 0)
return null;

if(length === 0)
ret = null;else 
if(objectMode)
ret = list.shift();else 
if(!n || n >= length){

if(stringMode)
ret = list.join('');else 

ret = Buffer.concat(list, length);
list.length = 0;}else 
{

if(n < list[0].length){


var buf=list[0];
ret = buf.slice(0, n);
list[0] = buf.slice(n);}else 
if(n === list[0].length){

ret = list.shift();}else 
{


if(stringMode)
ret = '';else 

ret = new Buffer(n);

var c=0;
for(var i=0, l=list.length; i < l && c < n; i++) {
var buf=list[0];
var cpy=Math.min(n - c, buf.length);

if(stringMode)
ret += buf.slice(0, cpy);else 

buf.copy(ret, c, 0, cpy);

if(cpy < buf.length)
list[0] = buf.slice(cpy);else 

list.shift();

c += cpy;}}}




return ret;}


function endReadable(stream){
var state=stream._readableState;



if(state.length > 0)
throw new Error('endReadable called on non-empty stream');

if(!state.endEmitted){
state.ended = true;
process.nextTick(function(){

if(!state.endEmitted && state.length === 0){
state.endEmitted = true;
stream.readable = false;
stream.emit('end');}});}}





function forEach(xs, f){
for(var i=0, l=xs.length; i < l; i++) {
f(xs[i], i);}}



function indexOf(xs, x){
for(var i=0, l=xs.length; i < l; i++) {
if(xs[i] === x)return i;}

return -1;}
});
__d('isarray/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = Array.isArray || function(arr){
return Object.prototype.toString.call(arr) == '[object Array]';};
});
__d('core-util-is/lib/util.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 






















isArray(ar){
return Array.isArray(ar);}

exports.isArray = isArray;

function isBoolean(arg){
return typeof arg === 'boolean';}

exports.isBoolean = isBoolean;

function isNull(arg){
return arg === null;}

exports.isNull = isNull;

function isNullOrUndefined(arg){
return arg == null;}

exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg){
return typeof arg === 'number';}

exports.isNumber = isNumber;

function isString(arg){
return typeof arg === 'string';}

exports.isString = isString;

function isSymbol(arg){
return typeof arg === 'symbol';}

exports.isSymbol = isSymbol;

function isUndefined(arg){
return arg === void 0;}

exports.isUndefined = isUndefined;

function isRegExp(re){
return isObject(re) && objectToString(re) === '[object RegExp]';}

exports.isRegExp = isRegExp;

function isObject(arg){
return typeof arg === 'object' && arg !== null;}

exports.isObject = isObject;

function isDate(d){
return isObject(d) && objectToString(d) === '[object Date]';}

exports.isDate = isDate;

function isError(e){
return isObject(e) && (
objectToString(e) === '[object Error]' || e instanceof Error);}

exports.isError = isError;

function isFunction(arg){
return typeof arg === 'function';}

exports.isFunction = isFunction;

function isPrimitive(arg){
return arg === null || 
typeof arg === 'boolean' || 
typeof arg === 'number' || 
typeof arg === 'string' || 
typeof arg === 'symbol' || 
typeof arg === 'undefined';}

exports.isPrimitive = isPrimitive;

function isBuffer(arg){
return Buffer.isBuffer(arg);}

exports.isBuffer = isBuffer;

function objectToString(o){
return Object.prototype.toString.call(o);}
});
__d('inherits/inherits_browser.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  if(typeof Object.create === 'function'){

module.exports = function inherits(ctor, superCtor){
ctor.super_ = superCtor;
ctor.prototype = Object.create(superCtor.prototype, {
constructor:{
value:ctor, 
enumerable:false, 
writable:true, 
configurable:true}});};}else 



{

module.exports = function inherits(ctor, superCtor){
ctor.super_ = superCtor;
var TempCtor=function(){};
TempCtor.prototype = superCtor.prototype;
ctor.prototype = new TempCtor();
ctor.prototype.constructor = ctor;};}
});
__d('readable-stream/lib/_stream_duplex.js',["core-util-is/lib/util.js","inherits/inherits_browser.js","readable-stream/lib/_stream_readable.js","readable-stream/lib/_stream_writable.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.

























exports = Duplex;


var objectKeys=Object.keys || function(obj){
var keys=[];
for(var key in obj) keys.push(key);
return keys;};





var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


var Readable=require('readable-stream/lib/_stream_readable.js');
var Writable=require('readable-stream/lib/_stream_writable.js');

util.inherits(Duplex, Readable);

forEach(objectKeys(Writable.prototype), function(method){
if(!Duplex.prototype[method])
Duplex.prototype[method] = Writable.prototype[method];});


function Duplex(options){
if(!(this instanceof Duplex))
return new Duplex(options);

Readable.call(this, options);
Writable.call(this, options);

if(options && options.readable === false)
this.readable = false;

if(options && options.writable === false)
this.writable = false;

this.allowHalfOpen = true;
if(options && options.allowHalfOpen === false)
this.allowHalfOpen = false;

this.once('end', onend);}



function onend(){


if(this.allowHalfOpen || this._writableState.ended)
return;



process.nextTick(this.end.bind(this));}


function forEach(xs, f){
for(var i=0, l=xs.length; i < l; i++) {
f(xs[i], i);}}
});
__d('readable-stream/lib/_stream_writable.js',["core-util-is/lib/util.js","inherits/inherits_browser.js","readable-stream/lib/_stream_duplex.js","readable-stream/lib/_stream_duplex.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.
























exports = Writable;


var Buffer=require('buffer').Buffer;


Writable.WritableState = WritableState;



var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


var Stream=require('stream');

util.inherits(Writable, Stream);

function WriteReq(chunk, encoding, cb){
this.chunk = chunk;
this.encoding = encoding;
this.callback = cb;}


function WritableState(options, stream){
var Duplex=require('readable-stream/lib/_stream_duplex.js');

options = options || {};




var hwm=options.highWaterMark;
var defaultHwm=options.objectMode?16:16 * 1024;
this.highWaterMark = hwm || hwm === 0?hwm:defaultHwm;



this.objectMode = !!options.objectMode;

if(stream instanceof Duplex)
this.objectMode = this.objectMode || !!options.writableObjectMode;


this.highWaterMark = ~ ~this.highWaterMark;

this.needDrain = false;

this.ending = false;

this.ended = false;

this.finished = false;




var noDecode=options.decodeStrings === false;
this.decodeStrings = !noDecode;




this.defaultEncoding = options.defaultEncoding || 'utf8';




this.length = 0;


this.writing = false;


this.corked = 0;





this.sync = true;




this.bufferProcessing = false;


this.onwrite = function(er){
onwrite(stream, er);};



this.writecb = null;


this.writelen = 0;

this.buffer = [];



this.pendingcb = 0;



this.prefinished = false;


this.errorEmitted = false;}


function Writable(options){
var Duplex=require('readable-stream/lib/_stream_duplex.js');



if(!(this instanceof Writable) && !(this instanceof Duplex))
return new Writable(options);

this._writableState = new WritableState(options, this);


this.writable = true;

Stream.call(this);}



Writable.prototype.pipe = function(){
this.emit('error', new Error('Cannot pipe. Not readable.'));};



function writeAfterEnd(stream, state, cb){
var er=new Error('write after end');

stream.emit('error', er);
process.nextTick(function(){
cb(er);});}








function validChunk(stream, state, chunk, cb){
var valid=true;
if(!util.isBuffer(chunk) && 
!util.isString(chunk) && 
!util.isNullOrUndefined(chunk) && 
!state.objectMode){
var er=new TypeError('Invalid non-string/buffer chunk');
stream.emit('error', er);
process.nextTick(function(){
cb(er);});

valid = false;}

return valid;}


Writable.prototype.write = function(chunk, encoding, cb){
var state=this._writableState;
var ret=false;

if(util.isFunction(encoding)){
cb = encoding;
encoding = null;}


if(util.isBuffer(chunk))
encoding = 'buffer';else 
if(!encoding)
encoding = state.defaultEncoding;

if(!util.isFunction(cb))
cb = function(){};

if(state.ended)
writeAfterEnd(this, state, cb);else 
if(validChunk(this, state, chunk, cb)){
state.pendingcb++;
ret = writeOrBuffer(this, state, chunk, encoding, cb);}


return ret;};


Writable.prototype.cork = function(){
var state=this._writableState;

state.corked++;};


Writable.prototype.uncork = function(){
var state=this._writableState;

if(state.corked){
state.corked--;

if(!state.writing && 
!state.corked && 
!state.finished && 
!state.bufferProcessing && 
state.buffer.length)
clearBuffer(this, state);}};



function decodeChunk(state, chunk, encoding){
if(!state.objectMode && 
state.decodeStrings !== false && 
util.isString(chunk)){
chunk = new Buffer(chunk, encoding);}

return chunk;}





function writeOrBuffer(stream, state, chunk, encoding, cb){
chunk = decodeChunk(state, chunk, encoding);
if(util.isBuffer(chunk))
encoding = 'buffer';
var len=state.objectMode?1:chunk.length;

state.length += len;

var ret=state.length < state.highWaterMark;

if(!ret)
state.needDrain = true;

if(state.writing || state.corked)
state.buffer.push(new WriteReq(chunk, encoding, cb));else 

doWrite(stream, state, false, len, chunk, encoding, cb);

return ret;}


function doWrite(stream, state, writev, len, chunk, encoding, cb){
state.writelen = len;
state.writecb = cb;
state.writing = true;
state.sync = true;
if(writev)
stream._writev(chunk, state.onwrite);else 

stream._write(chunk, encoding, state.onwrite);
state.sync = false;}


function onwriteError(stream, state, sync, er, cb){
if(sync)
process.nextTick(function(){
state.pendingcb--;
cb(er);});else 

{
state.pendingcb--;
cb(er);}


stream._writableState.errorEmitted = true;
stream.emit('error', er);}


function onwriteStateUpdate(state){
state.writing = false;
state.writecb = null;
state.length -= state.writelen;
state.writelen = 0;}


function onwrite(stream, er){
var state=stream._writableState;
var sync=state.sync;
var cb=state.writecb;

onwriteStateUpdate(state);

if(er)
onwriteError(stream, state, sync, er, cb);else 
{

var finished=needFinish(stream, state);

if(!finished && 
!state.corked && 
!state.bufferProcessing && 
state.buffer.length){
clearBuffer(stream, state);}


if(sync){
process.nextTick(function(){
afterWrite(stream, state, finished, cb);});}else 

{
afterWrite(stream, state, finished, cb);}}}




function afterWrite(stream, state, finished, cb){
if(!finished)
onwriteDrain(stream, state);
state.pendingcb--;
cb();
finishMaybe(stream, state);}





function onwriteDrain(stream, state){
if(state.length === 0 && state.needDrain){
state.needDrain = false;
stream.emit('drain');}}





function clearBuffer(stream, state){
state.bufferProcessing = true;

if(stream._writev && state.buffer.length > 1){

var cbs=[];
for(var c=0; c < state.buffer.length; c++) 
cbs.push(state.buffer[c].callback);



state.pendingcb++;
doWrite(stream, state, true, state.length, state.buffer, '', function(err){
for(var i=0; i < cbs.length; i++) {
state.pendingcb--;
cbs[i](err);}});




state.buffer = [];}else 
{

for(var c=0; c < state.buffer.length; c++) {
var entry=state.buffer[c];
var chunk=entry.chunk;
var encoding=entry.encoding;
var cb=entry.callback;
var len=state.objectMode?1:chunk.length;

doWrite(stream, state, false, len, chunk, encoding, cb);





if(state.writing){
c++;
break;}}



if(c < state.buffer.length)
state.buffer = state.buffer.slice(c);else 

state.buffer.length = 0;}


state.bufferProcessing = false;}


Writable.prototype._write = function(chunk, encoding, cb){
cb(new Error('not implemented'));};



Writable.prototype._writev = null;

Writable.prototype.end = function(chunk, encoding, cb){
var state=this._writableState;

if(util.isFunction(chunk)){
cb = chunk;
chunk = null;
encoding = null;}else 
if(util.isFunction(encoding)){
cb = encoding;
encoding = null;}


if(!util.isNullOrUndefined(chunk))
this.write(chunk, encoding);


if(state.corked){
state.corked = 1;
this.uncork();}



if(!state.ending && !state.finished)
endWritable(this, state, cb);};



function needFinish(stream, state){
return state.ending && 
state.length === 0 && 
!state.finished && 
!state.writing;}


function prefinish(stream, state){
if(!state.prefinished){
state.prefinished = true;
stream.emit('prefinish');}}



function finishMaybe(stream, state){
var need=needFinish(stream, state);
if(need){
if(state.pendingcb === 0){
prefinish(stream, state);
state.finished = true;
stream.emit('finish');}else 

prefinish(stream, state);}

return need;}


function endWritable(stream, state, cb){
state.ending = true;
finishMaybe(stream, state);
if(cb){
if(state.finished)
process.nextTick(cb);else 

stream.once('finish', cb);}

state.ended = true;}
});
__d('string_decoder/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




















Buffer=require('buffer').Buffer;

var isBufferEncoding=Buffer.isEncoding || 
function(encoding){
switch(encoding && encoding.toLowerCase()){
case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':return true;
default:return false;}};




function assertEncoding(encoding){
if(encoding && !isBufferEncoding(encoding)){
throw new Error('Unknown encoding: ' + encoding);}}











var StringDecoder=exports.StringDecoder = function(encoding){
this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
assertEncoding(encoding);
switch(this.encoding){
case 'utf8':

this.surrogateSize = 3;
break;
case 'ucs2':
case 'utf16le':

this.surrogateSize = 2;
this.detectIncompleteChar = utf16DetectIncompleteChar;
break;
case 'base64':

this.surrogateSize = 3;
this.detectIncompleteChar = base64DetectIncompleteChar;
break;
default:
this.write = passThroughWrite;
return;}




this.charBuffer = new Buffer(6);

this.charReceived = 0;

this.charLength = 0;};












StringDecoder.prototype.write = function(buffer){
var charStr='';

while(this.charLength) {

var available=buffer.length >= this.charLength - this.charReceived?
this.charLength - this.charReceived:
buffer.length;


buffer.copy(this.charBuffer, this.charReceived, 0, available);
this.charReceived += available;

if(this.charReceived < this.charLength){

return '';}



buffer = buffer.slice(available, buffer.length);


charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);


var charCode=charStr.charCodeAt(charStr.length - 1);
if(charCode >= 0xD800 && charCode <= 0xDBFF){
this.charLength += this.surrogateSize;
charStr = '';
continue;}

this.charReceived = this.charLength = 0;


if(buffer.length === 0){
return charStr;}

break;}



this.detectIncompleteChar(buffer);

var end=buffer.length;
if(this.charLength){

buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
end -= this.charReceived;}


charStr += buffer.toString(this.encoding, 0, end);

var end=charStr.length - 1;
var charCode=charStr.charCodeAt(end);

if(charCode >= 0xD800 && charCode <= 0xDBFF){
var size=this.surrogateSize;
this.charLength += size;
this.charReceived += size;
this.charBuffer.copy(this.charBuffer, size, 0, size);
buffer.copy(this.charBuffer, 0, 0, size);
return charStr.substring(0, end);}



return charStr;};






StringDecoder.prototype.detectIncompleteChar = function(buffer){

var i=buffer.length >= 3?3:buffer.length;



for(; i > 0; i--) {
var c=buffer[buffer.length - i];




if(i == 1 && c >> 5 == 0x06){
this.charLength = 2;
break;}



if(i <= 2 && c >> 4 == 0x0E){
this.charLength = 3;
break;}



if(i <= 3 && c >> 3 == 0x1E){
this.charLength = 4;
break;}}


this.charReceived = i;};


StringDecoder.prototype.end = function(buffer){
var res='';
if(buffer && buffer.length)
res = this.write(buffer);

if(this.charReceived){
var cr=this.charReceived;
var buf=this.charBuffer;
var enc=this.encoding;
res += buf.slice(0, cr).toString(enc);}


return res;};


function passThroughWrite(buffer){
return buffer.toString(this.encoding);}


function utf16DetectIncompleteChar(buffer){
this.charReceived = buffer.length % 2;
this.charLength = this.charReceived?2:0;}


function base64DetectIncompleteChar(buffer){
this.charReceived = buffer.length % 3;
this.charLength = this.charReceived?3:0;}
});
__d('readable-stream/lib/_stream_transform.js',["readable-stream/lib/_stream_duplex.js","core-util-is/lib/util.js","inherits/inherits_browser.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.































































exports = Transform;

var Duplex=require('readable-stream/lib/_stream_duplex.js');


var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


util.inherits(Transform, Duplex);


function TransformState(options, stream){
this.afterTransform = function(er, data){
return afterTransform(stream, er, data);};


this.needTransform = false;
this.transforming = false;
this.writecb = null;
this.writechunk = null;}


function afterTransform(stream, er, data){
var ts=stream._transformState;
ts.transforming = false;

var cb=ts.writecb;

if(!cb)
return stream.emit('error', new Error('no writecb in Transform class'));

ts.writechunk = null;
ts.writecb = null;

if(!util.isNullOrUndefined(data))
stream.push(data);

if(cb)
cb(er);

var rs=stream._readableState;
rs.reading = false;
if(rs.needReadable || rs.length < rs.highWaterMark){
stream._read(rs.highWaterMark);}}




function Transform(options){
if(!(this instanceof Transform))
return new Transform(options);

Duplex.call(this, options);

this._transformState = new TransformState(options, this);


var stream=this;


this._readableState.needReadable = true;




this._readableState.sync = false;

this.once('prefinish', function(){
if(util.isFunction(this._flush))
this._flush(function(er){
done(stream, er);});else 


done(stream);});}



Transform.prototype.push = function(chunk, encoding){
this._transformState.needTransform = false;
return Duplex.prototype.push.call(this, chunk, encoding);};












Transform.prototype._transform = function(chunk, encoding, cb){
throw new Error('not implemented');};


Transform.prototype._write = function(chunk, encoding, cb){
var ts=this._transformState;
ts.writecb = cb;
ts.writechunk = chunk;
ts.writeencoding = encoding;
if(!ts.transforming){
var rs=this._readableState;
if(ts.needTransform || 
rs.needReadable || 
rs.length < rs.highWaterMark)
this._read(rs.highWaterMark);}};






Transform.prototype._read = function(n){
var ts=this._transformState;

if(!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming){
ts.transforming = true;
this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);}else 
{


ts.needTransform = true;}};




function done(stream, er){
if(er)
return stream.emit('error', er);



var ws=stream._writableState;
var ts=stream._transformState;

if(ws.length)
throw new Error('calling transform done when ws.length != 0');

if(ts.transforming)
throw new Error('calling transform done when still transforming');

return stream.push(null);}
});
__d('readable-stream/lib/_stream_passthrough.js',["readable-stream/lib/_stream_transform.js","core-util-is/lib/util.js","inherits/inherits_browser.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.
























exports = PassThrough;

var Transform=require('readable-stream/lib/_stream_transform.js');


var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


util.inherits(PassThrough, Transform);

function PassThrough(options){
if(!(this instanceof PassThrough))
return new PassThrough(options);

Transform.call(this, options);}


PassThrough.prototype._transform = function(chunk, encoding, cb){
cb(null, chunk);};
});
__d('htmlparser2/lib/ProxyHandler.js',["htmlparser2/lib/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = ProxyHandler;

function ProxyHandler(cbs){
this._cbs = cbs || {};}


var EVENTS=require("htmlparser2/lib/index.js").EVENTS;
Object.keys(EVENTS).forEach(function(name){
if(EVENTS[name] === 0){
name = "on" + name;
ProxyHandler.prototype[name] = function(){
if(this._cbs[name])this._cbs[name]();};}else 

if(EVENTS[name] === 1){
name = "on" + name;
ProxyHandler.prototype[name] = function(a){
if(this._cbs[name])this._cbs[name](a);};}else 

if(EVENTS[name] === 2){
name = "on" + name;
ProxyHandler.prototype[name] = function(a, b){
if(this._cbs[name])this._cbs[name](a, b);};}else 

{
throw Error("wrong number of arguments");}});
});
__d('domutils/index.js',["domutils/lib/stringify.js","domutils/lib/traversal.js","domutils/lib/manipulation.js","domutils/lib/querying.js","domutils/lib/legacy.js","domutils/lib/helpers.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var DomUtils=module.exports;

[
require("domutils/lib/stringify.js"), 
require("domutils/lib/traversal.js"), 
require("domutils/lib/manipulation.js"), 
require("domutils/lib/querying.js"), 
require("domutils/lib/legacy.js"), 
require("domutils/lib/helpers.js")].
forEach(function(ext){
Object.keys(ext).forEach(function(key){
DomUtils[key] = ext[key].bind(DomUtils);});});
});
__d('domutils/lib/stringify.js',["domelementtype/index.js","dom-serializer/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var ElementType=require("domelementtype/index.js"), 
getOuterHTML=require("dom-serializer/index.js"), 
isTag=ElementType.isTag;

module.exports = {
getInnerHTML:getInnerHTML, 
getOuterHTML:getOuterHTML, 
getText:getText};


function getInnerHTML(elem, opts){
return elem.children?elem.children.map(function(elem){
return getOuterHTML(elem, opts);}).
join(""):"";}


function getText(elem){
if(Array.isArray(elem))return elem.map(getText).join("");
if(isTag(elem) || elem.type === ElementType.CDATA)return getText(elem.children);
if(elem.type === ElementType.Text)return elem.data;
return "";}
});
__d('dom-serializer/index.js',["domelementtype/index.js","entities/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 


ElementType=require('domelementtype/index.js');
var entities=require('entities/index.js');




var booleanAttributes={
__proto__:null, 
allowfullscreen:true, 
async:true, 
autofocus:true, 
autoplay:true, 
checked:true, 
controls:true, 
default:true, 
defer:true, 
disabled:true, 
hidden:true, 
ismap:true, 
loop:true, 
multiple:true, 
muted:true, 
open:true, 
readonly:true, 
required:true, 
reversed:true, 
scoped:true, 
seamless:true, 
selected:true, 
typemustmatch:true};


var unencodedElements={
__proto__:null, 
style:true, 
script:true, 
xmp:true, 
iframe:true, 
noembed:true, 
noframes:true, 
plaintext:true, 
noscript:true};





function formatAttrs(attributes, opts){
if(!attributes)return;

var output='', 
value;


for(var key in attributes) {
value = attributes[key];
if(output){
output += ' ';}


if(!value && booleanAttributes[key]){
output += key;}else 
{
output += key + '="' + (opts.decodeEntities?entities.encodeXML(value):value) + '"';}}



return output;}





var singleTag={
__proto__:null, 
area:true, 
base:true, 
basefont:true, 
br:true, 
col:true, 
command:true, 
embed:true, 
frame:true, 
hr:true, 
img:true, 
input:true, 
isindex:true, 
keygen:true, 
link:true, 
meta:true, 
param:true, 
source:true, 
track:true, 
wbr:true};



var render=module.exports = function(dom, opts){
if(!Array.isArray(dom) && !dom.cheerio)dom = [dom];
opts = opts || {};

var output='';

for(var i=0; i < dom.length; i++) {
var elem=dom[i];

if(elem.type === 'root')
output += render(elem.children, opts);else 
if(ElementType.isTag(elem))
output += renderTag(elem, opts);else 
if(elem.type === ElementType.Directive)
output += renderDirective(elem);else 
if(elem.type === ElementType.Comment)
output += renderComment(elem);else 
if(elem.type === ElementType.CDATA)
output += renderCdata(elem);else 

output += renderText(elem, opts);}


return output;};


function renderTag(elem, opts){

if(elem.name === 'svg')opts = {decodeEntities:opts.decodeEntities, xmlMode:true};

var tag='<' + elem.name, 
attribs=formatAttrs(elem.attribs, opts);

if(attribs){
tag += ' ' + attribs;}


if(
opts.xmlMode && (
!elem.children || elem.children.length === 0))
{
tag += '/>';}else 
{
tag += '>';
if(elem.children){
tag += render(elem.children, opts);}


if(!singleTag[elem.name] || opts.xmlMode){
tag += '</' + elem.name + '>';}}



return tag;}


function renderDirective(elem){
return '<' + elem.data + '>';}


function renderText(elem, opts){
var data=elem.data || '';


if(opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)){
data = entities.encodeXML(data);}


return data;}


function renderCdata(elem){
return '<![CDATA[' + elem.children[0].data + ']]>';}


function renderComment(elem){
return '<!--' + elem.data + '-->';}
});
__d('domelementtype/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.
exports = {
Text:"text", 
Directive:"directive", 
Comment:"comment", 
Script:"script", 
Style:"style", 
Tag:"tag", 
CDATA:"cdata", 

isTag:function(elem){
return elem.type === "tag" || elem.type === "script" || elem.type === "style";}};
});
__d('entities/index.js',["entities/lib/encode.js","entities/lib/decode.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var encode=require("entities/lib/encode.js"), 
decode=require("entities/lib/decode.js");

exports.decode = function(data, level){
return (!level || level <= 0?decode.XML:decode.HTML)(data);};


exports.decodeStrict = function(data, level){
return (!level || level <= 0?decode.XML:decode.HTMLStrict)(data);};


exports.encode = function(data, level){
return (!level || level <= 0?encode.XML:encode.HTML)(data);};


exports.encodeXML = encode.XML;

exports.encodeHTML4 = 
exports.encodeHTML5 = 
exports.encodeHTML = encode.HTML;

exports.decodeXML = 
exports.decodeXMLStrict = decode.XML;

exports.decodeHTML4 = 
exports.decodeHTML5 = 
exports.decodeHTML = decode.HTML;

exports.decodeHTML4Strict = 
exports.decodeHTML5Strict = 
exports.decodeHTMLStrict = decode.HTMLStrict;

exports.escape = encode.escape;
});
__d('entities/lib/encode.js',["entities/maps/xml.json","entities/maps/entities.json"],function(global, require, requireDynamic, requireLazy, module, exports) {  var inverseXML=getInverseObj(require("entities/maps/xml.json")), 
xmlReplacer=getInverseReplacer(inverseXML);

exports.XML = getInverse(inverseXML, xmlReplacer);

var inverseHTML=getInverseObj(require("entities/maps/entities.json")), 
htmlReplacer=getInverseReplacer(inverseHTML);

exports.HTML = getInverse(inverseHTML, htmlReplacer);

function getInverseObj(obj){
return Object.keys(obj).sort().reduce(function(inverse, name){
inverse[obj[name]] = "&" + name + ";";
return inverse;}, 
{});}


function getInverseReplacer(inverse){
var single=[], 
multiple=[];

Object.keys(inverse).forEach(function(k){
if(k.length === 1){
single.push("\\" + k);}else 
{
multiple.push(k);}});




multiple.unshift("[" + single.join("") + "]");

return new RegExp(multiple.join("|"), "g");}


var re_nonASCII=/[^\0-\x7F]/g, 
re_astralSymbols=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;

function singleCharReplacer(c){
return "&#x" + c.charCodeAt(0).toString(16).toUpperCase() + ";";}


function astralReplacer(c){

var high=c.charCodeAt(0);
var low=c.charCodeAt(1);
var codePoint=(high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;
return "&#x" + codePoint.toString(16).toUpperCase() + ";";}


function getInverse(inverse, re){
function func(name){
return inverse[name];}


return function(data){
return data.
replace(re, func).
replace(re_astralSymbols, astralReplacer).
replace(re_nonASCII, singleCharReplacer);};}



var re_xmlChars=getInverseReplacer(inverseXML);

function escapeXML(data){
return data.
replace(re_xmlChars, singleCharReplacer).
replace(re_astralSymbols, astralReplacer).
replace(re_nonASCII, singleCharReplacer);}


exports.escape = escapeXML;
});
__d('entities/maps/xml.json',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"amp":"&","apos":"'","gt":">","lt":"<","quot":"\""}
;
});
__d('entities/maps/entities.json',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"Aacute":"\u00C1","aacute":"\u00E1","Abreve":"\u0102","abreve":"\u0103","ac":"\u223E","acd":"\u223F","acE":"\u223E\u0333","Acirc":"\u00C2","acirc":"\u00E2","acute":"\u00B4","Acy":"\u0410","acy":"\u0430","AElig":"\u00C6","aelig":"\u00E6","af":"\u2061","Afr":"\uD835\uDD04","afr":"\uD835\uDD1E","Agrave":"\u00C0","agrave":"\u00E0","alefsym":"\u2135","aleph":"\u2135","Alpha":"\u0391","alpha":"\u03B1","Amacr":"\u0100","amacr":"\u0101","amalg":"\u2A3F","amp":"&","AMP":"&","andand":"\u2A55","And":"\u2A53","and":"\u2227","andd":"\u2A5C","andslope":"\u2A58","andv":"\u2A5A","ang":"\u2220","ange":"\u29A4","angle":"\u2220","angmsdaa":"\u29A8","angmsdab":"\u29A9","angmsdac":"\u29AA","angmsdad":"\u29AB","angmsdae":"\u29AC","angmsdaf":"\u29AD","angmsdag":"\u29AE","angmsdah":"\u29AF","angmsd":"\u2221","angrt":"\u221F","angrtvb":"\u22BE","angrtvbd":"\u299D","angsph":"\u2222","angst":"\u00C5","angzarr":"\u237C","Aogon":"\u0104","aogon":"\u0105","Aopf":"\uD835\uDD38","aopf":"\uD835\uDD52","apacir":"\u2A6F","ap":"\u2248","apE":"\u2A70","ape":"\u224A","apid":"\u224B","apos":"'","ApplyFunction":"\u2061","approx":"\u2248","approxeq":"\u224A","Aring":"\u00C5","aring":"\u00E5","Ascr":"\uD835\uDC9C","ascr":"\uD835\uDCB6","Assign":"\u2254","ast":"*","asymp":"\u2248","asympeq":"\u224D","Atilde":"\u00C3","atilde":"\u00E3","Auml":"\u00C4","auml":"\u00E4","awconint":"\u2233","awint":"\u2A11","backcong":"\u224C","backepsilon":"\u03F6","backprime":"\u2035","backsim":"\u223D","backsimeq":"\u22CD","Backslash":"\u2216","Barv":"\u2AE7","barvee":"\u22BD","barwed":"\u2305","Barwed":"\u2306","barwedge":"\u2305","bbrk":"\u23B5","bbrktbrk":"\u23B6","bcong":"\u224C","Bcy":"\u0411","bcy":"\u0431","bdquo":"\u201E","becaus":"\u2235","because":"\u2235","Because":"\u2235","bemptyv":"\u29B0","bepsi":"\u03F6","bernou":"\u212C","Bernoullis":"\u212C","Beta":"\u0392","beta":"\u03B2","beth":"\u2136","between":"\u226C","Bfr":"\uD835\uDD05","bfr":"\uD835\uDD1F","bigcap":"\u22C2","bigcirc":"\u25EF","bigcup":"\u22C3","bigodot":"\u2A00","bigoplus":"\u2A01","bigotimes":"\u2A02","bigsqcup":"\u2A06","bigstar":"\u2605","bigtriangledown":"\u25BD","bigtriangleup":"\u25B3","biguplus":"\u2A04","bigvee":"\u22C1","bigwedge":"\u22C0","bkarow":"\u290D","blacklozenge":"\u29EB","blacksquare":"\u25AA","blacktriangle":"\u25B4","blacktriangledown":"\u25BE","blacktriangleleft":"\u25C2","blacktriangleright":"\u25B8","blank":"\u2423","blk12":"\u2592","blk14":"\u2591","blk34":"\u2593","block":"\u2588","bne":"=\u20E5","bnequiv":"\u2261\u20E5","bNot":"\u2AED","bnot":"\u2310","Bopf":"\uD835\uDD39","bopf":"\uD835\uDD53","bot":"\u22A5","bottom":"\u22A5","bowtie":"\u22C8","boxbox":"\u29C9","boxdl":"\u2510","boxdL":"\u2555","boxDl":"\u2556","boxDL":"\u2557","boxdr":"\u250C","boxdR":"\u2552","boxDr":"\u2553","boxDR":"\u2554","boxh":"\u2500","boxH":"\u2550","boxhd":"\u252C","boxHd":"\u2564","boxhD":"\u2565","boxHD":"\u2566","boxhu":"\u2534","boxHu":"\u2567","boxhU":"\u2568","boxHU":"\u2569","boxminus":"\u229F","boxplus":"\u229E","boxtimes":"\u22A0","boxul":"\u2518","boxuL":"\u255B","boxUl":"\u255C","boxUL":"\u255D","boxur":"\u2514","boxuR":"\u2558","boxUr":"\u2559","boxUR":"\u255A","boxv":"\u2502","boxV":"\u2551","boxvh":"\u253C","boxvH":"\u256A","boxVh":"\u256B","boxVH":"\u256C","boxvl":"\u2524","boxvL":"\u2561","boxVl":"\u2562","boxVL":"\u2563","boxvr":"\u251C","boxvR":"\u255E","boxVr":"\u255F","boxVR":"\u2560","bprime":"\u2035","breve":"\u02D8","Breve":"\u02D8","brvbar":"\u00A6","bscr":"\uD835\uDCB7","Bscr":"\u212C","bsemi":"\u204F","bsim":"\u223D","bsime":"\u22CD","bsolb":"\u29C5","bsol":"\\","bsolhsub":"\u27C8","bull":"\u2022","bullet":"\u2022","bump":"\u224E","bumpE":"\u2AAE","bumpe":"\u224F","Bumpeq":"\u224E","bumpeq":"\u224F","Cacute":"\u0106","cacute":"\u0107","capand":"\u2A44","capbrcup":"\u2A49","capcap":"\u2A4B","cap":"\u2229","Cap":"\u22D2","capcup":"\u2A47","capdot":"\u2A40","CapitalDifferentialD":"\u2145","caps":"\u2229\uFE00","caret":"\u2041","caron":"\u02C7","Cayleys":"\u212D","ccaps":"\u2A4D","Ccaron":"\u010C","ccaron":"\u010D","Ccedil":"\u00C7","ccedil":"\u00E7","Ccirc":"\u0108","ccirc":"\u0109","Cconint":"\u2230","ccups":"\u2A4C","ccupssm":"\u2A50","Cdot":"\u010A","cdot":"\u010B","cedil":"\u00B8","Cedilla":"\u00B8","cemptyv":"\u29B2","cent":"\u00A2","centerdot":"\u00B7","CenterDot":"\u00B7","cfr":"\uD835\uDD20","Cfr":"\u212D","CHcy":"\u0427","chcy":"\u0447","check":"\u2713","checkmark":"\u2713","Chi":"\u03A7","chi":"\u03C7","circ":"\u02C6","circeq":"\u2257","circlearrowleft":"\u21BA","circlearrowright":"\u21BB","circledast":"\u229B","circledcirc":"\u229A","circleddash":"\u229D","CircleDot":"\u2299","circledR":"\u00AE","circledS":"\u24C8","CircleMinus":"\u2296","CirclePlus":"\u2295","CircleTimes":"\u2297","cir":"\u25CB","cirE":"\u29C3","cire":"\u2257","cirfnint":"\u2A10","cirmid":"\u2AEF","cirscir":"\u29C2","ClockwiseContourIntegral":"\u2232","CloseCurlyDoubleQuote":"\u201D","CloseCurlyQuote":"\u2019","clubs":"\u2663","clubsuit":"\u2663","colon":":","Colon":"\u2237","Colone":"\u2A74","colone":"\u2254","coloneq":"\u2254","comma":",","commat":"@","comp":"\u2201","compfn":"\u2218","complement":"\u2201","complexes":"\u2102","cong":"\u2245","congdot":"\u2A6D","Congruent":"\u2261","conint":"\u222E","Conint":"\u222F","ContourIntegral":"\u222E","copf":"\uD835\uDD54","Copf":"\u2102","coprod":"\u2210","Coproduct":"\u2210","copy":"\u00A9","COPY":"\u00A9","copysr":"\u2117","CounterClockwiseContourIntegral":"\u2233","crarr":"\u21B5","cross":"\u2717","Cross":"\u2A2F","Cscr":"\uD835\uDC9E","cscr":"\uD835\uDCB8","csub":"\u2ACF","csube":"\u2AD1","csup":"\u2AD0","csupe":"\u2AD2","ctdot":"\u22EF","cudarrl":"\u2938","cudarrr":"\u2935","cuepr":"\u22DE","cuesc":"\u22DF","cularr":"\u21B6","cularrp":"\u293D","cupbrcap":"\u2A48","cupcap":"\u2A46","CupCap":"\u224D","cup":"\u222A","Cup":"\u22D3","cupcup":"\u2A4A","cupdot":"\u228D","cupor":"\u2A45","cups":"\u222A\uFE00","curarr":"\u21B7","curarrm":"\u293C","curlyeqprec":"\u22DE","curlyeqsucc":"\u22DF","curlyvee":"\u22CE","curlywedge":"\u22CF","curren":"\u00A4","curvearrowleft":"\u21B6","curvearrowright":"\u21B7","cuvee":"\u22CE","cuwed":"\u22CF","cwconint":"\u2232","cwint":"\u2231","cylcty":"\u232D","dagger":"\u2020","Dagger":"\u2021","daleth":"\u2138","darr":"\u2193","Darr":"\u21A1","dArr":"\u21D3","dash":"\u2010","Dashv":"\u2AE4","dashv":"\u22A3","dbkarow":"\u290F","dblac":"\u02DD","Dcaron":"\u010E","dcaron":"\u010F","Dcy":"\u0414","dcy":"\u0434","ddagger":"\u2021","ddarr":"\u21CA","DD":"\u2145","dd":"\u2146","DDotrahd":"\u2911","ddotseq":"\u2A77","deg":"\u00B0","Del":"\u2207","Delta":"\u0394","delta":"\u03B4","demptyv":"\u29B1","dfisht":"\u297F","Dfr":"\uD835\uDD07","dfr":"\uD835\uDD21","dHar":"\u2965","dharl":"\u21C3","dharr":"\u21C2","DiacriticalAcute":"\u00B4","DiacriticalDot":"\u02D9","DiacriticalDoubleAcute":"\u02DD","DiacriticalGrave":"`","DiacriticalTilde":"\u02DC","diam":"\u22C4","diamond":"\u22C4","Diamond":"\u22C4","diamondsuit":"\u2666","diams":"\u2666","die":"\u00A8","DifferentialD":"\u2146","digamma":"\u03DD","disin":"\u22F2","div":"\u00F7","divide":"\u00F7","divideontimes":"\u22C7","divonx":"\u22C7","DJcy":"\u0402","djcy":"\u0452","dlcorn":"\u231E","dlcrop":"\u230D","dollar":"$","Dopf":"\uD835\uDD3B","dopf":"\uD835\uDD55","Dot":"\u00A8","dot":"\u02D9","DotDot":"\u20DC","doteq":"\u2250","doteqdot":"\u2251","DotEqual":"\u2250","dotminus":"\u2238","dotplus":"\u2214","dotsquare":"\u22A1","doublebarwedge":"\u2306","DoubleContourIntegral":"\u222F","DoubleDot":"\u00A8","DoubleDownArrow":"\u21D3","DoubleLeftArrow":"\u21D0","DoubleLeftRightArrow":"\u21D4","DoubleLeftTee":"\u2AE4","DoubleLongLeftArrow":"\u27F8","DoubleLongLeftRightArrow":"\u27FA","DoubleLongRightArrow":"\u27F9","DoubleRightArrow":"\u21D2","DoubleRightTee":"\u22A8","DoubleUpArrow":"\u21D1","DoubleUpDownArrow":"\u21D5","DoubleVerticalBar":"\u2225","DownArrowBar":"\u2913","downarrow":"\u2193","DownArrow":"\u2193","Downarrow":"\u21D3","DownArrowUpArrow":"\u21F5","DownBreve":"\u0311","downdownarrows":"\u21CA","downharpoonleft":"\u21C3","downharpoonright":"\u21C2","DownLeftRightVector":"\u2950","DownLeftTeeVector":"\u295E","DownLeftVectorBar":"\u2956","DownLeftVector":"\u21BD","DownRightTeeVector":"\u295F","DownRightVectorBar":"\u2957","DownRightVector":"\u21C1","DownTeeArrow":"\u21A7","DownTee":"\u22A4","drbkarow":"\u2910","drcorn":"\u231F","drcrop":"\u230C","Dscr":"\uD835\uDC9F","dscr":"\uD835\uDCB9","DScy":"\u0405","dscy":"\u0455","dsol":"\u29F6","Dstrok":"\u0110","dstrok":"\u0111","dtdot":"\u22F1","dtri":"\u25BF","dtrif":"\u25BE","duarr":"\u21F5","duhar":"\u296F","dwangle":"\u29A6","DZcy":"\u040F","dzcy":"\u045F","dzigrarr":"\u27FF","Eacute":"\u00C9","eacute":"\u00E9","easter":"\u2A6E","Ecaron":"\u011A","ecaron":"\u011B","Ecirc":"\u00CA","ecirc":"\u00EA","ecir":"\u2256","ecolon":"\u2255","Ecy":"\u042D","ecy":"\u044D","eDDot":"\u2A77","Edot":"\u0116","edot":"\u0117","eDot":"\u2251","ee":"\u2147","efDot":"\u2252","Efr":"\uD835\uDD08","efr":"\uD835\uDD22","eg":"\u2A9A","Egrave":"\u00C8","egrave":"\u00E8","egs":"\u2A96","egsdot":"\u2A98","el":"\u2A99","Element":"\u2208","elinters":"\u23E7","ell":"\u2113","els":"\u2A95","elsdot":"\u2A97","Emacr":"\u0112","emacr":"\u0113","empty":"\u2205","emptyset":"\u2205","EmptySmallSquare":"\u25FB","emptyv":"\u2205","EmptyVerySmallSquare":"\u25AB","emsp13":"\u2004","emsp14":"\u2005","emsp":"\u2003","ENG":"\u014A","eng":"\u014B","ensp":"\u2002","Eogon":"\u0118","eogon":"\u0119","Eopf":"\uD835\uDD3C","eopf":"\uD835\uDD56","epar":"\u22D5","eparsl":"\u29E3","eplus":"\u2A71","epsi":"\u03B5","Epsilon":"\u0395","epsilon":"\u03B5","epsiv":"\u03F5","eqcirc":"\u2256","eqcolon":"\u2255","eqsim":"\u2242","eqslantgtr":"\u2A96","eqslantless":"\u2A95","Equal":"\u2A75","equals":"=","EqualTilde":"\u2242","equest":"\u225F","Equilibrium":"\u21CC","equiv":"\u2261","equivDD":"\u2A78","eqvparsl":"\u29E5","erarr":"\u2971","erDot":"\u2253","escr":"\u212F","Escr":"\u2130","esdot":"\u2250","Esim":"\u2A73","esim":"\u2242","Eta":"\u0397","eta":"\u03B7","ETH":"\u00D0","eth":"\u00F0","Euml":"\u00CB","euml":"\u00EB","euro":"\u20AC","excl":"!","exist":"\u2203","Exists":"\u2203","expectation":"\u2130","exponentiale":"\u2147","ExponentialE":"\u2147","fallingdotseq":"\u2252","Fcy":"\u0424","fcy":"\u0444","female":"\u2640","ffilig":"\uFB03","fflig":"\uFB00","ffllig":"\uFB04","Ffr":"\uD835\uDD09","ffr":"\uD835\uDD23","filig":"\uFB01","FilledSmallSquare":"\u25FC","FilledVerySmallSquare":"\u25AA","fjlig":"fj","flat":"\u266D","fllig":"\uFB02","fltns":"\u25B1","fnof":"\u0192","Fopf":"\uD835\uDD3D","fopf":"\uD835\uDD57","forall":"\u2200","ForAll":"\u2200","fork":"\u22D4","forkv":"\u2AD9","Fouriertrf":"\u2131","fpartint":"\u2A0D","frac12":"\u00BD","frac13":"\u2153","frac14":"\u00BC","frac15":"\u2155","frac16":"\u2159","frac18":"\u215B","frac23":"\u2154","frac25":"\u2156","frac34":"\u00BE","frac35":"\u2157","frac38":"\u215C","frac45":"\u2158","frac56":"\u215A","frac58":"\u215D","frac78":"\u215E","frasl":"\u2044","frown":"\u2322","fscr":"\uD835\uDCBB","Fscr":"\u2131","gacute":"\u01F5","Gamma":"\u0393","gamma":"\u03B3","Gammad":"\u03DC","gammad":"\u03DD","gap":"\u2A86","Gbreve":"\u011E","gbreve":"\u011F","Gcedil":"\u0122","Gcirc":"\u011C","gcirc":"\u011D","Gcy":"\u0413","gcy":"\u0433","Gdot":"\u0120","gdot":"\u0121","ge":"\u2265","gE":"\u2267","gEl":"\u2A8C","gel":"\u22DB","geq":"\u2265","geqq":"\u2267","geqslant":"\u2A7E","gescc":"\u2AA9","ges":"\u2A7E","gesdot":"\u2A80","gesdoto":"\u2A82","gesdotol":"\u2A84","gesl":"\u22DB\uFE00","gesles":"\u2A94","Gfr":"\uD835\uDD0A","gfr":"\uD835\uDD24","gg":"\u226B","Gg":"\u22D9","ggg":"\u22D9","gimel":"\u2137","GJcy":"\u0403","gjcy":"\u0453","gla":"\u2AA5","gl":"\u2277","glE":"\u2A92","glj":"\u2AA4","gnap":"\u2A8A","gnapprox":"\u2A8A","gne":"\u2A88","gnE":"\u2269","gneq":"\u2A88","gneqq":"\u2269","gnsim":"\u22E7","Gopf":"\uD835\uDD3E","gopf":"\uD835\uDD58","grave":"`","GreaterEqual":"\u2265","GreaterEqualLess":"\u22DB","GreaterFullEqual":"\u2267","GreaterGreater":"\u2AA2","GreaterLess":"\u2277","GreaterSlantEqual":"\u2A7E","GreaterTilde":"\u2273","Gscr":"\uD835\uDCA2","gscr":"\u210A","gsim":"\u2273","gsime":"\u2A8E","gsiml":"\u2A90","gtcc":"\u2AA7","gtcir":"\u2A7A","gt":">","GT":">","Gt":"\u226B","gtdot":"\u22D7","gtlPar":"\u2995","gtquest":"\u2A7C","gtrapprox":"\u2A86","gtrarr":"\u2978","gtrdot":"\u22D7","gtreqless":"\u22DB","gtreqqless":"\u2A8C","gtrless":"\u2277","gtrsim":"\u2273","gvertneqq":"\u2269\uFE00","gvnE":"\u2269\uFE00","Hacek":"\u02C7","hairsp":"\u200A","half":"\u00BD","hamilt":"\u210B","HARDcy":"\u042A","hardcy":"\u044A","harrcir":"\u2948","harr":"\u2194","hArr":"\u21D4","harrw":"\u21AD","Hat":"^","hbar":"\u210F","Hcirc":"\u0124","hcirc":"\u0125","hearts":"\u2665","heartsuit":"\u2665","hellip":"\u2026","hercon":"\u22B9","hfr":"\uD835\uDD25","Hfr":"\u210C","HilbertSpace":"\u210B","hksearow":"\u2925","hkswarow":"\u2926","hoarr":"\u21FF","homtht":"\u223B","hookleftarrow":"\u21A9","hookrightarrow":"\u21AA","hopf":"\uD835\uDD59","Hopf":"\u210D","horbar":"\u2015","HorizontalLine":"\u2500","hscr":"\uD835\uDCBD","Hscr":"\u210B","hslash":"\u210F","Hstrok":"\u0126","hstrok":"\u0127","HumpDownHump":"\u224E","HumpEqual":"\u224F","hybull":"\u2043","hyphen":"\u2010","Iacute":"\u00CD","iacute":"\u00ED","ic":"\u2063","Icirc":"\u00CE","icirc":"\u00EE","Icy":"\u0418","icy":"\u0438","Idot":"\u0130","IEcy":"\u0415","iecy":"\u0435","iexcl":"\u00A1","iff":"\u21D4","ifr":"\uD835\uDD26","Ifr":"\u2111","Igrave":"\u00CC","igrave":"\u00EC","ii":"\u2148","iiiint":"\u2A0C","iiint":"\u222D","iinfin":"\u29DC","iiota":"\u2129","IJlig":"\u0132","ijlig":"\u0133","Imacr":"\u012A","imacr":"\u012B","image":"\u2111","ImaginaryI":"\u2148","imagline":"\u2110","imagpart":"\u2111","imath":"\u0131","Im":"\u2111","imof":"\u22B7","imped":"\u01B5","Implies":"\u21D2","incare":"\u2105","in":"\u2208","infin":"\u221E","infintie":"\u29DD","inodot":"\u0131","intcal":"\u22BA","int":"\u222B","Int":"\u222C","integers":"\u2124","Integral":"\u222B","intercal":"\u22BA","Intersection":"\u22C2","intlarhk":"\u2A17","intprod":"\u2A3C","InvisibleComma":"\u2063","InvisibleTimes":"\u2062","IOcy":"\u0401","iocy":"\u0451","Iogon":"\u012E","iogon":"\u012F","Iopf":"\uD835\uDD40","iopf":"\uD835\uDD5A","Iota":"\u0399","iota":"\u03B9","iprod":"\u2A3C","iquest":"\u00BF","iscr":"\uD835\uDCBE","Iscr":"\u2110","isin":"\u2208","isindot":"\u22F5","isinE":"\u22F9","isins":"\u22F4","isinsv":"\u22F3","isinv":"\u2208","it":"\u2062","Itilde":"\u0128","itilde":"\u0129","Iukcy":"\u0406","iukcy":"\u0456","Iuml":"\u00CF","iuml":"\u00EF","Jcirc":"\u0134","jcirc":"\u0135","Jcy":"\u0419","jcy":"\u0439","Jfr":"\uD835\uDD0D","jfr":"\uD835\uDD27","jmath":"\u0237","Jopf":"\uD835\uDD41","jopf":"\uD835\uDD5B","Jscr":"\uD835\uDCA5","jscr":"\uD835\uDCBF","Jsercy":"\u0408","jsercy":"\u0458","Jukcy":"\u0404","jukcy":"\u0454","Kappa":"\u039A","kappa":"\u03BA","kappav":"\u03F0","Kcedil":"\u0136","kcedil":"\u0137","Kcy":"\u041A","kcy":"\u043A","Kfr":"\uD835\uDD0E","kfr":"\uD835\uDD28","kgreen":"\u0138","KHcy":"\u0425","khcy":"\u0445","KJcy":"\u040C","kjcy":"\u045C","Kopf":"\uD835\uDD42","kopf":"\uD835\uDD5C","Kscr":"\uD835\uDCA6","kscr":"\uD835\uDCC0","lAarr":"\u21DA","Lacute":"\u0139","lacute":"\u013A","laemptyv":"\u29B4","lagran":"\u2112","Lambda":"\u039B","lambda":"\u03BB","lang":"\u27E8","Lang":"\u27EA","langd":"\u2991","langle":"\u27E8","lap":"\u2A85","Laplacetrf":"\u2112","laquo":"\u00AB","larrb":"\u21E4","larrbfs":"\u291F","larr":"\u2190","Larr":"\u219E","lArr":"\u21D0","larrfs":"\u291D","larrhk":"\u21A9","larrlp":"\u21AB","larrpl":"\u2939","larrsim":"\u2973","larrtl":"\u21A2","latail":"\u2919","lAtail":"\u291B","lat":"\u2AAB","late":"\u2AAD","lates":"\u2AAD\uFE00","lbarr":"\u290C","lBarr":"\u290E","lbbrk":"\u2772","lbrace":"{","lbrack":"[","lbrke":"\u298B","lbrksld":"\u298F","lbrkslu":"\u298D","Lcaron":"\u013D","lcaron":"\u013E","Lcedil":"\u013B","lcedil":"\u013C","lceil":"\u2308","lcub":"{","Lcy":"\u041B","lcy":"\u043B","ldca":"\u2936","ldquo":"\u201C","ldquor":"\u201E","ldrdhar":"\u2967","ldrushar":"\u294B","ldsh":"\u21B2","le":"\u2264","lE":"\u2266","LeftAngleBracket":"\u27E8","LeftArrowBar":"\u21E4","leftarrow":"\u2190","LeftArrow":"\u2190","Leftarrow":"\u21D0","LeftArrowRightArrow":"\u21C6","leftarrowtail":"\u21A2","LeftCeiling":"\u2308","LeftDoubleBracket":"\u27E6","LeftDownTeeVector":"\u2961","LeftDownVectorBar":"\u2959","LeftDownVector":"\u21C3","LeftFloor":"\u230A","leftharpoondown":"\u21BD","leftharpoonup":"\u21BC","leftleftarrows":"\u21C7","leftrightarrow":"\u2194","LeftRightArrow":"\u2194","Leftrightarrow":"\u21D4","leftrightarrows":"\u21C6","leftrightharpoons":"\u21CB","leftrightsquigarrow":"\u21AD","LeftRightVector":"\u294E","LeftTeeArrow":"\u21A4","LeftTee":"\u22A3","LeftTeeVector":"\u295A","leftthreetimes":"\u22CB","LeftTriangleBar":"\u29CF","LeftTriangle":"\u22B2","LeftTriangleEqual":"\u22B4","LeftUpDownVector":"\u2951","LeftUpTeeVector":"\u2960","LeftUpVectorBar":"\u2958","LeftUpVector":"\u21BF","LeftVectorBar":"\u2952","LeftVector":"\u21BC","lEg":"\u2A8B","leg":"\u22DA","leq":"\u2264","leqq":"\u2266","leqslant":"\u2A7D","lescc":"\u2AA8","les":"\u2A7D","lesdot":"\u2A7F","lesdoto":"\u2A81","lesdotor":"\u2A83","lesg":"\u22DA\uFE00","lesges":"\u2A93","lessapprox":"\u2A85","lessdot":"\u22D6","lesseqgtr":"\u22DA","lesseqqgtr":"\u2A8B","LessEqualGreater":"\u22DA","LessFullEqual":"\u2266","LessGreater":"\u2276","lessgtr":"\u2276","LessLess":"\u2AA1","lesssim":"\u2272","LessSlantEqual":"\u2A7D","LessTilde":"\u2272","lfisht":"\u297C","lfloor":"\u230A","Lfr":"\uD835\uDD0F","lfr":"\uD835\uDD29","lg":"\u2276","lgE":"\u2A91","lHar":"\u2962","lhard":"\u21BD","lharu":"\u21BC","lharul":"\u296A","lhblk":"\u2584","LJcy":"\u0409","ljcy":"\u0459","llarr":"\u21C7","ll":"\u226A","Ll":"\u22D8","llcorner":"\u231E","Lleftarrow":"\u21DA","llhard":"\u296B","lltri":"\u25FA","Lmidot":"\u013F","lmidot":"\u0140","lmoustache":"\u23B0","lmoust":"\u23B0","lnap":"\u2A89","lnapprox":"\u2A89","lne":"\u2A87","lnE":"\u2268","lneq":"\u2A87","lneqq":"\u2268","lnsim":"\u22E6","loang":"\u27EC","loarr":"\u21FD","lobrk":"\u27E6","longleftarrow":"\u27F5","LongLeftArrow":"\u27F5","Longleftarrow":"\u27F8","longleftrightarrow":"\u27F7","LongLeftRightArrow":"\u27F7","Longleftrightarrow":"\u27FA","longmapsto":"\u27FC","longrightarrow":"\u27F6","LongRightArrow":"\u27F6","Longrightarrow":"\u27F9","looparrowleft":"\u21AB","looparrowright":"\u21AC","lopar":"\u2985","Lopf":"\uD835\uDD43","lopf":"\uD835\uDD5D","loplus":"\u2A2D","lotimes":"\u2A34","lowast":"\u2217","lowbar":"_","LowerLeftArrow":"\u2199","LowerRightArrow":"\u2198","loz":"\u25CA","lozenge":"\u25CA","lozf":"\u29EB","lpar":"(","lparlt":"\u2993","lrarr":"\u21C6","lrcorner":"\u231F","lrhar":"\u21CB","lrhard":"\u296D","lrm":"\u200E","lrtri":"\u22BF","lsaquo":"\u2039","lscr":"\uD835\uDCC1","Lscr":"\u2112","lsh":"\u21B0","Lsh":"\u21B0","lsim":"\u2272","lsime":"\u2A8D","lsimg":"\u2A8F","lsqb":"[","lsquo":"\u2018","lsquor":"\u201A","Lstrok":"\u0141","lstrok":"\u0142","ltcc":"\u2AA6","ltcir":"\u2A79","lt":"<","LT":"<","Lt":"\u226A","ltdot":"\u22D6","lthree":"\u22CB","ltimes":"\u22C9","ltlarr":"\u2976","ltquest":"\u2A7B","ltri":"\u25C3","ltrie":"\u22B4","ltrif":"\u25C2","ltrPar":"\u2996","lurdshar":"\u294A","luruhar":"\u2966","lvertneqq":"\u2268\uFE00","lvnE":"\u2268\uFE00","macr":"\u00AF","male":"\u2642","malt":"\u2720","maltese":"\u2720","Map":"\u2905","map":"\u21A6","mapsto":"\u21A6","mapstodown":"\u21A7","mapstoleft":"\u21A4","mapstoup":"\u21A5","marker":"\u25AE","mcomma":"\u2A29","Mcy":"\u041C","mcy":"\u043C","mdash":"\u2014","mDDot":"\u223A","measuredangle":"\u2221","MediumSpace":"\u205F","Mellintrf":"\u2133","Mfr":"\uD835\uDD10","mfr":"\uD835\uDD2A","mho":"\u2127","micro":"\u00B5","midast":"*","midcir":"\u2AF0","mid":"\u2223","middot":"\u00B7","minusb":"\u229F","minus":"\u2212","minusd":"\u2238","minusdu":"\u2A2A","MinusPlus":"\u2213","mlcp":"\u2ADB","mldr":"\u2026","mnplus":"\u2213","models":"\u22A7","Mopf":"\uD835\uDD44","mopf":"\uD835\uDD5E","mp":"\u2213","mscr":"\uD835\uDCC2","Mscr":"\u2133","mstpos":"\u223E","Mu":"\u039C","mu":"\u03BC","multimap":"\u22B8","mumap":"\u22B8","nabla":"\u2207","Nacute":"\u0143","nacute":"\u0144","nang":"\u2220\u20D2","nap":"\u2249","napE":"\u2A70\u0338","napid":"\u224B\u0338","napos":"\u0149","napprox":"\u2249","natural":"\u266E","naturals":"\u2115","natur":"\u266E","nbsp":"\u00A0","nbump":"\u224E\u0338","nbumpe":"\u224F\u0338","ncap":"\u2A43","Ncaron":"\u0147","ncaron":"\u0148","Ncedil":"\u0145","ncedil":"\u0146","ncong":"\u2247","ncongdot":"\u2A6D\u0338","ncup":"\u2A42","Ncy":"\u041D","ncy":"\u043D","ndash":"\u2013","nearhk":"\u2924","nearr":"\u2197","neArr":"\u21D7","nearrow":"\u2197","ne":"\u2260","nedot":"\u2250\u0338","NegativeMediumSpace":"\u200B","NegativeThickSpace":"\u200B","NegativeThinSpace":"\u200B","NegativeVeryThinSpace":"\u200B","nequiv":"\u2262","nesear":"\u2928","nesim":"\u2242\u0338","NestedGreaterGreater":"\u226B","NestedLessLess":"\u226A","NewLine":"\n","nexist":"\u2204","nexists":"\u2204","Nfr":"\uD835\uDD11","nfr":"\uD835\uDD2B","ngE":"\u2267\u0338","nge":"\u2271","ngeq":"\u2271","ngeqq":"\u2267\u0338","ngeqslant":"\u2A7E\u0338","nges":"\u2A7E\u0338","nGg":"\u22D9\u0338","ngsim":"\u2275","nGt":"\u226B\u20D2","ngt":"\u226F","ngtr":"\u226F","nGtv":"\u226B\u0338","nharr":"\u21AE","nhArr":"\u21CE","nhpar":"\u2AF2","ni":"\u220B","nis":"\u22FC","nisd":"\u22FA","niv":"\u220B","NJcy":"\u040A","njcy":"\u045A","nlarr":"\u219A","nlArr":"\u21CD","nldr":"\u2025","nlE":"\u2266\u0338","nle":"\u2270","nleftarrow":"\u219A","nLeftarrow":"\u21CD","nleftrightarrow":"\u21AE","nLeftrightarrow":"\u21CE","nleq":"\u2270","nleqq":"\u2266\u0338","nleqslant":"\u2A7D\u0338","nles":"\u2A7D\u0338","nless":"\u226E","nLl":"\u22D8\u0338","nlsim":"\u2274","nLt":"\u226A\u20D2","nlt":"\u226E","nltri":"\u22EA","nltrie":"\u22EC","nLtv":"\u226A\u0338","nmid":"\u2224","NoBreak":"\u2060","NonBreakingSpace":"\u00A0","nopf":"\uD835\uDD5F","Nopf":"\u2115","Not":"\u2AEC","not":"\u00AC","NotCongruent":"\u2262","NotCupCap":"\u226D","NotDoubleVerticalBar":"\u2226","NotElement":"\u2209","NotEqual":"\u2260","NotEqualTilde":"\u2242\u0338","NotExists":"\u2204","NotGreater":"\u226F","NotGreaterEqual":"\u2271","NotGreaterFullEqual":"\u2267\u0338","NotGreaterGreater":"\u226B\u0338","NotGreaterLess":"\u2279","NotGreaterSlantEqual":"\u2A7E\u0338","NotGreaterTilde":"\u2275","NotHumpDownHump":"\u224E\u0338","NotHumpEqual":"\u224F\u0338","notin":"\u2209","notindot":"\u22F5\u0338","notinE":"\u22F9\u0338","notinva":"\u2209","notinvb":"\u22F7","notinvc":"\u22F6","NotLeftTriangleBar":"\u29CF\u0338","NotLeftTriangle":"\u22EA","NotLeftTriangleEqual":"\u22EC","NotLess":"\u226E","NotLessEqual":"\u2270","NotLessGreater":"\u2278","NotLessLess":"\u226A\u0338","NotLessSlantEqual":"\u2A7D\u0338","NotLessTilde":"\u2274","NotNestedGreaterGreater":"\u2AA2\u0338","NotNestedLessLess":"\u2AA1\u0338","notni":"\u220C","notniva":"\u220C","notnivb":"\u22FE","notnivc":"\u22FD","NotPrecedes":"\u2280","NotPrecedesEqual":"\u2AAF\u0338","NotPrecedesSlantEqual":"\u22E0","NotReverseElement":"\u220C","NotRightTriangleBar":"\u29D0\u0338","NotRightTriangle":"\u22EB","NotRightTriangleEqual":"\u22ED","NotSquareSubset":"\u228F\u0338","NotSquareSubsetEqual":"\u22E2","NotSquareSuperset":"\u2290\u0338","NotSquareSupersetEqual":"\u22E3","NotSubset":"\u2282\u20D2","NotSubsetEqual":"\u2288","NotSucceeds":"\u2281","NotSucceedsEqual":"\u2AB0\u0338","NotSucceedsSlantEqual":"\u22E1","NotSucceedsTilde":"\u227F\u0338","NotSuperset":"\u2283\u20D2","NotSupersetEqual":"\u2289","NotTilde":"\u2241","NotTildeEqual":"\u2244","NotTildeFullEqual":"\u2247","NotTildeTilde":"\u2249","NotVerticalBar":"\u2224","nparallel":"\u2226","npar":"\u2226","nparsl":"\u2AFD\u20E5","npart":"\u2202\u0338","npolint":"\u2A14","npr":"\u2280","nprcue":"\u22E0","nprec":"\u2280","npreceq":"\u2AAF\u0338","npre":"\u2AAF\u0338","nrarrc":"\u2933\u0338","nrarr":"\u219B","nrArr":"\u21CF","nrarrw":"\u219D\u0338","nrightarrow":"\u219B","nRightarrow":"\u21CF","nrtri":"\u22EB","nrtrie":"\u22ED","nsc":"\u2281","nsccue":"\u22E1","nsce":"\u2AB0\u0338","Nscr":"\uD835\uDCA9","nscr":"\uD835\uDCC3","nshortmid":"\u2224","nshortparallel":"\u2226","nsim":"\u2241","nsime":"\u2244","nsimeq":"\u2244","nsmid":"\u2224","nspar":"\u2226","nsqsube":"\u22E2","nsqsupe":"\u22E3","nsub":"\u2284","nsubE":"\u2AC5\u0338","nsube":"\u2288","nsubset":"\u2282\u20D2","nsubseteq":"\u2288","nsubseteqq":"\u2AC5\u0338","nsucc":"\u2281","nsucceq":"\u2AB0\u0338","nsup":"\u2285","nsupE":"\u2AC6\u0338","nsupe":"\u2289","nsupset":"\u2283\u20D2","nsupseteq":"\u2289","nsupseteqq":"\u2AC6\u0338","ntgl":"\u2279","Ntilde":"\u00D1","ntilde":"\u00F1","ntlg":"\u2278","ntriangleleft":"\u22EA","ntrianglelefteq":"\u22EC","ntriangleright":"\u22EB","ntrianglerighteq":"\u22ED","Nu":"\u039D","nu":"\u03BD","num":"#","numero":"\u2116","numsp":"\u2007","nvap":"\u224D\u20D2","nvdash":"\u22AC","nvDash":"\u22AD","nVdash":"\u22AE","nVDash":"\u22AF","nvge":"\u2265\u20D2","nvgt":">\u20D2","nvHarr":"\u2904","nvinfin":"\u29DE","nvlArr":"\u2902","nvle":"\u2264\u20D2","nvlt":"<\u20D2","nvltrie":"\u22B4\u20D2","nvrArr":"\u2903","nvrtrie":"\u22B5\u20D2","nvsim":"\u223C\u20D2","nwarhk":"\u2923","nwarr":"\u2196","nwArr":"\u21D6","nwarrow":"\u2196","nwnear":"\u2927","Oacute":"\u00D3","oacute":"\u00F3","oast":"\u229B","Ocirc":"\u00D4","ocirc":"\u00F4","ocir":"\u229A","Ocy":"\u041E","ocy":"\u043E","odash":"\u229D","Odblac":"\u0150","odblac":"\u0151","odiv":"\u2A38","odot":"\u2299","odsold":"\u29BC","OElig":"\u0152","oelig":"\u0153","ofcir":"\u29BF","Ofr":"\uD835\uDD12","ofr":"\uD835\uDD2C","ogon":"\u02DB","Ograve":"\u00D2","ograve":"\u00F2","ogt":"\u29C1","ohbar":"\u29B5","ohm":"\u03A9","oint":"\u222E","olarr":"\u21BA","olcir":"\u29BE","olcross":"\u29BB","oline":"\u203E","olt":"\u29C0","Omacr":"\u014C","omacr":"\u014D","Omega":"\u03A9","omega":"\u03C9","Omicron":"\u039F","omicron":"\u03BF","omid":"\u29B6","ominus":"\u2296","Oopf":"\uD835\uDD46","oopf":"\uD835\uDD60","opar":"\u29B7","OpenCurlyDoubleQuote":"\u201C","OpenCurlyQuote":"\u2018","operp":"\u29B9","oplus":"\u2295","orarr":"\u21BB","Or":"\u2A54","or":"\u2228","ord":"\u2A5D","order":"\u2134","orderof":"\u2134","ordf":"\u00AA","ordm":"\u00BA","origof":"\u22B6","oror":"\u2A56","orslope":"\u2A57","orv":"\u2A5B","oS":"\u24C8","Oscr":"\uD835\uDCAA","oscr":"\u2134","Oslash":"\u00D8","oslash":"\u00F8","osol":"\u2298","Otilde":"\u00D5","otilde":"\u00F5","otimesas":"\u2A36","Otimes":"\u2A37","otimes":"\u2297","Ouml":"\u00D6","ouml":"\u00F6","ovbar":"\u233D","OverBar":"\u203E","OverBrace":"\u23DE","OverBracket":"\u23B4","OverParenthesis":"\u23DC","para":"\u00B6","parallel":"\u2225","par":"\u2225","parsim":"\u2AF3","parsl":"\u2AFD","part":"\u2202","PartialD":"\u2202","Pcy":"\u041F","pcy":"\u043F","percnt":"%","period":".","permil":"\u2030","perp":"\u22A5","pertenk":"\u2031","Pfr":"\uD835\uDD13","pfr":"\uD835\uDD2D","Phi":"\u03A6","phi":"\u03C6","phiv":"\u03D5","phmmat":"\u2133","phone":"\u260E","Pi":"\u03A0","pi":"\u03C0","pitchfork":"\u22D4","piv":"\u03D6","planck":"\u210F","planckh":"\u210E","plankv":"\u210F","plusacir":"\u2A23","plusb":"\u229E","pluscir":"\u2A22","plus":"+","plusdo":"\u2214","plusdu":"\u2A25","pluse":"\u2A72","PlusMinus":"\u00B1","plusmn":"\u00B1","plussim":"\u2A26","plustwo":"\u2A27","pm":"\u00B1","Poincareplane":"\u210C","pointint":"\u2A15","popf":"\uD835\uDD61","Popf":"\u2119","pound":"\u00A3","prap":"\u2AB7","Pr":"\u2ABB","pr":"\u227A","prcue":"\u227C","precapprox":"\u2AB7","prec":"\u227A","preccurlyeq":"\u227C","Precedes":"\u227A","PrecedesEqual":"\u2AAF","PrecedesSlantEqual":"\u227C","PrecedesTilde":"\u227E","preceq":"\u2AAF","precnapprox":"\u2AB9","precneqq":"\u2AB5","precnsim":"\u22E8","pre":"\u2AAF","prE":"\u2AB3","precsim":"\u227E","prime":"\u2032","Prime":"\u2033","primes":"\u2119","prnap":"\u2AB9","prnE":"\u2AB5","prnsim":"\u22E8","prod":"\u220F","Product":"\u220F","profalar":"\u232E","profline":"\u2312","profsurf":"\u2313","prop":"\u221D","Proportional":"\u221D","Proportion":"\u2237","propto":"\u221D","prsim":"\u227E","prurel":"\u22B0","Pscr":"\uD835\uDCAB","pscr":"\uD835\uDCC5","Psi":"\u03A8","psi":"\u03C8","puncsp":"\u2008","Qfr":"\uD835\uDD14","qfr":"\uD835\uDD2E","qint":"\u2A0C","qopf":"\uD835\uDD62","Qopf":"\u211A","qprime":"\u2057","Qscr":"\uD835\uDCAC","qscr":"\uD835\uDCC6","quaternions":"\u210D","quatint":"\u2A16","quest":"?","questeq":"\u225F","quot":"\"","QUOT":"\"","rAarr":"\u21DB","race":"\u223D\u0331","Racute":"\u0154","racute":"\u0155","radic":"\u221A","raemptyv":"\u29B3","rang":"\u27E9","Rang":"\u27EB","rangd":"\u2992","range":"\u29A5","rangle":"\u27E9","raquo":"\u00BB","rarrap":"\u2975","rarrb":"\u21E5","rarrbfs":"\u2920","rarrc":"\u2933","rarr":"\u2192","Rarr":"\u21A0","rArr":"\u21D2","rarrfs":"\u291E","rarrhk":"\u21AA","rarrlp":"\u21AC","rarrpl":"\u2945","rarrsim":"\u2974","Rarrtl":"\u2916","rarrtl":"\u21A3","rarrw":"\u219D","ratail":"\u291A","rAtail":"\u291C","ratio":"\u2236","rationals":"\u211A","rbarr":"\u290D","rBarr":"\u290F","RBarr":"\u2910","rbbrk":"\u2773","rbrace":"}","rbrack":"]","rbrke":"\u298C","rbrksld":"\u298E","rbrkslu":"\u2990","Rcaron":"\u0158","rcaron":"\u0159","Rcedil":"\u0156","rcedil":"\u0157","rceil":"\u2309","rcub":"}","Rcy":"\u0420","rcy":"\u0440","rdca":"\u2937","rdldhar":"\u2969","rdquo":"\u201D","rdquor":"\u201D","rdsh":"\u21B3","real":"\u211C","realine":"\u211B","realpart":"\u211C","reals":"\u211D","Re":"\u211C","rect":"\u25AD","reg":"\u00AE","REG":"\u00AE","ReverseElement":"\u220B","ReverseEquilibrium":"\u21CB","ReverseUpEquilibrium":"\u296F","rfisht":"\u297D","rfloor":"\u230B","rfr":"\uD835\uDD2F","Rfr":"\u211C","rHar":"\u2964","rhard":"\u21C1","rharu":"\u21C0","rharul":"\u296C","Rho":"\u03A1","rho":"\u03C1","rhov":"\u03F1","RightAngleBracket":"\u27E9","RightArrowBar":"\u21E5","rightarrow":"\u2192","RightArrow":"\u2192","Rightarrow":"\u21D2","RightArrowLeftArrow":"\u21C4","rightarrowtail":"\u21A3","RightCeiling":"\u2309","RightDoubleBracket":"\u27E7","RightDownTeeVector":"\u295D","RightDownVectorBar":"\u2955","RightDownVector":"\u21C2","RightFloor":"\u230B","rightharpoondown":"\u21C1","rightharpoonup":"\u21C0","rightleftarrows":"\u21C4","rightleftharpoons":"\u21CC","rightrightarrows":"\u21C9","rightsquigarrow":"\u219D","RightTeeArrow":"\u21A6","RightTee":"\u22A2","RightTeeVector":"\u295B","rightthreetimes":"\u22CC","RightTriangleBar":"\u29D0","RightTriangle":"\u22B3","RightTriangleEqual":"\u22B5","RightUpDownVector":"\u294F","RightUpTeeVector":"\u295C","RightUpVectorBar":"\u2954","RightUpVector":"\u21BE","RightVectorBar":"\u2953","RightVector":"\u21C0","ring":"\u02DA","risingdotseq":"\u2253","rlarr":"\u21C4","rlhar":"\u21CC","rlm":"\u200F","rmoustache":"\u23B1","rmoust":"\u23B1","rnmid":"\u2AEE","roang":"\u27ED","roarr":"\u21FE","robrk":"\u27E7","ropar":"\u2986","ropf":"\uD835\uDD63","Ropf":"\u211D","roplus":"\u2A2E","rotimes":"\u2A35","RoundImplies":"\u2970","rpar":")","rpargt":"\u2994","rppolint":"\u2A12","rrarr":"\u21C9","Rrightarrow":"\u21DB","rsaquo":"\u203A","rscr":"\uD835\uDCC7","Rscr":"\u211B","rsh":"\u21B1","Rsh":"\u21B1","rsqb":"]","rsquo":"\u2019","rsquor":"\u2019","rthree":"\u22CC","rtimes":"\u22CA","rtri":"\u25B9","rtrie":"\u22B5","rtrif":"\u25B8","rtriltri":"\u29CE","RuleDelayed":"\u29F4","ruluhar":"\u2968","rx":"\u211E","Sacute":"\u015A","sacute":"\u015B","sbquo":"\u201A","scap":"\u2AB8","Scaron":"\u0160","scaron":"\u0161","Sc":"\u2ABC","sc":"\u227B","sccue":"\u227D","sce":"\u2AB0","scE":"\u2AB4","Scedil":"\u015E","scedil":"\u015F","Scirc":"\u015C","scirc":"\u015D","scnap":"\u2ABA","scnE":"\u2AB6","scnsim":"\u22E9","scpolint":"\u2A13","scsim":"\u227F","Scy":"\u0421","scy":"\u0441","sdotb":"\u22A1","sdot":"\u22C5","sdote":"\u2A66","searhk":"\u2925","searr":"\u2198","seArr":"\u21D8","searrow":"\u2198","sect":"\u00A7","semi":";","seswar":"\u2929","setminus":"\u2216","setmn":"\u2216","sext":"\u2736","Sfr":"\uD835\uDD16","sfr":"\uD835\uDD30","sfrown":"\u2322","sharp":"\u266F","SHCHcy":"\u0429","shchcy":"\u0449","SHcy":"\u0428","shcy":"\u0448","ShortDownArrow":"\u2193","ShortLeftArrow":"\u2190","shortmid":"\u2223","shortparallel":"\u2225","ShortRightArrow":"\u2192","ShortUpArrow":"\u2191","shy":"\u00AD","Sigma":"\u03A3","sigma":"\u03C3","sigmaf":"\u03C2","sigmav":"\u03C2","sim":"\u223C","simdot":"\u2A6A","sime":"\u2243","simeq":"\u2243","simg":"\u2A9E","simgE":"\u2AA0","siml":"\u2A9D","simlE":"\u2A9F","simne":"\u2246","simplus":"\u2A24","simrarr":"\u2972","slarr":"\u2190","SmallCircle":"\u2218","smallsetminus":"\u2216","smashp":"\u2A33","smeparsl":"\u29E4","smid":"\u2223","smile":"\u2323","smt":"\u2AAA","smte":"\u2AAC","smtes":"\u2AAC\uFE00","SOFTcy":"\u042C","softcy":"\u044C","solbar":"\u233F","solb":"\u29C4","sol":"/","Sopf":"\uD835\uDD4A","sopf":"\uD835\uDD64","spades":"\u2660","spadesuit":"\u2660","spar":"\u2225","sqcap":"\u2293","sqcaps":"\u2293\uFE00","sqcup":"\u2294","sqcups":"\u2294\uFE00","Sqrt":"\u221A","sqsub":"\u228F","sqsube":"\u2291","sqsubset":"\u228F","sqsubseteq":"\u2291","sqsup":"\u2290","sqsupe":"\u2292","sqsupset":"\u2290","sqsupseteq":"\u2292","square":"\u25A1","Square":"\u25A1","SquareIntersection":"\u2293","SquareSubset":"\u228F","SquareSubsetEqual":"\u2291","SquareSuperset":"\u2290","SquareSupersetEqual":"\u2292","SquareUnion":"\u2294","squarf":"\u25AA","squ":"\u25A1","squf":"\u25AA","srarr":"\u2192","Sscr":"\uD835\uDCAE","sscr":"\uD835\uDCC8","ssetmn":"\u2216","ssmile":"\u2323","sstarf":"\u22C6","Star":"\u22C6","star":"\u2606","starf":"\u2605","straightepsilon":"\u03F5","straightphi":"\u03D5","strns":"\u00AF","sub":"\u2282","Sub":"\u22D0","subdot":"\u2ABD","subE":"\u2AC5","sube":"\u2286","subedot":"\u2AC3","submult":"\u2AC1","subnE":"\u2ACB","subne":"\u228A","subplus":"\u2ABF","subrarr":"\u2979","subset":"\u2282","Subset":"\u22D0","subseteq":"\u2286","subseteqq":"\u2AC5","SubsetEqual":"\u2286","subsetneq":"\u228A","subsetneqq":"\u2ACB","subsim":"\u2AC7","subsub":"\u2AD5","subsup":"\u2AD3","succapprox":"\u2AB8","succ":"\u227B","succcurlyeq":"\u227D","Succeeds":"\u227B","SucceedsEqual":"\u2AB0","SucceedsSlantEqual":"\u227D","SucceedsTilde":"\u227F","succeq":"\u2AB0","succnapprox":"\u2ABA","succneqq":"\u2AB6","succnsim":"\u22E9","succsim":"\u227F","SuchThat":"\u220B","sum":"\u2211","Sum":"\u2211","sung":"\u266A","sup1":"\u00B9","sup2":"\u00B2","sup3":"\u00B3","sup":"\u2283","Sup":"\u22D1","supdot":"\u2ABE","supdsub":"\u2AD8","supE":"\u2AC6","supe":"\u2287","supedot":"\u2AC4","Superset":"\u2283","SupersetEqual":"\u2287","suphsol":"\u27C9","suphsub":"\u2AD7","suplarr":"\u297B","supmult":"\u2AC2","supnE":"\u2ACC","supne":"\u228B","supplus":"\u2AC0","supset":"\u2283","Supset":"\u22D1","supseteq":"\u2287","supseteqq":"\u2AC6","supsetneq":"\u228B","supsetneqq":"\u2ACC","supsim":"\u2AC8","supsub":"\u2AD4","supsup":"\u2AD6","swarhk":"\u2926","swarr":"\u2199","swArr":"\u21D9","swarrow":"\u2199","swnwar":"\u292A","szlig":"\u00DF","Tab":"\t","target":"\u2316","Tau":"\u03A4","tau":"\u03C4","tbrk":"\u23B4","Tcaron":"\u0164","tcaron":"\u0165","Tcedil":"\u0162","tcedil":"\u0163","Tcy":"\u0422","tcy":"\u0442","tdot":"\u20DB","telrec":"\u2315","Tfr":"\uD835\uDD17","tfr":"\uD835\uDD31","there4":"\u2234","therefore":"\u2234","Therefore":"\u2234","Theta":"\u0398","theta":"\u03B8","thetasym":"\u03D1","thetav":"\u03D1","thickapprox":"\u2248","thicksim":"\u223C","ThickSpace":"\u205F\u200A","ThinSpace":"\u2009","thinsp":"\u2009","thkap":"\u2248","thksim":"\u223C","THORN":"\u00DE","thorn":"\u00FE","tilde":"\u02DC","Tilde":"\u223C","TildeEqual":"\u2243","TildeFullEqual":"\u2245","TildeTilde":"\u2248","timesbar":"\u2A31","timesb":"\u22A0","times":"\u00D7","timesd":"\u2A30","tint":"\u222D","toea":"\u2928","topbot":"\u2336","topcir":"\u2AF1","top":"\u22A4","Topf":"\uD835\uDD4B","topf":"\uD835\uDD65","topfork":"\u2ADA","tosa":"\u2929","tprime":"\u2034","trade":"\u2122","TRADE":"\u2122","triangle":"\u25B5","triangledown":"\u25BF","triangleleft":"\u25C3","trianglelefteq":"\u22B4","triangleq":"\u225C","triangleright":"\u25B9","trianglerighteq":"\u22B5","tridot":"\u25EC","trie":"\u225C","triminus":"\u2A3A","TripleDot":"\u20DB","triplus":"\u2A39","trisb":"\u29CD","tritime":"\u2A3B","trpezium":"\u23E2","Tscr":"\uD835\uDCAF","tscr":"\uD835\uDCC9","TScy":"\u0426","tscy":"\u0446","TSHcy":"\u040B","tshcy":"\u045B","Tstrok":"\u0166","tstrok":"\u0167","twixt":"\u226C","twoheadleftarrow":"\u219E","twoheadrightarrow":"\u21A0","Uacute":"\u00DA","uacute":"\u00FA","uarr":"\u2191","Uarr":"\u219F","uArr":"\u21D1","Uarrocir":"\u2949","Ubrcy":"\u040E","ubrcy":"\u045E","Ubreve":"\u016C","ubreve":"\u016D","Ucirc":"\u00DB","ucirc":"\u00FB","Ucy":"\u0423","ucy":"\u0443","udarr":"\u21C5","Udblac":"\u0170","udblac":"\u0171","udhar":"\u296E","ufisht":"\u297E","Ufr":"\uD835\uDD18","ufr":"\uD835\uDD32","Ugrave":"\u00D9","ugrave":"\u00F9","uHar":"\u2963","uharl":"\u21BF","uharr":"\u21BE","uhblk":"\u2580","ulcorn":"\u231C","ulcorner":"\u231C","ulcrop":"\u230F","ultri":"\u25F8","Umacr":"\u016A","umacr":"\u016B","uml":"\u00A8","UnderBar":"_","UnderBrace":"\u23DF","UnderBracket":"\u23B5","UnderParenthesis":"\u23DD","Union":"\u22C3","UnionPlus":"\u228E","Uogon":"\u0172","uogon":"\u0173","Uopf":"\uD835\uDD4C","uopf":"\uD835\uDD66","UpArrowBar":"\u2912","uparrow":"\u2191","UpArrow":"\u2191","Uparrow":"\u21D1","UpArrowDownArrow":"\u21C5","updownarrow":"\u2195","UpDownArrow":"\u2195","Updownarrow":"\u21D5","UpEquilibrium":"\u296E","upharpoonleft":"\u21BF","upharpoonright":"\u21BE","uplus":"\u228E","UpperLeftArrow":"\u2196","UpperRightArrow":"\u2197","upsi":"\u03C5","Upsi":"\u03D2","upsih":"\u03D2","Upsilon":"\u03A5","upsilon":"\u03C5","UpTeeArrow":"\u21A5","UpTee":"\u22A5","upuparrows":"\u21C8","urcorn":"\u231D","urcorner":"\u231D","urcrop":"\u230E","Uring":"\u016E","uring":"\u016F","urtri":"\u25F9","Uscr":"\uD835\uDCB0","uscr":"\uD835\uDCCA","utdot":"\u22F0","Utilde":"\u0168","utilde":"\u0169","utri":"\u25B5","utrif":"\u25B4","uuarr":"\u21C8","Uuml":"\u00DC","uuml":"\u00FC","uwangle":"\u29A7","vangrt":"\u299C","varepsilon":"\u03F5","varkappa":"\u03F0","varnothing":"\u2205","varphi":"\u03D5","varpi":"\u03D6","varpropto":"\u221D","varr":"\u2195","vArr":"\u21D5","varrho":"\u03F1","varsigma":"\u03C2","varsubsetneq":"\u228A\uFE00","varsubsetneqq":"\u2ACB\uFE00","varsupsetneq":"\u228B\uFE00","varsupsetneqq":"\u2ACC\uFE00","vartheta":"\u03D1","vartriangleleft":"\u22B2","vartriangleright":"\u22B3","vBar":"\u2AE8","Vbar":"\u2AEB","vBarv":"\u2AE9","Vcy":"\u0412","vcy":"\u0432","vdash":"\u22A2","vDash":"\u22A8","Vdash":"\u22A9","VDash":"\u22AB","Vdashl":"\u2AE6","veebar":"\u22BB","vee":"\u2228","Vee":"\u22C1","veeeq":"\u225A","vellip":"\u22EE","verbar":"|","Verbar":"\u2016","vert":"|","Vert":"\u2016","VerticalBar":"\u2223","VerticalLine":"|","VerticalSeparator":"\u2758","VerticalTilde":"\u2240","VeryThinSpace":"\u200A","Vfr":"\uD835\uDD19","vfr":"\uD835\uDD33","vltri":"\u22B2","vnsub":"\u2282\u20D2","vnsup":"\u2283\u20D2","Vopf":"\uD835\uDD4D","vopf":"\uD835\uDD67","vprop":"\u221D","vrtri":"\u22B3","Vscr":"\uD835\uDCB1","vscr":"\uD835\uDCCB","vsubnE":"\u2ACB\uFE00","vsubne":"\u228A\uFE00","vsupnE":"\u2ACC\uFE00","vsupne":"\u228B\uFE00","Vvdash":"\u22AA","vzigzag":"\u299A","Wcirc":"\u0174","wcirc":"\u0175","wedbar":"\u2A5F","wedge":"\u2227","Wedge":"\u22C0","wedgeq":"\u2259","weierp":"\u2118","Wfr":"\uD835\uDD1A","wfr":"\uD835\uDD34","Wopf":"\uD835\uDD4E","wopf":"\uD835\uDD68","wp":"\u2118","wr":"\u2240","wreath":"\u2240","Wscr":"\uD835\uDCB2","wscr":"\uD835\uDCCC","xcap":"\u22C2","xcirc":"\u25EF","xcup":"\u22C3","xdtri":"\u25BD","Xfr":"\uD835\uDD1B","xfr":"\uD835\uDD35","xharr":"\u27F7","xhArr":"\u27FA","Xi":"\u039E","xi":"\u03BE","xlarr":"\u27F5","xlArr":"\u27F8","xmap":"\u27FC","xnis":"\u22FB","xodot":"\u2A00","Xopf":"\uD835\uDD4F","xopf":"\uD835\uDD69","xoplus":"\u2A01","xotime":"\u2A02","xrarr":"\u27F6","xrArr":"\u27F9","Xscr":"\uD835\uDCB3","xscr":"\uD835\uDCCD","xsqcup":"\u2A06","xuplus":"\u2A04","xutri":"\u25B3","xvee":"\u22C1","xwedge":"\u22C0","Yacute":"\u00DD","yacute":"\u00FD","YAcy":"\u042F","yacy":"\u044F","Ycirc":"\u0176","ycirc":"\u0177","Ycy":"\u042B","ycy":"\u044B","yen":"\u00A5","Yfr":"\uD835\uDD1C","yfr":"\uD835\uDD36","YIcy":"\u0407","yicy":"\u0457","Yopf":"\uD835\uDD50","yopf":"\uD835\uDD6A","Yscr":"\uD835\uDCB4","yscr":"\uD835\uDCCE","YUcy":"\u042E","yucy":"\u044E","yuml":"\u00FF","Yuml":"\u0178","Zacute":"\u0179","zacute":"\u017A","Zcaron":"\u017D","zcaron":"\u017E","Zcy":"\u0417","zcy":"\u0437","Zdot":"\u017B","zdot":"\u017C","zeetrf":"\u2128","ZeroWidthSpace":"\u200B","Zeta":"\u0396","zeta":"\u03B6","zfr":"\uD835\uDD37","Zfr":"\u2128","ZHcy":"\u0416","zhcy":"\u0436","zigrarr":"\u21DD","zopf":"\uD835\uDD6B","Zopf":"\u2124","Zscr":"\uD835\uDCB5","zscr":"\uD835\uDCCF","zwj":"\u200D","zwnj":"\u200C"};
});
__d('entities/lib/decode.js',["entities/maps/entities.json","entities/maps/legacy.json","entities/maps/xml.json","entities/lib/decode_codepoint.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var entityMap=require("entities/maps/entities.json"), 
legacyMap=require("entities/maps/legacy.json"), 
xmlMap=require("entities/maps/xml.json"), 
decodeCodePoint=require("entities/lib/decode_codepoint.js");

var decodeXMLStrict=getStrictDecoder(xmlMap), 
decodeHTMLStrict=getStrictDecoder(entityMap);

function getStrictDecoder(map){
var keys=Object.keys(map).join("|"), 
replace=getReplacer(map);

keys += "|#[xX][\\da-fA-F]+|#\\d+";

var re=new RegExp("&(?:" + keys + ");", "g");

return function(str){
return String(str).replace(re, replace);};}



var decodeHTML=(function(){
var legacy=Object.keys(legacyMap).
sort(sorter);

var keys=Object.keys(entityMap).
sort(sorter);

for(var i=0, j=0; i < keys.length; i++) {
if(legacy[j] === keys[i]){
keys[i] += ";?";
j++;}else 
{
keys[i] += ";";}}



var re=new RegExp("&(?:" + keys.join("|") + "|#[xX][\\da-fA-F]+;?|#\\d+;?)", "g"), 
replace=getReplacer(entityMap);

function replacer(str){
if(str.substr(-1) !== ";")str += ";";
return replace(str);}



return function(str){
return String(str).replace(re, replacer);};})();



function sorter(a, b){
return a < b?1:-1;}


function getReplacer(map){
return function replace(str){
if(str.charAt(1) === "#"){
if(str.charAt(2) === "X" || str.charAt(2) === "x"){
return decodeCodePoint(parseInt(str.substr(3), 16));}

return decodeCodePoint(parseInt(str.substr(2), 10));}

return map[str.slice(1, -1)];};}



module.exports = {
XML:decodeXMLStrict, 
HTML:decodeHTML, 
HTMLStrict:decodeHTMLStrict};
});
__d('entities/maps/legacy.json',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"Aacute":"\u00C1","aacute":"\u00E1","Acirc":"\u00C2","acirc":"\u00E2","acute":"\u00B4","AElig":"\u00C6","aelig":"\u00E6","Agrave":"\u00C0","agrave":"\u00E0","amp":"&","AMP":"&","Aring":"\u00C5","aring":"\u00E5","Atilde":"\u00C3","atilde":"\u00E3","Auml":"\u00C4","auml":"\u00E4","brvbar":"\u00A6","Ccedil":"\u00C7","ccedil":"\u00E7","cedil":"\u00B8","cent":"\u00A2","copy":"\u00A9","COPY":"\u00A9","curren":"\u00A4","deg":"\u00B0","divide":"\u00F7","Eacute":"\u00C9","eacute":"\u00E9","Ecirc":"\u00CA","ecirc":"\u00EA","Egrave":"\u00C8","egrave":"\u00E8","ETH":"\u00D0","eth":"\u00F0","Euml":"\u00CB","euml":"\u00EB","frac12":"\u00BD","frac14":"\u00BC","frac34":"\u00BE","gt":">","GT":">","Iacute":"\u00CD","iacute":"\u00ED","Icirc":"\u00CE","icirc":"\u00EE","iexcl":"\u00A1","Igrave":"\u00CC","igrave":"\u00EC","iquest":"\u00BF","Iuml":"\u00CF","iuml":"\u00EF","laquo":"\u00AB","lt":"<","LT":"<","macr":"\u00AF","micro":"\u00B5","middot":"\u00B7","nbsp":"\u00A0","not":"\u00AC","Ntilde":"\u00D1","ntilde":"\u00F1","Oacute":"\u00D3","oacute":"\u00F3","Ocirc":"\u00D4","ocirc":"\u00F4","Ograve":"\u00D2","ograve":"\u00F2","ordf":"\u00AA","ordm":"\u00BA","Oslash":"\u00D8","oslash":"\u00F8","Otilde":"\u00D5","otilde":"\u00F5","Ouml":"\u00D6","ouml":"\u00F6","para":"\u00B6","plusmn":"\u00B1","pound":"\u00A3","quot":"\"","QUOT":"\"","raquo":"\u00BB","reg":"\u00AE","REG":"\u00AE","sect":"\u00A7","shy":"\u00AD","sup1":"\u00B9","sup2":"\u00B2","sup3":"\u00B3","szlig":"\u00DF","THORN":"\u00DE","thorn":"\u00FE","times":"\u00D7","Uacute":"\u00DA","uacute":"\u00FA","Ucirc":"\u00DB","ucirc":"\u00FB","Ugrave":"\u00D9","ugrave":"\u00F9","uml":"\u00A8","Uuml":"\u00DC","uuml":"\u00FC","Yacute":"\u00DD","yacute":"\u00FD","yen":"\u00A5","yuml":"\u00FF"};
});
__d('entities/lib/decode_codepoint.js',["entities/maps/decode.json"],function(global, require, requireDynamic, requireLazy, module, exports) {  var decodeMap=require("entities/maps/decode.json");

module.exports = decodeCodePoint;


function decodeCodePoint(codePoint){

if(codePoint >= 0xD800 && codePoint <= 0xDFFF || codePoint > 0x10FFFF){
return "�";}


if(codePoint in decodeMap){
codePoint = decodeMap[codePoint];}


var output="";

if(codePoint > 0xFFFF){
codePoint -= 0x10000;
output += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);
codePoint = 0xDC00 | codePoint & 0x3FF;}


output += String.fromCharCode(codePoint);
return output;}
});
__d('entities/maps/decode.json',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"0":65533,"128":8364,"130":8218,"131":402,"132":8222,"133":8230,"134":8224,"135":8225,"136":710,"137":8240,"138":352,"139":8249,"140":338,"142":381,"145":8216,"146":8217,"147":8220,"148":8221,"149":8226,"150":8211,"151":8212,"152":732,"153":8482,"154":353,"155":8250,"156":339,"158":382,"159":376};
});
__d('domutils/lib/traversal.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var getChildren=exports.getChildren = function(elem){
return elem.children;};


var getParent=exports.getParent = function(elem){
return elem.parent;};


exports.getSiblings = function(elem){
var parent=getParent(elem);
return parent?getChildren(parent):[elem];};


exports.getAttributeValue = function(elem, name){
return elem.attribs && elem.attribs[name];};


exports.hasAttrib = function(elem, name){
return !!elem.attribs && hasOwnProperty.call(elem.attribs, name);};


exports.getName = function(elem){
return elem.name;};
});
__d('domutils/lib/manipulation.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  exports.removeElement = function(elem){
if(elem.prev)elem.prev.next = elem.next;
if(elem.next)elem.next.prev = elem.prev;

if(elem.parent){
var childs=elem.parent.children;
childs.splice(childs.lastIndexOf(elem), 1);}};



exports.replaceElement = function(elem, replacement){
var prev=replacement.prev = elem.prev;
if(prev){
prev.next = replacement;}


var next=replacement.next = elem.next;
if(next){
next.prev = replacement;}


var parent=replacement.parent = elem.parent;
if(parent){
var childs=parent.children;
childs[childs.lastIndexOf(elem)] = replacement;}};



exports.appendChild = function(elem, child){
child.parent = elem;

if(elem.children.push(child) !== 1){
var sibling=elem.children[elem.children.length - 2];
sibling.next = child;
child.prev = sibling;
child.next = null;}};



exports.append = function(elem, next){
var parent=elem.parent, 
currNext=elem.next;

next.next = currNext;
next.prev = elem;
elem.next = next;
next.parent = parent;

if(currNext){
currNext.prev = next;
if(parent){
var childs=parent.children;
childs.splice(childs.lastIndexOf(currNext), 0, next);}}else 

if(parent){
parent.children.push(next);}};



exports.prepend = function(elem, prev){
var parent=elem.parent;
if(parent){
var childs=parent.children;
childs.splice(childs.lastIndexOf(elem), 0, prev);}


if(elem.prev){
elem.prev.next = prev;}


prev.parent = parent;
prev.prev = elem.prev;
prev.next = elem;
elem.prev = prev;};
});
__d('domutils/lib/querying.js',["domelementtype/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var isTag=require("domelementtype/index.js").isTag;

module.exports = {
filter:filter, 
find:find, 
findOneChild:findOneChild, 
findOne:findOne, 
existsOne:existsOne, 
findAll:findAll};


function filter(test, element, recurse, limit){
if(!Array.isArray(element))element = [element];

if(typeof limit !== "number" || !isFinite(limit)){
limit = Infinity;}

return find(test, element, recurse !== false, limit);}


function find(test, elems, recurse, limit){
var result=[], childs;

for(var i=0, j=elems.length; i < j; i++) {
if(test(elems[i])){
result.push(elems[i]);
if(--limit <= 0)break;}


childs = elems[i].children;
if(recurse && childs && childs.length > 0){
childs = find(test, childs, recurse, limit);
result = result.concat(childs);
limit -= childs.length;
if(limit <= 0)break;}}



return result;}


function findOneChild(test, elems){
for(var i=0, l=elems.length; i < l; i++) {
if(test(elems[i]))return elems[i];}


return null;}


function findOne(test, elems){
var elem=null;

for(var i=0, l=elems.length; i < l && !elem; i++) {
if(!isTag(elems[i])){
continue;}else 
if(test(elems[i])){
elem = elems[i];}else 
if(elems[i].children.length > 0){
elem = findOne(test, elems[i].children);}}



return elem;}


function existsOne(test, elems){
for(var i=0, l=elems.length; i < l; i++) {
if(
isTag(elems[i]) && (
test(elems[i]) || 
elems[i].children.length > 0 && 
existsOne(test, elems[i].children)))


{
return true;}}



return false;}


function findAll(test, elems){
var result=[];
for(var i=0, j=elems.length; i < j; i++) {
if(!isTag(elems[i]))continue;
if(test(elems[i]))result.push(elems[i]);

if(elems[i].children.length > 0){
result = result.concat(findAll(test, elems[i].children));}}


return result;}
});
__d('domutils/lib/legacy.js',["domelementtype/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var ElementType=require("domelementtype/index.js");
var isTag=exports.isTag = ElementType.isTag;

exports.testElement = function(options, element){
for(var key in options) {
if(!options.hasOwnProperty(key));else 
if(key === "tag_name"){
if(!isTag(element) || !options.tag_name(element.name)){
return false;}}else 

if(key === "tag_type"){
if(!options.tag_type(element.type))return false;}else 
if(key === "tag_contains"){
if(isTag(element) || !options.tag_contains(element.data)){
return false;}}else 

if(!element.attribs || !options[key](element.attribs[key])){
return false;}}


return true;};


var Checks={
tag_name:function(name){
if(typeof name === "function"){
return function(elem){return isTag(elem) && name(elem.name);};}else 
if(name === "*"){
return isTag;}else 
{
return function(elem){return isTag(elem) && elem.name === name;};}}, 


tag_type:function(type){
if(typeof type === "function"){
return function(elem){return type(elem.type);};}else 
{
return function(elem){return elem.type === type;};}}, 


tag_contains:function(data){
if(typeof data === "function"){
return function(elem){return !isTag(elem) && data(elem.data);};}else 
{
return function(elem){return !isTag(elem) && elem.data === data;};}}};




function getAttribCheck(attrib, value){
if(typeof value === "function"){
return function(elem){return elem.attribs && value(elem.attribs[attrib]);};}else 
{
return function(elem){return elem.attribs && elem.attribs[attrib] === value;};}}



function combineFuncs(a, b){
return function(elem){
return a(elem) || b(elem);};}



exports.getElements = function(options, element, recurse, limit){
var funcs=Object.keys(options).map(function(key){
var value=options[key];
return key in Checks?Checks[key](value):getAttribCheck(key, value);});


return funcs.length === 0?[]:this.filter(
funcs.reduce(combineFuncs), 
element, recurse, limit);};



exports.getElementById = function(id, element, recurse){
if(!Array.isArray(element))element = [element];
return this.findOne(getAttribCheck("id", id), element, recurse !== false);};


exports.getElementsByTagName = function(name, element, recurse, limit){
return this.filter(Checks.tag_name(name), element, recurse, limit);};


exports.getElementsByTagType = function(type, element, recurse, limit){
return this.filter(Checks.tag_type(type), element, recurse, limit);};
});
__d('domutils/lib/helpers.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  exports.

removeSubsets = function(nodes){
var idx=nodes.length, node, ancestor, replace;



while(--idx > -1) {
node = ancestor = nodes[idx];


nodes[idx] = null;
replace = true;

while(ancestor) {
if(nodes.indexOf(ancestor) > -1){
replace = false;
nodes.splice(idx, 1);
break;}

ancestor = ancestor.parent;}



if(replace){
nodes[idx] = node;}}



return nodes;};



var POSITION={
DISCONNECTED:1, 
PRECEDING:2, 
FOLLOWING:4, 
CONTAINS:8, 
CONTAINED_BY:16};
























var comparePos=exports.compareDocumentPosition = function(nodeA, nodeB){
var aParents=[];
var bParents=[];
var current, sharedParent, siblings, aSibling, bSibling, idx;

if(nodeA === nodeB){
return 0;}


current = nodeA;
while(current) {
aParents.unshift(current);
current = current.parent;}

current = nodeB;
while(current) {
bParents.unshift(current);
current = current.parent;}


idx = 0;
while(aParents[idx] === bParents[idx]) {
idx++;}


if(idx === 0){
return POSITION.DISCONNECTED;}


sharedParent = aParents[idx - 1];
siblings = sharedParent.children;
aSibling = aParents[idx];
bSibling = bParents[idx];

if(siblings.indexOf(aSibling) > siblings.indexOf(bSibling)){
if(sharedParent === nodeB){
return POSITION.FOLLOWING | POSITION.CONTAINED_BY;}

return POSITION.FOLLOWING;}else 
{
if(sharedParent === nodeA){
return POSITION.PRECEDING | POSITION.CONTAINS;}

return POSITION.PRECEDING;}};










exports.uniqueSort = function(nodes){
var idx=nodes.length, node, position;

nodes = nodes.slice();

while(--idx > -1) {
node = nodes[idx];
position = nodes.indexOf(node);
if(position > -1 && position < idx){
nodes.splice(idx, 1);}}


nodes.sort(function(a, b){
var relative=comparePos(a, b);
if(relative & POSITION.PRECEDING){
return -1;}else 
if(relative & POSITION.FOLLOWING){
return 1;}

return 0;});


return nodes;};
});
__d('htmlparser2/lib/CollectingHandler.js',["htmlparser2/lib/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = CollectingHandler;

function CollectingHandler(cbs){
this._cbs = cbs || {};
this.events = [];}


var EVENTS=require("htmlparser2/lib/index.js").EVENTS;
Object.keys(EVENTS).forEach(function(name){
if(EVENTS[name] === 0){
name = "on" + name;
CollectingHandler.prototype[name] = function(){
this.events.push([name]);
if(this._cbs[name])this._cbs[name]();};}else 

if(EVENTS[name] === 1){
name = "on" + name;
CollectingHandler.prototype[name] = function(a){
this.events.push([name, a]);
if(this._cbs[name])this._cbs[name](a);};}else 

if(EVENTS[name] === 2){
name = "on" + name;
CollectingHandler.prototype[name] = function(a, b){
this.events.push([name, a, b]);
if(this._cbs[name])this._cbs[name](a, b);};}else 

{
throw Error("wrong number of arguments");}});



CollectingHandler.prototype.onreset = function(){
this.events = [];
if(this._cbs.onreset)this._cbs.onreset();};


CollectingHandler.prototype.restart = function(){
if(this._cbs.onreset)this._cbs.onreset();

for(var i=0, len=this.events.length; i < len; i++) {
if(this._cbs[this.events[i][0]]){

var num=this.events[i].length;

if(num === 1){
this._cbs[this.events[i][0]]();}else 
if(num === 2){
this._cbs[this.events[i][0]](this.events[i][1]);}else 
{
this._cbs[this.events[i][0]](this.events[i][1], this.events[i][2]);}}}};
});
__d('lodash/dist/lodash.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  ;








(function(){


var undefined;


var arrayPool=[], 
objectPool=[];


var idCounter=0;


var keyPrefix=+new Date() + '';


var largeArraySize=75;


var maxPoolSize=40;


var whitespace=

' \t\u000b\f ﻿' + 


'\n\r\u2028\u2029' + 


' ᠎             　';



var reEmptyStringLeading=/\b__p \+= '';/g, 
reEmptyStringMiddle=/\b(__p \+=) '' \+/g, 
reEmptyStringTrailing=/(__e\(.*?\)|\b__t\)) \+\n'';/g;





var reEsTemplate=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;


var reFlags=/\w*$/;


var reFuncName=/^\s*function[ \n\r\t]+\w/;


var reInterpolate=/<%=([\s\S]+?)%>/g;


var reLeadingSpacesAndZeros=RegExp('^[' + whitespace + ']*0+(?=.$)');


var reNoMatch=/($^)/;


var reThis=/\bthis\b/;


var reUnescapedString=/['\n\r\t\u2028\u2029\\]/g;


var contextProps=[
'Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object', 
'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN', 
'parseInt', 'setTimeout'];



var templateCounter=0;


var argsClass='[object Arguments]', 
arrayClass='[object Array]', 
boolClass='[object Boolean]', 
dateClass='[object Date]', 
funcClass='[object Function]', 
numberClass='[object Number]', 
objectClass='[object Object]', 
regexpClass='[object RegExp]', 
stringClass='[object String]';


var cloneableClasses={};
cloneableClasses[funcClass] = false;
cloneableClasses[argsClass] = cloneableClasses[arrayClass] = 
cloneableClasses[boolClass] = cloneableClasses[dateClass] = 
cloneableClasses[numberClass] = cloneableClasses[objectClass] = 
cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;


var debounceOptions={
'leading':false, 
'maxWait':0, 
'trailing':false};



var descriptor={
'configurable':false, 
'enumerable':false, 
'value':null, 
'writable':false};



var objectTypes={
'boolean':false, 
'function':true, 
'object':true, 
'number':false, 
'string':false, 
'undefined':false};



var stringEscapes={
'\\':'\\', 
'\'':'\'', 
'\n':'n', 
'\r':'r', 
'\t':'t', 
'\u2028':'u2028', 
'\u2029':'u2029'};



var root=objectTypes[typeof window] && window || this;


var freeExports=objectTypes[typeof exports] && exports && !exports.nodeType && exports;


var freeModule=objectTypes[typeof module] && module && !module.nodeType && module;


var moduleExports=freeModule && freeModule.exports === freeExports && freeExports;


var freeGlobal=objectTypes[typeof global] && global;
if(freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)){
root = freeGlobal;}














function baseIndexOf(array, value, fromIndex){
var index=(fromIndex || 0) - 1, 
length=array?array.length:0;

while(++index < length) {
if(array[index] === value){
return index;}}


return -1;}











function cacheIndexOf(cache, value){
var type=typeof value;
cache = cache.cache;

if(type == 'boolean' || value == null){
return cache[value]?0:-1;}

if(type != 'number' && type != 'string'){
type = 'object';}

var key=type == 'number'?value:keyPrefix + value;
cache = (cache = cache[type]) && cache[key];

return type == 'object'?
cache && baseIndexOf(cache, value) > -1?0:-1:
cache?0:-1;}








function cachePush(value){
var cache=this.cache, 
type=typeof value;

if(type == 'boolean' || value == null){
cache[value] = true;}else 
{
if(type != 'number' && type != 'string'){
type = 'object';}

var key=type == 'number'?value:keyPrefix + value, 
typeCache=cache[type] || (cache[type] = {});

if(type == 'object'){
(typeCache[key] || (typeCache[key] = [])).push(value);}else 
{
typeCache[key] = true;}}}












function charAtCallback(value){
return value.charCodeAt(0);}











function compareAscending(a, b){
var ac=a.criteria, 
bc=b.criteria, 
index=-1, 
length=ac.length;

while(++index < length) {
var value=ac[index], 
other=bc[index];

if(value !== other){
if(value > other || typeof value == 'undefined'){
return 1;}

if(value < other || typeof other == 'undefined'){
return -1;}}}









return a.index - b.index;}









function createCache(array){
var index=-1, 
length=array.length, 
first=array[0], 
mid=array[length / 2 | 0], 
last=array[length - 1];

if(first && typeof first == 'object' && 
mid && typeof mid == 'object' && last && typeof last == 'object'){
return false;}

var cache=getObject();
cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;

var result=getObject();
result.array = array;
result.cache = cache;
result.push = cachePush;

while(++index < length) {
result.push(array[index]);}

return result;}










function escapeStringChar(match){
return '\\' + stringEscapes[match];}








function getArray(){
return arrayPool.pop() || [];}








function getObject(){
return objectPool.pop() || {
'array':null, 
'cache':null, 
'criteria':null, 
'false':false, 
'index':0, 
'null':false, 
'number':null, 
'object':null, 
'push':null, 
'string':null, 
'true':false, 
'undefined':false, 
'value':null};}









function releaseArray(array){
array.length = 0;
if(arrayPool.length < maxPoolSize){
arrayPool.push(array);}}









function releaseObject(object){
var cache=object.cache;
if(cache){
releaseObject(cache);}

object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;
if(objectPool.length < maxPoolSize){
objectPool.push(object);}}
















function slice(array, start, end){
start || (start = 0);
if(typeof end == 'undefined'){
end = array?array.length:0;}

var index=-1, 
length=end - start || 0, 
result=Array(length < 0?0:length);

while(++index < length) {
result[index] = array[start + index];}

return result;}













function runInContext(context){




context = context?_.defaults(root.Object(), context, _.pick(root, contextProps)):root;


var Array=context.Array, 
Boolean=context.Boolean, 
Date=context.Date, 
Function=context.Function, 
Math=context.Math, 
Number=context.Number, 
Object=context.Object, 
RegExp=context.RegExp, 
String=context.String, 
TypeError=context.TypeError;







var arrayRef=[];


var objectProto=Object.prototype;


var oldDash=context._;


var toString=objectProto.toString;


var reNative=RegExp('^' + 
String(toString).
replace(/[.*+?^${}()|[\]\\]/g, '\\$&').
replace(/toString| for [^\]]+/g, '.*?') + '$');



var ceil=Math.ceil, 
clearTimeout=context.clearTimeout, 
floor=Math.floor, 
fnToString=Function.prototype.toString, 
getPrototypeOf=isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf, 
hasOwnProperty=objectProto.hasOwnProperty, 
push=arrayRef.push, 
setTimeout=context.setTimeout, 
splice=arrayRef.splice, 
unshift=arrayRef.unshift;


var defineProperty=(function(){

try{
var o={}, 
func=isNative(func = Object.defineProperty) && func, 
result=func(o, o, o) && func;}
catch(e) {}
return result;})();



var nativeCreate=isNative(nativeCreate = Object.create) && nativeCreate, 
nativeIsArray=isNative(nativeIsArray = Array.isArray) && nativeIsArray, 
nativeIsFinite=context.isFinite, 
nativeIsNaN=context.isNaN, 
nativeKeys=isNative(nativeKeys = Object.keys) && nativeKeys, 
nativeMax=Math.max, 
nativeMin=Math.min, 
nativeParseInt=context.parseInt, 
nativeRandom=Math.random;


var ctorByClass={};
ctorByClass[arrayClass] = Array;
ctorByClass[boolClass] = Boolean;
ctorByClass[dateClass] = Date;
ctorByClass[funcClass] = Function;
ctorByClass[objectClass] = Object;
ctorByClass[numberClass] = Number;
ctorByClass[regexpClass] = RegExp;
ctorByClass[stringClass] = String;




































































function lodash(value){

return value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__')?
value:
new lodashWrapper(value);}










function lodashWrapper(value, chainAll){
this.__chain__ = !!chainAll;
this.__wrapped__ = value;}


lodashWrapper.prototype = lodash.prototype;








var support=lodash.support = {};








support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);







support.funcNames = typeof Function.name == 'string';










lodash.templateSettings = {







'escape':/<%-([\s\S]+?)%>/g, 







'evaluate':/<%([\s\S]+?)%>/g, 







'interpolate':reInterpolate, 







'variable':'', 







'imports':{







'_':lodash}};













function baseBind(bindData){
var func=bindData[0], 
partialArgs=bindData[2], 
thisArg=bindData[4];

function bound(){


if(partialArgs){



var args=slice(partialArgs);
push.apply(args, arguments);}



if(this instanceof bound){

var thisBinding=baseCreate(func.prototype), 
result=func.apply(thisBinding, args || arguments);
return isObject(result)?result:thisBinding;}

return func.apply(thisArg, args || arguments);}

setBindData(bound, bindData);
return bound;}














function baseClone(value, isDeep, callback, stackA, stackB){
if(callback){
var result=callback(value);
if(typeof result != 'undefined'){
return result;}}



var isObj=isObject(value);
if(isObj){
var className=toString.call(value);
if(!cloneableClasses[className]){
return value;}

var ctor=ctorByClass[className];
switch(className){
case boolClass:
case dateClass:
return new ctor(+value);

case numberClass:
case stringClass:
return new ctor(value);

case regexpClass:
result = ctor(value.source, reFlags.exec(value));
result.lastIndex = value.lastIndex;
return result;}}else 

{
return value;}

var isArr=isArray(value);
if(isDeep){

var initedStack=!stackA;
stackA || (stackA = getArray());
stackB || (stackB = getArray());

var length=stackA.length;
while(length--) {
if(stackA[length] == value){
return stackB[length];}}


result = isArr?ctor(value.length):{};}else 

{
result = isArr?slice(value):assign({}, value);}


if(isArr){
if(hasOwnProperty.call(value, 'index')){
result.index = value.index;}

if(hasOwnProperty.call(value, 'input')){
result.input = value.input;}}



if(!isDeep){
return result;}



stackA.push(value);
stackB.push(result);


(isArr?forEach:forOwn)(value, function(objValue, key){
result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);});


if(initedStack){
releaseArray(stackA);
releaseArray(stackB);}

return result;}










function baseCreate(prototype, properties){
return isObject(prototype)?nativeCreate(prototype):{};}


if(!nativeCreate){
baseCreate = (function(){
function Object(){}
return function(prototype){
if(isObject(prototype)){
Object.prototype = prototype;
var result=new Object();
Object.prototype = null;}

return result || context.Object();};})();}














function baseCreateCallback(func, thisArg, argCount){
if(typeof func != 'function'){
return identity;}


if(typeof thisArg == 'undefined' || !('prototype' in func)){
return func;}

var bindData=func.__bindData__;
if(typeof bindData == 'undefined'){
if(support.funcNames){
bindData = !func.name;}

bindData = bindData || !support.funcDecomp;
if(!bindData){
var source=fnToString.call(func);
if(!support.funcNames){
bindData = !reFuncName.test(source);}

if(!bindData){

bindData = reThis.test(source);
setBindData(func, bindData);}}}




if(bindData === false || bindData !== true && bindData[1] & 1){
return func;}

switch(argCount){
case 1:return function(value){
return func.call(thisArg, value);};

case 2:return function(a, b){
return func.call(thisArg, a, b);};

case 3:return function(value, index, collection){
return func.call(thisArg, value, index, collection);};

case 4:return function(accumulator, value, index, collection){
return func.call(thisArg, accumulator, value, index, collection);};}


return bind(func, thisArg);}










function baseCreateWrapper(bindData){
var func=bindData[0], 
bitmask=bindData[1], 
partialArgs=bindData[2], 
partialRightArgs=bindData[3], 
thisArg=bindData[4], 
arity=bindData[5];

var isBind=bitmask & 1, 
isBindKey=bitmask & 2, 
isCurry=bitmask & 4, 
isCurryBound=bitmask & 8, 
key=func;

function bound(){
var thisBinding=isBind?thisArg:this;
if(partialArgs){
var args=slice(partialArgs);
push.apply(args, arguments);}

if(partialRightArgs || isCurry){
args || (args = slice(arguments));
if(partialRightArgs){
push.apply(args, partialRightArgs);}

if(isCurry && args.length < arity){
bitmask |= 16 & ~32;
return baseCreateWrapper([func, isCurryBound?bitmask:bitmask & ~3, args, null, thisArg, arity]);}}


args || (args = arguments);
if(isBindKey){
func = thisBinding[key];}

if(this instanceof bound){
thisBinding = baseCreate(func.prototype);
var result=func.apply(thisBinding, args);
return isObject(result)?result:thisBinding;}

return func.apply(thisBinding, args);}

setBindData(bound, bindData);
return bound;}











function baseDifference(array, values){
var index=-1, 
indexOf=getIndexOf(), 
length=array?array.length:0, 
isLarge=length >= largeArraySize && indexOf === baseIndexOf, 
result=[];

if(isLarge){
var cache=createCache(values);
if(cache){
indexOf = cacheIndexOf;
values = cache;}else 
{
isLarge = false;}}


while(++index < length) {
var value=array[index];
if(indexOf(values, value) < 0){
result.push(value);}}


if(isLarge){
releaseObject(values);}

return result;}













function baseFlatten(array, isShallow, isStrict, fromIndex){
var index=(fromIndex || 0) - 1, 
length=array?array.length:0, 
result=[];

while(++index < length) {
var value=array[index];

if(value && typeof value == 'object' && typeof value.length == 'number' && (
isArray(value) || isArguments(value))){

if(!isShallow){
value = baseFlatten(value, isShallow, isStrict);}

var valIndex=-1, 
valLength=value.length, 
resIndex=result.length;

result.length += valLength;
while(++valIndex < valLength) {
result[resIndex++] = value[valIndex];}}else 

if(!isStrict){
result.push(value);}}


return result;}















function baseIsEqual(a, b, callback, isWhere, stackA, stackB){

if(callback){
var result=callback(a, b);
if(typeof result != 'undefined'){
return !!result;}}



if(a === b){

return a !== 0 || 1 / a == 1 / b;}

var type=typeof a, 
otherType=typeof b;


if(a === a && 
!(a && objectTypes[type]) && 
!(b && objectTypes[otherType])){
return false;}



if(a == null || b == null){
return a === b;}


var className=toString.call(a), 
otherClass=toString.call(b);

if(className == argsClass){
className = objectClass;}

if(otherClass == argsClass){
otherClass = objectClass;}

if(className != otherClass){
return false;}

switch(className){
case boolClass:
case dateClass:


return +a == +b;

case numberClass:

return a != +a?
b != +b:

a == 0?1 / a == 1 / b:a == +b;

case regexpClass:
case stringClass:


return a == String(b);}

var isArr=className == arrayClass;
if(!isArr){

var aWrapped=hasOwnProperty.call(a, '__wrapped__'), 
bWrapped=hasOwnProperty.call(b, '__wrapped__');

if(aWrapped || bWrapped){
return baseIsEqual(aWrapped?a.__wrapped__:a, bWrapped?b.__wrapped__:b, callback, isWhere, stackA, stackB);}


if(className != objectClass){
return false;}


var ctorA=a.constructor, 
ctorB=b.constructor;


if(ctorA != ctorB && 
!(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) && (
'constructor' in a && 'constructor' in b))
{
return false;}}





var initedStack=!stackA;
stackA || (stackA = getArray());
stackB || (stackB = getArray());

var length=stackA.length;
while(length--) {
if(stackA[length] == a){
return stackB[length] == b;}}


var size=0;
result = true;


stackA.push(a);
stackB.push(b);


if(isArr){

length = a.length;
size = b.length;
result = size == length;

if(result || isWhere){

while(size--) {
var index=length, 
value=b[size];

if(isWhere){
while(index--) {
if(result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB)){
break;}}}else 


if(!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))){
break;}}}}else 




{


forIn(b, function(value, key, b){
if(hasOwnProperty.call(b, key)){

size++;

return result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB);}});



if(result && !isWhere){

forIn(a, function(value, key, a){
if(hasOwnProperty.call(a, key)){

return result = --size > -1;}});}}




stackA.pop();
stackB.pop();

if(initedStack){
releaseArray(stackA);
releaseArray(stackB);}

return result;}













function baseMerge(object, source, callback, stackA, stackB){
(isArray(source)?forEach:forOwn)(source, function(source, key){
var found, 
isArr, 
result=source, 
value=object[key];

if(source && ((isArr = isArray(source)) || isPlainObject(source))){

var stackLength=stackA.length;
while(stackLength--) {
if(found = stackA[stackLength] == source){
value = stackB[stackLength];
break;}}


if(!found){
var isShallow;
if(callback){
result = callback(value, source);
if(isShallow = typeof result != 'undefined'){
value = result;}}


if(!isShallow){
value = isArr?
isArray(value)?value:[]:
isPlainObject(value)?value:{};}


stackA.push(source);
stackB.push(value);


if(!isShallow){
baseMerge(value, source, callback, stackA, stackB);}}}else 



{
if(callback){
result = callback(value, source);
if(typeof result == 'undefined'){
result = source;}}


if(typeof result != 'undefined'){
value = result;}}


object[key] = value;});}












function baseRandom(min, max){
return min + floor(nativeRandom() * (max - min + 1));}












function baseUniq(array, isSorted, callback){
var index=-1, 
indexOf=getIndexOf(), 
length=array?array.length:0, 
result=[];

var isLarge=!isSorted && length >= largeArraySize && indexOf === baseIndexOf, 
seen=callback || isLarge?getArray():result;

if(isLarge){
var cache=createCache(seen);
indexOf = cacheIndexOf;
seen = cache;}

while(++index < length) {
var value=array[index], 
computed=callback?callback(value, index, array):value;

if(isSorted?
!index || seen[seen.length - 1] !== computed:
indexOf(seen, computed) < 0)
{
if(callback || isLarge){
seen.push(computed);}

result.push(value);}}


if(isLarge){
releaseArray(seen.array);
releaseObject(seen);}else 
if(callback){
releaseArray(seen);}

return result;}












function createAggregator(setter){
return function(collection, callback, thisArg){
var result={};
callback = lodash.createCallback(callback, thisArg, 3);

var index=-1, 
length=collection?collection.length:0;

if(typeof length == 'number'){
while(++index < length) {
var value=collection[index];
setter(result, value, callback(value, index, collection), collection);}}else 

{
forOwn(collection, function(value, key, collection){
setter(result, value, callback(value, key, collection), collection);});}


return result;};}

























function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity){
var isBind=bitmask & 1, 
isBindKey=bitmask & 2, 
isCurry=bitmask & 4, 
isCurryBound=bitmask & 8, 
isPartial=bitmask & 16, 
isPartialRight=bitmask & 32;

if(!isBindKey && !isFunction(func)){
throw new TypeError();}

if(isPartial && !partialArgs.length){
bitmask &= ~16;
isPartial = partialArgs = false;}

if(isPartialRight && !partialRightArgs.length){
bitmask &= ~32;
isPartialRight = partialRightArgs = false;}

var bindData=func && func.__bindData__;
if(bindData && bindData !== true){

bindData = slice(bindData);
if(bindData[2]){
bindData[2] = slice(bindData[2]);}

if(bindData[3]){
bindData[3] = slice(bindData[3]);}


if(isBind && !(bindData[1] & 1)){
bindData[4] = thisArg;}


if(!isBind && bindData[1] & 1){
bitmask |= 8;}


if(isCurry && !(bindData[1] & 4)){
bindData[5] = arity;}


if(isPartial){
push.apply(bindData[2] || (bindData[2] = []), partialArgs);}


if(isPartialRight){
unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);}


bindData[1] |= bitmask;
return createWrapper.apply(null, bindData);}


var creater=bitmask == 1 || bitmask === 17?baseBind:baseCreateWrapper;
return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);}









function escapeHtmlChar(match){
return htmlEscapes[match];}










function getIndexOf(){
var result=(result = lodash.indexOf) === indexOf?baseIndexOf:result;
return result;}









function isNative(value){
return typeof value == 'function' && reNative.test(value);}









var setBindData=!defineProperty?noop:function(func, value){
descriptor.value = value;
defineProperty(func, '__bindData__', descriptor);
descriptor.value = null;};












function shimIsPlainObject(value){
var ctor, 
result;


if(!(value && toString.call(value) == objectClass) || (
ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))){
return false;}




forIn(value, function(value, key){
result = key;});

return typeof result == 'undefined' || hasOwnProperty.call(value, result);}









function unescapeHtmlChar(match){
return htmlUnescapes[match];}




















function isArguments(value){
return value && typeof value == 'object' && typeof value.length == 'number' && 
toString.call(value) == argsClass || false;}



















var isArray=nativeIsArray || function(value){
return value && typeof value == 'object' && typeof value.length == 'number' && 
toString.call(value) == arrayClass || false;};











var shimKeys=function(object){
var index, iterable=object, result=[];
if(!iterable)return result;
if(!objectTypes[typeof object])return result;
for(index in iterable) {
if(hasOwnProperty.call(iterable, index)){
result.push(index);}}


return result;};















var keys=!nativeKeys?shimKeys:function(object){
if(!isObject(object)){
return [];}

return nativeKeys(object);};










var htmlEscapes={
'&':'&amp;', 
'<':'&lt;', 
'>':'&gt;', 
'"':'&quot;', 
'\'':'&#39;'};



var htmlUnescapes=invert(htmlEscapes);


var reEscapedHtml=RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'), 
reUnescapedHtml=RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');

































var assign=function(object, source, guard){
var index, iterable=object, result=iterable;
if(!iterable)return result;
var args=arguments, 
argsIndex=0, 
argsLength=typeof guard == 'number'?2:args.length;
if(argsLength > 3 && typeof args[argsLength - 2] == 'function'){
var callback=baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);}else 
if(argsLength > 2 && typeof args[argsLength - 1] == 'function'){
callback = args[--argsLength];}

while(++argsIndex < argsLength) {
iterable = args[argsIndex];
if(iterable && objectTypes[typeof iterable]){
var ownIndex=-1, 
ownProps=objectTypes[typeof iterable] && keys(iterable), 
length=ownProps?ownProps.length:0;

while(++ownIndex < length) {
index = ownProps[ownIndex];
result[index] = callback?callback(result[index], iterable[index]):iterable[index];}}}



return result;};










































function clone(value, isDeep, callback, thisArg){


if(typeof isDeep != 'boolean' && isDeep != null){
thisArg = callback;
callback = isDeep;
isDeep = false;}

return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));}











































function cloneDeep(value, callback, thisArg){
return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));}

































function create(prototype, properties){
var result=baseCreate(prototype);
return properties?assign(result, properties):result;}






















var defaults=function(object, source, guard){
var index, iterable=object, result=iterable;
if(!iterable)return result;
var args=arguments, 
argsIndex=0, 
argsLength=typeof guard == 'number'?2:args.length;
while(++argsIndex < argsLength) {
iterable = args[argsIndex];
if(iterable && objectTypes[typeof iterable]){
var ownIndex=-1, 
ownProps=objectTypes[typeof iterable] && keys(iterable), 
length=ownProps?ownProps.length:0;

while(++ownIndex < length) {
index = ownProps[ownIndex];
if(typeof result[index] == 'undefined')result[index] = iterable[index];}}}



return result;};











































function findKey(object, callback, thisArg){
var result;
callback = lodash.createCallback(callback, thisArg, 3);
forOwn(object, function(value, key, object){
if(callback(value, key, object)){
result = key;
return false;}});


return result;}











































function findLastKey(object, callback, thisArg){
var result;
callback = lodash.createCallback(callback, thisArg, 3);
forOwnRight(object, function(value, key, object){
if(callback(value, key, object)){
result = key;
return false;}});


return result;}

































var forIn=function(collection, callback, thisArg){
var index, iterable=collection, result=iterable;
if(!iterable)return result;
if(!objectTypes[typeof iterable])return result;
callback = callback && typeof thisArg == 'undefined'?callback:baseCreateCallback(callback, thisArg, 3);
for(index in iterable) {
if(callback(iterable[index], index, collection) === false)return result;}

return result;};






























function forInRight(object, callback, thisArg){
var pairs=[];

forIn(object, function(value, key){
pairs.push(key, value);});


var length=pairs.length;
callback = baseCreateCallback(callback, thisArg, 3);
while(length--) {
if(callback(pairs[length--], pairs[length], object) === false){
break;}}


return object;}























var forOwn=function(collection, callback, thisArg){
var index, iterable=collection, result=iterable;
if(!iterable)return result;
if(!objectTypes[typeof iterable])return result;
callback = callback && typeof thisArg == 'undefined'?callback:baseCreateCallback(callback, thisArg, 3);
var ownIndex=-1, 
ownProps=objectTypes[typeof iterable] && keys(iterable), 
length=ownProps?ownProps.length:0;

while(++ownIndex < length) {
index = ownProps[ownIndex];
if(callback(iterable[index], index, collection) === false)return result;}

return result;};




















function forOwnRight(object, callback, thisArg){
var props=keys(object), 
length=props.length;

callback = baseCreateCallback(callback, thisArg, 3);
while(length--) {
var key=props[length];
if(callback(object[key], key, object) === false){
break;}}


return object;}

















function functions(object){
var result=[];
forIn(object, function(value, key){
if(isFunction(value)){
result.push(key);}});


return result.sort();}

















function has(object, key){
return object?hasOwnProperty.call(object, key):false;}















function invert(object){
var index=-1, 
props=keys(object), 
length=props.length, 
result={};

while(++index < length) {
var key=props[index];
result[object[key]] = key;}

return result;}















function isBoolean(value){
return value === true || value === false || 
value && typeof value == 'object' && toString.call(value) == boolClass || false;}















function isDate(value){
return value && typeof value == 'object' && toString.call(value) == dateClass || false;}















function isElement(value){
return value && value.nodeType === 1 || false;}























function isEmpty(value){
var result=true;
if(!value){
return result;}

var className=toString.call(value), 
length=value.length;

if(className == arrayClass || className == stringClass || className == argsClass || 
className == objectClass && typeof length == 'number' && isFunction(value.splice)){
return !length;}

forOwn(value, function(){
return result = false;});

return result;}








































function isEqual(a, b, callback, thisArg){
return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));}






























function isFinite(value){
return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));}















function isFunction(value){
return typeof value == 'function';}






















function isObject(value){




return !!(value && objectTypes[typeof value]);}



























function isNaN(value){


return isNumber(value) && value != +value;}


















function isNull(value){
return value === null;}

















function isNumber(value){
return typeof value == 'number' || 
value && typeof value == 'object' && toString.call(value) == numberClass || false;}


























var isPlainObject=!getPrototypeOf?shimIsPlainObject:function(value){
if(!(value && toString.call(value) == objectClass)){
return false;}

var valueOf=value.valueOf, 
objProto=isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);

return objProto?
value == objProto || getPrototypeOf(value) == objProto:
shimIsPlainObject(value);};















function isRegExp(value){
return value && typeof value == 'object' && toString.call(value) == regexpClass || false;}















function isString(value){
return typeof value == 'string' || 
value && typeof value == 'object' && toString.call(value) == stringClass || false;}















function isUndefined(value){
return typeof value == 'undefined';}






































function mapValues(object, callback, thisArg){
var result={};
callback = lodash.createCallback(callback, thisArg, 3);

forOwn(object, function(value, key, object){
result[key] = callback(value, key, object);});

return result;}





















































function merge(object){
var args=arguments, 
length=2;

if(!isObject(object)){
return object;}



if(typeof args[2] != 'number'){
length = args.length;}

if(length > 3 && typeof args[length - 2] == 'function'){
var callback=baseCreateCallback(args[--length - 1], args[length--], 2);}else 
if(length > 2 && typeof args[length - 1] == 'function'){
callback = args[--length];}

var sources=slice(arguments, 1, length), 
index=-1, 
stackA=getArray(), 
stackB=getArray();

while(++index < length) {
baseMerge(object, sources[index], callback, stackA, stackB);}

releaseArray(stackA);
releaseArray(stackB);
return object;}




























function omit(object, callback, thisArg){
var result={};
if(typeof callback != 'function'){
var props=[];
forIn(object, function(value, key){
props.push(key);});

props = baseDifference(props, baseFlatten(arguments, true, false, 1));

var index=-1, 
length=props.length;

while(++index < length) {
var key=props[index];
result[key] = object[key];}}else 

{
callback = lodash.createCallback(callback, thisArg, 3);
forIn(object, function(value, key, object){
if(!callback(value, key, object)){
result[key] = value;}});}



return result;}
















function pairs(object){
var index=-1, 
props=keys(object), 
length=props.length, 
result=Array(length);

while(++index < length) {
var key=props[index];
result[index] = [key, object[key]];}

return result;}





























function pick(object, callback, thisArg){
var result={};
if(typeof callback != 'function'){
var index=-1, 
props=baseFlatten(arguments, true, false, 1), 
length=isObject(object)?props.length:0;

while(++index < length) {
var key=props[index];
if(key in object){
result[key] = object[key];}}}else 


{
callback = lodash.createCallback(callback, thisArg, 3);
forIn(object, function(value, key, object){
if(callback(value, key, object)){
result[key] = value;}});}



return result;}

































function transform(object, callback, accumulator, thisArg){
var isArr=isArray(object);
if(accumulator == null){
if(isArr){
accumulator = [];}else 
{
var ctor=object && object.constructor, 
proto=ctor && ctor.prototype;

accumulator = baseCreate(proto);}}


if(callback){
callback = lodash.createCallback(callback, thisArg, 4);
(isArr?forEach:forOwn)(object, function(value, index, object){
return callback(accumulator, value, index, object);});}


return accumulator;}















function values(object){
var index=-1, 
props=keys(object), 
length=props.length, 
result=Array(length);

while(++index < length) {
result[index] = object[props[index]];}

return result;}

























function at(collection){
var args=arguments, 
index=-1, 
props=baseFlatten(args, true, false, 1), 
length=args[2] && args[2][args[1]] === collection?1:props.length, 
result=Array(length);

while(++index < length) {
result[index] = collection[props[index]];}

return result;}





























function contains(collection, target, fromIndex){
var index=-1, 
indexOf=getIndexOf(), 
length=collection?collection.length:0, 
result=false;

fromIndex = (fromIndex < 0?nativeMax(0, length + fromIndex):fromIndex) || 0;
if(isArray(collection)){
result = indexOf(collection, target, fromIndex) > -1;}else 
if(typeof length == 'number'){
result = (isString(collection)?collection.indexOf(target, fromIndex):indexOf(collection, target, fromIndex)) > -1;}else 
{
forOwn(collection, function(value){
if(++index >= fromIndex){
return !(result = value === target);}});}



return result;}




































var countBy=createAggregator(function(result, value, key){
hasOwnProperty.call(result, key)?result[key]++:result[key] = 1;});











































function every(collection, callback, thisArg){
var result=true;
callback = lodash.createCallback(callback, thisArg, 3);

var index=-1, 
length=collection?collection.length:0;

if(typeof length == 'number'){
while(++index < length) {
if(!(result = !!callback(collection[index], index, collection))){
break;}}}else 


{
forOwn(collection, function(value, index, collection){
return result = !!callback(value, index, collection);});}


return result;}










































function filter(collection, callback, thisArg){
var result=[];
callback = lodash.createCallback(callback, thisArg, 3);

var index=-1, 
length=collection?collection.length:0;

if(typeof length == 'number'){
while(++index < length) {
var value=collection[index];
if(callback(value, index, collection)){
result.push(value);}}}else 


{
forOwn(collection, function(value, index, collection){
if(callback(value, index, collection)){
result.push(value);}});}



return result;}













































function find(collection, callback, thisArg){
callback = lodash.createCallback(callback, thisArg, 3);

var index=-1, 
length=collection?collection.length:0;

if(typeof length == 'number'){
while(++index < length) {
var value=collection[index];
if(callback(value, index, collection)){
return value;}}}else 


{
var result;
forOwn(collection, function(value, index, collection){
if(callback(value, index, collection)){
result = value;
return false;}});


return result;}}























function findLast(collection, callback, thisArg){
var result;
callback = lodash.createCallback(callback, thisArg, 3);
forEachRight(collection, function(value, index, collection){
if(callback(value, index, collection)){
result = value;
return false;}});


return result;}




























function forEach(collection, callback, thisArg){
var index=-1, 
length=collection?collection.length:0;

callback = callback && typeof thisArg == 'undefined'?callback:baseCreateCallback(callback, thisArg, 3);
if(typeof length == 'number'){
while(++index < length) {
if(callback(collection[index], index, collection) === false){
break;}}}else 


{
forOwn(collection, callback);}

return collection;}



















function forEachRight(collection, callback, thisArg){
var length=collection?collection.length:0;
callback = callback && typeof thisArg == 'undefined'?callback:baseCreateCallback(callback, thisArg, 3);
if(typeof length == 'number'){
while(length--) {
if(callback(collection[length], length, collection) === false){
break;}}}else 


{
var props=keys(collection);
length = props.length;
forOwn(collection, function(value, key, collection){
key = props?props[--length]:--length;
return callback(collection[key], key, collection);});}


return collection;}





































var groupBy=createAggregator(function(result, value, key){
(hasOwnProperty.call(result, key)?result[key]:result[key] = []).push(value);});









































var indexBy=createAggregator(function(result, value, key){
result[key] = value;});
























function invoke(collection, methodName){
var args=slice(arguments, 2), 
index=-1, 
isFunc=typeof methodName == 'function', 
length=collection?collection.length:0, 
result=Array(typeof length == 'number'?length:0);

forEach(collection, function(value){
result[++index] = (isFunc?methodName:value[methodName]).apply(value, args);});

return result;}









































function map(collection, callback, thisArg){
var index=-1, 
length=collection?collection.length:0;

callback = lodash.createCallback(callback, thisArg, 3);
if(typeof length == 'number'){
var result=Array(length);
while(++index < length) {
result[index] = callback(collection[index], index, collection);}}else 

{
result = [];
forOwn(collection, function(value, key, collection){
result[++index] = callback(value, key, collection);});}


return result;}










































function max(collection, callback, thisArg){
var computed=-Infinity, 
result=computed;



if(typeof callback != 'function' && thisArg && thisArg[callback] === collection){
callback = null;}

if(callback == null && isArray(collection)){
var index=-1, 
length=collection.length;

while(++index < length) {
var value=collection[index];
if(value > result){
result = value;}}}else 


{
callback = callback == null && isString(collection)?
charAtCallback:
lodash.createCallback(callback, thisArg, 3);

forEach(collection, function(value, index, collection){
var current=callback(value, index, collection);
if(current > computed){
computed = current;
result = value;}});}



return result;}










































function min(collection, callback, thisArg){
var computed=Infinity, 
result=computed;



if(typeof callback != 'function' && thisArg && thisArg[callback] === collection){
callback = null;}

if(callback == null && isArray(collection)){
var index=-1, 
length=collection.length;

while(++index < length) {
var value=collection[index];
if(value < result){
result = value;}}}else 


{
callback = callback == null && isString(collection)?
charAtCallback:
lodash.createCallback(callback, thisArg, 3);

forEach(collection, function(value, index, collection){
var current=callback(value, index, collection);
if(current < computed){
computed = current;
result = value;}});}



return result;}






















var pluck=map;































function reduce(collection, callback, accumulator, thisArg){
if(!collection)return accumulator;
var noaccum=arguments.length < 3;
callback = lodash.createCallback(callback, thisArg, 4);

var index=-1, 
length=collection.length;

if(typeof length == 'number'){
if(noaccum){
accumulator = collection[++index];}

while(++index < length) {
accumulator = callback(accumulator, collection[index], index, collection);}}else 

{
forOwn(collection, function(value, index, collection){
accumulator = noaccum?(
noaccum = false, value):
callback(accumulator, value, index, collection);});}


return accumulator;}





















function reduceRight(collection, callback, accumulator, thisArg){
var noaccum=arguments.length < 3;
callback = lodash.createCallback(callback, thisArg, 4);
forEachRight(collection, function(value, index, collection){
accumulator = noaccum?(
noaccum = false, value):
callback(accumulator, value, index, collection);});

return accumulator;}








































function reject(collection, callback, thisArg){
callback = lodash.createCallback(callback, thisArg, 3);
return filter(collection, function(value, index, collection){
return !callback(value, index, collection);});}






















function sample(collection, n, guard){
if(collection && typeof collection.length != 'number'){
collection = values(collection);}

if(n == null || guard){
return collection?collection[baseRandom(0, collection.length - 1)]:undefined;}

var result=shuffle(collection);
result.length = nativeMin(nativeMax(0, n), result.length);
return result;}
















function shuffle(collection){
var index=-1, 
length=collection?collection.length:0, 
result=Array(typeof length == 'number'?length:0);

forEach(collection, function(value){
var rand=baseRandom(0, ++index);
result[index] = result[rand];
result[rand] = value;});

return result;}






















function size(collection){
var length=collection?collection.length:0;
return typeof length == 'number'?length:keys(collection).length;}












































function some(collection, callback, thisArg){
var result;
callback = lodash.createCallback(callback, thisArg, 3);

var index=-1, 
length=collection?collection.length:0;

if(typeof length == 'number'){
while(++index < length) {
if(result = callback(collection[index], index, collection)){
break;}}}else 


{
forOwn(collection, function(value, index, collection){
return !(result = callback(value, index, collection));});}


return !!result;}



















































function sortBy(collection, callback, thisArg){
var index=-1, 
isArr=isArray(callback), 
length=collection?collection.length:0, 
result=Array(typeof length == 'number'?length:0);

if(!isArr){
callback = lodash.createCallback(callback, thisArg, 3);}

forEach(collection, function(value, key, collection){
var object=result[++index] = getObject();
if(isArr){
object.criteria = map(callback, function(key){return value[key];});}else 
{
(object.criteria = getArray())[0] = callback(value, key, collection);}

object.index = index;
object.value = value;});


length = result.length;
result.sort(compareAscending);
while(length--) {
var object=result[length];
result[length] = object.value;
if(!isArr){
releaseArray(object.criteria);}

releaseObject(object);}

return result;}















function toArray(collection){
if(collection && typeof collection.length == 'number'){
return slice(collection);}

return values(collection);}



























var where=filter;

















function compact(array){
var index=-1, 
length=array?array.length:0, 
result=[];

while(++index < length) {
var value=array[index];
if(value){
result.push(value);}}


return result;}

















function difference(array){
return baseDifference(array, baseFlatten(arguments, true, true, 1));}











































function findIndex(array, callback, thisArg){
var index=-1, 
length=array?array.length:0;

callback = lodash.createCallback(callback, thisArg, 3);
while(++index < length) {
if(callback(array[index], index, array)){
return index;}}


return -1;}











































function findLastIndex(array, callback, thisArg){
var length=array?array.length:0;
callback = lodash.createCallback(callback, thisArg, 3);
while(length--) {
if(callback(array[length], length, array)){
return length;}}


return -1;}





















































function first(array, callback, thisArg){
var n=0, 
length=array?array.length:0;

if(typeof callback != 'number' && callback != null){
var index=-1;
callback = lodash.createCallback(callback, thisArg, 3);
while(++index < length && callback(array[index], index, array)) {
n++;}}else 

{
n = callback;
if(n == null || thisArg){
return array?array[0]:undefined;}}


return slice(array, 0, nativeMin(nativeMax(0, n), length));}











































function flatten(array, isShallow, callback, thisArg){

if(typeof isShallow != 'boolean' && isShallow != null){
thisArg = callback;
callback = typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array?null:isShallow;
isShallow = false;}

if(callback != null){
array = map(array, callback, thisArg);}

return baseFlatten(array, isShallow);}


























function indexOf(array, value, fromIndex){
if(typeof fromIndex == 'number'){
var length=array?array.length:0;
fromIndex = fromIndex < 0?nativeMax(0, length + fromIndex):fromIndex || 0;}else 
if(fromIndex){
var index=sortedIndex(array, value);
return array[index] === value?index:-1;}

return baseIndexOf(array, value, fromIndex);}




















































function initial(array, callback, thisArg){
var n=0, 
length=array?array.length:0;

if(typeof callback != 'number' && callback != null){
var index=length;
callback = lodash.createCallback(callback, thisArg, 3);
while(index-- && callback(array[index], index, array)) {
n++;}}else 

{
n = callback == null || thisArg?1:callback || n;}

return slice(array, 0, nativeMin(nativeMax(0, length - n), length));}
















function intersection(){
var args=[], 
argsIndex=-1, 
argsLength=arguments.length, 
caches=getArray(), 
indexOf=getIndexOf(), 
trustIndexOf=indexOf === baseIndexOf, 
seen=getArray();

while(++argsIndex < argsLength) {
var value=arguments[argsIndex];
if(isArray(value) || isArguments(value)){
args.push(value);
caches.push(trustIndexOf && value.length >= largeArraySize && 
createCache(argsIndex?args[argsIndex]:seen));}}


var array=args[0], 
index=-1, 
length=array?array.length:0, 
result=[];

outer: 
while(++index < length) {
var cache=caches[0];
value = array[index];

if((cache?cacheIndexOf(cache, value):indexOf(seen, value)) < 0){
argsIndex = argsLength;
(cache || seen).push(value);
while(--argsIndex) {
cache = caches[argsIndex];
if((cache?cacheIndexOf(cache, value):indexOf(args[argsIndex], value)) < 0){
continue outer;}}


result.push(value);}}


while(argsLength--) {
cache = caches[argsLength];
if(cache){
releaseObject(cache);}}


releaseArray(caches);
releaseArray(seen);
return result;}




















































function last(array, callback, thisArg){
var n=0, 
length=array?array.length:0;

if(typeof callback != 'number' && callback != null){
var index=length;
callback = lodash.createCallback(callback, thisArg, 3);
while(index-- && callback(array[index], index, array)) {
n++;}}else 

{
n = callback;
if(n == null || thisArg){
return array?array[length - 1]:undefined;}}


return slice(array, nativeMax(0, length - n));}





























function lastIndexOf(array, value, fromIndex){
var index=array?array.length:0;
if(typeof fromIndex == 'number'){
index = (fromIndex < 0?nativeMax(0, index + fromIndex):nativeMin(fromIndex, index - 1)) + 1;}

while(index--) {
if(array[index] === value){
return index;}}


return -1;}



















function pull(array){
var args=arguments, 
argsIndex=0, 
argsLength=args.length, 
length=array?array.length:0;

while(++argsIndex < argsLength) {
var index=-1, 
value=args[argsIndex];
while(++index < length) {
if(array[index] === value){
splice.call(array, index--, 1);
length--;}}}



return array;}


































function range(start, end, step){
start = +start || 0;
step = typeof step == 'number'?step:+step || 1;

if(end == null){
end = start;
start = 0;}



var index=-1, 
length=nativeMax(0, ceil((end - start) / (step || 1))), 
result=Array(length);

while(++index < length) {
result[index] = start;
start += step;}

return result;}


































function remove(array, callback, thisArg){
var index=-1, 
length=array?array.length:0, 
result=[];

callback = lodash.createCallback(callback, thisArg, 3);
while(++index < length) {
var value=array[index];
if(callback(value, index, array)){
result.push(value);
splice.call(array, index--, 1);
length--;}}


return result;}






















































function rest(array, callback, thisArg){
if(typeof callback != 'number' && callback != null){
var n=0, 
index=-1, 
length=array?array.length:0;

callback = lodash.createCallback(callback, thisArg, 3);
while(++index < length && callback(array[index], index, array)) {
n++;}}else 

{
n = callback == null || thisArg?1:nativeMax(0, callback);}

return slice(array, n);}


















































function sortedIndex(array, value, callback, thisArg){
var low=0, 
high=array?array.length:low;


callback = callback?lodash.createCallback(callback, thisArg, 1):identity;
value = callback(value);

while(low < high) {
var mid=low + high >>> 1;
callback(array[mid]) < value?
low = mid + 1:
high = mid;}

return low;}
















function union(){
return baseUniq(baseFlatten(arguments, true, true));}














































function uniq(array, isSorted, callback, thisArg){

if(typeof isSorted != 'boolean' && isSorted != null){
thisArg = callback;
callback = typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array?null:isSorted;
isSorted = false;}

if(callback != null){
callback = lodash.createCallback(callback, thisArg, 3);}

return baseUniq(array, isSorted, callback);}

















function without(array){
return baseDifference(array, slice(arguments, 1));}



















function xor(){
var index=-1, 
length=arguments.length;

while(++index < length) {
var array=arguments[index];
if(isArray(array) || isArguments(array)){
var result=result?
baseUniq(baseDifference(result, array).concat(baseDifference(array, result))):
array;}}


return result || [];}


















function zip(){
var array=arguments.length > 1?arguments:arguments[0], 
index=-1, 
length=array?max(pluck(array, 'length')):0, 
result=Array(length < 0?0:length);

while(++index < length) {
result[index] = pluck(array, index);}

return result;}




















function zipObject(keys, values){
var index=-1, 
length=keys?keys.length:0, 
result={};

if(!values && length && !isArray(keys[0])){
values = [];}

while(++index < length) {
var key=keys[index];
if(values){
result[key] = values[index];}else 
if(key){
result[key[0]] = key[1];}}


return result;}




























function after(n, func){
if(!isFunction(func)){
throw new TypeError();}

return function(){
if(--n < 1){
return func.apply(this, arguments);}};}


























function bind(func, thisArg){
return arguments.length > 2?
createWrapper(func, 17, slice(arguments, 2), null, thisArg):
createWrapper(func, 1, null, null, thisArg);}


























function bindAll(object){
var funcs=arguments.length > 1?baseFlatten(arguments, true, false, 1):functions(object), 
index=-1, 
length=funcs.length;

while(++index < length) {
var key=funcs[index];
object[key] = createWrapper(object[key], 1, null, null, object);}

return object;}




































function bindKey(object, key){
return arguments.length > 2?
createWrapper(key, 19, slice(arguments, 2), null, object):
createWrapper(key, 3, null, null, object);}
































function compose(){
var funcs=arguments, 
length=funcs.length;

while(length--) {
if(!isFunction(funcs[length])){
throw new TypeError();}}


return function(){
var args=arguments, 
length=funcs.length;

while(length--) {
args = [funcs[length].apply(this, args)];}

return args[0];};}































function curry(func, arity){
arity = typeof arity == 'number'?arity:+arity || func.length;
return createWrapper(func, 4, null, null, null, arity);}









































function debounce(func, wait, options){
var args, 
maxTimeoutId, 
result, 
stamp, 
thisArg, 
timeoutId, 
trailingCall, 
lastCalled=0, 
maxWait=false, 
trailing=true;

if(!isFunction(func)){
throw new TypeError();}

wait = nativeMax(0, wait) || 0;
if(options === true){
var leading=true;
trailing = false;}else 
if(isObject(options)){
leading = options.leading;
maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);
trailing = 'trailing' in options?options.trailing:trailing;}

var delayed=function(){
var remaining=wait - (now() - stamp);
if(remaining <= 0){
if(maxTimeoutId){
clearTimeout(maxTimeoutId);}

var isCalled=trailingCall;
maxTimeoutId = timeoutId = trailingCall = undefined;
if(isCalled){
lastCalled = now();
result = func.apply(thisArg, args);
if(!timeoutId && !maxTimeoutId){
args = thisArg = null;}}}else 


{
timeoutId = setTimeout(delayed, remaining);}};



var maxDelayed=function(){
if(timeoutId){
clearTimeout(timeoutId);}

maxTimeoutId = timeoutId = trailingCall = undefined;
if(trailing || maxWait !== wait){
lastCalled = now();
result = func.apply(thisArg, args);
if(!timeoutId && !maxTimeoutId){
args = thisArg = null;}}};




return function(){
args = arguments;
stamp = now();
thisArg = this;
trailingCall = trailing && (timeoutId || !leading);

if(maxWait === false){
var leadingCall=leading && !timeoutId;}else 
{
if(!maxTimeoutId && !leading){
lastCalled = stamp;}

var remaining=maxWait - (stamp - lastCalled), 
isCalled=remaining <= 0;

if(isCalled){
if(maxTimeoutId){
maxTimeoutId = clearTimeout(maxTimeoutId);}

lastCalled = stamp;
result = func.apply(thisArg, args);}else 

if(!maxTimeoutId){
maxTimeoutId = setTimeout(maxDelayed, remaining);}}


if(isCalled && timeoutId){
timeoutId = clearTimeout(timeoutId);}else 

if(!timeoutId && wait !== maxWait){
timeoutId = setTimeout(delayed, wait);}

if(leadingCall){
isCalled = true;
result = func.apply(thisArg, args);}

if(isCalled && !timeoutId && !maxTimeoutId){
args = thisArg = null;}

return result;};}


















function defer(func){
if(!isFunction(func)){
throw new TypeError();}

var args=slice(arguments, 1);
return setTimeout(function(){func.apply(undefined, args);}, 1);}


















function delay(func, wait){
if(!isFunction(func)){
throw new TypeError();}

var args=slice(arguments, 2);
return setTimeout(function(){func.apply(undefined, args);}, wait);}







































function memoize(func, resolver){
if(!isFunction(func)){
throw new TypeError();}

var memoized=function(){
var cache=memoized.cache, 
key=resolver?resolver.apply(this, arguments):keyPrefix + arguments[0];

return hasOwnProperty.call(cache, key)?
cache[key]:
cache[key] = func.apply(this, arguments);};

memoized.cache = {};
return memoized;}



















function once(func){
var ran, 
result;

if(!isFunction(func)){
throw new TypeError();}

return function(){
if(ran){
return result;}

ran = true;
result = func.apply(this, arguments);


func = null;
return result;};}





















function partial(func){
return createWrapper(func, 16, slice(arguments, 1));}





























function partialRight(func){
return createWrapper(func, 32, null, slice(arguments, 1));}

































function throttle(func, wait, options){
var leading=true, 
trailing=true;

if(!isFunction(func)){
throw new TypeError();}

if(options === false){
leading = false;}else 
if(isObject(options)){
leading = 'leading' in options?options.leading:leading;
trailing = 'trailing' in options?options.trailing:trailing;}

debounceOptions.leading = leading;
debounceOptions.maxWait = wait;
debounceOptions.trailing = trailing;

return debounce(func, wait, debounceOptions);}























function wrap(value, wrapper){
return createWrapper(wrapper, 16, [value]);}



















function constant(value){
return function(){
return value;};}


































function createCallback(func, thisArg, argCount){
var type=typeof func;
if(func == null || type == 'function'){
return baseCreateCallback(func, thisArg, argCount);}


if(type != 'object'){
return property(func);}

var props=keys(func), 
key=props[0], 
a=func[key];


if(props.length == 1 && a === a && !isObject(a)){


return function(object){
var b=object[key];
return a === b && (a !== 0 || 1 / a == 1 / b);};}


return function(object){
var length=props.length, 
result=false;

while(length--) {
if(!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))){
break;}}


return result;};}

















function escape(string){
return string == null?'':String(string).replace(reUnescapedHtml, escapeHtmlChar);}
















function identity(value){
return value;}






























function mixin(object, source, options){
var chain=true, 
methodNames=source && functions(source);

if(!source || !options && !methodNames.length){
if(options == null){
options = source;}

ctor = lodashWrapper;
source = object;
object = lodash;
methodNames = functions(source);}

if(options === false){
chain = false;}else 
if(isObject(options) && 'chain' in options){
chain = options.chain;}

var ctor=object, 
isFunc=isFunction(ctor);

forEach(methodNames, function(methodName){
var func=object[methodName] = source[methodName];
if(isFunc){
ctor.prototype[methodName] = function(){
var chainAll=this.__chain__, 
value=this.__wrapped__, 
args=[value];

push.apply(args, arguments);
var result=func.apply(object, args);
if(chain || chainAll){
if(value === result && isObject(result)){
return this;}

result = new ctor(result);
result.__chain__ = chainAll;}

return result;};}});}

















function noConflict(){
context._ = oldDash;
return this;}














function noop(){}
















var now=isNative(now = Date.now) && now || function(){
return new Date().getTime();};





















var parseInt=nativeParseInt(whitespace + '08') == 8?nativeParseInt:function(value, radix){

return nativeParseInt(isString(value)?value.replace(reLeadingSpacesAndZeros, ''):value, radix || 0);};


























function property(key){
return function(object){
return object[key];};}






























function random(min, max, floating){
var noMin=min == null, 
noMax=max == null;

if(floating == null){
if(typeof min == 'boolean' && noMax){
floating = min;
min = 1;}else 

if(!noMax && typeof max == 'boolean'){
floating = max;
noMax = true;}}


if(noMin && noMax){
max = 1;}

min = +min || 0;
if(noMax){
max = min;
min = 0;}else 
{
max = +max || 0;}

if(floating || min % 1 || max % 1){
var rand=nativeRandom();
return nativeMin(min + rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1))), max);}

return baseRandom(min, max);}





























function result(object, key){
if(object){
var value=object[key];
return isFunction(value)?object[key]():value;}}

























































































function template(text, data, options){




var settings=lodash.templateSettings;
text = String(text || '');


options = defaults({}, options, settings);

var imports=defaults({}, options.imports, settings.imports), 
importsKeys=keys(imports), 
importsValues=values(imports);

var isEvaluating, 
index=0, 
interpolate=options.interpolate || reNoMatch, 
source='__p += \'';


var reDelimiters=RegExp(
(options.escape || reNoMatch).source + '|' + 
interpolate.source + '|' + 
(interpolate === reInterpolate?reEsTemplate:reNoMatch).source + '|' + 
(options.evaluate || reNoMatch).source + '|$', 
'g');

text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset){
interpolateValue || (interpolateValue = esTemplateValue);


source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);


if(escapeValue){
source += '\' +\n__e(' + escapeValue + ') +\n\'';}

if(evaluateValue){
isEvaluating = true;
source += '\';\n' + evaluateValue + ';\n__p += \'';}

if(interpolateValue){
source += '\' +\n((__t = (' + interpolateValue + ')) == null ? \'\' : __t) +\n\'';}

index = offset + match.length;



return match;});


source += '\';\n';



var variable=options.variable, 
hasVariable=variable;

if(!hasVariable){
variable = 'obj';
source = 'with (' + variable + ') {\n' + source + '\n}\n';}


source = (isEvaluating?source.replace(reEmptyStringLeading, ''):source).
replace(reEmptyStringMiddle, '$1').
replace(reEmptyStringTrailing, '$1;');


source = 'function(' + variable + ') {\n' + (
hasVariable?'':variable + ' || (' + variable + ' = {});\n') + 
'var __t, __p = \'\', __e = _.escape' + (
isEvaluating?
', __j = Array.prototype.join;\n' + 
'function print() { __p += __j.call(arguments, \'\') }\n':
';\n') + 

source + 
'return __p\n}';



var sourceURL='\n/*\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + templateCounter++ + ']') + '\n*/';

try{
var result=Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);}
catch(e) {
e.source = source;
throw e;}

if(data){
return result(data);}




result.source = source;
return result;}

























function times(n, callback, thisArg){
n = (n = +n) > -1?n:0;
var index=-1, 
result=Array(n);

callback = baseCreateCallback(callback, thisArg, 1);
while(++index < n) {
result[index] = callback(index);}

return result;}

















function unescape(string){
return string == null?'':String(string).replace(reEscapedHtml, unescapeHtmlChar);}


















function uniqueId(prefix){
var id=++idCounter;
return String(prefix == null?'':prefix) + id;}




























function chain(value){
value = new lodashWrapper(value);
value.__chain__ = true;
return value;}






















function tap(value, interceptor){
interceptor(value);
return value;}



























function wrapperChain(){
this.__chain__ = true;
return this;}














function wrapperToString(){
return String(this.__wrapped__);}















function wrapperValueOf(){
return this.__wrapped__;}





lodash.after = after;
lodash.assign = assign;
lodash.at = at;
lodash.bind = bind;
lodash.bindAll = bindAll;
lodash.bindKey = bindKey;
lodash.chain = chain;
lodash.compact = compact;
lodash.compose = compose;
lodash.constant = constant;
lodash.countBy = countBy;
lodash.create = create;
lodash.createCallback = createCallback;
lodash.curry = curry;
lodash.debounce = debounce;
lodash.defaults = defaults;
lodash.defer = defer;
lodash.delay = delay;
lodash.difference = difference;
lodash.filter = filter;
lodash.flatten = flatten;
lodash.forEach = forEach;
lodash.forEachRight = forEachRight;
lodash.forIn = forIn;
lodash.forInRight = forInRight;
lodash.forOwn = forOwn;
lodash.forOwnRight = forOwnRight;
lodash.functions = functions;
lodash.groupBy = groupBy;
lodash.indexBy = indexBy;
lodash.initial = initial;
lodash.intersection = intersection;
lodash.invert = invert;
lodash.invoke = invoke;
lodash.keys = keys;
lodash.map = map;
lodash.mapValues = mapValues;
lodash.max = max;
lodash.memoize = memoize;
lodash.merge = merge;
lodash.min = min;
lodash.omit = omit;
lodash.once = once;
lodash.pairs = pairs;
lodash.partial = partial;
lodash.partialRight = partialRight;
lodash.pick = pick;
lodash.pluck = pluck;
lodash.property = property;
lodash.pull = pull;
lodash.range = range;
lodash.reject = reject;
lodash.remove = remove;
lodash.rest = rest;
lodash.shuffle = shuffle;
lodash.sortBy = sortBy;
lodash.tap = tap;
lodash.throttle = throttle;
lodash.times = times;
lodash.toArray = toArray;
lodash.transform = transform;
lodash.union = union;
lodash.uniq = uniq;
lodash.values = values;
lodash.where = where;
lodash.without = without;
lodash.wrap = wrap;
lodash.xor = xor;
lodash.zip = zip;
lodash.zipObject = zipObject;


lodash.collect = map;
lodash.drop = rest;
lodash.each = forEach;
lodash.eachRight = forEachRight;
lodash.extend = assign;
lodash.methods = functions;
lodash.object = zipObject;
lodash.select = filter;
lodash.tail = rest;
lodash.unique = uniq;
lodash.unzip = zip;


mixin(lodash);




lodash.clone = clone;
lodash.cloneDeep = cloneDeep;
lodash.contains = contains;
lodash.escape = escape;
lodash.every = every;
lodash.find = find;
lodash.findIndex = findIndex;
lodash.findKey = findKey;
lodash.findLast = findLast;
lodash.findLastIndex = findLastIndex;
lodash.findLastKey = findLastKey;
lodash.has = has;
lodash.identity = identity;
lodash.indexOf = indexOf;
lodash.isArguments = isArguments;
lodash.isArray = isArray;
lodash.isBoolean = isBoolean;
lodash.isDate = isDate;
lodash.isElement = isElement;
lodash.isEmpty = isEmpty;
lodash.isEqual = isEqual;
lodash.isFinite = isFinite;
lodash.isFunction = isFunction;
lodash.isNaN = isNaN;
lodash.isNull = isNull;
lodash.isNumber = isNumber;
lodash.isObject = isObject;
lodash.isPlainObject = isPlainObject;
lodash.isRegExp = isRegExp;
lodash.isString = isString;
lodash.isUndefined = isUndefined;
lodash.lastIndexOf = lastIndexOf;
lodash.mixin = mixin;
lodash.noConflict = noConflict;
lodash.noop = noop;
lodash.now = now;
lodash.parseInt = parseInt;
lodash.random = random;
lodash.reduce = reduce;
lodash.reduceRight = reduceRight;
lodash.result = result;
lodash.runInContext = runInContext;
lodash.size = size;
lodash.some = some;
lodash.sortedIndex = sortedIndex;
lodash.template = template;
lodash.unescape = unescape;
lodash.uniqueId = uniqueId;


lodash.all = every;
lodash.any = some;
lodash.detect = find;
lodash.findWhere = find;
lodash.foldl = reduce;
lodash.foldr = reduceRight;
lodash.include = contains;
lodash.inject = reduce;

mixin((function(){
var source={};
forOwn(lodash, function(func, methodName){
if(!lodash.prototype[methodName]){
source[methodName] = func;}});


return source;})(), 
false);




lodash.first = first;
lodash.last = last;
lodash.sample = sample;


lodash.take = first;
lodash.head = first;

forOwn(lodash, function(func, methodName){
var callbackable=methodName !== 'sample';
if(!lodash.prototype[methodName]){
lodash.prototype[methodName] = function(n, guard){
var chainAll=this.__chain__, 
result=func(this.__wrapped__, n, guard);

return !chainAll && (n == null || guard && !(callbackable && typeof n == 'function'))?
result:
new lodashWrapper(result, chainAll);};}});













lodash.VERSION = '2.4.2';


lodash.prototype.chain = wrapperChain;
lodash.prototype.toString = wrapperToString;
lodash.prototype.value = wrapperValueOf;
lodash.prototype.valueOf = wrapperValueOf;


forEach(['join', 'pop', 'shift'], function(methodName){
var func=arrayRef[methodName];
lodash.prototype[methodName] = function(){
var chainAll=this.__chain__, 
result=func.apply(this.__wrapped__, arguments);

return chainAll?
new lodashWrapper(result, chainAll):
result;};});




forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName){
var func=arrayRef[methodName];
lodash.prototype[methodName] = function(){
func.apply(this.__wrapped__, arguments);
return this;};});




forEach(['concat', 'slice', 'splice'], function(methodName){
var func=arrayRef[methodName];
lodash.prototype[methodName] = function(){
return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);};});



return lodash;}





var _=runInContext();


if(typeof define == 'function' && typeof define.amd == 'object' && define.amd){



root._ = _;



define(function(){
return _;});}else 



if(freeExports && freeModule){

if(moduleExports){
(freeModule.exports = _)._ = _;}else 


{
freeExports._ = _;}}else 


{

root._ = _;}}).

call(this);
});
__d('cheerio/lib/utils.js',["entities/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 


entities=require('entities/index.js');





var tags={tag:true, script:true, style:true};







exports.isTag = function(type){
if(type.type)type = type.type;
return tags[type] || false;};








exports.camelCase = function(str){
return str.replace(/[_.-](\w|$)/g, function(_, x){
return x.toUpperCase();});};







exports.encode = function(str){return entities.encodeXML(String(str));};
exports.decode = entities.decodeHTML;








exports.domEach = function(cheerio, fn){
var i=0, len=cheerio.length;
while(i < len && fn(i, cheerio[i]) !== false) ++i;
return cheerio;};
});
__d('entities/index.js',["entities/lib/encode.js","entities/lib/decode.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var encode=require("entities/lib/encode.js"), 
decode=require("entities/lib/decode.js");

exports.decode = function(data, level){
return (!level || level <= 0?decode.XML:decode.HTML)(data);};


exports.decodeStrict = function(data, level){
return (!level || level <= 0?decode.XML:decode.HTMLStrict)(data);};


exports.encode = function(data, level){
return (!level || level <= 0?encode.XML:encode.HTML)(data);};


exports.encodeXML = encode.XML;

exports.encodeHTML4 = 
exports.encodeHTML5 = 
exports.encodeHTML = encode.HTML;

exports.decodeXML = 
exports.decodeXMLStrict = decode.XML;

exports.decodeHTML4 = 
exports.decodeHTML5 = 
exports.decodeHTML = decode.HTML;

exports.decodeHTML4Strict = 
exports.decodeHTML5Strict = 
exports.decodeHTMLStrict = decode.HTMLStrict;
});
__d('entities/lib/encode.js',["entities/maps/xml.json","entities/maps/entities.json"],function(global, require, requireDynamic, requireLazy, module, exports) {  var inverseXML=getInverseObj(require("entities/maps/xml.json")), 
xmlReplacer=getInverseReplacer(inverseXML);

exports.XML = getInverse(inverseXML, xmlReplacer);

var inverseHTML=getInverseObj(require("entities/maps/entities.json")), 
htmlReplacer=getInverseReplacer(inverseHTML);

exports.HTML = getInverse(inverseHTML, htmlReplacer);

function getInverseObj(obj){
return Object.keys(obj).sort().reduce(function(inverse, name){
inverse[obj[name]] = "&" + name + ";";
return inverse;}, 
{});}


function getInverseReplacer(inverse){
return new RegExp("\\" + Object.keys(inverse).sort().join("|\\"), "g");}


var re_nonASCII=/[^\0-\x7F]/g, 
re_astralSymbols=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;

function nonUTF8Replacer(c){
return "&#x" + c.charCodeAt(0).toString(16).toUpperCase() + ";";}


function astralReplacer(c){

var high=c.charCodeAt(0);
var low=c.charCodeAt(1);
var codePoint=(high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;
return "&#x" + codePoint.toString(16).toUpperCase() + ";";}


function getInverse(inverse, re){
function func(name){
return inverse[name];}


return function(data){
return data.
replace(re, func).
replace(re_astralSymbols, astralReplacer).
replace(re_nonASCII, nonUTF8Replacer);};}
});
__d('entities/lib/decode.js',["entities/maps/entities.json","entities/maps/legacy.json","entities/maps/xml.json","entities/lib/decode_codepoint.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var entityMap=require("entities/maps/entities.json"), 
legacyMap=require("entities/maps/legacy.json"), 
xmlMap=require("entities/maps/xml.json"), 
decodeCodePoint=require("entities/lib/decode_codepoint.js");

var decodeXMLStrict=getStrictDecoder(xmlMap), 
decodeHTMLStrict=getStrictDecoder(entityMap);

function getStrictDecoder(map){
var keys=Object.keys(map).join("|"), 
replace=getReplacer(map);

keys += "|#[xX][\\da-fA-F]+|#\\d+";

var re=new RegExp("&(?:" + keys + ");", "g");

return function(str){
return String(str).replace(re, replace);};}



var decodeHTML=(function(){
var legacy=Object.keys(legacyMap).
sort(sorter);

var keys=Object.keys(entityMap).
sort(sorter);

for(var i=0, j=0; i < keys.length; i++) {
if(legacy[j] === keys[i]){
keys[i] += ";?";
j++;}else 
{
keys[i] += ";";}}



var re=new RegExp("&(?:" + keys.join("|") + "|#[xX][\\da-fA-F]+;?|#\\d+;?)", "g"), 
replace=getReplacer(entityMap);

function replacer(str){
if(str.substr(-1) !== ";")str += ";";
return replace(str);}



return function(str){
return String(str).replace(re, replacer);};})();



function sorter(a, b){
return a < b?1:-1;}


function getReplacer(map){
return function replace(str){
if(str.charAt(1) === "#"){
if(str.charAt(2) === "X" || str.charAt(2) === "x"){
return decodeCodePoint(parseInt(str.substr(3), 16));}

return decodeCodePoint(parseInt(str.substr(2), 10));}

return map[str.slice(1, -1)];};}



module.exports = {
XML:decodeXMLStrict, 
HTML:decodeHTML, 
HTMLStrict:decodeHTMLStrict};
});
__d('cheerio/lib/api/attributes.js',["lodash/dist/lodash.js","cheerio/lib/utils.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _=require('lodash/dist/lodash.js'), 
utils=require('cheerio/lib/utils.js'), 
isTag=utils.isTag, 
domEach=utils.domEach, 
hasOwn=Object.prototype.hasOwnProperty, 
rspace=/\s+/, 



primitives={
null:null, 
true:true, 
false:false}, 



rboolean=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i, 

rbrace=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/;


var getAttr=function(elem, name){
if(!elem || !isTag(elem))return;

if(!elem.attribs){
elem.attribs = {};}



if(!name){
return elem.attribs;}


if(hasOwn.call(elem.attribs, name)){

return elem.attribs[name];}};



var setAttr=function(el, name, value){

if(value === null){
removeAttribute(el, name);}else 
{
el.attribs[name] = value + '';}};



var attr=exports.attr = function(name, value){

if(typeof name === 'object' || value !== undefined){
if(_.isFunction(value)){
return domEach(this, function(i, el){
setAttr(el, name, value.call(el, i, el.attribs[name]));});}


return domEach(this, function(i, el){
if(!isTag(el))return;

if(typeof name === 'object'){
_.each(name, function(name, key){
el.attribs[key] = name + '';});}else 

{
setAttr(el, name, value);}});}




return getAttr(this[0], name);};


var setData=function(el, name, value){
if(typeof name === 'object')return _.extend(el.data, name);
if(typeof name === 'string' && value !== undefined){
el.data[name] = value;}else 
if(typeof name === 'object'){
_.exend(el.data, name);}};



var data=exports.data = function(name, value){
var elem=this[0];

if(!elem || !isTag(elem))return;

if(!elem.data){
elem.data = {};}



if(!name){
return elem.data;}



if(typeof name === 'object' || value !== undefined){
domEach(this, function(i, el){
setData(el, name, value);});

return this;}else 
if(hasOwn.call(elem.data, name)){

var val=elem.data[name];

if(hasOwn.call(primitives, val)){
val = primitives[val];}else 
if(val === String(Number(val))){
val = Number(val);}else 
if(rbrace.test(val)){
val = JSON.parse(val);}


return val;}else 
if(typeof name === 'string' && value === undefined){
return undefined;}


return this;};






var val=exports.val = function(value){
var querying=arguments.length === 0, 
element=this[0];

if(!element)return;

switch(element.name){
case 'textarea':
return this.text(value);
case 'input':
switch(this.attr('type')){
case 'radio':
var queryString='input[type=radio][name=' + this.attr('name') + ']:checked';
var parentEl, root;


parentEl = this.closest('form');
if(parentEl.length === 0){
root = (this.parents().last()[0] || this[0]).root;
parentEl = this._make(root);}


if(querying){
return parentEl.find(queryString).attr('value');}else 
{
parentEl.find(':checked').removeAttr('checked');
parentEl.find('input[type=radio][value="' + value + '"]').attr('checked', '');
return this;}

break;
default:
return this.attr('value', value);}

return;
case 'select':
var option=this.find('option:selected'), 
returnValue;
if(option === undefined)return undefined;
if(!querying){
if(!this.attr().hasOwnProperty('multiple') && typeof value == 'object'){
return this;}

if(typeof value != 'object'){
value = [value];}

this.find('option').removeAttr('selected');
for(var i=0; i < value.length; i++) {
this.find('option[value="' + value[i] + '"]').attr('selected', '');}

return this;}

returnValue = option.attr('value');
if(this.attr().hasOwnProperty('multiple')){
returnValue = [];
domEach(option, function(i, el){
returnValue.push(el.attribs.value);});}


return returnValue;
case 'option':
if(!querying){
this.attr('value', value);
return this;}

return this.attr('value');}};







var removeAttribute=function(elem, name){
if(!elem.attribs || !hasOwn.call(elem.attribs, name))
return;

if(rboolean.test(elem.attribs[name]))
elem.attribs[name] = false;else 

delete elem.attribs[name];};



var removeAttr=exports.removeAttr = function(name){
domEach(this, function(i, elem){
removeAttribute(elem, name);});


return this;};


var hasClass=exports.hasClass = function(className){
return _.any(this, function(elem){
var attrs=elem.attribs;
return attrs && _.contains((attrs['class'] || '').split(rspace), className);});};



var addClass=exports.addClass = function(value){

if(_.isFunction(value)){
return domEach(this, function(i, el){
var className=el.attribs['class'] || '';
addClass.call([el], value.call(el, i, className));});}




if(!value || !_.isString(value))return this;

var classNames=value.split(rspace), 
numElements=this.length;


for(var i=0; i < numElements; i++) {

if(!isTag(this[i]))continue;


var className=getAttr(this[i], 'class'), 
numClasses, 
setClass;

if(!className){
setAttr(this[i], 'class', classNames.join(' ').trim());}else 
{
setClass = ' ' + className + ' ';
numClasses = classNames.length;


for(var j=0; j < numClasses; j++) {
var appendClass=classNames[j] + ' ';
if(! ~setClass.indexOf(' ' + appendClass))
setClass += appendClass;}


setAttr(this[i], 'class', setClass.trim());}}



return this;};


var splitClass=function(className){
return className?className.trim().split(rspace):[];};


var removeClass=exports.removeClass = function(value){
var classes, 
numClasses, 
removeAll;


if(_.isFunction(value)){
return domEach(this, function(i, el){
removeClass.call([el], value.call(el, i, el.attribs['class'] || ''));});}



classes = splitClass(value);
numClasses = classes.length;
removeAll = arguments.length === 0;

return domEach(this, function(i, el){
if(!isTag(el))return;

if(removeAll){

el.attribs.class = '';}else 
{
var elClasses=splitClass(el.attribs.class), 
index, 
changed;

for(var j=0; j < numClasses; j++) {
index = elClasses.indexOf(classes[j]);

if(index >= 0){
elClasses.splice(index, 1);
changed = true;



j--;}}


if(changed){
el.attribs.class = elClasses.join(' ');}}});};





var toggleClass=exports.toggleClass = function(value, stateVal){

if(_.isFunction(value)){
return domEach(this, function(i, el){
toggleClass.call([el], value.call(el, i, el.attribs['class'] || '', stateVal), stateVal);});}




if(!value || !_.isString(value))return this;

var classNames=value.split(rspace), 
numClasses=classNames.length, 
isBool=typeof stateVal === 'boolean', 
numElements=this.length, 
elementClasses, 
index;

for(var i=0; i < numElements; i++) {

if(!isTag(this[i]))continue;

elementClasses = splitClass(this[i].attribs.class);


for(var j=0; j < numClasses; j++) {

index = !isBool || !stateVal?elementClasses.indexOf(classNames[j]):-1;


if(isBool?stateVal:index < 0){
elementClasses.push(classNames[j]);}else 
if(index >= 0){

elementClasses.splice(index, 1);}}



this[i].attribs.class = elementClasses.join(' ');}


return this;};


var is=exports.is = function(selector){
if(selector){
return this.filter(selector).length > 0;}

return false;};
});
__d('cheerio/lib/api/traversing.js',["lodash/dist/lodash.js","CSSselect/index.js","cheerio/lib/utils.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _=require('lodash/dist/lodash.js'), 
select=require('CSSselect/index.js'), 
utils=require('cheerio/lib/utils.js'), 
domEach=utils.domEach, 
isTag=utils.isTag;

var find=exports.find = function(selector){
var elems=_.reduce(this, function(memo, elem){
return memo.concat(_.filter(elem.children, isTag));}, 
[]);

return this._make(select(selector, elems));};




var parent=exports.parent = function(selector){
var set=[];
var $set;

domEach(this, function(idx, elem){
var parentElem=elem.parent;
if(parentElem && set.indexOf(parentElem) < 0){
set.push(parentElem);}});



if(arguments.length){
set = filter.call(set, selector, this);}


return this._make(set);};


var parents=exports.parents = function(selector){
var parentNodes=[];




this.get().reverse().forEach(function(elem){
traverseParents(this, elem.parent, selector, Infinity).
forEach(function(node){
if(parentNodes.indexOf(node) === -1){
parentNodes.push(node);}});}, 



this);

return this._make(parentNodes);};


var parentsUntil=exports.parentsUntil = function(selector, filter){
var parentNodes=[], untilNode, untilNodes;

if(typeof selector === 'string'){
untilNode = select(selector, this.parents().toArray())[0];}else 
if(selector && selector.cheerio){
untilNodes = selector.toArray();}else 
if(selector){
untilNode = selector;}






this.toArray().reverse().forEach(function(elem){
while(elem = elem.parent) {
if(untilNode && elem !== untilNode || 
untilNodes && untilNodes.indexOf(elem) === -1 || 
!untilNode && !untilNodes){
if(isTag(elem) && parentNodes.indexOf(elem) === -1){parentNodes.push(elem);}}else 
{
break;}}}, 


this);

return this._make(filter?select(filter, parentNodes):parentNodes);};





var closest=exports.closest = function(selector){
var set=[];

if(!selector){
return this._make(set);}


domEach(this, (function(idx, elem){
var closestElem=traverseParents(this, elem, selector, 1)[0];


if(closestElem && set.indexOf(closestElem) < 0){
set.push(closestElem);}}).

bind(this));

return this._make(set);};


var next=exports.next = function(selector){
if(!this[0]){return this;}
var elems=[];

_.forEach(this, function(elem){
while(elem = elem.next) {
if(isTag(elem)){
elems.push(elem);
return;}}});




return selector?filter.call(elems, selector, this):this._make(elems);};


var nextAll=exports.nextAll = function(selector){
if(!this[0]){return this;}
var elems=[];

_.forEach(this, function(elem){
while(elem = elem.next) {
if(isTag(elem) && elems.indexOf(elem) === -1){
elems.push(elem);}}});




return selector?filter.call(elems, selector, this):this._make(elems);};


var nextUntil=exports.nextUntil = function(selector, filterSelector){
if(!this[0]){return this;}
var elems=[], untilNode, untilNodes;

if(typeof selector === 'string'){
untilNode = select(selector, this.nextAll().get())[0];}else 
if(selector && selector.cheerio){
untilNodes = selector.get();}else 
if(selector){
untilNode = selector;}


_.forEach(this, function(elem){
while(elem = elem.next) {
if(untilNode && elem !== untilNode || 
untilNodes && untilNodes.indexOf(elem) === -1 || 
!untilNode && !untilNodes){
if(isTag(elem) && elems.indexOf(elem) === -1){
elems.push(elem);}}else 

{
break;}}});




return filterSelector?
filter.call(elems, filterSelector, this):
this._make(elems);};


var prev=exports.prev = function(selector){
if(!this[0]){return this;}
var elems=[];

_.forEach(this, function(elem){
while(elem = elem.prev) {
if(isTag(elem)){
elems.push(elem);
return;}}});




return selector?filter.call(elems, selector, this):this._make(elems);};


var prevAll=exports.prevAll = function(selector){
if(!this[0]){return this;}
var elems=[];

_.forEach(this, function(elem){
while(elem = elem.prev) {
if(isTag(elem) && elems.indexOf(elem) === -1){
elems.push(elem);}}});




return selector?filter.call(elems, selector, this):this._make(elems);};


var prevUntil=exports.prevUntil = function(selector, filterSelector){
if(!this[0]){return this;}
var elems=[], untilNode, untilNodes;

if(typeof selector === 'string'){
untilNode = select(selector, this.prevAll().get())[0];}else 
if(selector && selector.cheerio){
untilNodes = selector.get();}else 
if(selector){
untilNode = selector;}


_.forEach(this, function(elem){
while(elem = elem.prev) {
if(untilNode && elem !== untilNode || 
untilNodes && untilNodes.indexOf(elem) === -1 || 
!untilNode && !untilNodes){
if(isTag(elem) && elems.indexOf(elem) === -1){
elems.push(elem);}}else 

{
break;}}});




return filterSelector?
filter.call(elems, filterSelector, this):
this._make(elems);};


var siblings=exports.siblings = function(selector){
var parent=this.parent();

var elems=_.filter(
parent?parent.children():this.siblingsAndMe(), 
function(elem){return isTag(elem) && !this.is(elem);}, 
this);


if(selector !== undefined){
return filter.call(elems, selector, this);}else 
{
return this._make(elems);}};



var children=exports.children = function(selector){

var elems=_.reduce(this, function(memo, elem){
return memo.concat(_.filter(elem.children, isTag));}, 
[]);

if(selector === undefined)return this._make(elems);else 
if(_.isNumber(selector))return this._make(elems[selector]);

return filter.call(elems, selector, this);};


var contents=exports.contents = function(){
return this._make(_.reduce(this, function(all, elem){
all.push.apply(all, elem.children);
return all;}, 
[]));};


var each=exports.each = function(fn){
var i=0, len=this.length;
while(i < len && fn.call(this[i], i, this[i]) !== false) ++i;
return this;};


var map=exports.map = function(fn){
return this._make(_.reduce(this, function(memo, el, i){
var val=fn.call(el, i, el);
return val == null?memo:memo.concat(val);}, 
[]));};


var filter=exports.filter = function(match, container){
container = container || this;

var make=_.bind(container._make, container);
var filterFn;

if(_.isString(match)){
filterFn = select.compile(match);}else 
if(_.isFunction(match)){
filterFn = function(el, i){
return match.call(el, i, el);};}else 

if(match.cheerio){
filterFn = match.is.bind(match);}else 
{
filterFn = function(el){
return match === el;};}



return make(_.filter(this, filterFn));};


var first=exports.first = function(){
return this.length > 1?this._make(this[0]):this;};


var last=exports.last = function(){
return this.length > 1?this._make(this[this.length - 1]):this;};



var eq=exports.eq = function(i){
i = +i;


if(i === 0 && this.length <= 1)return this;

if(i < 0)i = this.length + i;
return this[i]?this._make(this[i]):this._make([]);};



var get=exports.get = function(i){
if(i == null){
return Array.prototype.slice.call(this);}else 
{
return this[i < 0?this.length + i:i];}};



var slice=exports.slice = function(){
return this._make([].slice.apply(this, arguments));};


function traverseParents(self, elem, selector, limit){
var elems=[];
while(elem && elems.length < limit) {
if(!selector || filter.call([elem], selector, self).length){
elems.push(elem);}

elem = elem.parent;}

return elems;}




var end=exports.end = function(){
return this.prevObject || this._make([]);};
});
__d('CSSselect/index.js',["CSSselect/lib/pseudos.js","domutils/index.js","CSSselect/lib/basefunctions.js","CSSselect/lib/compile.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

module.exports = CSSselect;

var Pseudos=require("CSSselect/lib/pseudos.js"), 
DomUtils=require("domutils/index.js"), 
findOne=DomUtils.findOne, 
findAll=DomUtils.findAll, 
getChildren=DomUtils.getChildren, 
removeSubsets=DomUtils.removeSubsets, 
falseFunc=require("CSSselect/lib/basefunctions.js").falseFunc, 
compile=require("CSSselect/lib/compile.js"), 
compileUnsafe=compile.compileUnsafe;

function getSelectorFunc(searchFunc){
return function select(query, elems, options){
if(typeof query !== "function")query = compileUnsafe(query, options);
if(!Array.isArray(elems))elems = getChildren(elems);else 
elems = removeSubsets(elems);
return searchFunc(query, elems);};}



var selectAll=getSelectorFunc(function selectAll(query, elems){
return query === falseFunc || !elems || elems.length === 0?[]:findAll(query, elems);});


var selectOne=getSelectorFunc(function selectOne(query, elems){
return query === falseFunc || !elems || elems.length === 0?null:findOne(query, elems);});


function is(elem, query, options){
return (typeof query === "function"?query:compile(query, options))(elem);}





function CSSselect(query, elems, options){
return selectAll(query, elems, options);}


CSSselect.compile = compile;
CSSselect.filters = Pseudos.filters;
CSSselect.pseudos = Pseudos.pseudos;

CSSselect.selectAll = selectAll;
CSSselect.selectOne = selectOne;

CSSselect.is = is;


CSSselect.parse = compile;
CSSselect.iterate = selectAll;
});
__d('CSSselect/lib/pseudos.js',["domutils/index.js","CSSselect/lib/nth-check.js","CSSselect/lib/attributes.js","CSSselect/lib/basefunctions.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 












DomUtils=require("domutils/index.js"), 
isTag=DomUtils.isTag, 
getText=DomUtils.getText, 
getParent=DomUtils.getParent, 
getChildren=DomUtils.getChildren, 
getSiblings=DomUtils.getSiblings, 
hasAttrib=DomUtils.hasAttrib, 
getName=DomUtils.getName, 
getAttribute=DomUtils.getAttributeValue, 
getNCheck=require("CSSselect/lib/nth-check.js"), 
checkAttrib=require("CSSselect/lib/attributes.js").rules.equals, 
BaseFuncs=require("CSSselect/lib/basefunctions.js"), 
trueFunc=BaseFuncs.trueFunc, 
falseFunc=BaseFuncs.falseFunc;


function getFirstElement(elems){
for(var i=0; elems && i < elems.length; i++) {
if(isTag(elems[i]))return elems[i];}}



function getAttribFunc(name, value){
var data={name:name, value:value};
return function attribFunc(next){
return checkAttrib(next, data);};}



function getChildFunc(next){
return function(elem){
return !!getParent(elem) && next(elem);};}



var filters={
contains:function(next, text){
if(
(text.charAt(0) === "\"" || text.charAt(0) === "'") && 
text.charAt(0) === text.substr(-1))
{
text = text.slice(1, -1);}

return function contains(elem){
return getText(elem).indexOf(text) >= 0 && next(elem);};}, 





"first-child":function(next){
return function firstChild(elem){
return getFirstElement(getSiblings(elem)) === elem && next(elem);};}, 


"last-child":function(next){
return function lastChild(elem){
var siblings=getSiblings(elem);

for(var i=siblings.length - 1; i >= 0; i--) {
if(siblings[i] === elem)return next(elem);
if(isTag(siblings[i]))break;}


return false;};}, 


"first-of-type":function(next){
return function firstOfType(elem){
var siblings=getSiblings(elem);

for(var i=0; i < siblings.length; i++) {
if(isTag(siblings[i])){
if(siblings[i] === elem)return next(elem);
if(getName(siblings[i]) === getName(elem))break;}}



return false;};}, 


"last-of-type":function(next){
return function lastOfType(elem){
var siblings=getSiblings(elem);

for(var i=siblings.length - 1; i >= 0; i--) {
if(isTag(siblings[i])){
if(siblings[i] === elem)return next(elem);
if(getName(siblings[i]) === getName(elem))break;}}



return false;};}, 


"only-of-type":function(next){
return function onlyOfType(elem){
var siblings=getSiblings(elem);

for(var i=0, j=siblings.length; i < j; i++) {
if(isTag(siblings[i])){
if(siblings[i] === elem)continue;
if(getName(siblings[i]) === getName(elem))return false;}}



return next(elem);};}, 


"only-child":function(next){
return function onlyChild(elem){
var siblings=getSiblings(elem);

for(var i=0; i < siblings.length; i++) {
if(isTag(siblings[i]) && siblings[i] !== elem)return false;}


return next(elem);};}, 


"nth-child":function(next, rule){
var func=getNCheck(rule);

if(func === falseFunc)return func;
if(func === trueFunc)return getChildFunc(next);

return function nthChild(elem){
var siblings=getSiblings(elem);

for(var i=0, pos=0; i < siblings.length; i++) {
if(isTag(siblings[i])){
if(siblings[i] === elem)break;else 
pos++;}}



return func(pos) && next(elem);};}, 


"nth-last-child":function(next, rule){
var func=getNCheck(rule);

if(func === falseFunc)return func;
if(func === trueFunc)return getChildFunc(next);

return function nthLastChild(elem){
var siblings=getSiblings(elem);

for(var pos=0, i=siblings.length - 1; i >= 0; i--) {
if(isTag(siblings[i])){
if(siblings[i] === elem)break;else 
pos++;}}



return func(pos) && next(elem);};}, 


"nth-of-type":function(next, rule){
var func=getNCheck(rule);

if(func === falseFunc)return func;
if(func === trueFunc)return getChildFunc(next);

return function nthOfType(elem){
var siblings=getSiblings(elem);

for(var pos=0, i=0; i < siblings.length; i++) {
if(isTag(siblings[i])){
if(siblings[i] === elem)break;
if(getName(siblings[i]) === getName(elem))pos++;}}



return func(pos) && next(elem);};}, 


"nth-last-of-type":function(next, rule){
var func=getNCheck(rule);

if(func === falseFunc)return func;
if(func === trueFunc)return getChildFunc(next);

return function nthLastOfType(elem){
var siblings=getSiblings(elem);

for(var pos=0, i=siblings.length - 1; i >= 0; i--) {
if(siblings[i] === elem)break;
if(getName(siblings[i]) === getName(elem))pos++;}


return func(pos) && next(elem);};}, 




checkbox:getAttribFunc("type", "checkbox"), 
file:getAttribFunc("type", "file"), 
password:getAttribFunc("type", "password"), 
radio:getAttribFunc("type", "radio"), 
reset:getAttribFunc("type", "reset"), 
image:getAttribFunc("type", "image"), 
submit:getAttribFunc("type", "submit")};



var pseudos={
root:function(elem){
return !getParent(elem);}, 

empty:function(elem){
return !getChildren(elem).some(function(elem){
return isTag(elem) || elem.type === "text";});}, 





selected:function(elem){
if(hasAttrib(elem, "selected"))return true;else 
if(getName(elem) !== "option")return false;


var parent=getParent(elem);

if(!parent || getName(parent) !== "select")return false;

var siblings=getChildren(parent), 
sawElem=false;

for(var i=0; i < siblings.length; i++) {
if(isTag(siblings[i])){
if(siblings[i] === elem){
sawElem = true;}else 
if(!sawElem){
return false;}else 
if(hasAttrib(siblings[i], "selected")){
return false;}}}




return sawElem;}, 

disabled:function(elem){
return hasAttrib(elem, "disabled");}, 

enabled:function(elem){
return !hasAttrib(elem, "disabled");}, 

checked:function(elem){
return hasAttrib(elem, "checked") || pseudos.selected(elem);}, 





parent:function(elem){
return !pseudos.empty(elem);}, 

header:function(elem){
var name=getName(elem);
return name === "h1" || 
name === "h2" || 
name === "h3" || 
name === "h4" || 
name === "h5" || 
name === "h6";}, 


button:function(elem){
var name=getName(elem);
return name === "button" || 
name === "input" && 
getAttribute(elem, "type") === "button";}, 

input:function(elem){
var name=getName(elem);
return name === "input" || 
name === "textarea" || 
name === "select" || 
name === "button";}, 

text:function(elem){
var attr;
return getName(elem) === "input" && (
!(attr = getAttribute(elem, "type")) || 
attr.toLowerCase() === "text");}};




function verifyArgs(func, name, subselect){
if(subselect === null){
if(func.length > 1){
throw new SyntaxError("pseudo-selector :" + name + " requires an argument");}}else 

{
if(func.length === 1){
throw new SyntaxError("pseudo-selector :" + name + " doesn't have any arguments");}}}




module.exports = {
compile:function(next, data){
var name=data.name, 
subselect=data.data;

if(typeof filters[name] === "function"){
verifyArgs(filters[name], name, subselect);
return filters[name](next, subselect);}else 
if(typeof pseudos[name] === "function"){
var func=pseudos[name];
verifyArgs(func, name, subselect);
return function pseudoArgs(elem){
return func(elem, subselect) && next(elem);};}else 

{
throw new SyntaxError("unmatched pseudo-class :" + name);}}, 


filters:filters, 
pseudos:pseudos};
});
__d('domutils/index.js',["domutils/lib/stringify.js","domutils/lib/traversal.js","domutils/lib/manipulation.js","domutils/lib/querying.js","domutils/lib/legacy.js","domutils/lib/helpers.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var DomUtils=module.exports;

[
require("domutils/lib/stringify.js"), 
require("domutils/lib/traversal.js"), 
require("domutils/lib/manipulation.js"), 
require("domutils/lib/querying.js"), 
require("domutils/lib/legacy.js"), 
require("domutils/lib/helpers.js")].
forEach(function(ext){
Object.keys(ext).forEach(function(key){
DomUtils[key] = ext[key].bind(DomUtils);});});
});
__d('domutils/lib/stringify.js',["domelementtype/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var ElementType=require("domelementtype/index.js"), 
isTag=ElementType.isTag;

module.exports = {
getInnerHTML:getInnerHTML, 
getOuterHTML:getOuterHTML, 
getText:getText};


function getInnerHTML(elem){
return elem.children?elem.children.map(getOuterHTML).join(""):"";}



var booleanAttribs={
__proto__:null, 
async:true, 
autofocus:true, 
autoplay:true, 
checked:true, 
controls:true, 
defer:true, 
disabled:true, 
hidden:true, 
loop:true, 
multiple:true, 
open:true, 
readonly:true, 
required:true, 
scoped:true, 
selected:true};


var emptyTags={
__proto__:null, 
area:true, 
base:true, 
basefont:true, 
br:true, 
col:true, 
frame:true, 
hr:true, 
img:true, 
input:true, 
isindex:true, 
link:true, 
meta:true, 
param:true, 
embed:true};


function getOuterHTML(elem){
switch(elem.type){
case ElementType.Text:
return elem.data;
case ElementType.Comment:
return "<!--" + elem.data + "-->";
case ElementType.Directive:
return "<" + elem.data + ">";
case ElementType.CDATA:
return "<!CDATA " + getInnerHTML(elem) + "]]>";}


var ret="<" + elem.name;
if("attribs" in elem){
for(var attr in elem.attribs) {
if(elem.attribs.hasOwnProperty(attr)){
ret += " " + attr;
var value=elem.attribs[attr];
if(value == null){
if(!(attr in booleanAttribs)){
ret += "=\"\"";}}else 

{
ret += "=\"" + value + "\"";}}}}





if(elem.name in emptyTags && elem.children.length === 0){
return ret + " />";}else 
{
return ret + ">" + getInnerHTML(elem) + "</" + elem.name + ">";}}



function getText(elem){
if(Array.isArray(elem))return elem.map(getText).join("");
if(isTag(elem) || elem.type === ElementType.CDATA)return getText(elem.children);
if(elem.type === ElementType.Text)return elem.data;
return "";}
});
__d('domelementtype/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.
exports = {
Text:"text", 
Directive:"directive", 
Comment:"comment", 
Script:"script", 
Style:"style", 
Tag:"tag", 
CDATA:"cdata", 
Doctype:"doctype", 

isTag:function(elem){
return elem.type === "tag" || elem.type === "script" || elem.type === "style";}};
});
__d('domutils/lib/traversal.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var getChildren=exports.getChildren = function(elem){
return elem.children;};


var getParent=exports.getParent = function(elem){
return elem.parent;};


exports.getSiblings = function(elem){
var parent=getParent(elem);
return parent?getChildren(parent):[elem];};


exports.getAttributeValue = function(elem, name){
return elem.attribs && elem.attribs[name];};


exports.hasAttrib = function(elem, name){
return hasOwnProperty.call(elem.attribs, name);};


exports.getName = function(elem){
return elem.name;};
});
__d('domutils/lib/manipulation.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  exports.removeElement = function(elem){
if(elem.prev)elem.prev.next = elem.next;
if(elem.next)elem.next.prev = elem.prev;

if(elem.parent){
var childs=elem.parent.children;
childs.splice(childs.lastIndexOf(elem), 1);}};



exports.replaceElement = function(elem, replacement){
var prev=replacement.prev = elem.prev;
if(prev){
prev.next = replacement;}


var next=replacement.next = elem.next;
if(next){
next.prev = replacement;}


var parent=replacement.parent = elem.parent;
if(parent){
var childs=parent.children;
childs[childs.lastIndexOf(elem)] = replacement;}};



exports.appendChild = function(elem, child){
child.parent = elem;

if(elem.children.push(child) !== 1){
var sibling=elem.children[elem.children.length - 2];
sibling.next = child;
child.prev = sibling;
child.next = null;}};



exports.append = function(elem, next){
var parent=elem.parent, 
currNext=elem.next;

next.next = currNext;
next.prev = elem;
elem.next = next;
next.parent = parent;

if(currNext){
currNext.prev = next;
if(parent){
var childs=parent.children;
childs.splice(childs.lastIndexOf(currNext), 0, next);}}else 

if(parent){
parent.children.push(next);}};



exports.prepend = function(elem, prev){
var parent=elem.parent;
if(parent){
var childs=parent.children;
childs.splice(childs.lastIndexOf(elem), 0, prev);}


if(elem.prev){
elem.prev.next = prev;}


prev.parent = parent;
prev.prev = elem.prev;
prev.next = elem;
elem.prev = prev;};
});
__d('domutils/lib/querying.js',["domelementtype/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var isTag=require("domelementtype/index.js").isTag;

module.exports = {
filter:filter, 
find:find, 
findOneChild:findOneChild, 
findOne:findOne, 
existsOne:existsOne, 
findAll:findAll};


function filter(test, element, recurse, limit){
if(!Array.isArray(element))element = [element];

if(typeof limit !== "number" || !isFinite(limit)){
limit = Infinity;}

return find(test, element, recurse !== false, limit);}


function find(test, elems, recurse, limit){
var result=[], childs;

for(var i=0, j=elems.length; i < j; i++) {
if(test(elems[i])){
result.push(elems[i]);
if(--limit <= 0)break;}


childs = elems[i].children;
if(recurse && childs && childs.length > 0){
childs = find(test, childs, recurse, limit);
result = result.concat(childs);
limit -= childs.length;
if(limit <= 0)break;}}



return result;}


function findOneChild(test, elems){
for(var i=0, l=elems.length; i < l; i++) {
if(test(elems[i]))return elems[i];}


return null;}


function findOne(test, elems){
var elem=null;

for(var i=0, l=elems.length; i < l && !elem; i++) {
if(!isTag(elems[i])){
continue;}else 
if(test(elems[i])){
elem = elems[i];}else 
if(elems[i].children.length > 0){
elem = findOne(test, elems[i].children);}}



return elem;}


function existsOne(test, elems){
for(var i=0, l=elems.length; i < l; i++) {
if(
isTag(elems[i]) && (
test(elems[i]) || 
elems[i].children.length > 0 && 
existsOne(test, elems[i].children)))


{
return true;}}



return false;}


function findAll(test, elems){
var result=[];
for(var i=0, j=elems.length; i < j; i++) {
if(!isTag(elems[i]))continue;
if(test(elems[i]))result.push(elems[i]);

if(elems[i].children.length > 0){
result = result.concat(findAll(test, elems[i].children));}}


return result;}
});
__d('domutils/lib/legacy.js',["domelementtype/index.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var ElementType=require("domelementtype/index.js");
var isTag=exports.isTag = ElementType.isTag;

exports.testElement = function(options, element){
for(var key in options) {
if(!options.hasOwnProperty(key));else 
if(key === "tag_name"){
if(!isTag(element) || !options.tag_name(element.name)){
return false;}}else 

if(key === "tag_type"){
if(!options.tag_type(element.type))return false;}else 
if(key === "tag_contains"){
if(isTag(element) || !options.tag_contains(element.data)){
return false;}}else 

if(!element.attribs || !options[key](element.attribs[key])){
return false;}}


return true;};


var Checks={
tag_name:function(name){
if(typeof name === "function"){
return function(elem){return isTag(elem) && name(elem.name);};}else 
if(name === "*"){
return isTag;}else 
{
return function(elem){return isTag(elem) && elem.name === name;};}}, 


tag_type:function(type){
if(typeof type === "function"){
return function(elem){return type(elem.type);};}else 
{
return function(elem){return elem.type === type;};}}, 


tag_contains:function(data){
if(typeof data === "function"){
return function(elem){return !isTag(elem) && data(elem.data);};}else 
{
return function(elem){return !isTag(elem) && elem.data === data;};}}};




function getAttribCheck(attrib, value){
if(typeof value === "function"){
return function(elem){return elem.attribs && value(elem.attribs[attrib]);};}else 
{
return function(elem){return elem.attribs && elem.attribs[attrib] === value;};}}



function combineFuncs(a, b){
return function(elem){
return a(elem) || b(elem);};}



exports.getElements = function(options, element, recurse, limit){
var funcs=Object.keys(options).map(function(key){
var value=options[key];
return key in Checks?Checks[key](value):getAttribCheck(key, value);});


return funcs.length === 0?[]:this.filter(
funcs.reduce(combineFuncs), 
element, recurse, limit);};



exports.getElementById = function(id, element, recurse){
if(!Array.isArray(element))element = [element];
return this.findOne(getAttribCheck("id", id), element, recurse !== false);};


exports.getElementsByTagName = function(name, element, recurse, limit){
return this.filter(Checks.tag_name(name), element, recurse, limit);};


exports.getElementsByTagType = function(type, element, recurse, limit){
return this.filter(Checks.tag_type(type), element, recurse, limit);};
});
__d('domutils/lib/helpers.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  exports.

removeSubsets = function(nodes){
var idx=nodes.length, node, ancestor, replace;



while(--idx > -1) {
node = ancestor = nodes[idx];


nodes[idx] = null;
replace = true;

while(ancestor) {
if(nodes.indexOf(ancestor) > -1){
replace = false;
nodes.splice(idx, 1);
break;}

ancestor = ancestor.parent;}



if(replace){
nodes[idx] = node;}}



return nodes;};
});
__d('CSSselect/lib/nth-check.js',["CSSselect/lib/basefunctions.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var BaseFuncs=require("CSSselect/lib/basefunctions.js"), 
trueFunc=BaseFuncs.trueFunc, 
falseFunc=BaseFuncs.falseFunc;

module.exports = function nthCheck(formula){
return compile(parse(formula));};


module.exports.parse = parse;
module.exports.compile = compile;




var re_nthElement=/^([+\-]?\d*n)?\s*(?:([+\-]?)\s*(\d+))?$/;




function parse(formula){
formula = formula.trim().toLowerCase();

if(formula === "even"){
return [2, 0];}else 
if(formula === "odd"){
return [2, 1];}else 
{
var parsed=formula.match(re_nthElement);

if(!parsed){
throw new SyntaxError("n-th rule couldn't be parsed ('" + formula + "')");}


var a;

if(parsed[1]){
a = parseInt(parsed[1], 10);
if(!a){
if(parsed[1].charAt(0) === "-")a = -1;else 
a = 1;}}else 

a = 0;

return [
a, 
parsed[3]?parseInt((parsed[2] || "") + parsed[3], 10):0];}}








function compile(parsed){
var a=parsed[0], 
b=parsed[1] - 1;



if(b < 0 && a <= 0)return falseFunc;


if(a === -1)return function(pos){return pos <= b;};
if(a === 0)return function(pos){return pos === b;};

if(a === 1)return b < 0?trueFunc:function(pos){return pos >= b;};


var bMod=b % a;
if(bMod < 0)bMod += a;

if(a > 1){
return function(pos){
return pos >= b && pos % a === bMod;};}



a *= -1;

return function(pos){
return pos <= b && pos % a === bMod;};}
});
__d('CSSselect/lib/basefunctions.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {
trueFunc:function trueFunc(){
return true;}, 

falseFunc:function falseFunc(){
return false;}};
});
__d('CSSselect/lib/attributes.js',["domutils/index.js","CSSselect/lib/basefunctions.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var DomUtils=require("domutils/index.js"), 
hasAttrib=DomUtils.hasAttrib, 
getAttributeValue=DomUtils.getAttributeValue, 
falseFunc=require("CSSselect/lib/basefunctions.js").falseFunc;


var reChars=/[-[\]{}()*+?.,\\^$|#\s]/g;





var attributeRules={
__proto__:null, 
equals:function(next, data){
var name=data.name, 
value=data.value;

if(data.ignoreCase){
value = value.toLowerCase();

return function equalsIC(elem){
var attr=getAttributeValue(elem, name);
return attr != null && attr.toLowerCase() === value && next(elem);};}



return function equals(elem){
return getAttributeValue(elem, name) === value && next(elem);};}, 


hyphen:function(next, data){
var name=data.name, 
value=data.value, 
len=value.length;

if(data.ignoreCase){
value = value.toLowerCase();

return function hyphenIC(elem){
var attr=getAttributeValue(elem, name);
return attr != null && (
attr.length === len || attr.charAt(len) === "-") && 
attr.substr(0, len).toLowerCase() === value && 
next(elem);};}



return function hyphen(elem){
var attr=getAttributeValue(elem, name);
return attr != null && 
attr.substr(0, len) === value && (
attr.length === len || attr.charAt(len) === "-") && 
next(elem);};}, 


element:function(next, data){
var name=data.name, 
value=data.value;

if(/\s/.test(value)){
return falseFunc;}


value = value.replace(reChars, "\\$&");

var pattern="(?:^|\\s)" + value + "(?:$|\\s)", 
flags=data.ignoreCase?"i":"", 
regex=new RegExp(pattern, flags);

return function element(elem){
var attr=getAttributeValue(elem, name);
return attr != null && regex.test(attr) && next(elem);};}, 


exists:function(next, data){
var name=data.name;
return function exists(elem){
return hasAttrib(elem, name) && next(elem);};}, 


start:function(next, data){
var name=data.name, 
value=data.value, 
len=value.length;

if(len === 0){
return falseFunc;}


if(data.ignoreCase){
value = value.toLowerCase();

return function startIC(elem){
var attr=getAttributeValue(elem, name);
return attr != null && attr.substr(0, len).toLowerCase() === value && next(elem);};}



return function start(elem){
var attr=getAttributeValue(elem, name);
return attr != null && attr.substr(0, len) === value && next(elem);};}, 


end:function(next, data){
var name=data.name, 
value=data.value, 
len=-value.length;

if(len === 0){
return falseFunc;}


if(data.ignoreCase){
value = value.toLowerCase();

return function endIC(elem){
var attr=getAttributeValue(elem, name);
return attr != null && attr.substr(len).toLowerCase() === value && next(elem);};}



return function end(elem){
var attr=getAttributeValue(elem, name);
return attr != null && attr.substr(len) === value && next(elem);};}, 


any:function(next, data){
var name=data.name, 
value=data.value;

if(value === ""){
return falseFunc;}


if(data.ignoreCase){
var regex=new RegExp(value.replace(reChars, "\\$&"), "i");

return function anyIC(elem){
var attr=getAttributeValue(elem, name);
return attr != null && regex.test(attr) && next(elem);};}



return function any(elem){
var attr=getAttributeValue(elem, name);
return attr != null && attr.indexOf(value) >= 0 && next(elem);};}, 


not:function(next, data){
var name=data.name, 
value=data.value;

if(value === ""){
return function notEmpty(elem){
return !!getAttributeValue(elem, name) && next(elem);};}else 

if(data.ignoreCase){
value = value.toLowerCase();

return function notIC(elem){
var attr=getAttributeValue(elem, name);
return attr != null && attr.toLowerCase() !== value && next(elem);};}



return function not(elem){
return getAttributeValue(elem, name) !== value && next(elem);};}};




module.exports = {
compile:function(next, data){
return attributeRules[data.action](next, data);}, 

rules:attributeRules};
});
__d('CSSselect/lib/compile.js',["CSSwhat/index.js","domutils/index.js","CSSselect/lib/general.js","CSSselect/lib/sort.js","CSSselect/lib/basefunctions.js","CSSselect/lib/pseudos.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.



exports = compile;
module.exports.compileUnsafe = compileUnsafe;

var parse=require("CSSwhat/index.js"), 
DomUtils=require("domutils/index.js"), 
isTag=DomUtils.isTag, 
Rules=require("CSSselect/lib/general.js"), 
sortRules=require("CSSselect/lib/sort.js"), 
BaseFuncs=require("CSSselect/lib/basefunctions.js"), 
trueFunc=BaseFuncs.trueFunc, 
falseFunc=BaseFuncs.falseFunc;

function compile(selector, options){
var next=compileUnsafe(selector, options);

return function base(elem){
return isTag(elem) && next(elem);};}



function compileUnsafe(selector, options){
return parse(selector, options).
map(compileRules).
reduce(reduceRules, falseFunc);}


function compileRules(arr){
if(arr.length === 0)return falseFunc;
return sortRules(arr).reduce(function(func, rule){
if(func === falseFunc)return func;
return Rules[rule.type](func, rule);}, 
trueFunc);}


function reduceRules(a, b){
if(b === falseFunc || a === trueFunc){
return a;}

if(a === falseFunc || b === trueFunc){
return b;}


return function combine(elem){
return a(elem) || b(elem);};}







var Pseudos=require("CSSselect/lib/pseudos.js"), 
filters=Pseudos.filters, 
isParent=Pseudos.pseudos.parent, 
existsOne=DomUtils.existsOne, 
getChildren=DomUtils.getChildren;

filters.not = function(next, select){
var func=compileUnsafe(select);

if(func === falseFunc)return next;
if(func === trueFunc)return falseFunc;

return function(elem){
return !func(elem) && next(elem);};};



filters.has = function(next, selector){
var func=compile(selector);

if(func === falseFunc)return falseFunc;
if(func === trueFunc)return function(elem){
return isParent(elem) && next(elem);};


return function has(elem){
return next(elem) && existsOne(func, getChildren(elem));};};
});
__d('CSSwhat/index.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

module.exports = parse;

var re_ws=/^\s/, 
re_name=/^(?:\\.|[\w\-\u00c0-\uFFFF])+/, 
re_escape=/\\([\da-f]{1,6}\s?|(\s)|.)/ig, 

re_attr=/^\s*((?:\\.|[\w\u00c0-\uFFFF\-])+)\s*(?:(\S?)=\s*(?:(['"])(.*?)\3|(#?(?:\\.|[\w\u00c0-\uFFFF\-])*)|)|)\s*(i)?\]/;

var actionTypes={
__proto__:null, 
"undefined":"exists", 
"":"equals", 
"~":"element", 
"^":"start", 
"$":"end", 
"*":"any", 
"!":"not", 
"|":"hyphen"};


var simpleSelectors={
__proto__:null, 
">":"child", 
"<":"parent", 
"~":"sibling", 
"+":"adjacent"};


var attribSelectors={
__proto__:null, 
"#":["id", "equals"], 
".":["class", "element"]};



function funescape(_, escaped, escapedWhitespace){
var high="0x" + escaped - 0x10000;



return high !== high || escapedWhitespace?
escaped:

high < 0?
String.fromCharCode(high + 0x10000):

String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);}


function unescapeCSS(str){
return str.replace(re_escape, funescape);}


function getClosingPos(selector){
var pos=1, counter=1, len=selector.length;

for(; counter > 0 && pos < len; pos++) {
if(selector.charAt(pos) === "(")counter++;else 
if(selector.charAt(pos) === ")")counter--;}


return pos;}


function parse(selector, options){
selector = (selector + "").trimLeft();

var subselects=[], 
tokens=[], 
sawWS=false, 
data, firstChar, name;

function getName(){
var sub=selector.match(re_name)[0];
selector = selector.substr(sub.length);
return unescapeCSS(sub);}


while(selector !== "") {
if(re_name.test(selector)){
if(sawWS){
tokens.push({type:"descendant"});
sawWS = false;}


name = getName();

if(!options || ("lowerCaseTags" in options?options.lowerCaseTags:!options.xmlMode)){
name = name.toLowerCase();}


tokens.push({type:"tag", name:name});}else 
if(re_ws.test(selector)){
sawWS = true;
selector = selector.trimLeft();}else 
{
firstChar = selector.charAt(0);
selector = selector.substr(1);

if(firstChar in simpleSelectors){
tokens.push({type:simpleSelectors[firstChar]});
selector = selector.trimLeft();
sawWS = false;
continue;}else 
if(firstChar === ","){
if(tokens.length === 0){
throw new SyntaxError("empty sub-selector");}

subselects.push(tokens);
tokens = [];

selector = selector.trimLeft();
sawWS = false;
continue;}else 
if(sawWS){
tokens.push({type:"descendant"});
sawWS = false;}


if(firstChar === "*"){
tokens.push({type:"universal"});}else 
if(firstChar in attribSelectors){
tokens.push({
type:"attribute", 
name:attribSelectors[firstChar][0], 
action:attribSelectors[firstChar][1], 
value:getName(), 
ignoreCase:false});}else 

if(firstChar === "["){
data = selector.match(re_attr);
if(!data){
throw new SyntaxError("Malformed attribute selector: " + selector);}

selector = selector.substr(data[0].length);
name = unescapeCSS(data[1]);

if(
!options || (
"lowerCaseAttributeNames" in options?
options.lowerCaseAttributeNames:
!options.xmlMode))

{
name = name.toLowerCase();}


tokens.push({
type:"attribute", 
name:name, 
action:actionTypes[data[2]], 
value:unescapeCSS(data[4] || data[5] || ""), 
ignoreCase:!!data[6]});}else 


if(firstChar === ":"){

name = getName().toLowerCase();
data = null;

if(selector.charAt(0) === "("){
var pos=getClosingPos(selector);
data = selector.substr(1, pos - 2);
selector = selector.substr(pos);}


tokens.push({type:"pseudo", name:name, data:data});}else 
{

throw new SyntaxError("Unmatched selector: " + firstChar + selector);}}}




if(subselects.length > 0 && tokens.length === 0){
throw new SyntaxError("empty sub-selector");}

subselects.push(tokens);
return subselects;}
});
__d('CSSselect/lib/general.js',["domutils/index.js","CSSselect/lib/attributes.js","CSSselect/lib/pseudos.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var DomUtils=require("domutils/index.js"), 
isTag=DomUtils.isTag, 
getParent=DomUtils.getParent, 
getChildren=DomUtils.getChildren, 
getSiblings=DomUtils.getSiblings, 
getName=DomUtils.getName;




module.exports = {
__proto__:null, 

attribute:require("CSSselect/lib/attributes.js").compile, 
pseudo:require("CSSselect/lib/pseudos.js").compile, 


tag:function(next, data){
var name=data.name;
return function tag(elem){
return getName(elem) === name && next(elem);};}, 




descendant:function(next){
return function descendant(elem){
var found=false;

while(!found && (elem = getParent(elem))) {
found = next(elem);}


return found;};}, 


parent:function(next){
return function parent(elem){
return getChildren(elem).some(next);};}, 


child:function(next){
return function child(elem){
var parent=getParent(elem);
return !!parent && next(parent);};}, 


sibling:function(next){
return function sibling(elem){
var siblings=getSiblings(elem);

for(var i=0; i < siblings.length; i++) {
if(isTag(siblings[i])){
if(siblings[i] === elem)break;
if(next(siblings[i]))return true;}}



return false;};}, 


adjacent:function(next){
return function adjacent(elem){
var siblings=getSiblings(elem), 
lastElement;

for(var i=0; i < siblings.length; i++) {
if(isTag(siblings[i])){
if(siblings[i] === elem)break;
lastElement = siblings[i];}}



return !!lastElement && next(lastElement);};}, 


universal:function(next){
return next;}};
});
__d('CSSselect/lib/sort.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = sortByProcedure;







var ATTRIBUTE=1;

var procedure={
__proto__:null, 
universal:5, 
tag:3, 
attribute:ATTRIBUTE, 
pseudo:0, 


descendant:-1, 
child:-1, 
parent:-1, 
sibling:-1, 
adjacent:-1};


var attributes={
__proto__:null, 
exists:8, 
equals:7, 
not:6, 
start:5, 
end:4, 
any:3, 
hyphen:2, 
element:1};


function sortByProcedure(arr){
for(var i=1; i < arr.length; i++) {
var procNew=procedure[arr[i].type];

if(procNew < 0)continue;

for(var j=i - 1; j >= 0; j--) {
if(
procNew > procedure[arr[j].type] || !(
procNew === ATTRIBUTE && 
procedure[arr[j].type] === ATTRIBUTE && 
attributes[arr[i].action] <= attributes[arr[j].action]))

break;

var tmp=arr[j + 1];
arr[j + 1] = arr[j];
arr[j] = tmp;}}


return arr;}
});
__d('cheerio/lib/api/manipulation.js',["lodash/dist/lodash.js","cheerio/lib/parse.js","cheerio/lib/static.js","cheerio/lib/utils.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _=require('lodash/dist/lodash.js'), 
parse=require('cheerio/lib/parse.js'), 
$=require('cheerio/lib/static.js'), 
updateDOM=parse.update, 
evaluate=parse.evaluate, 
utils=require('cheerio/lib/utils.js'), 
domEach=utils.domEach, 
encode=utils.encode, 
slice=Array.prototype.slice;



exports._makeDomArray = function makeDomArray(elem){
if(elem == null){
return [];}else 
if(elem.cheerio){
return elem.get();}else 
if(_.isArray(elem)){
return _.flatten(elem.map(makeDomArray, this));}else 
if(_.isString(elem)){
return evaluate(elem, this.options);}else 
{
return [elem];}};



var _insert=function(concatenator){
return function(){
var self=this, 
elems=slice.call(arguments), 
dom=this._makeDomArray(elems);

if(_.isFunction(elems[0])){
return domEach(this, function(i, el){
dom = self._makeDomArray(elems[0].call(el, i, $.html(el.children)));
concatenator(dom, el.children, el);});}else 

{
return domEach(this, function(i, el){
concatenator(dom, el.children, el);});}};};
















var uniqueSplice=function(array, spliceIdx, spliceCount, newElems, parent){
var spliceArgs=[spliceIdx, spliceCount].concat(newElems), 
prev=array[spliceIdx - 1] || null, 
next=array[spliceIdx] || null;
var idx, len, prevIdx, node;



for(idx = 0, len = newElems.length; idx < len; ++idx) {
node = newElems[idx];
prevIdx = node.parent && array.indexOf(newElems[idx]);

if(node.parent && prevIdx > -1){
array.splice(prevIdx, 1);
if(spliceIdx > prevIdx){
spliceArgs[0]--;}}



node.parent = parent;
node.prev = newElems[idx - 1] || prev;
node.next = newElems[idx + 1] || next;}


if(prev){
prev.next = newElems[0];}

if(next){
next.prev = newElems[newElems.length - 1];}


return array.splice.apply(array, spliceArgs);};


var append=exports.append = _insert(function(dom, children, parent){
uniqueSplice(children, children.length, 0, dom, parent);});


var prepend=exports.prepend = _insert(function(dom, children, parent){
uniqueSplice(children, 0, 0, dom, parent);});


var after=exports.after = function(){
var elems=slice.call(arguments), 
dom=this._makeDomArray(elems), 
self=this;

domEach(this, function(i, el){
var parent=el.parent || el.root, 
siblings=parent.children, 
index=siblings.indexOf(el);


if(! ~index)return;

if(_.isFunction(elems[0])){
dom = self._makeDomArray(elems[0].call(el, i));}



uniqueSplice(siblings, ++index, 0, dom, parent);});


return this;};


var before=exports.before = function(){
var elems=slice.call(arguments), 
dom=this._makeDomArray(elems), 
self=this;

domEach(this, function(i, el){
var parent=el.parent || el.root, 
siblings=parent.children, 
index=siblings.indexOf(el);


if(! ~index)return;

if(_.isFunction(elems[0])){
dom = self._makeDomArray(elems[0].call(el, i));}



uniqueSplice(siblings, index, 0, dom, parent);});


return this;};





var remove=exports.remove = function(selector){
var elems=this;


if(selector)
elems = elems.filter(selector);

domEach(elems, function(i, el){
var parent=el.parent || el.root, 
siblings=parent.children, 
index=siblings.indexOf(el);

if(! ~index)return;


siblings.splice(index, 1);
if(el.prev){
el.prev.next = el.next;}

if(el.next){
el.next.prev = el.prev;}

el.prev = el.next = el.parent = null;});


return this;};


var replaceWith=exports.replaceWith = function(content){
var self=this;

domEach(this, function(i, el){
var parent=el.parent || el.root, 
siblings=parent.children, 
dom=self._makeDomArray(_.isFunction(content)?content.call(el, i, el):content), 
index;



updateDOM(dom, null);

index = siblings.indexOf(el);


uniqueSplice(siblings, index, 1, dom, parent);
el.parent = el.prev = el.next = null;});


return this;};


var empty=exports.empty = function(){
domEach(this, function(i, el){
_.each(el.children, function(el){
el.next = el.prev = el.parent = null;});


el.children.length = 0;});

return this;};





var html=exports.html = function(str){
if(str === undefined){
if(!this[0] || !this[0].children)return null;
return $.html(this[0].children);}


str = str.cheerio?str.get():evaluate(str, this.options);

domEach(this, function(i, el){
_.each(el.children, function(el){
el.next = el.prev = el.parent = null;});


updateDOM(str, el);});


return this;};


var toString=exports.toString = function(){
return $.html(this);};


var text=exports.text = function(str){

if(str === undefined){
return $.text(this);}else 
if(_.isFunction(str)){

return domEach(this, function(i, el){
var $el=[el];
return text.call($el, str.call(el, i, $.text($el)));});}



var elem={
data:encode(str), 
type:'text', 
parent:null, 
prev:null, 
next:null, 
children:[]};



domEach(this, function(i, el){
_.each(el.children, function(el){
el.next = el.prev = el.parent = null;});


updateDOM(elem, el);});


return this;};


var clone=exports.clone = function(){


return this._make($.html(this));};
});
__d('cheerio/lib/static.js',["CSSselect/index.js","cheerio/lib/parse.js","cheerio/lib/render.js","cheerio/lib/utils.js","lodash/dist/lodash.js","cheerio/lib/cheerio.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 



select=require('CSSselect/index.js'), 
parse=require('cheerio/lib/parse.js'), 
render=require('cheerio/lib/render.js'), 
decode=require('cheerio/lib/utils.js').decode, 
_=require('lodash/dist/lodash.js');





var load=exports.load = function(content, options){
var Cheerio=require('cheerio/lib/cheerio.js');

options = _.defaults(options || {}, Cheerio.prototype.options);

var root=parse(content, options);

var initialize=function(selector, context, r, opts){
opts = _.defaults(opts || {}, options);
return new Cheerio(selector, context, r || root, opts);};



initialize.__proto__ = exports;


initialize._root = root;

return initialize;};






var html=exports.html = function(dom){
if(dom){
dom = typeof dom === 'string'?select(dom, this._root):dom;
return render(dom);}else 
if(this._root && this._root.children){
return render(this._root.children);}else 
{
return '';}};







var xml=exports.xml = function(dom){
if(dom){
dom = typeof dom === 'string'?select(dom, this._root):dom;
return render(dom, {xmlMode:true});}else 
if(this._root && this._root.children){
return render(this._root.children, {xmlMode:true});}else 
{
return '';}};







var text=exports.text = function(elems){
if(!elems)return '';

var ret='', 
len=elems.length, 
elem;

for(var i=0; i < len; i++) {
elem = elems[i];
if(elem.type === 'text')ret += decode(elem.data);else 
if(elem.children && elem.type !== 'comment'){
ret += text(elem.children);}}



return ret;};







var parseHTML=exports.parseHTML = function(data, context, keepScripts){
var parsed;

if(!data || typeof data !== 'string'){
return null;}


if(typeof context === 'boolean'){
keepScripts = context;}


parsed = this.load(data);
if(!keepScripts){
parsed('script').remove();}


return parsed.root()[0].children;};





var root=exports.root = function(){
return this(this._root);};





var contains=exports.contains = function(container, contained){


if(contained === container){
return false;}




while(contained && contained !== contained.parent) {
contained = contained.parent;
if(contained === container){
return true;}}



return false;};
});
__d('cheerio/lib/render.js',["lodash/dist/lodash.js","cheerio/lib/utils.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 


_=require('lodash/dist/lodash.js');
var utils=require('cheerio/lib/utils.js');

var encode=utils.encode;




var rboolean=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;




var formatAttrs=function(attributes){
if(!attributes)return;

var output='', 
value;


for(var key in attributes) {
value = attributes[key];
if(output){
output += ' ';}


if(!value && (rboolean.test(key) || key === '/')){
output += key;}else 
{
output += key + '="' + encode(value) + '"';}}



return output;};





var singleTag={
area:1, 
base:1, 
basefont:1, 
br:1, 
col:1, 
frame:1, 
hr:1, 
img:1, 
input:1, 
isindex:1, 
link:1, 
meta:1, 
param:1, 
embed:1, 
include:1, 
'yield':1};





var tagType={
tag:1, 
script:1, 
link:1, 
style:1, 
template:1};


var render=module.exports = function(dom, opts){
if(!Array.isArray(dom) && !dom.cheerio)dom = [dom];
opts = opts || {};

var output='', 
xmlMode=opts.xmlMode;

_.each(dom, function(elem){
var isTag=tagType[elem.type];

var pushVal;
if(isTag)
pushVal = renderTag(elem, xmlMode);else 
if(elem.type === 'directive')
pushVal = renderDirective(elem);else 
if(elem.type === 'comment')
pushVal = renderComment(elem);else 
if(elem.type === 'cdata')
pushVal = renderCdata(elem);else 

pushVal = renderText(elem);

if(elem.children && elem.type !== 'cdata')
pushVal += render(elem.children, opts);

if(isTag && (!singleTag[elem.name] || xmlMode)){
if(!isClosedTag(elem, xmlMode)){
pushVal += '</' + elem.name + '>';}}




output += pushVal;});


return output;};


var isClosedTag=function(elem, xmlMode){
return xmlMode && (!elem.children || elem.children.length === 0);};


var renderTag=function(elem, xmlMode){
var tag='<' + elem.name, 
attribs=formatAttrs(elem.attribs);

if(attribs){
tag += ' ' + attribs;}


if(isClosedTag(elem, xmlMode)){
tag += '/';}


return tag + '>';};


var renderDirective=function(elem){
return '<' + elem.data + '>';};


var renderText=function(elem){
return elem.data || '';};


var renderCdata=function(elem){
return '<![CDATA[' + elem.children[0].data + ']]>';};


var renderComment=function(elem){
return '<!--' + elem.data + '-->';};
});
__d('cheerio/lib/api/css.js',["lodash/dist/lodash.js","cheerio/lib/utils.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _=require('lodash/dist/lodash.js'), 
domEach=require('cheerio/lib/utils.js').domEach;
var toString=Object.prototype.toString;










exports.css = function(prop, val){
if(arguments.length === 2 || 

toString.call(prop) === '[object Object]'){
return domEach(this, function(idx, el){
setCss(el, prop, val, idx);});}else 

{
return getCss(this[0], prop);}};













function setCss(el, prop, val, idx){
if('string' == typeof prop){
var styles=getCss(el);
if(_.isFunction(val)){
val = val.call(el, idx, el);}


if(val === ''){
delete styles[prop];}else 
if(val != null){
styles[prop] = val;}


el.attribs.style = stringify(styles);}else 
if('object' == typeof prop){
Object.keys(prop).forEach(function(k){
setCss(el, k, prop[k]);});}}












function getCss(el, prop){
var styles=parse(el.attribs.style);
if(typeof prop === 'string'){
return styles[prop];}else 
if(_.isArray(prop)){
return _.pick(styles, prop);}else 
{
return styles;}}











function stringify(obj){
return Object.keys(obj || {}).
reduce(function(str, prop){
return str += '' + (
str?' ':'') + 
prop + 
': ' + 
obj[prop] + 
';';}, 
'');}










function parse(styles){
styles = (styles || '').trim();

if(!styles)return {};

return styles.
split(';').
reduce(function(obj, str){
var n=str.indexOf(':');

if(n < 1 || n === str.length - 1)return obj;
obj[str.slice(0, n).trim()] = str.slice(n + 1).trim();
return obj;}, 
{});}
});
__d('cheerio/package.json',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {
  "name": "cheerio",
  "version": "0.15.0",
  "description": "Tiny, fast, and elegant implementation of core jQuery designed specifically for the server",
  "author": {
    "name": "Matt Mueller",
    "email": "mattmuelle@gmail.com",
    "url": "mat.io"
  },
  "keywords": [
    "htmlparser",
    "jquery",
    "selector",
    "scraper",
    "parser",
    "html"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/MatthewMueller/cheerio.git"
  },
  "main": "./index.js",
  "engines": {
    "node": ">= 0.6"
  },
  "dependencies": {
    "htmlparser2": "~3.7.0",
    "entities": "~1.0.0",
    "CSSselect": "~0.4.0",
    "lodash": "~2.4.1"
  },
  "devDependencies": {
    "mocha": "*",
    "expect.js": "~0.3.1",
    "jshint": "~2.3.0",
    "benchmark": "~1.0.0",
    "jsdom": "~0.8.9"
  },
  "scripts": {
    "test": "make test"
  },
  "bugs": {
    "url": "https://github.com/MatthewMueller/cheerio/issues"
  },
  "homepage": "https://github.com/MatthewMueller/cheerio",
  "_id": "cheerio@0.15.0",
  "dist": {
    "shasum": "8775ec3ab16f4c66195b9cc6797e0c82b51e6b34",
    "tarball": "http://registry.npmjs.org/cheerio/-/cheerio-0.15.0.tgz"
  },
  "_from": "cheerio@>=0.15.0 <0.16.0",
  "_npmVersion": "1.4.6",
  "_npmUser": {
    "name": "mattmueller",
    "email": "mattmuelle@gmail.com"
  },
  "maintainers": [
    {
      "name": "mattmueller",
      "email": "mattmuelle@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "8775ec3ab16f4c66195b9cc6797e0c82b51e6b34",
  "_resolved": "https://registry.npmjs.org/cheerio/-/cheerio-0.15.0.tgz",
  "readme": "ERROR: No README data found!"
}
;
});
__d('yarn/app/views/browser/wordHelpers.js',["yarn/words.js","yarn/app/views/browser/splitGluedTogetherWords.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var words=require('yarn/words.js');
var splitGluedTogetherWords=require('yarn/app/views/browser/splitGluedTogetherWords.js');

function getWordsInRange(articleWords, start, stop){
var output=[];

articleWords.forEach(function(w){
if(

w in words && 

words[w] >= start && words[w] <= stop && 

output.indexOf(w) === -1)
{
output.push(w);}});




return output;}


module.exports = {
extractWordsFromArticle:function(articleText, rangeStart, rangeStop){
var textContent=articleText.replace(/  +/g, ' ');

var extractedWords=splitGluedTogetherWords(textContent);


return getWordsInRange(extractedWords, rangeStart, rangeStop);}};
});
__d('yarn/words.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"the":1, "and":1, "of":1, "a":1, "in":1, "to":1, "i":1, "it":1, "is":1, "that":1, "for":1, "you":1, "was":1, "he":1, "with":1, "on":1, "'s":1, "at":1, "this":1, "they":1, "be":1, "are":1, "have":1, "we":1, "his":1, "but":1, "from":1, "not":1, "n't":1, "she":1, "by":1, "or":1, "do":1, "an":1, "as":1, "had":1, "what":1, "were":1, "their":1, "all":1, "has":1, "who":1, "her":1, "my":1, "if":1, "would":1, "said":1, "about":1, "can":1, "up":1, "been":1, "so":1, "there":1, "one":1, "will":1, "me":1, "just":1, "people":1, "when":1, "which":1, "them":1, "him":1, "did":1, "out":1, "your":1, "some":1, "into":1, "know":1, "time":1, "could":1, "now":1, "than":1, "like":1, "'":1, "think":1, "how":1, "then":1, "other":1, "our":1, "its":1, "these":1, "get":1, "two":1, "says":1, "going":1, "also":1, "first":1, "years":1, "because":1, "new":1, "well":1, "more":1, "see":1, "no":1, "here":1, "way":1, "very":1, "many":1, "those":1, "only":1, "back":1, "go":1, "say":1, "us":2, "even":2, "good":2, "make":2, "through":2, "any":2, "down":3, "want":3, "does":3, "may":3, "after":3, "year":3, "should":3, "over":3, "still":4, "world":4, "last":4, "take":4, "day":4, "too":4, "life":4, "really":5, "man":5, "three":5, "between":5, "never":5, "something":5, "being":5, "much":5, "school":6, "president":6, "another":6, "own":6, "why":6, "right":6, "while":6, "most":6, "things":6, "state":6, "same":6, "come":6, "children":6, "house":6, "every":7, "where":7, "american":7, "might":7, "women":7, "again":7, "such":7, "against":7, "percent":7, "few":8, "each":8, "students":8, "family":8, "look":8, "during":8, "work":8, "thing":8, "off":8, "today":8, "great":8, "big":8, "always":8, "old":8, "next":8, "high":9, "came":9, "government":9, "city":9, "before":9, "got":9, "lot":9, "part":9, "without":9, "night":9, "find":9, "country":9, "place":9, "tell":9, "must":9, "national":9, "need":9, "money":9, "different":9, "under":9, "yes":9, "went":9, "water":10, "war":10, "men":10, "small":10, "ca":10, "mean":10, "made":10, "though":10, "room":10, "mother":10, "group":10, "four":10, "took":10, "little":10, "system":10, "days":10, "black":10, "give":10, "both":10, "away":11, "number":11, "around":11, "until":11, "fact":11, "important":11, "woman":11, "case":11, "political":11, "times":11, "doing":11, "let":11, "head":11, "since":11, "often":11, "among":11, "home":11, "however":11, "hand":11, "million":11, "point":11, "help":11, "social":11, "ever":11, "keep":11, "yet":11, "father":11, "week":11, "health":11, "long":11, "sure":11, "business":11, "use":12, "feel":12, "kind":12, "young":12, "company":12, "eyes":12, "power":12, "university":12, "almost":12, "done":12, "information":12, "best":12, "five":12, "later":12, "nothing":12, "once":12, "side":12, "ago":12, "white":12, "thought":12, "real":12, "end":12, "news":12, "program":12, "several":12, "believe":12, "whether":12, "knew":12, "told":12, "research":12, "public":12, "story":12, "together":12, "anything":12, "problem":12, "education":12, "question":12, "trying":12, "making":13, "looking":13, "least":13, "already":13, "center":13, "table":13, "large":13, "having":13, "called":13, "child":13, "morning":13, "getting":13, "seen":13, "study":13, "put":13, "job":13, "yeah":13, "within":13, "face":13, "history":13, "maybe":13, "saw":13, "wanted":13, "community":13, "others":13, "asked":13, "actually":13, "across":13, "found":13, "himself":13, "enough":13, "including":14, "oh":14, "far":14, "although":14, "law":14, "toward":14, "coming":14, "everything":14, "team":14, "working":14, "book":14, "area":14, "second":14, "air":14, "body":14, "able":14, "door":14, "music":14, "months":14, "office":14, "talk":14, "human":14, "person":14, "began":14, "minutes":14, "saying":14, "parents":14, "used":14, "probably":14, "name":14, "line":14, "car":14, "game":14, "kids":14, "using":14, "makes":14, "someone":14, "try":14, "court":14, "course":15, "food":15, "behind":15, "care":15, "am":15, "problems":15, "local":15, "looked":15, "call":15, "process":15, "members":15, "ask":15, "former":15, "sense":15, "moment":15, "six":15, "street":15, "talking":15, "age":15, "economic":15, "idea":15, "else":15, "party":15, "college":15, "police":15, "hours":15, "thank":15, "felt":15, "bad":16, "words":16, "early":16, "major":16, "taking":16, "along":16, "hands":16, "perhaps":16, "better":16, "according":16, "possible":16, "military":16, "sometimes":16, "development":16, "whole":16, "themselves":16, "understand":16, "comes":16, "hear":16, "issue":16, "death":16, "service":16, "art":16, "free":16, "federal":16, "given":16, "control":16, "taken":16, "friends":16, "international":16, "finally":16, "become":16, "live":16, "data":16, "security":16, "feet":16, "groups":16, "policy":16, "general":16, "show":16, "true":16, "became":16, "started":17, "seems":17, "order":17, "gave":17, "level":17, "voice":17, "especially":17, "heart":17, "wife":17, "remember":17, "everyone":17, "full":17, "hard":17, "known":17, "special":17, "oil":17, "market":17, "play":17, "department":17, "season":17, "questions":17, "turned":17, "bring":17, "role":17, "church":17, "issues":17, "whose":17, "gone":17, "experience":17, "photo":17, "building":17, "color":17, "seemed":17, "based":17, "reason":17, "programs":17, "half":17, "start":17, "director":17, "recent":17, "support":17, "mind":17, "society":17, "town":18, "companies":18, "itself":18, "provide":18, "student":18, "north":18, "hair":18, "quite":18, "looks":18, "leave":18, "road":18, "space":18, "word":18, "schools":18, "pay":18, "americans":18, "son":18, "per":18, "studies":18, "guy":18, "teachers":18, "class":18, "open":18, "ways":18, "red":18, "personal":18, "certain":18, "third":18, "weeks":18, "love":18, "wo":18, "either":18, "field":18, "clear":18, "results":18, "nearly":18, "evidence":18, "interest":18, "simply":18, "plan":18, "strong":18, "phone":18, "couple":18, "services":18, "girl":18, "left":18, "officials":18, "attention":18, "goes":18, "ground":18, "running":18, "energy":18, "takes":18, "available":18, "change":18, "light":18, "boy":18, "stay":18, "month":18, "likely":19, "difficult":19, "private":19, "stop":19, "friend":19, "move":19, "nation":19, "rights":19, "less":19, "congress":19, "view":19, "turn":19, "higher":19, "seem":19, "south":19, "single":19, "low":19, "industry":19, "summer":19, "administration":19, "myself":19, "common":19, "areas":19, "force":19, "medical":19, "park":19, "relationship":19, "science":19, "late":19, "current":19, "significant":19, "photograph":19, "anyone":19, "wrong":19, "county":19, "certainly":19, "technology":19, "west":19, "position":19, "land":19, "cases":19, "report":19, "model":19, "action":19, "campaign":19, "paper":19, "economy":19, "include":19, "defense":20, "past":20, "situation":20, "quickly":20, "nature":20, "countries":20, "wants":20, "blood":20, "foreign":20, "soon":20, "rest":20, "floor":20, "effect":20, "tax":20, "husband":20, "gets":20, "recently":20, "workers":20, "happened":20, "meet":20, "upon":20, "continue":20, "dead":20, "begin":20, "natural":20, "top":20, "future":20, "happen":20, "near":20, "particular":20, "series":20, "thus":20, "decision":20, "baby":20, "culture":20, "easy":20, "run":20, "practice":20, "short":20, "states":20, "training":20, "similar":20, "exactly":20, "period":20, "ok":20, "century":20, "east":20, "herself":20, "performance":20, "hour":20, "lives":20, "buy":20, "billion":20, "longer":20, "bed":20, "learn":20, "teacher":20, "usually":20, "physical":20, "language":20, "read":20, "population":20, "fire":20, "project":20, "matter":20, "seven":20, "media":20, "books":20, "central":20, "families":20, "pretty":20, "tried":20, "miles":20, "despite":20, "press":20, "means":20, "form":20, "everybody":21, "figure":21, "chance":21, "hold":21, "site":21, "playing":21, "ready":21, "hot":21, "drug":21, "eight":21, "patients":21, "add":21, "beyond":21, "knowledge":21, "film":21, "rate":21, "growth":21, "record":21, "wrote":21, "whatever":21, "changes":21, "serious":21, "daughter":21, "computer":21, "board":21, "particularly":21, "environmental":21, "systems":21, "risk":21, "fine":21, "knows":21, "financial":21, "tonight":21, "staff":21, "behavior":21, "cup":21, "cut":21, "forward":21, "river":21, "result":21, "poor":21, "happy":21, "earth":21, "games":21, "tv":21, "leaders":21, "create":21, "moving":21, "price":21, "arms":21, "blue":21, "guys":21, "girls":21, "thanks":21, "living":21, "players":21, "treatment":21, "analysis":21, "success":21, "outside":21, "heard":21, "learning":21, "race":21, "movie":21, "hospital":22, "army":22, "television":22, "author":22, "levels":22, "committee":22, "jobs":22, "forces":22, "value":22, "simple":22, "career":22, "democratic":22, "sex":22, "stories":22, "difference":22, "window":22, "effort":22, "sat":22, "sun":22, "wall":22, "test":22, "list":22, "rather":22, "various":22, "older":22, "green":22, "religious":22, "management":22, "quality":22, "approach":22, "ability":22, "trade":22, "clearly":22, "nice":22, "size":22, "indeed":22, "wait":22, "sound":22, "movement":22, "king":22, "member":22, "watching":22, "set":22, "entire":22, "cultural":22, "legal":22, "watch":22, "main":22, "above":22, "association":22, "onto":22, "sitting":22, "choice":22, "final":22, "close":22, "pressure":22, "huge":22, "hope":22, "waiting":22, "deal":22, "act":22, "stood":22, "type":22, "boys":22, "brother":22, "traditional":22, "activities":22, "dark":22, "greater":22, "standing":22, "giving":22, "environment":22, "resources":22, "disease":22, "died":22, "truth":22, "numbers":22, "cold":22, "win":22, "picture":22, "following":22, "speak":22, "specific":22, "consider":22, "needs":22, "suddenly":22, "republican":22, "yourself":22, "guess":22, "individual":22, "article":22, "popular":23, "image":23, "heat":23, "lost":23, "lower":23, "eye":23, "somebody":23, "politics":23, "piece":23, "inside":23, "instead":23, "peace":23, "events":23, "stuff":23, "points":23, "union":23, "bill":23, "commercial":23, "beautiful":23, "ten":23, "amount":23, "showed":23, "sexual":23, "opportunity":23, "stand":23, "efforts":23, "middle":23, "design":23, "allow":23, "effects":23, "star":23, "professor":23, "skills":23, "understanding":23, "district":23, "meeting":23, "ahead":23, "necessary":23, "doctor":23, "video":23, "mom":23, "march":23, "organization":23, "bank":23, "lines":23, "impact":23, "cost":23, "positive":23, "radio":23, "total":23, "fish":23, "ran":23, "region":23, "range":23, "box":23, "sit":23, "write":23, "throughout":23, "response":23, "conditions":23, "sort":23, "production":23, "skin":23, "weight":23, "scene":23, "eat":23, "pain":23, "island":23, "section":23, "justice":23, "global":23, "spend":23, "page":23, "violence":23, "loss":23, "thinking":23, "interesting":23, "products":23, "leader":23, "worked":23, "glass":23, "modern":23, "evening":23, "sunday":23, "senate":23, "cancer":23, "break":23, "places":24, "hall":24, "kitchen":24, "absolutely":24, "earlier":24, "agree":24, "participants":24, "senior":24, "senator":24, "stage":24, "expect":24, "walked":24, "kept":24, "key":24, "whom":24, "rates":24, "fresh":24, "museum":24, "front":24, "needed":24, "civil":24, "held":24, "budget":24, "sea":24, "offer":24, "parts":24, "individuals":24, "alone":24, "spring":24, "species":24, "mouth":24, "professional":24, "council":24, "stock":24, "club":24, "differences":24, "step":24, "source":24, "considered":24, "dollars":24, "sister":24, "democrats":24, "build":24, "message":24, "nor":24, "western":24, "arm":24, "bit":24, "nuclear":24, "access":24, "works":24, "effective":24, "gas":24, "subject":24, "conference":24, "july":24, "serve":24, "critical":24, "rules":24, "june":24, "answer":24, "majority":24, "agency":24, "shows":24, "seeing":24, "theory":24, "editor":24, "dad":24, "activity":24, "beginning":24, "leaving":24, "holding":24, "decided":24, "values":24, "follow":24, "trees":24, "sports":24, "telling":24, "capital":24, "store":24, "republicans":24, "election":24, "southern":24, "successful":24, "none":24, "born":24, "ball":24, "trouble":24, "larger":24, "ideas":24, "safety":24, "walk":24, "therefore":24, "dinner":24, "base":24, "crime":24, "dog":24, "heavy":24, "starting":24, "reasons":24, "sorry":24, "lead":24, "brought":24, "growing":24, "goal":24, "eventually":24, "benefits":24, "listen":24, "perfect":24, "event":24, "gives":24, "please":24, "lose":24, "prices":24, "drugs":24, "trial":24, "camera":24, "marriage":24, "insurance":24, "deep":24, "original":24, "letter":24, "nobody":24, "turns":24, "rock":24, "african":25, "basic":25, "nations":25, "executive":25, "send":25, "station":25, "further":25, "status":25, "thousands":25, "surface":25, "reality":25, "die":25, "directly":25, "moved":25, "web":25, "concerned":25, "teaching":25, "speech":25, "costs":25, "nine":25, "standards":25, "british":25, "player":25, "remain":25, "material":25, "cars":25, "reading":25, "hotel":25, "stars":25, "soviet":25, "immediately":25, "wide":25, "written":25, "powerful":25, "completely":25, "fell":25, "factors":25, "trip":25, "designed":25, "governor":25, "term":25, "involved":25, "character":25, "collection":25, "chair":25, "walking":25, "safe":25, "expected":25, "slowly":25, "network":25, "develop":25, "labor":25, "edge":25, "generally":25, "style":25, "opened":25, "kill":25, "lack":25, "tough":25, "chinese":25, "secretary":25, "fall":25, "officer":25, "happens":25, "troops":25, "lake":25, "arts":25, "ice":25, "appear":25, "concern":25, "feeling":25, "degree":25, "sales":25, "homes":25, "potential":25, "pick":25, "plants":25, "friday":25, "mountain":25, "continues":25, "present":25, "explain":25, "freedom":25, "reach":25, "minute":25, "debate":25, "writing":25, "protect":25, "kid":25, "credit":25, "fear":25, "asking":25, "previous":25, "attorney":25, "manager":25, "easily":25, "weapons":25, "shown":25, "obviously":25, "plans":25, "product":25, "normal":25, "european":25, "income":25, "tree":25, "finding":25, "changed":25, "employees":25, "christian":25, "gun":25, "sky":25, "supposed":25, "example":25, "built":25, "won":25, "terms":25, "rich":25, "save":25, "bay":25, "seat":25, "remains":25, "leadership":25, "afternoon":25, "magazine":25, "crisis":25, "plant":26, "grew":26, "avoid":26, "imagine":26, "independent":26, "sell":26, "league":26, "wind":26, "return":26, "property":26, "hundred":26, "spoke":26, "calling":26, "quick":26, "includes":26, "biggest":26, "gold":26, "met":26, "grow":26, "agreement":26, "memory":26, "direction":26, "images":26, "spent":26, "garden":26, "presence":26, "steps":26, "structure":26, "saturday":26, "largest":26, "required":26, "tomorrow":26, "attack":26, "additional":26, "audience":26, "appears":26, "bar":26, "relations":26, "institute":26, "putting":26, "willing":26, "strategy":26, "winter":26, "decades":26, "fair":26, "sources":26, "items":26, "interview":26, "killed":26, "mission":26, "brain":26, "basis":26, "discussion":26, "beach":26, "turning":26, "animals":26, "hit":26, "highly":26, "average":26, "doctors":26, "suggest":26, "researchers":26, "weekend":26, "task":26, "soldiers":26, "september":26, "tiny":26, "cause":26, "speaking":26, "academic":26, "corner":26, "investment":26, "annual":26, "legs":26, "reduce":26, "becomes":26, "bowl":26, "provides":26, "interested":26, "mostly":26, "authority":26, "vision":26, "teams":26, "scientists":26, "appeared":26, "responsibility":26, "variety":26, "post":26, "laws":26, "anybody":26, "reform":26, "statement":26, "artist":26, "anyway":26, "decisions":26, "wearing":26, "reported":26, "journal":26, "coffee":26, "sides":26, "faith":26, "foot":26, "pieces":26, "coach":26, "calls":26, "distance":26, "produce":26, "names":26, "hey":26, "carry":26, "female":26, "worth":26, "pass":26, "native":26, "models":26, "version":26, "share":27, "sign":27, "investigation":27, "experts":27, "commission":27, "song":27, "bag":27, "minister":27, "unless":27, "hell":27, "french":27, "materials":27, "compared":27, "purpose":27, "chairman":27, "policies":27, "require":27, "funds":27, "forest":27, "keeping":27, "afraid":27, "worse":27, "wild":27, "scale":27, "survey":27, "responsible":27, "associated":27, "focus":27, "played":27, "regular":27, "protection":27, "raise":27, "equipment":27, "prison":27, "records":27, "driving":27, "latest":27, "communities":27, "lady":27, "internet":27, "na":27, "slightly":27, "baseball":27, "generation":27, "firm":27, "cities":27, "allowed":27, "educational":27, "january":27, "chief":27, "led":27, "clothes":27, "choose":27, "smaller":27, "historical":27, "institutions":27, "streets":27, "intelligence":27, "battle":27, "suggests":27, "taxes":27, "negative":27, "wonderful":27, "primary":27, "okay":27, "parties":27, "check":27, "interests":27, "threat":27, "created":27, "conversation":27, "salt":27, "pulled":27, "organizations":27, "younger":27, "details":27, "active":27, "date":27, "increase":27, "officers":27, "identity":27, "watched":27, "reports":27, "indian":27, "residents":27, "neighborhood":27, "twice":27, "apparently":27, "apartment":27, "cool":27, "hundreds":27, "factor":27, "citizens":27, "competition":27, "construction":27, "sir":27, "card":27, "appropriate":27, "cover":27, "pictures":27, "direct":27, "relatively":27, "challenge":27, "warm":27, "foundation":27, "screen":27, "literature":27, "letters":27, "developed":27, "continued":27, "realize":27, "moral":27, "forget":27, "determine":27, "complete":27, "decade":27, "received":27, "yesterday":27, "review":27, "football":27, "division":27, "goals":27, "relationships":27, "begins":27, "shoulder":27, "soft":27, "spirit":27, "painting":27, "coast":27, "walls":27, "sites":27, "united":27, "becoming":27, "conflict":27, "thinks":27, "judge":27, "types":27, "daily":27, "opinion":27, "drive":27, "dangerous":27, "aware":27, "quiet":27, "lived":27, "mental":27, "crowd":27, "sees":27, "context":27, "bright":27, "yards":27, "restaurant":28, "stopped":28, "scores":28, "fingers":28, "fully":28, "writer":28, "strength":28, "progress":28, "pull":28, "measures":28, "speed":28, "smile":28, "condition":28, "projects":28, "importance":28, "band":28, "improve":28, "join":28, "hill":28, "machine":28, "wine":28, "rule":28, "fund":28, "search":28, "november":28, "helped":28, "tests":28, "stone":28, "famous":28, "kinds":28, "experiences":28, "eastern":28, "extra":28, "dream":28, "tells":28, "october":28, "male":28, "artists":28, "cell":28, "august":28, "familiar":28, "forms":28, "alive":28, "neck":28, "animal":28, "camp":28, "unit":28, "prevent":28, "lawyer":28, "meant":28, "starts":28, "presidential":28, "below":28, "note":28, "plane":28, "favorite":28, "included":28, "youth":28, "paid":28, "shot":28, "voters":28, "murder":28, "vice":28, "worry":28, "accept":28, "serving":28, "vote":28, "urban":28, "boat":28, "religion":28, "meaning":28, "runs":28, "healthy":28, "wish":28, "knowing":28, "fast":28, "domestic":28, "lots":28, "complex":28, "eating":28, "failure":28, "customers":28, "reached":28, "classes":28, "account":28, "otherwise":28, "gotten":28, "software":28, "operation":28, "added":28, "breath":28, "sugar":28, "somewhere":28, "monday":28, "basically":28, "seconds":28, "flight":28, "path":28, "supreme":28, "northern":28, "dry":28, "medicine":28, "track":28, "influence":28, "village":28, "pounds":28, "mayor":28, "weather":28, "decide":28, "plastic":28, "related":28, "grand":28, "candidate":28, "bottom":28, "increasingly":28, "helping":28, "iraqi":28, "sweet":28, "adults":28, "learned":28, "fourth":28, "scientific":28, "russian":28, "ship":28, "feels":28, "brown":28, "empty":28, "newspaper":28, "straight":28, "happening":28, "subjects":28, "fat":28, "fight":28, "advantage":28, "possibility":28, "receive":28, "shape":28, "december":28, "charges":28, "sport":28, "spot":28, "clean":28, "operations":28, "fans":28, "showing":28, "listening":28, "sent":28, "regional":28, "worst":28, "assessment":28, "emotional":28, "teach":28, "concerns":28, "classroom":28, "valley":28, "patient":28, "creating":28, "democracy":28, "practices":28, "farm":28, "houses":28, "birth":28, "perspective":28, "text":28, "requires":28, "visit":28, "background":28, "corporate":28, "lights":29, "rain":29, "concept":29, "title":29, "gon":29, "greatest":29, "carefully":29, "markets":29, "advice":29, "aid":29, "losing":29, "tend":29, "argument":29, "enjoy":29, "figures":29, "findings":29, "signs":29, "truck":29, "sample":29, "tradition":29, "passed":29, "prime":29, "impossible":29, "abuse":29, "somehow":29, "opportunities":29, "millions":29, "significantly":29, "married":29, "yellow":29, "victory":29, "loved":29, "inches":29, "chicken":29, "largely":29, "anymore":29, "methods":29, "realized":29, "currently":29, "partner":29, "lawyers":29, "recognize":29, "movies":29, "driver":29, "expensive":29, "features":29, "wear":29, "method":29, "chest":29, "internal":29, "lunch":29, "housing":29, "windows":29, "border":29, "owner":29, "unique":29, "desk":29, "jury":29, "block":29, "followed":29, "talked":29, "library":29, "contact":29, "moon":29, "offers":29, "folks":29, "strange":29, "cash":29, "attacks":29, "actions":29, "candidates":29, "contract":29, "gender":29, "ethnic":29, "identify":29, "due":29, "paying":29, "victims":29, "thin":29, "fuel":29, "caught":29, "comfortable":29, "catholic":29, "guard":29, "actual":29, "provided":29, "solution":29, "elements":29, "multiple":29, "traffic":29, "snow":29, "spending":29, "stores":29, "balance":29, "cells":29, "extent":29, "identified":29, "possibly":29, "providing":29, "bodies":29, "maintain":29, "tall":29, "angry":29, "agencies":29, "exchange":29, "broke":29, "long-term":29, "selling":29, "crazy":29, "tuesday":29, "shoes":29, "joining":29, "planning":29, "standard":29, "hole":29, "bus":29, "agent":29, "obvious":29, "japanese":29, "english":29, "fields":29, "opening":29, "shop":29, "beauty":29, "truly":29, "metal":29, "correct":29, "master":29, "rising":29, "named":29, "ultimately":29, "placed":29, "stress":29, "target":29, "pair":29, "businesses":29, "doors":29, "filled":29, "banks":29, "pattern":29, "strategies":29, "desire":29, "feelings":29, "silence":29, "tour":29, "bigger":29, "damage":29, "buildings":29, "golden":29, "believes":29, "sick":30, "prepared":30, "jewish":30, "published":30, "critics":30, "remove":30, "thousand":30, "contrast":30, "exercise":30, "hardly":30, "conservative":30, "measure":30, "raised":30, "singing":30, "meanwhile":30, "grown":30, "winning":30, "quarter":30, "views":30, "believed":30, "slow":30, "allows":30, "ought":30, "respond":30, "golf":30, "described":30, "brothers":30, "suit":30, "thick":30, "notes":30, "basketball":30, "frequently":30, "nose":30, "extremely":30, "plus":30, "german":30, "welcome":30, "thoughts":30, "reaction":30, "liked":30, "sight":30, "surprise":30, "coverage":30, "smiled":30, "patterns":30, "emergency":30, "wood":30, "shook":30, "uses":30, "respect":30, "beside":30, "options":30, "catch":30, "clients":30, "heads":30, "ancient":30, "holds":30, "funny":30, "ourselves":30, "opposition":30, "parent":30, "bought":30, "leading":30, "neither":30, "moments":30, "explains":30, "expression":30, "debt":30, "attempt":30, "fun":30, "released":30, "official":30, "stands":30, "highest":30, "hearing":30, "except":30, "typical":30, "confidence":30, "equal":30, "pool":30, "february":30, "colleagues":30, "horse":30, "beneath":30, "sidebar":30, "aside":30, "overall":30, "prove":30, "hi":30, "faculty":30, "relief":30, "initial":30, "bringing":30, "pages":30, "connection":30, "storm":30, "remaining":30, "theater":30, "objects":30, "increased":30, "sold":30, "anywhere":30, "forth":30, "communication":30, "capacity":30, "fit":30, "essential":30, "contemporary":30, "describe":30, "definitely":30, "puts":30, "specifically":30, "arrived":30, "estate":30, "entirely":30, "industrial":30, "commitment":30, "consumer":30, "facing":30, "barely":30, "enter":30, "dozen":30, "adult":30, "meat":30, "exist":30, "surprised":30, "usual":30, "leg":30, "address":30, "funding":30, "separate":30, "charge":30, "typically":30, "studio":30, "thursday":30, "wonder":30, "terrible":30, "cream":30, "surgery":30, "rare":30, "totally":30, "era":30, "discuss":30, "nodded":30, "seek":30, "keeps":30, "forced":30, "dogs":30, "climate":30, "degrees":30, "consumers":30, "fewer":30, "limited":30, "adds":30, "trail":30, "grade":30, "fashion":30, "aids":30, "agreed":30, "welfare":30, "covered":30, "gift":30, "core":30, "rooms":30, "soil":30, "criminal":30, "legislation":30, "seriously":30, "flat":30, "tired":30, "location":30, "lips":31, "e-mail":31, "rural":31, "developing":31, "necessarily":31, "authorities":31, "birds":31, "pepper":31, "buying":31, "tape":31, "songs":31, "dance":31, "represent":31, "fishing":31, "argue":31, "useful":31, "tools":31, "dress":31, "dealing":31, "reporter":31, "soul":31, "somewhat":31, "carrying":31, "attitude":31, "closer":31, "cheese":31, "seeking":31, "liberal":31, "towards":31, "milk":31, "upper":31, "tea":31, "owners":31, "planet":31, "massive":31, "everywhere":31, "vs":31, "picked":31, "percentage":31, "visual":31, "testing":31, "apart":31, "careful":31, "gray":31, "bridge":31, "sleep":31, "broad":31, "plenty":31, "gay":31, "fill":31, "begun":31, "train":31, "danger":31, "facts":31, "captain":31, "secret":31, "function":31, "israeli":31, "rice":31, "sounds":31, "bedroom":31, "offered":31, "returned":31, "falling":31, "readers":31, "investors":31, "creative":31, "responses":31, "vast":31, "shoulders":31, "teeth":31, "drove":31, "served":31, "panel":31, "helps":31, "circumstances":31, "flying":31, "draw":31, "airport":31, "guilty":31, "solid":31, "apply":31, "affairs":31, "technical":31, "push":31, "cards":31, "addition":31, "miss":31, "drawn":31, "illegal":31, "regarding":31, "agents":31, "twenty":31, "minority":31, "offering":31, "merely":31, "flowers":31, "increasing":31, "governments":31, "proud":31, "throw":31, "leaves":31, "remained":31, "vehicle":31, "ended":31, "ocean":31, "code":31, "beer":31, "shirt":31, "presented":31, "unfortunately":31, "affect":31, "uncle":31, "produced":31, "touch":31, "demand":31, "positions":31, "busy":31, "determined":31, "consequences":31, "achieve":31, "wednesday":31, "notion":31, "assistance":31, "travel":31, "centers":31, "existing":31, "papers":31, "closely":31, "content":31, "enormous":31, "participation":31, "option":31, "forever":31, "cutting":31, "map":31, "lying":31, "aspects":31, "engine":31, "missing":31, "cups":31, "asks":31, "mountains":31, "colors":31, "musical":31, "intervention":31, "characters":31, "hoping":31, "plate":31, "spiritual":31, "crew":31, "variables":31, "regime":31, "depression":31, "techniques":31, "manner":31, "suggested":31, "package":31, "unusual":31, "smart":31, "landscape":31, "arab":31, "shopping":31, "choices":31, "pleasure":31, "handle":31, "alcohol":31, "telephone":31, "proper":31, "expert":31, "mistake":31, "closed":31, "combination":31, "silent":31, "elections":31, "characteristics":31, "amazing":32, "plays":32, "virtually":32, "challenges":32, "adding":32, "mothers":32, "instruction":32, "tears":32, "circle":32, "consistent":32, "revolution":32, "units":32, "frame":32, "primarily":32, "setting":32, "occur":32, "sits":32, "lay":32, "rise":32, "ensure":32, "comments":32, "length":32, "novel":32, "beat":32, "farmers":32, "narrow":32, "courses":32, "waste":32, "indicate":32, "afford":32, "hello":32, "pocket":32, "fruit":32, "neighbors":32, "engineering":32, "childhood":32, "accident":32, "focused":32, "temperature":32, "meetings":32, "appearance":32, "lucky":32, "attitudes":32, "leads":32, "curriculum":32, "perform":32, "athletes":32, "bread":32, "announced":32, "raising":32, "excellent":32, "achievement":32, "appreciate":32, "bird":32, "grass":32, "marketing":32, "discovered":32, "laughed":32, "drop":32, "constitution":32, "supply":32, "motion":32, "deeply":32, "wore":32, "expectations":32, "convention":32, "brings":32, "mine":32, "finds":32, "widely":32, "dramatic":32, "flow":32, "spanish":32, "parking":32, "partners":32, "firms":32, "finger":32, "lie":32, "examples":32, "desert":32, "acting":32, "victim":32, "matters":32, "digital":32, "steel":32, "brief":32, "mirror":32, "photos":32, "guide":32, "treated":32, "butter":32, "humans":32, "noise":32, "faces":32, "sharp":32, "unable":32, "documents":32, "host":32, "photographs":32, "violent":32, "sauce":32, "ear":32, "eggs":32, "formal":32, "moreover":32, "glad":32, "guns":32, "belief":32, "psychological":32, "established":32, "resistance":32, "sale":32, "existence":32, "mm-hmm":32, "principles":32, "caused":32, "mass":32, "creation":32, "zone":32, "immediate":32, "facilities":32, "reflect":32, "cable":32, "conducted":32, "guests":32, "mixture":32, "exposure":32, "pointed":32, "fighting":32, "easier":32, "writers":32, "immigrants":32, "racial":32, "sad":32, "hanging":32, "involvement":32, "electric":32, "votes":32, "visitors":32, "universe":32, "highway":32, "opposite":32, "opens":32, "cooking":32, "joint":32, "previously":32, "practical":32, "abortion":32, "courts":32, "breast":32, "online":32, "survive":32, "allowing":32, "congressional":32, "films":32, "numerous":32, "immigration":32, "mexican":32, "fairly":32, "explained":32, "double":32, "conclusion":32, "struggle":32, "score":32, "pink":32, "wedding":32, "cat":32, "dust":32, "enforcement":32, "claims":32, "correspondent":32, "actor":32, "ring":32, "computers":32, "joined":32, "chose":32, "resolution":32, "changing":32, "bottle":32, "poverty":32, "institution":32, "campus":32, "avenue":32, "essentially":32, "assume":32, "wave":32, "breaking":32, "academy":32, "trust":32, "wondered":32, "enemy":32, "politicians":32, "proposal":32, "users":32, "dropped":32, "dreams":32, "lesson":32, "procedures":32, "elsewhere":32, "encourage":32, "shall":33, "rarely":33, "ride":33, "approximately":33, "fundamental":33, "processes":33, "goods":33, "object":33, "client":33, "situations":33, "asian":33, "self":33, "occurred":33, "fly":33, "threw":33, "clinical":33, "severe":33, "therapy":33, "chain":33, "yard":33, "dressed":33, "criticism":33, "square":33, "round":33, "independence":33, "ages":33, "foods":33, "agenda":33, "hills":33, "reader":33, "benefit":33, "writes":33, "represents":33, "atmosphere":33, "competitive":33, "session":33, "answers":33, "warning":33, "tone":33, "sector":33, "creek":33, "blacks":33, "behaviors":33, "whenever":33, "statements":33, "cook":33, "sand":33, "luck":33, "lessons":33, "reporters":33, "emphasis":33, "sleeping":33, "transportation":33, "theme":33, "ordinary":33, "hate":33, "pushing":33, "moves":33, "honor":33, "suicide":33, "prepare":33, "intense":33, "recovery":33, "waited":33, "visible":33, "symptoms":33, "category":33, "transition":33, "diet":33, "establish":33, "roof":33, "juice":33, "colleges":33, "taste":33, "worker":33, "guest":33, "row":33, "strongly":33, "failed":33, "facility":33, "hunting":33, "stared":33, "smoke":33, "application":33, "revenue":33, "hat":33, "bills":33, "shooting":33, "hurt":33, "participate":33, "talks":33, "coalition":33, "stocks":33, "voices":33, "recognition":33, "entertainment":33, "jews":33, "taught":33, "selection":33, "tool":33, "anger":33, "via":33, "award":33, "judgment":33, "paintings":33, "weak":33, "nervous":33, "crucial":33, "equally":33, "charged":33, "roles":33, "notice":33, "knees":33, "reference":33, "constant":33, "hang":33, "memories":33, "electronic":33, "interviews":33, "drinking":33, "drew":33, "apple":33, "principle":33, "muslim":33, "pilot":33, "elementary":33, "philosophy":33, "injury":33, "promote":33, "committed":33, "nearby":33, "procedure":33, "holiday":33, "capable":33, "mention":33, "breakfast":33, "heavily":33, "shoot":33, "requirements":33, "palestinian":33, "diversity":33, "iron":33, "ears":33, "managers":33, "serves":33, "bureau":33, "personnel":33, "duty":33, "silver":33, "historic":33, "savings":33, "accounts":33, "perfectly":33, "literally":33, "doubt":33, "headed":33, "follows":33, "fellow":33, "distribution":33, "so-called":33, "edition":33, "surely":33, "junior":33, "volume":33, "authors":33, "seats":33, "wooden":33, "suppose":33, "personality":33, "route":33, "persons":33, "staring":33, "bone":33, "bike":33, "holy":33, "prince":33, "throat":33, "admit":33, "risks":33, "stayed":33, "treat":33, "employment":33, "retirement":33, "corn":33, "chapter":33, "wet":33, "articles":33, "bags":33, "nights":33, "release":33, "amendment":33, "talent":33, "bathroom":33, "detail":34, "indicated":34, "queen":34, "definition":34, "occasionally":34, "clip":34, "islamic":34, "navy":34, "narrator":34, "noted":34, "effectively":34, "sending":34, "winner":34, "super":34, "outcome":34, "pulling":34, "smooth":34, "terrorism":34, "trend":34, "shadow":34, "defined":34, "dollar":34, "communications":34, "shock":34, "honest":34, "inner":34, "networks":34, "gain":34, "device":34, "calories":34, "fifth":34, "royal":34, "permanent":34, "latin":34, "stepped":34, "drink":34, "cuts":34, "quietly":34, "claim":34, "birthday":34, "evaluation":34, "stronger":34, "republic":34, "finish":34, "darkness":34, "sons":34, "shots":34, "extreme":34, "located":34, "lies":34, "classic":34, "alternative":34, "coat":34, "reveal":34, "attend":34, "phase":34, "unlike":34, "powers":34, "knife":34, "lord":34, "comparison":34, "anxiety":34, "poll":34, "false":34, "examine":34, "vehicles":34, "laughing":34, "biological":34, "indians":34, "constantly":34, "gap":34, "advertising":34, "solar":34, "lab":34, "substantial":34, "educators":34, "conventional":34, "wondering":34, "giant":34, "aggressive":34, "limits":34, "sensitive":34, "respondents":34, "pushed":34, "finished":34, "stomach":34, "marine":34, "apparent":34, "gallery":34, "jacket":34, "absence":34, "meal":34, "structures":34, "manage":34, "coaches":34, "journey":34, "egg":34, "explanation":34, "demands":34, "beliefs":34, "continuing":34, "categories":34, "broken":34, "schedule":34, "reasonable":34, "wealth":34, "sing":34, "babies":34, "walks":34, "whereas":34, "daddy":34, "regulations":34, "psychology":34, "disaster":34, "machines":34, "album":34, "chosen":34, "carried":34, "mood":34, "pure":34, "depends":34, "grandmother":34, "mad":34, "involving":34, "studying":34, "conservation":34, "bones":34, "cross":34, "technologies":34, "rapidly":34, "entered":34, "technique":34, "democrat":34, "replace":34, "armed":34, "newspapers":34, "deficit":34, "males":34, "affected":34, "noticed":34, "difficulty":34, "nevertheless":34, "mail":34, "relevant":34, "boss":34, "smoking":34, "strategic":34, "reputation":34, "parks":34, "stupid":34, "devices":34, "cooperation":34, "approval":34, "valuable":34, "roughly":34, "precisely":34, "italian":34, "household":34, "passage":34, "festival":34, "pulls":34, "returning":34, "operating":34, "survival":34, "remembered":34, "components":34, "canadian":34, "passion":34, "roots":34, "channel":34, "normally":34, "universal":34, "promise":34, "spokesman":34, "awareness":34, "executives":34, "implications":34, "incident":34, "chocolate":34, "hospitals":34, "dying":34, "orders":34, "gate":34, "professionals":34, "discovery":34, "teaspoon":34, "tries":34, "garlic":34, "tickets":34, "clothing":34, "gently":34, "ultimate":34, "olympic":34, "protein":34, "populations":34, "sheet":34, "pregnant":34, "distant":34, "speaker":34, "minor":34, "aunt":34, "reaching":34, "arrested":34, "scenes":34, "assets":34, "literary":34, "pan":34, "acres":34, "extraordinary":34, "genetic":34, "jail":34, "substance":34, "vegetables":34, "column":34, "display":34, "sisters":34, "initially":34, "personally":34, "command":34, "reduction":34, "wildlife":34, "contains":34, "purposes":34, "smiling":34, "furniture":34, "waves":35, "prevention":35, "palm":35, "nurse":35, "latter":35, "dirt":35, "offices":35, "sentence":35, "pants":35, "diverse":35, "similarly":35, "blind":35, "replied":35, "count":35, "pace":35, "cycle":35, "skill":35, "appeal":35, "crimes":35, "attempts":35, "constitutional":35, "dna":35, "letting":35, "likes":35, "removed":35, "hero":35, "stairs":35, "bear":35, "contain":35, "refused":35, "loose":35, "electricity":35, "ladies":35, "tech":35, "bunch":35, "odd":35, "terror":35, "unlikely":35, "aspect":35, "roads":35, "restaurants":35, "territory":35, "satisfaction":35, "perception":35, "improvement":35, "stations":35, "mentioned":35, "woods":35, "potentially":35, "settlement":35, "knee":35, "carbon":35, "explore":35, "illness":35, "cheap":35, "movements":35, "prayer":35, "feature":35, "ticket":35, "accurate":35, "destruction":35, "thirty":35, "external":35, "advanced":35, "oven":35, "messages":35, "deer":35, "minds":35, "decline":35, "negotiations":35, "testimony":35, "description":35, "riding":35, "receiving":35, "fiber":35, "recalls":35, "interaction":35, "analysts":35, "surprising":35, "customer":35, "stops":35, "polls":35, "rough":35, "stir":35, "applications":35, "driven":35, "comprehensive":35, "element":35, "describes":35, "comment":35, "instrument":35, "prior":35, "laboratory":35, "laughter":35, "reporting":35, "scholars":35, "engage":35, "remarkable":35, "portion":35, "assistant":35, "mystery":35, "newly":35, "draft":35, "defensive":35, "ratings":35, "bomb":35, "investigators":35, "instruments":35, "height":35, "solve":35, "sharing":35, "contributions":35, "dining":35, "chemical":35, "horses":35, "congressman":35, "outcomes":35, "raw":35, "seasons":35, "staying":35, "fail":35, "complicated":35, "rocks":35, "regions":35, "intellectual":35, "wheel":35, "employee":35, "glasses":35, "angle":35, "championship":35, "expansion":35, "loan":35, "fiction":35, "ideal":35, "shift":35, "holes":35, "stadium":35, "deputy":35, "fan":35, "universities":35, "cultures":35, "signed":35, "rating":35, "tables":35, "deliver":35, "friendly":35, "regularly":35, "involves":35, "answered":35, "extensive":35, "graduate":35, "elected":35, "pot":35, "innocent":35, "analyst":35, "discipline":35, "soldier":35, "branch":35, "fees":35, "supporters":35, "interpretation":35, "unknown":35, "gulf":35, "chances":35, "gear":35, "aircraft":35, "faster":35, "samples":35, "drama":35, "losses":35, "sudden":35, "directions":35, "solutions":35, "ceiling":35, "alliance":35, "loans":35, "hide":35, "traveling":35, "prefer":35, "heading":35, "item":35, "pale":35, "daughters":35, "shut":35, "tremendous":35, "muscle":35, "significance":35, "mama":35, "belt":35, "trained":35, "leather":35, "exists":35, "politically":35, "naturally":35, "tank":35, "memorial":35, "criteria":35, "honey":35, "remote":35, "representatives":35, "blocks":35, "cap":35, "pollution":35, "regardless":35, "organic":35, "blame":35, "contribute":35, "paint":35, "dozens":35, "file":35, "preparation":35, "motor":35, "mainly":35, "struggling":35, "actors":35, "drawing":35, "stability":35, "considerable":35, "confident":35, "tasks":35, "generations":35, "fallen":35, "mile":35, "tobacco":35, "wars":35, "cake":35, "mix":35, "factory":35, "dialogue":35, "evolution":35, "churches":35, "framework":35, "stable":35, "storage":35, "mutual":35, "females":35, "boots":35, "commander":36, "pride":36, "originally":36, "supported":36, "linked":36, "revealed":36, "recall":36, "request":36, "partly":36, "arguments":36, "speaks":36, "attractive":36, "loves":36, "headquarters":36, "math":36, "covering":36, "clock":36, "centuries":36, "cognitive":36, "prominent":36, "topic":36, "understood":36, "index":36, "bible":36, "trading":36, "salad":36, "applied":36, "ingredients":36, "stick":36, "roll":36, "completed":36, "entry":36, "ongoing":36, "resource":36, "spread":36, "laugh":36, "vital":36, "dirty":36, "grounds":36, "fifteen":36, "producer":36, "introduced":36, "radical":36, "seeds":36, "reduced":36, "cameras":36, "scared":36, "weapon":36, "shortly":36, "accepted":36, "shit":36, "properly":36, "discussed":36, "exhibition":36, "stream":36, "pointing":36, "nowhere":36, "poetry":36, "defend":36, "fifty":36, "cigarette":36, "athletic":36, "operate":36, "couples":36, "bonds":36, "elderly":36, "reducing":36, "assembly":36, "exciting":36, "deaths":36, "lifetime":36, "engineers":36, "acts":36, "commerce":36, "ends":36, "expand":36, "tip":36, "thrown":36, "tied":36, "bars":36, "jazz":36, "steady":36, "asleep":36, "injuries":36, "weekly":36, "depending":36, "wire":36, "irish":36, "recognized":36, "vulnerable":36, "incredible":36, "concepts":36, "threats":36, "profits":36, "suffer":36, "ad":36, "communist":36, "suffering":36, "resort":36, "deck":36, "versus":36, "picking":36, "ministry":36, "routine":36, "ads":36, "killing":36, "manufacturing":36, "efficient":36, "grandfather":36, "managed":36, "performed":36, "chairs":36, "introduction":36, "earnings":36, "industries":36, "relation":36, "besides":36, "claimed":36, "preparing":36, "hitting":36, "tournament":36, "initiative":36, "relatives":36, "compete":36, "tension":36, "wisdom":36, "experiment":36, "mere":36, "beans":36, "muscles":36, "gradually":36, "rapid":36, "agricultural":36, "clouds":36, "leaned":36, "helpful":36, "achieved":36, "entrance":36, "wanting":36, "delivery":36, "profit":36, "proof":36, "vacation":36, "institutional":36, "engaged":36, "shaking":36, "smell":36, "pack":36, "define":36, "discover":36, "burden":36, "peak":36, "sessions":36, "agriculture":36, "tongue":36, "priority":36, "concert":36, "counter":36, "terrorist":36, "consumption":36, "god":36, "indicates":36, "comfort":36, "combine":36, "lands":36, "publicly":36, "duke":36, "diseases":36, "demonstrate":36, "proposed":36, "joy":36, "yours":36, "arrive":36, "affiliation":36, "tower":36, "searching":36, "sufficient":36, "advance":36, "boxes":36, "forgotten":36, "furthermore":36, "allies":36, "connected":36, "downtown":36, "gaze":36, "feed":36, "impression":36, "lemon":36, "privacy":36, "heaven":36, "brand":36, "approaches":36, "waters":36, "component":36, "tracks":36, "relative":36, "properties":36, "porch":36, "print":36, "express":36, "fix":36, "judges":36, "replaced":36, "spoken":36, "exception":36, "fig":36, "naked":36, "error":36, "establishment":36, "ill":36, "maintenance":36, "gifted":36, "offensive":36, "offense":36, "formed":36, "ships":36, "briefly":36, "ah":36, "dish":36, "compare":36, "unemployment":36, "ate":36, "caller":36, "controversial":36, "occurs":36, "glanced":36, "sought":36, "etc":36, "producing":36, "desperate":36, "processing":36, "corps":36, "orange":36, "copy":36, "imagination":36, "killer":36, "signal":36, "citizen":36, "guidelines":36, "dependent":36, "detailed":36, "fault":37, "shares":37, "passing":37, "towns":37, "painful":37, "functions":37, "bench":37, "scheduled":37, "curious":37, "discussions":37, "repeat":37, "funeral":37, "ties":37, "throwing":37, "tablespoons":37, "potatoes":37, "joke":37, "targets":37, "phenomenon":37, "clinic":37, "economics":37, "fate":37, "witness":37, "bet":37, "missed":37, "regulation":37, "jump":37, "efficiency":37, "opponents":37, "prize":37, "fence":37, "discrimination":37, "chamber":37, "intended":37, "consultant":37, "civilian":37, "divorce":37, "islands":37, "document":37, "earn":37, "dominant":37, "disabilities":37, "suggesting":37, "assess":37, "soup":37, "ordered":37, "falls":37, "neighbor":37, "dishes":37, "profession":37, "racing":37, "jumped":37, "subsequent":37, "directed":37, "successfully":37, "link":37, "tested":37, "flesh":37, "escape":37, "veterans":37, "difficulties":37, "joins":37, "modest":37, "brilliant":37, "twelve":37, "obtained":37, "sophisticated":37, "perceptions":37, "connections":37, "terrorists":37, "tennis":37, "profile":37, "platform":37, "differently":37, "drivers":37, "files":37, "badly":37, "tragedy":37, "analyses":37, "controversy":37, "flag":37, "heritage":37, "affair":37, "homeless":37, "causing":37, "filling":37, "cotton":37, "involve":37, "passengers":37, "burning":37, "represented":37, "eager":37, "depth":37, "implementation":37, "odds":37, "struck":37, "bears":37, "manufacturers":37, "settings":37, "powder":37, "clubs":37, "virus":37, "wings":37, "trials":37, "medium":37, "distinct":37, "wolf":37, "beating":37, "beings":37, "match":37, "emissions":37, "crash":37, "secondary":37, "emerged":37, "periods":37, "peers":37, "identification":37, "rely":37, "hungry":37, "humor":37, "membership":37, "romantic":37, "tight":37, "flour":37, "creates":37, "experienced":37, "counseling":37, "attached":37, "corporation":37, "selected":37, "spots":37, "volunteers":37, "stuck":37, "cents":37, "transfer":37, "temporary":37, "ignore":37, "moderate":37, "entering":37, "palestinians":37, "fame":37, "recession":37, "awards":37, "reaches":37, "sets":37, "gifts":37, "settle":37, "destroy":37, "assault":37, "mistakes":37, "legitimate":37, "summit":37, "whites":37, "gather":37, "cried":37, "wake":37, "absolute":37, "insisted":37, "opera":37, "mark":37, "wing":37, "handful":37, "grabbed":37, "consensus":37, "pursue":37, "rose":37, "directors":37, "presidents":37, "collective":37, "consciousness":37, "lightly":37, "fortune":37, "emotions":37, "designer":37, "empire":37, "sanctions":37, "flew":37, "accounting":37, "tissue":37, "fitness":37, "layer":37, "causes":37, "soccer":37, "liberty":37, "worried":37, "frequent":37, "raises":37, "inflation":37, "journalists":37, "random":37, "motivation":37, "cholesterol":37, "theories":37, "gains":37, "adolescents":37, "phrase":37, "colonial":37, "tomatoes":37, "consideration":37, "administrators":37, "instructions":37, "lovely":37, "payments":37, "airlines":37, "cabinet":37, "ambassador":37, "examination":37, "shadows":37, "focusing":37, "awful":37, "argued":37, "saving":37, "priest":37, "elite":37, "tale":37, "auto":37, "gang":37, "expressed":37, "sections":37, "sciences":37, "essay":37, "repeatedly":37, "adequate":37, "treaty":37, "sheriff":37, "marry":37, "whispered":37, "planned":37, "widespread":37, "grades":37, "wow":37, "prisoners":37, "surrounded":37, "chronicle":37, "effectiveness":37, "scope":37, "impressive":37, "viewed":37, "frequency":37, "lane":37, "trends":37, "fathers":37, "scientist":37, "collect":37, "mount":37, "experimental":37, "meals":37, "artistic":37, "orientation":37, "observed":37, "hurricane":37, "fee":37, "districts":37, "menu":37, "measured":37, "everyday":37, "cry":37, "traditions":37, "concerning":37, "ranch":37, "baking":37, "strike":37, "physically":37, "screaming":37, "designs":37, "cloud":37, "hispanic":37, "sounded":37, "argues":37, "laid":37, "contribution":37, "champion":37, "amounts":37, "gardens":37, "actress":37, "sheets":37, "telescope":37, "extend":37, "investments":37, "hung":37, "chef":37, "quarterback":37, "studied":37, "reflects":37, "hopes":37, "giants":37, "stages":37, "planes":37, "succeed":37, "divided":37, "nonetheless":37, "reforms":37, "monitor":37, "islam":37, "comedy":38, "ethical":38, "infection":38, "fired":38, "legacy":38, "reflection":38, "discourse":38, "lawn":38, "punishment":38, "salary":38, "neighborhoods":38, "supplies":38, "collected":38, "physician":38, "scored":38, "port":38, "assigned":38, "lifted":38, "owned":38, "lift":38, "prosecutors":38, "jeans":38, "formation":38, "garage":38, "satellite":38, "bond":38, "principal":38, "detective":38, "races":38, "tube":38, "abroad":38, "developments":38, "contracts":38, "witnesses":38, "opinions":38, "exact":38, "tips":38, "behavioral":38, "employers":38, "sacred":38, "visited":38, "buried":38, "concrete":38, "proved":38, "excited":38, "observations":38, "limitations":38, "retail":38, "intensity":38, "mess":38, "boom":38, "olive":38, "broader":38, "makeup":38, "frankly":38, "ranging":38, "founder":38, "monthly":38, "representation":38, "african-american":38, "voting":38, "producers":38, "bare":38, "indigenous":38, "guards":38, "bombing":38, "obtain":38, "surprisingly":38, "presentation":38, "painted":38, "composition":38, "penalty":38, "gentlemen":38, "eliminate":38, "symbol":38, "license":38, "combat":38, "presidency":38, "sodium":38, "locations":38, "advocates":38, "accused":38, "recipe":38, "complaints":38, "salmon":38, "trucks":38, "continuous":38, "physics":38, "remembers":38, "estimates":38, "exposed":38, "finance":38, "seed":38, "couch":38, "oldest":38, "onion":38, "generate":38, "dramatically":38, "administrative":38, "protecting":38, "inch":38, "acceptable":38, "limit":38, "viewers":38, "integration":38, "tail":38, "referred":38, "disagree":38, "boats":38, "root":38, "courage":38, "ceremony":38, "korean":38, "mode":38, "disorder":38, "rolled":38, "emerging":38, "rid":38, "concluded":38, "observation":38, "enterprise":38, "and/or":38, "northwest":38, "possibilities":38, "superior":38, "physicians":38, "carries":38, "christians":38, "boards":38, "anniversary":38, "horizon":38, "granted":38, "fiscal":38, "touched":38, "chronic":38, "beef":38, "ugly":38, "presents":38, "piano":38, "cabin":38, "prosecutor":38, "edges":38, "chips":38, "picks":38, "cousin":38, "respectively":38, "forests":38, "predict":38, "corporations":38, "jet":38, "magic":38, "representing":38, "hearts":38, "sake":38, "invasion":38, "hoped":38, "circuit":38, "depend":38, "evident":38, "texts":38, "faced":38, "rolling":38, "southwest":38, "extension":38, "estimated":38, "societies":38, "fears":38, "boundaries":38, "greatly":38, "dancing":38, "settled":38, "roman":38, "breathing":38, "fabric":38, "oak":38, "midnight":38, "outdoor":38, "stones":38, "muslims":38, "legislative":38, "hidden":38, "infrastructure":38, "conservatives":38, "occasion":38, "branches":38, "confusion":38, "nurses":38, "remind":38, "promised":38, "reliable":38, "logic":38, "conflicts":38, "string":38, "button":38, "cops":38, "suburban":38, "pop":38, "sixth":38, "utility":38, "objectives":38, "magazines":38, "figured":38, "trips":38, "observers":38, "tons":38, "pleased":38, "ski":38, "harder":38, "enhance":38, "styles":38, "dimensions":38, "refugees":38, "humanity":38, "net":38, "stake":38, "distinction":38, "conversations":38, "scenario":38, "clay":38, "shops":38, "shelter":38, "dear":38, "keys":38, "preserve":38, "wealthy":38, "revenues":38, "mainstream":38, "girlfriend":38, "integrity":38, "portrait":38, "favor":38, "poem":38, "ridge":38, "arrival":38, "hence":38, "camps":38, "genes":38, "publication":38, "permission":38, "classical":38, "parliament":38, "visits":38, "theoretical":38, "craft":38, "maintaining":38, "peoples":38, "architecture":38, "bitter":38, "mortgage":38, "suspect":38, "occasional":38, "scandal":38, "virtual":38, "disappeared":38, "springs":38, "aimed":38, "plates":38, "celebration":38, "convince":38, "deny":38, "radiation":38, "acceptance":38, "recommendations":38, "unexpected":38, "consistently":38, "sorts":38, "anchor":38, "swimming":38, "promising":38, "investigate":38, "adopted":38, "attended":38, "bell":38, "lifestyle":38, "feedback":38, "contest":38, "weird":38, "partnership":38, "candy":38, "engineer":38, "marked":38, "maximum":38, "controls":38, "plain":38, "ratio":38, "addressed":38, "referring":39, "bound":39, "pour":39, "transformation":39, "excitement":39, "communicate":39, "theatre":39, "declared":39, "essence":39, "shake":39, "circles":39, "meaningful":39, "shouted":39, "recording":39, "seemingly":39, "mall":39, "concentration":39, "topics":39, "fraud":39, "organized":39, "expenses":39, "blues":39, "pc":39, "restrictions":39, "earned":39, "ownership":39, "prosecution":39, "retired":39, "balls":39, "subtle":39, "boyfriend":39, "strip":39, "chemicals":39, "demanding":39, "emerge":39, "hiding":39, "expense":39, "acknowledge":39, "feeding":39, "diagnosis":39, "harbor":39, "narrative":39, "increases":39, "origin":39, "singer":39, "hers":39, "corruption":39, "pregnancy":39, "diabetes":39, "explosion":39, "hire":39, "checking":39, "tourists":39, "simultaneously":39, "coal":39, "interactions":39, "sequence":39, "handed":39, "commissioner":39, "theology":39, "attract":39, "owns":39, "prospect":39, "influenced":39, "mud":39, "scholarship":39, "slight":39, "structural":39, "counsel":39, "landing":39, "themes":39, "shower":39, "laughs":39, "conduct":39, "mechanical":39, "proposals":39, "grab":39, "bother":39, "commonly":39, "grateful":39, "minimum":39, "belong":39, "pie":39, "missile":39, "responsibilities":39, "celebrate":39, "summary":39, "shell":39, "buck":39, "encouraged":39, "tie":39, "rape":39, "purple":39, "tendency":39, "illustration":39, "activists":39, "uncomfortable":39, "drunk":39, "overwhelming":39, "slipped":39, "destroyed":39, "flavor":39, "gentle":39, "plot":39, "tent":39, "noon":39, "reveals":39, "vary":39, "inevitable":39, "threatening":39, "crying":39, "supports":39, "palace":39, "combined":39, "closet":39, "cop":39, "frozen":39, "pitch":39, "arrest":39, "forehead":39, "bake":39, "gathered":39, "forty":39, "invest":39, "tanks":39, "technological":39, "peaceful":39, "horrible":39, "friendship":39, "chip":39, "tiger":39, "flower":39, "conclusions":39, "enemies":39, "experiments":39, "wilderness":39, "farms":39, "recalled":39, "copies":39, "deadly":39, "warming":39, "approved":39, "employed":39, "attorneys":39, "enjoyed":39, "reads":39, "hits":39, "poet":39, "unions":39, "pine":39, "guilt":39, "promoting":39, "cloth":39, "wise":39, "loud":39, "invited":39, "lawsuit":39, "paused":39, "adventure":39, "southeast":39, "burn":39, "makers":39, "lap":39, "introduce":39, "guidance":39, "banking":39, "timing":39, "dropping":39, "habitat":39, "worlds":39, "gathering":39, "rhetoric":39, "scales":39, "frustration":39, "creatures":39, "fantasy":39, "legislature":39, "toys":39, "label":39, "versions":39, "amid":39, "produces":39, "failing":39, "stated":39, "payment":39, "journalist":39, "cattle":39, "engagement":39, "treatments":39, "adviser":39, "entitled":39, "outer":39, "listed":39, "shrugged":39, "airline":39, "secrets":39, "residential":39, "fed":39, "discussing":39, "sweat":39, "traditionally":39, "endless":39, "adoption":39, "mathematics":39, "fought":39, "collapse":39, "oral":39, "handsome":39, "hearings":39, "exclusive":39, "nomination":39, "explaining":39, "surrounding":39, "array":39, "climbed":39, "basement":39, "celebrity":39, "admission":39, "counting":39, "chart":39, "passenger":39, "climb":39, "creature":39, "shame":39, "excuse":39, "approached":39, "performances":39, "spaces":39, "refer":39, "blew":39, "voted":39, "farther":39, "tender":39, "rifle":39, "unity":39, "wider":39, "phones":39, "senators":39, "expecting":39, "globe":39, "bacteria":39, "harm":39, "oxygen":39, "pockets":39, "recommend":39, "historically":39, "sizes":39, "recorded":39, "wherever":39, "stopping":39, "folk":39, "admits":39, "grace":39, "chaos":39, "capture":39, "dynamic":39, "chin":39, "passes":39, "longtime":39, "expertise":39, "specialist":39, "resist":39, "choosing":39, "prescription":39, "counties":39, "stirring":39, "pope":39, "vegetable":39, "deserve":39, "evaluate":39, "huh":39, "shared":39, "profound":39, "acid":39, "electrical":39, "lip":39, "delicate":39, "hallway":39, "accuracy":39, "sunlight":39, "softly":39, "proportion":39, "hip":39, "worn":39, "thereby":39, "scheme":39, "closing":39, "invisible":39, "instructional":39, "habits":39, "genuine":39, "attending":39, "layers":39, "pays":39, "pile":39, "requiring":39, "habit":39, "pleasant":39, "breasts":39, "belly":39, "regulatory":39, "striking":39, "load":39, "arguing":40, "improvements":40, "crops":40, "gene":40, "campaigns":40, "critic":40, "forum":40, "intelligent":40, "representative":40, "rescue":40, "mask":40, "enthusiasm":40, "borders":40, "challenging":40, "horror":40, "compensation":40, "barriers":40, "convinced":40, "twins":40, "hopefully":40, "departments":40, "shuttle":40, "blow":40, "connect":40, "separation":40, "intention":40, "episode":40, "secure":40, "pause":40, "user":40, "precise":40, "filed":40, "twin":40, "wives":40, "evil":40, "commit":40, "swing":40, "blade":40, "listened":40, "containing":40, "inquiry":40, "segment":40, "lakes":40, "cheek":40, "describing":40, "saved":40, "allegations":40, "temperatures":40, "statistical":40, "van":40, "crossed":40, "happiness":40, "shapes":40, "diplomatic":40, "appeals":40, "occupation":40, "assumption":40, "colonel":40, "fires":40, "lieutenant":40, "approaching":40, "formula":40, "programming":40, "photography":40, "firmly":40, "assist":40, "insight":40, "tribal":40, "turkey":40, "delivered":40, "protected":40, "parental":40, "verbal":40, "coastal":40, "transmission":40, "villages":40, "threatened":40, "identical":40, "resulted":40, "leaning":40, "rush":40, "hypothesis":40, "taxpayers":40, "pipe":40, "woke":40, "dispute":40, "guitar":40, "monitoring":40, "heels":40, "copyright":40, "wished":40, "historian":40, "divine":40, "ranks":40, "considering":40, "grows":40, "elegant":40, "teens":40, "suffered":40, "pressures":40, "examining":40, "deals":40, "altogether":40, "arrangements":40, "greek":40, "participating":40, "gym":40, "responded":40, "generous":40, "disorders":40, "mechanism":40, "interior":40, "shade":40, "nuts":40, "angel":40, "brush":40, "pizza":40, "biology":40, "beds":40, "signals":40, "conscious":40, "alternatives":40, "judicial":40, "reliability":40, "practically":40, "underlying":40, "courtesy":40, "athlete":40, "adopt":40, "harsh":40, "pray":40, "diamond":40, "anxious":40, "hardware":40, "survivors":40, "princess":40, "sighed":40, "crown":40, "inspired":40, "musicians":40, "locked":40, "doorway":40, "residence":40, "tends":40, "casual":40, "script":40, "controlled":40, "civilians":40, "managing":40, "decent":40, "arrangement":40, "rail":40, "ridiculous":40, "drinks":40, "full-time":40, "mixed":40, "bottles":40, "meets":40, "surveys":40, "hired":40, "functional":40, "sooner":40, "caring":40, "charity":40, "participant":40, "rod":40, "silk":40, "productive":40, "quarters":40, "maps":40, "regarded":40, "civic":40, "screening":40, "shore":40, "racism":40, "interventions":40, "gravity":40, "abstract":40, "returns":40, "enters":40, "supporting":40, "rope":40, "bits":40, "garbage":40, "buyers":40, "servings":40, "adjustment":40, "performing":40, "drives":40, "reactions":40, "breathe":40, "emotion":40, "treasury":40, "dawn":40, "annually":40, "researcher":40, "grocery":40, "hunters":40, "wash":40, "revolutionary":40, "engines":40, "variable":40, "alleged":40, "quit":40, "hated":40, "inspiration":40, "identifying":40, "automatically":40, "validity":40, "rear":40, "nutrition":40, "declined":40, "lowest":40, "civilization":40, "hotels":40, "stretch":40, "afterward":40, "developmental":40, "myth":40, "delta":40, "restore":40, "responding":40, "appointment":40, "dough":40, "glance":40, "titles":40, "lobby":40, "dutch":40, "associations":40, "spirits":40, "rushing":40, "disappointed":40, "brick":40, "readily":40, "improved":40, "rhythm":40, "precious":40, "reluctant":40, "lately":40, "meters":40, "missiles":40, "agrees":40, "sharply":40, "conviction":40, "reminded":40, "stroke":40, "replacement":40, "contributing":40, "cast":40, "suggestions":40, "errors":40, "miracle":40, "audiences":40, "rings":40, "photographer":40, "receiver":40, "drag":40, "qualities":40, "overcome":40, "pork":40, "doctrine":40, "ecological":40, "jewelry":40, "abilities":40, "o'clock":40, "uniform":40, "outstanding":40, "seventh":40, "securities":40, "silly":40, "provision":40, "warned":40, "shrimp":40, "popularity":40, "tightly":40, "realistic":40, "providers":40, "covers":40, "currency":40, "addressing":40, "constructed":40, "toxic":40, "demanded":40, "ideology":40, "insist":40, "refers":40, "extended":40, "grief":40, "generated":40, "delay":40, "collaboration":40, "magnitude":40, "ban":40, "references":40, "ghost":40, "canvas":40, "disappear":40, "equity":40, "gesture":40, "masters":40, "shoe":40, "trick":40, "associates":40, "grip":40, "crop":40, "admitted":40, "wheels":40, "credibility":40, "protest":40, "artificial":40, "sexually":40, "tropical":40, "resident":40, "pound":40, "protective":40, "gasoline":40, "touching":40, "collecting":40, "pursuit":40, "publishing":40, "determination":40, "careers":40, "editors":40, "languages":40, "priorities":40, "suite":40, "forcing":40, "dealers":40, "province":40, "questionnaire":40, "sergeant":40, "breaks":40, "maker":40, "provisions":40, "relate":40, "prospects":40, "marks":40, "strict":40, "agreements":40, "cats":40, "controlling":40, "ideological":40, "battery":40, "instantly":40, "resolve":40, "northeast":40, "pole":40, "attempting":40, "purchase":40, "minorities":40, "grill":40, "mild":40, "watches":40, "officially":40, "incredibly":40, "interviewing":40, "incentives":40, "devil":40, "dignity":40, "pen":41, "suits":41, "relax":41, "lonely":41, "wages":41, "intent":41, "automatic":41, "opposed":41, "symbolic":41, "tunnel":41, "bullet":41, "quest":41, "insists":41, "visiting":41, "observe":41, "adjust":41, "gloves":41, "publisher":41, "census":41, "sin":41, "patience":41, "tactics":41, "examined":41, "corners":41, "stranger":41, "productivity":41, "leaf":41, "chopped":41, "links":41, "investigations":41, "talented":41, "barrel":41, "denied":41, "contributed":41, "objective":41, "separated":41, "mysterious":41, "steam":41, "exploration":41, "convicted":41, "israelis":41, "differ":41, "quote":41, "lighting":41, "competing":41, "issued":41, "regard":41, "lover":41, "fascinating":41, "cruise":41, "enable":41, "secular":41, "tomato":41, "farmer":41, "announcement":41, "rage":41, "uncertainty":41, "legend":41, "mill":41, "perceived":41, "onions":41, "progressive":41, "teenagers":41, "basket":41, "demonstrated":41, "demographic":41, "channels":41, "ta":41, "traveled":41, "expects":41, "cafe":41, "alongside":41, "dimension":41, "billions":41, "captured":41, "bases":41, "enjoying":41, "output":41, "teen":41, "deeper":41, "ass":41, "cheeks":41, "organizational":41, "spectrum":41, "ours":41, "trunk":41, "founded":41, "corridor":41, "blanket":41, "teaches":41, "nerve":41, "bucks":41, "historians":41, "aesthetic":41, "chase":41, "establishing":41, "bombs":41, "grain":41, "immune":41, "aluminum":41, "existed":41, "optimistic":41, "mortality":41, "terrific":41, "stem":41, "flexible":41, "creativity":41, "scary":41, "pastor":41, "sang":41, "crack":41, "bold":41, "revealing":41, "requirement":41, "thoroughly":41, "willingness":41, "whoever":41, "dried":41, "broadcast":41, "debates":41, "toy":41, "instances":41, "fork":41, "recover":41, "indication":41, "indicating":41, "competitors":41, "russians":41, "sells":41, "winds":41, "react":41, "pension":41, "suggestion":41, "advantages":41, "emphasize":41, "database":41, "negotiate":41, "initiatives":41, "shallow":41, "railroad":41, "homeland":41, "determining":41, "recipes":41, "wrapped":41, "self-esteem":41, "shorter":41, "catholics":41, "spectacular":41, "seniors":41, "eleven":41, "cute":41, "helicopter":41, "disability":41, "counselors":41, "potato":41, "complexity":41, "consists":41, "heroes":41, "fruits":41, "damn":41, "consequently":41, "arena":41, "pilots":41, "duties":41, "neutral":41, "crystal":41, "assuming":41, "sheer":41, "actively":41, "sheep":41, "medication":41, "encouraging":41, "steep":41, "intimate":41, "website":41, "courtroom":41, "smiles":41, "affects":41, "compromise":41, "perspectives":41, "bearing":41, "checked":41, "launched":41, "format":41, "bloody":41, "flood":41, "pro":41, "upstairs":41, "novels":41, "flights":41, "cave":41, "nonprofit":41, "iranian":41, "cooperative":41, "slices":41, "cuban":41, "consequence":41, "monster":41, "bankruptcy":41, "christianity":41, "instructor":41, "slept":41, "compelling":41, "accomplish":41, "exit":41, "employer":41, "bias":41, "cigarettes":41, "exotic":41, "burned":41, "parade":41, "elevator":41, "associate":41, "treating":41, "publications":41, "infant":41, "minimal":41, "waist":41, "households":41, "select":41, "pasta":41, "lifting":41, "derived":41, "pet":41, "spite":41, "accompanied":41, "understands":41, "influential":41, "occasions":41, "isolation":41, "genius":41, "gospel":41, "rivers":41, "tablespoon":41, "lined":41, "slid":41, "ease":41, "concentrate":41, "thanksgiving":41, "anonymous":41, "thumb":41, "complained":41, "dynamics":41, "focuses":41, "alarm":41, "ambitious":41, "investigating":41, "defending":41, "hostile":41, "short-term":41, "kick":41, "departure":41, "draws":41, "wage":41, "heights":41, "assumptions":41, "variation":41, "skirt":41, "surgeon":41, "panic":41, "winners":41, "headlines":41, "mechanisms":41, "missions":41, "consent":41, "reception":41, "speakers":41, "eighth":41, "innovation":41, "venture":41, "safely":41, "checks":41, "trash":41, "aim":41, "persian":41, "flexibility":41, "innovative":41, "romance":41, "correctly":41, "implement":41, "teenage":41, "greens":41, "sexy":41, "placing":41, "claiming":41, "outlook":41, "correlation":41, "marines":41, "accessible":41, "counselor":41, "momentum":41, "complain":41, "uh":41, "forgot":41, "hockey":41, "wears":41, "visitor":41, "permit":41, "upset":41, "opponent":41, "signature":41, "metropolitan":41, "uncertain":41, "attendance":41, "vertical":41, "pressed":41, "launch":41, "fixed":41, "environments":41, "grams":41, "reportedly":41, "terrain":41, "tragic":41, "obligation":41, "loving":41, "impressed":41, "intentions":41, "medal":41, "cookies":41, "barn":41, "promotion":41, "fortunately":41, "featuring":41, "lawmakers":41, "assignment":41, "literacy":41, "catching":41, "glory":41, "cocaine":41, "stiff":41, "measuring":41, "realm":41, "bow":41, "handling":41, "custody":41, "psychologist":41, "domain":41, "patch":41, "collections":41, "applying":41, "lightning":42, "pond":42, "presumably":42, "coaching":42, "syndrome":42, "classrooms":42, "germans":42, "pitcher":42, "colorful":42, "reflected":42, "likelihood":42, "appreciation":42, "appointed":42, "slave":42, "floors":42, "reserve":42, "worldwide":42, "disabled":42, "strangers":42, "complaint":42, "packed":42, "mobile":42, "well-being":42, "skiing":42, "drops":42, "carpet":42, "justify":42, "professors":42, "contained":42, "sustainable":42, "implemented":42, "freshman":42, "stolen":42, "tours":42, "unprecedented":42, "exploring":42, "wrist":42, "tourist":42, "tales":42, "vessels":42, "bands":42, "wins":42, "slaves":42, "informal":42, "refuse":42, "engaging":42, "cab":42, "fluid":42, "portfolio":42, "envelope":42, "nightmare":42, "partially":42, "galaxy":42, "theological":42, "inn":42, "laser":42, "insects":42, "tribe":42, "instant":42, "wheat":42, "likewise":42, "spreading":42, "breeze":42, "tapes":42, "inventory":42, "pickup":42, "awake":42, "possession":42, "atop":42, "astronomers":42, "documentary":42, "measurement":42, "deadline":42, "exclusively":42, "tires":42, "shelf":42, "shy":42, "dealer":42, "alike":42, "cited":42, "rational":42, "backyard":42, "barrier":42, "consulting":42, "conspiracy":42, "youngest":42, "slip":42, "preliminary":42, "mouse":42, "socially":42, "sidewalk":42, "mandate":42, "virtue":42, "grabs":42, "confirm":42, "necessity":42, "aggression":42, "aging":42, "ruling":42, "coordinator":42, "battles":42, "jumping":42, "trauma":42, "blank":42, "midst":42, "specialists":42, "halfway":42, "spends":42, "mentally":42, "eve":42, "compliance":42, "assumed":42, "rode":42, "sentences":42, "purse":42, "reservations":42, "gross":42, "economies":42, "lists":42, "sunset":42, "supportive":42, "detect":42, "hips":42, "costly":42, "curve":42, "cluster":42, "someday":42, "temple":42, "drawings":42, "studios":42, "orchestra":42, "volunteer":42, "planets":42, "sculpture":42, "log":42, "stimulus":42, "disturbing":42, "angels":42, "drank":42, "sink":42, "blowing":42, "liability":42, "partial":42, "behalf":42, "withdrawal":42, "manufacturer":42, "desperately":42, "forgive":42, "prints":42, "sword":42, "economist":42, "organize":42, "improving":42, "spray":42, "equality":42, "bid":42, "lens":42, "distributed":42, "gained":42, "nursing":42, "dates":42, "custom":42, "toilet":42, "peer":42, "verdict":42, "slavery":42, "panels":42, "ending":42, "journalism":42, "eligible":42, "preference":42, "surveillance":42, "fantastic":42, "kiss":42, "bath":42, "allegedly":42, "accepting":42, "snapped":42, "gates":42, "destination":42, "columnist":42, "ignored":42, "accountability":42, "waved":42, "refrigerator":42, "museums":42, "architect":42, "videos":42, "apples":42, "activist":42, "earthquake":42, "cow":42, "workshop":42, "priests":42, "confirmed":42, "announcer":42, "crowds":42, "repeated":42, "faint":42, "jets":42, "unintelligible":42, "openly":42, "valid":42, "debut":42, "painter":42, "dig":42, "incentive":42, "mining":42, "logical":42, "companion":42, "symbols":42, "designers":42, "violation":42, "acquisition":42, "workplace":42, "autonomy":42, "jurors":42, "ha":42, "clerk":42, "noting":42, "excessive":42, "consecutive":42, "castle":42, "incidents":42, "well-known":42, "citizenship":42, "steal":42, "disk":42, "input":42, "sum":42, "integrated":42, "unfair":42, "accommodate":42, "capabilities":42, "survived":42, "operator":42, "embarrassed":42, "blond":42, "comparable":42, "characterized":42, "airplane":42, "tourism":42, "particles":42, "considers":42, "sole":42, "availability":42, "fever":42, "pit":42, "protests":42, "closest":42, "abandoned":42, "requests":42, "meantime":42, "legally":42, "debris":42, "analyze":42, "remarks":42, "forming":42, "declaration":42, "loaded":42, "reserves":42, "loyalty":42, "sweeping":42, "imagined":42, "codes":42, "sensitivity":42, "variance":42, "seeks":42, "chiefs":42, "migration":42, "conducting":42, "defeat":42, "t-shirt":42, "maintained":42, "philosophical":42, "dressing":42, "two-thirds":42, "hunger":42, "harassment":42, "adolescent":42, "gentleman":42, "warmth":42, "cubs":42, "dose":42, "jokes":42, "informed":42, "variations":42, "suspicious":42, "vitamin":42, "delicious":42, "reviews":42, "eagle":42, "rehabilitation":42, "slope":42, "placement":42, "holidays":42, "europeans":42, "recommended":42, "equation":42, "deciding":42, "economists":42, "divisions":42, "colleague":42, "origins":42, "pursuing":42, "kit":42, "poems":42, "overnight":42, "sends":42, "paths":42, "embrace":42, "scholar":42, "remembering":42, "vinegar":42, "yield":42, "spoon":42, "intact":42, "trapped":42, "devastating":42, "isolated":42, "supposedly":42, "acquire":42, "defining":42, "violations":42, "graduates":42, "accomplished":42, "switch":42, "practicing":42, "compound":42, "feminist":42, "solely":42, "cheaper":42, "high-tech":42, "scent":42, "hears":42, "veteran":42, "demonstration":42, "rumors":42, "brave":42, "proceed":42, "comparing":42, "stance":42, "fighters":42, "inspection":42, "eaten":42, "alley":42, "recycling":42, "shouting":42, "tide":42, "contents":42, "equivalent":42, "stares":42, "retain":42, "curiosity":42, "depressed":42, "balanced":42, "neighboring":42, "happily":42, "flames":42, "skull":42, "continent":42, "sexuality":42, "federation":42, "criminals":42, "honestly":42, "hint":42, "graduation":42, "immigrant":42, "defendant":42, "estimate":42, "stepping":42, "embassy":42, "removal":42, "coup":42, "confused":42, "charter":42, "beloved":42, "counterparts":42, "publicity":42, "sympathy":42, "toss":43, "lion":43, "explicit":43, "inevitably":43, "liquid":43, "backs":43, "nasty":43, "politician":43, "weekends":43, "homework":43, "voluntary":43, "marketplace":43, "ballot":43, "pump":43, "margin":43, "soap":43, "transformed":43, "zones":43, "resulting":43, "acquired":43, "nominee":43, "experiencing":43, "snake":43, "magnetic":43, "marijuana":43, "considerably":43, "toll":43, "shakes":43, "brutal":43, "municipal":43, "equipped":43, "emotionally":43, "tended":43, "fails":43, "canal":43, "distinctive":43, "guarantee":43, "rocket":43, "diagnosed":43, "pairs":43, "deliberately":43, "contacts":43, "tire":43, "investing":43, "achieving":43, "suitable":43, "consistency":43, "elaborate":43, "fleet":43, "strictly":43, "formerly":43, "substantially":43, "sovereignty":43, "reflecting":43, "beaten":43, "encounter":43, "competence":43, "financing":43, "boring":43, "sunny":43, "rank":43, "rang":43, "bulk":43, "norms":43, "arranged":43, "prep":43, "impacts":43, "removing":43, "participated":43, "impose":43, "elbow":43, "suburbs":43, "alter":43, "empirical":43, "liberals":43, "interviewed":43, "rubber":43, "fierce":43, "sustain":43, "toes":43, "grant":43, "capability":43, "inherent":43, "rows":43, "gaining":43, "travelers":43, "confront":43, "routinely":43, "vessel":43, "container":43, "assessments":43, "advocacy":43, "favorable":43, "driveway":43, "accent":43, "weakness":43, "privilege":43, "strongest":43, "interactive":43, "stunning":43, "facilitate":43, "chemistry":43, "practitioners":43, "finishing":43, "cage":43, "invite":43, "bull":43, "crowded":43, "regression":43, "rack":43, "kingdom":43, "importantly":43, "strain":43, "fragile":43, "transport":43, "chill":43, "arriving":43, "gambling":43, "till":43, "grave":43, "arabs":43, "conclude":43, "horn":43, "bat":43, "overseas":43, "liberation":43, "trails":43, "sticking":43, "vaccine":43, "freshly":43, "metaphor":43, "reminds":43, "varieties":43, "irony":43, "dangers":43, "teenager":43, "zero":43, "bite":43, "earl":43, "awkward":43, "organizing":43, "pulse":43, "laying":43, "attacked":43, "economically":43, "translation":43, "yelled":43, "completion":43, "fool":43, "throws":43, "arrange":43, "exercises":43, "ancestors":43, "stove":43, "packages":43, "trailer":43, "avoiding":43, "planted":43, "towel":43, "old-fashioned":43, "privately":43, "tensions":43, "bean":43, "beneficial":43, "geography":43, "developers":43, "fog":43, "twentieth":43, "tolerance":43, "transit":43, "rockets":43, "farming":43, "wagon":43, "unhappy":43, "accurately":43, "beard":43, "fighter":43, "monetary":43, "dense":43, "occupied":43, "systematic":43, "affordable":43, "distress":43, "oppose":43, "transform":43, "workout":43, "loyal":43, "speculation":43, "straw":43, "stare":43, "guides":43, "plaza":43, "dedicated":43, "attacking":43, "sandwich":43, "electronics":43, "administrator":43, "imposed":43, "freely":43, "spinning":43, "cleaning":43, "hook":43, "foster":43, "torn":43, "naval":43, "neat":43, "invitation":43, "proposition":43, "one-third":43, "authentic":43, "labels":43, "traits":43, "kissed":43, "purchased":43, "pretend":43, "promises":43, "risky":43, "density":43, "aide":43, "vocal":43, "trout":43, "shelves":43, "downs":43, "nationwide":43, "distinguish":43, "nest":43, "franchise":43, "fur":43, "orbit":43, "radar":43, "fist":43, "suspicion":43, "alpha":43, "patrol":43, "subsequently":43, "upcoming":43, "scoring":43, "dilemma":43, "tenure":43, "shaped":43, "exhibit":43, "tribes":43, "steadily":43, "positively":43, "skilled":43, "vanilla":43, "capitalism":43, "carrier":43, "bullets":43, "expanding":43, "fake":43, "shorts":43, "aides":43, "pills":43, "ninth":43, "flowing":43, "grin":43, "pad":43, "dominated":43, "troubled":43, "playoffs":43, "warfare":43, "affecting":43, "perceive":43, "intensive":43, "liver":43, "basin":43, "sampling":43, "flash":43, "attracted":43, "preventing":43, "parenting":43, "conversion":43, "cart":43, "inmates":43, "hangs":43, "surfaces":43, "refuge":43, "middle-class":43, "dating":43, "execution":43, "legendary":43, "frontier":43, "terribly":43, "mate":43, "failures":43, "construct":43, "collar":43, "awarded":43, "silently":43, "ritual":43, "skeptical":43, "casualties":43, "adapted":43, "affirmative":43, "explicitly":43, "severely":43, "rounds":43, "sofa":43, "loop":43, "constraints":43, "masses":43, "jungle":43, "hammer":43, "electoral":43, "youths":43, "scrutiny":43, "comparisons":43, "belonged":43, "laundry":43, "duck":43, "chains":43, "expressions":43, "grandchildren":43, "grandparents":43, "ladder":43, "ironically":43, "constitute":43, "rejected":43, "socks":43, "ankle":43, "knock":43, "grove":43, "stays":43, "ignoring":43, "factories":43, "resting":43, "conscience":43, "committees":43, "glow":43, "qualify":43, "inappropriate":43, "jaw":43, "skillet":43, "landed":43, "fatal":43, "cargo":43, "observer":43, "restoration":43, "lacking":43, "wounds":43, "turkish":43, "shiny":43, "viable":43, "acute":43, "inadequate":43, "autumn":43, "editorial":43, "preferences":43, "nails":43, "believing":43, "resolved":43, "cope":43, "installed":43, "bizarre":43, "statue":43, "slide":43, "statistically":43, "damaged":43, "dumb":43, "surge":43, "kidding":43, "lock":43, "cemetery":43, "clever":43, "applause":43, "recognizing":43, "injured":43, "lovers":43, "colony":43, "digging":43, "lungs":43, "earning":43, "decides":43, "gods":43, "obstacles":43, "brass":43, "unfortunate":43, "psychologists":43, "lawsuits":43, "disappointment":43, "rent":43, "salaries":43, "tougher":43, "cruel":43, "attraction":43, "strengthen":43, "routes":43, "imperial":43, "lecture":43, "australian":43, "tracking":43, "shells":43, "accidents":43, "calm":43, "regulators":43, "advisory":43, "seldom":43, "rebels":43, "supervisor":43, "bride":43, "fraction":44, "advisers":44, "grandma":44, "wireless":44, "urged":44, "arise":44, "texture":44, "puzzle":44, "galaxies":44, "proven":44, "journals":44, "egyptian":44, "speeches":44, "charming":44, "smelled":44, "vacuum":44, "insights":44, "dealt":44, "measurements":44, "countless":44, "unclear":44, "graphics":44, "belongs":44, "aboard":44, "preservation":44, "observing":44, "prisoner":44, "therapist":44, "hydrogen":44, "alien":44, "plains":44, "assure":44, "cord":44, "bronze":44, "influences":44, "parish":44, "threaten":44, "copper":44, "sometime":44, "nineteenth":44, "inability":44, "scattered":44, "faithful":44, "bent":44, "boost":44, "compassion":44, "symphony":44, "medieval":44, "gorgeous":44, "bishop":44, "tune":44, "deserves":44, "dusty":44, "stole":44, "sensation":44, "rises":44, "sectors":44, "operates":44, "considerations":44, "ounces":44, "goodness":44, "brains":44, "inclusion":44, "reward":44, "maintains":44, "strengths":44, "conceptual":44, "aisle":44, "imagery":44, "retreat":44, "reasoning":44, "confrontation":44, "bass":44, "motors":44, "indicators":44, "helmet":44, "graph":44, "owe":44, "vague":44, "pose":44, "abruptly":44, "paradise":44, "backward":44, "marriages":44, "advances":44, "approve":44, "lamp":44, "reconstruction":44, "transferred":44, "fatigue":44, "click":44, "arrives":44, "addiction":44, "appearances":44, "threshold":44, "prosperity":44, "booth":44, "blown":44, "rolls":44, "doubts":44, "hopeful":44, "buses":44, "realizing":44, "customs":44, "astronomy":44, "bulls":44, "rim":44, "poles":44, "poorly":44, "possess":44, "humanitarian":44, "biblical":44, "promoted":44, "roses":44, "sour":44, "hiking":44, "passionate":44, "crude":44, "harmony":44, "curtain":44, "wound":44, "kicked":44, "twenty-five":44, "part-time":44, "varying":44, "shirts":44, "notably":44, "ballet":44, "sacrifice":44, "pillow":44, "conferences":44, "dull":44, "utilities":44, "judgments":44, "occurring":44, "bonus":44, "rejection":44, "morality":44, "evolutionary":44, "broncos":44, "dessert":44, "notable":44, "persistent":44, "replacing":44, "blast":44, "minimize":44, "beast":44, "hunt":44, "lions":44, "geographic":44, "mandatory":44, "receives":44, "playoff":44, "struggled":44, "protocol":44, "litigation":44, "nationally":44, "funded":44, "tray":44, "vocabulary":44, "prayers":44, "scouts":44, "earliest":44, "satisfy":44, "acknowledged":44, "vintage":44, "knocked":44, "infections":44, "waving":44, "streak":44, "disputes":44, "climbing":44, "subsidies":44, "retire":44, "hosts":44, "wan":44, "organ":44, "streams":44, "worthy":44, "intend":44, "weigh":44, "juvenile":44, "founding":44, "husbands":44, "satisfied":44, "loses":44, "clue":44, "steering":44, "mushrooms":44, "columns":44, "administered":44, "pencil":44, "butt":44, "junk":44, "convenience":44, "pig":44, "coping":44, "artifacts":44, "calendar":44, "reasonably":44, "assessing":44, "doll":44, "ruled":44, "fits":44, "elders":44, "applies":44, "implies":44, "interpret":44, "backed":44, "realities":44, "renaissance":44, "hazardous":44, "broth":44, "mature":44, "surgical":44, "greenhouse":44, "colored":44, "purely":44, "screens":44, "auction":44, "fucking":44, "underground":44, "dare":44, "taliban":44, "lone":44, "strikes":44, "inform":44, "testify":44, "specialized":44, "duration":44, "lesser":44, "mansion":44, "wheelchair":44, "yelling":44, "tops":44, "tribute":44, "cans":44, "catches":44, "devoted":44, "challenged":44, "essays":44, "beam":44, "modeling":44, "seated":44, "rookie":44, "motivated":44, "harvest":44, "herbs":44, "linear":44, "enterprises":44, "soda":44, "downstairs":44, "mercy":44, "writings":44, "composed":44, "glimpse":44, "repair":44, "legislators":44, "sixteen":44, "reminder":44, "skinny":44, "culturally":44, "souls":44, "palms":44, "tubes":44, "baseline":44, "clarity":44, "broadcasting":44, "remarkably":44, "ethnicity":44, "emperor":44, "kicking":44, "protesters":44, "sprinkle":44, "registration":44, "appearing":44, "warn":44, "healing":44, "locate":44, "problematic":44, "marble":44, "squad":44, "temporarily":44, "statute":44, "operators":44, "desirable":44, "explanations":44, "prospective":44, "whale":44, "spouse":44, "lime":44, "flu":44, "criticized":44, "pushes":44, "bicycle":44, "timber":44, "fancy":44, "proceedings":44, "notebook":44, "boot":44, "ministers":44, "aliens":44, "saints":44, "uh-huh":44, "spine":44, "healthcare":44, "revelation":44, "probability":44, "damp":44, "undergraduate":44, "explosive":44, "suspension":44, "triumph":44, "spatial":44, "feared":44, "viewer":44, "lance":44, "lasted":44, "evolved":44, "voter":44, "testified":44, "moisture":44, "cowboys":44, "lid":44, "audio":44, "grants":44, "epidemic":44, "lung":44, "regimes":44, "incorporate":44, "assessed":44, "closes":44, "extending":44, "championships":44, "teammates":44, "champagne":44, "architectural":44, "eyebrows":44, "exports":44, "re":44, "cares":44, "workshops":44, "dies":44, "shortage":44, "comic":44, "cows":44, "denial":44, "endangered":44, "drawer":44, "finest":44, "stretching":44, "praise":44, "sentiment":44, "abandon":44, "bishops":44, "warriors":44, "wrap":44, "inspectors":44, "heating":44, "ego":44, "portable":44, "mommy":44, "eagles":44, "cautious":44, "locker":44, "obligations":44, "wounded":44, "rental":44, "diary":44, "dominate":44, "expanded":44, "asset":44, "genre":44, "psychiatric":44, "matching":44, "demonstrates":44, "install":44, "identities":44, "eighteen":44, "bells":44, "attempted":44, "automobile":44, "drain":44, "trap":44, "grinned":44, "siblings":44, "urgent":44, "confirmation":44, "cottage":44, "sponsored":44, "operated":44, "translator":44, "sympathetic":44, "illusion":44, "crews":44, "rally":44, "installation":44, "permitted":44, "mobility":44, "specialty":44, "murders":44, "orthodox":44, "swim":44, "bubble":44, "descriptions":45, "riders":45, "revenge":45, "catalog":45, "limbs":45, "predicted":45, "monument":45, "zoo":45, "cure":45, "spin":45, "illustrate":45, "counts":45, "counted":45, "clinics":45, "reject":45, "ink":45, "precision":45, "separately":45, "fried":45, "instance":45, "hats":45, "withdraw":45, "nods":45, "fortunate":45, "theaters":45, "steak":45, "divide":45, "needle":45, "finely":45, "employ":45, "presenting":45, "solo":45, "trainer":45, "businessman":45, "torture":45, "silicon":45, "announce":45, "attributed":45, "supervision":45, "refugee":45, "outfit":45, "flame":45, "reservation":45, "bikes":45, "followers":45, "enforce":45, "buttons":45, "furious":45, "imports":45, "stretched":45, "dresses":45, "swear":45, "tag":45, "demonstrations":45, "peaks":45, "prey":45, "namely":45, "wool":45, "blessing":45, "clues":45, "contexts":45, "evenly":45, "conception":45, "urging":45, "encountered":45, "rat":45, "pots":45, "poured":45, "suspended":45, "persuade":45, "convenient":45, "knocking":45, "widow":45, "sweater":45, "polite":45, "profitable":45, "accordingly":45, "hurts":45, "organisms":45, "mines":45, "educate":45, "optimism":45, "ranked":45, "pouring":45, "stored":45, "fourteen":45, "graphic":45, "rushed":45, "pistol":45, "ecosystem":45, "optional":45, "incorporated":45, "rotation":45, "frightening":45, "trigger":45, "rangers":45, "financially":45, "bleeding":45, "unnecessary":45, "lean":45, "calculated":45, "processor":45, "redskins":45, "chorus":45, "papa":45, "hometown":45, "overhead":45, "dome":45, "slim":45, "circulation":45, "calcium":45, "appealing":45, "payroll":45, "interact":45, "diameter":45, "doc":45, "hurting":45, "favorites":45, "abundance":45, "contractors":45, "concentrations":45, "independently":45, "substances":45, "locals":45, "optical":45, "propose":45, "convincing":45, "destiny":45, "additionally":45, "stakes":45, "countryside":45, "luxury":45, "touchdown":45, "treasure":45, "critique":45, "embarrassing":45, "innocence":45, "murdered":45, "handled":45, "investor":45, "batteries":45, "dioxide":45, "dragon":45, "submit":45, "fundamentally":45, "grim":45, "diagram":45, "inaudible":45, "risen":45, "celebrating":45, "socialist":45, "advocate":45, "excellence":45, "swinging":45, "theirs":45, "atomic":45, "invested":45, "swung":45, "apologize":45, "rocky":45, "shocking":45, "commentary":45, "absent":45, "sadness":45, "patent":45, "hiring":45, "displayed":45, "instrumental":45, "fishermen":45, "behave":45, "jar":45, "despair":45, "shifted":45, "carriers":45, "scout":45, "posts":45, "rap":45, "loudly":45, "saudi":45, "disciplines":45, "nazi":45, "encourages":45, "export":45, "salvation":45, "nationalism":45, "squeeze":45, "ma'am":45, "pools":45, "illustrated":45, "aloud":45, "disposal":45, "retailers":45, "ribs":45, "expectation":45, "notions":45, "histories":45, "complaining":45, "apartments":45, "dual":45, "peppers":45, "caution":45, "affection":45, "sixty":45, "storms":45, "listeners":45, "parameters":45, "health-care":45, "charts":45, "supper":45, "rabbit":45, "recommends":45, "accountable":45, "wildly":45, "emergence":45, "settlements":45, "complications":45, "instructors":45, "troubles":45, "semester":45, "hood":45, "printed":45, "saturated":45, "buddy":45, "legitimacy":45, "trillion":45, "breeding":45, "expedition":45, "theft":45, "jurisdiction":45, "senses":45, "boxing":45, "caribbean":45, "continually":45, "formally":45, "chasing":45, "investigator":45, "cowboy":45, "cookie":45, "disclosure":45, "foundations":45, "charging":45, "clusters":45, "reverend":45, "vivid":45, "deemed":45, "predictions":45, "facial":45, "hostages":45, "utterly":45, "judging":45, "sticks":45, "prairie":45, "ecology":45, "passive":45, "donations":45, "magical":45, "reduces":45, "bush":45, "ally":45, "judiciary":45, "fabulous":45, "rigid":45, "dependence":45, "stealing":45, "candles":45, "justices":45, "assignments":45, "lit":45, "conventions":45, "paradigm":45, "footage":45, "suspects":45, "delegates":45, "dam":45, "diplomacy":45, "communism":45, "hierarchy":45, "firing":45, "toe":45, "charm":45, "gravel":45, "delight":45, "thirteen":45, "backgrounds":45, "shades":45, "starters":45, "filter":45, "taxi":45, "robot":45, "mechanics":45, "reconciliation":45, "performers":45, "dancers":45, "victories":45, "fuck":45, "hostage":45, "allied":45, "containers":45, "hunter":45, "enthusiastic":45, "motives":45, "ranking":45, "transactions":45, "soy":45, "rated":45, "swiss":45, "delivering":45, "portions":45, "tumor":45, "manual":45, "nearest":45, "seal":45, "undoubtedly":45, "inspector":45, "polish":45, "sphere":45, "budgets":45, "magnificent":45, "hatred":45, "norm":45, "excess":45, "classified":45, "targeted":45, "donors":45, "leans":45, "dock":45, "incidence":45, "meanings":45, "designing":45, "rebuild":45, "mentor":45, "cooling":45, "eliminating":45, "stack":45, "cartoon":45, "infants":45, "ironic":45, "useless":45, "borrow":45, "aftermath":45, "tossed":45, "rewards":45, "afterwards":45, "shipping":45, "peculiar":45, "wolves":45, "shocked":45, "peninsula":45, "nitrogen":45, "solved":45, "contrary":45, "converted":45, "descent":45, "trace":45, "spotlight":45, "recovered":45, "eternal":45, "biography":45, "bowls":45, "casino":45, "oversight":45, "emerges":45, "collaborative":45, "tuition":45, "antique":45, "prediction":45, "ashamed":45, "pipeline":45, "mirrors":45, "portraits":45, "refusing":45, "breakdown":45, "kilometers":45, "implementing":45, "regulate":45, "citing":45, "bitch":45, "heroin":45, "recognizes":45, "organs":45, "twist":45, "landmark":45, "exceptions":45, "cult":45, "flags":45, "bucket":45, "worship":45, "subjective":45, "recommendation":45, "floating":45, "bureaucracy":45, "eliminated":45, "alert":45, "convey":45, "sadly":45, "recipients":45, "acknowledges":45, "anytime":45, "spokeswoman":45, "episodes":45, "buyer":45, "lyrics":45, "all-star":45, "grid":45, "underneath":45, "lighter":46, "preferred":46, "rays":46, "warrior":46, "quantum":46, "learners":46, "exam":46, "efficacy":46, "longest":46, "compost":46, "locally":46, "noble":46, "thoughtful":46, "coke":46, "distinguished":46, "email":46, "tigers":46, "sigh":46, "rabbi":46, "aged":46, "rooted":46, "servants":46, "enrollment":46, "extends":46, "revival":46, "crust":46, "correlations":46, "commanders":46, "exceptional":46, "respective":46, "foreigners":46, "frightened":46, "provider":46, "deficits":46, "crossing":46, "reproductive":46, "documented":46, "foolish":46, "satisfying":46, "completing":46, "poster":46, "governors":46, "newest":46, "spare":46, "register":46, "invention":46, "principals":46, "cleared":46, "talents":46, "unbelievable":46, "inexpensive":46, "graves":46, "shareholders":46, "inclined":46, "lowered":46, "unconscious":46, "shifts":46, "cracks":46, "tin":46, "musician":46, "declining":46, "prevalence":46, "brands":46, "medications":46, "consultants":46, "pill":46, "lacks":46, "definitions":46, "drought":46, "warehouse":46, "immense":46, "fade":46, "choir":46, "starter":46, "bacon":46, "ward":46, "integral":46, "competent":46, "costume":46, "cocktail":46, "cooperate":46, "neatly":46, "slice":46, "videotape":46, "religions":46, "cane":46, "smallest":46, "appetite":46, "intimacy":46, "bargain":46, "shotgun":46, "viewing":46, "darling":46, "governmental":46, "publish":46, "broker":46, "trains":46, "governing":46, "ozone":46, "worrying":46, "absorb":46, "harmful":46, "phenomena":46, "superintendent":46, "clause":46, "quoted":46, "cycles":46, "consultation":46, "aviation":46, "discount":46, "miserable":46, "adapt":46, "lacked":46, "adaptation":46, "blocking":46, "mustard":46, "dairy":46, "swept":46, "rats":46, "cliff":46, "detection":46, "carrots":46, "admire":46, "expressing":46, "fulfill":46, "towers":46, "interpreted":46, "permanently":46, "realization":46, "gestures":46, "territories":46, "liquor":46, "cathedral":46, "celebrities":46, "propaganda":46, "subway":46, "translated":46, "vietnamese":46, "requested":46, "posture":46, "libraries":46, "credits":46, "warnings":46, "simmer":46, "molecules":46, "predictable":46, "icon":46, "bored":46, "spa":46, "matched":46, "bridges":46, "parked":46, "connecting":46, "certainty":46, "visually":46, "moms":46, "motive":46, "salon":46, "transparent":46, "parallel":46, "homeowners":46, "entertaining":46, "adjusted":46, "waking":46, "plea":46, "vendors":46, "nutrients":46, "caps":46, "freeze":46, "titled":46, "credible":46, "archives":46, "collectors":46, "tens":46, "freezing":46, "static":46, "homicide":46, "outrage":46, "readings":46, "illustrates":46, "correspondence":46, "ensemble":46, "sage":46, "amateur":46, "commitments":46, "introducing":46, "tub":46, "correction":46, "supermarket":46, "feathers":46, "fragments":46, "continental":46, "wallet":46, "occupational":46, "motel":46, "wires":46, "entrepreneurs":46, "damages":46, "chapel":46, "skies":46, "flies":46, "muttered":46, "disc":46, "irrelevant":46, "qualified":46, "entity":46, "darker":46, "testament":46, "singers":46, "evaluating":46, "thorough":46, "lasting":46, "feminine":46, "kings":46, "observatory":46, "doubled":46, "praying":46, "cardinals":46, "bend":46, "large-scale":46, "reductions":46, "screamed":46, "standardized":46, "shifting":46, "manages":46, "kills":46, "wipe":46, "corrupt":46, "globalization":46, "congregation":46, "relating":46, "pioneer":46, "translate":46, "enrolled":46, "governance":46, "unfamiliar":46, "beaches":46, "comparative":46, "destructive":46, "limb":46, "exhausted":46, "imaging":46, "lodge":46, "offenders":46, "fare":46, "herb":46, "glove":46, "heal":46, "indoor":46, "co-host":46, "answering":46, "punch":46, "dismissed":46, "publishers":46, "horizontal":46, "interpretations":46, "sentenced":46, "impulse":46, "volumes":46, "strings":46, "intake":46, "memo":46, "masks":46, "labs":46, "ignorance":46, "recreational":46, "qualitative":46, "spy":46, "individually":46, "low-income":46, "erosion":46, "elephant":46, "prompted":46, "cousins":46, "cellular":46, "chili":46, "pin":46, "chickens":46, "technically":46, "emphasizes":46, "confusing":46, "wines":46, "achievements":46, "succeeded":46, "majors":46, "backup":46, "awesome":46, "frowned":46, "pressing":46, "questioning":46, "destroying":46, "slipping":46, "sufficiently":46, "accounted":46, "segments":46, "entries":46, "shining":46, "meter":46, "memorable":46, "mice":46, "fuels":46, "robust":46, "abused":46, "primitive":46, "interpreter":46, "footsteps":46, "confession":46, "classification":46, "contend":46, "lied":46, "molecular":46, "goat":46, "lineup":46, "frames":46, "cosmic":46, "dug":46, "ranged":46, "predominantly":46, "creator":46, "settling":46, "waits":46, "nonsense":46, "gown":46, "seasonal":46, "pigs":46, "thighs":46, "coordination":46, "loads":46, "suppliers":46, "fled":46, "successes":46, "educated":46, "fertility":46, "teaspoons":46, "barrels":46, "tricks":46, "gaps":46, "avoided":46, "opposing":46, "assassination":46, "machinery":46, "helicopters":46, "arctic":46, "dim":46, "ballots":46, "kindergarten":46, "expose":46, "sandwiches":46, "african-americans":46, "mounting":46, "strips":46, "certification":46, "absurd":46, "fossil":46, "intriguing":46, "mob":46, "rituals":46, "fictional":46, "pipes":46, "cinnamon":46, "retention":46, "par":46, "judged":46, "adventures":46, "offerings":46, "operational":46, "negotiation":46, "unemployed":46, "holly":46, "reply":46, "tones":46, "quantity":46, "wrestling":46, "developer":46, "socioeconomic":46, "fights":46, "scenarios":46, "courtyard":46, "matrix":46, "virgin":46, "upward":46, "picnic":46, "concludes":46, "drum":46, "split":46, "hooked":46, "mounted":46, "sank":46, "peanut":46, "reviewed":46, "consisted":46, "desired":46, "partisan":46, "shield":46, "lifelong":46, "gut":46, "span":46, "fairness":46, "heel":46, "partnerships":46, "metro":46, "parsley":46, "unaware":46, "adequately":46, "recruiting":46, "boil":46, "tuna":46, "youngsters":46, "galleries":46, "balloon":46, "embarrassment":46, "brazilian":46, "ambulance":46, "albeit":46, "manuscript":46, "outrageous":46, "humble":46, "broadly":46, "survivor":46, "bipartisan":46, "marginal":46, "worries":46, "investigated":46, "pounding":46, "nicely":46, "update":46, "maple":46, "defendants":46, "holdings":46, "rubbed":46, "declare":46, "enables":46, "tolerate":46, "follow-up":46, "belonging":46, "workforce":46, "nail":46, "jew":46, "methodology":46, "livestock":46, "ideals":46, "halls":46, "occupy":46, "analyzed":46, "analyzing":46, "apology":46, "incomes":46, "pets":46, "brakes":46, "settlers":46, "miniature":46, "peas":46, "frustrating":46, "sporting":46, "addresses":46, "boundary":46, "donor":46, "dusk":47, "thread":47, "dancer":47, "troop":47, "nerves":47, "circus":47, "soviets":47, "attributes":47, "kissing":47, "militia":47, "denying":47, "wiped":47, "landscapes":47, "carbohydrate":47, "fountain":47, "visions":47, "ducks":47, "criterion":47, "evangelical":47, "defines":47, "wary":47, "whatsoever":47, "comply":47, "crisp":47, "uniforms":47, "prisons":47, "inhabitants":47, "tap":47, "constitutes":47, "fox":47, "shaping":47, "homemade":47, "sack":47, "bugs":47, "undermine":47, "tuned":47, "acted":47, "vegetation":47, "altar":47, "petroleum":47, "modes":47, "asthma":47, "kidney":47, "instinct":47, "excluded":47, "laptop":47, "poison":47, "fireplace":47, "fills":47, "selective":47, "exploded":47, "china":47, "lively":47, "hesitated":47, "crafts":47, "protestant":47, "louder":47, "curtains":47, "cleanup":47, "leap":47, "questioned":47, "depths":47, "margins":47, "aspirations":47, "realizes":47, "shaft":47, "recruitment":47, "headline":47, "predators":47, "daylight":47, "syrup":47, "purchases":47, "audit":47, "modem":47, "adverse":47, "hike":47, "overly":47, "penalties":47, "impeachment":47, "secretly":47, "linguistic":47, "overwhelmed":47, "cent":47, "solidarity":47, "snap":47, "ripe":47, "marital":47, "compact":47, "delays":47, "slot":47, "recreation":47, "drill":47, "cheating":47, "microwave":47, "tore":47, "seventeen":47, "accusations":47, "sandy":47, "elk":47, "photographic":47, "printing":47, "mainland":47, "packs":47, "banana":47, "shark":47, "rivals":47, "rub":47, "exile":47, "jumps":47, "resignation":47, "flooding":47, "spirituality":47, "congratulations":47, "sunshine":47, "justified":47, "struggles":47, "velvet":47, "relaxed":47, "lend":47, "dreaming":47, "refuses":47, "amazed":47, "diagnostic":47, "merger":47, "similarities":47, "sundays":47, "obesity":47, "traded":47, "entities":47, "builds":47, "convert":47, "mathematical":47, "endorsement":47, "frustrated":47, "obsession":47, "contractor":47, "resume":47, "bald":47, "concerts":47, "regret":47, "graduated":47, "slammed":47, "indirect":47, "foam":47, "indicator":47, "enjoys":47, "abundant":47, "rug":47, "ya":47, "lengthy":47, "beautifully":47, "surviving":47, "usage":47, "hardest":47, "flashing":47, "exceed":47, "pumps":47, "refusal":47, "prone":47, "dominance":47, "relevance":47, "glorious":47, "probe":47, "executed":47, "keyboard":47, "republics":47, "handy":47, "confronted":47, "trophy":47, "mist":47, "lobbying":47, "pirates":47, "displays":47, "scholarly":47, "lounge":47, "mighty":47, "hurry":47, "weights":47, "tear":47, "patches":47, "decrease":47, "thesis":47, "lengths":47, "yogurt":47, "glowing":47, "sensible":47, "smoothly":47, "umbrella":47, "straightforward":47, "posed":47, "linking":47, "premise":47, "proportions":47, "registered":47, "coats":47, "pupils":47, "dietary":47, "provincial":47, "intervals":47, "inspire":47, "notorious":47, "selecting":47, "monkey":47, "commodity":47, "sounding":47, "directing":47, "targeting":47, "dean":47, "distances":47, "lamb":47, "examines":47, "courthouse":47, "odor":47, "ordering":47, "jealous":47, "posted":47, "weeds":47, "finances":47, "confined":47, "reviewing":47, "two-year":47, "lazy":47, "taxpayer":47, "folded":47, "tense":47, "lethal":47, "classmates":47, "proudly":47, "elbows":47, "leisure":47, "arrow":47, "geographical":47, "breakthrough":47, "trembling":47, "oath":47, "runners":47, "pros":47, "gangs":47, "rainbow":47, "hut":47, "renewed":47, "melt":47, "environmentalists":47, "aggressively":47, "crises":47, "admiral":47, "pharmaceutical":47, "temporal":47, "evaluated":47, "absorbed":47, "preserving":47, "taller":47, "attachment":47, "recovering":47, "sophomore":47, "exclusion":47, "manipulation":47, "anticipation":47, "ambition":47, "pakistani":47, "randomly":47, "thunder":47, "northwestern":47, "generic":47, "wells":47, "stimulate":47, "insane":47, "questionable":47, "crashed":47, "lowering":47, "joints":47, "canyon":47, "relates":47, "favored":47, "integrate":47, "flashed":47, "descriptive":47, "accomplishments":47, "sustained":47, "spotted":47, "guiding":47, "portrayed":47, "angles":47, "gallon":47, "bankers":47, "comprehension":47, "ample":47, "sue":47, "planners":47, "suited":47, "piles":47, "sings":47, "preserved":47, "pa":47, "closure":47, "adjustments":47, "justification":47, "expenditures":47, "bosnian":47, "efficiently":47, "surroundings":47, "passages":47, "resemble":47, "encouragement":47, "varied":47, "develops":47, "exchanges":47, "flavors":47, "antibiotics":47, "hostility":47, "tucked":47, "rendered":47, "signing":47, "lectures":47, "reverse":47, "personalities":47, "dude":47, "oddly":47, "heavier":47, "coincidence":47, "combining":47, "boiling":47, "con":47, "interfere":47, "salesman":47, "tackle":47, "endure":47, "anticipate":47, "formidable":47, "standpoint":47, "hormone":47, "potent":47, "urge":47, "evaluations":47, "academics":47, "narratives":47, "multicultural":47, "scream":47, "motions":47, "delegation":47, "rationale":47, "launching":47, "overlooking":47, "victorian":47, "africans":47, "enduring":47, "toast":47, "communal":47, "artillery":47, "witch":47, "calculations":47, "statewide":47, "heroic":47, "bachelor":47, "nursery":47, "consumed":47, "merchants":47, "runway":47, "grasp":47, "naive":47, "restricted":47, "icy":47, "conditioning":47, "centre":47, "clan":47, "architects":47, "feast":47, "honesty":47, "wandering":47, "foil":47, "mouths":47, "resentment":47, "leagues":47, "posters":47, "biodiversity":47, "emphasized":47, "cement":47, "blades":47, "armor":47, "proving":47, "vigorous":47, "decisive":47, "newer":47, "mornings":47, "overweight":47, "transaction":47, "builders":47, "milligrams":47, "embedded":47, "blinked":47, "ham":47, "observes":47, "restructuring":47, "relying":47, "psychiatrist":47, "cycling":47, "underwear":47, "gallons":47, "pretending":47, "villagers":47, "dragged":47, "racist":47, "airports":47, "successor":47, "albums":47, "conceived":47, "impairment":47, "recruited":47, "phrases":47, "commercials":47, "mound":47, "waiter":47, "unusually":47, "rebel":47, "coupled":47, "misery":47, "five-year":47, "reproduction":47, "lottery":47, "tastes":47, "characteristic":47, "unwilling":47, "detected":47, "fearful":47, "bug":47, "snakes":47, "obstacle":47, "beads":47, "sensors":47, "dances":47, "valued":47, "candle":47, "clergy":47, "lesbian":47, "corresponding":47, "lifts":47, "info":47, "dot":47, "ecosystems":47, "founders":47, "assured":47, "ruins":47, "median":47, "madness":47, "ribbon":47, "composer":47, "coral":47, "sleeve":47, "contamination":47, "embargo":47, "monopoly":47, "bees":47, "poised":47, "foremost":47, "consume":47, "appropriately":47, "poets":47, "urgency":47, "servant":47, "camping":47, "firefighters":47, "anthropology":47, "detectives":47, "sore":47, "hands-on":47, "balcony":47, "slender":47, "compounds":47, "raiders":47, "merit":47, "seas":47, "awaiting":47, "skip":47, "muddy":47, "reinforce":47, "mineral":47, "bee":47, "middle-aged":47, "petty":47, "peeled":47, "insect":47, "accord":47, "saddle":47, "misleading":48, "dragging":48, "nominated":48, "supervisors":48, "vicious":48, "clearing":48, "suspected":48, "hid":48, "sanctuary":48, "troubling":48, "discovering":48, "cloves":48, "savannah":48, "denies":48, "towels":48, "suitcase":48, "battlefield":48, "speeds":48, "conflicting":48, "sticky":48, "slopes":48, "deliberate":48, "bless":48, "desires":48, "spacecraft":48, "obsessed":48, "trio":48, "grilled":48, "cardinal":48, "pumpkin":48, "demonstrating":48, "interference":48, "patrons":48, "leverage":48, "jackets":48, "morally":48, "maternal":48, "proves":48, "mixing":48, "blend":48, "saucepan":48, "appointments":48, "proximity":48, "touches":48, "idiot":48, "crab":48, "strokes":48, "playground":48, "indictment":48, "accompanying":48, "microphone":48, "relies":48, "ceremonies":48, "seafood":48, "marching":48, "combinations":48, "basics":48, "quantities":48, "defenses":48, "offspring":48, "succession":48, "handing":48, "arose":48, "outbreak":48, "cooked":48, "ghosts":48, "vulnerability":48, "chunks":48, "recordings":48, "functioning":48, "rehearsal":48, "sip":48, "outsiders":48, "blankets":48, "exhibitions":48, "innings":48, "contempt":48, "warns":48, "archaeological":48, "prejudice":48, "announcing":48, "critically":48, "assumes":48, "thigh":48, "e-mails":48, "latino":48, "evidently":48, "interface":48, "consult":48, "predicting":48, "adolescence":48, "banned":48, "schemes":48, "triangle":48, "textbooks":48, "deployed":48, "miners":48, "satellites":48, "stereotypes":48, "cuisine":48, "swedish":48, "genuinely":48, "rigorous":48, "recipient":48, "climbs":48, "runner":48, "synthetic":48, "wishes":48, "subjected":48, "millennium":48, "colonies":48, "plaintiffs":48, "starring":48, "resign":48, "photographers":48, "insurgents":48, "nod":48, "diamonds":48, "oval":48, "edited":48, "imply":48, "ginger":48, "proliferation":48, "spinach":48, "responds":48, "syrian":48, "vibrant":48, "fixing":48, "wonders":48, "coin":48, "fax":48, "sights":48, "ensuring":48, "sponsors":48, "raid":48, "severity":48, "telecommunications":48, "eats":48, "moist":48, "ports":48, "brow":48, "merchant":48, "tribune":48, "squash":48, "lettuce":48, "bureaucratic":48, "unacceptable":48, "headache":48, "happier":48, "waitress":48, "pledge":48, "robe":48, "atoms":48, "reserved":48, "advise":48, "gosh":48, "optimal":48, "den":48, "reunion":48, "featured":48, "rubbing":48, "continuity":48, "sperm":48, "spontaneous":48, "bolt":48, "turmoil":48, "arguably":48, "comeback":48, "policeman":48, "stereo":48, "mister":48, "weaknesses":48, "generals":48, "liberties":48, "planting":48, "profoundly":48, "flown":48, "champions":48, "repeating":48, "intersection":48, "interpersonal":48, "hottest":48, "predicts":48, "assertion":48, "helpless":48, "roster":48, "chapters":48, "composite":48, "radically":48, "trait":48, "prestigious":48, "interim":48, "traders":48, "astonishing":48, "unpleasant":48, "haven":48, "bushes":48, "concessions":48, "illustrations":48, "therapeutic":48, "rider":48, "carved":48, "implicit":48, "herd":48, "four-year":48, "parole":48, "washed":48, "slowing":48, "correlated":48, "patriots":48, "proponents":48, "pavement":48, "grains":48, "collector":48, "antiques":48, "convictions":48, "needles":48, "intermediate":48, "touchdowns":48, "meditation":48, "concentrated":48, "transplant":48, "reflective":48, "mosque":48, "representations":48, "whales":48, "discomfort":48, "illegally":48, "arrests":48, "southeastern":48, "poses":48, "nickname":48, "pal":48, "ventures":48, "necklace":48, "thereafter":48, "clarify":48, "resistant":48, "comet":48, "axis":48, "hybrid":48, "precedent":48, "wetlands":48, "illnesses":48, "toughest":48, "rides":48, "tooth":48, "freeman":48, "pitching":48, "logs":48, "bulletin":48, "certificate":48, "tee":48, "fury":48, "stark":48, "decorative":48, "preacher":48, "privileged":48, "curves":48, "commissions":48, "cedar":48, "assistants":48, "nets":48, "cherry":48, "skating":48, "stumbled":48, "niche":48, "jam":48, "campuses":48, "obtaining":48, "discharge":48, "respects":48, "fading":48, "contributes":48, "drifted":48, "gardening":48, "gases":48, "cared":48, "maturity":48, "schedules":48, "paperwork":48, "imaginary":48, "maid":48, "vanished":48, "fold":48, "varies":48, "adjacent":48, "respiratory":48, "viruses":48, "mattress":48, "hemisphere":48, "criticize":48, "painters":48, "grandpa":48, "intellectuals":48, "braves":48, "discoveries":48, "productions":48, "fond":48, "restored":48, "perfection":48, "collapsed":48, "relieved":48, "vacant":48, "laboratories":48, "diesel":48, "interestingly":48, "bargaining":48, "pricing":48, "stunned":48, "animated":48, "documentation":48, "polar":48, "detention":48, "admissions":48, "homosexuality":48, "undertaken":48, "disappearance":48, "evenings":48, "setup":48, "bilateral":48, "uneasy":48, "rival":48, "elites":48, "renewable":48, "averaged":48, "grapes":48, "disagreement":48, "backwards":48, "explorer":48, "prefers":48, "dismiss":48, "rude":48, "investigative":48, "environmentally":48, "sturdy":48, "respected":48, "atmospheric":48, "volatile":48, "reflections":48, "rebellion":48, "attach":48, "marathon":48, "solving":48, "ibid":48, "fairy":48, "virtues":48, "guardian":48, "sausage":48, "twilight":48, "granite":48, "analogy":48, "poetic":48, "negro":48, "banner":48, "communists":48, "lobbyists":48, "preheat":48, "gazed":48, "genetically":48, "cinema":48, "lucrative":48, "delivers":48, "definitive":48, "gum":48, "telescopes":48, "unpredictable":48, "renewal":48, "societal":48, "lanes":48, "releasing":48, "scare":48, "briefing":48, "postwar":48, "ash":48, "casually":48, "tricky":48, "contributor":48, "hormones":48, "growers":48, "decorated":48, "spell":48, "delighted":48, "rests":48, "phases":48, "provinces":48, "secondly":48, "futures":48, "snack":48, "finals":48, "fastest":48, "organizers":48, "pesticides":48, "onset":48, "lunar":48, "supporter":48, "responsive":48, "figuring":48, "flows":48, "highlights":48, "myths":48, "deposits":48, "mentality":48, "blonde":48, "probation":48, "burger":48, "t-shirts":48, "charitable":48, "dolphins":48, "thrill":48, "hurried":48, "flashlight":48, "basil":48, "performer":48, "verge":48, "modified":48, "territorial":48, "prevailing":48, "ups":48, "resolutions":48, "beams":48, "pitchers":48, "arc":48, "traumatic":48, "uncommon":48, "lush":48, "fascinated":48, "grabbing":48, "whiskey":48, "tearing":48, "switched":48, "pending":48, "outlets":48, "doses":48, "vaguely":48, "grinning":48, "strangely":48, "peered":48, "accessories":48, "sliced":48, "pervasive":48, "butterfly":48, "resembles":48, "crosses":48, "tempted":48, "buys":48, "accompany":48, "needing":48, "unlimited":48, "turf":48, "athletics":48, "startling":48, "whisper":48, "applicants":48, "jeep":48, "witnessed":48, "ton":48, "sunglasses":48, "prestige":48, "adopting":48, "wishing":48, "reliance":48, "burial":48, "plots":48, "spelling":48, "weighing":48, "deaf":48, "quantitative":48, "constituents":48, "circular":48, "whisk":48, "keen":48, "infectious":48, "rifles":48, "beta":48, "assembled":48, "compensate":48, "flawed":48, "pity":48, "abortions":48, "computing":48, "serial":48, "threatens":48, "conductor":48, "skis":48, "calmly":48, "weary":48, "imminent":48, "casting":48, "unison":48, "slate":48, "schooling":48, "authoritarian":48, "tapping":48, "gradual":48, "credentials":48, "pans":48, "listing":48, "melody":48, "scanning":48, "robbery":48, "coffin":48, "forthcoming":48, "incomplete":48, "wit":48, "promptly":48, "probable":48, "intrinsic":48, "certified":48, "pads":48, "injection":48, "cockpit":48, "prevalent":48, "punish":48, "hmm":48, "freeway":48, "intercourse":48, "highlight":48, "missionary":48, "searched":48, "memoir":48, "thinly":48, "coins":48, "noisy":49, "gauge":49, "yoga":49, "oppression":49, "infected":49, "forgiveness":49, "insufficient":49, "restraint":49, "heck":49, "shoppers":49, "batter":49, "disappearing":49, "profiles":49, "projected":49, "fisheries":49, "swift":49, "cereal":49, "homosexual":49, "incoming":49, "policymakers":49, "battered":49, "encounters":49, "babe":49, "laden":49, "spouses":49, "coconut":49, "submitted":49, "thrilled":49, "neglect":49, "privatization":49, "referendum":49, "chooses":49, "swallow":49, "invented":49, "sculptures":49, "depot":49, "negatively":49, "positioned":49, "advancing":49, "stating":49, "solitary":49, "canned":49, "perimeter":49, "verse":49, "bait":49, "wander":49, "rugged":49, "educator":49, "intervene":49, "diplomats":49, "murderer":49, "pursued":49, "ammunition":49, "percentages":49, "um":49, "adjusting":49, "disasters":49, "matches":49, "shelters":49, "suburb":49, "begging":49, "overview":49, "caregivers":49, "brightly":49, "accomplishment":49, "murmured":49, "ye":49, "delayed":49, "injustice":49, "stool":49, "buffalo":49, "linen":49, "barbecue":49, "advises":49, "armies":49, "dolls":49, "armored":49, "shed":49, "beg":49, "highways":49, "backing":49, "dental":49, "sleek":49, "gratitude":49, "lebanese":49, "bothered":49, "promotes":49, "strands":49, "falcons":49, "sweating":49, "combines":49, "high-profile":49, "wholly":49, "empathy":49, "greed":49, "squeezed":49, "cue":49, "postal":49, "loosely":49, "muscular":49, "float":49, "assert":49, "exploitation":49, "premiums":49, "blocked":49, "explored":49, "monitors":49, "comfortably":49, "washing":49, "migrants":49, "skepticism":49, "textbook":49, "hawks":49, "carriage":49, "socialism":49, "chess":49, "nervously":49, "blouse":49, "desktop":49, "preschool":49, "trump":49, "committing":49, "deployment":49, "stems":49, "easiest":49, "instability":49, "gossip":49, "coherent":49, "remainder":49, "killers":49, "bullying":49, "siege":49, "inconsistent":49, "devotion":49, "killings":49, "berries":49, "tapped":49, "contention":49, "damaging":49, "susceptible":49, "tissues":49, "fishery":49, "priced":49, "ramp":49, "continuously":49, "all-time":49, "fists":49, "greeting":49, "persistence":49, "lending":49, "evolve":49, "campaigning":49, "overwhelmingly":49, "ambitions":49, "nodding":49, "chefs":49, "simpler":49, "presentations":49, "pier":49, "bombings":49, "disappointing":49, "corpse":49, "pottery":49, "unwanted":49, "stressful":49, "terminal":49, "sailors":49, "cigar":49, "sewage":49, "infinite":49, "mat":49, "patio":49, "supplements":49, "planetary":49, "cakes":49, "linebacker":49, "ivory":49, "auburn":49, "backdrop":49, "sorrow":49, "day-to-day":49, "spider":49, "hypotheses":49, "tomb":49, "sleeves":49, "businessmen":49, "elusive":49, "initiated":49, "calculate":49, "remark":49, "horns":49, "milky":49, "consisting":49, "polling":49, "thrive":49, "whoa":49, "oaks":49, "visa":49, "chunk":49, "nowadays":49, "roasted":49, "warmer":49, "seller":49, "restrict":49, "dash":49, "knot":49, "substantive":49, "altered":49, "scarf":49, "withdrew":49, "amendments":49, "knives":49, "sharks":49, "drums":49, "natives":49, "rebounds":49, "filing":49, "pastry":49, "width":49, "extensively":49, "cozy":49, "compatible":49, "activism":49, "temptation":49, "plausible":49, "apartheid":49, "fantasies":49, "gays":49, "accidentally":49, "premature":49, "advancement":49, "oils":49, "noises":49, "incorrect":49, "mug":49, "penny":49, "spill":49, "domains":49, "aims":49, "exercising":49, "bang":49, "halt":49, "performs":49, "dinners":49, "demise":49, "bastard":49, "indirectly":49, "fascination":49, "goodbye":49, "mysteries":49, "amusement":49, "blog":49, "irrigation":49, "exploit":49, "earnest":49, "surprises":49, "manners":49, "locks":49, "lease":49, "genocide":49, "superb":49, "ambiguous":49, "recruit":49, "scarcely":49, "pastoral":49, "loneliness":49, "urine":49, "thermal":49, "scarce":49, "relieve":49, "curator":49, "reluctantly":49, "acquiring":49, "competitor":49, "newsletter":49, "relentless":49, "occurrence":49, "nut":49, "doctoral":49, "collision":49, "motorcycle":49, "dissolve":49, "omitted":49, "compelled":49, "punished":49, "definite":49, "windshield":49, "hug":49, "bulbs":49, "worms":49, "brokers":49, "defenders":49, "wax":49, "marker":49, "ashes":49, "bout":49, "madame":49, "violate":49, "understandable":49, "divorced":49, "disappears":49, "strains":49, "hedge":49, "regain":49, "deepest":49, "archaeologists":49, "prevents":49, "backpack":49, "raped":49, "simplicity":49, "govern":49, "creamy":49, "protects":49, "innovations":49, "boarding":49, "belts":49, "altitude":49, "fidelity":49, "logging":49, "charities":49, "idol":49, "prevented":49, "singles":49, "pains":49, "unstable":49, "steroids":49, "transforming":49, "anonymity":49, "hazards":49, "dots":49, "confederate":49, "burst":49, "markers":49, "airplanes":49, "averaging":49, "tents":49, "forensic":49, "spectacle":49, "perfume":49, "booming":49, "heated":49, "drifting":49, "outlet":49, "high-speed":49, "velocity":49, "benign":49, "hay":49, "realism":49, "confidential":49, "lamps":49, "plantation":49, "hull":49, "sprawling":49, "communicating":49, "lenses":49, "cabbage":49, "inning":49, "practiced":49, "abusive":49, "tile":49, "bombers":49, "ingredient":49, "analytical":49, "baskets":49, "emphasizing":49, "projections":49, "ferry":49, "sins":49, "merchandise":49, "mold":49, "hose":49, "internationally":49, "artwork":49, "warrant":49, "swiftly":49, "sideways":49, "binding":49, "interval":49, "nationalist":49, "objections":49, "whispering":49, "bark":49, "someplace":49, "skiers":49, "greet":49, "philosopher":49, "designated":49, "banker":49, "paragraph":49, "robots":49, "destined":49, "maximize":49, "foliage":49, "prostate":49, "situated":49, "ethic":49, "parlor":49, "reds":49, "nasal":49, "advised":49, "flaws":49, "dire":49, "awe":49, "repetition":49, "built-in":49, "debts":49, "seals":49, "enabled":49, "healthier":49, "pops":49, "permits":49, "lingering":49, "deserved":49, "gazing":49, "prophet":49, "medals":49, "instincts":49, "default":49, "kin":49, "terrified":49, "worthwhile":49, "accepts":49, "inspections":49, "pleaded":49, "seating":49, "centered":49, "ankles":49, "weaker":49, "seminar":49, "swallowed":49, "peasant":49, "heterosexual":49, "stamp":49, "mortgages":49, "astronomical":49, "alliances":49, "shaken":49, "contends":49, "riots":49, "slides":49, "lumber":49, "temper":49, "costumes":49, "minerals":49, "mets":49, "novelist":49, "descendants":49, "surplus":49, "boxer":49, "brushed":49, "metals":49, "fort":49, "insurers":49, "pornography":49, "trustees":49, "marvelous":49, "puzzled":49, "high-quality":49, "trades":49, "networking":49, "mastery":49, "on-line":49, "blunt":49, "rhetorical":49, "turtle":49, "czech":49, "upright":49, "masculine":49, "sincere":49, "squares":49, "notices":49, "outraged":49, "seized":49, "implication":49, "trailing":49, "crap":49, "insisting":49, "seize":49, "negotiating":49, "identifies":49, "ram":49, "sneak":49, "balancing":49, "daytime":49, "rumor":49, "alternate":49, "asserts":49, "energetic":49, "enhanced":49, "distribute":49, "airborne":49, "retiring":49, "gleaming":49, "thief":49, "dedication":49, "lobster":49, "guaranteed":49, "renowned":49, "intensely":49, "residual":49, "uranium":49, "guts":49, "apparatus":49, "canopy":49, "baptist":49, "underway":49, "enabling":49, "overlooked":49, "stuffed":49, "militants":49, "terrifying":49, "chancellor":49, "tangible":49, "myriad":49, "pillows":49, "recorder":49, "resigned":49, "luggage":49, "tactical":49, "mistress":49, "dubbed":49, "dictionary":49, "hub":49, "cite":49, "admiration":49, "marking":49, "smarter":49, "caucus":49, "roar":49, "unified":49, "immunity":49, "reluctance":49, "scratch":49, "crashing":49, "nutritional":49, "periodically":49, "proposing":49, "gee":49, "serbian":49, "interrupt":49, "declines":49, "listens":49, "cues":49, "watercolor":49, "lipstick":49, "escaped":49, "invariably":49, "distinctions":49, "cheerful":49, "arthritis":49, "richer":49, "endowment":49, "proteins":49, "characterize":49, "bowling":49, "grandson":49, "earrings":49, "preventive":49, "lace":49, "infrared":49, "provocative":49, "honorable":49, "freezer":49, "frog":49, "applicable":49, "openness":49, "shiite":49, "blamed":49, "simulation":49, "eventual":49, "insider":49, "cliffs":49, "bulb":49, "bury":49, "affluent":49, "autonomous":49, "turnover":49, "rams":49, "trousers":49, "assists":49, "travels":49, "obscure":49, "disclose":49, "logo":49, "outline":49, "classics":49, "goddess":49, "cites":49, "currents":49, "reservoir":49, "assurance":49, "triple":49, "imagining":49, "comforting":49, "glancing":49, "brighter":50, "honored":50, "repairs":50, "focal":50, "shrine":50, "determines":50, "tactic":50, "cries":50, "premiere":50, "secrecy":50, "distracted":50, "undergo":50, "sensed":50, "roller":50, "collectively":50, "apt":50, "prototype":50, "would-be":50, "graceful":50, "veins":50, "buddies":50, "sober":50, "searches":50, "mammals":50, "cynical":50, "discourage":50, "glue":50, "undercover":50, "discusses":50, "hooks":50, "visibility":50, "broccoli":50, "elephants":50, "slightest":50, "premium":50, "technician":50, "theorists":50, "staircase":50, "paste":50, "culinary":50, "bubbles":50, "oceans":50, "vitamins":50, "weighs":50, "bats":50, "catastrophe":50, "pragmatic":50, "fusion":50, "elimination":50, "disastrous":50, "void":50, "bending":50, "vigorously":50, "pact":50, "restless":50, "companions":50, "cardiovascular":50, "timely":50, "explosives":50, "exposing":50, "prose":50, "flee":50, "glare":50, "readiness":50, "three-year":50, "scars":50, "ants":50, "merry":50, "impairments":50, "daunting":50, "limitation":50, "baggage":50, "separating":50, "accommodations":50, "constructive":50, "proceeded":50, "manipulate":50, "privileges":50, "compiled":50, "systematically":50, "fringe":50, "breathed":50, "rubble":50, "chat":50, "palette":50, "boasts":50, "fleeing":50, "terrace":50, "concentrating":50, "frantic":50, "knowledgeable":50, "segregation":50, "intricate":50, "dangling":50, "popped":50, "catastrophic":50, "spicy":50, "missionaries":50, "impatient":50, "genetics":50, "re-election":50, "curricula":50, "civilized":50, "kurdish":50, "chores":50, "nephew":50, "outsider":50, "autism":50, "arbitrary":50, "explode":50, "parliamentary":50, "sliding":50, "newcomers":50, "biologist":50, "cables":50, "year-round":50, "ropes":50, "cracking":50, "theatrical":50, "morale":50, "sketch":50, "extinction":50, "methodist":50, "retrieved":50, "suffers":50, "hollow":50, "disbelief":50, "disgust":50, "northeastern":50, "sacks":50, "domination":50, "sailor":50, "acknowledging":50, "hates":50, "elevated":50, "skirts":50, "biologists":50, "fibers":50, "defeated":50, "confronting":50, "polished":50, "grounded":50, "veto":50, "binoculars":50, "reactor":50, "violin":50, "chewing":50, "interrogation":50, "variability":50, "bouncing":50, "interrupted":50, "enjoyment":50, "pyramid":50, "graduating":50, "depicted":50, "sunrise":50, "disturbed":50, "peasants":50, "confess":50, "surveyed":50, "treasures":50, "wholesale":50, "eighty":50, "strengthening":50, "fries":50, "extraordinarily":50, "weighed":50, "charcoal":50, "arises":50, "prolonged":50, "cautiously":50, "curls":50, "multimedia":50, "outlined":50, "assemble":50, "substitute":50, "archaeology":50, "packaging":50, "same-sex":50, "fellowship":50, "low-fat":50, "clutching":50, "weed":50, "trademark":50, "projection":50, "grape":50, "yep":50, "shoots":50, "deposit":50, "savvy":50, "feasible":50, "mediterranean":50, "massacre":50, "petition":50, "throne":50, "mercury":50, "gaming":50, "communion":50, "thyme":50, "lenders":50, "cleaned":50, "mid":50, "spectators":50, "surgeons":50, "sleepy":50, "bomber":50, "youthful":50, "genome":50, "initiate":50, "mankind":50, "stripes":50, "therapists":50, "noticing":50, "contradictory":50, "distraction":50, "staffers":50, "employs":50, "insistence":50, "awhile":50, "astronauts":50, "real-life":50, "appliances":50, "fuzzy":50, "voluntarily":50, "willow":50, "guided":50, "goose":50, "swamp":50, "stubborn":50, "tenants":50, "offshore":50, "right-wing":50, "predictor":50, "perched":50, "hugged":50, "inferior":50, "liar":50, "elder":50, "cabinets":50, "magnet":50, "tract":50, "enhancing":50, "oneself":50, "attendant":50, "forgetting":50, "southwestern":50, "celery":50, "upside":50, "chaotic":50, "cubic":50, "carbohydrates":50, "embraced":50, "respectable":50, "bundle":50, "saint":50, "ruin":50, "outdoors":50, "sequences":50, "vocational":50, "relied":50, "ratios":50, "interstate":50, "attic":50, "declaring":50, "selections":50, "subcommittee":50, "condoms":50, "generates":50, "entertain":50, "selfish":50, "discretion":50, "fitted":50, "riot":50, "saturdays":50, "showbiz":50, "lump":50, "fences":50, "nazis":50, "predecessor":50, "venue":50, "baked":50, "x-ray":50, "generating":50, "hazard":50, "dripping":50, "portray":50, "ignorant":50, "contributors":50, "expressive":50, "shout":50, "regards":50, "battling":50, "conjunction":50, "tiles":50, "habitats":50, "groceries":50, "prayed":50, "mandates":50, "nineteenth-century":50, "hurricanes":50, "dreamed":50, "diplomat":50, "dentist":50, "torso":50, "defender":50, "fertile":50, "brightest":50, "kicks":50, "devote":50, "loading":50, "unexpectedly":50, "frenzy":50, "topped":50, "voyage":50, "possessions":50, "wicked":50, "emission":50, "headaches":50, "render":50, "militant":50, "yields":50, "loser":50, "adulthood":50, "steer":50, "prevail":50, "echo":50, "inequality":50, "desperation":50, "cafeteria":50, "synthesis":50, "paradox":50, "flip":50, "scripture":50, "scar":50, "unrelated":50, "medicines":50, "peach":50, "shipped":50, "outreach":50, "transfers":50, "aiming":50, "glances":50, "prosperous":50, "systemic":50, "goddamn":50, "printer":50, "dated":50, "sweetheart":50, "beers":50, "owl":50, "shores":50, "demons":50, "accidental":50, "poorer":50, "entrepreneur":50, "passport":50, "friction":50, "cone":50, "presently":50, "cannon":50, "sickness":50, "politely":50, "inherently":50, "durable":50, "curse":50, "oysters":50, "black-and-white":50, "slowed":50, "fertilizer":50, "tenth":50, "authorized":50, "autobiography":50, "vampire":50, "vanity":50, "jelly":50, "quilt":50, "temples":50, "premier":50, "feminism":50, "endurance":50, "opt":50, "modify":50, "technicians":50, "clearer":50, "flock":50, "configuration":50, "questionnaires":50, "tumors":50, "refined":50, "ringing":50, "labeled":50, "flipped":50, "wrists":50, "specializes":50, "imposing":50, "massage":50, "alarming":50, "commentator":50, "compartment":50, "roadside":50, "deputies":50, "securing":50, "objection":50, "auditorium":50, "messenger":50, "upscale":50, "revision":50, "physiological":50, "chop":50, "bosses":50, "betting":50, "crawling":50, "fireworks":50, "inviting":50, "speculate":50, "aerial":50, "commissioners":50, "doomed":50, "plight":50, "degradation":50, "tossing":50, "supplied":50, "blows":50, "vastly":50, "messy":50, "exclude":50, "monkeys":50, "twenty-four":50, "em":50, "defended":50, "reminding":50, "ineffective":50, "baron":50, "poorest":50, "progression":50, "cheering":50, "abuses":50, "tying":50, "preparations":50, "eagerly":50, "losers":50, "landlord":50, "peering":50, "tendencies":50, "cruising":50, "toddler":50, "explores":50, "strawberry":50, "juror":50, "infamous":50, "lasts":50, "dividing":50, "enormously":50, "nineteen":50, "ceramic":50, "hawaiian":50, "nude":50, "allocation":50, "villa":50, "diminish":50, "honors":50, "daring":50, "retrieve":50, "violating":50, "impressions":50, "moonlight":50, "unsuccessful":50, "accusing":50, "offenses":50, "brigade":50, "wrapping":50, "rhythms":50, "merits":50, "packers":50, "coyote":50, "learns":50, "surf":50, "intentionally":50, "vain":50, "traces":50, "obey":50, "repression":50, "elevation":50, "incorporating":50, "shortages":50, "framed":50, "slippery":50, "cancel":50, "popping":50, "stimulation":50, "donation":50, "mistaken":50, "factions":50, "cardiac":50, "rightly":50, "bumps":50, "acids":50, "surround":50, "richest":50, "yielded":50, "bedrooms":50, "challenger":50, "persist":50, "smells":50, "sweep":50, "crawl":50, "commonwealth":50, "reminiscent":50, "favors":50, "seventy":50, "vest":50, "kindness":50, "fingertips":50, "scottish":50, "dump":50, "harmless":50, "chambers":50, "shepherd":50, "sustainability":50, "haitian":50, "brand-new":50, "enacted":50, "calculation":50, "modification":50, "amnesty":50, "professionally":50, "drafted":50, "rainy":50, "condom":50, "undergoing":50, "attractions":50, "drilling":50, "periodic":50, "stationed":50, "battalion":50, "half-hour":50, "traps":50, "vein":50, "amongst":50, "truths":50, "literal":50, "slips":50, "icons":50, "cohort":50, "pins":51, "bites":51, "institutes":51, "mourning":51, "primaries":51, "episcopal":51, "canoe":51, "fashionable":51, "revised":51, "fund-raising":51, "inclusive":51, "animation":51, "valve":51, "annoying":51, "scandals":51, "cease-fire":51, "adaptive":51, "proceeds":51, "coordinate":51, "stew":51, "takeover":51, "gigantic":51, "explosions":51, "thieves":51, "staggering":51, "inheritance":51, "exhibits":51, "intends":51, "seasoned":51, "pinch":51, "sailing":51, "ideally":51, "slower":51, "boomers":51, "shine":51, "sponsor":51, "pitches":51, "whistle":51, "spice":51, "anticipated":51, "spun":51, "builder":51, "cancers":51, "pronounced":51, "starving":51, "accordance":51, "leak":51, "mesh":51, "diner":51, "guerrilla":51, "sherry":51, "suck":51, "directs":51, "betrayal":51, "sneakers":51, "endorse":51, "ambiguity":51, "brotherhood":51, "instructed":51, "commanding":51, "poultry":51, "cilantro":51, "planner":51, "transparency":51, "uprising":51, "exclaimed":51, "coefficients":51, "faded":51, "stressed":51, "cardboard":51, "capitalist":51, "medium-high":51, "brink":51, "withdrawn":51, "believers":51, "empowerment":51, "pines":51, "sovereign":51, "patriotic":51, "plague":51, "frequencies":51, "speeding":51, "filming":51, "long-distance":51, "radioactive":51, "forecast":51, "volleyball":51, "blessed":51, "akin":51, "mutually":51, "vines":51, "trafficking":51, "hatch":51, "exams":51, "monsters":51, "aquatic":51, "archbishop":51, "bleak":51, "summers":51, "cubes":51, "seminars":51, "fiery":51, "teasing":51, "constructs":51, "traveler":51, "asteroid":51, "froze":51, "stellar":51, "chilling":51, "jars":51, "tattoo":51, "improves":51, "sociology":51, "calf":51, "dictator":51, "import":51, "navigation":51, "rewarded":51, "prohibition":51, "arrogant":51, "firsthand":51, "felony":51, "sic":51, "nominations":51, "asylum":51, "appreciated":51, "dip":51, "conversely":51, "folds":51, "kurds":51, "dubious":51, "remedy":51, "feminists":51, "verify":51, "eh":51, "wizard":51, "tornado":51, "limiting":51, "volcano":51, "superiority":51, "swelling":51, "grease":51, "liberalism":51, "blaming":51, "surrender":51, "splendid":51, "onstage":51, "scholarships":51, "longitudinal":51, "circumstance":51, "fiercely":51, "briefcase":51, "wartime":51, "drainage":51, "enlightenment":51, "particle":51, "spreads":51, "structured":51, "browns":51, "impress":51, "face-to-face":51, "striped":51, "specimens":51, "spinal":51, "donate":51, "gamble":51, "sentiments":51, "reign":51, "friendships":51, "wasting":51, "heavens":51, "imported":51, "extract":51, "dominican":51, "frogs":51, "treats":51, "greeted":51, "proposes":51, "lust":51, "miracles":51, "newborn":51, "wreck":51, "confessed":51, "photographed":51, "disciplinary":51, "violently":51, "disruption":51, "lays":51, "breed":51, "wedge":51, "caves":51, "poker":51, "admitting":51, "differing":51, "fortunes":51, "forbidden":51, "underwent":51, "commented":51, "removes":51, "tunnels":51, "firearms":51, "deposition":51, "specifics":51, "chemotherapy":51, "soaring":51, "compares":51, "editing":51, "sensor":51, "painfully":51, "batch":51, "oyster":51, "koreans":51, "agreeing":51, "crushed":51, "pathetic":51, "orderly":51, "remedies":51, "competitiveness":51, "alumni":51, "mexicans":51, "anglers":51, "foul":51, "hairs":51, "opener":51, "all-purpose":51, "rewarding":51, "razor":51, "knots":51, "brightness":51, "patron":51, "ragged":51, "preaching":51, "automated":51, "diets":51, "slapped":51, "alpine":51, "prepares":51, "corrections":51, "cache":51, "longing":51, "packing":51, "martial":51, "stimuli":51, "luckily":51, "indications":51, "bounced":51, "slams":51, "controller":51, "compression":51, "modifications":51, "lavender":51, "predator":51, "pleading":51, "catalogue":51, "pearl":51, "dependency":51, "trajectory":51, "cease":51, "holders":51, "scrap":51, "vodka":51, "twisted":51, "repertoire":51, "unsure":51, "inaugural":51, "working-class":51, "licenses":51, "brushing":51, "patted":51, "sparkling":51, "sellers":51, "runoff":51, "celebrated":51, "incapable":51, "teammate":51, "fabrics":51, "reinforced":51, "advisor":51, "wardrobe":51, "symptom":51, "affective":51, "compassionate":51, "platter":51, "ethanol":51, "excuses":51, "consuming":51, "proceeding":51, "stretches":51, "hesitate":51, "psychic":51, "scan":51, "hobby":51, "famed":51, "beginnings":51, "tentative":51, "dinosaurs":51, "cutter":51, "advent":51, "shoved":51, "gourmet":51, "industrialized":51, "reef":51, "articulate":51, "prostitution":51, "cooperating":51, "dinosaur":51, "unseen":51, "worm":51, "lateral":51, "lesbians":51, "badge":51, "teachings":51, "pollutants":51, "viewpoint":51, "bookstore":51, "resemblance":51, "demon":51, "headnote":51, "bricks":51, "veil":51, "accustomed":51, "remarked":51, "normative":51, "swirling":51, "familiarity":51, "misses":51, "weeping":51, "crumbs":51, "meadows":51, "consist":51, "sedan":51, "inserted":51, "strategist":51, "mule":51, "peripheral":51, "disruptive":51, "patriot":51, "shrinking":51, "temperament":51, "resurrection":51, "passions":51, "supplier":51, "disturbance":51, "agony":51, "rods":51, "endeavor":51, "theoretically":51, "drift":51, "prizes":51, "authenticity":51, "danish":51, "diminished":51, "floral":51, "ignores":51, "asserted":51, "relaxation":51, "statutes":51, "snapping":51, "successive":51, "haze":51, "ounce":51, "grammar":51, "glamorous":51, "similarity":51, "monuments":51, "electron":51, "ubiquitous":51, "curb":51, "employing":51, "outset":51, "embracing":51, "pivotal":51, "angrily":51, "puppy":51, "server":51, "mantle":51, "primetime":51, "exhaustion":51, "drunken":51, "corridors":51, "premises":51, "joking":51, "suspicions":51, "indoors":51, "saga":51, "braille":51, "marrying":51, "rulers":51, "penis":51, "modernity":51, "soils":51, "slick":51, "pretended":51, "jaws":51, "carrot":51, "irresponsible":51, "violated":51, "raced":51, "sixties":51, "panthers":51, "freshmen":51, "initiation":51, "freed":51, "ninety":51, "remnants":51, "scenic":51, "overtime":51, "licensing":51, "shaky":51, "withstand":51, "neon":51, "monitored":51, "fellows":51, "spike":51, "thriving":51, "possessed":51, "protections":51, "demonstrators":51, "tractor":51, "hopeless":51, "sensing":51, "thinkers":51, "disadvantage":51, "lightweight":51, "ranges":51, "commodities":51, "eighteenth":51, "eligibility":51, "kidnapping":51, "erotic":51, "sensory":51, "secured":51, "navigate":51, "catcher":51, "ripped":51, "uneven":51, "pleasures":51, "guessed":51, "valleys":51, "inspiring":51, "dime":51, "showcase":51, "superstar":51, "hillside":51, "abnormal":51, "nominees":51, "roofs":51, "pueblo":51, "educating":51, "contradiction":51, "walnut":51, "wiping":51, "democracies":51, "cumulative":51, "hypothetical":51, "geometry":51, "stature":51, "layout":51, "saves":51, "maze":51, "textile":51, "rivalry":51, "differential":51, "arch":51, "handles":51, "legends":51, "drawers":51, "unconstitutional":51, "cherokee":51, "undertake":51, "generosity":51, "popcorn":51, "self-efficacy":51, "imitation":51, "energies":51, "consortium":51, "mentors":51, "anthrax":51, "democratization":51, "specially":51, "crest":51, "mechanic":51, "iq":51, "podium":51, "contests":51, "hindu":51, "slogan":51, "reversal":51, "screams":51, "installing":51, "backlash":51, "imaginative":51, "porcelain":51, "continuum":51, "allegiance":51, "sketches":51, "stamps":51, "olives":51, "lousy":51, "interpreting":51, "recalling":51, "connects":51, "bolts":51, "grassroots":51, "comprehend":51, "compass":51, "predictors":51, "counterpart":51, "best-selling":51, "venues":51, "insurgency":51, "mosquitoes":51, "peanuts":51, "hosting":51, "coarse":51, "strawberries":51, "generator":51, "aspirin":51, "indifference":51, "stride":51, "holder":51, "acre":51, "exquisite":51, "framing":51, "pub":51, "pristine":51, "multinational":51, "capturing":51, "arsenal":51, "zoning":51, "scenery":51, "stainless":51, "defects":51, "turnout":51, "softened":51, "regulated":51, "elect":51, "receivers":51, "sail":51, "anatomy":51, "raft":51, "decreased":51, "fats":51, "bonuses":51, "acceleration":51, "vacations":51, "pardon":51, "patiently":51, "beats":51, "thankful":51, "decay":51, "fines":51, "colon":51, "mediation":51, "depicting":51, "ditch":51, "brandy":51, "deeds":51, "bureaucrats":51, "ordeal":51, "automobiles":51, "module":51, "swings":51, "crunch":51, "salsa":51, "credited":51, "sucking":51, "pasture":51, "humanities":51, "crooked":51, "turtles":51, "cartoons":51, "spears":51, "solitude":51, "consciously":51, "detainees":51, "shields":51, "mentoring":51, "praised":51, "spark":51, "downturn":51, "frank":51, "ooh":51, "coefficient":51, "moderately":51, "slaughter":51, "folder":51, "posing":51, "administrations":51, "demographics":51, "transitions":51, "detector":51, "metaphors":51, "invasive":51, "thai":51, "protested":51, "criticizing":51, "curved":51, "epic":51, "tunes":51, "fearing":51, "reversed":51, "sealed":51, "bamboo":51, "confirms":52, "narrowly":52, "accountant":52, "yell":52, "rebuilding":52, "tribunal":52, "clash":52, "jeopardy":52, "contacted":52, "idle":52, "qualifications":52, "bartender":52, "stigma":52, "cosmos":52, "chic":52, "insulation":52, "tighten":52, "hierarchical":52, "eclipse":52, "sued":52, "plasma":52, "costing":52, "soothing":52, "drowning":52, "dissent":52, "cosmetic":52, "inherited":52, "self-determination":52, "declares":52, "physicist":52, "mushroom":52, "seminary":52, "migrant":52, "gasped":52, "peel":52, "conquest":52, "eerie":52, "devastated":52, "suppress":52, "pitched":52, "advertisements":52, "asphalt":52, "recruits":52, "rested":52, "mustache":52, "baseman":52, "distinctly":52, "wandered":52, "bacterial":52, "meaningless":52, "screw":52, "railing":52, "causal":52, "execute":52, "nap":52, "modernization":52, "computerized":52, "shooter":52, "displaying":52, "penetrate":52, "unpopular":52, "strap":52, "releases":52, "illicit":52, "fitting":52, "malaria":52, "estrogen":52, "transitional":52, "butterflies":52, "softball":52, "filters":52, "decidedly":52, "sandals":52, "whip":52, "tails":52, "offended":52, "high-end":52, "reformers":52, "hispanics":52, "announces":52, "postmodern":52, "respondent":52, "playful":52, "disclosed":52, "handbook":52, "monks":52, "respectful":52, "eased":52, "statues":52, "tar":52, "constructing":52, "accelerate":52, "plaster":52, "gestured":52, "guild":52, "traced":52, "tighter":52, "shone":52, "skeleton":52, "shrink":52, "hesitation":52, "psyche":52, "bodily":52, "arrows":52, "goats":52, "nuns":52, "loaf":52, "momentarily":52, "stylish":52, "advocating":52, "ranger":52, "celebrations":52, "dive":52, "dividends":52, "drastic":52, "whereby":52, "folding":52, "nostalgia":52, "complementary":52, "redemption":52, "gardeners":52, "treaties":52, "commentators":52, "batting":52, "laborers":52, "hospitality":52, "humidity":52, "rotten":52, "testers":52, "housed":52, "integrating":52, "patriotism":52, "smokers":52, "snacks":52, "knelt":52, "courageous":52, "heightened":52, "eternity":52, "stacked":52, "thanked":52, "melted":52, "depicts":52, "stump":52, "retirees":52, "quotas":52, "tsunami":52, "hovering":52, "download":52, "fisherman":52, "alignment":52, "hitter":52, "supernatural":52, "claws":52, "attain":52, "deceased":52, "honeymoon":52, "routines":52, "skins":52, "graders":52, "streaming":52, "sentimental":52, "clinging":52, "superficial":52, "fracture":52, "stacks":52, "insulin":52, "stabilize":52, "bra":52, "dissatisfaction":52, "torch":52, "humiliation":52, "metallic":52, "preservice":52, "heap":52, "beneficiaries":52, "thou":52, "specify":52, "bananas":52, "improper":52, "trench":52, "chilly":52, "marched":52, "dice":52, "trivial":52, "low-cost":52, "strive":52, "learner":52, "admired":52, "spectator":52, "dazzling":52, "oblivious":52, "versatile":52, "preceding":52, "irrational":52, "contradictions":52, "rehab":52, "clubhouse":52, "plaintiff":52, "novelty":52, "annoyed":52, "policemen":52, "amber":52, "predecessors":52, "ruler":52, "blossoms":52, "gardener":52, "databases":52, "quake":52, "tempting":52, "recognizable":52, "showers":52, "loft":52, "inmate":52, "lining":52, "persona":52, "jealousy":52, "softer":52, "irregular":52, "expectancy":52, "bump":52, "litter":52, "feather":52, "invites":52, "downward":52, "volcanic":52, "scrambling":52, "advertisers":52, "casinos":52, "satisfactory":52, "monumental":52, "lure":52, "reckless":52, "blended":52, "cellar":52, "councils":52, "nylon":52, "populated":52, "heir":52, "garment":52, "styling":52, "gears":52, "nationals":52, "freelance":52, "roommate":52, "iranians":52, "famously":52, "squeezing":52, "heartbeat":52, "kinship":52, "stripped":52, "impending":52, "awfully":52, "blinking":52, "nightmares":52, "malls":52, "bakery":52, "feat":52, "packet":52, "high-risk":52, "lutheran":52, "vikings":52, "impoverished":52, "stern":52, "thrust":52, "exposures":52, "overlapping":52, "uniquely":52, "meadow":52, "dictate":52, "expresses":52, "whipping":52, "ribbons":52, "translates":52, "sworn":52, "liable":52, "tournaments":52, "stumbling":52, "polo":52, "debating":52, "charismatic":52, "restrictive":52, "high-level":52, "juices":52, "texans":52, "implants":52, "echoing":52, "plug":52, "oranges":52, "intentional":52, "long-standing":52, "differs":52, "glossy":52, "splash":52, "shootings":52, "electorate":52, "unfinished":52, "bunny":52, "circling":52, "procession":52, "entitlement":52, "indifferent":52, "hype":52, "boredom":52, "thickness":52, "chuck":52, "referral":52, "averages":52, "indefinitely":52, "bailout":52, "insult":52, "disagreed":52, "aura":52, "tab":52, "noticeable":52, "afternoons":52, "danced":52, "oversees":52, "ministries":52, "avalanche":52, "one-time":52, "criticisms":52, "brake":52, "supplement":52, "asians":52, "procedural":52, "decker":52, "preview":52, "refrigerate":52, "utilized":52, "welcomed":52, "outlines":52, "retailer":52, "pew":52, "absorption":52, "girlfriends":52, "extremists":52, "subscribers":52, "gel":52, "philosophers":52, "mildly":52, "revelations":52, "eyebrow":52, "patents":52, "electrons":52, "noses":52, "motivational":52, "ominous":52, "breakup":52, "refreshing":52, "resonance":52, "dictatorship":52, "mystical":52, "rankings":52, "insiders":52, "plaque":52, "discard":52, "blender":52, "dunes":52, "concede":52, "twitter":52, "chuckled":52, "wastes":52, "vowed":52, "begged":52, "sprang":52, "minus":52, "addicted":52, "swam":52, "simultaneous":52, "apologized":52, "believer":52, "recess":52, "turnaround":52, "jewel":52, "entrepreneurial":52, "physicists":52, "seriousness":52, "interdisciplinary":52, "pinned":52, "desserts":52, "soften":52, "utilize":52, "workouts":52, "sugars":52, "antitrust":52, "grasses":52, "momma":52, "owed":52, "glared":52, "comedian":52, "prescriptions":52, "revive":52, "disrupt":52, "avid":52, "mandated":52, "extremes":52, "persuasive":52, "pensions":52, "shack":52, "arrogance":52, "resembled":52, "prohibit":52, "sighs":52, "shovel":52, "recycled":52, "cuff":52, "outskirts":52, "owes":52, "customary":52, "tackles":52, "dwarf":52, "listener":52, "damned":52, "autopsy":52, "kosher":52, "trunks":52, "pauses":52, "suicidal":52, "sunk":52, "dumped":52, "spilling":52, "bunker":52, "practitioner":52, "unrest":52, "clips":52, "examiner":52, "towering":52, "sipping":52, "retaliation":52, "fulfilling":52, "buffet":52, "evacuation":52, "blindness":52, "farewell":52, "excerpt":52, "festivals":52, "zest":52, "cocoa":52, "curiously":52, "vitality":52, "headlights":52, "tuberculosis":52, "tasty":52, "para":52, "debated":52, "unfolding":52, "vaccines":52, "pioneers":52, "threads":52, "spices":52, "bye":52, "retrospect":52, "donated":52, "openings":52, "protagonist":52, "shutting":52, "oversee":52, "upheld":52, "clown":52, "watershed":52, "accessed":52, "grazing":52, "inspect":52, "introductory":52, "lava":52, "scalp":52, "bitterness":52, "sizable":52, "sinking":52, "haul":52, "sparks":52, "buildup":52, "decision-making":52, "bilingual":52, "liberalization":52, "alas":52, "geological":52, "sewer":52, "inflammation":52, "humane":52, "derive":52, "filthy":52, "sung":52, "millionaire":52, "bounce":52, "dresser":52, "gracious":52, "benefited":52, "formulation":52, "sermon":52, "yacht":52, "introduces":52, "granting":52, "trim":52, "brokerage":52, "mills":52, "theologians":52, "hefty":52, "spacious":52, "insert":52, "renovation":52, "artery":52, "detectors":52, "sidewalks":52, "borrowing":52, "condo":52, "peacekeeping":52, "escaping":52, "soak":52, "thirty-five":52, "filmmaker":52, "canadians":52, "simplest":52, "borne":52, "horrific":52, "fragrant":52, "layoffs":52, "overlook":52, "inquiries":52, "frantically":52, "owning":52, "motivate":52, "fridge":52, "cruelty":52, "enlisted":52, "niece":52, "asparagus":52, "cheer":52, "disgusting":52, "reassuring":52, "freedoms":52, "pathways":52, "paperback":52, "organism":52, "mosquito":52, "rip":52, "fetch":52, "breach":52, "spins":52, "avoidance":52, "reacted":52, "twenties":52, "champ":52, "shrubs":52, "drastically":52, "swore":52, "jerked":52, "apron":52, "subscale":52, "smoked":52, "sacrifices":52, "salads":52, "automotive":52, "confidentiality":52, "fatty":52, "envy":52, "accumulation":52, "misconduct":52, "echoed":52, "clicked":52, "groundwater":52, "gunfire":52, "disadvantaged":52, "subscales":52, "triggered":52, "outward":52, "duo":52, "decoration":52, "anguish":52, "eccentric":52, "flakes":52, "cough":52, "liner":52, "appraisal":52, "catfish":52, "consolidation":52, "accuse":52, "demeanor":52, "uncovered":52, "phony":52, "dizzy":52, "one-year":52, "presbyterian":52, "submarine":52, "rhythmic":52, "props":52, "citrus":52, "catholicism":52, "conceal":52, "thinner":52, "negotiated":52, "mapping":52, "majesty":52, "celebrates":52, "straightened":52, "airways":52, "crater":52, "disposition":52, "don":52, "sweaty":52, "guarantees":52, "exhaust":52, "collegiate":52, "straps":52, "underwater":52, "utter":52, "exceptionally":52, "pals":52, "paranoid":52, "dams":52, "quoting":52, "pumping":52, "censorship":52, "amazingly":52, "prompting":52, "clout":52, "inaccurate":52, "prostitutes":52, "astronomer":52, "makeshift":52, "commercially":52, "pudding":52, "ponds":52, "aquarium":52, "ore":53, "first-time":53, "crusade":53, "membrane":53, "reactors":53, "bitterly":53, "acquaintance":53, "containment":53, "retained":53, "banning":53, "indicted":53, "professions":53, "equations":53, "roared":53, "bust":53, "in-depth":53, "acquisitions":53, "nuisance":53, "bankrupt":53, "manufactured":53, "crumbling":53, "lodging":53, "therapies":53, "vegetarian":53, "unrealistic":53, "contentious":53, "deter":53, "open-ended":53, "vase":53, "storytelling":53, "poisoning":53, "trader":53, "rejecting":53, "plateau":53, "noodles":53, "vengeance":53, "diversion":53, "reproduce":53, "playwright":53, "textual":53, "three-quarters":53, "piled":53, "constituency":53, "sibling":53, "prominence":53, "prosecute":53, "covert":53, "discrepancy":53, "famine":53, "mixer":53, "burns":53, "vendor":53, "pianist":53, "guerrillas":53, "discouraged":53, "captures":53, "windy":53, "landfill":53, "fronts":53, "tenant":53, "cracked":53, "influx":53, "burdens":53, "racks":53, "rails":53, "peaches":53, "vineyard":53, "undergone":53, "bidding":53, "longevity":53, "frying":53, "textiles":53, "stereotype":53, "centerpiece":53, "exhibited":53, "purity":53, "transmitted":53, "bedside":53, "perennial":53, "nun":53, "mattered":53, "coding":53, "freshwater":53, "amusing":53, "intuitive":53, "aerobic":53, "catalyst":53, "wreckage":53, "retrospective":53, "freight":53, "cloak":53, "arbitration":53, "outspoken":53, "perpetual":53, "kitchens":53, "candidacy":53, "feeds":53, "intently":53, "juicy":53, "exercised":53, "plumbing":53, "slam":53, "farmhouse":53, "aerospace":53, "pilgrims":53, "endorsed":53, "rescued":53, "fulfillment":53, "plywood":53, "internally":53, "paycheck":53, "napkin":53, "exploding":53, "jammed":53, "accommodation":53, "raining":53, "resorts":53, "punk":53, "organizer":53, "platforms":53, "grated":53, "bore":53, "isolate":53, "dementia":53, "unchanged":53, "mock":53, "envision":53, "offset":53, "sorting":53, "lowers":53, "spit":53, "abrupt":53, "celestial":53, "congestion":53, "exceeds":53, "condemn":53, "pluralism":53, "commonplace":53, "nucleus":53, "asbestos":53, "delightful":53, "defiance":53, "scratching":53, "regimen":53, "rampant":53, "stirred":53, "cleansing":53, "harvesting":53, "devils":53, "researching":53, "stresses":53, "leaks":53, "obliged":53, "apparel":53, "ceramics":53, "humming":53, "cylinder":53, "impaired":53, "retaining":53, "wakes":53, "discounts":53, "buddhist":53, "hugging":53, "richness":53, "furnishings":53, "vine":53, "attracts":53, "transported":53, "scissors":53, "librarian":53, "descend":53, "tasting":53, "minced":53, "cube":53, "crush":53, "bowed":53, "plum":53, "dorm":53, "raids":53, "nickel":53, "commands":53, "sewing":53, "births":53, "mentioning":53, "finishes":53, "jersey":53, "arabic":53, "lest":53, "ancestral":53, "endlessly":53, "competencies":53, "guru":53, "addict":53, "railway":53, "heroine":53, "allergic":53, "arranging":53, "coating":53, "fractures":53, "scramble":53, "yearly":53, "excerpts":53, "tan":53, "crystals":53, "bourgeois":53, "gig":53, "factual":53, "radicals":53, "composting":53, "universally":53, "reconcile":53, "splitting":53, "influencing":53, "reinforcement":53, "bracelet":53, "barren":53, "tasted":53, "rabbits":53, "intrigued":53, "punched":53, "scanned":53, "floods":53, "proficiency":53, "butcher":53, "dial":53, "compositions":53, "exemption":53, "uninsured":53, "cloning":53, "commissioned":53, "barking":53, "punitive":53, "gin":53, "relaxing":53, "amused":53, "spurs":53, "doom":53, "drizzle":53, "stain":53, "cross-country":53, "rogue":53, "flats":53, "ledge":53, "avenues":53, "devastation":53, "authoritative":53, "serum":53, "brutality":53, "capacities":53, "chatting":53, "induce":53, "competitions":53, "rib":53, "flashes":53, "pavilion":53, "sleeps":53, "cooks":53, "monastery":53, "outfits":53, "nightly":53, "administer":53, "scraps":53, "rag":53, "parenthood":53, "forefront":53, "weaken":53, "luxurious":53, "aligned":53, "enhancement":53, "conform":53, "permitting":53, "greatness":53, "prescribed":53, "financed":53, "opposes":53, "editions":53, "pulp":53, "cleaner":53, "saudis":53, "aboriginal":53, "academically":53, "disks":53, "camel":53, "dynasty":53, "cavity":53, "appendix":53, "assortment":53, "trusted":53, "mundane":53, "jointly":53, "suing":53, "wrinkles":53, "pneumonia":53, "mint":53, "cooler":53, "balloons":53, "addicts":53, "gravy":53, "resisted":53, "amenities":53, "estates":53, "deregulation":53, "intellectually":53, "facade":53, "handkerchief":53, "reacting":53, "incidentally":53, "pioneering":53, "lobbyist":53, "curry":53, "separates":53, "plagued":53, "volunteered":53, "curly":53, "deviations":53, "yeast":53, "assign":53, "fluorescent":53, "banging":53, "rig":53, "motherhood":53, "symposium":53, "kaiser":53, "admittedly":53, "disparate":53, "postseason":53, "poking":53, "chops":53, "designation":53, "three-dimensional":53, "invent":53, "fallout":53, "circled":53, "pesticide":53, "sophistication":53, "menus":53, "jasmine":53, "irresistible":53, "unanimous":53, "incumbent":53, "socialization":53, "censored":53, "depended":53, "dealings":53, "cruiser":53, "detained":53, "tattoos":53, "bursting":53, "assisting":53, "concession":53, "pours":53, "intimidating":53, "novice":53, "fragrance":53, "depressing":53, "awoke":53, "suites":53, "auditory":53, "award-winning":53, "expansive":53, "transferring":53, "protesting":53, "pleasing":53, "salient":53, "turbine":53, "prohibited":53, "chew":53, "on-site":53, "tidal":53, "provoke":53, "pounded":53, "leaking":53, "experimentation":53, "burgers":53, "spaghetti":53, "maritime":53, "algorithm":53, "outright":53, "herbal":53, "tremendously":53, "footing":53, "continuation":53, "depict":53, "generators":53, "offender":53, "judaism":53, "obsolete":53, "bounds":53, "shortcomings":53, "governed":53, "clicking":53, "precautions":53, "goodwill":53, "abandoning":53, "unite":53, "strand":53, "resilience":53, "loosen":53, "pilgrim":53, "straighten":53, "maverick":53, "aye":53, "deviation":53, "diced":53, "stimulating":53, "coordinating":53, "caffeine":53, "regiment":53, "last-minute":53, "calculating":53, "striving":53, "visionary":53, "signatures":53, "gravitational":53, "welcoming":53, "stray":53, "deception":53, "lawns":53, "equilibrium":53, "pat":53, "rinse":53, "foreground":53, "whispers":53, "adherence":53, "persuaded":53, "mentions":53, "desks":53, "fingernails":53, "instinctively":53, "tracing":53, "barefoot":53, "crossroads":53, "granddaughter":53, "deprivation":53, "pearls":53, "kuwaiti":53, "dangerously":53, "uncover":53, "assimilation":53, "anthropologists":53, "crept":53, "agendas":53, "dysfunction":53, "islamist":53, "wonderfully":53, "plead":53, "pilgrimage":53, "seeming":53, "ripping":53, "prudent":53, "relay":53, "enjoyable":53, "resolving":53, "bets":53, "inner-city":53, "preoccupied":53, "labeling":53, "embryos":53, "indispensable":53, "wrongdoing":53, "homosexuals":53, "untouched":53, "lavish":53, "processed":53, "motionless":53, "characterization":53, "greeks":53, "downside":53, "scripts":53, "benches":53, "bail":53, "orchard":53, "hints":53, "singular":53, "worthless":53, "choking":53, "deterioration":53, "ceremonial":53, "tumbling":53, "mates":53, "crackdown":53, "spiral":53, "terrestrial":53, "locus":53, "tester":53, "erase":53, "sensibility":53, "wisely":53, "await":53, "strapped":53, "fools":53, "wastewater":53, "neglected":53, "staple":53, "nostrils":53, "pirate":53, "startled":53, "aesthetics":53, "constellation":53, "barracks":53, "trainers":53, "rainfall":53, "evidenced":53, "greedy":53, "glamour":53, "destinations":53, "capita":53, "monk":53, "articulated":53, "royalty":53, "rushes":53, "italians":53, "insignificant":53, "late-night":53, "oriental":53, "diving":53, "chick":53, "precinct":53, "winding":53, "numb":53, "upgrade":53, "capsule":53, "experimenting":53, "atrocities":53, "flowering":53, "cramped":53, "outgoing":53, "intuition":53, "blooms":53, "metabolism":53, "kisses":53, "long-range":53, "brushes":53, "pupil":53, "pineapple":53, "hauling":53, "unsafe":53, "porn":53, "slows":53, "frail":53, "blueprint":53, "predictive":53, "strode":53, "quartet":53, "leaped":53, "rum":53, "satin":53, "romans":53, "ecstasy":53, "at-risk":53, "purchasing":53, "carts":53, "fluctuations":53, "optics":53, "hue":53, "cheat":53, "attracting":53, "envisioned":53, "canceled":53, "spokesperson":53, "ballroom":53, "lifestyles":53, "affiliate":53, "discrete":53, "alcoholism":53, "brisk":53, "carve":53, "helm":53, "specifications":53, "outbreaks":53, "renew":53, "bedtime":53, "thriller":53, "symbolism":53, "meats":53, "calves":53, "attendants":53, "mafia":53, "ruined":53, "payoff":53, "stall":53, "fuckin":53, "dismay":53, "exchanged":53, "salty":53, "disagreements":53, "shivering":53, "sitcom":53, "bothers":53, "extinct":53, "limestone":53, "cookbook":53, "contemplating":53, "shines":53, "licensed":53, "robes":53, "preferably":53, "peacefully":53, "incorporates":53, "hastily":53, "puff":53, "indonesian":53, "locking":53, "phenomenal":53, "borrowed":53, "acoustic":53, "exert":53, "solemn":53, "transmit":53, "nope":53, "ex-wife":53, "garnish":53, "circuits":53, "martian":53, "terminology":53, "kidnapped":53, "bluff":53, "alleviate":53, "hysterical":53, "beverage":53, "arousal":53, "forty-five":53, "tolerant":53, "half-dozen":53, "grieving":53, "obstruction":53, "doubtful":53, "twenty-two":53, "jagged":53, "invade":53, "federally":53, "gripped":53, "overt":53, "sobbing":53, "subsidiary":53, "high-school":53, "conservatism":53, "displacement":53, "pear":53, "soared":53, "raging":53, "cove":53, "scant":54, "sweetness":54, "exceeded":54, "revolt":54, "creditors":54, "algae":54, "stint":54, "resisting":54, "obese":54, "blur":54, "microscope":54, "geese":54, "ethnographic":54, "dread":54, "intellect":54, "protocols":54, "nausea":54, "chalk":54, "arteries":54, "linger":54, "contender":54, "bony":54, "bloc":54, "utilization":54, "dividend":54, "motivations":54, "bonding":54, "psychosocial":54, "reelection":54, "pro-choice":54, "ostensibly":54, "flap":54, "motto":54, "tightening":54, "flooded":54, "stringent":54, "earthquakes":54, "muted":54, "multilateral":54, "noteworthy":54, "expanse":54, "tow":54, "restriction":54, "cultivation":54, "astronaut":54, "automakers":54, "clumsy":54, "shredded":54, "elegance":54, "psychologically":54, "belongings":54, "gala":54, "hurdles":54, "brochure":54, "sniper":54, "reassure":54, "bounty":54, "bursts":54, "clerks":54, "soaking":54, "propped":54, "gloom":54, "crescent":54, "dissertation":54, "fueled":54, "sexes":54, "commuter":54, "joked":54, "bothering":54, "ballpark":54, "wiring":54, "independents":54, "ordinance":54, "inadvertently":54, "guessing":54, "junction":54, "traction":54, "problem-solving":54, "accreditation":54, "proclaimed":54, "vantage":54, "complexities":54, "attribute":54, "certificates":54, "contaminated":54, "carving":54, "opaque":54, "fluids":54, "weddings":54, "billing":54, "enrichment":54, "perjury":54, "concedes":54, "dreadful":54, "puppet":54, "tracked":54, "replaces":54, "marsh":54, "rocking":54, "bliss":54, "excel":54, "persecution":54, "remotely":54, "breadth":54, "bullshit":54, "foreclosure":54, "recurring":54, "differentiate":54, "horseback":54, "hypertension":54, "discern":54, "world-class":54, "poked":54, "appropriations":54, "burgeoning":54, "jerk":54, "handwriting":54, "dj":54, "processors":54, "earns":54, "teller":54, "signaled":54, "one-way":54, "pits":54, "subsidy":54, "receptive":54, "mythology":54, "steaks":54, "almonds":54, "transnational":54, "victimization":54, "amazement":54, "chanting":54, "capitals":54, "foyer":54, "unfold":54, "sting":54, "abound":54, "bolster":54, "ceilings":54, "brewing":54, "spheres":54, "oriented":54, "irritation":54, "semantic":54, "melting":54, "rains":54, "shrugs":54, "needy":54, "twenty-one":54, "disparity":54, "commute":54, "scheduling":54, "placebo":54, "looming":54, "resumed":54, "plump":54, "deed":54, "anthropologist":54, "stepfather":54, "fingerprints":54, "unilateral":54, "formats":54, "woes":54, "tangled":54, "mortal":54, "hikes":54, "flipping":54, "leftover":54, "directory":54, "finite":54, "hearty":54, "deploy":54, "faintly":54, "clockwise":54, "collects":54, "jewels":54, "vet":54, "statutory":54, "midwestern":54, "offseason":54, "dads":54, "portfolios":54, "paramount":54, "rusty":54, "sulfur":54, "upbeat":54, "draped":54, "overcoming":54, "weakened":54, "scrape":54, "multitude":54, "condemned":54, "conceive":54, "coughing":54, "hebrew":54, "rosemary":54, "viral":54, "adhere":54, "evolving":54, "rite":54, "nicotine":54, "pharmacy":54, "cider":54, "drummer":54, "enforcing":54, "insecurity":54, "larvae":54, "unofficial":54, "co-workers":54, "bruises":54, "sesame":54, "mid-1980s":54, "evoke":54, "scouting":54, "sectarian":54, "murky":54, "descended":54, "ashore":54, "confuse":54, "canon":54, "covenant":54, "wasted":54, "one-on-one":54, "steaming":54, "implicitly":54, "rustic":54, "modernist":54, "advising":54, "exterior":54, "portrayal":54, "farmland":54, "legion":54, "rented":54, "masterpiece":54, "frost":54, "waterfront":54, "chlorine":54, "doubted":54, "correspond":54, "pollen":54, "sipped":54, "sloppy":54, "smelling":54, "drown":54, "congressmen":54, "stout":54, "ranchers":54, "impetus":54, "retreated":54, "candid":54, "alienation":54, "reside":54, "hardship":54, "mating":54, "crabs":54, "applaud":54, "thicker":54, "oversized":54, "peeling":54, "dumping":54, "occupations":54, "pillars":54, "pies":54, "mayonnaise":54, "protestants":54, "tags":54, "creations":54, "adrenaline":54, "eldest":54, "appoint":54, "humility":54, "heavenly":54, "grey":54, "unreasonable":54, "helmets":54, "populist":54, "holistic":54, "gram":54, "highlighted":54, "leaping":54, "greasy":54, "filmmakers":54, "emptiness":54, "knight":54, "endured":54, "racially":54, "lever":54, "ace":54, "kneeling":54, "arising":54, "shady":54, "knob":54, "decreases":54, "unhealthy":54, "statistic":54, "websites":54, "bracket":54, "sediment":54, "geared":54, "managerial":54, "interviewer":54, "vanguard":54, "bladder":54, "trailed":54, "insure":54, "caption":54, "self-confidence":54, "coma":54, "broom":54, "landowners":54, "smoky":54, "submission":54, "tavern":54, "cheers":54, "vapor":54, "malpractice":54, "pm":54, "consulted":54, "shareholder":54, "interpretive":54, "pediatric":54, "nests":54, "fetus":54, "ant":54, "floated":54, "bum":54, "fortress":54, "comics":54, "thumbs":54, "proprietary":54, "memoirs":54, "deficiency":54, "fundamentalist":54, "vault":54, "anticipating":54, "tongues":54, "twenty-first":54, "remedial":54, "strait":54, "tofu":54, "negotiators":54, "combustion":54, "powerless":54, "futile":54, "midday":54, "congregations":54, "manifestation":54, "enroll":54, "atom":54, "slamming":54, "prosecuted":54, "needless":54, "fares":54, "honoring":54, "ruthless":54, "sly":54, "ridges":54, "installations":54, "contracting":54, "distract":54, "merge":54, "settles":54, "downhill":54, "diners":54, "alphabet":54, "residency":54, "unthinkable":54, "snowy":54, "deficiencies":54, "exploratory":54, "sticker":54, "liaison":54, "comrades":54, "laps":54, "quarterbacks":54, "figs":54, "globally":54, "drills":54, "sprint":54, "bunk":54, "township":54, "contemplate":54, "swollen":54, "tilted":54, "centralized":54, "methodological":54, "straining":54, "coercion":54, "miraculous":54, "radios":54, "granny":54, "dismissal":54, "assaults":54, "bathing":54, "vinyl":54, "kits":54, "biomass":54, "fuss":54, "spared":54, "gothic":54, "simulations":54, "vividly":54, "three-day":54, "one-half":54, "discharged":54, "rectangular":54, "unmarried":54, "rethink":54, "dwell":54, "botanical":54, "hybrids":54, "accusation":54, "sterile":54, "golfers":54, "misunderstanding":54, "two-story":54, "trek":54, "skyline":54, "quiz":54, "buffer":54, "acculturation":54, "fleeting":54, "eyelids":54, "cushion":54, "anyhow":54, "cabins":54, "odyssey":54, "plunged":54, "updates":54, "advisors":54, "womb":54, "prostitute":54, "nanny":54, "hypocrisy":54, "regulating":54, "pens":54, "guitarist":54, "biscuits":54, "gunman":54, "cd-rom":54, "hesitant":54, "bully":54, "mileage":54, "televised":54, "yielding":54, "tugged":54, "diapers":54, "robotic":54, "tutoring":54, "necks":54, "baths":54, "norwegian":54, "dismal":54, "enforced":54, "stained":54, "silhouette":54, "two-way":54, "mahogany":54, "allowance":54, "taxation":54, "unnoticed":54, "furiously":54, "equals":54, "finale":54, "sirens":54, "willingly":54, "pony":54, "stakeholders":54, "steals":54, "console":54, "composers":54, "misguided":54, "luminous":54, "toddlers":54, "powdered":54, "reel":54, "haircut":54, "bearded":54, "allergies":54, "cubans":54, "converting":54, "inauguration":54, "shoreline":54, "specimen":54, "pathway":54, "numerical":54, "accumulate":54, "flaw":54, "yanked":54, "exodus":54, "blackness":54, "curricular":54, "attentive":54, "yourselves":54, "crackers":54, "surfing":54, "strengthened":54, "rattling":54, "broadcasts":54, "first-round":54, "minors":54, "subtly":54, "slab":54, "boycott":54, "eclectic":54, "flora":54, "havoc":54, "aroma":54, "state-of-the-art":54, "naming":54, "hawk":54, "psychiatry":54, "shimmering":54, "dysfunctional":54, "platinum":54, "metric":54, "squirrel":54, "residue":54, "contingency":54, "registry":54, "curled":54, "crashes":54, "pancakes":54, "digits":54, "trimmed":54, "bind":54, "shouts":54, "blizzard":54, "conspicuous":54, "usefulness":54, "tariffs":54, "horrors":54, "allegation":54, "receipt":54, "slap":54, "bottoms":54, "forearm":54, "dove":54, "specializing":54, "mounds":54, "apiece":54, "compliment":54, "disturb":54, "ensures":54, "inefficient":54, "parcel":54, "radiant":54, "alarms":54, "listings":54, "attainment":54, "promotional":54, "specified":54, "beasts":54, "colonists":54, "best-known":54, "plentiful":54, "blending":54, "slack":54, "thirties":54, "bearings":54, "inputs":54, "fishes":54, "dominates":54, "entails":54, "decor":54, "slots":54, "retains":54, "timeless":54, "petals":54, "snaps":54, "zip":54, "chargers":54, "formulas":54, "wallpaper":54, "ideologies":54, "nationality":54, "lighthouse":54, "surfaced":54, "peril":54, "prop":54, "ultraviolet":54, "militias":54, "diaries":54, "narcotics":54, "stuffing":54, "clutch":54, "disciples":54, "indicative":54, "imbalance":54, "herds":54, "additions":54, "speculative":54, "fifties":54, "atlas":54, "occupying":54, "shadowy":54, "apprentice":54, "spiders":54, "receipts":54, "hairy":54, "enhances":54, "cradle":54, "expenditure":54, "kinda":54, "nutrient":54, "vicinity":54, "diploma":54, "preseason":54, "antibiotic":54, "socket":54, "expands":54, "sinister":54, "pacing":54, "fundraising":54, "disparities":54, "coyotes":54, "proactive":54, "supplying":54, "sidelines":54, "impulses":54, "pedestrian":54, "geometric":54, "insanity":54, "forecasts":54, "indulge":54, "interacting":54, "supermarkets":54, "distortion":54, "motif":54, "congresswoman":54, "somber":54, "banquet":54, "implant":54, "quotes":54, "marrow":54, "nighttime":54, "logistics":54, "doctorate":54, "mashed":54, "groaned":54, "darkened":54, "contemporaries":54, "transcript":54, "adjustable":54, "synagogue":54, "shattered":54, "microscopic":54, "faction":54, "menace":54, "squinted":54, "moss":54, "cohesion":54, "ensuing":54, "pajamas":54, "hip-hop":54, "dropout":54, "rotate":54, "ventilation":54, "moons":54, "sums":54, "inclination":54, "aspiring":54, "gatherings":54, "pictured":54, "evangelicals":54, "twisting":54, "heavyweight":54, "auditors":54, "defiant":54, "co-founder":54, "keeper":54, "influenza":54, "plainly":54, "good-looking":54, "hallmark":54, "sanitation":54, "intimately":54, "resent":54, "flung":54, "zucchini":54, "ordinarily":54, "dared":54, "affiliated":54, "positioning":54, "switching":54, "latitude":54, "twenty-three":54, "uniformed":54, "validation":54, "prom":54, "backcountry":54, "testosterone":54, "imperative":55, "fostering":55, "understandings":55, "comprise":55, "iconic":55, "drained":55, "vibration":55, "jihad":55, "modernism":55, "manipulated":55, "unnatural":55, "breaths":55, "overlap":55, "abstraction":55, "meager":55, "paints":55, "good-bye":55, "marshal":55, "resembling":55, "embodied":55, "poignant":55, "prominently":55, "constituted":55, "blockbuster":55, "sequel":55, "trailers":55, "floats":55, "supplemental":55, "stale":55, "woven":55, "abdomen":55, "subordinate":55, "radius":55, "biotechnology":55, "trendy":55, "clearance":55, "hegemony":55, "homers":55, "comets":55, "awakened":55, "slippers":55, "benchmark":55, "burnout":55, "sparked":55, "compromised":55, "coated":55, "starvation":55, "forums":55, "fridays":55, "assorted":55, "pertinent":55, "oppressive":55, "runaway":55, "timetable":55, "tyranny":55, "explorers":55, "thy":55, "skier":55, "bathtub":55, "equitable":55, "pe":55, "coordinated":55, "disposable":55, "manifestations":55, "mortar":55, "scarcity":55, "orbital":55, "eggplant":55, "devised":55, "tidy":55, "visibly":55, "beware":55, "derives":55, "convergence":55, "hop":55, "sustaining":55, "regrets":55, "dipping":55, "convoy":55, "festive":55, "announcements":55, "subscription":55, "chimney":55, "lantern":55, "platoon":55, "lunches":55, "intimidation":55, "abbey":55, "forgiven":55, "riches":55, "translucent":55, "beetle":55, "enact":55, "fetal":55, "osteoporosis":55, "tipped":55, "asshole":55, "gamma":55, "decree":55, "establishes":55, "unconventional":55, "unto":55, "touring":55, "shuts":55, "falcon":55, "hosted":55, "signaling":55, "rounded":55, "warden":55, "imprisoned":55, "insofar":55, "landmarks":55, "overseeing":55, "year-old":55, "correspondents":55, "nodes":55, "echoes":55, "scarlet":55, "alcoholic":55, "ballistic":55, "pests":55, "fossils":55, "whining":55, "mailed":55, "nightclub":55, "reconsider":55, "showdown":55, "newcomer":55, "coronary":55, "nonexistent":55, "hamburger":55, "clocks":55, "latinos":55, "forge":55, "rash":55, "anchored":55, "neural":55, "rejects":55, "boutique":55, "toasted":55, "tosses":55, "unmistakable":55, "addictive":55, "commanded":55, "spikes":55, "molecule":55, "possesses":55, "analogous":55, "mural":55, "exaggerated":55, "replies":55, "cost-effective":55, "boulders":55, "notebooks":55, "garrison":55, "informants":55, "complains":55, "tending":55, "slapping":55, "authorization":55, "grouping":55, "genres":55, "servers":55, "seductive":55, "hygiene":55, "altering":55, "invitations":55, "deserted":55, "digs":55, "checklist":55, "appealed":55, "divisive":55, "doubles":55, "cultivate":55, "allocated":55, "unintended":55, "postcard":55, "ex":55, "treadmill":55, "sucked":55, "cosmetics":55, "pastors":55, "disdain":55, "erupted":55, "abide":55, "bulky":55, "pro-life":55, "hospice":55, "conceded":55, "tier":55, "chicks":55, "drake":55, "corpses":55, "denim":55, "outing":55, "revisions":55, "community-based":55, "motifs":55, "careless":55, "counters":55, "legislatures":55, "scans":55, "nebula":55, "devoid":55, "co-author":55, "sane":55, "lame":55, "decorations":55, "golfer":55, "abs":55, "snorted":55, "bicycles":55, "transcripts":55, "limo":55, "enzymes":55, "complement":55, "knuckles":55, "dilemmas":55, "antenna":55, "egyptians":55, "depiction":55, "cured":55, "conceptions":55, "manure":55, "vouchers":55, "browser":55, "markedly":55, "contingent":55, "replicate":55, "incompetent":55, "abandonment":55, "firefighter":55, "outdated":55, "imperfect":55, "pillar":55, "unification":55, "undocumented":55, "nurturing":55, "tug":55, "examinations":55, "screws":55, "monarchy":55, "landings":55, "plotting":55, "unavailable":55, "backbone":55, "amidst":55, "acknowledgment":55, "cumin":55, "promotions":55, "barber":55, "abstinence":55, "escalating":55, "memorandum":55, "amounted":55, "frustrations":55, "easing":55, "midway":55, "paired":55, "unpaid":55, "confessions":55, "directive":55, "emergencies":55, "obscene":55, "burner":55, "contextual":55, "pest":55, "voltage":55, "palpable":55, "accents":55, "utilizing":55, "mobilize":55, "suppression":55, "sculptor":55, "squarely":55, "storing":55, "fluffy":55, "barred":55, "swaying":55, "seventies":55, "shivered":55, "pessimistic":55, "eyed":55, "artifact":55, "comparatively":55, "predicament":55, "apologies":55, "self-conscious":55, "winters":55, "spies":55, "orientations":55, "formulated":55, "fumes":55, "fast-food":55, "crib":55, "nonstick":55, "fluency":55, "flurry":55, "decorate":55, "sublime":55, "quota":55, "torque":55, "immoral":55, "pea":55, "manuscripts":55, "arenas":55, "jurisdictions":55, "mobilization":55, "chile":55, "vanish":55, "reinforcing":55, "preach":55, "succeeds":55, "secretaries":55, "packets":55, "comprised":55, "cynicism":55, "crawled":55, "mayors":55, "homelessness":55, "pecans":55, "mitigation":55, "grassy":55, "forgiving":55, "staffing":55, "patronage":55, "turbulent":55, "graphs":55, "corrected":55, "lineage":55, "deduction":55, "brittle":55, "stealth":55, "avoids":55, "two-hour":55, "requesting":55, "continual":55, "blaze":55, "rugs":55, "seasoning":55, "hungarian":55, "valves":55, "pledged":55, "invaded":55, "vigor":55, "mumbled":55, "downstream":55, "wooded":55, "gait":55, "pedagogical":55, "perceptual":55, "confines":55, "incremental":55, "bazaar":55, "suns":55, "witnessing":55, "defect":55, "cruises":55, "pathogens":55, "hotter":55, "ducked":55, "poisonous":55, "ambivalence":55, "carpenter":55, "carnival":55, "madam":55, "biotech":55, "forbid":55, "presume":55, "disproportionate":55, "bloom":55, "unpublished":55, "superpower":55, "accessibility":55, "springer":55, "sailed":55, "savage":55, "pumped":55, "tuning":55, "coordinates":55, "bud":55, "transformations":55, "pedal":55, "ethiopian":55, "restricting":55, "wept":55, "mats":55, "turks":55, "invaluable":55, "sensational":55, "taut":55, "advertisement":55, "harvested":55, "proxy":55, "marxist":55, "short-lived":55, "troublesome":55, "homage":55, "wrath":55, "clad":55, "tenor":55, "sunscreen":55, "thoughtfully":55, "subsistence":55, "advertise":55, "setback":55, "illusions":55, "displaced":55, "flute":55, "undertaking":55, "clashes":55, "quarterly":55, "imprisonment":55, "roast":55, "eighties":55, "ghetto":55, "fungus":55, "unanswered":55, "serene":55, "divert":55, "emerald":55, "distributions":55, "thrilling":55, "incompatible":55, "anthem":55, "divinity":55, "portuguese":55, "fledgling":55, "lurking":55, "modern-day":55, "reap":55, "chord":55, "estimation":55, "controllers":55, "reminders":55, "snatched":55, "obedience":55, "pouch":55, "homestead":55, "forestry":55, "rocked":55, "moods":55, "paralysis":55, "inflammatory":55, "recount":55, "depart":55, "speedy":55, "uncertainties":55, "angular":55, "flank":55, "cucumber":55, "hilarious":55, "conquer":55, "contenders":55, "proportional":55, "intern":55, "hydraulic":55, "relational":55, "exemplary":55, "reins":55, "glaze":55, "multiply":55, "alternatively":55, "intrusion":55, "innate":55, "selves":55, "stylist":55, "dragons":55, "uphold":55, "horizons":55, "referrals":55, "topping":55, "unfairly":55, "archive":55, "asserting":55, "overhaul":55, "mailing":55, "shipments":55, "discs":55, "reefs":55, "scientifically":55, "humorous":55, "repetitive":55, "archaeologist":55, "brutally":55, "hissed":55, "differentiation":55, "broaden":55, "surrogate":55, "blames":55, "mimic":55, "mailbox":55, "neurological":55, "sluggish":55, "forceful":55, "accountants":55, "competency":55, "undermining":55, "mantra":55, "seventeenth":55, "mormon":55, "jordanian":55, "faulty":55, "resilient":55, "powered":55, "appropriation":55, "nafta":55, "detailing":55, "distributing":55, "strategically":55, "borrowers":55, "bland":55, "discovers":55, "handicap":55, "explodes":55, "workings":55, "scrambled":55, "slump":55, "recounts":55, "panting":55, "sniffed":55, "stationary":55, "probes":55, "betrayed":55, "whipped":55, "thirsty":55, "colder":55, "shuddered":55, "forks":55, "undecided":55, "taped":55, "billboard":55, "compose":55, "hardwood":55, "booths":55, "sensual":55, "stalking":55, "formations":55, "catalogs":55, "goin":55, "haunted":55, "muster":55, "surreal":55, "glittering":55, "decreasing":55, "mini":55, "luncheon":55, "groom":55, "embryonic":55, "periphery":55, "handicapped":55, "crossfire":55, "modules":55, "margarine":55, "awkwardly":55, "tortured":55, "civilizations":55, "favorably":55, "handmade":55, "swallowing":55, "mum":55, "inlet":55, "triumphant":55, "inception":55, "tumbled":55, "discontent":55, "discriminate":55, "leaps":55, "flourish":55, "affinity":55, "anthropological":55, "collaborate":55, "buckets":55, "thermometer":55, "breathtaking":55, "acquaintances":55, "moratorium":55, "accumulated":55, "obsessive":55, "rob":55, "stroked":55, "persuasion":55, "incarnation":55, "discourses":55, "ukrainian":55, "implied":55, "earthly":55, "tablets":55, "colombian":55, "widen":55, "journalistic":55, "depressive":55, "fragmented":55, "casualty":55, "rallies":55, "escort":55, "varsity":55, "nigerian":55, "fungi":55, "notoriously":55, "lends":55, "dissolved":55, "gloomy":55, "fixtures":55, "stabilization":55, "strides":55, "screenplay":55, "scanner":55, "preoccupation":55, "in-house":55, "improvisation":55, "venerable":55, "ramifications":55, "witty":55, "flux":55, "wig":55, "patriarchal":55, "gasping":55, "interiors":55, "heirs":55, "devise":55, "strewn":55, "precarious":55, "undo":55, "nurture":55, "gathers":55, "edible":55, "flips":55, "thee":55, "menopause":55, "choral":55, "cling":55, "audible":55, "monstrous":55, "attributable":55, "present-day":55, "fragment":55, "cape":55, "cages":55, "colonization":55, "chased":55, "unbearable":55, "queens":55, "docks":55, "drying":55, "gaping":55, "anecdotal":55, "closeness":55, "enthusiastically":55, "beverages":55, "reciprocal":55, "belgian":55, "mole":55, "adept":55, "informing":55, "blessings":55, "verses":55, "predatory":55, "light-years":55, "strung":55, "deterrent":55, "seizure":55, "colonialism":55, "fennel":55, "behaving":55, "operative":55, "glowed":55, "billionaire":55, "cerebral":55, "fugitive":55, "interceptions":55, "risking":55, "honorary":55, "extraction":55, "woo":55, "cactus":55, "mariners":55, "updated":55, "exploited":55, "documenting":55, "inhabit":55, "locating":55, "cocktails":55, "for-profit":55, "adapting":55, "portal":55, "cloudy":55, "tattered":55, "bedding":55, "aided":55, "manufacture":55, "highs":55, "contours":55, "padres":55, "nearing":55, "pleasantly":55, "brother-in-law":55, "staffer":55, "trenches":55, "leftist":55, "self-defense":55, "termination":55, "adoptive":55, "grouped":55, "all-american":55, "siren":55, "receptionist":55, "confirming":55, "cornerback":55, "zinc":55, "lofty":55, "telephones":55, "shrug":55, "loops":55, "cassette":55, "ape":55, "totaling":56, "rust":56, "wagons":56, "electronically":56, "staging":56, "sixteenth":56, "unresolved":56, "punching":56, "compromises":56, "booster":56, "swords":56, "rites":56, "fielder":56, "ceased":56, "halves":56, "sweetie":56, "abdominal":56, "prehistoric":56, "printers":56, "chatter":56, "disproportionately":56, "tortillas":56, "immensely":56, "buds":56, "portrays":56, "retarded":56, "decks":56, "narration":56, "defy":56, "guarding":56, "furnace":56, "exits":56, "skeptics":56, "pursuits":56, "shampoo":56, "illuminate":56, "evergreen":56, "robbed":56, "remorse":56, "backseat":56, "inventor":56, "nominal":56, "coded":56, "bustling":56, "attends":56, "disapproval":56, "pantry":56, "qualifying":56, "vent":56, "royals":56, "skipping":56, "extras":56, "prescribe":56, "objectivity":56, "undergraduates":56, "blah":56, "crammed":56, "gymnastics":56, "metaphysical":56, "euro":56, "researched":56, "scratched":56, "coworkers":56, "waterfall":56, "physiology":56, "enthusiasts":56, "informative":56, "assertions":56, "leapt":56, "dissatisfied":56, "weaving":56, "quaint":56, "elicit":56, "renting":56, "frowning":56, "extensions":56, "coarsely":56, "favoring":56, "toilets":56, "lesions":56, "scoop":56, "sponsorship":56, "thugs":56, "bison":56, "fulfilled":56, "watery":56, "municipalities":56, "highlighting":56, "urges":56, "recollection":56, "summarized":56, "deductions":56, "yugoslav":56, "pinpoint":56, "ponder":56, "wrinkled":56, "unused":56, "summoned":56, "brows":56, "intolerance":56, "subdivision":56, "toxins":56, "pausing":56, "resurgence":56, "villain":56, "unequal":56, "collateral":56, "garments":56, "captivity":56, "microbes":56, "understandably":56, "draining":56, "ornate":56, "encompasses":56, "passionately":56, "sincerely":56, "fixture":56, "dwelling":56, "hurdle":56, "wipes":56, "haunt":56, "trays":56, "constituencies":56, "ornaments":56, "roasting":56, "rouge":56, "bisexual":56, "sludge":56, "crushing":56, "staged":56, "emeritus":56, "vogue":56, "linkage":56, "gracefully":56, "anew":56, "screened":56, "aunts":56, "gal":56, "monarch":56, "latent":56, "behaviour":56, "advocated":56, "booked":56, "conserve":56, "soundtrack":56, "methane":56, "multivariate":56, "beforehand":56, "long-time":56, "stylistic":56, "vineyards":56, "beetles":56, "turbines":56, "arid":56, "streaks":56, "viability":56, "superiors":56, "uncles":56, "clicks":56, "orphans":56, "masculinity":56, "self-interest":56, "quieter":56, "erected":56, "plank":56, "funky":56, "scatter":56, "herring":56, "twain":56, "steroid":56, "perverse":56, "subscribe":56, "murderers":56, "adversaries":56, "pentagon":56, "collaborators":56, "crate":56, "suffice":56, "condemnation":56, "detecting":56, "analog":56, "anti-semitism":56, "warranty":56, "majestic":56, "surgeries":56, "juries":56, "duct":56, "yen":56, "sparse":56, "underestimate":56, "facilitating":56, "callers":56, "deli":56, "harness":56, "binary":56, "contrasting":56, "graveyard":56, "westerners":56, "time-consuming":56, "twists":56, "upbringing":56, "manifest":56, "syndicated":56, "reviewers":56, "patrols":56, "heater":56, "dominating":56, "generously":56, "tides":56, "orthodoxy":56, "partition":56, "puree":56, "brilliantly":56, "brilliance":56, "visas":56, "clinicians":56, "unanimously":56, "wired":56, "bathrooms":56, "plaid":56, "ascent":56, "walnuts":56, "sponge":56, "conditioner":56, "bullpen":56, "pears":56, "deacon":56, "zeal":56, "erratic":56, "kindly":56, "life-threatening":56, "pathology":56, "misty":56, "churning":56, "narrowed":56, "cords":56, "orbits":56, "verb":56, "buttermilk":56, "commenting":56, "widening":56, "imitate":56, "complexion":56, "presses":56, "diarrhea":56, "evokes":56, "principally":56, "generalized":56, "dryer":56, "ivy":56, "diffusion":56, "humiliating":56, "progressively":56, "identifiable":56, "snapshot":56, "meltdown":56, "pastel":56, "neurons":56, "occupies":56, "eliminates":56, "circulating":56, "heartland":56, "cellphone":56, "nationalists":56, "tolerated":56, "morals":56, "moderates":56, "dope":56, "disturbances":56, "recurrent":56, "mindful":56, "enrich":56, "hysteria":56, "hostess":56, "metabolic":56, "casket":56, "stressors":56, "downright":56, "manageable":56, "originated":56, "tangle":56, "apprehension":56, "preferable":56, "skipped":56, "delicately":56, "parallels":56, "testifying":56, "watchers":56, "envoy":56, "relentlessly":56, "constrained":56, "stickers":56, "mergers":56, "cadets":56, "undermined":56, "suspend":56, "seams":56, "oatmeal":56, "halo":56, "cones":56, "centennial":56, "verification":56, "bipolar":56, "disgrace":56, "electromagnetic":56, "pageant":56, "dearly":56, "drowned":56, "onboard":56, "familial":56, "boulder":56, "shortstop":56, "plastics":56, "marketed":56, "expelled":56, "publishes":56, "shaving":56, "perch":56, "individualism":56, "tablet":56, "billed":56, "cursing":56, "magician":56, "surrounds":56, "dwindling":56, "grind":56, "pictorial":56, "sheikh":56, "mediocre":56, "presumption":56, "pricey":56, "paradoxically":56, "youngster":56, "detrimental":56, "padded":56, "parchment":56, "oracle":56, "modeled":56, "resides":56, "anxiously":56, "humankind":56, "amateurs":56, "hikers":56, "cherries":56, "trustee":56, "breathless":56, "decency":56, "bikini":56, "frontal":56, "peruvian":56, "glucose":56, "admirable":56, "repeats":56, "twentieth-century":56, "extravagant":56, "hitters":56, "oscars":56, "fieldwork":56, "assurances":56, "paranoia":56, "bends":56, "boldly":56, "notwithstanding":56, "bewildered":56, "enlightened":56, "hum":56, "fades":56, "reclaim":56, "viewpoints":56, "rents":56, "railroads":56, "bypass":56, "unsalted":56, "caregiver":56, "disgusted":56, "watering":56, "gem":56, "perpetrators":56, "growled":56, "induction":56, "murdering":56, "reverence":56, "cascade":56, "stalls":56, "parishioners":56, "coroner":56, "fry":56, "exposition":56, "sod":56, "forcefully":56, "humid":56, "hunched":56, "hovered":56, "establishments":56, "flea":56, "creepy":56, "symmetry":56, "coherence":56, "tenet":56, "blackberry":56, "transcribed":56, "taiwanese":56, "adventurous":56, "tentatively":56, "rosy":56, "barrage":56, "endeavors":56, "roaring":56, "rags":56, "tempo":56, "notation":56, "sock":56, "boosting":56, "assisted":56, "big-time":56, "pundits":56, "shave":56, "pulpit":56, "coastline":56, "austrian":56, "whore":56, "distrust":56, "blasting":56, "standoff":56, "hog":56, "raisins":56, "prompt":56, "reinforces":56, "excluding":56, "nostalgic":56, "sinks":56, "sails":56, "scam":56, "spitting":56, "blinding":56, "suggestive":56, "maneuver":56, "continents":56, "ponytail":56, "amen":56, "mother-in-law":56, "expeditions":56, "eloquent":56, "small-town":56, "croatian":56, "sneaking":56, "clientele":56, "notch":56, "quirky":56, "unreliable":56, "dignified":56, "swap":56, "cartel":56, "airy":56, "dine":56, "sociological":56, "ancestry":56, "gorge":56, "parishes":56, "culprit":56, "insecure":56, "backstage":56, "ipod":56, "lad":56, "implying":56, "pertaining":56, "waterproof":56, "after-school":56, "wicker":56, "afghans":56, "hepatitis":56, "memorabilia":56, "bids":56, "typing":56, "sentencing":56, "survives":56, "darkest":56, "biased":56, "booze":56, "transient":56, "specificity":56, "exploiting":56, "tedious":56, "awakening":56, "armchair":56, "real-time":56, "unspoken":56, "formulate":56, "leafy":56, "stockings":56, "berth":56, "awaits":56, "upstate":56, "sweaters":56, "envelopes":56, "nutmeg":56, "grasping":56, "repay":56, "courtship":56, "y'all":56, "pipelines":56, "persists":56, "outstretched":56, "real-world":56, "fragmentation":56, "outpatient":56, "conceivable":56, "safest":56, "restoring":56, "stains":56, "unauthorized":56, "bottled":56, "semiconductor":56, "liturgy":56, "weep":56, "footprints":56, "adversary":56, "turkeys":56, "cushions":56, "sushi":56, "hauled":56, "reimbursement":56, "oregano":56, "ailing":56, "lingered":56, "flapping":56, "fraternity":56, "quicker":56, "dislike":56, "cornerstone":56, "lore":56, "succeeding":56, "withdrawing":56, "consolation":56, "unjust":56, "ancestor":56, "avocado":56, "violates":56, "adorable":56, "quitting":56, "drifts":56, "yells":56, "switches":56, "propulsion":56, "conducts":56, "dolphin":56, "exceeding":56, "disciplined":56, "ecstatic":56, "imagines":56, "assembling":56, "happiest":56, "rotating":56, "affirmation":56, "vocation":56, "librarians":56, "manipulating":56, "wedges":56, "bingo":56, "micro":56, "eruption":56, "allergy":56, "stillness":56, "oasis":56, "din":56, "homeowner":56, "cheerfully":56, "prohibits":56, "dent":56, "professionalism":56, "horsepower":56, "bouquet":56, "x-rays":56, "groove":56, "provisional":56, "donkey":56, "ecumenical":56, "tease":56, "divergent":56, "copying":56, "aw":56, "mosques":56, "tragedies":56, "empower":56, "dye":56, "third-party":56, "quarry":56, "cyberspace":56, "thematic":56, "enzyme":56, "ambivalent":56, "outpost":56, "aspen":56, "unveiled":56, "distinguishes":56, "attire":56, "funerals":56, "sprigs":56, "recurrence":56, "mastered":56, "poke":56, "inexperienced":56, "slogans":56, "biases":56, "gunmen":56, "thursdays":56, "squirrels":56, "adobe":56, "savior":56, "template":56, "caste":56, "wraps":56, "piercing":56, "handgun":56, "informant":56, "meteor":56, "sponsoring":56, "possessing":56, "dues":56, "incorporation":56, "owls":56, "mute":56, "regulars":56, "soles":56, "individuality":56, "fundamentalists":56, "plutonium":56, "looms":56, "tightened":56, "gadgets":56, "slacks":56, "improbable":56, "overboard":56, "looting":56, "newfound":56, "restraints":56, "orphan":56, "transplants":56, "freeing":56, "bleed":56, "aisles":56, "intrusive":56, "coaster":56, "diocese":56, "corresponds":56, "slowdown":56, "homogeneous":56, "arabian":56, "aching":56, "bye-bye":56, "prejudices":56, "pharmaceuticals":56, "commandments":56, "biting":56, "sprouts":56, "beau":56, "grueling":56, "finer":56, "clears":56, "hues":56, "bins":56, "ray":56, "miner":56, "acquainted":56, "rebuilt":56, "mammoth":56, "immortal":56, "canals":56, "capitalize":56, "offend":56, "undesirable":56, "orphanage":56, "treacherous":56, "strained":56, "spiritually":56, "makeover":56, "deliberations":56, "broadcasters":56, "divers":56, "glaring":56, "upheaval":56, "bookstores":56, "blue-collar":56, "distributors":56, "relocation":56, "kite":56, "cleaners":56, "cognition":56, "soar":56, "surveying":56, "hopping":56, "sanity":56, "intervening":56, "beige":56, "worldly":56, "unprotected":56, "contaminants":56, "appalling":56, "hideous":56, "competed":56, "accelerated":56, "pencils":56, "telegraph":56, "graphite":56, "self-reported":56, "programmed":56, "turbulence":56, "reacts":56, "lessen":56, "conducive":56, "backers":56, "rotting":56, "translating":56, "liberating":56, "induced":56, "inscription":56, "reeling":56, "evacuated":56, "stairway":56, "articulation":56, "whichever":56, "sharper":56, "interrupting":56, "racket":56, "specials":56, "creed":56, "mead":56, "divides":56, "huddled":56, "consolidate":56, "fundamentals":56, "franchises":56, "scotch":56, "piling":56, "festivities":56, "textures":56, "involuntary":56, "gritty":56, "exceedingly":56, "invoke":56, "simulate":56, "lids":56, "videotapes":56, "contestants":56, "pandemic":56, "simplistic":56, "gowns":56, "paws":56, "tracts":56, "titanium":56, "pedagogy":56, "contracted":56, "boarded":56, "mocking":56, "devout":56, "wealthiest":56, "jams":56, "prophecy":56, "woodlands":56, "characterizes":56, "clutched":56, "worldview":56, "synonymous":56, "overdue":56, "longstanding":56, "spilled":56, "ailments":56, "orbiting":56, "upwards":56, "blossom":56, "sucks":56, "gateway":56, "arches":56, "chestnut":56, "imperialism":56, "mango":56, "boasted":56, "frigid":56, "tenderness":56, "petite":56, "mogul":56, "precipitation":56, "hallways":56, "thirst":56, "banners":56, "anxieties":56, "fund-raiser":56, "academia":56, "outfielder":56, "prolific":56, "mitigate":56, "flickering":56, "specialties":56, "espionage":56, "indices":56, "glacier":56, "confinement":56, "programme":56, "smuggling":56, "sequential":56, "newsroom":56, "affirm":57, "foothills":57, "gunshot":57, "reactive":57, "anchorage":57, "lasers":57, "cad":57, "rationality":57, "multiculturalism":57, "shove":57, "phoned":57, "cricket":57, "housekeeping":57, "contraction":57, "baltic":57, "stumble":57, "infancy":57, "reorganization":57, "motorists":57, "far-reaching":57, "nonfiction":57, "excavation":57, "shabby":57, "righteous":57, "pediatrician":57, "arithmetic":57, "parachute":57, "nontraditional":57, "corpus":57, "asteroids":57, "diminishing":57, "frivolous":57, "clerical":57, "simulated":57, "trumpet":57, "cross-cultural":57, "eyewitness":57, "psychiatrists":57, "leukemia":57, "roam":57, "lighten":57, "moderation":57, "actresses":57, "wizards":57, "contraception":57, "billboards":57, "ignition":57, "halftime":57, "hen":57, "prenatal":57, "argentine":57, "deteriorating":57, "ardent":57, "discarded":57, "livelihood":57, "tabloids":57, "boast":57, "powerfully":57, "silky":57, "treasurer":57, "translations":57, "applicant":57, "diaspora":57, "mulch":57, "sinus":57, "ludicrous":57, "bloated":57, "stricken":57, "deadlines":57, "militarily":57, "hugely":57, "alternately":57, "specialize":57, "inscribed":57, "hopelessly":57, "discreet":57, "annoyance":57, "bitten":57, "reprinted":57, "gypsy":57, "vinaigrette":57, "strife":57, "extracted":57, "occupants":57, "lookout":57, "ridden":57, "bourbon":57, "caucasian":57, "marshes":57, "spear":57, "putt":57, "starling":57, "sped":57, "infinitely":57, "revise":57, "optimum":57, "antibodies":57, "embryo":57, "underscores":57, "satire":57, "injections":57, "repercussions":57, "foes":57, "fearless":57, "token":57, "entrees":57, "unprepared":57, "excesses":57, "cheapest":57, "hardy":57, "eyeing":57, "forties":57, "iced":57, "rulings":57, "seedlings":57, "repaired":57, "reasoned":57, "captive":57, "thankfully":57, "watchdog":57, "fraudulent":57, "cyclists":57, "astonished":57, "tabs":57, "dramas":57, "squid":57, "nestled":57, "usable":57, "baggy":57, "brochures":57, "existential":57, "empirically":57, "grips":57, "seminal":57, "rebound":57, "parmesan":57, "emphatically":57, "casts":57, "plunge":57, "distorted":57, "notified":57, "chiefly":57, "sensations":57, "commuters":57, "perks":57, "durability":57, "ethos":57, "vomiting":57, "sauces":57, "hearth":57, "repetitions":57, "persisted":57, "bred":57, "folly":57, "drags":57, "vans":57, "invaders":57, "snoring":57, "deterrence":57, "embraces":57, "shoving":57, "filmed":57, "manor":57, "blatant":57, "grievances":57, "tad":57, "rooftop":57, "elevators":57, "stairwell":57, "ensembles":57, "gladly":57, "warmly":57, "spontaneously":57, "betray":57, "penetration":57, "grunted":57, "assassin":57, "chopper":57, "disagrees":57, "hides":57, "controversies":57, "clove":57, "attrition":57, "quilts":57, "fervor":57, "stressing":57, "climax":57, "healed":57, "adultery":57, "seismic":57, "smallpox":57, "lent":57, "slicing":57, "loomed":57, "variant":57, "turnovers":57, "recommending":57, "winked":57, "revolutions":57, "disco":57, "lords":57, "vector":57, "blink":57, "edit":57, "inventions":57, "cupboard":57, "ghostly":57, "flirting":57, "inland":57, "concurrent":57, "dissidents":57, "queer":57, "sincerity":57, "sociologist":57, "sweets":57, "dominion":57, "folklore":57, "guarded":57, "exchanging":57, "faults":57, "lizard":57, "arsenic":57, "first-class":57, "rehearsals":57, "algorithms":57, "prowess":57, "dispersed":57, "inject":57, "lax":57, "hoops":57, "barked":57, "stalks":57, "puzzles":57, "enclosure":57, "casserole":57, "parasites":57, "ale":57, "witches":57, "confidently":57, "menacing":57, "milestone":57, "getaway":57, "defective":57, "limousine":57, "jade":57, "unnamed":57, "activated":57, "giftedness":57, "uncanny":57, "rubs":57, "frown":57, "drugstore":57, "incorrectly":57, "ills":57, "surged":57, "astonishment":57, "macho":57, "knocks":57, "rift":57, "anterior":57, "blasted":57, "richly":57, "thinning":57, "eminent":57, "godfather":57, "discriminatory":57, "gland":57, "flair":57, "misunderstood":57, "adjoining":57, "meticulous":57, "deposited":57, "shipment":57, "syllables":57, "climbers":57, "giddy":57, "impatience":57, "man-made":57, "align":57, "transcend":57, "tallest":57, "spills":57, "skeletal":57, "computed":57, "situational":57, "oily":57, "doin":57, "wavelengths":57, "flatly":57, "birthplace":57, "propensity":57, "reliably":57, "measurable":57, "coloring":57, "topical":57, "rink":57, "mare":57, "essentials":57, "whereabouts":57, "leftovers":57, "deference":57, "moody":57, "policing":57, "isle":57, "pulmonary":57, "afloat":57, "foe":57, "spaced":57, "stench":57, "manuals":57, "debacle":57, "strolled":57, "starred":57, "giggling":57, "mythical":57, "smash":57, "tuesdays":57, "scholastic":57, "emulate":57, "inspires":57, "californians":57, "nesting":57, "forged":57, "doorstep":57, "differed":57, "clinically":57, "axe":57, "vascular":57, "anglo":57, "budding":57, "deserving":57, "warehouses":57, "legislator":57, "frameworks":57, "disarmament":57, "mistakenly":57, "plunging":57, "impatiently":57, "refining":57, "hail":57, "lemonade":57, "infinity":57, "injunction":57, "stiffness":57, "usher":57, "coalitions":57, "analytic":57, "typewriter":57, "geopolitical":57, "strikingly":57, "tackling":57, "surging":57, "restrain":57, "sweeps":57, "vigil":57, "leash":57, "secretary-general":57, "beets":57, "obscured":57, "embarrass":57, "etched":57, "chopping":57, "abusing":57, "childbirth":57, "grenade":57, "postoperative":57, "inherit":57, "individualized":57, "goggles":57, "almond":57, "cheered":57, "ripple":57, "upstream":57, "stewardship":57, "demolition":57, "georgian":57, "stroking":57, "blinds":57, "pregnancies":57, "interception":57, "singled":57, "creators":57, "stunt":57, "first-year":57, "bun":57, "acclaimed":57, "goofy":57, "infusion":57, "feasibility":57, "evacuate":57, "taxed":57, "hooker":57, "frosting":57, "immersed":57, "two-day":57, "departing":57, "joyful":57, "embody":57, "flagship":57, "idealism":57, "nipples":57, "blockade":57, "pod":57, "initials":57, "chrome":57, "saliva":57, "jesuit":57, "tenuous":57, "deprived":57, "postponed":57, "stripping":57, "souvenir":57, "briskly":57, "formative":57, "opted":57, "heady":57, "uniformly":57, "arresting":57, "replica":57, "detachment":57, "likeness":57, "scrub":57, "rapper":57, "informs":57, "tandem":57, "freak":57, "clumps":57, "waiters":57, "contemplation":57, "digest":57, "adaptations":57, "oats":57, "chilean":57, "delaying":57, "economical":57, "descending":57, "repressive":57, "climates":57, "decorating":57, "inward":57, "cheeses":57, "trooper":57, "hindsight":57, "bumper":57, "classmate":57, "inhibit":57, "portraying":57, "tuck":57, "charms":57, "distributor":57, "canyons":57, "geology":57, "homer":57, "intimidated":57, "insistent":57, "shuffling":57, "stabbed":57, "crook":57, "convertible":57, "caucuses":57, "advertised":57, "assertive":57, "unconditional":57, "inventories":57, "incumbents":57, "voucher":57, "jeopardize":57, "murderous":57, "correctness":57, "ferocious":57, "glued":57, "summon":57, "recycle":57, "endemic":57, "conformity":57, "fencing":57, "underscore":57, "realistically":57, "nailed":57, "diverted":57, "commotion":57, "raspberry":57, "barley":57, "encompass":57, "chilled":57, "squadron":57, "concerted":57, "fooled":57, "stony":57, "storyteller":57, "hospitalized":57, "rooting":57, "skeletons":57, "gesturing":57, "overturn":57, "sermons":57, "orgasm":57, "fairway":57, "stemming":57, "embodiment":57, "small-scale":57, "profitability":57, "etiquette":57, "captains":57, "hoop":57, "endorsements":57, "postsecondary":57, "lobsters":57, "welcomes":57, "realms":57, "postcards":57, "adjunct":57, "contra":57, "currencies":57, "sabbath":57, "unfolds":57, "blazer":57, "discretionary":57, "mediator":57, "glaciers":57, "sacrificing":57, "attained":57, "barbed":57, "subversive":57, "rocker":57, "ax":57, "jockey":57, "wade":57, "correctional":57, "affidavit":57, "refine":57, "gruesome":57, "preserves":57, "arrivals":57, "low-level":57, "iceberg":57, "countdown":57, "elf":57, "probing":57, "knowingly":57, "termed":57, "comprising":57, "improperly":57, "configurations":57, "paw":57, "horrified":57, "flawless":57, "timid":57, "bogus":57, "sniffing":57, "proficient":57, "ketchup":57, "maternity":57, "visitation":57, "self-control":57, "tailored":57, "harmed":57, "harassed":57, "pennies":57, "dugout":57, "shooters":57, "shedding":57, "seventy-five":57, "urgently":57, "flowed":57, "six-month":57, "predominant":57, "footnotes":57, "vows":57, "prognosis":57, "herald":57, "fir":57, "semifinals":57, "empowered":57, "attackers":57, "jumper":57, "mummy":57, "pleas":57, "distractions":57, "manpower":57, "trembled":57, "tabloid":57, "propositions":57, "secretive":57, "malignant":57, "pointless":57, "puzzling":57, "inspirational":57, "logically":57, "disadvantages":57, "hostilities":57, "pastures":57, "baroque":57, "intruder":57, "citation":57, "touted":57, "imaginable":57, "horrifying":57, "buzzing":57, "imposition":57, "imprint":57, "exporting":57, "diaper":57, "collisions":57, "counterterrorism":57, "adamant":57, "boon":57, "geographically":57, "vertically":57, "giggled":57, "buttocks":57, "vigilant":57, "low-key":57, "bracing":57, "sporadic":57, "kidneys":57, "sub-saharan":57, "trimmings":57, "vaccination":57, "patterned":57, "splashing":57, "notify":57, "biking":57, "kettle":57, "lender":57, "islanders":57, "stroll":57, "soaked":57, "licking":57, "punches":57, "injected":57, "onslaught":57, "reconstruct":57, "bows":57, "throttle":57, "strolling":57, "jolt":57, "grinding":57, "cutbacks":57, "doorbell":57, "offending":57, "medically":57, "negotiator":57, "composing":57, "diagrams":57, "delegate":57, "utopian":57, "app":57, "puffy":57, "flickered":57, "illumination":57, "regal":57, "lotion":57, "shiites":57, "tort":57, "staples":57, "silvery":57, "volunteering":57, "sands":57, "freestyle":57, "screwed":57, "hem":57, "puddle":57, "groin":57, "supremacy":57, "bead":57, "his/her":57, "convent":57, "iphone":57, "biopsy":57, "bodyguard":57, "beaver":57, "sunnis":57, "debilitating":57, "subdued":57, "howling":57, "crow":57, "headphones":57, "melodies":57, "executions":57, "fend":57, "cautions":57, "twenty-six":57, "taps":57, "reservoirs":57, "oxide":57, "ultrasound":57, "noticeably":57, "edgy":57, "full-scale":57, "mid-1990s":57, "muffled":57, "handheld":57, "soups":57, "reunification":57, "peek":57, "proclaim":57, "rebellious":57, "non-profit":57, "auditor":57, "repairing":57, "muttering":57, "ache":57, "licked":57, "linkages":57, "cub":57, "chiles":57, "migrate":57, "genesis":57, "seizures":57, "dimly":57, "rearview":57, "primer":57, "cigars":57, "amino":57, "mower":57, "stormed":57, "truce":57, "martini":57, "solids":57, "communicated":57, "jogging":57, "retribution":57, "handcuffs":57, "spectral":57, "nigger":57, "carb":57, "rendering":57, "thrift":57, "operatives":57, "pigment":57, "picturesque":57, "slaps":57, "pecan":57, "relativity":57, "wrongly":57, "negatives":57, "revolver":57, "truthful":57, "lows":57, "bundles":57, "teen-agers":57, "traffickers":57, "objected":57, "caliber":57, "disguise":57, "airtight":57, "woodland":57, "incarceration":57, "cervical":57, "unsuccessfully":57, "knack":57, "hammering":57, "bloodshed":57, "initiating":57, "contagious":57, "disputed":57, "odors":57, "lilies":57, "marketers":57, "destroys":57, "postpone":57, "benevolent":57, "unborn":57, "forecasting":57, "two-time":57, "grit":57, "participatory":57, "jaguar":57, "thirds":57, "acquitted":57, "transcendent":57, "swimmer":57, "hesitates":57, "lunchtime":57, "reopen":57, "clapped":57, "anarchy":57, "referee":57, "schoolchildren":57, "lecturer":57, "dormant":57, "preferential":57, "procurement":57, "sensibilities":57, "reassurance":57, "gloss":57, "civility":57, "volatility":57, "blogs":57, "watermelon":57, "fruitful":57, "incomprehensible":57, "necessities":57, "artificially":57, "ticking":57, "rewrite":57, "fluent":57, "victorious":57, "esteem":57, "flashy":57, "charisma":57, "homecoming":57, "patriarch":57, "doctrines":57, "brewers":57, "crafted":57, "paralyzed":57, "spotting":57, "flaming":57, "journeys":57, "gridlock":57, "deliveries":57, "catering":57, "flyers":57, "powerhouse":58, "preferring":58, "glimpses":58, "fuller":58, "classify":58, "vulgar":58, "landscaping":58, "seekers":58, "timeline":58, "logos":58, "insurer":58, "audiotape":58, "rover":58, "gingerly":58, "interfering":58, "clapping":58, "tortilla":58, "stately":58, "setbacks":58, "drafts":58, "guardians":58, "cutoff":58, "siding":58, "appellate":58, "murals":58, "acutely":58, "joys":58, "bumping":58, "wiser":58, "visualize":58, "shards":58, "buddhism":58, "ingenious":58, "stocked":58, "childish":58, "recourse":58, "flick":58, "assaulted":58, "negligence":58, "footnote":58, "alternating":58, "regular-season":58, "fungal":58, "hazy":58, "two-week":58, "philosophies":58, "paragraphs":58, "schizophrenia":58, "tilt":58, "circa":58, "discrepancies":58, "vents":58, "hare":58, "hailed":58, "worrisome":58, "salute":58, "activate":58, "cocked":58, "substitutes":58, "chemist":58, "caravan":58, "phonological":58, "ingenuity":58, "carnage":58, "inquire":58, "adversity":58, "glee":58, "campers":58, "fastest-growing":58, "foreseeable":58, "rounding":58, "theologian":58, "tart":58, "finnish":58, "preceded":58, "fashioned":58, "ascertain":58, "crowding":58, "interruption":58, "weakly":58, "smoker":58, "infidelity":58, "unavoidable":58, "bruised":58, "sweatshirt":58, "anthology":58, "opium":58, "throats":58, "wake-up":58, "candlelight":58, "pedestrians":58, "attendees":58, "totality":58, "penchant":58, "littered":58, "squinting":58, "galactic":58, "node":58, "unheard":58, "spoil":58, "entail":58, "jug":58, "depletion":58, "validate":58, "hard-core":58, "snug":58, "high-rise":58, "ex-husband":58, "helium":58, "exacerbated":58, "recite":58, "interplay":58, "cuffs":58, "pedestal":58, "suitcases":58, "complexes":58, "digestive":58, "safari":58, "ambient":58, "volcanoes":58, "haitians":58, "nan":58, "sacrificed":58, "aforementioned":58, "modestly":58, "warranted":58, "authorize":58, "anomaly":58, "carpets":58, "blush":58, "sightings":58, "plantations":58, "overriding":58, "teamwork":58, "elastic":58, "widows":58, "interstellar":58, "medicinal":58, "spawning":58, "instructive":58, "simplify":58, "starve":58, "flannel":58, "clutter":58, "uniqueness":58, "straits":58, "bob":58, "occupancy":58, "sideline":58, "parody":58, "alaskan":58, "subjectivity":58, "delinquency":58, "evidence-based":58, "conveniently":58, "contradict":58, "engages":58, "shameful":58, "generalization":58, "headset":58, "lizards":58, "antioxidants":58, "tibetan":58, "islamists":58, "densely":58, "protracted":58, "programmers":58, "correcting":58, "unmarked":58, "primal":58, "impartial":58, "entitlements":58, "password":58, "enlist":58, "milieu":58, "stocking":58, "fiance":58, "weekdays":58, "artisans":58, "bobbing":58, "convict":58, "interdependence":58, "magnesium":58, "haunting":58, "verbally":58, "cursed":58, "boating":58, "pigeon":58, "anesthesia":58, "grading":58, "contour":58, "cayenne":58, "spaniards":58, "alright":58, "prohibiting":58, "entourage":58, "grad":58, "conscientious":58, "extremist":58, "footprint":58, "intercept":58, "walkway":58, "peacekeepers":58, "shrewd":58, "coincide":58, "supervising":58, "ached":58, "darted":58, "gems":58, "savory":58, "generational":58, "koran":58, "facets":58, "greetings":58, "dashboard":58, "parochial":58, "welsh":58, "banish":58, "hardships":58, "mm":58, "derivatives":58, "logistic":58, "unravel":58, "astounding":58, "alarmed":58, "transforms":58, "diagnose":58, "drone":58, "tripod":58, "infertility":58, "complicate":58, "smartest":58, "bracelets":58, "operas":58, "pancake":58, "rodeo":58, "silicone":58, "antisocial":58, "moaning":58, "beneficiary":58, "immersion":58, "denominations":58, "defends":58, "embodies":58, "logistical":58, "deceptive":58, "beacon":58, "shutdown":58, "predictably":58, "agonizing":58, "blurred":58, "nicer":58, "condemning":58, "twenty-eight":58, "distraught":58, "spoons":58, "pigeons":58, "fraught":58, "mischief":58, "rebirth":58, "scorer":58, "panties":58, "glands":58, "vampires":58, "somali":58, "wares":58, "pulses":58, "substitution":58, "galley":58, "counterproductive":58, "populace":58, "oppressed":58, "ayatollah":58, "lagoon":58, "allure":58, "bittersweet":58, "wherein":58, "taping":58, "totalitarian":58, "sandstone":58, "irons":58, "dipped":58, "stinging":58, "wretched":58, "airwaves":58, "coached":58, "crimson":58, "misuse":58, "curl":58, "instrumentation":58, "deity":58, "waiver":58, "overwhelm":58, "miraculously":58, "scares":58, "comb":58, "knights":58, "landfills":58, "bluntly":58, "instituted":58, "collapsing":58, "choke":58, "narrower":58, "reproduced":58, "abyss":58, "autobiographical":58, "minivan":58, "warheads":58, "overflowing":58, "stormy":58, "roundtable":58, "aha":58, "tornadoes":58, "papal":58, "exploits":58, "airing":58, "supervise":58, "departed":58, "ambush":58, "nonviolent":58, "hotline":58, "citations":58, "lefty":58, "up-to-date":58, "relocate":58, "trophies":58, "grimly":58, "molding":58, "pebble":58, "foreman":58, "diagnoses":58, "kayak":58, "groundwork":58, "distracting":58, "wrestle":58, "concealed":58, "suspiciously":58, "clarification":58, "precursor":58, "hunted":58, "nongovernmental":58, "chords":58, "affiliates":58, "dagger":58, "revisit":58, "weekday":58, "millennia":58, "cranberry":58, "saloon":58, "nagging":58, "unruly":58, "lifeless":58, "nearer":58, "wee":58, "literate":58, "pods":58, "interracial":58, "flanked":58, "gilded":58, "memos":58, "mussels":58, "utmost":58, "accelerating":58, "staffs":58, "huts":58, "dynamite":58, "inquired":58, "muse":58, "residuals":58, "wink":58, "lumps":58, "heroism":58, "incense":58, "cot":58, "punctuated":58, "harshly":58, "boyfriends":58, "muffin":58, "trickle":58, "shrill":58, "summertime":58, "chewed":58, "left-wing":58, "aristocratic":58, "over-the-counter":58, "grandeur":58, "shuffled":58, "caretaker":58, "ransom":58, "aptly":58, "narrowing":58, "busiest":58, "melts":58, "battleground":58, "reconnaissance":58, "housekeeper":58, "venetian":58, "impossibly":58, "cheekbones":58, "grasped":58, "segregated":58, "parrot":58, "funnel":58, "versatility":58, "manhood":58, "rectangle":58, "incidental":58, "figurative":58, "meticulously":58, "uphill":58, "splendor":58, "sprawl":58, "dodge":58, "spur":58, "chore":58, "limp":58, "winced":58, "seaside":58, "curfew":58, "pronounce":58, "dichotomy":58, "appliance":58, "gorilla":58, "caterpillar":58, "praising":58, "insensitive":58, "dumps":58, "salted":58, "mosaic":58, "antiquity":58, "solidly":58, "rumbling":58, "bargains":58, "crates":58, "burglary":58, "thyroid":58, "warmed":58, "unconsciously":58, "teased":58, "breakthroughs":58, "burnt":58, "hind":58, "hedges":58, "coals":58, "paddle":58, "tubing":58, "trusts":58, "co-op":58, "shallots":58, "fueling":58, "sway":58, "thinker":58, "exempt":58, "dissolution":58, "keepers":58, "coercive":58, "momentary":58, "compensated":58, "quotation":58, "lag":58, "rafters":58, "encyclopedia":58, "nuggets":58, "potassium":58, "chaplain":58, "abduction":58, "instruct":58, "handwritten":58, "concluding":58, "dispose":58, "owing":58, "residences":58, "proclamation":58, "tutor":58, "atm":58, "computational":58, "shrunk":58, "prematurely":58, "seizing":58, "prime-time":58, "prized":58, "wailing":58, "spree":58, "cons":58, "industrialization":58, "amish":58, "flattering":58, "crouched":58, "immature":58, "modesty":58, "strengthens":58, "contrasts":58, "minimizing":58, "clung":58, "filtered":58, "skulls":58, "calorie":58, "crane":58, "whiff":58, "nuances":58, "flush":58, "underside":58, "coasts":58, "clandestine":58, "emit":58, "stats":58, "petitions":58, "explanatory":58, "ticks":58, "biomedical":58, "pistons":58, "prudence":58, "microbial":58, "recounted":58, "cliche":58, "negligible":58, "vibrations":58, "reckon":58, "byzantine":58, "acorn":58, "cutting-edge":58, "inhale":58, "hacking":58, "cottages":58, "real-estate":58, "hens":58, "carbs":58, "unimaginable":58, "hurrying":58, "relic":58, "clippings":58, "elective":58, "martyr":58, "seeded":58, "jaguars":58, "launches":58, "chuckle":58, "ethnically":58, "matchup":58, "blueberries":58, "swell":58, "plush":58, "slumped":58, "twenty-seven":58, "distinguishing":58, "weaponry":58, "prickly":58, "clerics":58, "cartridge":58, "inflicted":58, "estranged":58, "conveyed":58, "countered":58, "masked":58, "directives":58, "buyout":58, "prosthetic":58, "prosper":58, "chests":58, "enclosed":58, "provoked":58, "estimating":58, "diagonal":58, "soybeans":58, "winery":58, "lithuanian":58, "guise":58, "slash":58, "roaming":58, "plugged":58, "flared":58, "imposes":58, "vanishing":58, "sunken":58, "dissemination":58, "inventing":58, "solemnly":58, "realist":58, "internship":58, "spirited":58, "overturned":58, "runner-up":58, "fatalities":58, "zipper":58, "fundamentalism":58, "exhausting":58, "summarize":58, "exhibiting":58, "critiques":58, "constraint":58, "comprises":58, "sparkle":58, "seamless":58, "desolate":58, "incompetence":58, "citizenry":58, "remembrance":58, "unfavorable":58, "stadiums":58, "fourteenth":58, "albanian":58, "benefiting":58, "auctions":58, "engineered":58, "jays":58, "bullies":58, "compounded":58, "unsettling":58, "anti-american":58, "spores":58, "accommodating":58, "pint":58, "grenades":58, "pedals":58, "tarp":58, "deportation":58, "undermines":58, "parting":58, "fashions":58, "manslaughter":58, "lotus":58, "back-to-back":58, "veggies":58, "jails":58, "laptops":58, "cohorts":58, "keystone":58, "flourished":58, "glistening":58, "entertainer":58, "parity":58, "neutrality":58, "moth":58, "precincts":58, "horribly":58, "alleging":58, "labyrinth":58, "invoked":58, "evils":58, "grass-roots":58, "solace":58, "avert":58, "smashed":58, "tugging":58, "onward":58, "longed":58, "flex":58, "assuring":58, "cures":58, "constituent":58, "subset":58, "kitten":58, "mysteriously":58, "second-largest":58, "irritating":58, "installment":58, "religiously":58, "markings":58, "ornament":58, "untrue":58, "administering":58, "camouflage":58, "cleric":58, "psychotherapy":58, "emigration":58, "forging":58, "pitfalls":58, "exposes":58, "assigning":58, "quantify":58, "upgrading":58, "intermittent":58, "fiberglass":58, "state-owned":58, "defeating":58, "suppressed":58, "trusting":58, "fray":58, "excursion":58, "shocks":58, "wildflowers":58, "observational":58, "swimmers":58, "terminator":58, "spam":58, "intimidate":58, "horrendous":58, "swirled":58, "copied":58, "mediate":58, "suspense":58, "baptism":58, "lured":58, "substituting":58, "elevate":58, "inconvenience":58, "disposed":58, "appalachian":58, "cashier":58, "tango":58, "transporting":58, "darn":58, "sanctioned":58, "totals":58, "compulsive":58, "hooves":58, "curt":58, "methodologies":58, "paved":58, "handshake":58, "self-help":58, "alcoholics":58, "wellness":58, "doubling":58, "unfolded":58, "exaggeration":58, "protector":58, "outs":58, "untreated":58, "consultations":58, "piping":58, "tanker":58, "rattled":58, "wry":58, "toughness":58, "illegitimate":58, "nobility":58, "temperate":58, "concussion":58, "renal":58, "intensified":58, "rethinking":58, "leaked":58, "contested":58, "impersonal":58, "scarves":58, "workload":58, "insomnia":58, "dotted":58, "soothe":58, "revolving":58, "grapefruit":58, "marquis":58, "coveted":58, "enigmatic":58, "fabrication":58, "grilling":58, "sexism":58, "audits":58, "cartilage":58, "feeble":58, "lovingly":58, "idealistic":58, "insults":58, "unarmed":58, "crotch":58, "shortfall":58, "royalties":58, "agrarian":58, "panther":58, "libyan":58, "relegated":58, "insulting":58, "hardened":58, "faraway":58, "almighty":58, "drains":58, "brethren":58, "polio":58, "chi":58, "inflict":58, "oftentimes":58, "antidote":58, "dwellers":58, "dew":58, "capitalists":58, "ballad":58, "chute":58, "mutation":58, "unwelcome":58, "aspire":58, "maneuvers":58, "combatants":58, "austerity":58, "archival":58, "vaginal":58, "issuing":58, "misfortune":58, "aired":58, "drawbacks":58, "manifested":58, "biographer":58, "biographies":58, "preparedness":58, "alligator":58, "camaraderie":58, "boiled":58, "closets":58, "paces":58, "shutters":58, "dealership":58, "flare":58, "paramilitary":58, "marinade":58, "groundbreaking":58, "refrain":58, "insides":58, "aloft":58, "remnant":58, "cover-up":58, "magnets":58, "undeniable":58, "merged":58, "cafes":58, "misdemeanor":58, "healthful":58, "walker":58, "heartbreaking":58, "cultivated":58, "smoother":58, "lastly":58, "implicated":58, "naughty":58, "masking":58, "attributions":58, "outcry":58, "crave":58, "complication":58, "prophetic":58, "mythic":58, "phantom":58, "coupling":58, "pastels":58, "nonverbal":58, "tally":58, "hourly":58, "magnolia":58, "supernova":58, "laced":58, "packaged":58, "stronghold":58, "faith-based":58, "assures":58, "voiced":58, "rendition":58, "securely":58, "spying":58, "guitars":58, "beginner":58, "grossly":58, "steered":58, "inventive":58, "stagnant":58, "sweetly":58, "affectionate":58, "lineman":58, "migratory":58, "venom":58, "cornmeal":58, "liturgical":58, "preclude":59, "excitedly":59, "subsidize":59, "incurred":59, "psychoanalysis":59, "attest":59, "overcame":59, "rudimentary":59, "patting":59, "appetizer":59, "anti-abortion":59, "breastfeeding":59, "disconnect":59, "millionaires":59, "booklet":59, "fliers":59, "filings":59, "projector":59, "pretest":59, "requisite":59, "unforgettable":59, "hopped":59, "promoter":59, "compressed":59, "muffins":59, "reversing":59, "safeguards":59, "utilitarian":59, "glitter":59, "balances":59, "mondays":59, "cinematic":59, "pistols":59, "inference":59, "slashing":59, "collaborating":59, "cooled":59, "burying":59, "doubtless":59, "breeds":59, "neutron":59, "toured":59, "repeal":59, "latex":59, "eroded":59, "bumped":59, "withhold":59, "extremism":59, "pyramids":59, "fastball":59, "sediments":59, "perpetuate":59, "gasp":59, "helplessly":59, "tenets":59, "enclave":59, "sequencing":59, "swath":59, "afforded":59, "expire":59, "terminate":59, "firewood":59, "primacy":59, "biceps":59, "housewives":59, "scattering":59, "taxable":59, "simmering":59, "dodging":59, "facilitates":59, "facilitated":59, "rapport":59, "drumming":59, "takeoff":59, "expulsion":59, "terminals":59, "plume":59, "espresso":59, "wreath":59, "corporal":59, "spurred":59, "endings":59, "sect":59, "remediation":59, "accompanies":59, "quintessential":59, "outweigh":59, "creep":59, "dreamy":59, "presumed":59, "oversize":59, "paradoxical":59, "notification":59, "whiteness":59, "maize":59, "hectic":59, "blazing":59, "tufts":59, "wednesdays":59, "centrality":59, "balsamic":59, "blindly":59, "mayhem":59, "unwillingness":59, "invading":59, "campfire":59, "microorganisms":59, "electrodes":59, "piracy":59, "throbbing":59, "imitating":59, "disintegration":59, "emblem":59, "centimeters":59, "creeks":59, "bunkers":59, "antelope":59, "dispatched":59, "disarray":59, "furnished":59, "free-market":59, "grins":59, "undone":59, "conceivably":59, "housewife":59, "nuclei":59, "witchcraft":59, "oblivion":59, "bathed":59, "excursions":59, "moaned":59, "swamps":59, "paramedics":59, "eighteenth-century":59, "dick":59, "rowing":59, "outlining":59, "detached":59, "stricter":59, "combo":59, "categorized":59, "audition":59, "redevelopment":59, "vegan":59, "whopping":59, "discouraging":59, "rumble":59, "registering":59, "axes":59, "metaphorical":59, "incest":59, "cranes":59, "adorned":59, "smug":59, "hinder":59, "keywords":59, "preachers":59, "aggregate":59, "algebra":59, "wide-eyed":59, "sheen":59, "illiterate":59, "snapshots":59, "briefs":59, "crows":59, "curators":59, "feud":59, "aspiration":59, "spatula":59, "single-family":59, "toxicity":59, "school-based":59, "cunning":59, "sexist":59, "jolly":59, "browned":59, "densities":59, "forbidding":59, "awaited":59, "errands":59, "bravery":59, "trance":59, "compulsory":59, "activation":59, "decisively":59, "earthy":59, "flicked":59, "ark":59, "mutations":59, "antarctic":59, "adversely":59, "safeguard":59, "reddish":59, "anecdotes":59, "hissing":59, "midterm":59, "subgroups":59, "priceless":59, "widened":59, "correlate":59, "originality":59, "mar":59, "melon":59, "harp":59, "tundra":59, "boils":59, "brooding":59, "wording":59, "faculties":59, "tang":59, "craters":59, "steamy":59, "insightful":59, "high-ranking":59, "blurted":59, "strategists":59, "misconceptions":59, "absentee":59, "web-based":59, "clear-cut":59, "flushed":59, "frontiers":59, "repository":59, "faucet":59, "generalizations":59, "dialect":59, "specialization":59, "bandwidth":59, "philippine":59, "fateful":59, "stupidity":59, "marginally":59, "napkins":59, "gubernatorial":59, "relics":59, "heterogeneous":59, "pollster":59, "floppy":59, "birch":59, "medalist":59, "nitrate":59, "sprinkled":59, "approving":59, "pretense":59, "beginners":59, "alterations":59, "hops":59, "perpetrator":59, "english-speaking":59, "aerobics":59, "denounced":59, "joyous":59, "coauthor":59, "behold":59, "fluttered":59, "pessimism":59, "gangster":59, "stepmother":59, "patchwork":59, "dismantle":59, "uncomfortably":59, "mindset":59, "refinement":59, "replacements":59, "placid":59, "vow":59, "anti-war":59, "epidemiology":59, "cosmology":59, "biosolids":59, "resonate":59, "indistinguishable":59, "totaled":59, "budge":59, "aroused":59, "stabilizing":59, "palate":59, "beltway":59, "medium-size":59, "rescuers":59, "submarines":59, "comp":59, "disgruntled":59, "faithfully":59, "delights":59, "objectively":59, "purposeful":59, "migrating":59, "ornamental":59, "calculus":59, "pediatrics":59, "broadband":59, "watchful":59, "one-quarter":59, "thereof":59, "preschoolers":59, "punt":59, "sub":59, "converge":59, "triggering":59, "technologically":59, "sewn":59, "gliding":59, "alleys":59, "triangular":59, "twelfth":59, "gag":59, "hormonal":59, "studs":59, "conveys":59, "redefine":59, "prelude":59, "camels":59, "spawned":59, "illuminated":59, "unload":59, "composure":59, "staggered":59, "constructions":59, "prodigy":59, "pagan":59, "respectfully":59, "mountainous":59, "inconsistencies":59, "drip":59, "subordinates":59, "scriptures":59, "crocodile":59, "tactile":59, "clone":59, "contended":59, "tipping":59, "assassinated":59, "teen-age":59, "virtuous":59, "ranches":59, "navigator":59, "barge":59, "slew":59, "soggy":59, "presiding":59, "lick":59, "introductions":59, "pang":59, "hover":59, "indignation":59, "bounded":59, "cohesive":59, "boyhood":59, "stabbing":59, "steamed":59, "lashes":59, "vice-president":59, "syrians":59, "imam":59, "photons":59, "halted":59, "frighten":59, "fined":59, "muzzle":59, "yarn":59, "chandelier":59, "prophets":59, "syringe":59, "heyday":59, "cherish":59, "escalation":59, "gi":59, "acrylic":59, "deforestation":59, "eyepiece":59, "verified":59, "bedrock":59, "messiah":59, "pesto":59, "weathered":59, "designate":59, "falsely":59, "sullen":59, "metropolis":59, "bastards":59, "anchors":59, "waxed":59, "piety":59, "brace":59, "leases":59, "attacker":59, "ravens":59, "horizontally":59, "palaces":59, "scents":59, "bungalow":59, "germs":59, "troopers":59, "savor":59, "penetrating":59, "grooming":59, "traitor":59, "naturalist":59, "troupe":59, "veal":59, "exhaustive":59, "sobering":59, "post-cold":59, "enamel":59, "exuberant":59, "shrank":59, "prize-winning":59, "ripples":59, "chronically":59, "stranded":59, "spectacles":59, "faiths":59, "circulated":59, "resists":59, "cosmopolitan":59, "sleeper":59, "antics":59, "revived":59, "tilting":59, "dishonest":59, "montage":59, "ammonia":59, "uterus":59, "leased":59, "insidious":59, "compromising":59, "punishing":59, "grotesque":59, "fountains":59, "foreigner":59, "planks":59, "front-runner":59, "harden":59, "ferns":59, "bodyguards":59, "mammal":59, "categorical":59, "tunic":59, "encompassing":59, "signify":59, "majorities":59, "exemptions":59, "grizzly":59, "airway":59, "accumulating":59, "analyzes":59, "deserts":59, "manually":59, "perennials":59, "wetland":59, "exhilarating":59, "dictated":59, "cumbersome":59, "shortest":59, "impede":59, "cameraman":59, "braids":59, "bowel":59, "parameter":59, "front-page":59, "fooling":59, "completes":59, "yearning":59, "edged":59, "schoolteacher":59, "drafting":59, "homicides":59, "progresses":59, "inseparable":59, "refinery":59, "choked":59, "motioned":59, "shopper":59, "highlands":59, "pup":59, "apes":59, "excessively":59, "layered":59, "batches":59, "twigs":59, "publicist":59, "bangs":59, "hospitalization":59, "moderator":59, "rapist":59, "priesthood":59, "crumble":59, "purposely":59, "cultivating":59, "overtly":59, "breads":59, "puberty":59, "subpoena":59, "cadmium":59, "ploy":59, "jailed":59, "full-length":59, "crossover":59, "warrants":59, "lander":59, "receding":59, "gripping":59, "executing":59, "coughed":59, "nah":59, "pebbles":59, "fauna":59, "hogs":59, "chateau":59, "acclaim":59, "selectively":59, "checkpoints":59, "nipple":59, "determinants":59, "shellfish":59, "skillful":59, "parted":59, "conclusive":59, "deepening":59, "wad":59, "unethical":59, "seam":59, "white-collar":59, "congratulate":59, "intensify":59, "coincided":59, "withholding":59, "liabilities":59, "beak":59, "equator":59, "experiential":59, "entrenched":59, "euphoria":59, "endorsing":59, "butts":59, "intertwined":59, "juncture":59, "scorn":59, "senseless":59, "immaculate":59, "haste":59, "squads":59, "monologue":59, "tragically":59, "courting":59, "clump":59, "liquids":59, "dispatch":59, "tapestry":59, "caramel":59, "wavelength":59, "jamaican":59, "arisen":59, "intending":59, "risked":59, "speculated":59, "edging":59, "erroneous":59, "cashmere":59, "crank":59, "arson":59, "pharmacist":59, "genus":59, "proclaiming":59, "heed":59, "stimulated":59, "defer":59, "undue":59, "omission":59, "empowering":59, "sucker":59, "fished":59, "precedents":59, "checkpoint":59, "martyrs":59, "spruce":59, "morgue":59, "femininity":59, "cranberries":59, "posttest":59, "foresee":59, "aback":59, "thirty-two":59, "gravely":59, "prosecuting":59, "hinge":59, "spat":59, "localized":59, "polarization":59, "thresholds":59, "perfectionism":59, "arduous":59, "heartfelt":59, "admirers":59, "waged":59, "spiraling":59, "speechless":59, "mused":59, "start-up":59, "promoters":59, "fins":59, "smugglers":59, "juveniles":59, "dizzying":59, "culminating":59, "spelled":59, "jargon":59, "collapses":59, "harmonious":59, "deficient":59, "amend":59, "cubicle":59, "fingerprint":59, "quail":59, "rna":59, "erode":59, "regretted":59, "fodder":59, "colossal":59, "messing":59, "sync":59, "transmitter":59, "lacrosse":59, "accuses":59, "spoiled":59, "mapped":59, "hooded":59, "cracker":59, "fillets":59, "swine":59, "bloodstream":59, "picket":59, "helper":59, "rims":59, "disappoint":59, "propel":59, "thanking":59, "pry":59, "pitiful":59, "unilaterally":59, "cyclical":59, "carton":59, "coupons":59, "salvage":59, "compel":59, "five-year-old":59, "westward":59, "handlers":59, "conversational":59, "rotary":59, "paradigms":59, "epistemological":59, "deftly":59, "triggers":59, "goodies":59, "stiffly":59, "malicious":59, "rigor":59, "jobless":59, "emancipation":59, "sagging":59, "reputations":59, "unreal":59, "reunited":59, "juggling":59, "grumbled":59, "irreversible":59, "finalists":59, "vases":59, "healer":59, "grail":59, "landlords":59, "mozzarella":59, "bouts":59, "nutritious":59, "fright":59, "symbolically":59, "son-in-law":59, "sighting":59, "nightgown":59, "doctrinal":59, "tumultuous":59, "hasty":59, "windfall":59, "wanders":59, "emitted":59, "attachments":59, "stitches":59, "hound":59, "raucous":59, "workable":59, "disarm":59, "orchards":59, "hamstring":59, "sheik":59, "polymer":59, "undertook":59, "high-pitched":59, "chattering":59, "marvel":59, "linens":59, "dogma":59, "punishments":59, "intravenous":59, "icing":59, "cornstarch":59, "confrontations":59, "overthrow":59, "distressed":59, "manifesto":59, "receptors":59, "begs":59, "fringes":59, "whistled":59, "warm-up":59, "egalitarian":59, "susceptibility":59, "dart":59, "detractors":59, "appreciative":59, "entirety":59, "drawback":59, "high-powered":59, "creatively":59, "statesman":59, "morbidity":59, "full-blown":59, "pointedly":59, "padding":59, "mascara":59, "replication":59, "moths":59, "persuading":59, "rambling":59, "cater":59, "legions":59, "idiosyncratic":59, "groves":59, "pious":59, "molten":59, "watercolors":59, "ravine":59, "handler":59, "citadel":59, "intifada":59, "renders":59, "liberate":59, "canvases":59, "reindeer":59, "romanian":59, "confronts":59, "outburst":59, "personalized":59, "baker":59, "gloved":59, "repertory":59, "hijackers":59, "whimsical":59, "fractured":59, "televisions":59, "teen-ager":59, "deleted":59, "tractors":59, "tequila":59, "bayou":59, "discursive":59, "dismissing":59, "instill":59, "rattle":59, "eradicate":59, "mourn":59, "domestically":59, "lurched":59, "investigates":59, "mania":59, "biologically":59, "saucer":59, "hiv-positive":59, "shear":59, "qualifies":59, "momentous":59, "whirlwind":59, "accorded":59, "grown-ups":59, "playboy":59, "wrench":59, "cobra":59, "clams":59, "bordering":59, "thwart":59, "flourishing":59, "murmur":59, "inset":59, "embassies":59, "bulge":59, "compatibility":59, "converts":59, "macaroni":59, "orchid":59, "intolerable":59, "spans":59, "summarizes":59, "crunchy":59, "sister-in-law":59, "chocolates":59, "missy":59, "reckoning":59, "slabs":59, "brute":59, "landslide":59, "autograph":59, "juniors":59, "clowns":59, "racers":59, "blazers":59, "burdened":59, "searing":59, "bumpy":59, "unnecessarily":59, "dependable":59, "wildest":59, "khaki":59, "pep":59, "freezes":59, "photographing":59, "mmm":59, "musicals":59, "collage":59, "left-handed":59, "keenly":59, "perilous":59, "eagerness":59, "heaviest":59, "trappings":59, "budgetary":59, "blitz":59, "paternal":59, "cessation":59, "boiler":59, "fondly":59, "egregious":59, "one-man":59, "limbo":59, "wits":59, "speck":59, "preparatory":59, "craftsman":59, "accelerator":59, "animosity":59, "sloping":59, "self-sufficient":59, "hard-line":59, "permissible":59, "dialed":59, "fundraiser":59, "swarm":59, "diver":59, "caviar":59, "trajectories":59, "sprung":59, "leveled":59, "downfall":59, "abolish":59, "whirled":59, "carcass":59, "startup":59, "query":59, "arcade":59, "eucharist":59, "disrupted":59, "erect":59, "contacting":59, "best-seller":59, "gratification":59, "itinerary":59, "dishwasher":59, "groupings":59, "trough":59, "claw":59, "steward":59, "chives":59, "clauses":59, "albanians":59, "tremble":59, "crumpled":59, "serenity":59, "aversion":59, "polyester":59, "bribery":59, "trilogy":59, "stretcher":59, "materialism":59, "anti-semitic":59, "trainees":59, "effortlessly":59, "compliments":59, "wondrous":59, "wasteful":59, "taxing":59, "hamburgers":59, "deliberation":59, "soprano":59, "gazette":59, "attribution":59, "subtitles":59, "dutifully":59, "successors":59, "right-hand":59, "adjusts":59, "distortions":59, "flicker":59, "kickoff":59, "berry":59, "easel":59, "retardation":59, "lesion":59, "waging":59, "obscurity":59, "six-year":59, "fast-growing":59, "weave":59, "wading":59, "brew":59, "bosom":59, "acreage":59, "cobalt":59, "sled":59, "monsieur":59, "hard-working":60, "whim":60, "tumble":60, "supervised":60, "whirling":60, "monoxide":60, "hackers":60, "anal":60, "cautioned":60, "inhabited":60, "close-up":60, "tonic":60, "sausages":60, "prosthesis":60, "cherished":60, "smack":60, "inflated":60, "pastime":60, "nuanced":60, "stab":60, "stucco":60, "disguised":60, "cavernous":60, "rarity":60, "unlock":60, "outings":60, "doughnuts":60, "puppets":60, "delinquent":60, "canonical":60, "unimportant":60, "tread":60, "strenuous":60, "apocalyptic":60, "programmer":60, "ultra":60, "beleaguered":60, "illustrating":60, "scraping":60, "brim":60, "intrinsically":60, "apocalypse":60, "levers":60, "sufferers":60, "multidimensional":60, "constellations":60, "fixation":60, "emergent":60, "credit-card":60, "deepen":60, "awaken":60, "co-owner":60, "breathes":60, "paced":60, "servicemen":60, "funk":60, "depictions":60, "high-performance":60, "spells":60, "underworld":60, "filipino":60, "grits":60, "nana":60, "wide-ranging":60, "litany":60, "neared":60, "escalate":60, "proprietor":60, "receptions":60, "climatic":60, "valuation":60, "nascent":60, "ventured":60, "cadre":60, "redundant":60, "sealing":60, "centrist":60, "yolks":60, "crippling":60, "reviewer":60, "appointees":60, "cylinders":60, "foreclosures":60, "elegantly":60, "scrubbing":60, "dwellings":60, "crispy":60, "southerners":60, "sacrament":60, "nation-state":60, "spanning":60, "unwittingly":60, "wiry":60, "dreary":60, "discredit":60, "impasse":60, "nutty":60, "elongated":60, "injecting":60, "deluxe":60, "immortality":60, "flyer":60, "insurgent":60, "chassis":60, "fern":60, "navigating":60, "panicked":60, "hugs":60, "buzzed":60, "inertia":60, "shafts":60, "bombardment":60, "relish":60, "borderline":60, "membranes":60, "caribou":60, "partying":60, "hinges":60, "minimally":60, "secondhand":60, "mugs":60, "oceanic":60, "restraining":60, "cucumbers":60, "lily":60, "foxes":60, "censure":60, "croats":60, "achieves":60, "smoothing":60, "sarcastic":60, "finesse":60, "plurality":60, "rut":60, "pumpkins":60, "equatorial":60, "prevailed":60, "trustworthy":60, "chant":60, "upgrades":60, "remodeling":60, "fascist":60, "timer":60, "entrepreneurship":60, "skaters":60, "self-concept":60, "inspecting":60, "pungent":60, "sham":60, "pamphlet":60, "skate":60, "creole":60, "grappling":60, "stamina":60, "symbolize":60, "souvenirs":60, "disoriented":60, "rendezvous":60, "chronological":60, "puppies":60, "kernels":60, "reformation":60, "appalled":60, "accompaniment":60, "hobbies":60, "forefinger":60, "linoleum":60, "outlaw":60, "rodents":60, "unmanned":60, "recruiters":60, "naturalization":60, "corrosion":60, "cortex":60, "auntie":60, "battled":60, "exemplified":60, "inconvenient":60, "bigotry":60, "mail-order":60, "passports":60, "tick":60, "sap":60, "morphine":60, "mules":60, "culmination":60, "ruining":60, "agitated":60, "sift":60, "stand-up":60, "shortening":60, "responsiveness":60, "archdiocese":60, "angst":60, "creeping":60, "cheated":60, "self-contained":60, "bashing":60, "briefed":60, "reliever":60, "grunts":60, "norman":60, "slug":60, "reeds":60, "somatic":60, "erased":60, "dashed":60, "nudged":60, "helplessness":60, "ambassadors":60, "informational":60, "shawl":60, "fertilizers":60, "leopard":60, "onetime":60, "aiding":60, "stardom":60, "mystique":60, "rentals":60, "standings":60, "elm":60, "entertained":60, "encountering":60, "crusty":60, "apologizing":60, "insured":60, "spraying":60, "nudity":60, "levees":60, "pathological":60, "lemons":60, "antiquities":60, "impromptu":60, "nicknamed":60, "impeccable":60, "disregard":60, "originate":60, "respite":60, "robbing":60, "companionship":60, "departures":60, "reformed":60, "oversaw":60, "warring":60, "infer":60, "nocturnal":60, "halved":60, "racer":60, "winged":60, "denomination":60, "veterinary":60, "therein":60, "one-sided":60, "hymn":60, "consensual":60, "dill":60, "inescapable":60, "all-out":60, "reinvent":60, "inaccessible":60, "postage":60, "fifteenth":60, "wrought":60, "updating":60, "fiasco":60, "trimming":60, "confer":60, "peaked":60, "washes":60, "foggy":60, "furry":60, "waterways":60, "rollers":60, "diversification":60, "abusers":60, "drinkers":60, "cypress":60, "rainforest":60, "anova":60, "euros":60, "untold":60, "clothed":60, "modifying":60, "defensively":60, "impossibility":60, "acne":60, "peat":60, "pondering":60, "escorted":60, "decipher":60, "deafening":60, "precedence":60, "loyalties":60, "observable":60, "corrective":60, "major-league":60, "wills":60, "automation":60, "trolley":60, "couture":60, "magistrate":60, "uproar":60, "perpetually":60, "inexplicable":60, "sheds":60, "storefront":60, "sunflower":60, "drugstores":60, "transcends":60, "thud":60, "vie":60, "grandmothers":60, "magnification":60, "scopes":60, "troll":60, "clenched":60, "conglomerate":60, "bluegrass":60, "spectra":60, "postmodernism":60, "nurtured":60, "vistas":60, "stirs":60, "approximate":60, "muck":60, "bureaucracies":60, "roommates":60, "circumstantial":60, "sonic":60, "wheelchairs":60, "verbs":60, "conjure":60, "innumerable":60, "liking":60, "conditioned":60, "treason":60, "triangles":60, "assemblies":60, "butler":60, "shoves":60, "omega":60, "staunch":60, "sliver":60, "wholesome":60, "maxim":60, "tendon":60, "eta":60, "full-fledged":60, "bowing":60, "chemically":60, "hypothesized":60, "conditional":60, "dieting":60, "philharmonic":60, "armenian":60, "progressed":60, "weakest":60, "abolished":60, "mane":60, "latch":60, "urbanization":60, "parasite":60, "posterior":60, "magically":60, "tranquil":60, "emanating":60, "forgets":60, "mindless":60, "scooped":60, "darkly":60, "three-year-old":60, "unhappiness":60, "impulsive":60, "hippie":60, "exiles":60, "climber":60, "stoves":60, "cartridges":60, "ovarian":60, "andean":60, "telltale":60, "stubbornly":60, "greets":60, "invoking":60, "afar":60, "op-ed":60, "brackets":60, "wand":60, "eleventh":60, "smog":60, "pixels":60, "fondness":60, "discreetly":60, "heavy-duty":60, "birthdays":60, "biographical":60, "stumbles":60, "folders":60, "hangar":60, "capped":60, "multimillion-dollar":60, "grown-up":60, "undisturbed":60, "posting":60, "lengthwise":60, "comedies":60, "two-dimensional":60, "dermatologist":60, "tariff":60, "cello":60, "well-established":60, "deteriorate":60, "commemorate":60, "complimentary":60, "six-year-old":60, "quart":60, "germ":60, "intercom":60, "tenderloin":60, "playhouse":60, "hegemonic":60, "little-known":60, "notoriety":60, "hardworking":60, "sarcasm":60, "idly":60, "bathe":60, "rightful":60, "uh-oh":60, "agitation":60, "enactment":60, "vagina":60, "cholera":60, "visceral":60, "comrade":60, "duchess":60, "flimsy":60, "overarching":60, "chunky":60, "stools":60, "toothpaste":60, "prosecutions":60, "psychotic":60, "dives":60, "orchids":60, "penguins":60, "excruciating":60, "deprive":60, "adore":60, "coil":60, "attractiveness":60, "dropouts":60, "statehood":60, "birdie":60, "pups":60, "equate":60, "scarred":60, "variously":60, "believable":60, "override":60, "pendulum":60, "decentralized":60, "idiots":60, "lyrical":60, "topography":60, "archaic":60, "firearm":60, "ulcers":60, "religiosity":60, "slated":60, "surrendered":60, "secluded":60, "importing":60, "qualification":60, "apex":60, "spaceship":60, "regained":60, "first-rate":60, "fostered":60, "burly":60, "collide":60, "appropriateness":60, "ephemeral":60, "titans":60, "maples":60, "menstrual":60, "overshadowed":60, "impractical":60, "thumping":60, "seduction":60, "squeezes":60, "aptitude":60, "firemen":60, "frontline":60, "rind":60, "bragging":60, "defeats":60, "browse":60, "descends":60, "stripe":60, "grunt":60, "elitist":60, "bandages":60, "appetizers":60, "inequalities":60, "braces":60, "rooster":60, "polity":60, "antlers":60, "percentile":60, "marquee":60, "exertion":60, "serpent":60, "ie":60, "shale":60, "mid-1970s":60, "kip":60, "mixes":60, "subsidized":60, "queries":60, "mast":60, "cadet":60, "confesses":60, "mayoral":60, "op":60, "interns":60, "levee":60, "publicized":60, "responsibly":60, "curing":60, "father-in-law":60, "scuba":60, "pickles":60, "greased":60, "marina":60, "spade":60, "soft-spoken":60, "much-needed":60, "eerily":60, "overlooks":60, "unaffected":60, "entertainers":60, "constitutionally":60, "refund":60, "linemen":60, "shrines":60, "leasing":60, "sioux":60, "lymph":60, "tombs":60, "understatement":60, "replete":60, "waning":60, "lighted":60, "dearest":60, "unregulated":60, "barns":60, "brunch":60, "janitor":60, "envisions":60, "duplicate":60, "summed":60, "spooky":60, "curling":60, "feds":60, "fireman":60, "excavations":60, "tagging":60, "surpass":60, "darting":60, "crazed":60, "wavy":60, "partisanship":60, "holster":60, "resin":60, "regeneration":60, "engraving":60, "cavern":60, "upsetting":60, "utensils":60, "pee":60, "melodic":60, "commons":60, "dreaded":60, "beaming":60, "chatted":60, "relocated":60, "overcrowded":60, "sighing":60, "primordial":60, "bleachers":60, "sheath":60, "land-use":60, "veritable":60, "semblance":60, "whistles":60, "stalemate":60, "heaved":60, "broadcaster":60, "collars":60, "saturation":60, "interpreters":60, "celtic":60, "phosphorus":60, "distort":60, "candor":60, "endowed":60, "pairing":60, "editorials":60, "diffuse":60, "domino":60, "tropics":60, "abnormalities":60, "fest":60, "speedway":60, "coupe":60, "steeped":60, "sprawled":60, "giggles":60, "villains":60, "coward":60, "unrestricted":60, "transmissions":60, "stoop":60, "occupant":60, "blinded":60, "forearms":60, "ideologically":60, "pierced":60, "sitter":60, "breeders":60, "appreciates":60, "enticing":60, "preposterous":60, "decaying":60, "recreate":60, "manic":60, "forested":60, "suicides":60, "foraging":60, "quad":60, "anglican":60, "algerian":60, "three-hour":60, "thirty-six":60, "pellets":60, "shingles":60, "angered":60, "reigning":60, "pulsing":60, "memorize":60, "full-size":60, "tuxedo":60, "binge":60, "ovens":60, "intestinal":60, "sanitary":60, "postcolonial":60, "fahrenheit":60, "fullness":60, "trivia":60, "rips":60, "cores":60, "dispositions":60, "cheaply":60, "stemmed":60, "tainted":60, "contending":60, "torrent":60, "residing":60, "condos":60, "parisian":60, "dormitory":60, "amended":60, "dame":60, "expletive":60, "gospels":60, "apps":60, "taxonomy":60, "embarked":60, "sheltered":60, "motorcycles":60, "chronology":60, "slang":60, "authorizing":60, "itching":60, "cruisers":60, "fertilization":60, "pap":60, "acknowledgments":60, "delicacy":60, "bombed":60, "retro":60, "consolidated":60, "snowfall":60, "hurries":60, "sudanese":60, "adored":60, "alerts":60, "seaweed":60, "capsules":60, "bran":60, "vibe":60, "wards":60, "hack":60, "buckle":60, "valet":60, "registers":60, "astute":60, "cautionary":60, "hammered":60, "arcane":60, "prolong":60, "nonstop":60, "hurriedly":60, "cheerleader":60, "thicket":60, "grieve":60, "parades":60, "pluralistic":60, "mandarin":60, "fascism":60, "anatomical":60, "penal":60, "mu":60, "minuscule":60, "unbelievably":60, "unease":60, "wacky":60, "forcibly":60, "prerequisite":60, "mismanagement":60, "retrieval":60, "gentler":60, "doubly":60, "tinkering":60, "sprayed":60, "pamphlets":60, "dosage":60, "decisionmaking":60, "cheesecake":60, "null":60, "carcinoma":60, "emptied":60, "ignite":60, "auspices":60, "sniff":60, "posh":60, "terminated":60, "profiling":60, "glide":60, "functioned":60, "inverted":60, "coils":60, "tights":60, "rhyme":60, "pornographic":60, "transcendence":60, "residues":60, "leisurely":60, "know-how":60, "perseverance":60, "condominium":60, "sedentary":60, "pragmatism":60, "holiness":60, "lures":60, "harrowing":60, "disliked":60, "populous":60, "oops":60, "disperse":60, "adherents":60, "compulsion":60, "ashtray":60, "princes":60, "blurry":60, "indexing":60, "stereotypical":60, "make-up":60, "ratification":60, "bulldogs":60, "custard":60, "gearing":60, "fore":60, "patrolling":60, "uncontrolled":60, "hunch":60, "extracurricular":60, "allowances":60, "unifying":60, "transmitting":60, "kneel":60, "wearily":60, "redistribution":60, "developmentally":60, "conservatory":60, "unquestionably":60, "lodged":60, "uncontrollable":60, "sickly":60, "limelight":60, "funniest":60, "one-day":60, "caricature":60, "toothbrush":60, "integrative":60, "georgians":60, "paprika":60, "self-described":60, "vying":60, "craftsmen":60, "inactive":60, "bays":60, "septic":60, "discernible":60, "reciting":60, "imaginations":60, "madly":60, "denounce":60, "epiphany":60, "medium-sized":60, "expressly":60, "mourners":60, "shaman":60, "attaching":60, "enlarge":60, "recounting":60, "e-mailed":60, "confrontational":60, "rusted":60, "briefings":60, "infect":60, "weighted":60, "cock":60, "reciprocity":60, "aperture":60, "dissonance":60, "hoarse":60, "microphones":60, "musically":60, "sclerosis":60, "malnutrition":60, "moroccan":60, "angler":60, "age-old":60, "accomplishing":60, "peeked":60, "regularity":60, "indictments":60, "dumpster":60, "apache":60, "reviving":60, "embark":60, "thrives":60, "fanfare":60, "reiterated":60, "inconceivable":60, "million-dollar":60, "porous":60, "assimilate":60, "sockets":60, "netting":60, "treatise":60, "kerosene":60, "arab-israeli":60, "dispatcher":60, "panelist":60, "forgo":60, "fathom":60, "intrigue":60, "glimmer":60, "allocate":60, "diversify":60, "rooftops":60, "melancholy":60, "loophole":60, "preface":60, "clans":60, "revolves":60, "unbroken":60, "twenty-nine":60, "replicated":60, "whistling":60, "tempered":60, "swayed":60, "proverbial":60, "open-air":60, "freckles":60, "refrigerators":60, "rancher":60, "flooring":60, "deductible":60, "debuted":60, "erupt":60, "gleamed":60, "deported":60, "jacks":60, "philanthropy":60, "highland":60, "negroes":60, "blends":61, "proponent":61, "attuned":61, "unfit":61, "creams":61, "mantel":61, "elliptical":61, "high-energy":61, "wasp":61, "frenzied":61, "calming":61, "shorten":61, "evocative":61, "loopholes":61, "subdivisions":61, "hoax":61, "libertarian":61, "dawned":61, "fanciful":61, "classy":61, "habitual":61, "nominate":61, "sinful":61, "fuse":61, "frenchman":61, "soybean":61, "auditing":61, "behind-the-scenes":61, "legitimately":61, "shatter":61, "turquoise":61, "overalls":61, "quotations":61, "syllable":61, "crickets":61, "shaker":61, "recital":61, "hampered":61, "mater":61, "confluence":61, "futility":61, "malice":61, "boutiques":61, "tablecloth":61, "east-west":61, "baton":61, "refineries":61, "carvings":61, "referees":61, "clustered":61, "limitless":61, "absorbs":61, "banged":61, "vigilance":61, "tack":61, "selects":61, "twitching":61, "urn":61, "digestion":61, "colour":61, "genital":61, "desegregation":61, "nonlinear":61, "airlock":61, "circulate":61, "restructure":61, "attaches":61, "homegrown":61, "disruptions":61, "unsolved":61, "nineties":61, "hounds":61, "harmonic":61, "umpires":61, "pre-service":61, "evade":61, "chubby":61, "construed":61, "yup":61, "cork":61, "overdose":61, "helpers":61, "tax-free":61, "resented":61, "worsening":61, "screeching":61, "hiss":61, "overcoat":61, "shutter":61, "jurisprudence":61, "avian":61, "marveled":61, "intractable":61, "gleam":61, "aromatic":61, "stylized":61, "resultant":61, "stink":61, "waterfalls":61, "spacing":61, "benchmarks":61, "loaves":61, "phi":61, "mingle":61, "liberated":61, "tacit":61, "underdog":61, "sew":61, "smear":61, "bribes":61, "hymns":61, "empires":61, "boxers":61, "apricot":61, "batters":61, "messaging":61, "coincidentally":61, "swelled":61, "unlocked":61, "rivalries":61, "accessing":61, "afterlife":61, "reptiles":61, "alibi":61, "magnified":61, "mind-set":61, "upholstery":61, "absently":61, "buns":61, "braking":61, "paternity":61, "escapes":61, "topple":61, "strangest":61, "embroidered":61, "tabletop":61, "in-laws":61, "madman":61, "raspberries":61, "variants":61, "medley":61, "cross-sectional":61, "dispersal":61, "guatemalan":61, "extrinsic":61, "laid-back":61, "boosters":61, "laundering":61, "lyric":61, "dialysis":61, "vehemently":61, "stalled":61, "rallied":61, "pronouncements":61, "countrymen":61, "temptations":61, "acidic":61, "grandchild":61, "robber":61, "captors":61, "alloy":61, "fat-free":61, "probabilities":61, "flamboyant":61, "perils":61, "tame":61, "old-time":61, "locales":61, "robbers":61, "stair":61, "offscreen":61, "lopsided":61, "mansions":61, "tailor":61, "plaques":61, "clipboard":61, "entice":61, "nervousness":61, "backside":61, "suppressing":61, "plucked":61, "garb":61, "number-one":61, "unspecified":61, "victimized":61, "complicity":61, "autographs":61, "avant-garde":61, "braid":61, "flares":61, "elves":61, "plethora":61, "pressured":61, "bubbling":61, "apprehensive":61, "theorist":61, "burglar":61, "conservancy":61, "leeks":61, "broadening":61, "slaughtered":61, "nightfall":61, "vested":61, "occurrences":61, "differentiated":61, "rainwater":61, "metamorphosis":61, "academies":61, "pakistanis":61, "meth":61, "impenetrable":61, "relinquish":61, "shaved":61, "signifies":61, "vis-a-vis":61, "immediacy":61, "boulevard":61, "panorama":61, "shrapnel":61, "skates":61, "borough":61, "marxism":61, "empress":61, "nicest":61, "gratifying":61, "supplemented":61, "sweeter":61, "sharpen":61, "fumbled":61, "fad":61, "substituted":61, "skyscrapers":61, "drilled":61, "socializing":61, "indefinite":61, "abolition":61, "feral":61, "artworks":61, "countess":61, "stung":61, "scraped":61, "particulars":61, "state-run":61, "fiancee":61, "panelists":61, "trailhead":61, "millet":61, "ufo":61, "methodically":61, "restrained":61, "roamed":61, "precaution":61, "scowled":61, "perpendicular":61, "veterinarian":61, "automaker":61, "knitting":61, "posse":61, "shrub":61, "plummeted":61, "materialize":61, "perceives":61, "underfoot":61, "oncoming":61, "songwriter":61, "scandinavian":61, "keyboards":61, "ping":61, "softness":61, "unlucky":61, "hating":61, "carpeting":61, "scratches":61, "poisoned":61, "cadence":61, "transformative":61, "showroom":61, "repressed":61, "reflex":61, "out-of-state":61, "duffel":61, "policymaking":61, "chromosomes":61, "underestimated":61, "counteract":61, "concentrates":61, "pondered":61, "behaved":61, "regulates":61, "englishman":61, "grooves":61, "manned":61, "wide-open":61, "entrances":61, "shaggy":61, "hangover":61, "ethically":61, "bathrobe":61, "waterway":61, "vacancy":61, "slums":61, "lambs":61, "deviant":61, "humanist":61, "peeking":61, "convincingly":61, "alteration":61, "gastrointestinal":61, "vertigo":61, "bog":61, "obnoxious":61, "boyish":61, "snatch":61, "submerged":61, "artistry":61, "unexplained":61, "extant":61, "flocks":61, "pedaling":61, "wharf":61, "creaking":61, "inhaled":61, "inspected":61, "freer":61, "gutter":61, "commencement":61, "pointer":61, "snail":61, "boardwalk":61, "submitting":61, "multifaceted":61, "approves":61, "straightening":61, "detour":61, "fanning":61, "hand-held":61, "calendars":61, "roadway":61, "indexes":61, "defies":61, "mellow":61, "provocation":61, "reinforcements":61, "supervisory":61, "stroller":61, "cauliflower":61, "hotly":61, "prevails":61, "dismisses":61, "fumbling":61, "hassle":61, "multiplied":61, "shrieking":61, "stubble":61, "childlike":61, "mistrust":61, "sampled":61, "glacial":61, "bandage":61, "pores":61, "gums":61, "filtering":61, "coliseum":61, "fangs":61, "canes":61, "clones":61, "brewery":61, "wasps":61, "expired":61, "sorted":61, "wealthier":61, "compilation":61, "vile":61, "documentaries":61, "shortcut":61, "symptomatic":61, "sculptural":61, "inferences":61, "teeming":61, "austere":61, "exaggerate":61, "absurdity":61, "exuberance":61, "teacher-librarians":61, "informally":61, "hooking":61, "fours":61, "screenings":61, "radiance":61, "desirability":61, "percussion":61, "vial":61, "dentists":61, "diabetic":61, "amputation":61, "wield":61, "justifies":61, "reputable":61, "pretends":61, "socialize":61, "obligatory":61, "arched":61, "reformer":61, "potency":61, "diseased":61, "retailing":61, "voodoo":61, "bales":61, "grizzlies":61, "raged":61, "jumble":61, "withheld":61, "paparazzi":61, "withdrawals":61, "doughnut":61, "brunt":61, "succumb":61, "rein":61, "dearth":61, "namesake":61, "egos":61, "dissolves":61, "self-serving":61, "conceptualization":61, "salts":61, "classifications":61, "lingers":61, "lamented":61, "distaste":61, "donating":61, "blackened":61, "shaded":61, "gust":61, "ecologically":61, "lanterns":61, "superstition":61, "parcels":61, "feeder":61, "infield":61, "scanners":61, "fella":61, "cemeteries":61, "placements":61, "scallions":61, "formality":61, "screwing":61, "alleges":61, "squatted":61, "cancellation":61, "nexus":61, "coordinators":61, "erection":61, "brides":61, "somethin":61, "lanky":61, "agreeable":61, "doorways":61, "futuristic":61, "resumes":61, "originating":61, "elemental":61, "symmetrical":61, "roomy":61, "scaffolding":61, "tentacles":61, "umpire":61, "mainline":61, "almanac":61, "dune":61, "recollections":61, "enlarged":61, "interrupts":61, "rebounding":61, "kicker":61, "salons":61, "adequacy":61, "nectar":61, "veranda":61, "contractions":61, "collagen":61, "labour":61, "electrode":61, "slashed":61, "fixes":61, "flavorful":61, "esoteric":61, "excite":61, "duel":61, "heirloom":61, "tweed":61, "ebony":61, "grainy":61, "throng":61, "hummed":61, "homo":61, "basins":61, "arrays":61, "psychometric":61, "unraveling":61, "lieu":61, "proclaims":61, "groaning":61, "inconclusive":61, "perspiration":61, "affirms":61, "grimaced":61, "prototypes":61, "outfield":61, "regulator":61, "self-employed":61, "lark":61, "federalist":61, "mamma":61, "awash":61, "triumphs":61, "conveying":61, "flatten":61, "apathy":61, "nameless":61, "juxtaposition":61, "anecdote":61, "widowed":61, "incline":61, "shin":61, "pelvis":61, "crusader":61, "handguns":61, "cooker":61, "buster":61, "iodine":61, "defying":61, "idyllic":61, "alienated":61, "pinnacle":61, "glazed":61, "removable":61, "geologist":61, "peregrine":61, "exacerbate":61, "disappointments":61, "double-digit":61, "stimulates":61, "sci-fi":61, "droplets":61, "pickups":61, "compensatory":61, "kenyan":61, "brash":61, "pave":61, "affords":61, "ensured":61, "eras":61, "smacked":61, "campaigned":61, "ascending":61, "irregularities":61, "warships":61, "waterfowl":61, "chromosome":61, "irritated":61, "calculator":61, "rookies":61, "modular":61, "brook":61, "creme":61, "transcription":61, "starboard":61, "conductors":61, "billowing":61, "unattractive":61, "declarations":61, "vests":61, "soot":61, "reliant":61, "visualization":61, "loosening":61, "advantageous":61, "broad-based":61, "uniformity":61, "barricades":61, "mounts":61, "campsite":61, "ledger":61, "scallops":61, "fabled":61, "unrelenting":61, "one-fifth":61, "seven-year":61, "craze":61, "warily":61, "lumpy":61, "beatings":61, "tagged":61, "blushed":61, "keynote":61, "rationing":61, "frayed":61, "coolest":61, "degrading":61, "prescribing":61, "showtime":61, "pathologist":61, "captives":61, "leakage":61, "motivates":61, "facet":61, "lecturing":61, "willful":61, "blasts":61, "crouching":61, "milling":61, "improvise":61, "telegram":61, "paddling":61, "doves":61, "federalism":61, "playfully":61, "obligated":61, "indulgence":61, "gusts":61, "bestseller":61, "polluted":61, "stacking":61, "stud":61, "prologue":61, "crossings":61, "auxiliary":61, "plumber":61, "rapids":61, "mischievous":61, "interrelated":61, "reopened":61, "eyelashes":61, "reactionary":61, "unlawful":61, "marbles":61, "finder":61, "socialists":61, "earmarks":61, "half-century":61, "coexist":61, "consumes":61, "confided":61, "sanctity":61, "aristocracy":61, "locomotive":61, "acceptability":61, "meteors":61, "alluring":61, "absorbing":61, "brighten":61, "bolted":61, "explorations":61, "inert":61, "dictators":61, "clover":61, "bard":61, "rife":61, "payback":61, "raping":61, "intangible":61, "intersections":61, "strata":61, "ramps":61, "ion":61, "enriched":61, "vibrating":61, "discriminated":61, "pastries":61, "opposites":61, "movers":61, "interdependent":61, "extortion":61, "walkers":61, "negligent":61, "thug":61, "kneels":61, "relativism":61, "sigma":61, "diminishes":61, "swirl":61, "rickety":61, "grumbling":61, "sized":61, "cranky":61, "purposefully":61, "affirmed":61, "smokes":61, "entree":61, "bruise":61, "garages":61, "balm":61, "thunderstorms":61, "adjectives":61, "cola":61, "jig":61, "zionist":61, "dilapidated":61, "symbolizes":61, "indebted":61, "shielding":61, "wheeled":61, "assesses":61, "abducted":61, "fairs":61, "sawdust":61, "dung":61, "syntax":61, "welding":61, "distressing":61, "instantaneous":61, "maids":61, "hereditary":61, "superstitious":61, "beaded":61, "geologists":61, "self-report":61, "rebate":61, "curtail":61, "long-lasting":61, "mouthful":61, "blooming":61, "irrespective":61, "badges":61, "goddamned":61, "ecclesiastical":61, "bravo":61, "zombie":61, "civil-military":61, "comforts":61, "dazed":61, "frosty":61, "cartons":61, "molds":61, "bridal":61, "off-road":61, "obscenity":61, "communicative":61, "crunching":61, "hunk":61, "privy":61, "polluting":61, "apprenticeship":61, "inventors":61, "anemia":61, "hemp":61, "far-flung":61, "bravado":61, "unsuspecting":61, "wedged":61, "disrupting":61, "four-day":61, "graze":61, "rumbled":61, "multiplicity":61, "stalk":61, "orthopedic":61, "slum":61, "caregiving":61, "unchecked":61, "pioneered":61, "skillfully":61, "bubbly":61, "scrapes":61, "disclosures":61, "methamphetamine":61, "coffers":61, "carefree":61, "endanger":61, "paychecks":61, "painless":61, "infused":61, "incredulous":61, "loyalists":61, "downsizing":61, "buggy":61, "grinder":61, "health-related":61, "decoy":61, "caveat":61, "first-ever":61, "hordes":61, "fullest":61, "predicated":61, "one-hour":61, "basque":61, "unparalleled":61, "cocky":61, "fastened":61, "combating":61, "whine":61, "renovations":61, "hopelessness":61, "quarrel":61, "delete":61, "handbag":61, "mathematician":61, "separatist":61, "biscuit":61, "midlife":61, "coax":61, "unleash":61, "miserably":61, "re-create":61, "mockery":61, "projecting":61, "misconception":61, "uneasily":61, "motley":61, "inflatable":61, "runways":61, "thirteenth":61, "pussy":61, "decoys":61, "tantalizing":61, "sweetest":61, "heats":61, "unspeakable":61, "recapture":61, "manipulative":61, "blankly":61, "descendant":61, "grader":61, "replay":61, "stay-at-home":61, "protagonists":61, "fasting":61, "ethnography":61, "innocuous":61, "deflect":61, "mechanically":61, "rigged":61, "rot":61, "coolly":61, "ovation":61, "charred":61, "sobs":61, "manly":61, "growl":61, "compartments":61, "footwear":61, "nordic":61, "fecal":61, "hapless":61, "propelled":61, "guaranteeing":61, "grudgingly":61, "shattering":61, "furnish":61, "entry-level":61, "recorders":61, "crawls":61, "plumes":61, "conservationists":61, "fudge":61, "subprime":61, "fang":61, "solicit":61, "beauties":61, "thickened":61, "overload":61, "coldly":61, "sanction":61, "motorized":61, "high-stakes":61, "biochemical":61, "confessional":61, "docking":61, "scaring":61, "depleted":61, "forty-eight":61, "deploying":61, "resonant":61, "tarmac":61, "bonfire":61, "analogies":61, "campground":61, "chi-square":61, "skewers":61, "zoos":61, "balding":61, "self-sufficiency":61, "plantings":61, "localities":61, "painstakingly":61, "eloquently":61, "diligently":61, "abiding":61, "simplified":61, "manifests":61, "bowels":61, "hoses":61, "stockholders":61, "whips":61, "three-point":61, "ushered":61, "dispel":61, "unfounded":61, "redeem":61, "rehearsing":61, "motivating":61, "ratified":61, "ladders":61, "townspeople":61, "cramps":61, "vets":61, "tutors":61, "cross-border":61, "telecom":61, "sorely":61, "hovers":61, "stomping":61, "nonpartisan":61, "agile":61, "shrieked":61, "worst-case":61, "cast-iron":61, "drapes":61, "duet":61, "contractual":61, "syndicate":61, "bordered":61, "tripping":61, "textured":61, "conceptually":61, "harassing":61, "trade-off":61, "pre-existing":61, "sentinel":61, "causality":61, "venezuelan":61, "pentecostal":61, "kuwaitis":61, "coined":61, "staffed":61, "bravely":61, "nimble":61, "rained":61, "affirming":61, "cabaret":61, "seawater":61, "assassins":61, "juniper":61, "pelvic":61, "boosts":61, "sustenance":61, "pretext":61, "atypical":61, "elaboration":61, "omit":61, "rubric":61, "exporters":61, "impediment":61, "heartbreak":61, "lull":61, "engagements":61, "groan":61, "irritable":61, "annals":61, "veneer":61, "undefeated":61, "seniority":61, "washer":61, "newscast":61, "blisters":61, "genders":61, "dazzle":61, "disordered":61, "wishful":61, "overheard":61, "streamlined":61, "fosters":61, "rippling":61, "quivering":61, "expires":61, "respecting":61, "zoom":61, "nationalities":61, "in-service":61, "devising":61, "embattled":61, "hitch":61, "breezes":61, "squatting":61, "midwife":61, "acupuncture":61, "thrived":61, "insulted":61, "formulating":61, "snowstorm":61, "sixty-five":61, "dialing":61, "molasses":61, "diligent":61, "sprout":61, "til":61, "predation":61, "maximizing":62, "swarming":62, "bounces":62, "commuting":62, "mattresses":62, "yachts":62, "fiddle":62, "compositional":62, "representational":62, "filibuster":62, "gratefully":62, "three-way":62, "silhouettes":62, "niches":62, "casing":62, "anomalies":62, "globes":62, "never-ending":62, "disconcerting":62, "wielding":62, "feisty":62, "fatally":62, "binds":62, "dries":62, "principled":62, "howl":62, "gymnasium":62, "junkie":62, "facilitator":62, "scroll":62, "grapple":62, "off-limits":62, "clarifying":62, "parched":62, "pitted":62, "conduit":62, "ambience":62, "checkbook":62, "chronicles":62, "plugs":62, "backpacking":62, "counterinsurgency":62, "grouse":62, "ling":62, "geographers":62, "brimming":62, "collaborated":62, "sprouting":62, "flopped":62, "mastering":62, "scaled":62, "ghastly":62, "glint":62, "springtime":62, "generalize":62, "pissed":62, "vandalism":62, "booty":62, "self-image":62, "canoes":62, "terraces":62, "standout":62, "wayward":62, "detriment":62, "misgivings":62, "extracting":62, "calamity":62, "onlookers":62, "smashing":62, "jerking":62, "mobilized":62, "firepower":62, "evasion":62, "blackboard":62, "rigs":62, "fasten":62, "blueberry":62, "whaling":62, "shuffle":62, "hypocritical":62, "seven-year-old":62, "propriety":62, "democratically":62, "foresight":62, "sill":62, "blackout":62, "pate":62, "illustrator":62, "computation":62, "looters":62, "heron":62, "impart":62, "diminutive":62, "awarding":62, "eastward":62, "twitched":62, "thump":62, "assemblage":62, "challengers":62, "whiskers":62, "dialogues":62, "pruning":62, "sacramental":62, "gamut":62, "counterpoint":62, "heaps":62, "originals":62, "backpacks":62, "lingerie":62, "pendant":62, "waltz":62, "incision":62, "weld":62, "inserting":62, "hiked":62, "tacky":62, "hilltop":62, "shelling":62, "biker":62, "perestroika":62, "nonproliferation":62, "loadings":62, "emphatic":62, "anonymously":62, "truthfully":62, "unloading":62, "inaction":62, "navel":62, "ballads":62, "mavericks":62, "barring":62, "illuminating":62, "foray":62, "inept":62, "undisclosed":62, "like-minded":62, "undercut":62, "impacted":62, "uttered":62, "three-month":62, "maiden":62, "tummy":62, "demo":62, "brig":62, "reed":62, "saline":62, "iconography":62, "burr":62, "sociocultural":62, "combed":62, "apologetic":62, "shudder":62, "longer-term":62, "thirty-three":62, "unqualified":62, "maroon":62, "brownie":62, "extra-virgin":62, "daycare":62, "orioles":62, "cleverly":62, "wobbly":62, "lapse":62, "husky":62, "impunity":62, "fiat":62, "delusion":62, "detergent":62, "hunts":62, "vending":62, "whirlpool":62, "contraceptives":62, "kale":62, "hinted":62, "uplifting":62, "prompts":62, "locale":62, "groping":62, "masterpieces":62, "choreography":62, "arcs":62, "blowout":62, "chimes":62, "naturalistic":62, "coursework":62, "hectares":62, "fervent":62, "rumored":62, "prodigious":62, "errant":62, "concomitant":62, "diva":62, "prism":62, "saxophone":62, "hypnosis":62, "craving":62, "environmentalist":62, "specification":62, "enlargement":62, "trucking":62, "biosphere":62, "autistic":62, "android":62, "applauded":62, "afflicted":62, "augment":62, "inconsistency":62, "stationery":62, "tyrant":62, "northward":62, "knobs":62, "passer":62, "vip":62, "outsourcing":62, "orchestras":62, "bacterium":62, "no-nonsense":62, "unleashed":62, "uninterrupted":62, "three-time":62, "porches":62, "bistro":62, "terminally":62, "nonprofits":62, "feta":62, "landers":62, "effluent":62, "bonanza":62, "remake":62, "devotees":62, "restroom":62, "bleach":62, "reparations":62, "adoptions":62, "cpu":62, "one-fourth":62, "recited":62, "neutralize":62, "braced":62, "revising":62, "trotted":62, "ditches":62, "bohemian":62, "gulls":62, "ontological":62, "appraisals":62, "admiring":62, "swears":62, "wavering":62, "rescuing":62, "hateful":62, "externally":62, "physique":62, "eruptions":62, "artichokes":62, "receptor":62, "wrestled":62, "bulging":62, "lifetimes":62, "warms":62, "exponentially":62, "lowly":62, "stomped":62, "justifying":62, "consequent":62, "flicks":62, "revitalization":62, "accuser":62, "gleaned":62, "stomachs":62, "preached":62, "itch":62, "formulations":62, "cutters":62, "sling":62, "small-business":62, "shreds":62, "misled":62, "attaining":62, "inevitability":62, "beamed":62, "monolithic":62, "inadequacy":62, "centrally":62, "farce":62, "crooks":62, "lawful":62, "efficiencies":62, "serotonin":62, "neutrinos":62, "resonates":62, "blaring":62, "undeveloped":62, "renegade":62, "clasped":62, "teapot":62, "impassioned":62, "infrequently":62, "antiquated":62, "eyeballs":62, "striding":62, "cryptic":62, "puddles":62, "injustices":62, "nephews":62, "pledges":62, "rearing":62, "bandits":62, "canola":62, "steamer":62, "mink":62, "afterthought":62, "excludes":62, "exiting":62, "mobilizing":62, "spits":62, "undersecretary":62, "batted":62, "teas":62, "spreadsheet":62, "australians":62, "sparsely":62, "howled":62, "medium-low":62, "disobedience":62, "multidisciplinary":62, "cannons":62, "epoch":62, "ticker":62, "sonar":62, "ordination":62, "hindus":62, "yoruba":62, "saddened":62, "pressuring":62, "timed":62, "kinder":62, "sleepless":62, "pleasurable":62, "baritone":62, "pews":62, "compute":62, "liners":62, "cartels":62, "inpatient":62, "grounding":62, "hanged":62, "jeez":62, "fatherhood":62, "rodent":62, "exhibitors":62, "organics":62, "denouncing":62, "nook":62, "pickle":62, "vulnerabilities":62, "vocals":62, "ox":62, "brigades":62, "binder":62, "ranching":62, "transatlantic":62, "verdicts":62, "swat":62, "acuity":62, "gendered":62, "dat":62, "avail":62, "numbered":62, "bellies":62, "ouch":62, "dark-haired":62, "dehydration":62, "carcasses":62, "typed":62, "google":62, "colds":62, "fittings":62, "melanoma":62, "chuckling":62, "lifeline":62, "fluke":62, "sobbed":62, "wrongs":62, "idealized":62, "tubs":62, "violet":62, "propeller":62, "nebulae":62, "sumptuous":62, "sparking":62, "duly":62, "failings":62, "renewing":62, "curving":62, "elevations":62, "collaborations":62, "encased":62, "commits":62, "supple":62, "skim":62, "stagnation":62, "yolk":62, "optic":62, "passageway":62, "triad":62, "migraine":62, "tripled":62, "harming":62, "veiled":62, "likable":62, "taboo":62, "reproductions":62, "post-war":62, "artisan":62, "subgroup":62, "polygraph":62, "isolates":62, "issuers":62, "definitively":62, "chasm":62, "couches":62, "connotations":62, "subterranean":62, "salesmen":62, "adjective":62, "heterogeneity":62, "antibody":62, "conspicuously":62, "aloof":62, "resentful":62, "humiliated":62, "imperatives":62, "preexisting":62, "private-sector":62, "shyness":62, "soaps":62, "flask":62, "secession":62, "celibacy":62, "evaporated":62, "affectionately":62, "unorthodox":62, "virulent":62, "exhaled":62, "revolutionaries":62, "babysitter":62, "examiners":62, "concerto":62, "ricotta":62, "weakening":62, "palatable":62, "overtones":62, "pluck":62, "sickening":62, "three-story":62, "erupts":62, "subscriptions":62, "swims":62, "suede":62, "redwood":62, "corral":62, "tulips":62, "altruism":62, "dispense":62, "characteristically":62, "brazen":62, "hospitable":62, "retreating":62, "perceiving":62, "gadget":62, "enigma":62, "hierarchies":62, "contemplative":62, "spines":62, "webs":62, "individualistic":62, "gamblers":62, "warlords":62, "schema":62, "pedigree":62, "marches":62, "dizziness":62, "spawn":62, "mutant":62, "brownies":62, "bureaus":62, "cambodian":62, "ridiculously":62, "renovated":62, "articulating":62, "manufactures":62, "underage":62, "cheery":62, "dedicate":62, "inextricably":62, "fearsome":62, "jutting":62, "old-school":62, "wounding":62, "diligence":62, "misinformation":62, "rubbish":62, "angling":62, "nationalistic":62, "sores":62, "guideline":62, "mitt":62, "additive":62, "eradication":62, "urinary":62, "propagation":62, "opting":62, "complacent":62, "modernize":62, "thorny":62, "exhale":62, "fireplaces":62, "twine":62, "romances":62, "goldsmith":62, "painstaking":62, "diverting":62, "stamped":62, "smoothed":62, "instinctive":62, "shiver":62, "shyly":62, "lightest":62, "hanger":62, "hickory":62, "harvests":62, "spherical":62, "warp":62, "bikers":62, "rotor":62, "excerpted":62, "well-meaning":62, "splits":62, "feverish":62, "freshness":62, "thickly":62, "hurled":62, "superstars":62, "antiwar":62, "comptroller":62, "gall":62, "innuendo":62, "perfected":62, "entrusted":62, "tenacity":62, "boomed":62, "cordial":62, "eyesight":62, "exported":62, "havens":62, "martyrdom":62, "ammo":62, "grate":62, "solicitor":62, "granulated":62, "spanish-speaking":62, "humanism":62, "carver":62, "gorillas":62, "shrouded":62, "sympathize":62, "disrespect":62, "karate":62, "domes":62, "newborns":62, "sinners":62, "healers":62, "inca":62, "awry":62, "subsided":62, "exasperation":62, "effortless":62, "adrift":62, "plowing":62, "columnists":62, "checkout":62, "gunshots":62, "boneless":62, "standardization":62, "epidemics":62, "bibliography":62, "simulator":62, "dolly":62, "touting":62, "orchestrated":62, "labored":62, "fleshy":62, "potted":62, "two-bedroom":62, "summaries":62, "grapevine":62, "pane":62, "parable":62, "linguistics":62, "metaphysics":62, "optimization":62, "exquisitely":62, "blistering":62, "customized":62, "collaborator":62, "neurotic":62, "ultimatum":62, "mediums":62, "cyber":62, "branded":62, "dismissive":62, "hush":62, "bridging":62, "hypnotic":62, "unskilled":62, "canister":62, "radon":62, "clearest":62, "unforeseen":62, "outpouring":62, "displeasure":62, "streamed":62, "appetites":62, "beckoned":62, "pained":62, "hillsides":62, "knockout":62, "approximation":62, "necklaces":62, "blueprints":62, "sociologists":62, "buzzer":62, "bellows":62, "fraternal":62, "cross-examination":62, "visor":62, "amplitude":62, "jokingly":62, "credence":62, "dictates":62, "manicured":62, "subtlety":62, "multicolored":62, "complacency":62, "tenderly":62, "flop":62, "functionality":62, "hubs":62, "dummy":62, "propane":62, "midsize":62, "munitions":62, "insertion":62, "lobe":62, "methodical":62, "expectant":62, "soliciting":62, "swagger":62, "commentaries":62, "enchanted":62, "branding":62, "solvent":62, "contestant":62, "secretariat":62, "trojan":62, "dwarfs":62, "boasting":62, "aches":62, "lobbies":62, "aberration":62, "layering":62, "nurseries":62, "slalom":62, "provoking":62, "progressing":62, "nondescript":62, "consummate":62, "emblematic":62, "corrugated":62, "nomadic":62, "molestation":62, "coriander":62, "diaphragm":62, "rubles":62, "at-large":62, "exacting":62, "renamed":62, "clipped":62, "acknowledgement":62, "forty-two":62, "takers":62, "twig":62, "novices":62, "tankers":62, "bloggers":62, "quarantine":62, "macroeconomic":62, "neoliberal":62, "inexplicably":62, "lagging":62, "multiplying":62, "midair":62, "affiliations":62, "yearbook":62, "embroidery":62, "evangelist":62, "axle":62, "ecologists":62, "pathogen":62, "ducking":62, "infrequent":62, "agility":62, "plotted":62, "blanks":62, "finalist":62, "allegory":62, "decomposition":62, "euthanasia":62, "unwise":62, "intuitively":62, "obedient":62, "melodrama":62, "divergence":62, "epidemiological":62, "skater":62, "interviewers":62, "authorship":62, "legalization":62, "broadened":62, "tenacious":62, "unequivocally":62, "calmer":62, "uncovering":62, "rowdy":62, "spartan":62, "greenery":62, "candies":62, "crutches":62, "mites":62, "admires":62, "resourceful":62, "pinning":62, "shorthand":62, "chanted":62, "murmuring":62, "normalcy":62, "reared":62, "wrestler":62, "medic":62, "dialectic":62, "luscious":62, "acronym":62, "five-day":62, "ridicule":62, "epicenter":62, "craftsmanship":62, "shovels":62, "gauze":62, "rye":62, "airfield":62, "snails":62, "toad":62, "boar":62, "mormons":62, "rhino":62, "evolves":62, "tucking":62, "hushed":62, "stuffy":62, "betraying":62, "participates":62, "robberies":62, "filmmaking":62, "homogeneity":62, "archipelago":62, "mustang":62, "top-notch":62, "outnumber":62, "unremarkable":62, "adaptable":62, "well-defined":62, "evaporate":62, "frosted":62, "polled":62, "cascades":62, "buccaneers":62, "accords":62, "octopus":62, "homophobia":62, "sizzling":62, "warped":62, "congested":62, "readership":62, "condensed":62, "kinetic":62, "gambler":62, "violinist":62, "affluence":62, "condensation":62, "memorials":62, "lithium":62, "quickest":62, "bandwagon":62, "thirty-four":62, "taxis":62, "enclaves":62, "motels":62, "sporty":62, "eyewitnesses":62, "penthouse":62, "weight-loss":62, "miniseries":62, "crafting":62, "indignant":62, "dingy":62, "spokesmen":62, "stash":62, "accessory":62, "booms":62, "mop":62, "jukebox":62, "riddle":62, "conveyor":62, "marshals":62, "instructing":62, "flattened":62, "grandiose":62, "upholding":62, "rampage":62, "dissident":62, "wrapper":62, "eureka":62, "blight":62, "invasions":62, "ions":62, "scrutinized":62, "cascading":62, "chairwoman":62, "manicure":62, "partisans":62, "airliner":62, "confederation":62, "courier":62, "parka":62, "masonry":62, "forlorn":62, "crowned":62, "steely":62, "middle-income":62, "law-enforcement":62, "tote":62, "boaters":62, "smashes":62, "upland":62, "composites":62, "incessant":62, "convened":62, "comical":62, "concealing":62, "brag":62, "high-priced":62, "nuance":62, "soulful":62, "pocketbook":62, "wail":62, "chained":62, "reinventing":62, "insulated":62, "bums":62, "pollsters":62, "stumps":62, "cardiologist":62, "apostles":62, "reclamation":62, "furs":62, "responders":62, "alienate":62, "dismantled":62, "lounging":62, "inroads":62, "appreciating":62, "chills":62, "musty":62, "yank":62, "smelly":62, "mousse":62, "coupon":62, "snapper":62, "reshape":62, "expertly":62, "plugging":62, "inequities":62, "rations":62, "philanthropic":62, "intermediary":62, "obituary":62, "legacies":62, "hardcover":62, "additives":62, "poppy":62, "crippled":62, "exaggerating":62, "worsen":62, "comfy":62, "spate":62, "demolished":62, "fanatics":62, "guidebook":62, "screwdriver":62, "snipers":62, "top-down":62, "stables":62, "interchangeable":62, "hiatus":62, "lite":62, "israeli-palestinian":62, "inhibition":62, "cosmological":62, "escalated":62, "free-lance":62, "sketched":62, "illuminates":62, "leaky":62, "degrade":62, "editor-in-chief":62, "rehearse":62, "umbrellas":62, "distancing":62, "compliant":62, "foundational":62, "alcove":62, "dreamer":62, "destroyer":62, "non-western":62, "stifle":62, "conquered":62, "alienating":62, "denials":62, "sofas":62, "anti":62, "starch":62, "salespeople":62, "strikeouts":62, "drenched":62, "marvels":62, "tripped":62, "weeklong":62, "unworthy":62, "complying":62, "opportunistic":62, "lapel":62, "intrepid":62, "eases":62, "comedians":62, "swan":62, "willows":62, "aural":62, "gingerbread":62, "cloths":62, "otter":62, "polenta":62, "deft":62, "vista":62, "mores":62, "gaunt":62, "chases":62, "squat":62, "retreats":62, "directional":62, "apricots":62, "combs":62, "mainstay":62, "anyplace":62, "backfire":62, "exited":62, "despise":62, "thirty-one":62, "harsher":62, "dripped":62, "denominator":62, "fictitious":62, "lucid":62, "retiree":62, "delusions":62, "virginity":62, "repayment":62, "pigments":62, "confederacy":62, "inhibitors":62, "soundbite":62, "tamil":62, "clamoring":63, "undeniably":63, "hasten":63, "calculates":63, "idling":63, "filth":63, "stubby":63, "surpluses":63, "severance":63, "laments":63, "sifting":63, "growling":63, "unsustainable":63, "slit":63, "fleets":63, "snowflakes":63, "radiator":63, "plow":63, "heresy":63, "bagel":63, "yanks":63, "scooter":63, "globular":63, "washington-based":63, "lapses":63, "meaty":63, "moan":63, "fable":63, "fumble":63, "semen":63, "pursuant":63, "rugby":63, "psychoanalytic":63, "chimpanzees":63, "stocky":63, "gnarled":63, "grimy":63, "injuring":63, "deadliest":63, "bombshell":63, "freaking":63, "deformed":63, "mouthpiece":63, "cylindrical":63, "ambulances":63, "energy-efficient":63, "rinsed":63, "boosted":63, "undulating":63, "prettiest":63, "eight-year-old":63, "thirty-seven":63, "grower":63, "tacos":63, "crumb":63, "temps":63, "substrate":63, "ensued":63, "workday":63, "limping":63, "panoramic":63, "reforming":63, "voicing":63, "piss":63, "positives":63, "nightstand":63, "cavities":63, "putative":63, "peppermint":63, "nicaraguan":63, "transplantation":63, "emits":63, "oblique":63, "jamming":63, "baptized":63, "freeways":63, "bookcase":63, "subsidiaries":63, "consumerism":63, "congenital":63, "rake":63, "discerning":63, "rationally":63, "contentment":63, "cleavage":63, "aquaculture":63, "spectacularly":63, "unduly":63, "emptying":63, "seduced":63, "criticizes":63, "groomed":63, "glided":63, "deceit":63, "gimmick":63, "walk-in":63, "how-to":63, "backlog":63, "messengers":63, "autocratic":63, "grasslands":63, "encryption":63, "disservice":63, "allotted":63, "lunged":63, "law-abiding":63, "disapprove":63, "english-language":63, "torches":63, "payday":63, "hive":63, "mammograms":63, "rousing":63, "discord":63, "legality":63, "stainless-steel":63, "gangsters":63, "dammit":63, "capers":63, "speculating":63, "redefining":63, "spontaneity":63, "screenwriter":63, "gauges":63, "felons":63, "class-action":63, "hacker":63, "nanotechnology":63, "tireless":63, "farthest":63, "sultry":63, "side-by-side":63, "unsatisfactory":63, "bystanders":63, "wrappers":63, "denotes":63, "institutionalized":63, "canine":63, "nave":63, "shh":63, "foothold":63, "upgraded":63, "nourishment":63, "inferiority":63, "massacres":63, "aft":63, "alfalfa":63, "attitudinal":63, "concierge":63, "robotics":63, "dumplings":63, "defied":63, "migrated":63, "leaner":63, "reserving":63, "fender":63, "swimsuit":63, "stereotyping":63, "cabs":63, "jack":63, "weighty":63, "reassured":63, "cluttered":63, "revitalize":63, "cheesy":63, "speckled":63, "intruders":63, "flanks":63, "crystalline":63, "petrified":63, "painkillers":63, "hallucinations":63, "broiler":63, "adapter":63, "springing":63, "quell":63, "wryly":63, "clatter":63, "categorize":63, "balconies":63, "microcosm":63, "grievance":63, "restitution":63, "sociopolitical":63, "vowels":63, "walleye":63, "derail":63, "messed":63, "feats":63, "bruising":63, "thunderstorm":63, "liquidity":63, "beet":63, "rebates":63, "reflector":63, "rhubarb":63, "panamanian":63, "resounding":63, "drab":63, "contemplated":63, "cofounder":63, "thrills":63, "fortified":63, "bidder":63, "deferred":63, "observance":63, "kilometer":63, "cheerleaders":63, "shepherds":63, "choreographer":63, "first-generation":63, "primates":63, "e-commerce":63, "meatballs":63, "patriarchy":63, "loom":63, "reverie":63, "leveling":63, "skimming":63, "wailed":63, "demeaning":63, "marketable":63, "dignitaries":63, "snarled":63, "lawmaker":63, "workplaces":63, "inverse":63, "plums":63, "he/she":63, "accordion":63, "vestibule":63, "mp":63, "emblazoned":63, "starved":63, "step-by-step":63, "displace":63, "cools":63, "validated":63, "sketching":63, "jerky":63, "lockers":63, "interchange":63, "cellphones":63, "rapes":63, "roars":63, "realtors":63, "deduct":63, "antidepressants":63, "torpedo":63, "okra":63, "bestowed":63, "breezy":63, "cleans":63, "consolidating":63, "courteous":63, "involuntarily":63, "greener":63, "detectable":63, "chap":63, "hammock":63, "outback":63, "sac":63, "experimenter":63, "sighted":63, "revered":63, "dissolving":63, "adopts":63, "rigidity":63, "slimy":63, "purses":63, "ineligible":63, "conventionally":63, "carpenters":63, "nautical":63, "onscreen":63, "extracts":63, "pimp":63, "lentils":63, "zebra":63, "modems":63, "hives":63, "strident":63, "uniting":63, "scandalous":63, "tranquility":63, "curses":63, "laborer":63, "thorns":63, "schoolhouse":63, "maturation":63, "modalities":63, "meta-analysis":63, "tiniest":63, "rightfully":63, "revolve":63, "dashing":63, "seething":63, "complements":63, "tanned":63, "foolishness":63, "narrated":63, "optimize":63, "diversified":63, "braided":63, "uptown":63, "crowns":63, "mascot":63, "puritan":63, "macro":63, "constructivist":63, "devoting":63, "baffled":63, "lukewarm":63, "calmed":63, "artful":63, "stalked":63, "errand":63, "minimalist":63, "exclamation":63, "roadblocks":63, "laureate":63, "genitals":63, "incandescent":63, "amnesia":63, "comin":63, "throes":63, "outlandish":63, "interruptions":63, "impotence":63, "schematic":63, "idols":63, "forecasters":63, "palsy":63, "evaporation":63, "moguls":63, "atrium":63, "connector":63, "strives":63, "anticipates":63, "whomever":63, "earnestly":63, "riveting":63, "puffing":63, "buoyant":63, "pinched":63, "invincible":63, "perish":63, "resolute":63, "invests":63, "jumbo":63, "disclosing":63, "respectability":63, "abstractions":63, "preemptive":63, "communicator":63, "crusaders":63, "municipality":63, "commandos":63, "bourgeoisie":63, "filtration":63, "practicum":63, "smeared":63, "well-educated":63, "heinous":63, "mottled":63, "woodwork":63, "creaked":63, "cultured":63, "shacks":63, "on-screen":63, "inns":63, "loggers":63, "protestantism":63, "termites":63, "rallying":63, "exemplifies":63, "overgrown":63, "redesign":63, "siberian":63, "sportsmen":63, "moisturizer":63, "masturbation":63, "danes":63, "bogged":63, "deem":63, "queasy":63, "pun":63, "reappeared":63, "knit":63, "puffed":63, "stinks":63, "selfishness":63, "cliches":63, "antagonism":63, "downloading":63, "slime":63, "quarts":63, "infiltration":63, "cooperatives":63, "sienna":63, "stir-fry":63, "condescending":63, "unwarranted":63, "combing":63, "anguished":63, "unify":63, "thirty-eight":63, "linebackers":63, "externalizing":63, "masterful":63, "sketchy":63, "veered":63, "distributes":63, "deceive":63, "malaise":63, "concurrently":63, "digitally":63, "chandeliers":63, "inferno":63, "capitol":63, "faking":63, "nothingness":63, "bullied":63, "meridian":63, "horseshoe":63, "rappers":63, "balked":63, "contrasted":63, "reconciled":63, "electing":63, "skyward":63, "rewriting":63, "tingling":63, "pokes":63, "sprays":63, "predictability":63, "flier":63, "high-resolution":63, "noose":63, "wildcats":63, "depreciation":63, "charger":63, "universes":63, "interviewees":63, "rockfish":63, "ethereal":63, "envious":63, "concise":63, "philosophically":63, "overworked":63, "fingernail":63, "snout":63, "shuttles":63, "fiber-optic":63, "risotto":63, "tortoise":63, "meteorite":63, "hard-pressed":63, "air-conditioned":63, "interprets":63, "giggle":63, "co-worker":63, "cleanliness":63, "retaliate":63, "hammers":63, "lonesome":63, "trolling":63, "mediators":63, "cordless":63, "poaching":63, "roofing":63, "floured":63, "scaling":63, "shuttered":63, "wistful":63, "trudged":63, "engraved":63, "castles":63, "valuing":63, "manipulations":63, "tonal":63, "inversion":63, "nobles":63, "lambda":63, "ever-changing":63, "elated":63, "competes":63, "tempt":63, "forbids":63, "nine-year-old":63, "imperfections":63, "toll-free":63, "talk-show":63, "brunette":63, "coffins":63, "vignettes":63, "ducts":63, "cam":63, "planters":63, "secularism":63, "pixel":63, "deepened":63, "amenable":63, "grisly":63, "hairline":63, "sternly":63, "sparkled":63, "arouse":63, "glows":63, "milestones":63, "escorts":63, "recharge":63, "millimeters":63, "underclass":63, "camper":63, "ops":63, "randomized":63, "geothermal":63, "halting":63, "ticked":63, "defunct":63, "enthusiast":63, "relaxes":63, "logged":63, "mournful":63, "equip":63, "eroding":63, "barbaric":63, "stunts":63, "ordained":63, "stand-alone":63, "scum":63, "mixtures":63, "whisking":63, "satanic":63, "charters":63, "bindings":63, "teamed":63, "endearing":63, "defiantly":63, "lurid":63, "bolder":63, "condolences":63, "floorboards":63, "sadistic":63, "pizzas":63, "recap":63, "penned":63, "nemesis":63, "communicates":63, "misunderstandings":63, "wrinkle":63, "yawned":63, "subscriber":63, "pennant":63, "remission":63, "figurines":63, "previews":63, "dumbbells":63, "neglecting":63, "gaudy":63, "celebratory":63, "ire":63, "self-evident":63, "structurally":63, "glassy":63, "shriek":63, "preventable":63, "waivers":63, "childbearing":63, "chloride":63, "observatories":63, "antioxidant":63, "poetics":63, "storied":63, "graciously":63, "appease":63, "unforgiving":63, "widest":63, "contradicts":63, "spied":63, "raking":63, "mandating":63, "withering":63, "rosary":63, "dealerships":63, "lodges":63, "purgatory":63, "brine":63, "scrolls":63, "circumvent":63, "indelible":63, "unfriendly":63, "cologne":63, "forwards":63, "supplementary":63, "socio-economic":63, "elasticity":63, "amassed":63, "unscathed":63, "splashed":63, "organizes":63, "onerous":63, "revert":63, "disrespectful":63, "bushy":63, "accommodated":63, "objectionable":63, "sweats":63, "nieces":63, "playgrounds":63, "cookbooks":63, "untrained":63, "functionally":63, "tremor":63, "meek":63, "school-age":63, "antennas":63, "mammogram":63, "tau":63, "sex/nudity":63, "stave":63, "seeping":63, "underpinnings":63, "wallets":63, "banished":63, "cradling":63, "bookshelf":63, "adversarial":63, "newsletters":63, "dependents":63, "departmental":63, "arugula":63, "hard-liners":63, "sopranos":63, "kidnappers":63, "pacers":63, "chimps":63, "pursues":63, "oozing":63, "intolerant":63, "righteousness":63, "closures":63, "idiom":63, "suction":63, "cavaliers":63, "authoritarianism":63, "rabbis":63, "putts":63, "subtest":63, "regaining":63, "easygoing":63, "hires":63, "penetrated":63, "ascend":63, "second-floor":63, "discriminating":63, "orphaned":63, "destabilizing":63, "grandkids":63, "seasonings":63, "lexicon":63, "bondage":63, "circumference":63, "altruistic":63, "scalpel":63, "overpowering":63, "fluttering":63, "expel":63, "hurtful":63, "seduce":63, "hubris":63, "vetoed":63, "newlyweds":63, "rupture":63, "flaps":63, "hoods":63, "vacancies":63, "categorization":63, "handlebar":63, "reggae":63, "whole-wheat":63, "archery":63, "mexican-american":63, "zulu":63, "camped":63, "compile":63, "inflate":63, "justifiable":63, "bellowed":63, "noxious":63, "autos":63, "domesticated":63, "apparition":63, "timbers":63, "romanticism":63, "first-person":63, "drones":63, "bolstered":63, "earmarked":63, "slung":63, "mend":63, "eternally":63, "subtract":63, "allege":63, "do-it-yourself":63, "sauteed":63, "specs":63, "altitudes":63, "inquisition":63, "gripes":63, "alluded":63, "rigorously":63, "primed":63, "four-year-old":63, "stinking":63, "paraphernalia":63, "predetermined":63, "windowsill":63, "aggressiveness":63, "booking":63, "kittens":63, "umm":63, "reservists":63, "bemused":63, "surrendering":63, "devour":63, "lovable":63, "practicality":63, "recoup":63, "labors":63, "determinant":63, "sassy":63, "panes":63, "subculture":63, "multiracial":63, "ballast":63, "laity":63, "mayan":63, "impervious":63, "fanned":63, "nifty":63, "innocently":63, "twinkling":63, "perceptive":63, "stalling":63, "outbursts":63, "marries":63, "disinterested":63, "golfing":63, "doorknob":63, "mountainside":63, "gazes":63, "wilt":63, "ligament":63, "lockout":63, "butte":63, "dampen":63, "disarming":63, "crux":63, "refresh":63, "childless":63, "warplanes":63, "dot-com":63, "neurologist":63, "leeway":63, "scouring":63, "ceases":63, "luster":63, "inhaling":63, "fielding":63, "commend":63, "certify":63, "severed":63, "eaters":63, "interfaces":63, "fleece":63, "starship":63, "overrun":63, "refute":63, "cowardly":63, "writhing":63, "phrasing":63, "purification":63, "archetypal":63, "jesuits":63, "epsilon":63, "surpassed":63, "tiring":63, "quits":63, "unannounced":63, "electrician":63, "font":63, "extraterrestrial":63, "drug-related":63, "utterances":63, "horsemen":63, "underlie":63, "sizing":63, "crumbled":63, "mash":63, "thawed":63, "brood":63, "starry":63, "migrations":63, "whores":63, "vortex":63, "goalie":63, "quaker":63, "blatantly":63, "forthright":63, "year-end":63, "tableau":63, "peacetime":63, "assassinations":63, "hump":63, "townhouse":63, "pharmacies":63, "shotguns":63, "battleship":63, "homelands":63, "extradition":63, "scathing":63, "scrutinize":63, "fussy":63, "lazily":63, "outlying":63, "lain":63, "polarized":63, "uneducated":63, "dissenting":63, "breakers":63, "sailboat":63, "gurney":63, "toxin":63, "resettlement":63, "confectioners":63, "panda":63, "boisterous":63, "evoked":63, "increments":63, "acquires":63, "customize":63, "bulldozers":63, "towing":63, "libel":63, "nativity":63, "coincides":63, "heighten":63, "tantamount":63, "inundated":63, "scurrying":63, "run-up":63, "passersby":63, "taunting":63, "cronies":63, "actuality":63, "fabricated":63, "dryly":63, "indict":63, "tiers":63, "condominiums":63, "wrongful":63, "conditioners":63, "landowner":63, "skunk":63, "non-hispanic":63, "self-proclaimed":63, "replenish":63, "fates":63, "streaked":63, "corny":63, "resided":63, "preponderance":63, "contiguous":63, "veggie":63, "conversions":63, "surfers":63, "jubilee":63, "qualms":63, "fruitless":63, "steadfast":63, "condone":63, "torment":63, "precocious":63, "puffs":63, "testifies":63, "poisons":63, "beards":63, "coexistence":63, "noodle":63, "progressives":63, "interfaith":63, "stuttering":63, "phosphate":63, "maggot":63, "nudge":63, "basing":63, "enrolling":63, "morbid":63, "labor-intensive":63, "inducted":63, "applicability":63, "quickness":63, "scams":63, "irises":63, "clinician":63, "inexorably":63, "astonishingly":63, "reborn":63, "conciliatory":63, "sabotage":63, "embankment":63, "connectivity":63, "sacrificial":63, "karaoke":63, "raccoon":63, "transcendental":63, "lattice":63, "sis":63, "skyrocketing":63, "downplay":63, "assaulting":63, "yanking":63, "admirer":63, "minimized":63, "clueless":63, "slumber":63, "eyeglasses":63, "set-up":63, "submissions":63, "first-degree":63, "wildfire":63, "saws":63, "punctuation":63, "degenerate":63, "fainter":63, "test-retest":63, "patties":63, "beset":63, "maneuvering":63, "insatiable":63, "hitherto":63, "novelists":63, "sewers":63, "free-agent":63, "redhead":63, "wholeness":63, "ill-fated":63, "cursory":63, "smartly":63, "broadest":63, "plowed":63, "busily":63, "milder":63, "poise":63, "sculpted":63, "reelected":63, "narrows":63, "genealogy":63, "semifinal":63, "environmentalism":63, "stratosphere":63, "vectors":63, "tram":63, "radial":63, "meningitis":63, "dialog":63, "good-natured":63, "resolutely":63, "smoldering":63, "stabilized":63, "streamline":63, "corollary":63, "liars":63, "beret":63, "hm":63, "wistfully":63, "garnered":63, "compiling":63, "bookshelves":63, "unveiling":63, "discarding":63, "swearing":63, "bluffs":63, "genie":63, "protectionism":63, "annexation":63, "shank":63, "ignited":63, "conundrum":63, "discounted":63, "recede":63, "relive":63, "silverware":63, "breakfasts":63, "nutritionist":63, "spires":63, "pick-up":63, "daughter-in-law":63, "tributaries":63, "saffron":63, "geriatric":63, "atonement":63, "monastic":63, "repatriation":63, "brisket":63, "voluminous":63, "trickling":63, "byproduct":63, "well-to-do":63, "disheveled":63, "whack":63, "tolerable":63, "woken":63, "dispensing":63, "ailment":63, "rabid":63, "finality":63, "shootout":63, "expiration":63, "cartoonist":63, "congruent":63, "heaters":63, "balkan":63, "hyperactivity":63, "gleefully":63, "mow":63, "riverbank":63, "demonic":63, "mermaid":63, "decentralization":63, "normalization":63, "ulcer":63, "pollutant":63, "vowel":63, "alerted":64, "saddled":64, "one-tenth":64, "revulsion":64, "hilly":64, "constrain":64, "renounce":64, "stiffened":64, "intercepted":64, "commemorative":64, "mountaintop":64, "pawn":64, "miscarriage":64, "shroud":64, "liter":64, "carp":64, "sinuses":64, "homophobic":64, "chechen":64, "distal":64, "long-running":64, "intrude":64, "windowless":64, "fifty-five":64, "undetected":64, "scourge":64, "five-minute":64, "injure":64, "offbeat":64, "inhuman":64, "chauffeur":64, "toothpick":64, "equivalence":64, "poly":64, "intercollegiate":64, "filipinos":64, "seamlessly":64, "boundless":64, "presided":64, "lobbied":64, "rejoin":64, "ruefully":64, "life-size":64, "amplified":64, "stooped":64, "ouster":64, "cocoon":64, "self-consciousness":64, "bile":64, "chemists":64, "kingdoms":64, "degeneration":64, "stripper":64, "civil-rights":64, "camcorder":64, "paltry":64, "diagonally":64, "mumbling":64, "sagged":64, "bunches":64, "tangy":64, "miscellaneous":64, "swallows":64, "allusion":64, "clearinghouse":64, "brat":64, "underrepresented":64, "slugs":64, "crucifix":64, "utterance":64, "nonfat":64, "mightily":64, "headway":64, "arbitrarily":64, "governs":64, "heaving":64, "handouts":64, "vanishes":64, "jigsaw":64, "commercialization":64, "immunization":64, "gradient":64, "cuttings":64, "woefully":64, "adage":64, "resorting":64, "fickle":64, "uncompromising":64, "standstill":64, "post-world":64, "optimist":64, "coolness":64, "intestines":64, "revel":64, "accomplice":64, "reflexes":64, "raiding":64, "tongs":64, "latitudes":64, "likert-type":64, "digit":64, "herbicides":64, "behemoth":64, "fiddling":64, "evoking":64, "alters":64, "noisily":64, "roving":64, "geek":64, "rioting":64, "beggar":64, "dissection":64, "oppositional":64, "overseen":64, "fared":64, "soundly":64, "laboring":64, "critters":64, "hustle":64, "pronunciation":64, "earners":64, "decorator":64, "child-care":64, "doorman":64, "hydrocarbons":64, "rabies":64, "corals":64, "blossomed":64, "furor":64, "intermittently":64, "canceling":64, "interconnected":64, "gigs":64, "pantheon":64, "jerseys":64, "utopia":64, "fourth-quarter":64, "silt":64, "varnish":64, "autoimmune":64, "non-native":64, "unassuming":64, "droves":64, "two-year-old":64, "unequivocal":64, "triumphantly":64, "outnumbered":64, "storefronts":64, "loafers":64, "disciple":64, "contingencies":64, "crosswise":64, "convicts":64, "tory":64, "interrogations":64, "subordination":64, "chestnuts":64, "evaluative":64, "sterilization":64, "swarmed":64, "slant":64, "scapegoat":64, "travelling":64, "leaflets":64, "sedans":64, "handsomely":64, "loosened":64, "dismantling":64, "sundown":64, "breakout":64, "permanence":64, "flak":64, "jock":64, "nozzle":64, "lifes":64, "radishes":64, "puck":64, "tepid":64, "minded":64, "radiating":64, "unending":64, "sidelined":64, "busted":64, "unambiguous":64, "homemaker":64, "sophomores":64, "aggravated":64, "housework":64, "cyclist":64, "vultures":64, "antecedents":64, "clean-up":64, "consulate":64, "artichoke":64, "pomegranate":64, "drooping":64, "confine":64, "reconnect":64, "antithesis":64, "wasteland":64, "picky":64, "ruby":64, "bassist":64, "inflationary":64, "florist":64, "dispersion":64, "cougars":64, "debtor":64, "racked":64, "unites":64, "inched":64, "corrosive":64, "unbiased":64, "assent":64, "cereals":64, "denote":64, "traditionalists":64, "airspace":64, "deities":64, "deconstruction":64, "yer":64, "derailleur":64, "epitome":64, "succinctly":64, "disingenuous":64, "purported":64, "self-worth":64, "indie":64, "cardigan":64, "circuitry":64, "parasitic":64, "geologic":64, "seashore":64, "old-growth":64, "whit":64, "shipyard":64, "lackluster":64, "ferocity":64, "venturing":64, "adhering":64, "amiable":64, "unintentionally":64, "raided":64, "persistently":64, "two-part":64, "posits":64, "protege":64, "ordinances":64, "watts":64, "sacraments":64, "gelatin":64, "mistaking":64, "interferes":64, "pleases":64, "steeply":64, "worsened":64, "snuck":64, "chimed":64, "fragility":64, "augmented":64, "specifies":64, "unsolicited":64, "stiffer":64, "daisies":64, "leveraged":64, "videotaped":64, "sobriety":64, "canisters":64, "ever-present":64, "firmer":64, "redirect":64, "intersect":64, "sputtering":64, "lovemaking":64, "overland":64, "arming":64, "marginalized":64, "asymmetry":64, "stallion":64, "snowflake":64, "long-awaited":64, "cringe":64, "mimics":64, "rejoice":64, "materialized":64, "amorphous":64, "to-do":64, "computer-generated":64, "quartered":64, "grating":64, "payoffs":64, "passivity":64, "rockers":64, "refrigeration":64, "burners":64, "undisputed":64, "uprooted":64, "incarcerated":64, "swells":64, "merchandising":64, "monopolies":64, "jeweler":64, "liters":64, "coop":64, "annex":64, "queue":64, "insurmountable":64, "wrenching":64, "mingling":64, "chagrin":64, "swooped":64, "dares":64, "well-dressed":64, "burdensome":64, "unanticipated":64, "merging":64, "affliction":64, "enacting":64, "rebuttal":64, "prohibitions":64, "skid":64, "aromas":64, "cheddar":64, "marginalization":64, "single-parent":64, "satchel":64, "congregational":64, "protons":64, "epistemology":64, "fret":64, "intervened":64, "earshot":64, "donned":64, "congregate":64, "open-minded":64, "brightened":64, "jungles":64, "repulsive":64, "mediated":64, "fronds":64, "acquittal":64, "jerks":64, "graft":64, "canning":64, "rem":64, "swapping":64, "dank":64, "showcases":64, "overflow":64, "hippies":64, "excavated":64, "clippers":64, "equestrian":64, "kimono":64, "chaplains":64, "cacophony":64, "relieving":64, "mimicking":64, "transfixed":64, "snag":64, "genteel":64, "drunks":64, "laces":64, "entrants":64, "payload":64, "lice":64, "anaerobic":64, "etching":64, "championed":64, "passively":64, "well-trained":64, "watered":64, "waded":64, "persecuted":64, "picturing":64, "weariness":64, "incoherent":64, "recruiter":64, "speculators":64, "microprocessor":64, "savoring":64, "sneaked":64, "blazed":64, "incur":64, "greats":64, "whined":64, "observant":64, "signifying":64, "annihilation":64, "tampering":64, "mythological":64, "rave":64, "clamp":64, "revisionist":64, "bonnet":64, "spokes":64, "blackberries":64, "correlates":64, "no-fly":64, "contraceptive":64, "covariates":64, "forays":64, "ejected":64, "dislocation":64, "insignia":64, "tax-exempt":64, "constitutions":64, "at-bats":64, "lasagna":64, "townships":64, "mastectomy":64, "convection":64, "riparian":64, "mecca":64, "bewildering":64, "eclipsed":64, "inappropriately":64, "homey":64, "financier":64, "despicable":64, "specifying":64, "creeps":64, "twirling":64, "kidnap":64, "legislate":64, "second-year":64, "huddle":64, "adoration":64, "noun":64, "harbour":64, "interspersed":64, "inconsequential":64, "bundled":64, "shun":64, "reclaiming":64, "recovers":64, "diluted":64, "flicking":64, "colorless":64, "bureaucrat":64, "squared":64, "feathered":64, "encore":64, "workmen":64, "battlefields":64, "universality":64, "constitutionality":64, "crayons":64, "superpowers":64, "choirs":64, "maximal":64, "retina":64, "self-regulation":64, "purest":64, "eight-year":64, "abundantly":64, "unfettered":64, "smirk":64, "impotent":64, "slain":64, "psychotherapist":64, "thorn":64, "woolen":64, "asymmetrical":64, "fullback":64, "raincoat":64, "starlight":64, "pail":64, "indigent":64, "wildfires":64, "dapper":64, "dumbbell":64, "sorcery":64, "frees":64, "chaired":64, "tinted":64, "zenith":64, "dashes":64, "freaks":64, "allusions":64, "beggars":64, "quirk":64, "handiwork":64, "audacious":64, "fruition":64, "dissimilar":64, "sash":64, "racetrack":64, "rainbows":64, "credential":64, "cultivars":64, "shambles":64, "smitten":64, "spewing":64, "evaluates":64, "gruff":64, "phased":64, "three-bedroom":64, "belligerent":64, "biz":64, "crossword":64, "kappa":64, "turbo":64, "franciscan":64, "shoemaker":64, "calibration":64, "amphibians":64, "dopamine":64, "down-to-earth":64, "hoisted":64, "sympathies":64, "busting":64, "gulp":64, "veer":64, "steeper":64, "achievable":64, "retorted":64, "woe":64, "sow":64, "blogger":64, "addictions":64, "filler":64, "translators":64, "molested":64, "inscriptions":64, "workstation":64, "arterial":64, "cults":64, "salmonella":64, "matured":64, "faltering":64, "ever-increasing":64, "audacity":64, "unsteady":64, "memberships":64, "equivalents":64, "vegetative":64, "newscaster":64, "deepwater":64, "steelhead":64, "coca":64, "convene":64, "spotless":64, "exasperated":64, "oust":64, "wisps":64, "profusion":64, "hurtling":64, "defenseless":64, "sensuous":64, "lament":64, "dunk":64, "experimentally":64, "radicalism":64, "allegorical":64, "gunner":64, "annuity":64, "unstoppable":64, "wispy":64, "gushing":64, "underscored":64, "underlies":64, "firestorm":64, "faceless":64, "converse":64, "pernicious":64, "brawl":64, "chants":64, "mastermind":64, "drinker":64, "indeterminate":64, "hairdresser":64, "chuckles":64, "itinerant":64, "dogmatic":64, "ecologist":64, "clam":64, "launchers":64, "defence":64, "sponges":64, "winnings":64, "primate":64, "particulate":64, "cannibalism":64, "misplaced":64, "jaded":64, "overtaken":64, "trepidation":64, "pretentious":64, "puny":64, "hatched":64, "prays":64, "flirt":64, "all-day":64, "deployments":64, "chemo":64, "neutrino":64, "consternation":64, "rippled":64, "edifice":64, "bearer":64, "rout":64, "rotates":64, "peg":64, "enrollments":64, "fuselage":64, "junta":64, "aztec":64, "frenetic":64, "ominously":64, "trove":64, "comforted":64, "scurried":64, "shameless":64, "self-destructive":64, "lenient":64, "lettering":64, "lightness":64, "second-class":64, "wheezing":64, "orally":64, "snowball":64, "delusional":64, "feces":64, "alligators":64, "scriptural":64, "colt":64, "herpes":64, "scoffed":64, "munching":64, "touchy":64, "vacationing":64, "showered":64, "resigning":64, "dips":64, "prying":64, "pledging":64, "graphically":64, "contraption":64, "frugal":64, "valiant":64, "great-grandfather":64, "felon":64, "bagels":64, "flake":64, "monarchs":64, "dialectical":64, "wineries":64, "sandinistas":64, "wreak":64, "enormity":64, "bereft":64, "traverse":64, "hurling":64, "harass":64, "appointing":64, "bash":64, "gunpoint":64, "browsing":64, "crouch":64, "trade-offs":64, "reversible":64, "kernel":64, "battalions":64, "mariner":64, "parent-child":64, "theorem":64, "discriminant":64, "bastion":64, "concur":64, "adamantly":64, "matter-of-factly":64, "unchallenged":64, "decadent":64, "flashlights":64, "woolly":64, "imbalances":64, "breaker":64, "commune":64, "temp":64, "hassles":64, "grammatical":64, "suffrage":64, "clarinet":64, "neoclassical":64, "issuer":64, "prettier":64, "banal":64, "fewest":64, "embers":64, "countertop":64, "post-traumatic":64, "fireball":64, "venison":64, "coups":64, "episodic":64, "graphical":64, "toppled":64, "sported":64, "sordid":64, "three-fourths":64, "skewed":64, "billion-dollar":64, "imbued":64, "telephoned":64, "ajar":64, "aesthetically":64, "swiveled":64, "self-reliance":64, "droughts":64, "rhymes":64, "pickled":64, "caretakers":64, "ministerial":64, "sculptors":64, "settler":64, "curbside":64, "typology":64, "extravaganza":64, "superfluous":64, "surgically":64, "pinching":64, "greenish":64, "antagonistic":64, "blushing":64, "platters":64, "anchoring":64, "amends":64, "cassettes":64, "pharaoh":64, "wholeheartedly":64, "deceptively":64, "devotes":64, "yearn":64, "cleanly":64, "intensifying":64, "adorn":64, "clamped":64, "zealous":64, "gasps":64, "subsidizing":64, "fanatical":64, "unearthed":64, "ascribed":64, "exiled":64, "confessing":64, "chairmen":64, "harmonies":64, "hash":64, "aggressor":64, "anglo-american":64, "tribunals":64, "sickle":64, "crier":64, "depriving":64, "plopped":64, "juggle":64, "yawning":64, "sleazy":64, "illusory":64, "precepts":64, "fab":64, "apostolic":64, "affable":64, "cognizant":64, "disillusionment":64, "confiscated":64, "sneaky":64, "renovate":64, "spasms":64, "iridescent":64, "waitresses":64, "scoreboard":64, "apostle":64, "goldfish":64, "acidity":64, "toppings":64, "halibut":64, "basal":64, "headmaster":64, "fresco":64, "router":64, "defuse":64, "heretofore":64, "catchy":64, "sustains":64, "purportedly":64, "fanatic":64, "deceived":64, "satisfies":64, "hesitantly":64, "metaphorically":64, "illustrative":64, "outposts":64, "clap":64, "eaves":64, "galvanized":64, "dyes":64, "derby":64, "rapists":64, "multiple-choice":64, "triplets":64, "tinnitus":64, "tinged":64, "thwarted":64, "rigors":64, "deteriorated":64, "gnawing":64, "elaborately":64, "rearrange":64, "lacy":64, "fingered":64, "glimpsed":64, "millimeter":64, "tendrils":64, "delegations":64, "sitcoms":64, "drop-off":64, "bulldozer":64, "teak":64, "untitled":64, "kiosk":64, "icelandic":64, "time-honored":64, "succumbed":64, "fervently":64, "paucity":64, "patronizing":64, "enterprising":64, "combative":64, "carelessly":64, "perished":64, "stitched":64, "itchy":64, "screech":64, "bulletproof":64, "evicted":64, "litmus":64, "assailant":64, "fallacy":64, "promulgated":64, "wigs":64, "right-handed":64, "bras":64, "fractions":64, "jalapeno":64, "opulent":64, "rigidly":64, "buff":64, "custom-made":64, "nutshell":64, "shred":64, "scented":64, "scrimmage":64, "budgeting":64, "mediating":64, "programmatic":64, "skipper":64, "surfer":64, "coatings":64, "excision":64, "experimented":64, "hallowed":64, "next-door":64, "popularly":64, "twinge":64, "distorting":64, "prerogative":64, "blouses":64, "unattended":64, "divorces":64, "pubic":64, "topless":64, "reusable":64, "pheasant":64, "epoxy":64, "coldwater":64, "peddling":64, "raked":64, "cross-legged":64, "repel":64, "coldest":64, "nape":64, "hollered":64, "fucked":64, "magnum":64, "ground-based":64, "cost-benefit":64, "cyanide":64, "rustling":64, "deluge":64, "rationalize":64, "strangle":64, "moot":64, "inferred":64, "recitation":64, "jog":64, "judgement":64, "unintentional":64, "promenade":64, "freestanding":64, "grille":64, "reformist":64, "jumpers":64, "shoplifting":64, "accession":64, "eel":64, "bale":64, "malaysian":64, "haphazard":64, "excused":64, "flexing":64, "user-friendly":64, "scrawny":64, "disseminate":64, "re-elected":64, "blue-eyed":64, "indiscriminate":64, "restart":64, "abrasive":64, "configured":64, "realtor":64, "overruled":64, "vertebrae":64, "lunges":64, "etiology":64, "semantics":64, "superintendents":64, "poachers":64, "mirrored":64, "heartily":64, "flinch":64, "bottomless":64, "judgmental":64, "detects":64, "slits":64, "tilts":64, "full-service":64, "ice-cream":64, "voyages":64, "darwinian":64, "gypsies":64, "chastity":64, "reels":64, "atheists":64, "mag":64, "spas":64, "ref":64, "otters":64, "postpartum":64, "unwieldy":64, "eminently":64, "meddling":64, "conspiring":64, "stoic":64, "evasive":64, "periodicals":64, "cravings":64, "subversion":64, "hydroelectric":64, "seventeenth-century":64, "self-government":64, "syphilis":64, "multiplication":64, "lynching":64, "cochlear":64, "throwback":64, "hulking":64, "draconian":64, "downed":64, "sob":64, "cleanse":64, "paneling":64, "reset":64, "numbness":64, "bicycling":64, "vials":64, "aerodynamic":64, "transformational":64, "incongruous":64, "uncontrollably":64, "fingering":64, "enraged":64, "turn-of-the-century":64, "springboard":64, "nicknames":64, "toaster":64, "chimneys":64, "exporter":64, "slats":64, "moustache":64, "encampment":64, "fetuses":64, "spousal":64, "beech":64, "fairways":64, "seaman":64, "mathematicians":64, "mackerel":64, "axial":64, "compressor":64, "emigrants":64, "dyslexia":64, "luring":64, "inkling":64, "mocked":64, "tearful":64, "decrepit":64, "entangled":64, "sputtered":64, "stamping":64, "uneasiness":64, "reconstructed":64, "concentric":64, "flowered":64, "mortars":64, "bullish":64, "earring":64, "freudian":64, "barbershop":64, "intergovernmental":64, "crucifixion":64, "quartz":64, "staggers":64, "freighter":64, "abatement":64, "temperance":64, "embarking":64, "wrangling":64, "unmistakably":64, "perplexing":64, "captivated":64, "dangle":64, "undergoes":64, "seedy":64, "one-room":64, "victor":64, "muses":64, "ebb":64, "terra":64, "lawless":64, "boardroom":64, "improvising":64, "decrees":64, "disengagement":64, "fibrous":64, "taco":64, "ponies":64, "cupcakes":64, "foreign-born":64, "toleration":64, "plummet":64, "uncharted":64, "instructs":64, "rehabilitate":64, "scowl":64, "improvised":64, "impediments":64, "conserving":64, "womanhood":64, "spasm":64, "round-trip":64, "tombstone":64, "poodle":64, "melons":64, "renters":64, "concourse":64, "hopper":64, "opal":64, "all-important":64, "ousted":64, "deceiving":64, "graying":64, "infiltrate":64, "legitimize":64, "indulgent":64, "trumpets":64, "sayings":64, "dudes":64, "low-sodium":64, "velocities":64, "waffle":64, "drippings":64, "liberally":64, "well-documented":64, "overstated":64, "incessantly":64, "mid-1960s":64, "congenial":64, "pointers":64, "prioritize":64, "snowing":64, "psychedelic":64, "canteen":64, "annuals":64, "banjo":64, "sectional":64, "contras":64, "pesky":64, "lumbering":64, "figuratively":64, "nears":64, "commensurate":64, "nightclubs":64, "repaid":64, "recessions":64, "gallant":64, "slut":64, "umbilical":64, "pivot":64, "depositions":64, "spotty":65, "starkly":65, "bewilderment":65, "flinched":65, "ruddy":65, "weeding":65, "indecent":65, "somalis":65, "heh":65, "hinting":65, "indulging":65, "devouring":65, "abreast":65, "synthesize":65, "gauntlet":65, "bluish":65, "ugliness":65, "savers":65, "bibles":65, "airstrikes":65, "unveil":65, "scratchy":65, "clarified":65, "treading":65, "squirming":65, "clings":65, "categorically":65, "massively":65, "thumbnail":65, "assassinate":65, "vernacular":65, "synergy":65, "gunpowder":65, "rafting":65, "sheriffs":65, "penance":65, "scrambles":65, "unitary":65, "geneticist":65, "mesa":65, "passwords":65, "teetering":65, "clouded":65, "exorbitant":65, "arrayed":65, "winking":65, "saddest":65, "mislead":65, "ambiguities":65, "gash":65, "latter-day":65, "blue-green":65, "predisposition":65, "hardcore":65, "summits":65, "anti-inflammatory":65, "equities":65, "fictions":65, "transom":65, "intergenerational":65, "quizzes":65, "detainee":65, "orthopaedic":65, "fast-moving":65, "lashed":65, "baffling":65, "precedes":65, "unsavory":65, "destabilize":65, "unsuitable":65, "constituting":65, "geniuses":65, "underdeveloped":65, "lieutenants":65, "thickening":65, "pooling":65, "precursors":65, "self-awareness":65, "underserved":65, "crepe":65, "wreaths":65, "hypothermia":65, "cystic":65, "breast-feeding":65, "chilies":65, "inservice":65, "student-athletes":65, "lexical":65, "stifling":65, "publicize":65, "dissipate":65, "forbade":65, "all-night":65, "belatedly":65, "inefficiency":65, "self-respect":65, "coworker":65, "bans":65, "yoke":65, "planter":65, "abstracts":65, "flocked":65, "sweltering":65, "voracious":65, "overblown":65, "glitches":65, "follower":65, "potholes":65, "hand-painted":65, "inanimate":65, "sabbatical":65, "thermos":65, "airfare":65, "trapping":65, "villas":65, "institutionalization":65, "bakers":65, "forage":65, "honed":65, "untested":65, "rung":65, "rewritten":65, "yellows":65, "omen":65, "fruity":65, "mortals":65, "tendons":65, "parentheses":65, "profanity":65, "infringement":65, "cognac":65, "sari":65, "constable":65, "photon":65, "single-handedly":65, "luxuries":65, "squeaky":65, "showering":65, "insulate":65, "lunatic":65, "rote":65, "faxes":65, "savages":65, "allotment":65, "start-ups":65, "quarterfinals":65, "potentials":65, "tether":65, "transfusion":65, "aquifer":65, "adoring":65, "pegged":65, "thunderous":65, "shielded":65, "ironies":65, "choppy":65, "gulped":65, "flip-flops":65, "posterity":65, "progeny":65, "uncooked":65, "feudal":65, "alias":65, "didactic":65, "devaluation":65, "sects":65, "marshall":65, "intricacies":65, "sandwiched":65, "artfully":65, "characterizing":65, "integrates":65, "staked":65, "retrieving":65, "steers":65, "self-consciously":65, "debuts":65, "organically":65, "carriages":65, "entryway":65, "gale":65, "realignment":65, "campsites":65, "playwrights":65, "escalator":65, "tarragon":65, "redistricting":65, "restricts":65, "well-intentioned":65, "precede":65, "amuse":65, "minimizes":65, "interlocking":65, "reproducing":65, "charting":65, "vindication":65, "inwardly":65, "basements":65, "illiteracy":65, "humanistic":65, "putter":65, "lifeboat":65, "bombarded":65, "spanned":65, "inching":65, "wavered":65, "destitute":65, "immobile":65, "faintest":65, "compounding":65, "treetops":65, "suckers":65, "protectors":65, "atheist":65, "impressionist":65, "lymphoma":65, "megawatts":65, "anorexia":65, "resorted":65, "plastered":65, "culprits":65, "precariously":65, "shrugging":65, "abject":65, "grudge":65, "creases":65, "chipping":65, "departs":65, "all-white":65, "waxing":65, "crusades":65, "exec":65, "bulldog":65, "broil":65, "blacksmith":65, "raven":65, "preeminent":65, "panacea":65, "harboring":65, "sugary":65, "discredited":65, "honking":65, "sorrows":65, "sensitivities":65, "toenails":65, "collusion":65, "ballerina":65, "sapphire":65, "tailback":65, "bipartisanship":65, "stereotyped":65, "cyclone":65, "narrators":65, "semiconductors":65, "solves":65, "hone":65, "craggy":65, "delve":65, "foreseen":65, "forty-three":65, "exerted":65, "low-tech":65, "superhero":65, "prewar":65, "seclusion":65, "matte":65, "synagogues":65, "hah":65, "locality":65, "historiography":65, "highness":65, "turret":65, "monsignor":65, "sturgeon":65, "long-term-care":65, "leery":65, "clashed":65, "absurdly":65, "merciless":65, "whiz":65, "supremely":65, "reshaping":65, "charmed":65, "hollering":65, "loner":65, "shortcuts":65, "closings":65, "slotted":65, "sharpening":65, "eighth-grade":65, "dissenters":65, "glossary":65, "coal-fired":65, "uterine":65, "assistive":65, "embroiled":65, "accolades":65, "revolved":65, "zipped":65, "politeness":65, "subtext":65, "movable":65, "basking":65, "psycho":65, "catalogues":65, "skylight":65, "pita":65, "mutiny":65, "nay":65, "gondola":65, "matrices":65, "preoperative":65, "treasured":65, "plucking":65, "quandary":65, "dainty":65, "buttery":65, "wove":65, "rump":65, "conjecture":65, "commemoration":65, "biennial":65, "loin":65, "scorers":65, "plug-in":65, "dredging":65, "devotional":65, "callous":65, "pitting":65, "sporadically":65, "curbing":65, "selfless":65, "innocents":65, "empathetic":65, "livelihoods":65, "roundup":65, "isles":65, "portrayals":65, "anomalous":65, "flashback":65, "homered":65, "mage":65, "laughable":65, "mercifully":65, "molded":65, "averted":65, "banter":65, "strangeness":65, "walled":65, "magnifying":65, "southward":65, "waive":65, "olympian":65, "toolbox":65, "assemblyman":65, "politicization":65, "forestall":65, "hour-long":65, "rapt":65, "behaves":65, "clamor":65, "disconnected":65, "sprinted":65, "big-city":65, "wagging":65, "obeyed":65, "dynamism":65, "d'oeuvres":65, "bribe":65, "suspensions":65, "paving":65, "mysticism":65, "sentient":65, "invertebrates":65, "emir":65, "self-imposed":65, "stashed":65, "run-down":65, "dodged":65, "emigrated":65, "vestiges":65, "armpits":65, "vomit":65, "reptile":65, "redness":65, "frowns":65, "repentance":65, "polluters":65, "piston":65, "zombies":65, "cherokees":65, "vowing":65, "kudos":65, "vagaries":65, "colliding":65, "glinting":65, "forebears":65, "engendered":65, "reaffirm":65, "tremors":65, "orchestral":65, "day-care":65, "botany":65, "catheter":65, "landfall":65, "bogey":65, "meringue":65, "brazilians":65, "gusto":65, "velvety":65, "head-to-head":65, "classically":65, "shuddering":65, "sympathizers":65, "thickest":65, "structuring":65, "vocalist":65, "provenance":65, "knead":65, "assertiveness":65, "hath":65, "amplification":65, "four-hour":65, "perplexed":65, "schooled":65, "old-timers":65, "artistically":65, "licks":65, "criminally":65, "strangled":65, "box-office":65, "meditate":65, "leggings":65, "topsoil":65, "thermostat":65, "waffles":65, "clustering":65, "unmatched":65, "irreverent":65, "clogged":65, "tacked":65, "lingo":65, "appropriated":65, "sightseeing":65, "californian":65, "glittered":65, "mathematically":65, "retriever":65, "justifications":65, "hangers":65, "newsprint":65, "constitutive":65, "methadone":65, "swamped":65, "blurring":65, "breakdowns":65, "philanthropist":65, "left-hand":65, "skyscraper":65, "shoestring":65, "terrier":65, "rafts":65, "low-wage":65, "duality":65, "self-portrait":65, "lowland":65, "inquisitive":65, "ablaze":65, "praises":65, "bickering":65, "speculations":65, "patently":65, "succulent":65, "subvert":65, "ten-year-old":65, "cross-section":65, "checkup":65, "cinder":65, "invalid":65, "ratify":65, "convoys":65, "inactivity":65, "allowable":65, "amphitheater":65, "hiker":65, "abort":65, "outlaws":65, "computer-based":65, "photovoltaic":65, "multibillion-dollar":65, "astounded":65, "originates":65, "cooperated":65, "scolded":65, "conferred":65, "store-bought":65, "denser":65, "two-lane":65, "citywide":65, "commander-in-chief":65, "kilograms":65, "rusher":65, "connectedness":65, "barbarians":65, "respiration":65, "turnips":65, "estuary":65, "polymers":65, "meteorites":65, "mind-boggling":65, "suffocating":65, "garish":65, "herein":65, "twinkle":65, "everlasting":65, "brits":65, "satirical":65, "loudspeaker":65, "privatize":65, "allocations":65, "liqueur":65, "baits":65, "proximal":65, "skiff":65, "speculates":65, "astray":65, "unbridled":65, "nourish":65, "crackling":65, "illustrious":65, "fused":65, "malfunction":65, "transplanted":65, "shallows":65, "adaptability":65, "retraining":65, "headboard":65, "turban":65, "directorate":65, "shockingly":65, "affront":65, "solidify":65, "uninterested":65, "obscuring":65, "bucking":65, "yummy":65, "decorum":65, "inasmuch":65, "vegetarians":65, "rudder":65, "pancreatic":65, "prosocial":65, "endangering":65, "scrubbed":65, "grimace":65, "malevolent":65, "flanking":65, "tantrum":65, "horny":65, "flapped":65, "insulating":65, "enhancements":65, "duplication":65, "meteorological":65, "teacher-librarian":65, "haunts":65, "blossoming":65, "exhilaration":65, "limped":65, "babbling":65, "prank":65, "expressway":65, "jumpsuit":65, "boomer":65, "forensics":65, "lads":65, "slider":65, "regiments":65, "internalizing":65, "apnea":65, "ramshackle":65, "studded":65, "big-name":65, "unfulfilled":65, "rumpled":65, "silenced":65, "otherworldly":65, "plunges":65, "essayist":65, "barons":65, "turtleneck":65, "clipping":65, "intelligible":65, "tomography":65, "bidders":65, "ether":65, "unmet":65, "age-related":65, "baptists":65, "habitable":65, "catwalk":65, "canvassing":65, "proviso":65, "mangrove":65, "depositors":65, "overheated":65, "red-hot":65, "judicious":65, "pleads":65, "feel-good":65, "heartache":65, "spoonful":65, "sensuality":65, "hardball":65, "tailoring":65, "mega":65, "darts":65, "alchemy":65, "brigadier":65, "chutes":65, "hoarding":65, "caseload":65, "branching":65, "photosynthesis":65, "avatar":65, "seminaries":65, "fishers":65, "engulfed":65, "shunned":65, "outlawed":65, "scruffy":65, "fiscally":65, "diversions":65, "compatriots":65, "symbiotic":65, "arbiter":65, "longs":65, "overhang":65, "horticultural":65, "payout":65, "spirals":65, "intoxication":65, "you-all":65, "tiller":65, "heralded":65, "surreptitiously":65, "loudest":65, "debatable":65, "monotonous":65, "humbling":65, "damning":65, "giveaway":65, "summing":65, "exalted":65, "top-ranked":65, "polishing":65, "ancillary":65, "jugs":65, "insurrection":65, "dishonesty":65, "shears":65, "taboos":65, "sunflowers":65, "transistors":65, "psychopathology":65, "close-knit":65, "precipitous":65, "partake":65, "riveted":65, "ready-made":65, "spiky":65, "exclaims":65, "envied":65, "horrid":65, "fling":65, "obsessions":65, "cowardice":65, "white-haired":65, "waistband":65, "dispatches":65, "slaying":65, "goodnight":65, "hulls":65, "absences":65, "commando":65, "able-bodied":65, "ligaments":65, "lacquer":65, "antebellum":65, "pager":65, "overtake":65, "coy":65, "environs":65, "aghast":65, "unwritten":65, "radiate":65, "channeling":65, "sprinting":65, "clawing":65, "drive-by":65, "droppings":65, "innovators":65, "grids":65, "sportsman":65, "outfitters":65, "unionized":65, "quads":65, "swordfish":65, "commodore":65, "pathfinder":65, "doping":65, "paraphrase":65, "whims":65, "utilizes":65, "countering":65, "eloquence":65, "deleterious":65, "nerd":65, "blinks":65, "stun":65, "totalitarianism":65, "slavic":65, "populism":65, "sleigh":65, "weavers":65, "caddie":65, "kindle":65, "sheepishly":65, "jittery":65, "relocating":65, "sided":65, "weaves":65, "retires":65, "picnics":65, "sunlit":65, "forty-four":65, "blip":65, "quagmire":65, "summons":65, "overcrowding":65, "jingle":65, "eyeball":65, "trekking":65, "transgression":65, "tokens":65, "resale":65, "buoyed":65, "dilute":65, "resurrected":65, "bristling":65, "shopped":65, "contemptuous":65, "flavored":65, "mistreatment":65, "tubular":65, "pop-up":65, "tertiary":65, "marshmallows":65, "brothel":65, "chromium":65, "indy":65, "discourages":65, "toppling":65, "flattered":65, "flutter":65, "unscrupulous":65, "hustling":65, "condemns":65, "disaffected":65, "widower":65, "bailing":65, "suitors":65, "fortitude":65, "jackpot":65, "refreshments":65, "materialistic":65, "kayaking":65, "ravioli":65, "intricately":65, "rundown":65, "slow-moving":65, "reestablish":65, "awkwardness":65, "rhetorically":65, "maturing":65, "dusting":65, "restlessness":65, "tycoon":65, "co-star":65, "khakis":65, "shimmer":65, "midpoint":65, "reuse":65, "gated":65, "lowlands":65, "fleas":65, "rector":65, "ovaries":65, "tarts":65, "whitetail":65, "acceptances":65, "loath":65, "lavishly":65, "candidly":65, "preaches":65, "interminable":65, "deterred":65, "flaring":65, "affixed":65, "reunite":65, "pointy":65, "resuming":65, "cameo":65, "spoils":65, "high-pressure":65, "pant":65, "mismatch":65, "tempest":65, "mercenaries":65, "airmen":65, "mailman":65, "lupus":65, "reappear":65, "snagged":65, "churned":65, "protruding":65, "reprieve":65, "beckoning":65, "unrecognized":65, "skidded":65, "pudgy":65, "forgave":65, "drowsy":65, "flaky":65, "cancerous":65, "rapture":65, "forte":65, "worshipers":65, "abuser":65, "tot":65, "truckers":65, "pancreas":65, "entomologist":65, "harmonica":65, "curtailed":65, "fast-paced":65, "quirks":65, "justly":65, "daze":65, "glut":65, "forty-seven":65, "motivator":65, "sidekick":65, "perfectionist":65, "wraparound":65, "tributary":65, "strainer":65, "multiples":65, "saber":65, "borrower":65, "regrettably":65, "idiotic":65, "erasing":65, "drawl":65, "flinging":65, "amplify":65, "inflexible":65, "scribbling":65, "hawking":65, "gratuitous":65, "schoolyard":65, "door-to-door":65, "mutters":65, "partnering":65, "implanted":65, "sinner":65, "halter":65, "exclusionary":65, "motorcade":65, "dichotomous":65, "bereavement":65, "concoction":65, "posturing":65, "benefactor":65, "sharpness":65, "trespassing":65, "maniac":65, "off-season":65, "vices":65, "ode":65, "virgins":65, "hulk":65, "sorority":65, "buoy":65, "wok":65, "yams":65, "migraines":65, "space-time":65, "stanza":65, "stressor":65, "irate":65, "cranking":65, "distasteful":65, "stunted":65, "infuse":65, "downpour":65, "discontinued":65, "deems":65, "emitting":65, "upper-class":65, "downloaded":65, "withdraws":65, "mirroring":65, "second-generation":65, "intercontinental":65, "catechism":65, "gumbo":65, "theorizing":65, "regimens":65, "bighorn":65, "deans":65, "four-cylinder":65, "centuries-old":65, "sanguine":65, "viciously":65, "divulge":65, "strapping":65, "netted":65, "tweak":65, "cold-blooded":65, "inhibits":65, "schoolwork":65, "sexiest":65, "fetish":65, "blackouts":65, "flounder":65, "bulkhead":65, "prosciutto":65, "foodborne":65, "straddling":65, "dismayed":65, "despised":65, "loathing":65, "defensible":65, "invisibility":65, "sprinkler":65, "cleats":65, "pliers":65, "omelet":65, "filaments":65, "horseradish":65, "multiparty":65, "pharmacists":65, "basilica":65, "balmy":65, "three-week":65, "overcast":65, "salvaged":65, "confidant":65, "trotting":65, "fro":65, "promiscuous":65, "subways":65, "petting":65, "accredited":65, "exponential":65, "mittens":65, "not-for-profit":65, "relapse":65, "uptake":65, "cornbread":65, "penicillin":65, "peppercorns":65, "whisky":65, "yemeni":65, "enchanting":65, "doubting":65, "commemorating":65, "beefy":65, "thirty-nine":65, "flushing":65, "ruse":65, "incriminating":65, "invocation":65, "natures":65, "greyhound":65, "malt":65, "inorganic":65, "porters":65, "medial":65, "hamper":65, "precludes":65, "collided":65, "exemplify":65, "inducing":65, "grime":65, "upheavals":65, "unbalanced":65, "predisposed":65, "yellowed":65, "naivete":65, "expectantly":65, "squint":65, "tint":65, "splinters":65, "takeout":65, "build-up":65, "liaisons":65, "realty":65, "mucus":65, "nation-states":65, "motherfucker":65, "sharpest":65, "nudging":65, "subside":65, "darkening":65, "nominally":65, "enshrined":65, "twitch":65, "all-stars":65, "importation":65, "airflow":65, "psalm":65, "lineages":65, "synod":65, "incontinence":65, "outfitted":65, "considerate":65, "associating":65, "implausible":65, "barometer":65, "tethered":65, "qualitatively":65, "operatic":65, "penitentiary":65, "decode":65, "platonic":65, "underpants":65, "consul":65, "orphanages":65, "counterfeit":65, "gregarious":65, "untenable":65, "purview":65, "scooping":65, "foreboding":65, "anemic":65, "reorganize":65, "intensively":65, "invokes":65, "incipient":65, "ascendancy":65, "disembodied":65, "elicited":65, "one-dimensional":65, "martinis":65, "crucible":65, "human-rights":65, "mutt":65, "intestine":65, "excise":65, "refinance":65, "formica":65, "dynamo":65, "first-quarter":65, "cannabis":65, "coaxing":65, "unyielding":65, "hallmarks":65, "mingled":65, "complicates":65, "entailed":65, "mirage":65, "routed":65, "torturing":65, "unwind":65, "chipped":65, "readable":65, "reinstated":65, "allocating":65, "gist":65, "generalizability":65, "reunions":65, "snowboarding":65, "mowers":65, "no-brainer":65, "shortened":65, "unconcerned":65, "summarizing":65, "leathery":65, "incendiary":65, "elaborated":65, "whereupon":65, "substandard":65, "splinter":65, "quid":65, "uprisings":65, "fillet":65, "searchers":65, "twister":65, "emery":65, "fibrosis":65, "evacuees":65, "caterpillars":65, "proton":65, "whitetails":65, "gravitate":66, "gargantuan":66, "pompous":66, "hellish":66, "cripple":66, "tightens":66, "transgressions":66, "modernizing":66, "cupboards":66, "appointee":66, "refrigerated":66, "gals":66, "libido":66, "salesperson":66, "value-added":66, "volts":66, "resiliency":66, "mainframe":66, "spanish-language":66, "smattering":66, "reigns":66, "afield":66, "hoist":66, "reconciling":66, "pollute":66, "summoning":66, "mediocrity":66, "pullout":66, "meds":66, "eviction":66, "scrapbook":66, "vat":66, "commissioning":66, "termite":66, "parlance":66, "reigned":66, "cram":66, "teaming":66, "surly":66, "cranked":66, "dollop":66, "ten-year":66, "bouquets":66, "tantrums":66, "layoff":66, "antennae":66, "capitalization":66, "wrestlers":66, "profusely":66, "remarried":66, "disseminated":66, "squealed":66, "extraneous":66, "classifying":66, "styled":66, "desolation":66, "shopkeepers":66, "mystic":66, "lifespan":66, "redundancy":66, "raisin":66, "racketeering":66, "crocodiles":66, "yiddish":66, "remittances":66, "armenians":66, "mammy":66, "peculiarly":66, "squirmed":66, "checkered":66, "undiscovered":66, "gaped":66, "confounding":66, "wedlock":66, "mists":66, "volley":66, "imperialist":66, "donuts":66, "swans":66, "restorative":66, "rheumatoid":66, "delirium":66, "bogs":66, "blister":66, "skittish":66, "revolutionize":66, "snaking":66, "tout":66, "shoddy":66, "annoy":66, "irritate":66, "week-long":66, "groans":66, "rotated":66, "hacked":66, "win-win":66, "materially":66, "merciful":66, "surname":66, "overturning":66, "downtime":66, "rigging":66, "skeptic":66, "comforter":66, "magnetism":66, "boxed":66, "underwriting":66, "framers":66, "achievers":66, "confederates":66, "electors":66, "copious":66, "overpriced":66, "squealing":66, "unplanned":66, "accelerates":66, "unproductive":66, "gutters":66, "thumped":66, "snort":66, "pregame":66, "dryness":66, "emails":66, "tits":66, "glares":66, "wafer":66, "realists":66, "referent":66, "hopi":66, "well-worn":66, "behest":66, "elevating":66, "upstart":66, "prodded":66, "mementos":66, "henceforth":66, "coiled":66, "complied":66, "vibrate":66, "slugger":66, "fatality":66, "fifth-grade":66, "refueling":66, "outlays":66, "poplar":66, "britons":66, "singularity":66, "negation":66, "stakeholder":66, "grander":66, "tackled":66, "amiss":66, "softens":66, "esteemed":66, "storming":66, "accrue":66, "overthrown":66, "graces":66, "reprints":66, "err":66, "parlors":66, "hilt":66, "hearsay":66, "postures":66, "solos":66, "sardines":66, "princesses":66, "headdress":66, "black-eyed":66, "sagebrush":66, "syringes":66, "doggy":66, "noncompliance":66, "scorpion":66, "in-state":66, "slipper":66, "arboretum":66, "tempers":66, "subtleties":66, "commence":66, "lashing":66, "equated":66, "half-mile":66, "derogatory":66, "enlarging":66, "apprehended":66, "trillions":66, "expressionless":66, "antithetical":66, "suitor":66, "rectangles":66, "favoritism":66, "kites":66, "myocardial":66, "reticent":66, "sparingly":66, "quarter-century":66, "hyperbole":66, "tasteful":66, "glistened":66, "reconstructing":66, "fluctuating":66, "homely":66, "specks":66, "catastrophes":66, "foregoing":66, "fund-raisers":66, "mobs":66, "subpoenas":66, "strikers":66, "stalwart":66, "afoot":66, "bragged":66, "handfuls":66, "receded":66, "by-product":66, "meaningfully":66, "unwrapped":66, "melodramatic":66, "fetched":66, "centering":66, "pretensions":66, "conceptualized":66, "roadblock":66, "eater":66, "violators":66, "omissions":66, "blob":66, "sameness":66, "collectibles":66, "misbehavior":66, "unsweetened":66, "beep":66, "seeker":66, "bandit":66, "narcissism":66, "bereaved":66, "caddy":66, "warhead":66, "landlady":66, "intelligences":66, "mammography":66, "eucharistic":66, "expend":66, "attainable":66, "inexperience":66, "snappy":66, "businesslike":66, "upturned":66, "capricious":66, "roulette":66, "inlaid":66, "cappuccino":66, "dimensional":66, "networked":66, "intelligentsia":66, "deep-sea":66, "oat":66, "tirelessly":66, "softening":66, "intoxicating":66, "fulfills":66, "missteps":66, "euphemism":66, "riskier":66, "falter":66, "eighty-five":66, "asses":66, "disorderly":66, "stammered":66, "sodas":66, "dandy":66, "peacock":66, "hereafter":66, "fowl":66, "skinless":66, "feeders":66, "dukes":66, "windmills":66, "neuroscience":66, "longitude":66, "teeter":66, "converter":66, "black-owned":66, "unwavering":66, "regroup":66, "magnate":66, "grumpy":66, "orient":66, "five-star":66, "uncomplicated":66, "execs":66, "moans":66, "safeguarding":66, "hatches":66, "trifle":66, "snatches":66, "high-definition":66, "indoctrination":66, "medics":66, "measles":66, "illegals":66, "morphology":66, "authorial":66, "hatchery":66, "potters":66, "bled":66, "outwardly":66, "feathery":66, "dead-end":66, "glides":66, "inserts":66, "handcuffed":66, "styrofoam":66, "corduroy":66, "affordability":66, "kitty":66, "testicles":66, "whole-grain":66, "in-line":66, "supersonic":66, "voluptuous":66, "one-of-a-kind":66, "well-organized":66, "dictating":66, "early-morning":66, "clumsily":66, "blunder":66, "co-director":66, "bristles":66, "saver":66, "carousel":66, "determinations":66, "theologically":66, "altars":66, "high-frequency":66, "stimulants":66, "bivariate":66, "intergroup":66, "enviable":66, "harbored":66, "far-off":66, "slumping":66, "preside":66, "assigns":66, "glitch":66, "drier":66, "obstruct":66, "incurable":66, "indistinct":66, "statesmen":66, "gilt":66, "sixth-grade":66, "forts":66, "wholesalers":66, "oncology":66, "ascetic":66, "obliterated":66, "engender":66, "wringing":66, "deep-seated":66, "nibbling":66, "self-taught":66, "reimburse":66, "collarbone":66, "innermost":66, "silken":66, "gyms":66, "anti-government":66, "squints":66, "navigational":66, "gills":66, "bio":66, "extramarital":66, "magenta":66, "hemorrhage":66, "moles":66, "naw":66, "unwed":66, "metrics":66, "aryan":66, "scolding":66, "inflicting":66, "untapped":66, "foolproof":66, "upshot":66, "upside-down":66, "massages":66, "affections":66, "treachery":66, "karma":66, "bane":66, "transistor":66, "burials":66, "encoding":66, "childcare":66, "badger":66, "butt-head":66, "trawl":66, "spiked":66, "obsessively":66, "bunched":66, "sympathetically":66, "mushy":66, "overtures":66, "connotation":66, "outcast":66, "patina":66, "dials":66, "courtly":66, "amphibious":66, "chiffon":66, "narcotic":66, "inhalation":66, "militiamen":66, "oars":66, "spool":66, "personification":66, "watersheds":66, "twofold":66, "captivating":66, "bygone":66, "tweaking":66, "scrutinizing":66, "oblige":66, "genial":66, "lithe":66, "snatching":66, "trickled":66, "aficionados":66, "hangout":66, "boldness":66, "junkies":66, "confide":66, "fingertip":66, "tugs":66, "stewards":66, "dietitian":66, "amalgam":66, "monograph":66, "importer":66, "surveyor":66, "refinancing":66, "lifeguard":66, "palliative":66, "lithuanians":66, "elude":66, "tree-lined":66, "lurk":66, "confers":66, "needlessly":66, "furtive":66, "cusp":66, "ringed":66, "heartless":66, "commenced":66, "sojourn":66, "virtuoso":66, "horde":66, "patented":66, "profane":66, "low-lying":66, "goo":66, "contagion":66, "multiethnic":66, "morn":66, "parrots":66, "triceps":66, "prussian":66, "feller":66, "mired":66, "foolishly":66, "dissuade":66, "seeped":66, "profess":66, "recesses":66, "recklessly":66, "unharmed":66, "impacting":66, "verdant":66, "clattering":66, "walkways":66, "distinctively":66, "mover":66, "reheat":66, "anti-aircraft":66, "two-run":66, "coed":66, "trimester":66, "humanists":66, "hazing":66, "cougar":66, "culled":66, "undaunted":66, "quipped":66, "year-long":66, "authored":66, "spindly":66, "reaffirmed":66, "sparing":66, "fatter":66, "exempted":66, "backyards":66, "docked":66, "commonality":66, "gurus":66, "traitors":66, "precondition":66, "countertops":66, "sauna":66, "conspirators":66, "monsoon":66, "sequins":66, "legumes":66, "zippers":66, "grandparent":66, "reinvention":66, "bolivian":66, "gobbler":66, "culminated":66, "weakens":66, "bonded":66, "redo":66, "thickens":66, "subdue":66, "insular":66, "reruns":66, "adventurer":66, "third-generation":66, "off-duty":66, "narcissistic":66, "fugitives":66, "husks":66, "facilitators":66, "blithely":66, "omnipresent":66, "long-ago":66, "unexplored":66, "smacking":66, "radiated":66, "unaccustomed":66, "heaping":66, "bleached":66, "interacts":66, "wayside":66, "world-famous":66, "extremities":66, "mildew":66, "protectionist":66, "totem":66, "work-related":66, "nomads":66, "supplementation":66, "afro-american":66, "sabine":66, "lurks":66, "flourishes":66, "over-the-top":66, "frothy":66, "lapping":66, "crevices":66, "racy":66, "acquiescence":66, "hardness":66, "pore":66, "commandment":66, "manhunt":66, "molesting":66, "diagnostics":66, "windmill":66, "reconstructive":66, "brooch":66, "busing":66, "corona":66, "bypassing":66, "tinge":66, "dour":66, "reclusive":66, "beat-up":66, "snugly":66, "brightening":66, "willfully":66, "unopened":66, "diplomatically":66, "shoveling":66, "streetlights":66, "facades":66, "weightless":66, "roadways":66, "backer":66, "moron":66, "expatriate":66, "peels":66, "auditions":66, "sips":66, "watcher":66, "wrecks":66, "causation":66, "ninja":66, "celibate":66, "ventilator":66, "musket":66, "supernovae":66, "endures":66, "skimpy":66, "ineffectual":66, "gunned":66, "craved":66, "energize":66, "spoiling":66, "mean-spirited":66, "signified":66, "tightness":66, "air-conditioning":66, "antiseptic":66, "tickle":66, "replicas":66, "stipend":66, "live-in":66, "stitching":66, "apolitical":66, "cheerleading":66, "dueling":66, "grills":66, "erupting":66, "docile":66, "hopefuls":66, "uncertainly":66, "seaboard":66, "chartered":66, "whirl":66, "warts":66, "lobes":66, "modality":66, "nation-building":66, "univariate":66, "sonnet":66, "sought-after":66, "likens":66, "converged":66, "anathema":66, "outgrowth":66, "decked":66, "crescendo":66, "dangled":66, "talkative":66, "symbolized":66, "demented":66, "wrought-iron":66, "haves":66, "preamble":66, "unbeaten":66, "fellas":66, "handicaps":66, "solvents":66, "outputs":66, "recoil":66, "gastric":66, "al-qaida":66, "chipotle":66, "disillusioned":66, "prohibitive":66, "interfered":66, "third-largest":66, "heaped":66, "arranges":66, "claustrophobic":66, "thicken":66, "jogged":66, "meditative":66, "across-the-board":66, "blackmail":66, "pathos":66, "awning":66, "grocer":66, "un-american":66, "boughs":66, "ahh":66, "criminality":66, "pubs":66, "barges":66, "breeder":66, "refuges":66, "caverns":66, "catalytic":66, "discharges":66, "proverbs":66, "sixteenth-century":66, "determinism":66, "magistrates":66, "resonated":66, "nourished":66, "applauding":66, "buffs":66, "habitually":66, "perpetuating":66, "penalized":66, "groped":66, "babes":66, "naturalized":66, "second-degree":66, "premieres":66, "breathable":66, "wheelbarrow":66, "variances":66, "thru":66, "phylogenetic":66, "unraveled":66, "poring":66, "regrettable":66, "energized":66, "askew":66, "revisited":66, "snarling":66, "fairer":66, "tact":66, "tiled":66, "gray-haired":66, "electrically":66, "dredge":66, "shredding":66, "senatorial":66, "wipers":66, "giver":66, "boobs":66, "burlap":66, "impeached":66, "kangaroo":66, "hoe":66, "minnows":66, "jinx":66, "ravaged":66, "populate":66, "loathe":66, "flailing":66, "matter-of-fact":66, "inexorable":66, "forfeit":66, "humiliate":66, "encroachment":66, "pandering":66, "tributes":66, "offensively":66, "clapboard":66, "calibrated":66, "implements":66, "unchanging":66, "thaw":66, "angelic":66, "flashbacks":66, "swarms":66, "uplift":66, "conglomerates":66, "indigo":66, "handlebars":66, "quotient":66, "kennel":66, "civics":66, "jellyfish":66, "otherness":66, "prepaid":66, "vertebrates":66, "bushels":66, "orbiter":66, "stunningly":66, "conclusively":66, "frustrate":66, "tiresome":66, "brandishing":66, "admonition":66, "swipe":66, "sleeveless":66, "earthen":66, "shakers":66, "coolers":66, "straightens":66, "at-home":66, "crusts":66, "prerequisites":66, "epilepsy":66, "forester":66, "salvadoran":66, "swooping":66, "yearlong":66, "aimlessly":66, "tumult":66, "cashing":66, "elation":66, "craziness":66, "fine-tuning":66, "storybook":66, "forty-one":66, "heart-shaped":66, "midsection":66, "co-chair":66, "runny":66, "latte":66, "businesspeople":66, "loot":66, "minor-league":66, "thefts":66, "rancid":66, "bro":66, "fragrances":66, "workstations":66, "colts":66, "hamstrings":66, "maltreatment":66, "moniker":66, "stints":66, "lugging":66, "ravages":66, "blissful":66, "provokes":66, "uninformed":66, "wrecked":66, "endorses":66, "squeaked":66, "rubbery":66, "sizeable":66, "preconceived":66, "insecurities":66, "pertains":66, "underfunded":66, "bobbed":66, "stockbroker":66, "propagate":66, "homesick":66, "pleated":66, "straws":66, "second-round":66, "clot":66, "fireflies":66, "first-grade":66, "largemouth":66, "encyclical":66, "endoscopic":66, "rummaging":66, "intelligently":66, "skirmishes":66, "sarcastically":66, "showy":66, "sheltering":66, "interrogated":66, "reprehensible":66, "sneaks":66, "self-made":66, "uptight":66, "infatuation":66, "politic":66, "numbering":66, "negativity":66, "hyperactive":66, "unplugged":66, "tightrope":66, "wild-card":66, "marinate":66, "lair":66, "whilst":66, "stratification":66, "luminosity":66, "harem":66, "ensconced":66, "pronouncement":66, "heartbroken":66, "unrecognizable":66, "outmoded":66, "underline":66, "rustle":66, "compress":66, "chain-link":66, "sewed":66, "swig":66, "piloting":66, "veils":66, "valor":66, "tins":66, "sleet":66, "gables":66, "temperamental":66, "salience":66, "mammalian":66, "robins":66, "diocesan":66, "relented":66, "permeates":66, "acumen":66, "rectify":66, "misunderstand":66, "raving":66, "flexed":66, "wiggled":66, "disqualified":66, "crease":66, "suitability":66, "ration":66, "subconscious":66, "shatters":66, "bailouts":66, "epithets":66, "dogwood":66, "stateroom":66, "ingrained":66, "ridiculed":66, "mesmerized":66, "irreplaceable":66, "vacated":66, "degraded":66, "underbrush":66, "cropped":66, "stitch":66, "tramp":66, "ointment":66, "marchers":66, "heartburn":66, "congruence":66, "frescoes":66, "baccalaureate":66, "negate":66, "scour":66, "unknowns":66, "sodden":66, "fishy":66, "indecision":66, "unpredictability":66, "naps":66, "ascension":66, "felonies":66, "proverb":66, "gaseous":66, "grassland":66, "sweepstakes":66, "syllabus":66, "clemency":66, "shallot":66, "scarecrow":66, "neutrons":66, "americanization":66, "larval":66, "laryngeal":66, "conjures":66, "hurl":66, "revisiting":66, "glories":66, "friendliness":66, "unresponsive":66, "insensitivity":66, "attentions":66, "unfairness":66, "spades":66, "drunkenness":66, "comprehensible":66, "ferries":66, "titan":66, "defenseman":66, "programmes":66, "changeling":66, "steadfastly":66, "suspending":66, "dozing":66, "probed":66, "inadvertent":66, "talker":66, "inclinations":66, "hoot":66, "initiates":66, "internalize":66, "stained-glass":66, "overrated":66, "sieve":66, "upriver":66, "psychosis":66, "horned":66, "chard":66, "lowdown":66, "jigs":66, "hawaiians":66, "uncharacteristically":66, "finalized":66, "inordinate":66, "healthiest":66, "introspection":66, "sentimentality":66, "raindrops":66, "stampede":66, "trot":66, "legalize":66, "moviegoers":66, "fallow":66, "permissive":66, "third-quarter":66, "pretrial":66, "acoustics":66, "lubricant":66, "sycamore":66, "sup":66, "fiddler":66, "trope":66, "market-based":66, "vignette":66, "divination":66, "prescient":66, "accentuate":66, "disapproving":66, "extinguished":66, "wiggle":66, "massaging":66, "levied":66, "forwarded":66, "assimilated":66, "deadlock":66, "jab":66, "zoomed":66, "holocaust":66, "family-friendly":66, "sprained":66, "perfumes":66, "proofs":66, "ironing":66, "valuations":66, "sentry":66, "swedes":66, "nonsignificant":66, "eminence":66, "oxidation":66, "flemish":66, "rascal":66, "cossack":66, "gamma-ray":66, "surpassing":66, "bountiful":66, "marred":66, "seep":66, "minding":66, "resurrect":66, "rebuke":66, "intensifies":66, "obscures":66, "rouse":66, "purge":66, "self-pity":66, "brewed":66, "visuals":66, "artifice":66, "sneaker":66, "stat":66, "streetcar":66, "quadrant":66, "chickpeas":66, "planetarium":66, "nutcracker":66, "fictive":66, "dogged":66, "eye-catching":66, "musings":66, "jostling":66, "rant":66, "deplorable":66, "cradled":66, "introspective":66, "locates":66, "jabbed":66, "girth":66, "buttered":66, "battering":66, "self-expression":66, "prerogatives":66, "botanist":66, "cornfield":66, "coronation":66, "scribe":66, "custodial":66, "esophagus":66, "niggers":66, "sugarcane":66, "antimatter":66, "pervades":66, "delectable":66, "conservatively":66, "whew":66, "hysterically":66, "straighter":66, "caressing":66, "tinker":66, "whence":66, "purchasers":66, "great-grandmother":66, "sideshow":66, "panhandle":66, "incubator":66, "squatters":66, "risk-taking":66, "aquifers":66, "self-assessment":66, "rovers":66, "refractor":66, "subtests":66, "amply":66, "scrawled":66, "unkind":66, "botched":66, "avenge":66, "playbook":66, "ugh":66, "ninety-nine":66, "six-day":66, "brainstorming":66, "intermediaries":66, "dummies":66, "blocs":66, "crayon":66, "spatially":66, "stilts":66, "chairperson":66, "messianic":66, "priestly":66, "fairies":66, "diabetics":66, "snowmobile":66, "kiln":66, "harbinger":66, "enlisting":66, "gushed":66, "administers":66, "sprouted":66, "horse-drawn":66, "three-part":66, "scribbled":66, "thoroughfare":66, "unproven":66, "upfront":66, "forty-six":66, "overdrive":66, "saltwater":66, "cauldron":66, "brand-name":66, "impeach":66, "czechs":66, "revamp":66, "breathlessly":66, "bounding":66, "orgy":66, "grunting":66, "mossy":66, "big-league":66, "gynecologist":66, "bachelors":66, "one-party":66, "monogamous":66, "infertile":66, "psalms":66, "lumbar":66, "zionism":66, "mimetic":66, "hereinafter":66, "hard-earned":66, "throngs":66, "hoopla":66, "terse":66, "flowery":66, "swerved":66, "repealed":66, "normality":66, "beholder":66, "sunburn":66, "cockroaches":66, "papaya":66, "controllable":66, "sire":66, "biofuels":66, "shamans":66, "perfecting":67, "juggernaut":67, "unsettled":67, "delineate":67, "bloomed":67, "reverses":67, "staccato":67, "big-screen":67, "crackle":67, "sneered":67, "mass-produced":67, "soapy":67, "eavesdropping":67, "decadence":67, "politicized":67, "prick":67, "nakedness":67, "maestro":67, "donkeys":67, "darkroom":67, "allspice":67, "raptors":67, "incinerator":67, "taxonomic":67, "radiotherapy":67, "pulsar":67, "deliciously":67, "strayed":67, "justifiably":67, "swaths":67, "worn-out":67, "trampled":67, "gooey":67, "delirious":67, "redeemed":67, "fifty-two":67, "moonlit":67, "diagnosing":67, "chewy":67, "inhibiting":67, "saluted":67, "harbors":67, "bankruptcies":67, "sanctuaries":67, "notepad":67, "stockpile":67, "violets":67, "vertebrate":67, "tusks":67, "yo-yo":67, "jus":67, "unkempt":67, "stymied":67, "truer":67, "likened":67, "cruelly":67, "empty-handed":67, "compels":67, "shrunken":67, "backwater":67, "tricked":67, "boxy":67, "scowling":67, "renovating":67, "well-designed":67, "wed":67, "posit":67, "bedspread":67, "lard":67, "decibels":67, "serendipity":67, "settee":67, "performance-enhancing":67, "erstwhile":67, "instantaneously":67, "singularly":67, "perpetrated":67, "extravagance":67, "soiled":67, "shimmered":67, "derelict":67, "murmurs":67, "clutches":67, "rarer":67, "first-place":67, "detain":67, "diplomas":67, "repellent":67, "polytechnic":67, "duplex":67, "semesters":67, "washers":67, "poppies":67, "sultan":67, "drivetrain":67, "plagiarism":67, "dimmed":67, "detract":67, "indisputable":67, "belated":67, "smothered":67, "upkeep":67, "raspy":67, "enriching":67, "headlong":67, "detritus":67, "effected":67, "restrooms":67, "aeronautics":67, "arsenals":67, "backpacker":67, "treasuries":67, "pardons":67, "intercultural":67, "single-minded":67, "maneuvered":67, "cruised":67, "betrays":67, "correspondingly":67, "groggy":67, "corroborate":67, "reticence":67, "induces":67, "deathbed":67, "dusky":67, "tattooed":67, "fainted":67, "lewd":67, "wearer":67, "bearers":67, "driftwood":67, "texting":67, "sorbet":67, "snowboard":67, "buffers":67, "implantation":67, "intercut":67, "trolls":67, "unimpressed":67, "crowning":67, "nightmarish":67, "stringy":67, "stagger":67, "tasteless":67, "eons":67, "gentleness":67, "angled":67, "implicate":67, "italics":67, "newscasts":67, "raccoons":67, "flutes":67, "pneumatic":67, "vaccinations":67, "furnaces":67, "destroyers":67, "trainee":67, "bosnians":67, "padre":67, "venous":67, "admirably":67, "wring":67, "untimely":67, "six-week":67, "vengeful":67, "spurt":67, "sunsets":67, "livable":67, "four-star":67, "handbags":67, "blacktop":67, "outperform":67, "dressings":67, "flammable":67, "tutorial":67, "riff":67, "emperors":67, "mesquite":67, "greenhouses":67, "denominational":67, "masquerade":67, "unicorn":67, "nonmedical":67, "congolese":67, "caters":67, "immerse":67, "veracity":67, "smuggle":67, "willed":67, "handout":67, "phasing":67, "sandpaper":67, "surrogates":67, "sampler":67, "hermit":67, "child-rearing":67, "potting":67, "downloads":67, "minivans":67, "provost":67, "anti-drug":67, "octave":67, "polygamy":67, "eg":67, "brainchild":67, "heft":67, "postponing":67, "disenchanted":67, "satisfactorily":67, "vanquished":67, "swirls":67, "schoolboy":67, "tensed":67, "aligning":67, "presupposes":67, "snows":67, "science-fiction":67, "skewer":67, "refunds":67, "faucets":67, "milking":67, "internment":67, "intensities":67, "resuscitation":67, "phenomenological":67, "carotid":67, "sever":67, "memorized":67, "life-long":67, "self-centered":67, "mutilated":67, "enmity":67, "railings":67, "co-chairman":67, "depressions":67, "hallelujah":67, "optimists":67, "scoops":67, "fourth-grade":67, "shalt":67, "checkers":67, "stasis":67, "monochrome":67, "militaries":67, "smuggler":67, "fiesta":67, "git":67, "flexion":67, "malware":67, "belies":67, "sprinkling":67, "crass":67, "purists":67, "acrid":67, "compensating":67, "unconscionable":67, "untouchable":67, "quivered":67, "sacked":67, "edict":67, "aviator":67, "councilman":67, "emphysema":67, "out-of-pocket":67, "magicians":67, "bytes":67, "scorching":67, "vitally":67, "wily":67, "heavy-handed":67, "prowl":67, "doable":67, "comers":67, "up-and-coming":67, "expended":67, "savagely":67, "jubilant":67, "stances":67, "cellars":67, "playback":67, "subcontractors":67, "tulip":67, "circumcision":67, "expectancies":67, "latency":67, "dislodge":67, "irrevocably":67, "long-lost":67, "jaunty":67, "exerting":67, "stiffen":67, "abbreviated":67, "inscrutable":67, "impair":67, "darken":67, "strangling":67, "hazel":67, "powders":67, "smacks":67, "squeak":67, "beachfront":67, "alertness":67, "grandfathers":67, "toxicology":67, "cataracts":67, "chameleon":67, "policy-making":67, "blocker":67, "truffle":67, "monasteries":67, "glider":67, "winger":67, "thrifts":67, "renewables":67, "approvingly":67, "top-rated":67, "male-dominated":67, "facedown":67, "slush":67, "biochemistry":67, "case-by-case":67, "grays":67, "willpower":67, "meteorologist":67, "clots":67, "bumpers":67, "gavel":67, "traumas":67, "chopsticks":67, "sun-dried":67, "surcharge":67, "amplifier":67, "hermitage":67, "bah":67, "ecclesial":67, "cachet":67, "reiterate":67, "fresher":67, "soars":67, "shrieks":67, "memorizing":67, "pearly":67, "polarizing":67, "quiver":67, "westerns":67, "cuckoo":67, "fillings":67, "undersea":67, "carols":67, "templates":67, "ruble":67, "knapsack":67, "impressively":67, "indiscriminately":67, "escorting":67, "unpretentious":67, "bloodless":67, "recalcitrant":67, "amok":67, "isolating":67, "starched":67, "flagrant":67, "reeled":67, "manmade":67, "humanly":67, "nil":67, "wristwatch":67, "strollers":67, "deliverance":67, "hard-boiled":67, "mutilation":67, "braised":67, "snorkeling":67, "preheated":67, "convergent":67, "mite":67, "accretion":67, "folic":67, "regents":67, "biodiesel":67, "unabashedly":67, "unabashed":67, "substantiate":67, "beckons":67, "dawning":67, "evaporates":67, "coincidental":67, "chirping":67, "devious":67, "antipathy":67, "sakes":67, "dribbling":67, "lurch":67, "oeuvre":67, "red-haired":67, "centrifugal":67, "blockage":67, "buddhists":67, "reduced-fat":67, "gators":67, "preemption":67, "riddled":67, "reckoned":67, "conceding":67, "reassess":67, "howls":67, "athleticism":67, "twirled":67, "fatigues":67, "unfaithful":67, "add-on":67, "tawny":67, "truffles":67, "sisterhood":67, "turpentine":67, "blockers":67, "necrosis":67, "enthralled":67, "shrinks":67, "headquartered":67, "wincing":67, "clammy":67, "napping":67, "haircuts":67, "regionally":67, "nightlife":67, "yuppie":67, "motorist":67, "clothesline":67, "cut-off":67, "hookers":67, "theses":67, "nazism":67, "overlay":67, "mangoes":67, "ordnance":67, "jihadists":67, "debit":67, "mummies":67, "burrow":67, "toting":67, "disturbs":67, "complicating":67, "bestow":67, "sensibly":67, "invigorating":67, "disintegrate":67, "luminaries":67, "unfathomable":67, "thrashing":67, "illogical":67, "buttoned":67, "surfacing":67, "snorting":67, "infractions":67, "armpit":67, "preventative":67, "evergreens":67, "dorms":67, "feline":67, "goddesses":67, "postgraduate":67, "testimonies":67, "fairgrounds":67, "tees":67, "pallet":67, "efficacious":67, "carnivores":67, "hungarians":67, "amputees":67, "undercurrent":67, "languid":67, "superbly":67, "tutelage":67, "exerts":67, "feuding":67, "one-stop":67, "anachronistic":67, "charade":67, "screeched":67, "expendable":67, "trusty":67, "on-air":67, "submissive":67, "degenerative":67, "stalinist":67, "militancy":67, "transmitters":67, "dreamers":67, "qualifier":67, "skied":67, "glazes":67, "eclipses":67, "afoul":67, "threadbare":67, "unquestioned":67, "contaminate":67, "goatee":67, "empties":67, "premiered":67, "malleable":67, "squats":67, "suburbia":67, "countenance":67, "saucers":67, "dispenser":67, "chardonnay":67, "mowing":67, "oxen":67, "sender":67, "paramedic":67, "pelican":67, "moslem":67, "triathlon":67, "far-fetched":67, "fretting":67, "prod":67, "adhered":67, "suitably":67, "thundered":67, "restores":67, "attributing":67, "aspired":67, "powdery":67, "repugnant":67, "pasted":67, "resumption":67, "knuckle":67, "stow":67, "shortfalls":67, "defection":67, "feasts":67, "overture":67, "payable":67, "adhesive":67, "tenured":67, "push-ups":67, "plural":67, "riddles":67, "moat":67, "himalayan":67, "atheism":67, "crested":67, "mam":67, "alluding":67, "stupidly":67, "crudely":67, "well-rounded":67, "euphoric":67, "lash":67, "crafty":67, "solicited":67, "wrenched":67, "fluff":67, "yellowish":67, "shins":67, "gutsy":67, "band-aid":67, "conceptualize":67, "rosters":67, "preconditions":67, "thong":67, "enforceable":67, "viva":67, "anglo-saxon":67, "outages":67, "defamation":67, "flint":67, "intonation":67, "squire":67, "larynx":67, "cropland":67, "friar":67, "wither":67, "dwindled":67, "alerting":67, "girlish":67, "smuggled":67, "rehearsed":67, "pensive":67, "cooperatively":67, "unconditionally":67, "bared":67, "libertarians":67, "floodwaters":67, "babysitting":67, "forward-looking":67, "pox":67, "free-trade":67, "magnitudes":67, "sportsmanship":67, "postmenopausal":67, "spinner":67, "diesels":67, "florentine":67, "conscription":67, "biota":67, "startlingly":67, "pounce":67, "lesser-known":67, "cloudless":67, "hotbed":67, "hitched":67, "humbly":67, "welling":67, "rediscover":67, "imprinted":67, "well-off":67, "perky":67, "resolves":67, "deriving":67, "bloodied":67, "game-winning":67, "keyword":67, "oncologist":67, "coveralls":67, "ostrich":67, "aerosol":67, "yum":67, "oxides":67, "shah":67, "tribesmen":67, "mental-health":67, "stag":67, "wafting":67, "precipitously":67, "incensed":67, "complemented":67, "derision":67, "obeying":67, "bestselling":67, "outrun":67, "impassive":67, "mending":67, "front-line":67, "shackles":67, "three-game":67, "supermodel":67, "buckles":67, "frat":67, "raider":67, "canons":67, "violins":67, "interrogators":67, "morphological":67, "bedouin":67, "constructivism":67, "reaping":67, "cloaked":67, "flattening":67, "espouse":67, "astride":67, "sag":67, "chews":67, "spurious":67, "dictatorial":67, "one-to-one":67, "vacationers":67, "lodgings":67, "chariot":67, "consultative":67, "toads":67, "besieged":67, "hindered":67, "rougher":67, "expanses":67, "engrossed":67, "jitters":67, "revamped":67, "toothless":67, "dab":67, "macabre":67, "capping":67, "premeditated":67, "kidnappings":67, "centimeter":67, "spec":67, "endowments":67, "rationales":67, "barricade":67, "ay":67, "jurisdictional":67, "trickster":67, "relatedness":67, "tidbits":67, "well-developed":67, "transports":67, "pertain":67, "crunched":67, "slivers":67, "compendium":67, "lower-income":67, "braver":67, "sniffs":67, "reversals":67, "anesthetic":67, "tenement":67, "internships":67, "postdoctoral":67, "commandant":67, "infirmary":67, "connectors":67, "handset":67, "italian-american":67, "prides":67, "rearranging":67, "stubbornness":67, "perpetuated":67, "disgraceful":67, "smoothness":67, "ninety-five":67, "reflexively":67, "eatery":67, "champs":67, "rapped":67, "consequential":67, "foodstuffs":67, "billionaires":67, "cubicles":67, "rungs":67, "bystander":67, "pretzels":67, "mailings":67, "anti-communist":67, "shopkeeper":67, "printout":67, "canoeing":67, "soluble":67, "earphones":67, "peroxide":67, "femme":67, "salinity":67, "projectors":67, "cortisol":67, "chinook":67, "pent-up":67, "crisply":67, "snippets":67, "inhospitable":67, "coursing":67, "sardonic":67, "predominate":67, "happenings":67, "merrily":67, "unholy":67, "primeval":67, "intrusions":67, "farmed":67, "racists":67, "majoring":67, "powerlessness":67, "vapors":67, "outhouse":67, "polka":67, "dais":67, "catchers":67, "mid-level":67, "tapestries":67, "beeper":67, "importers":67, "insecticide":67, "dipper":67, "college-level":67, "obstructive":67, "evaluators":67, "silica":67, "creationism":67, "fluoride":67, "mulling":67, "sharpened":67, "dusted":67, "decimated":67, "subjecting":67, "apologetically":67, "streaking":67, "despairing":67, "staking":67, "scariest":67, "repudiation":67, "disabling":67, "paradoxes":67, "high-fat":67, "decision-makers":67, "career-high":67, "pro-democracy":67, "yardage":67, "four-wheel":67, "costar":67, "cored":67, "occult":67, "azaleas":67, "dowry":67, "cyst":67, "harshest":67, "rebuffed":67, "wafted":67, "underpinning":67, "flecks":67, "drooling":67, "plagues":67, "lengthening":67, "slowest":67, "skirmish":67, "desiring":67, "yardstick":67, "marketer":67, "gobble":67, "eraser":67, "inattention":67, "calculators":67, "jeeps":67, "granola":67, "stethoscope":67, "hardwoods":67, "deciduous":67, "medallion":67, "kiwi":67, "riverboat":67, "mausoleum":67, "mountaineering":67, "sphinx":67, "alderman":67, "microscopy":67, "jarring":67, "alarmingly":67, "pried":67, "channeled":67, "kindred":67, "replicating":67, "thinned":67, "proliferate":67, "clog":67, "abysmal":67, "presumes":67, "aggrieved":67, "unloaded":67, "funnier":67, "motioning":67, "strutting":67, "pseudonym":67, "dictatorships":67, "ethnicities":67, "rationalization":67, "hedging":67, "licorice":67, "headband":67, "hatchet":67, "slaughterhouse":67, "blasphemy":67, "stalker":67, "communique":67, "floodplain":67, "stoneware":67, "incite":67, "graced":67, "advisable":67, "fussing":67, "romantically":67, "choreographed":67, "caveats":67, "burned-out":67, "misdeeds":67, "ambushed":67, "zealots":67, "skinned":67, "abolishing":67, "flirtation":67, "seven-day":67, "savagery":67, "chalkboard":67, "concealment":67, "redress":67, "bodice":67, "prescriptive":67, "songwriters":67, "routing":67, "jockeys":67, "spreadsheets":67, "cedars":67, "apprentices":67, "neonatal":67, "solstice":67, "subspecies":67, "firewall":67, "penguin":67, "incineration":67, "unafraid":67, "faltered":67, "vastness":67, "lurching":67, "puzzlement":67, "public-relations":67, "snow-covered":67, "whatnot":67, "smudge":67, "censor":67, "mitigating":67, "songwriting":67, "gobbling":67, "rematch":67, "third-grade":67, "storytellers":67, "tracker":67, "vigilante":67, "bowler":67, "divisional":67, "magma":67, "concurring":67, "quasars":67, "encroaching":67, "wielded":67, "plaintive":67, "nefarious":67, "chided":67, "rhythmically":67, "superimposed":67, "crushes":67, "tablecloths":67, "pinks":67, "pegs":67, "rapping":67, "stratified":67, "saddles":67, "stub":67, "reincarnation":67, "sprinter":67, "cognitively":67, "headwaters":67, "tangerine":67, "giraffe":67, "flamenco":67, "holed":67, "prospered":67, "subsumed":67, "whimpering":67, "blue-chip":67, "glinted":67, "domed":67, "excavating":67, "casings":67, "regressive":67, "benevolence":67, "shutout":67, "saplings":67, "sideboard":67, "foreign-policy":67, "recliner":67, "industrialists":67, "porridge":67, "biodegradable":67, "autopilot":67, "dermatology":67, "pre-columbian":67, "superconducting":67, "taxa":67, "well-heeled":67, "unknowingly":67, "meandering":67, "enclose":67, "fuzz":67, "overhanging":67, "have-nots":67, "disable":67, "incursions":67, "aegis":67, "bitches":67, "showrooms":67, "enchantment":67, "infuriating":67, "undoing":67, "attests":67, "implacable":67, "conferring":67, "hollows":67, "coerced":67, "above-average":67, "non-governmental":67, "portals":67, "physiologist":67, "tectonic":67, "eulogy":67, "breaches":67, "aggregation":67, "curvature":67, "machete":67, "pinto":67, "mortuary":67, "wham":67, "sax":67, "carcinogens":67, "correlational":67, "myrtle":67, "dispensed":67, "reliving":67, "overjoyed":67, "snaked":67, "breached":67, "caustic":67, "longterm":67, "renown":67, "nailing":67, "fragmentary":67, "peep":67, "mopping":67, "grownups":67, "heroines":67, "abnormally":67, "swivel":67, "high-altitude":67, "reprimand":67, "subtitle":67, "pewter":67, "headless":67, "limes":67, "avocados":67, "seeding":67, "variegated":67, "recyclable":67, "native-born":67, "publics":67, "cirque":67, "heuristic":67, "trojans":67, "persians":67, "otitis":67, "convoluted":67, "concurred":67, "donning":67, "bucolic":67, "livid":67, "furthering":67, "trinkets":67, "obstructing":67, "attentively":67, "heals":67, "yawn":67, "mouthed":67, "birthright":67, "baloney":67, "innovator":67, "mined":67, "predawn":67, "misrepresentation":67, "stills":67, "yea":67, "custodian":67, "crutch":67, "first-aid":67, "fenders":67, "tolls":67, "brownstone":67, "follies":67, "firings":67, "pedophile":67, "gatekeeper":67, "launcher":67, "absenteeism":67, "subsurface":67, "recidivism":67, "fission":67, "foresaw":67, "drape":67, "credo":67, "smarts":67, "shapely":67, "eliciting":67, "hobbled":67, "uninvited":67, "abstain":67, "sweetened":67, "daisy":67, "ledges":67, "laissez-faire":67, "role-playing":67, "layouts":67, "hydration":67, "baguette":67, "sicilian":67, "defectors":67, "public-health":67, "trellis":67, "shanks":67, "long-held":67, "unwitting":67, "denizens":67, "honing":67, "rebounded":67, "inadequately":67, "conquering":67, "vindictive":67, "tucks":67, "surges":67, "authorizes":67, "hustler":67, "amorous":67, "mason":67, "cathedrals":67, "opus":67, "prairies":67, "vaudeville":67, "soloist":67, "acorns":67, "viper":67, "self-evaluation":67, "herbicide":67, "subsystem":67, "grazed":67, "travesty":67, "laminated":67, "cellophane":67, "summation":67, "terrors":67, "pare":67, "eyelid":67, "trucker":67, "cobbler":67, "steamboat":67, "hostel":67, "entropy":67, "debtors":67, "archers":67, "eschatological":67, "algal":67, "whisked":67, "racking":67, "glitzy":67, "relished":67, "jeopardizing":67, "refocus":67, "grandest":67, "counseled":67, "industrious":67, "conceit":67, "inversely":67, "kiosks":67, "dialects":67, "centralization":67, "mannequin":67, "guardsmen":67, "portraiture":67, "cantaloupe":67, "discernment":67, "eels":67, "anarchist":67, "lichen":67, "swaps":67, "dualism":67, "antimicrobial":67, "syntactic":67, "impeccably":67, "wintry":67, "prowling":67, "coaxed":67, "scooted":67, "diverge":67, "radiates":67, "spongy":67, "dozed":67, "adventurers":67, "flattery":67, "overestimate":67, "cobblestone":67, "revelers":67, "schoolgirl":67, "matinee":67, "rapprochement":67, "burglars":67, "aftershocks":67, "phobia":67, "assessor":67, "encircling":67, "fending":67, "flatter":67, "top-of-the-line":67, "thumbs-up":67, "intoned":67, "confound":67, "throbbed":67, "strongholds":67, "born-again":67, "treatable":67, "phalanx":67, "washcloth":67, "counterculture":67, "long-lived":67, "postings":67, "abnormality":67, "frisbee":67, "anvil":67, "enclosures":67, "incubation":67, "brothels":67, "chutney":67, "tunneling":67, "naturalism":67, "race/ethnicity":67, "flocking":68, "life-changing":68, "larger-than-life":68, "panicky":68, "zooming":68, "stingy":68, "looping":68, "cataclysmic":68, "clawed":68, "co-wrote":68, "streamers":68, "gory":68, "hideaway":68, "overuse":68, "five-point":68, "premarital":68, "olfactory":68, "caseworkers":68, "self-monitoring":68, "versed":68, "ilk":68, "understated":68, "beholden":68, "ascended":68, "two-month":68, "reinstate":68, "family-owned":68, "smirked":68, "caricatures":68, "derivative":68, "suspenders":68, "nominating":68, "activates":68, "state-sponsored":68, "clinch":68, "tic":68, "executioner":68, "asian-american":68, "millennial":68, "deep-sky":68, "breadcrumbs":68, "postmodernist":68, "sequestration":68, "coliform":68, "floating-point":68, "double-edged":68, "lurked":68, "cringed":68, "tickling":68, "thickets":68, "lower-level":68, "completeness":68, "epidemiologist":68, "keg":68, "intensification":68, "writ":68, "connective":68, "expeditionary":68, "antecedent":68, "consonants":68, "cadres":68, "zodiac":68, "thistle":68, "burrows":68, "officiating":68, "paraprofessionals":68, "incomparable":68, "feverishly":68, "gauging":68, "old-style":68, "wobbling":68, "rummaged":68, "fluidity":68, "empathize":68, "freaked":68, "sicker":68, "habitation":68, "emblems":68, "second-hand":68, "legalizing":68, "slugging":68, "airliners":68, "musk":68, "downriver":68, "servicing":68, "spleen":68, "scrubs":68, "glasnost":68, "sparrow":68, "valentine":68, "dilution":68, "vulture":68, "reauthorization":68, "fermentation":68, "deformity":68, "newtonian":68, "deflation":68, "empathic":68, "resection":68, "carmine":68, "unfazed":68, "eluded":68, "friendlier":68, "laborious":68, "muddled":68, "mishaps":68, "unpack":68, "infighting":68, "kinks":68, "snarl":68, "towered":68, "lawlessness":68, "shadowed":68, "sizzle":68, "on-the-job":68, "dabbed":68, "geeks":68, "skidding":68, "barks":68, "aristocrats":68, "extermination":68, "half-day":68, "high-density":68, "vandals":68, "mothering":68, "downwind":68, "hemlock":68, "wafers":68, "browsers":68, "pickers":68, "glazing":68, "oscillations":68, "showcasing":68, "popularized":68, "chatty":68, "strove":68, "out-of-town":68, "dexterity":68, "deduce":68, "knotted":68, "tome":68, "bulbous":68, "procure":68, "wilds":68, "pushy":68, "connoisseur":68, "evocation":68, "wordless":68, "unmoving":68, "payrolls":68, "servitude":68, "posthumous":68, "chairmanship":68, "cul-de-sac":68, "midseason":68, "oratory":68, "bovine":68, "skateboard":68, "gazebo":68, "roaches":68, "locusts":68, "scaffold":68, "crawfish":68, "lass":68, "photojournalism":68, "dazzled":68, "hesitating":68, "mutter":68, "full-page":68, "cancelled":68, "sheaf":68, "shortness":68, "perversion":68, "counterattack":68, "glassware":68, "burrowing":68, "stews":68, "telescopic":68, "robin":68, "godmother":68, "blower":68, "rattlesnake":68, "alkaline":68, "tuscan":68, "butternut":68, "bouncer":68, "drywall":68, "respirator":68, "confirmatory":68, "inshore":68, "melatonin":68, "dicey":68, "round-the-clock":68, "high-flying":68, "fluctuate":68, "nursed":68, "scurry":68, "unattainable":68, "relayed":68, "immutable":68, "interrogate":68, "dictum":68, "bugging":68, "atrocity":68, "inadequacies":68, "pints":68, "offstage":68, "estrangement":68, "taker":68, "pairings":68, "campgrounds":68, "precautionary":68, "captions":68, "clamps":68, "checklists":68, "futurist":68, "proofread":68, "excites":68, "redefined":68, "inciting":68, "seizes":68, "standby":68, "disposing":68, "bellowing":68, "tiptoed":68, "stockpiles":68, "regalia":68, "cheeseburger":68, "inter":68, "flings":68, "caloric":68, "extremity":68, "relativistic":68, "snowshoes":68, "urchin":68, "managed-care":68, "traveller":68, "handily":68, "staid":68, "blared":68, "outgrown":68, "leanings":68, "propelling":68, "consults":68, "menial":68, "self-absorbed":68, "businesswoman":68, "warren":68, "ahold":68, "aggravating":68, "quarrels":68, "authentically":68, "hyper":68, "terra-cotta":68, "payouts":68, "retroactive":68, "steakhouse":68, "joystick":68, "hamlets":68, "experimenters":68, "plankton":68, "mosaics":68, "holographic":68, "progesterone":68, "festooned":68, "rarest":68, "underscoring":68, "skirting":68, "borrows":68, "clunky":68, "deviate":68, "instituting":68, "rattles":68, "obediently":68, "squeal":68, "inflection":68, "six-pack":68, "newness":68, "theorize":68, "climactic":68, "pariah":68, "immigrated":68, "haunches":68, "kitsch":68, "fuel-efficient":68, "irritability":68, "boogie":68, "bayonet":68, "fasteners":68, "sorcerer":68, "screeners":68, "transducer":68, "tibetans":68, "scorched":68, "rudely":68, "gambit":68, "mourned":68, "objecting":68, "verifying":68, "twelve-year-old":68, "contemplates":68, "awed":68, "keyed":68, "one-bedroom":68, "collegial":68, "beehive":68, "monologues":68, "simplification":68, "boo":68, "by-products":68, "directories":68, "putty":68, "undifferentiated":68, "grammy":68, "forgery":68, "woodworking":68, "songbirds":68, "metaphoric":68, "atelier":68, "grotto":68, "ceasefire":68, "deformation":68, "midwives":68, "annuities":68, "immanent":68, "seabed":68, "jump-start":68, "propping":68, "ravenous":68, "unflattering":68, "craned":68, "ascribe":68, "get-go":68, "hereby":68, "confetti":68, "articulates":68, "featureless":68, "undergrowth":68, "perk":68, "ancients":68, "low-risk":68, "vale":68, "lute":68, "shifters":68, "apaches":68, "pronouncing":68, "amazes":68, "coalesce":68, "corrects":68, "reproach":68, "whirring":68, "recur":68, "clogging":68, "streamlining":68, "corrupted":68, "insuring":68, "eradicated":68, "vaults":68, "mallet":68, "matron":68, "aces":68, "non-traditional":68, "daffodils":68, "sandbags":68, "dentistry":68, "cottonwood":68, "goblet":68, "weighting":68, "horseman":68, "anise":68, "radioactivity":68, "turmeric":68, "figural":68, "vestibular":68, "placate":68, "zipping":68, "scoured":68, "bristled":68, "upsets":68, "cupped":68, "designating":68, "opinionated":68, "overbearing":68, "pooled":68, "prim":68, "clattered":68, "conspiratorial":68, "internist":68, "subpoenaed":68, "tradeoffs":68, "naught":68, "disinfectant":68, "carol":68, "piggy":68, "teamsters":68, "praxis":68, "judo":68, "sully":68, "honduran":68, "genomes":68, "undeterred":68, "ruthlessly":68, "decreed":68, "yearned":68, "oddity":68, "mishap":68, "precipitate":68, "dutiful":68, "hastened":68, "feasting":68, "second-place":68, "teenaged":68, "fanaticism":68, "towed":68, "disclaimer":68, "regenerate":68, "heaves":68, "diction":68, "pretax":68, "unlicensed":68, "livers":68, "fouls":68, "chowder":68, "onsite":68, "genera":68, "reflux":68, "diffraction":68, "methanol":68, "antidumping":68, "shamelessly":68, "unleashing":68, "encircled":68, "glitz":68, "clockwork":68, "accommodates":68, "carelessness":68, "innovate":68, "undemocratic":68, "guidebooks":68, "invert":68, "vibes":68, "redneck":68, "semiautomatic":68, "margarita":68, "cohesiveness":68, "slaw":68, "portage":68, "microprocessors":68, "covariate":68, "marguerite":68, "churn":68, "shortsighted":68, "perfunctory":68, "marveling":68, "uncharacteristic":68, "scheming":68, "unnaturally":68, "necessitates":68, "disrupts":68, "reprisals":68, "embellished":68, "self-fulfilling":68, "unprofitable":68, "predominance":68, "busts":68, "celebs":68, "portability":68, "potion":68, "offsets":68, "constants":68, "heterosexuals":68, "performative":68, "blissfully":68, "succumbing":68, "concurs":68, "century-old":68, "energetically":68, "espoused":68, "crucially":68, "waxy":68, "made-up":68, "western-style":68, "in-between":68, "cobwebs":68, "culpability":68, "repose":68, "unreported":68, "inequity":68, "proportionate":68, "iota":68, "golds":68, "timbre":68, "romaine":68, "stratospheric":68, "creditor":68, "self-directed":68, "linguists":68, "boilers":68, "probate":68, "ginseng":68, "prostheses":68, "tarnished":68, "exudes":68, "ensue":68, "unwashed":68, "non-existent":68, "button-down":68, "angrier":68, "four-time":68, "ugliest":68, "contented":68, "verifiable":68, "comatose":68, "pasts":68, "underrated":68, "coincidences":68, "educationally":68, "ghettos":68, "schism":68, "sodomy":68, "procreation":68, "inductive":68, "rotunda":68, "blaster":68, "capitalizing":68, "rapid-fire":68, "maddening":68, "duped":68, "looped":68, "war-torn":68, "imprecise":68, "welled":68, "warmest":68, "reimbursed":68, "shuffles":68, "heiress":68, "sprig":68, "gallop":68, "fellowships":68, "distinctiveness":68, "globalized":68, "hummingbirds":68, "timeout":68, "separatists":68, "anchovies":68, "worldviews":68, "half-and-half":68, "philosophic":68, "analyzer":68, "salivary":68, "lectured":68, "laudable":68, "imperious":68, "caked":68, "shapeless":68, "rejoined":68, "first-hand":68, "bask":68, "ratty":68, "gunning":68, "fantasize":68, "foaming":68, "divorcing":68, "preoccupations":68, "spinoff":68, "hairstyle":68, "quilted":68, "redefinition":68, "aprons":68, "solicitation":68, "policy-makers":68, "pacifist":68, "howdy":68, "overseer":68, "militarism":68, "collie":68, "antibacterial":68, "rationalism":68, "arbitrator":68, "spectroscopy":68, "chimpanzee":68, "mucosa":68, "first-half":68, "vexing":68, "displacing":68, "factored":68, "fuming":68, "self-righteous":68, "underwrite":68, "sellout":68, "sparkles":68, "blunders":68, "refinements":68, "inspects":68, "collaboratively":68, "dormitories":68, "exclusivity":68, "redemptive":68, "anyways":68, "salami":68, "paradigmatic":68, "unfunded":68, "redwoods":68, "self-reports":68, "caseworker":68, "bulimia":68, "ecclesiology":68, "grudging":68, "superficially":68, "makings":68, "sedate":68, "emanate":68, "purports":68, "distorts":68, "accumulates":68, "disintegrating":68, "conversing":68, "slyly":68, "remaking":68, "resurgent":68, "transitory":68, "vaulted":68, "unhappily":68, "impropriety":68, "clique":68, "lullaby":68, "upload":68, "headings":68, "omnibus":68, "herons":68, "dorsal":68, "nouns":68, "femur":68, "oscillation":68, "benzene":68, "dioxin":68, "tarpon":68, "personable":68, "perceptible":68, "presides":68, "bubbled":68, "six-foot":68, "two-and-a-half":68, "interlude":68, "characterizations":68, "dreamt":68, "thrusting":68, "carnal":68, "filet":68, "calligraphy":68, "applesauce":68, "protestors":68, "whooping":68, "inter-american":68, "gourd":68, "cysts":68, "dengue":68, "overstuffed":68, "stomp":68, "deadpan":68, "incursion":68, "quantified":68, "breakaway":68, "special-interest":68, "snob":68, "distilled":68, "kleenex":68, "moisturizing":68, "home-based":68, "mercantile":68, "programmable":68, "airstrip":68, "pow":68, "illegitimacy":68, "mono":68, "isotopes":68, "angina":68, "anthropogenic":68, "exogenous":68, "procrastination":68, "supplanted":68, "plummeting":68, "despondent":68, "disgraced":68, "fashioning":68, "sheepish":68, "sneer":68, "corresponded":68, "unoccupied":68, "ungrateful":68, "ashen":68, "loudspeakers":68, "unpacking":68, "eight-hour":68, "broadside":68, "gouging":68, "premonition":68, "grandsons":68, "shingle":68, "buoyancy":68, "relievers":68, "hibernation":68, "obstetrics":68, "workbench":68, "identifications":68, "veterinarians":68, "watercress":68, "phonics":68, "belugas":68, "overstate":68, "soul-searching":68, "erroneously":68, "swoop":68, "god-given":68, "squeaking":68, "glum":68, "must-have":68, "prosaic":68, "hairless":68, "claps":68, "dyed":68, "all-male":68, "fissures":68, "neckline":68, "unreadable":68, "courtrooms":68, "grads":68, "bungalows":68, "valuables":68, "tumbles":68, "chaise":68, "middling":68, "startups":68, "cleanser":68, "caterer":68, "estuaries":68, "gator":68, "firefly":68, "curd":68, "clubhead":68, "die-hard":68, "moribund":68, "derailed":68, "innards":68, "jolted":68, "covertly":68, "inquiring":68, "wanton":68, "traumatized":68, "resentments":68, "contrived":68, "firmness":68, "restaurateur":68, "ballgame":68, "auctioned":68, "superhuman":68, "pejorative":68, "ado":68, "emporium":68, "advertiser":68, "buyouts":68, "tanning":68, "mil":68, "sulphur":68, "on-campus":68, "goddam":68, "fractional":68, "seafloor":68, "concussions":68, "hard-won":68, "offshoot":68, "galore":68, "reputed":68, "imperceptible":68, "expedite":68, "necessitate":68, "haughty":68, "ameliorate":68, "straddle":68, "mangled":68, "energizing":68, "intruding":68, "unfocused":68, "arthritic":68, "laziness":68, "precipice":68, "bookkeeping":68, "newsstands":68, "thrusts":68, "disorientation":68, "catharsis":68, "salaried":68, "teacup":68, "punks":68, "entanglement":68, "astrophysics":68, "herding":68, "crewmen":68, "superhighway":68, "juried":68, "striker":68, "assemblages":68, "selenium":68, "herders":68, "unevenly":68, "congratulated":68, "unlocking":68, "co-founded":68, "misshapen":68, "haggard":68, "peaking":68, "eateries":68, "promiscuity":68, "stoned":68, "socialized":68, "flatbed":68, "retaliatory":68, "oiled":68, "exemplar":68, "unstructured":68, "big-game":68, "land-based":68, "hurls":68, "headstone":68, "vaccinated":68, "sikh":68, "racial/ethnic":68, "inbreeding":68, "enveloped":68, "wherewithal":68, "chronicled":68, "admonished":68, "precipitated":68, "wooing":68, "oscar-winning":68, "inaugurated":68, "subtracting":68, "bloodshot":68, "doings":68, "easy-to-use":68, "applauds":68, "reclining":68, "coughs":68, "weedy":68, "shakespearean":68, "sufferings":68, "smock":68, "lunge":68, "talons":68, "gorges":68, "earthenware":68, "busier":68, "unconvinced":68, "flirted":68, "plodding":68, "traversing":68, "counterintuitive":68, "dreading":68, "partnered":68, "unshaven":68, "competitively":68, "verbatim":68, "tyrannical":68, "fifty-one":68, "campaigner":68, "fundraisers":68, "schoolers":68, "warlord":68, "appeasement":68, "ambulatory":68, "kayaks":68, "cranial":68, "auctioneer":68, "quadriceps":68, "isotope":68, "woodpecker":68, "spindle":68, "mitochondrial":68, "fretted":68, "mercilessly":68, "overzealous":68, "parading":68, "tickled":68, "red-faced":68, "midmorning":68, "oddball":68, "whoop":68, "ruts":68, "highest-paid":68, "unlocks":68, "diameters":68, "protester":68, "outflow":68, "ipods":68, "baby-sitter":68, "badminton":68, "personhood":68, "subs":68, "glaucoma":68, "infarction":68, "succinct":68, "nibble":68, "windswept":68, "bearable":68, "contradicted":68, "mismatched":68, "wisp":68, "ruffled":68, "lengthen":68, "refurbished":68, "unsubstantiated":68, "undressed":68, "pulsed":68, "unanimity":68, "deodorant":68, "sandbox":68, "optimized":68, "welder":68, "leadoff":68, "constipation":68, "lofts":68, "formaldehyde":68, "shipwreck":68, "granular":68, "antigen":68, "accomplishes":68, "bevy":68, "suspecting":68, "disparaging":68, "uttering":68, "vindicated":68, "tirade":68, "berserk":68, "fetching":68, "demolish":68, "majored":68, "fifty-three":68, "unlit":68, "interacted":68, "haggling":68, "seasonally":68, "burgundy":68, "common-sense":68, "homogenous":68, "grub":68, "presenter":68, "linguist":68, "infestation":68, "archetype":68, "sergeants":68, "sprinklers":68, "midget":68, "second-quarter":68, "cicadas":68, "menstruation":68, "blogging":68, "binocular":68, "croquet":68, "qur'an":68, "inuit":68, "goblins":68, "antivirus":68, "deepens":68, "commendable":68, "hailing":68, "uneventful":68, "stupor":68, "lustrous":68, "down-home":68, "intrigues":68, "patter":68, "color-coded":68, "coerce":68, "repress":68, "silks":68, "fairy-tale":68, "legible":68, "back-up":68, "furrows":68, "scoreless":68, "defaults":68, "conical":68, "expatriates":68, "colander":68, "payers":68, "harms":68, "t-test":68, "papacy":68, "deacons":68, "mennonite":68, "bot":68, "romp":68, "hindrance":68, "government-sponsored":68, "profiled":68, "commutes":68, "reread":68, "skimmed":68, "slur":68, "glam":68, "government-run":68, "playmates":68, "periodical":68, "issuance":68, "rotations":68, "four-wheel-drive":68, "hideout":68, "polyethylene":68, "mohawk":68, "snowmobiles":68, "burmese":68, "plating":68, "clubface":68, "self-styled":68, "buckled":68, "devoured":68, "envisioning":68, "demure":68, "taming":68, "frilly":68, "auspicious":68, "sequentially":68, "living-room":68, "slurs":68, "strolls":68, "foursome":68, "shavings":68, "take-home":68, "southerner":68, "chartreuse":68, "dimples":68, "cob":68, "warship":68, "organisation":68, "polyurethane":68, "hijacking":68, "blackjack":68, "laundromat":68, "long-run":68, "no-hitter":68, "pronouns":68, "retinal":68, "quarks":68, "incinerators":68, "jobber":68, "summarily":68, "assuage":68, "tormented":68, "insufficiently":68, "penetrates":68, "ceaseless":68, "adulation":68, "ponderous":68, "sorrowful":68, "tacitly":68, "floor-to-ceiling":68, "unjustified":68, "froth":68, "gurgling":68, "inhibited":68, "docs":68, "duress":68, "bottleneck":68, "firefight":68, "elixir":68, "laurel":68, "leaguers":68, "alleyway":68, "neurosurgeon":68, "ingestion":68, "dailies":68, "assay":68, "placenta":68, "paleontologists":68, "closeup":68, "hologram":68, "haphazardly":68, "dwarfed":68, "glean":68, "lags":68, "patrolled":68, "conjured":68, "record-breaking":68, "enlighten":68, "maelstrom":68, "thatched":68, "serrated":68, "spotlights":68, "oil-rich":68, "mailboxes":68, "newsworthy":68, "victors":68, "emphases":68, "placards":68, "cowards":68, "axiom":68, "clergyman":68, "non-violent":68, "chum":68, "cranks":68, "readout":68, "nonviolence":68, "bis":68, "biotic":68, "end-of-life":68, "ghanaian":68, "disinfection":68, "trudging":68, "counsels":68, "gutted":68, "upswing":68, "wobbled":68, "carpeted":68, "seventy-two":68, "shirtless":68, "threes":68, "sailboats":68, "convulsions":68, "next-generation":68, "drugged":68, "marinated":68, "fives":68, "fortifications":68, "sparrows":68, "market-oriented":68, "lagoons":68, "spartans":68, "python":68, "chamomile":68, "furrow":68, "exegesis":68, "quilting":68, "regressions":68, "hoy":68, "werewolf":68, "farmworkers":68, "takings":68, "midafternoon":68, "conceals":68, "suave":68, "oxymoron":68, "disagreeing":68, "restful":68, "oddities":68, "buries":68, "tyrants":68, "drips":68, "chaste":68, "pled":68, "expansions":68, "high-technology":68, "low-grade":68, "prosecutorial":68, "judeo-christian":68, "reflexive":68, "paddled":68, "liquidation":68, "triage":68, "outboard":68, "newsstand":68, "firelight":68, "congestive":68, "archway":68, "inflow":68, "outage":68, "maggots":68, "anti-aging":68, "futurists":68, "raters":68, "no-fault":68, "trinitarian":68, "whippy":68, "unnerving":68, "permeated":68, "thirdly":68, "cavalier":68, "subservient":68, "simulating":68, "disseminating":68, "ideologues":68, "tradeoff":68, "tangles":68, "infallible":68, "lint":68, "schizophrenic":68, "eyeliner":68, "ripen":68, "repent":68, "prophecies":68, "speechwriter":68, "deep-fried":68, "dandelion":68, "sorties":68, "bottom-up":68, "puritans":68, "crypt":68, "innkeeper":68, "sagas":68, "franchisees":68, "unadorned":68, "unjustly":68, "proudest":68, "permeate":68, "fortuitous":68, "equates":68, "unrestrained":68, "exhilarated":68, "dinnertime":68, "trashing":68, "meanness":68, "activating":68, "fertilize":68, "smears":68, "bunks":68, "appendages":68, "microwaves":68, "countervailing":68, "airlift":68, "engravings":68, "nationalization":68, "scab":68, "urchins":68, "cursor":68, "aristotelian":68, "licensure":68, "euro-american":68, "martians":68, "service-learning":68, "lifeblood":68, "flat-out":68, "duplicated":68, "presumptuous":68, "cede":68, "overhear":68, "condescension":68, "slanted":68, "strictures":68, "dispassionate":68, "hypocrite":68, "dark-skinned":68, "deathly":68, "irreconcilable":68, "hairdo":68, "visage":68, "nosy":68, "minefield":68, "prejudiced":68, "cornfields":68, "workmanship":68, "hoof":68, "on-board":68, "immaterial":68, "shading":68, "middleman":68, "dungeon":68, "tryin":68, "gentile":68, "croutons":68, "maladaptive":68, "bioterrorism":68, "cellulose":68, "osteoarthritis":68, "vaunted":69, "imperceptibly":69, "wrest":69, "mistook":69, "infiltrated":69, "entwined":69, "depress":69, "inhabiting":69, "ruckus":69, "snuggled":69, "huffing":69, "moldy":69, "allegiances":69, "fifty-six":69, "amending":69, "immorality":69, "assailants":69, "meditations":69, "u-turn":69, "multipurpose":69, "hauls":69, "ladle":69, "prodigal":69, "conspiracies":69, "chronicler":69, "vis--vis":69, "corset":69, "bottling":69, "siamese":69, "birdies":69, "fiduciary":69, "near-death":69, "bioethics":69, "invoice":69, "savanna":69, "sissy":69, "walleyes":69, "bustle":69, "trumps":69, "largesse":69, "jovial":69, "confounded":69, "second-rate":69, "elucidate":69, "glorified":69, "purify":69, "matures":69, "brightens":69, "advancements":69, "guesses":69, "midweek":69, "meditating":69, "lotions":69, "clarion":69, "predominately":69, "takeovers":69, "foreplay":69, "syndication":69, "nannies":69, "videotaping":69, "cockroach":69, "novella":69, "evacuations":69, "tux":69, "insolvent":69, "in-home":69, "kudzu":69, "nitrates":69, "unmoved":69, "careening":69, "reexamine":69, "catered":69, "encompassed":69, "foreheads":69, "creased":69, "quieted":69, "uninhabited":69, "proportionately":69, "alludes":69, "viscous":69, "pajama":69, "frailty":69, "laterally":69, "yon":69, "vicarious":69, "keypad":69, "souffle":69, "pronoun":69, "pollination":69, "eugenics":69, "metastasis":69, "ideation":69, "naively":69, "patched":69, "throaty":69, "flopping":69, "facile":69, "inflamed":69, "inhumane":69, "refrained":69, "strut":69, "punishable":69, "comedic":69, "melee":69, "excavate":69, "dominoes":69, "crevice":69, "trademarks":69, "domesticity":69, "kelp":69, "artisanal":69, "weaver":69, "irradiation":69, "cellulite":69, "puss":69, "transgenic":69, "roundly":69, "unbeknownst":69, "amounting":69, "befriended":69, "persevere":69, "abandons":69, "rancor":69, "cream-colored":69, "toned":69, "powering":69, "roused":69, "approachable":69, "peculiarities":69, "daydreaming":69, "conflicted":69, "unaccounted":69, "re-creation":69, "feuds":69, "inalienable":69, "bandanna":69, "unaided":69, "marshmallow":69, "cacti":69, "musicianship":69, "dioceses":69, "doctorates":69, "epidemiologic":69, "pda":69, "chicano":69, "goblin":69, "toying":69, "creaky":69, "rejuvenated":69, "penalize":69, "glib":69, "contentedly":69, "transpired":69, "naysayers":69, "whimsy":69, "self-inflicted":69, "unsung":69, "intermission":69, "posited":69, "defections":69, "seamstress":69, "linguistically":69, "transfusions":69, "thinness":69, "methodists":69, "swede":69, "money-market":69, "contaminant":69, "quakes":69, "gaggle":69, "dissect":69, "aspires":69, "humbled":69, "gullible":69, "bouncy":69, "transcending":69, "heavyweights":69, "fads":69, "togetherness":69, "moored":69, "exploitative":69, "coloration":69, "conceiving":69, "high-volume":69, "right-hander":69, "wimp":69, "misdemeanors":69, "tailgate":69, "childrens":69, "storeroom":69, "gunners":69, "whoo":69, "substitutions":69, "anti-americanism":69, "post-soviet":69, "stewardess":69, "weasel":69, "trappers":69, "tamales":69, "acoustical":69, "chimp":69, "fluorescence":69, "piazza":69, "metadata":69, "abounds":69, "spearheaded":69, "scrapped":69, "testy":69, "transmits":69, "elicits":69, "ambled":69, "aggravate":69, "wiggling":69, "empowers":69, "confides":69, "caress":69, "inhibitions":69, "sowing":69, "aristocrat":69, "sparring":69, "take-out":69, "possessive":69, "venomous":69, "honeysuckle":69, "all-inclusive":69, "petal":69, "christendom":69, "rupees":69, "spurring":69, "reassert":69, "frightens":69, "mom-and-pop":69, "sinuous":69, "cupping":69, "unambiguously":69, "awakens":69, "diabolical":69, "look-alike":69, "preconceptions":69, "driveways":69, "staining":69, "confining":69, "retelling":69, "privatizing":69, "brocade":69, "designations":69, "fevers":69, "bossy":69, "circulatory":69, "parachutes":69, "retainer":69, "elizabethan":69, "revivals":69, "seedless":69, "adjudication":69, "firehouse":69, "multilevel":69, "cataloging":69, "t-tests":69, "co-pilot":69, "conch":69, "raptor":69, "unabated":69, "floundering":69, "fractious":69, "overtook":69, "disrepair":69, "splashes":69, "comprehending":69, "squalid":69, "knee-jerk":69, "brevity":69, "touchstone":69, "unknowable":69, "doomsday":69, "piecemeal":69, "lapels":69, "zap":69, "overheating":69, "leftists":69, "elitism":69, "kindling":69, "junkyard":69, "middlemen":69, "zero-sum":69, "atrophy":69, "radioed":69, "corkscrew":69, "genocidal":69, "tumbler":69, "flotilla":69, "cookware":69, "facilitation":69, "geographer":69, "inhibitor":69, "amazonian":69, "rollover":69, "masonic":69, "sulfide":69, "condor":69, "sown":69, "hails":69, "monotone":69, "nonchalantly":69, "disjointed":69, "penniless":69, "goings":69, "lusty":69, "modus":69, "personalize":69, "shenanigans":69, "second-best":69, "caged":69, "craves":69, "forty-nine":69, "riverside":69, "coldness":69, "docket":69, "waived":69, "spiced":69, "peer-reviewed":69, "statehouse":69, "prune":69, "tastings":69, "crouches":69, "dun":69, "berets":69, "shorn":69, "cremation":69, "magisterium":69, "balk":69, "self-deprecating":69, "life-saving":69, "yesteryear":69, "booed":69, "small-time":69, "paler":69, "inflating":69, "infecting":69, "mauve":69, "recessed":69, "public-private":69, "matriarch":69, "dole":69, "potluck":69, "gestation":69, "astrophysicist":69, "skated":69, "gymnast":69, "treatises":69, "collages":69, "clipper":69, "overfishing":69, "mic":69, "modulation":69, "interdiction":69, "leprosy":69, "ecotourism":69, "throughput":69, "skinheads":69, "freewheeling":69, "epitomizes":69, "shoulder-length":69, "sold-out":69, "six-figure":69, "rainstorm":69, "breather":69, "silliness":69, "supplant":69, "pall":69, "unspoiled":69, "sauntered":69, "portly":69, "terminating":69, "self-addressed":69, "mitigated":69, "bulged":69, "gauzy":69, "nauseous":69, "galloping":69, "lifelike":69, "installments":69, "multiyear":69, "accomplices":69, "sawing":69, "normalize":69, "unsupervised":69, "foreword":69, "bookcases":69, "raves":69, "abode":69, "catalysts":69, "memorization":69, "ottoman":69, "lakefront":69, "microbiology":69, "presenters":69, "crunches":69, "pallets":69, "deafness":69, "chisel":69, "bulgarian":69, "schooner":69, "eskimo":69, "biomechanics":69, "musculoskeletal":69, "chronicling":69, "harnessing":69, "championing":69, "forego":69, "erecting":69, "accented":69, "dined":69, "cushy":69, "rustled":69, "masquerading":69, "monotony":69, "ponders":69, "relieves":69, "jutted":69, "denunciation":69, "reassessment":69, "fifty-seven":69, "belle":69, "sprints":69, "facsimile":69, "saintly":69, "overpopulation":69, "hallucination":69, "intercepts":69, "projectile":69, "pursuers":69, "turnip":69, "donut":69, "co-authors":69, "sloth":69, "invitational":69, "hydrocarbon":69, "sport-utility":69, "aneurysm":69, "grasshopper":69, "submersible":69, "allergens":69, "sociodemographic":69, "cacao":69, "lamenting":69, "startle":69, "rarefied":69, "overkill":69, "averse":69, "stead":69, "sexier":69, "apologizes":69, "impulsively":69, "paneled":69, "pomp":69, "jeweled":69, "kaleidoscope":69, "refill":69, "paintbrush":69, "quarter-mile":69, "pissing":69, "kinky":69, "snooping":69, "dimming":69, "on-going":69, "unsigned":69, "backlit":69, "malnourished":69, "boycotts":69, "windbreaker":69, "gong":69, "tit":69, "knoll":69, "puncture":69, "censors":69, "scavengers":69, "idioms":69, "still-life":69, "botanic":69, "pluralist":69, "pistachios":69, "pimps":69, "jordanians":69, "warranties":69, "confucian":69, "miso":69, "segmentation":69, "cowering":69, "conforms":69, "nooks":69, "clarifies":69, "two-minute":69, "flaunt":69, "mouthing":69, "insistently":69, "devilish":69, "alphabetical":69, "heave":69, "miscalculation":69, "top-level":69, "wildness":69, "irrevocable":69, "slowness":69, "rudeness":69, "flops":69, "sneezing":69, "lectern":69, "spaniard":69, "fonts":69, "synchronous":69, "amphitheatre":69, "eyepieces":69, "parotid":69, "convinces":69, "jockeying":69, "quadrupled":69, "unsightly":69, "thumbing":69, "customarily":69, "purveyors":69, "shelled":69, "recoiled":69, "alumnus":69, "buckling":69, "uncooperative":69, "tranquillity":69, "rusting":69, "cutthroat":69, "crappy":69, "perforated":69, "playfulness":69, "negotiable":69, "mechanized":69, "renderings":69, "looted":69, "subliminal":69, "geraniums":69, "shelving":69, "plausibility":69, "drummers":69, "miscarriages":69, "florets":69, "headlight":69, "computer-aided":69, "orgasms":69, "insecticides":69, "indentation":69, "fractal":69, "pelagic":69, "blustery":69, "self-appointed":69, "soon-to-be":69, "bode":69, "staunchly":69, "downtrodden":69, "canny":69, "dreamily":69, "educations":69, "equating":69, "reintroduce":69, "glumly":69, "creak":69, "imitations":69, "auditioned":69, "tresses":69, "hit-and-run":69, "shitty":69, "deport":69, "thatch":69, "burrito":69, "bangles":69, "grasshoppers":69, "androgynous":69, "syndromes":69, "inks":69, "centres":69, "descriptors":69, "smallmouth":69, "estonian":69, "peppered":69, "ferociously":69, "harried":69, "allay":69, "misinterpreted":69, "strenuously":69, "evading":69, "widens":69, "conveniences":69, "mannerisms":69, "stateside":69, "solidity":69, "offends":69, "inky":69, "undid":69, "afire":69, "arousing":69, "growls":69, "paternalistic":69, "eccentricity":69, "divinely":69, "dictionaries":69, "vermin":69, "sleepers":69, "contraband":69, "yelp":69, "quickening":69, "heredity":69, "lilacs":69, "proxies":69, "deliberative":69, "viewfinder":69, "cabernet":69, "hysterectomy":69, "plenary":69, "clays":69, "hq":69, "irrigated":69, "aztecs":69, "machinations":69, "drumbeat":69, "disprove":69, "nebulous":69, "perpetuates":69, "nonsensical":69, "forefathers":69, "apathetic":69, "incredulously":69, "shrubbery":69, "self-sustaining":69, "irreparable":69, "reconsideration":69, "two-person":69, "ballplayers":69, "left-hander":69, "nickels":69, "nugget":69, "wick":69, "scorecard":69, "demos":69, "backpackers":69, "saxophonist":69, "volunteerism":69, "irish-american":69, "yah":69, "advertises":69, "gloriously":69, "niceties":69, "phoning":69, "roomful":69, "low-budget":69, "orchestrate":69, "waver":69, "clanging":69, "underprivileged":69, "atrocious":69, "thoughtless":69, "jumpy":69, "indestructible":69, "workaholic":69, "memento":69, "dents":69, "frock":69, "purging":69, "truthfulness":69, "verve":69, "fumbles":69, "scion":69, "nomenclature":69, "assholes":69, "garland":69, "masons":69, "covariance":69, "extinctions":69, "aphids":69, "roux":69, "courted":69, "crisscrossing":69, "bolstering":69, "squirm":69, "morass":69, "spewed":69, "revamping":69, "outweighs":69, "grubby":69, "co-authored":69, "threaded":69, "silhouetted":69, "revoked":69, "legit":69, "mush":69, "referenced":69, "horticulture":69, "black-tie":69, "firsts":69, "gels":69, "cynic":69, "foundry":69, "spillover":69, "self-care":69, "nettles":69, "popper":69, "gesso":69, "subsystems":69, "athenian":69, "lithography":69, "decried":69, "smallish":69, "mimicked":69, "self-assured":69, "forerunner":69, "herded":69, "partway":69, "salutary":69, "deferential":69, "self-defeating":69, "bite-size":69, "cathartic":69, "near-term":69, "roost":69, "thrillers":69, "intro":69, "all-new":69, "commercialism":69, "givers":69, "anthologies":69, "worshippers":69, "neurology":69, "bushel":69, "trustworthiness":69, "bavarian":69, "techs":69, "loyalist":69, "aloe":69, "peasantry":69, "dissertations":69, "decoding":69, "lotteries":69, "genomics":69, "polyps":69, "pueblos":69, "mongols":69, "minutiae":69, "skips":69, "intents":69, "hard-nosed":69, "well-informed":69, "distinguishable":69, "threading":69, "testimonials":69, "conjuring":69, "lifesaving":69, "emigrate":69, "watchdogs":69, "pursed":69, "unprofessional":69, "uh-uh":69, "azure":69, "serpentine":69, "olympians":69, "monographs":69, "bender":69, "peacemaking":69, "propellers":69, "entrapment":69, "rotors":69, "bridesmaids":69, "ejection":69, "caseloads":69, "asia-pacific":69, "menopausal":69, "fee-for-service":69, "shanty":69, "petitioners":69, "concordance":69, "spyware":69, "lagged":69, "pales":69, "contradicting":69, "chats":69, "familiarize":69, "grinds":69, "clenching":69, "interwoven":69, "scuffle":69, "listless":69, "expedient":69, "rejoicing":69, "carpentry":69, "redeeming":69, "downsize":69, "validating":69, "retake":69, "autographed":69, "all-black":69, "equivocal":69, "pouches":69, "pawns":69, "vise":69, "skylights":69, "proprietors":69, "cocks":69, "punter":69, "nonhuman":69, "sweetener":69, "hinduism":69, "consonant":69, "pageants":69, "wardens":69, "carvers":69, "decade-long":69, "amassing":69, "wields":69, "obtains":69, "reams":69, "bespectacled":69, "well-placed":69, "nourishing":69, "equaled":69, "enslaved":69, "gossiping":69, "crummy":69, "lounges":69, "layman":69, "shackled":69, "concave":69, "jazzy":69, "interjected":69, "piper":69, "armaments":69, "pureed":69, "nostril":69, "interplanetary":69, "plazas":69, "buoys":69, "peeler":69, "crock":69, "moors":69, "paratroopers":69, "pinot":69, "manganese":69, "currants":69, "bailiff":69, "theta":69, "beluga":69, "hodgepodge":69, "eschew":69, "modicum":69, "adores":69, "tinny":69, "panicking":69, "all-encompassing":69, "shivers":69, "onus":69, "extrapolate":69, "caressed":69, "one-story":69, "wintertime":69, "expediency":69, "monochromatic":69, "wordlessly":69, "margaritas":69, "invalidate":69, "south-central":69, "eco-friendly":69, "patrician":69, "secede":69, "differentially":69, "kickbacks":69, "subcontinent":69, "wildflower":69, "turntable":69, "cadaver":69, "prospectus":69, "pulley":69, "jester":69, "sos":69, "sorghum":69, "blackbird":69, "deflection":69, "baboon":69, "hemoglobin":69, "lien":69, "nano":69, "prodding":69, "no-frills":69, "elapsed":69, "petitioned":69, "encrusted":69, "steadied":69, "ostracized":69, "shamed":69, "disagreeable":69, "apprehend":69, "harnessed":69, "sixteen-year-old":69, "socialite":69, "reappears":69, "undress":69, "imitates":69, "altercation":69, "conquests":69, "volition":69, "dimes":69, "antagonists":69, "lilac":69, "one-piece":69, "high-intensity":69, "nontoxic":69, "beaks":69, "naturalists":69, "detonation":69, "fakes":69, "corporeal":69, "coasters":69, "pellet":69, "conifers":69, "tryouts":69, "locust":69, "anarchists":69, "eye-opening":69, "rages":69, "ungainly":69, "upsurge":69, "morsel":69, "flirtatious":69, "hijacked":69, "trampling":69, "luckiest":69, "culpable":69, "harmonize":69, "silences":69, "shallower":69, "mid-nineteenth":69, "peeks":69, "upholstered":69, "fedora":69, "overeating":69, "jailhouse":69, "paddles":69, "etcetera":69, "petrochemical":69, "payer":69, "tracer":69, "torpedoes":69, "skateboarding":69, "exponent":69, "swindle":69, "liposuction":69, "self-perceptions":69, "quasar":69, "fiercest":69, "tribulations":69, "stumped":69, "incrementally":69, "unencumbered":69, "embodying":69, "drummed":69, "supposition":69, "unforgivable":69, "pieced":69, "disqualify":69, "aborted":69, "anachronism":69, "physicality":69, "deducted":69, "damnation":69, "butchers":69, "snip":69, "obstetrician":69, "choppers":69, "symphonies":69, "pianos":69, "carmakers":69, "solvency":69, "webbing":69, "requiem":69, "higher-order":69, "sitters":69, "carbonate":69, "rectal":69, "telecommuting":69, "geisha":69, "godsend":69, "stifled":69, "musing":69, "unseemly":69, "pocketed":69, "irresponsibility":69, "vilified":69, "fistful":69, "frills":69, "conspire":69, "crackled":69, "chattered":69, "comprehensively":69, "manifestly":69, "sequined":69, "firstly":69, "sine":69, "hypothesize":69, "bookings":69, "slaughtering":69, "commonalities":69, "alum":69, "checkups":69, "soreness":69, "seaport":69, "scavenger":69, "bronchitis":69, "draperies":69, "taverns":69, "blondes":69, "heretical":69, "hardcopy":69, "cog":69, "guacamole":69, "three-run":69, "baiting":69, "patrolman":69, "stem-cell":69, "actuators":69, "half-empty":69, "subtler":69, "enveloping":69, "fidgeting":69, "extinguish":69, "dreamlike":69, "scrappy":69, "four-bedroom":69, "visualizing":69, "curiosities":69, "tingle":69, "whiter":69, "symbolizing":69, "auditioning":69, "barter":69, "coffees":69, "ballplayer":69, "anti-gay":69, "fingerprinting":69, "unsecured":69, "topographic":69, "esthetic":69, "geopolitics":69, "triangulation":69, "leek":69, "pheasants":69, "methyl":69, "imams":69, "languishing":69, "low-slung":69, "juxtaposed":69, "supervises":69, "grandly":69, "duds":69, "hustled":69, "gimmicks":69, "curvy":69, "stank":69, "disenfranchised":69, "barbs":69, "one-night":69, "jest":69, "beeping":69, "aground":69, "winks":69, "charmer":69, "germane":69, "marathons":69, "synchronized":69, "sportswear":69, "separatism":69, "supremacist":69, "heirlooms":69, "re-entry":69, "monogamy":69, "kilos":69, "umber":69, "edema":69, "folate":69, "flaxseed":69, "metering":69, "abscess":69, "lessened":69, "sidestep":69, "scrupulously":69, "sky-high":69, "commended":69, "scrupulous":69, "subconsciously":69, "surmise":69, "recklessness":69, "inexhaustible":69, "squawking":69, "gritted":69, "fifty-four":69, "byproducts":69, "spandex":69, "timers":69, "russet":69, "kneading":69, "superstitions":69, "poop":69, "transitioning":69, "demography":69, "geyser":69, "scones":69, "delinquents":69, "hummer":69, "tubers":69, "neanderthal":69, "readability":69, "mettle":69, "irrepressible":69, "fielded":69, "severing":69, "freshest":69, "vibrated":69, "inconspicuous":69, "ranting":69, "self-doubt":69, "appreciable":69, "leaden":69, "foamy":69, "crumbly":69, "devotee":69, "graded":69, "numerically":69, "agribusiness":69, "pediatricians":69, "mistresses":69, "evangelists":69, "microbiologist":69, "pathologists":69, "privatized":69, "enlistment":69, "selectivity":69, "preservationists":69, "darks":69, "plotters":69, "escrow":69, "peddler":69, "newsmaker":69, "kinetics":69, "backswing":69, "topaz":69, "sinusitis":69, "obliterate":69, "instilled":69, "hundredth":69, "delicacies":69, "workhorse":69, "culminates":69, "smearing":69, "inaccuracies":69, "meaner":69, "battery-powered":69, "wagged":69, "self-discipline":69, "balloting":69, "proselytizing":69, "fuses":69, "venting":69, "perpetuation":69, "multitasking":69, "anti-terrorism":69, "collectible":69, "accusers":69, "alimony":69, "backfield":69, "arraignment":69, "geneticists":69, "genealogical":69, "maidens":69, "asymptomatic":69, "nomad":69, "returnees":69, "perilously":69, "surest":69, "in-your-face":69, "ensues":69, "extricate":69, "shortcoming":69, "unobtrusive":69, "obscenities":69, "multimillionaire":69, "discontinue":69, "soothed":69, "mistreated":69, "no-no":69, "guesswork":69, "shined":69, "toasting":69, "presumptive":69, "renegotiate":69, "taper":69, "clinched":69, "conservationist":69, "stopper":69, "vendetta":69, "stepson":69, "visionaries":69, "bungee":69, "yonder":69, "atmospheres":69, "cell-phone":69, "iteration":69, "tooling":69, "sandal":69, "meatloaf":69, "ultralight":69, "curatorial":69, "two-parent":69, "backcourt":69, "evangelism":69, "reintroduction":69, "tapas":69, "anesthesiologist":69, "materiality":69, "metastatic":69, "permafrost":69, "squandered":69, "fastidious":69, "emboldened":69, "railed":69, "overdo":69, "undefined":69, "resplendent":69, "clashing":69, "frequented":69, "squalor":69, "glorify":69, "scraggly":69, "substantiated":69, "thumbed":69, "directness":69, "dampness":69, "notches":69, "swampy":69, "colonize":69, "betterment":69, "redesigned":69, "scalloped":69, "falsehood":69, "questioner":69, "bunnies":69, "dens":69, "pastas":69, "self-knowledge":69, "chaps":69, "preempt":69, "mocha":69, "registrar":69, "swab":69, "runaways":69, "reintegration":69, "claimants":69, "stardust":69, "gradients":69, "adhesion":69, "gouache":69, "creatine":69, "readying":69, "dwindle":69, "weirdly":69, "last-ditch":69, "implored":69, "magnify":69, "pounced":69, "drudgery":69, "strong-willed":69, "untied":69, "southernmost":69, "slouched":69, "headfirst":69, "pampering":69, "daggers":69, "playmate":69, "banister":69, "asterisk":69, "berths":69, "retirements":69, "faithfulness":69, "subtropical":69, "pinball":69, "conferencing":69, "coolant":69, "hybridization":69, "infra":69, "linchpin":69, "excelled":69, "orchestrating":69, "igniting":69, "overloaded":69, "profitably":69, "guttural":69, "comically":69, "wisest":69, "cashed":69, "milled":69, "conforming":69, "fainting":69, "restlessly":69, "patchy":69, "waists":69, "four-game":69, "formulaic":69, "condiments":69, "turnoff":69, "impurities":69, "garlands":69, "face-off":69, "purchaser":69, "archeological":69, "hummingbird":69, "pathogenic":69, "colonized":69, "all-terrain":69, "hearse":69, "externalities":69, "fondue":69, "counselling":69, "windrows":69, "wannabe":70, "grimacing":70, "spouting":70, "dissipated":70, "underbelly":70, "finicky":70, "reassuringly":70, "low-profile":70, "stinky":70, "disciplining":70, "chirped":70, "slashes":70, "baseballs":70, "backups":70, "carnivorous":70, "bicentennial":70, "second-grade":70, "gull":70, "prehistory":70, "vehicular":70, "jackass":70, "sills":70, "watchman":70, "eurasian":70, "shoulder-width":70, "cyclic":70, "cartography":70, "underpainting":70, "restatement":70, "dialogic":70, "disregarding":70, "disquieting":70, "heartening":70, "unseat":70, "unpaved":70, "chalky":70, "outgrow":70, "stipulate":70, "munch":70, "prototypical":70, "cradles":70, "dining-room":70, "unconfirmed":70, "rehabilitated":70, "optimally":70, "shag":70, "steeple":70, "after-tax":70, "sanding":70, "rotational":70, "layup":70, "keyhole":70, "relays":70, "cropping":70, "roosters":70, "moccasins":70, "tropes":70, "mid-size":70, "guardianship":70, "cursive":70, "reliabilities":70, "alphas":70, "worksheet":70, "hyenas":70, "hasidic":70, "homecare":70, "narratology":70, "concocted":70, "magnificently":70, "ushering":70, "seeps":70, "bloodiest":70, "pliable":70, "assuredly":70, "two-man":70, "yelped":70, "kiddie":70, "bartenders":70, "prow":70, "hula":70, "politburo":70, "research-based":70, "germanic":70, "ting":70, "nymph":70, "var":70, "excitation":70, "intelligibility":70, "ventricular":70, "phyllo":70, "tonsillectomy":70, "overshadow":70, "affording":70, "cinch":70, "once-in-a-lifetime":70, "tamed":70, "consigned":70, "detach":70, "toiling":70, "loaned":70, "grievous":70, "circumspect":70, "knee-high":70, "insanely":70, "ardor":70, "dimmer":70, "stipulation":70, "obituaries":70, "necktie":70, "plumbers":70, "slay":70, "tweezers":70, "orb":70, "flip-flop":70, "cuisines":70, "overpass":70, "bridle":70, "mechanistic":70, "digger":70, "synthesizer":70, "attache":70, "pedophiles":70, "weevil":70, "savored":70, "gleeful":70, "amass":70, "rueful":70, "unsteadily":70, "recedes":70, "cost-cutting":70, "fifty-eight":70, "poolside":70, "scold":70, "designates":70, "cutouts":70, "encyclopedic":70, "zigzag":70, "full-body":70, "nested":70, "cots":70, "walkman":70, "u-shaped":70, "wastebasket":70, "invader":70, "nationhood":70, "incarnate":70, "popes":70, "gentiles":70, "beavers":70, "aero":70, "lipid":70, "moor":70, "loon":70, "byte":70, "crossbow":70, "well-publicized":70, "rambunctious":70, "out-of-control":70, "doldrums":70, "phrased":70, "enclosing":70, "self-confident":70, "appropriating":70, "motherly":70, "wetness":70, "prolonging":70, "sparkly":70, "whacked":70, "twos":70, "disenchantment":70, "reproduces":70, "contesting":70, "financiers":70, "demarcation":70, "delegated":70, "snare":70, "skit":70, "recoveries":70, "cleft":70, "strippers":70, "pilings":70, "congresses":70, "chiropractor":70, "cashews":70, "generative":70, "kibbutz":70, "jeopardized":70, "adheres":70, "cornered":70, "smother":70, "swapped":70, "reclaimed":70, "hubbub":70, "multitudes":70, "re-establish":70, "straddles":70, "underlines":70, "big-ticket":70, "subdivided":70, "consoling":70, "pangs":70, "standardize":70, "clambered":70, "babble":70, "higher-level":70, "moldings":70, "hibiscus":70, "pansies":70, "filament":70, "ukrainians":70, "neolithic":70, "cheetah":70, "squires":70, "underachievement":70, "befitting":70, "mild-mannered":70, "banded":70, "jaunt":70, "outlive":70, "flabbergasted":70, "sloshing":70, "jabbing":70, "reprint":70, "unnerved":70, "conflagration":70, "toil":70, "stringing":70, "letdown":70, "meekly":70, "sixty-four":70, "mumbles":70, "top-secret":70, "pallid":70, "golly":70, "reprimanded":70, "caresses":70, "abomination":70, "court-appointed":70, "infidels":70, "morsels":70, "bakeries":70, "separations":70, "rhyming":70, "aerodynamics":70, "oneness":70, "expressionism":70, "backhand":70, "endocrine":70, "boarders":70, "stepwise":70, "non-indian":70, "outrageously":70, "persuasively":70, "regretting":70, "splintering":70, "smirking":70, "hoisting":70, "barreling":70, "twang":70, "offing":70, "disarmed":70, "tinkling":70, "wean":70, "diversifying":70, "usefully":70, "soberly":70, "lakeside":70, "purring":70, "marbled":70, "shocker":70, "mid-century":70, "close-ups":70, "governorship":70, "subjugation":70, "sequels":70, "perverted":70, "handyman":70, "scarring":70, "infielder":70, "wellbeing":70, "improvisational":70, "fluted":70, "coda":70, "pepperoni":70, "sit-ups":70, "snowman":70, "cardamom":70, "chainsaw":70, "seer":70, "multiplier":70, "asthmatic":70, "halogen":70, "hemispheric":70, "sectoral":70, "estrogens":70, "hippocampus":70, "travails":70, "excels":70, "reveled":70, "nonchalant":70, "productively":70, "backwoods":70, "squeamish":70, "skirted":70, "revolting":70, "ageless":70, "converging":70, "destinies":70, "fringed":70, "unrepentant":70, "comings":70, "situate":70, "scaly":70, "commonsense":70, "nutritionists":70, "middle-school":70, "shrinkage":70, "parkland":70, "zooms":70, "congregants":70, "peripherals":70, "starfish":70, "mystics":70, "retails":70, "jogger":70, "baptismal":70, "nymphs":70, "fraternities":70, "transverse":70, "court-martial":70, "particulates":70, "machining":70, "tunisian":70, "reaming":70, "homeopathic":70, "pollinators":70, "castes":70, "long-suffering":70, "trickier":70, "beguiling":70, "splashy":70, "amaze":70, "miffed":70, "thundering":70, "wariness":70, "serviceable":70, "wannabes":70, "straying":70, "alleviating":70, "slinky":70, "wager":70, "dwells":70, "undetermined":70, "spin-off":70, "blue-and-white":70, "deposed":70, "blockbusters":70, "favourite":70, "armada":70, "great-grandchildren":70, "autopsies":70, "potable":70, "paleontologist":70, "malignancy":70, "foxy":70, "mucosal":70, "cash-strapped":70, "doggedly":70, "bulwark":70, "indulged":70, "uncommonly":70, "draping":70, "sociable":70, "hunkered":70, "unconnected":70, "inexcusable":70, "uncritical":70, "terraced":70, "pressurized":70, "bulletins":70, "indigestion":70, "approvals":70, "disinformation":70, "genitalia":70, "caucasians":70, "factional":70, "paternalism":70, "post-secondary":70, "hock":70, "laypeople":70, "post-communist":70, "church-state":70, "hectare":70, "ethiopians":70, "thrombosis":70, "lethargic":70, "instilling":70, "terrorize":70, "undivided":70, "distantly":70, "drooped":70, "pluses":70, "virtuosity":70, "dimpled":70, "coverings":70, "implosion":70, "equivalency":70, "proximate":70, "checker":70, "lubrication":70, "israelites":70, "quakers":70, "elms":70, "signification":70, "reactivity":70, "open-source":70, "gymnasts":70, "hacienda":70, "tympanic":70, "tenner":70, "vehement":70, "headlined":70, "truest":70, "doubters":70, "shouldered":70, "piped":70, "notifying":70, "home-grown":70, "themed":70, "deranged":70, "tipsy":70, "disputing":70, "serviced":70, "faked":70, "inventiveness":70, "attired":70, "dumbest":70, "croaked":70, "bigoted":70, "discharging":70, "excrement":70, "inefficiencies":70, "maw":70, "ail":70, "boroughs":70, "deductibles":70, "hospitalizations":70, "wanderer":70, "keel":70, "fucker":70, "stylus":70, "non-white":70, "carnivore":70, "norwegians":70, "nodules":70, "disturbingly":70, "misnomer":70, "squander":70, "thought-provoking":70, "supplementing":70, "predates":70, "bothersome":70, "long-sleeved":70, "vouch":70, "splintered":70, "blot":70, "reopening":70, "halve":70, "bolting":70, "sifted":70, "perishable":70, "infernal":70, "armchairs":70, "passageways":70, "sweatpants":70, "sportswriter":70, "retractable":70, "fables":70, "seagulls":70, "announcers":70, "bigot":70, "revue":70, "minimalism":70, "scat":70, "high-yield":70, "combatant":70, "manova":70, "joists":70, "impressionable":70, "six-hour":70, "lapsed":70, "unobstructed":70, "rinsing":70, "dissension":70, "obstructed":70, "myopic":70, "cuddly":70, "fantasizing":70, "homicidal":70, "cutout":70, "overrule":70, "rashes":70, "gallows":70, "fart":70, "slumps":70, "catapult":70, "polemical":70, "egalitarianism":70, "workman":70, "ibuprofen":70, "receptacle":70, "frostbite":70, "miniatures":70, "stratum":70, "porcupine":70, "equinox":70, "colonoscopy":70, "golem":70, "immortalized":70, "restive":70, "eye-popping":70, "chugging":70, "disintegrated":70, "conspired":70, "loathed":70, "inhabits":70, "transcended":70, "covet":70, "self-reliant":70, "wriggled":70, "bleeds":70, "redistribute":70, "grasps":70, "boulevards":70, "deplete":70, "synopsis":70, "rank-and-file":70, "pout":70, "notables":70, "courtyards":70, "isolationist":70, "beacons":70, "fact-finding":70, "newsman":70, "leniency":70, "inclusiveness":70, "orator":70, "barbarism":70, "geophysical":70, "sportscaster":70, "heist":70, "codified":70, "marxists":70, "amp":70, "urns":70, "microscopes":70, "playroom":70, "porno":70, "worksheets":70, "icebergs":70, "guillotine":70, "flax":70, "quinoa":70, "biofeedback":70, "midfielder":70, "lactose":70, "world-renowned":70, "faring":70, "withered":70, "lauded":70, "self-effacing":70, "ostentatious":70, "bailed":70, "moderated":70, "hooting":70, "plows":70, "streetlight":70, "handkerchiefs":70, "dryers":70, "booksellers":70, "duster":70, "blindfold":70, "darwinism":70, "signifier":70, "internationalism":70, "crepes":70, "crappie":70, "recursive":70, "ever-growing":70, "marvelously":70, "reverberated":70, "torrential":70, "fortify":70, "self-indulgent":70, "seared":70, "rutted":70, "digested":70, "unearthly":70, "rammed":70, "frightful":70, "dangles":70, "defected":70, "limousines":70, "sooty":70, "discordant":70, "one-week":70, "rocket-propelled":70, "painterly":70, "scripted":70, "inch-thick":70, "symphonic":70, "caramelized":70, "roughness":70, "continuance":70, "audiotapes":70, "asymmetric":70, "riverbed":70, "hams":70, "front-end":70, "illustrators":70, "radish":70, "processions":70, "possum":70, "oar":70, "plasticity":70, "microns":70, "unionists":70, "waned":70, "panache":70, "panoply":70, "overpower":70, "rebelled":70, "doting":70, "record-setting":70, "calms":70, "finery":70, "toughen":70, "deferring":70, "heaviness":70, "thrifty":70, "brainy":70, "vulgarity":70, "sledgehammer":70, "moralistic":70, "unclean":70, "wearable":70, "fiftieth":70, "preschooler":70, "high-income":70, "grunge":70, "griddle":70, "grafting":70, "particularity":70, "futon":70, "mimicry":70, "sweeteners":70, "spanking":70, "interviewee":70, "postoperatively":70, "seatpost":70, "tibia":70, "metacognitive":70, "misstep":70, "veering":70, "gangly":70, "unsophisticated":70, "razor-sharp":70, "revolutionized":70, "journeyed":70, "maladies":70, "mirth":70, "all-powerful":70, "northernmost":70, "corroborated":70, "promo":70, "stealthy":70, "detonate":70, "vacuuming":70, "tapered":70, "dispensation":70, "hourglass":70, "hawkish":70, "pilgrimages":70, "stuffs":70, "high-cost":70, "milliseconds":70, "spout":70, "off-site":70, "rattlesnakes":70, "regimental":70, "muskets":70, "cognitions":70, "ultrasonic":70, "breast-cancer":70, "interreligious":70, "same-gender":70, "wince":70, "shuttling":70, "four-month":70, "dramatize":70, "incurring":70, "posthumously":70, "discolored":70, "belted":70, "terrorizing":70, "snacking":70, "cobblestones":70, "counterweight":70, "littlest":70, "hookup":70, "contrition":70, "biographers":70, "infantile":70, "short-range":70, "silos":70, "stylists":70, "tellers":70, "drapery":70, "slayer":70, "coffeehouse":70, "wildcat":70, "ombudsman":70, "litigants":70, "leopards":70, "trapper":70, "localization":70, "single-payer":70, "wesleyan":70, "travellers":70, "phytoplankton":70, "reliquary":70, "mesmerizing":70, "ill-advised":70, "indescribable":70, "occasioned":70, "misused":70, "smorgasbord":70, "discerned":70, "retrace":70, "splurge":70, "upper-middle-class":70, "undervalued":70, "uncut":70, "flirty":70, "randy":70, "substantively":70, "thawing":70, "bagging":70, "isolationism":70, "jocks":70, "veneration":70, "cellist":70, "bequest":70, "impressionists":70, "polarity":70, "granules":70, "paranormal":70, "blowers":70, "jihadist":70, "siting":70, "panty":70, "student-centered":70, "interrater":70, "phonetic":70, "sunspots":70, "nanotubes":70, "relishes":70, "rumblings":70, "beckon":70, "skeptically":70, "theorized":70, "sixty-two":70, "swiped":70, "differentiates":70, "saluting":70, "well-balanced":70, "opined":70, "wrecking":70, "repealing":70, "age-appropriate":70, "booties":70, "ironclad":70, "mass-market":70, "self-interested":70, "sourdough":70, "flavoring":70, "digitized":70, "mints":70, "postman":70, "pedaled":70, "abate":70, "gatekeepers":70, "locomotives":70, "proletariat":70, "desecration":70, "alloys":70, "pavilions":70, "billings":70, "modernists":70, "leafs":70, "hazelnuts":70, "cortical":70, "systolic":70, "colorectal":70, "redshift":70, "indignity":70, "flawlessly":70, "roller-coaster":70, "lug":70, "neglects":70, "brownish":70, "misfortunes":70, "aimless":70, "sweeten":70, "sadder":70, "brotherly":70, "granddaddy":70, "wimpy":70, "showman":70, "signings":70, "undertakings":70, "sit-down":70, "signage":70, "admissible":70, "drug-free":70, "aussie":70, "plumage":70, "desktops":70, "phonograph":70, "patterning":70, "aboveground":70, "vicar":70, "slurry":70, "line-item":70, "logger":70, "zionists":70, "gluten":70, "complementarity":70, "perforation":70, "languish":70, "infuriated":70, "drawn-out":70, "dispatching":70, "folksy":70, "veers":70, "well-stocked":70, "dismissively":70, "depositing":70, "foibles":70, "breakneck":70, "nibbled":70, "cleansed":70, "unmanageable":70, "imitated":70, "anniversaries":70, "senile":70, "schoolteachers":70, "undershirt":70, "longings":70, "bikinis":70, "consciences":70, "rejuvenation":70, "preservatives":70, "x-rated":70, "ersatz":70, "sulfate":70, "carrion":70, "gangsta":70, "loader":70, "camcorders":70, "low-frequency":70, "elegy":70, "posttraumatic":70, "buckeyes":70, "mixed-race":70, "low-carb":70, "vestige":70, "tedium":70, "irrelevance":70, "retract":70, "obliquely":70, "taunts":70, "clasping":70, "chins":70, "saucy":70, "hitching":70, "troublemaker":70, "repudiate":70, "indecisive":70, "holiest":70, "sheeting":70, "lamplight":70, "pundit":70, "bib":70, "resourcefulness":70, "telecast":70, "cubed":70, "cabinetry":70, "anti-immigrant":70, "zoological":70, "ochre":70, "subatomic":70, "priestess":70, "transactional":70, "decisionmakers":70, "s/he":70, "main-dish":70, "piqued":70, "peruse":70, "delightfully":70, "confuses":70, "serenely":70, "unbeatable":70, "cogent":70, "troublemakers":70, "precluded":70, "unguarded":70, "grizzled":70, "downcast":70, "sniping":70, "scuttled":70, "straightaway":70, "intoxicated":70, "blobs":70, "laid-off":70, "passe":70, "obsolescence":70, "crosshairs":70, "fertilized":70, "randomness":70, "nobleman":70, "oppositions":70, "nukes":70, "admirals":70, "breeches":70, "shorelines":70, "mobsters":70, "mojo":70, "computations":70, "radiologist":70, "brokerages":70, "covenants":70, "anchovy":70, "spectrometer":70, "genomic":70, "houseboat":70, "lynx":70, "pre-test":70, "skyrocketed":70, "fittingly":70, "longingly":70, "now-defunct":70, "elevates":70, "enamored":70, "gulping":70, "reshaped":70, "flabby":70, "splattered":70, "soaks":70, "cramming":70, "lethargy":70, "cynics":70, "sixty-three":70, "fathered":70, "retard":70, "wetting":70, "raved":70, "crests":70, "disloyal":70, "holdout":70, "gummy":70, "resignations":70, "make-believe":70, "truncated":70, "ex-boyfriend":70, "attentiveness":70, "riffs":70, "unopposed":70, "renunciation":70, "sundae":70, "homily":70, "pillowcase":70, "multinationals":70, "ethicists":70, "proletarian":70, "landless":70, "kinesthetic":70, "well-respected":70, "half-million":70, "avidly":70, "tatters":70, "unofficially":70, "disregarded":70, "peddle":70, "christened":70, "foolhardy":70, "erratically":70, "harshness":70, "singly":70, "scoot":70, "taint":70, "hubby":70, "droning":70, "refreshment":70, "constructively":70, "teeny":70, "late-season":70, "enforcer":70, "weatherman":70, "fluctuation":70, "fascists":70, "lunchroom":70, "unitarian":70, "self-sacrifice":70, "repositories":70, "transplanting":70, "symbiosis":70, "liftoff":70, "ergonomic":70, "gulag":70, "cliques":70, "janitors":70, "bolshevik":70, "ascendant":70, "seamen":70, "poncho":70, "numeric":70, "underachieving":70, "cartoonists":70, "supercomputer":70, "durations":70, "triglycerides":70, "acetaminophen":70, "baboons":70, "recyclables":70, "mongol":70, "forefoot":70, "prided":70, "mystified":70, "awestruck":70, "ply":70, "oozed":70, "morose":70, "latched":70, "prescribes":70, "appraising":70, "appreciably":70, "connoisseurs":70, "conduits":70, "oooh":70, "barbecued":70, "off-campus":70, "signatories":70, "trumpeter":70, "carcinogenic":70, "pacts":70, "stagecoach":70, "megabytes":70, "daft":70, "grandstand":70, "winch":70, "causeway":70, "augmentation":70, "antiabortion":70, "friars":70, "amphibian":70, "reveling":70, "solidified":70, "ruinous":70, "acrimonious":70, "furthest":70, "rediscovered":70, "re-creating":70, "whimper":70, "brokered":70, "distanced":70, "exacerbating":70, "agreed-upon":70, "constraining":70, "fabricate":70, "fourteen-year-old":70, "mid-1950s":70, "half-inch":70, "one-two":70, "operationally":70, "transferable":70, "choruses":70, "firecrackers":70, "bayonets":70, "sledding":70, "interventionist":70, "parent-teacher":70, "erasure":70, "kidnapper":70, "nudes":70, "reentry":70, "crud":70, "rectory":70, "accrediting":70, "ethnographer":70, "uninitiated":70, "predilection":70, "allude":70, "glittery":70, "benefactors":70, "sundry":70, "star-studded":70, "stowed":70, "clasp":70, "clamping":70, "unsympathetic":70, "contaminating":70, "welded":70, "blue-gray":70, "spigot":70, "epithet":70, "matchups":70, "wetter":70, "winless":70, "hairstyles":70, "moderating":70, "headsets":70, "riser":70, "neurotransmitters":70, "cupcake":70, "hydropower":70, "frieze":70, "motorsports":70, "racquet":70, "salamanders":70, "serving-protein":70, "bycatch":70, "circuitous":70, "ineptitude":70, "roiling":70, "fabulously":70, "eradicating":70, "necessitated":70, "reeked":70, "bawling":70, "waistline":70, "pandemonium":70, "holler":70, "quantitatively":70, "unsatisfied":70, "synthesizing":70, "detonated":70, "four-letter":70, "helluva":70, "unpatriotic":70, "indexed":70, "premised":70, "hangings":70, "soloists":70, "interstates":70, "chaser":70, "remarry":70, "conjugal":70, "squadrons":70, "endive":70, "conductive":70, "beagle":70, "cleaver":70, "infomercial":70, "partial-birth":70, "potty":70, "damping":70, "tsunamis":70, "impeachable":70, "co-ops":70, "ballets":70, "femoral":70, "christology":70, "overcomes":70, "lighthearted":70, "cynically":70, "taunted":70, "uncovers":70, "toyed":70, "perennially":70, "reassigned":70, "unimpeded":70, "uncaring":70, "profiting":70, "ambiance":70, "cleverness":70, "tolerating":70, "fattening":70, "whimpered":70, "ringer":70, "troughs":70, "barnyard":70, "englishmen":70, "depravity":70, "machine-gun":70, "medallions":70, "hemispheres":70, "discontinuity":70, "academe":70, "viennese":70, "header":70, "parsnips":70, "exorcism":70, "anti-apartheid":70, "in-class":70, "olde":70, "thrusters":70, "palazzo":70, "antifreeze":70, "peptides":70, "ebullient":70, "redolent":70, "paraded":70, "piecing":70, "salvo":70, "spiraled":70, "lumbered":70, "freckled":70, "lessening":70, "malady":70, "knobby":70, "openers":70, "minions":70, "hinged":70, "biweekly":70, "rereading":70, "transcontinental":70, "fastening":70, "changer":70, "seventh-grade":70, "slander":70, "generality":70, "eddies":70, "ripening":70, "bicyclists":70, "alder":70, "fissure":70, "consort":70, "landslides":70, "public-sector":70, "lecturers":70, "sylvan":70, "concealer":70, "greenbelt":70, "conscripts":70, "well-received":70, "pickings":70, "overwhelms":70, "erodes":70, "idiosyncrasies":70, "perversely":70, "plaguing":70, "solicitous":70, "quizzical":70, "well-equipped":70, "mumble":70, "standouts":70, "trashy":70, "perpetuity":70, "third-floor":70, "plausibly":70, "unexamined":70, "dived":70, "setups":70, "trouser":70, "conqueror":70, "razors":70, "incompatibility":70, "irritably":70, "legalized":70, "colossus":70, "tenements":70, "half-brother":70, "basting":70, "affidavits":70, "disappearances":70, "politicos":70, "first-team":70, "non-proliferation":70, "colours":70, "crayfish":70, "biometric":70, "trophic":70, "snowmaking":70, "joyfully":71, "fine-tune":71, "scarier":71, "ostensible":71, "vomited":71, "undisciplined":71, "wallowing":71, "sculpt":71, "indignantly":71, "timidly":71, "indefensible":71, "flat-screen":71, "nirvana":71, "disengage":71, "fifteen-year-old":71, "lather":71, "certifying":71, "tiered":71, "paroled":71, "omniscient":71, "eucalyptus":71, "interrelationships":71, "pardoned":71, "non-christian":71, "portico":71, "leeches":71, "performance-based":71, "marmalade":71, "appraiser":71, "figurine":71, "desertification":71, "alleles":71, "reevaluate":71, "congratulating":71, "delineated":71, "revere":71, "urbane":71, "clean-cut":71, "adapts":71, "denigrate":71, "disinterest":71, "restructured":71, "trickery":71, "pecking":71, "synonym":71, "flees":71, "critter":71, "dribbled":71, "mercenary":71, "pooch":71, "yuck":71, "haystack":71, "c/o":71, "sponsorships":71, "third-world":71, "wrongfully":71, "providence":71, "spoiler":71, "talisman":71, "flat-leaf":71, "waders":71, "ballparks":71, "techno":71, "secretions":71, "interpretative":71, "radiological":71, "sweatshop":71, "bobcats":71, "exceptionalism":71, "redeemer":71, "alcohol-related":71, "mademoiselle":71, "herbivores":71, "tuba":71, "ontology":71, "proportionality":71, "decades-old":71, "decry":71, "dotting":71, "wane":71, "passable":71, "muscled":71, "trite":71, "highest-ranking":71, "unbuttoned":71, "forsaken":71, "hard-hitting":71, "ascertained":71, "toothy":71, "unsupported":71, "ushers":71, "outlawing":71, "crumbles":71, "proportionally":71, "snot":71, "forgetfulness":71, "pre-emptive":71, "nerds":71, "unsound":71, "baby-sitting":71, "monstrosity":71, "emissary":71, "favour":71, "sufferer":71, "tines":71, "pantyhose":71, "frontrunner":71, "transformer":71, "pickets":71, "shipyards":71, "polynesian":71, "battleships":71, "cert":71, "frighteningly":71, "tortuous":71, "vivacious":71, "irrefutable":71, "handshakes":71, "manifold":71, "deciphering":71, "unselfish":71, "whitewashed":71, "dejected":71, "uppermost":71, "pinkish":71, "underlined":71, "gibberish":71, "lunacy":71, "secretarial":71, "minuses":71, "reminiscences":71, "caper":71, "enslavement":71, "sculpting":71, "fittest":71, "bookkeeper":71, "unaccompanied":71, "napoleonic":71, "muffler":71, "stabs":71, "petri":71, "multi":71, "peonies":71, "tripartite":71, "emotive":71, "emulation":71, "in-flight":71, "lavatory":71, "trampoline":71, "phallic":71, "stinger":71, "pacemaker":71, "eggplants":71, "liberian":71, "toxics":71, "analogical":71, "yellowfin":71, "nonattainment":71, "soured":71, "better-known":71, "jot":71, "solemnity":71, "downing":71, "surpasses":71, "delving":71, "recites":71, "engulf":71, "brawny":71, "subsides":71, "internalized":71, "long-haired":71, "damper":71, "heartbeats":71, "thrall":71, "revelatory":71, "aberrant":71, "ingested":71, "burritos":71, "salutes":71, "vats":71, "duets":71, "downgraded":71, "crustaceans":71, "toothpicks":71, "manger":71, "numerals":71, "one-eyed":71, "mannequins":71, "switchboard":71, "carcinogen":71, "germinate":71, "differentials":71, "scribes":71, "lockdown":71, "crowbar":71, "job-related":71, "char":71, "parkway":71, "tried-and-true":71, "skyrocket":71, "well-connected":71, "buffeted":71, "behemoths":71, "spew":71, "teases":71, "inflame":71, "improbably":71, "revitalizing":71, "tawdry":71, "demonstrably":71, "enforces":71, "noncommittal":71, "insubstantial":71, "curbs":71, "weirdest":71, "three-piece":71, "name-calling":71, "stragglers":71, "revoke":71, "frauds":71, "ruffles":71, "dislikes":71, "replicates":71, "depots":71, "caving":71, "lightbulb":71, "firs":71, "consenting":71, "encode":71, "tiredness":71, "defensiveness":71, "trowel":71, "goddammit":71, "dosing":71, "leaching":71, "sleds":71, "anticipatory":71, "etchings":71, "funerary":71, "trapeze":71, "waterborne":71, "decompression":71, "erectile":71, "amulet":71, "quintessentially":71, "shouldering":71, "scorned":71, "fitful":71, "co-opted":71, "stodgy":71, "merges":71, "paragon":71, "rewrote":71, "numbing":71, "grayish":71, "swerve":71, "effecting":71, "truckload":71, "occupiers":71, "affinities":71, "epitaph":71, "slippage":71, "pranks":71, "non-partisan":71, "terminus":71, "cancellations":71, "railways":71, "painkiller":71, "swastika":71, "four-door":71, "rioters":71, "wheelbase":71, "giraffes":71, "swish":71, "impressionism":71, "leper":71, "partitioning":71, "semiotic":71, "atherosclerosis":71, "ethnographers":71, "clitoris":71, "tortoises":71, "atrial":71, "tutsi":71, "purveyor":71, "second-guess":71, "catch-up":71, "reprisal":71, "high-minded":71, "whoosh":71, "emanates":71, "proliferating":71, "sweethearts":71, "labyrinthine":71, "calmness":71, "grossed":71, "ritualistic":71, "fouled":71, "tombstones":71, "lurches":71, "microchip":71, "scorpions":71, "fatalism":71, "reasonableness":71, "surrealism":71, "singer-songwriter":71, "theocracy":71, "sociability":71, "squatter":71, "locomotion":71, "dinghy":71, "fixed-rate":71, "pancetta":71, "foresters":71, "exercisers":71, "iconographic":71, "collider":71, "pandas":71, "whizzing":71, "inane":71, "mercurial":71, "prohibitively":71, "outlived":71, "iffy":71, "hands-off":71, "preying":71, "nudges":71, "exigencies":71, "antagonist":71, "infusions":71, "stepdaughter":71, "repairman":71, "stings":71, "cost-effectiveness":71, "abolitionist":71, "caravans":71, "mutton":71, "outfitter":71, "tolerances":71, "semisweet":71, "secretion":71, "interrogator":71, "hatching":71, "yew":71, "testicular":71, "mitochondria":71, "eritrean":71, "reverberate":71, "tripling":71, "nab":71, "epitomized":71, "furtively":71, "closed-door":71, "scornful":71, "heroics":71, "zeitgeist":71, "submits":71, "fatherly":71, "tug-of-war":71, "springy":71, "court-ordered":71, "understaffed":71, "slithered":71, "cameramen":71, "mid-air":71, "checkerboard":71, "tryout":71, "oldies":71, "onshore":71, "bobby":71, "high-rises":71, "copycat":71, "paging":71, "pre-war":71, "countermeasures":71, "underwriters":71, "collegiality":71, "columbian":71, "cuticle":71, "conduction":71, "declarative":71, "agitators":71, "earths":71, "abdominals":71, "cap-and-trade":71, "niacin":71, "laurels":71, "relishing":71, "vociferous":71, "rock-solid":71, "bluster":71, "pre-eminent":71, "omitting":71, "secures":71, "clanking":71, "couched":71, "overthrew":71, "untamed":71, "duplicity":71, "high-heeled":71, "huffed":71, "spellbound":71, "remoteness":71, "crazily":71, "undersized":71, "zany":71, "prostrate":71, "tots":71, "first-floor":71, "sanctum":71, "embezzlement":71, "restaurateurs":71, "topographical":71, "computer-assisted":71, "widths":71, "testimonial":71, "hairspray":71, "psychopath":71, "debriefing":71, "watermelons":71, "manhole":71, "polities":71, "state-level":71, "scallop":71, "coconuts":71, "secularization":71, "germination":71, "salamander":71, "angolan":71, "navajos":71, "scoff":71, "unapologetic":71, "stranglehold":71, "downplayed":71, "mortally":71, "five-hour":71, "booted":71, "disbanded":71, "plop":71, "wild-eyed":71, "feigning":71, "ingesting":71, "aggravation":71, "irregularly":71, "high-paying":71, "immensity":71, "footwork":71, "vacate":71, "paperbacks":71, "turrets":71, "headgear":71, "booby":71, "eject":71, "atlantans":71, "reinstatement":71, "markup":71, "birthing":71, "nihilism":71, "weightlifting":71, "back-to-school":71, "armoire":71, "deceptions":71, "free-throw":71, "workroom":71, "stanzas":71, "chasers":71, "declination":71, "re-examine":71, "bypassed":71, "eponymous":71, "purged":71, "fated":71, "propels":71, "sweatshirts":71, "suffocate":71, "renditions":71, "unconsciousness":71, "menagerie":71, "american-style":71, "oblong":71, "peeping":71, "confiscate":71, "ubiquity":71, "deterring":71, "retort":71, "freaky":71, "resigns":71, "celluloid":71, "embed":71, "rubies":71, "southbound":71, "indebtedness":71, "postmortem":71, "impartiality":71, "samaritan":71, "cremated":71, "invoices":71, "bleaching":71, "executor":71, "churchyard":71, "double-blind":71, "anti-smoking":71, "cloned":71, "goalkeeper":71, "larva":71, "nigerians":71, "fibrillation":71, "fossa":71, "second-person":71, "ably":71, "snuff":71, "enlightening":71, "rejuvenate":71, "overflowed":71, "entrust":71, "dissecting":71, "elaborating":71, "redesigning":71, "hungrily":71, "opulence":71, "uninteresting":71, "wrestles":71, "windblown":71, "season-ending":71, "connotes":71, "demonize":71, "go-go":71, "strongman":71, "hotshot":71, "oft":71, "unreasonably":71, "institutionalize":71, "rescues":71, "constancy":71, "poached":71, "contoured":71, "descents":71, "rackets":71, "enumerated":71, "albatross":71, "foci":71, "hillbilly":71, "saloons":71, "packer":71, "audited":71, "surrealist":71, "conceptualizations":71, "trombone":71, "dictation":71, "three-pointers":71, "austrians":71, "aquariums":71, "tight-lipped":71, "uptick":71, "meld":71, "nip":71, "free-for-all":71, "professed":71, "unbidden":71, "squishy":71, "rerun":71, "lolling":71, "snickered":71, "perfumed":71, "impresario":71, "sixty-eight":71, "conceptualizing":71, "unbreakable":71, "divider":71, "strapless":71, "cardiology":71, "curveball":71, "chalice":71, "theologies":71, "wormhole":71, "laboriously":71, "entertains":71, "splendidly":71, "unearth":71, "incarnations":71, "can-do":71, "oddest":71, "goodbyes":71, "slow-motion":71, "family-oriented":71, "overlaid":71, "see-through":71, "billowed":71, "evacuating":71, "lacing":71, "arching":71, "flunked":71, "aggressors":71, "unattached":71, "stimulant":71, "urinate":71, "subjectively":71, "zoology":71, "wholesaler":71, "sirloin":71, "frenchmen":71, "growths":71, "lemony":71, "paddies":71, "photocopy":71, "consular":71, "smartphone":71, "synchronization":71, "all-state":71, "thermonuclear":71, "encephalitis":71, "angioplasty":71, "policyholders":71, "taser":71, "condensate":71, "longline":71, "quips":71, "incalculable":71, "assiduously":71, "singling":71, "upped":71, "devastate":71, "suffused":71, "disorganized":71, "littering":71, "cooing":71, "domineering":71, "fusing":71, "feebly":71, "dully":71, "carves":71, "retrieves":71, "recluse":71, "doggie":71, "narrating":71, "taffeta":71, "hiccups":71, "earpiece":71, "stopwatch":71, "jurists":71, "collard":71, "sauerkraut":71, "effigy":71, "rime":71, "weathering":71, "neo-nazi":71, "loam":71, "palmetto":71, "mamas":71, "archetypes":71, "fawn":71, "podcasts":71, "highlanders":71, "platelet":71, "transpersonal":71, "strictest":71, "morphed":71, "nine-year":71, "averting":71, "wickedly":71, "well-made":71, "contrite":71, "bloodthirsty":71, "animate":71, "bookish":71, "darlings":71, "semicircle":71, "up-front":71, "technicality":71, "loitering":71, "gambled":71, "thirteen-year-old":71, "capitulation":71, "uninhibited":71, "stiffening":71, "diminution":71, "notations":71, "low-end":71, "reprise":71, "booklets":71, "privates":71, "downfield":71, "admonitions":71, "cribs":71, "alignments":71, "burglaries":71, "detente":71, "undated":71, "jetty":71, "airbags":71, "smoke-free":71, "ewe":71, "lifeboats":71, "compiler":71, "languished":71, "foresees":71, "shelved":71, "funneling":71, "untangle":71, "reconsidering":71, "massaged":71, "reverently":71, "brassy":71, "new-found":71, "clothe":71, "replying":71, "ruptured":71, "queried":71, "unsold":71, "college-educated":71, "simulates":71, "divisiveness":71, "ex-girlfriend":71, "irritant":71, "consented":71, "ineffable":71, "spoof":71, "supposing":71, "pulleys":71, "xenophobia":71, "picker":71, "distillation":71, "prejudicial":71, "pragmatist":71, "muslin":71, "spaceships":71, "animus":71, "anchorman":71, "organist":71, "pus":71, "hornet":71, "obsessive-compulsive":71, "sawmill":71, "biracial":71, "fixed-income":71, "dossier":71, "pharmacology":71, "factorial":71, "tetanus":71, "gaelic":71, "set-top":71, "yam":71, "modal":71, "rubrics":71, "boozy":71, "biomechanical":71, "fructose":71, "tamils":71, "long-established":71, "muggy":71, "curtailing":71, "briefest":71, "felled":71, "superseded":71, "robs":71, "frisky":71, "teary":71, "blurs":71, "compulsively":71, "bottom-line":71, "straddled":71, "flecked":71, "embellish":71, "yellowing":71, "confidante":71, "well-written":71, "toiletries":71, "off-the-shelf":71, "conquerors":71, "heavyset":71, "appraise":71, "bottlenecks":71, "appendage":71, "rechargeable":71, "placard":71, "co-operation":71, "regenerative":71, "aromatherapy":71, "reduced-sodium":71, "internationalization":71, "pug":71, "mongolian":71, "beadwork":71, "photosynthetic":71, "pulsars":71, "cloture":71, "preterm":71, "daylong":71, "tailor-made":71, "month-long":71, "heightens":71, "goings-on":71, "emulating":71, "charted":71, "quixotic":71, "fumed":71, "sloped":71, "triumphed":71, "dappled":71, "waterlogged":71, "stupendous":71, "schoolmates":71, "combustible":71, "earthbound":71, "salacious":71, "svelte":71, "ashtrays":71, "exhortation":71, "thoroughbred":71, "double-breasted":71, "superheroes":71, "astrology":71, "itineraries":71, "mobster":71, "rowboat":71, "registrations":71, "active-duty":71, "annualized":71, "walkie-talkie":71, "literatures":71, "sketchbook":71, "intramural":71, "centrifuge":71, "antler":71, "conductivity":71, "acrylics":71, "apparitions":71, "decolonization":71, "subcutaneous":71, "cubism":71, "swahili":71, "back-and-forth":71, "fun-loving":71, "trumpeting":71, "purport":71, "edits":71, "avowed":71, "arcing":71, "flitting":71, "exude":71, "vicariously":71, "amicable":71, "ribbed":71, "chokes":71, "throwaway":71, "diffused":71, "scampered":71, "patching":71, "fluently":71, "potions":71, "timetables":71, "boos":71, "dreadlocks":71, "desertion":71, "supine":71, "masts":71, "petrol":71, "pianists":71, "pert":71, "anti-western":71, "rainforests":71, "corned":71, "fecundity":71, "liens":71, "cassava":71, "hijab":71, "boney":71, "rimmed":71, "foregone":71, "professes":71, "afflicts":71, "outweighed":71, "cleanest":71, "get-together":71, "surmised":71, "plunked":71, "outlay":71, "interchangeably":71, "magnificence":71, "resonating":71, "panning":71, "ornamentation":71, "free-standing":71, "sneeze":71, "machismo":71, "romantics":71, "pretzel":71, "remover":71, "valedictorian":71, "microfilm":71, "four-point":71, "sulfuric":71, "spinners":71, "multi-ethnic":71, "abductions":71, "sinker":71, "mistrial":71, "earthworms":71, "cuban-american":71, "postmaster":71, "half-life":71, "swank":71, "doth":71, "dieters":71, "rafter":71, "cosmologists":71, "boll":71, "derided":71, "outdone":71, "cloying":71, "surefire":71, "brusque":71, "caved":71, "overhauling":71, "impeding":71, "encircle":71, "eavesdrop":71, "equalize":71, "quantifiable":71, "staircases":71, "amoral":71, "shtick":71, "journeyman":71, "self-preservation":71, "epilogue":71, "ceded":71, "sanctioning":71, "dosages":71, "custodians":71, "gullies":71, "impoverishment":71, "duh":71, "superstructure":71, "archivist":71, "reflectors":71, "beeswax":71, "shipbuilding":71, "wolverines":71, "tics":71, "chlorophyll":71, "protectorate":71, "trawler":71, "sledge":71, "feedstock":71, "coloured":71, "simile":71, "quran":71, "single-sex":71, "abbot":71, "platitudes":71, "heartened":71, "thwarting":71, "impeded":71, "culminate":71, "hemmed":71, "spooked":71, "truism":71, "chronologically":71, "pithy":71, "underestimating":71, "infatuated":71, "one-woman":71, "overreacting":71, "piloted":71, "crowed":71, "roundabout":71, "obstinate":71, "infusing":71, "weeps":71, "fortnight":71, "cramping":71, "starchy":71, "unrealized":71, "suburbanites":71, "endorphins":71, "casseroles":71, "grates":71, "oaths":71, "bummer":71, "spiny":71, "detergents":71, "saleswoman":71, "cabbie":71, "amphetamines":71, "benedictine":71, "headlamp":71, "subsets":71, "incisions":71, "marinas":71, "astrophysical":71, "biopsies":71, "syndicates":71, "armistice":71, "chieftain":71, "castration":71, "ammonium":71, "discipleship":71, "tentacle":71, "emu":71, "speech-language":71, "indisputably":71, "forgettable":71, "engenders":71, "reverent":71, "interrogating":71, "breadwinner":71, "vagueness":71, "gossamer":71, "banality":71, "unfiltered":71, "break-up":71, "postponement":71, "decompose":71, "winces":71, "quintet":71, "pothole":71, "granddaughters":71, "non-fiction":71, "derivation":71, "knits":71, "flippers":71, "prospectors":71, "wiretaps":71, "demographers":71, "presbyterians":71, "endogenous":71, "gamers":71, "chipper":71, "filial":71, "libyans":71, "aerosols":71, "evangelization":71, "stent":71, "mennonites":71, "focuser":71, "nonchalance":71, "bare-bones":71, "sweated":71, "helpfully":71, "outsized":71, "hourlong":71, "well-behaved":71, "incisive":71, "scrapping":71, "unscientific":71, "rummage":71, "self-destruction":71, "whacking":71, "diametrically":71, "freshen":71, "top-selling":71, "protectively":71, "messes":71, "toasty":71, "upwardly":71, "cutlery":71, "larceny":71, "shoo":71, "wickedness":71, "second-half":71, "bluffing":71, "expressionist":71, "husk":71, "rescuer":71, "punts":71, "sentries":71, "subtraction":71, "robustness":71, "chalet":71, "marinara":71, "detox":71, "winemaker":71, "fleck":71, "mussel":71, "colombians":71, "telemarketing":71, "defibrillator":71, "subsection":71, "hyena":71, "coronal":71, "arab-american":71, "downplaying":71, "ratchet":71, "tenfold":71, "wall-to-wall":71, "opts":71, "elaborates":71, "one-size-fits-all":71, "rolled-up":71, "wilted":71, "hindering":71, "outcasts":71, "bedridden":71, "uglier":71, "dribble":71, "hijack":71, "unaccountable":71, "evict":71, "campfires":71, "lightening":71, "undetectable":71, "storehouse":71, "permeable":71, "cloaks":71, "jetliner":71, "typewriters":71, "blazes":71, "abrasion":71, "arable":71, "baldness":71, "mother-daughter":71, "decaf":71, "irreducible":71, "coleslaw":71, "oceanography":71, "intermarriage":71, "mullahs":71, "subcultures":71, "humvees":71, "cloister":71, "thoracic":71, "granddad":71, "millers":71, "actuator":71, "aplomb":71, "gamely":71, "smugly":71, "seductively":71, "paralyzing":71, "quickened":71, "profited":71, "leafing":71, "unzipped":71, "changeable":71, "deceitful":71, "acrobatic":71, "factually":71, "industrialist":71, "iconoclastic":71, "boycotting":71, "tamper":71, "hummus":71, "detachable":71, "firstborn":71, "discoloration":71, "reimbursements":71, "starlet":71, "finishers":71, "obsidian":71, "extinguisher":71, "leaded":71, "pixie":71, "colonels":71, "petunias":71, "waistcoat":71, "surveyors":71, "minnow":71, "catalan":71, "pronghorn":71, "voles":71, "bots":71, "firebird":71, "garnering":71, "broken-down":71, "beeline":71, "relinquishing":71, "hunker":71, "awe-inspiring":71, "dispersing":71, "wizardry":71, "childhoods":71, "sideburns":71, "sickened":71, "airless":71, "remarking":71, "tacks":71, "spearhead":71, "four-legged":71, "joblessness":71, "ringleader":71, "spaniel":71, "plainclothes":71, "reused":71, "kiddo":71, "quicksand":71, "time-out":71, "us-led":71, "candied":71, "upper-body":71, "concurrence":71, "projectiles":71, "deformities":71, "avalanches":71, "honour":71, "vocations":71, "bullhorn":71, "sprite":71, "pontiff":71, "insufficiency":71, "upwind":71, "standards-based":71, "bios":71, "telemarketers":71, "sharia":71, "vertebral":71, "windrow":71, "benthic":71, "embarrassingly":71, "stoked":71, "brazenly":71, "stoke":71, "tomes":71, "baring":71, "purer":71, "infested":71, "argumentative":71, "womanly":71, "yearnings":71, "concretely":71, "reciprocate":71, "imperfection":71, "stubs":71, "webbed":71, "crucified":71, "fireside":71, "wads":71, "rebellions":71, "cornering":71, "coo":71, "haters":71, "male-female":71, "makeovers":71, "chime":71, "diggers":71, "mitzvah":71, "deterministic":71, "ballistics":71, "space-based":71, "gourds":71, "frigate":71, "ridership":71, "attorney-client":71, "sim":71, "goldenrod":71, "colitis":71, "coho":71, "bulgur":71, "rulemaking":71, "reminisce":71, "outdo":71, "well-deserved":71, "judiciously":71, "tarnish":71, "impassable":71, "zeroed":71, "squabbles":71, "rearranged":71, "incredulity":71, "stipulated":71, "recuperating":71, "pricier":71, "imitators":71, "twenty-year-old":71, "blood-red":71, "donates":71, "rejections":71, "inarticulate":71, "rasp":71, "analogue":71, "sternum":71, "contemporaneous":71, "high-value":71, "villager":71, "flatness":71, "accompaniments":71, "bookshop":71, "lager":71, "intergalactic":71, "micrograms":71, "microbe":71, "dissociation":71, "primary-care":71, "primers":71, "tadpoles":71, "winemakers":71, "mangroves":71, "kingship":71, "terns":71, "ditched":71, "slogging":71, "rediscovering":71, "obsess":71, "humorless":71, "lapped":71, "presentable":71, "flagged":71, "incapacitated":71, "squabbling":71, "tallied":71, "cuddle":71, "gagging":71, "homespun":71, "treeless":71, "refilled":71, "landlocked":71, "fearfully":71, "monolith":71, "skids":71, "receptivity":71, "brackish":71, "midcentury":71, "shampoos":71, "r-rated":71, "immunizations":71, "unclaimed":71, "small-group":71, "self-rule":71, "swatches":71, "decorators":71, "cinemas":71, "workbook":71, "anovas":71, "mezzanine":71, "enrollees":71, "subcategories":71, "barbell":71, "nepalese":71, "tamoxifen":71, "focalization":71, "toiled":72, "strutted":72, "paralleled":72, "craning":72, "outsize":72, "left-leaning":72, "paled":72, "digesting":72, "undiagnosed":72, "outermost":72, "factoring":72, "printouts":72, "molester":72, "emulsion":72, "zeros":72, "chivalry":72, "three-judge":72, "labelled":72, "seedling":72, "oy":72, "rhinos":72, "aeration":72, "gnocchi":72, "subtypes":72, "phenotypic":72, "giveaways":72, "bronzed":72, "erudite":72, "mid-afternoon":72, "pronounces":72, "scuttle":72, "meanest":72, "zips":72, "coasting":72, "panted":72, "peacemaker":72, "threesome":72, "slob":72, "oppressors":72, "polemic":72, "generalizable":72, "star-spangled":72, "supercharged":72, "urbanized":72, "fossilized":72, "encoded":72, "shard":72, "jewelers":72, "voids":72, "nozzles":72, "used-car":72, "public-school":72, "headdresses":72, "materialist":72, "consignment":72, "hexagonal":72, "tellin":72, "tuner":72, "customization":72, "mien":72, "bondholders":72, "asian-americans":72, "non-jewish":72, "cornea":72, "capillary":72, "circadian":72, "catapulted":72, "unbearably":72, "befuddled":72, "shied":72, "imparts":72, "unwrap":72, "unworkable":72, "imploring":72, "successively":72, "consultancy":72, "benediction":72, "pouting":72, "gawking":72, "maximizes":72, "lilt":72, "unhelpful":72, "phenom":72, "critiquing":72, "quickie":72, "propagated":72, "leveraging":72, "professorial":72, "barroom":72, "celeb":72, "workweek":72, "earplugs":72, "internet-based":72, "hyperbolic":72, "godless":72, "coves":72, "publicists":72, "cottonwoods":72, "pelicans":72, "setter":72, "nonwhite":72, "returner":72, "sages":72, "uncommitted":72, "evaluator":72, "cushioning":72, "mares":72, "obelisk":72, "electrolyte":72, "dominicans":72, "chiropractic":72, "filly":72, "locket":72, "squamous":72, "attentional":72, "aversive":72, "germplasm":72, "refreshingly":72, "run-of-the-mill":72, "doling":72, "fitfully":72, "fantastically":72, "accoutrements":72, "vicissitudes":72, "loathsome":72, "darkens":72, "suppresses":72, "patronize":72, "reintroduced":72, "full-on":72, "ulterior":72, "spiel":72, "overreact":72, "downturns":72, "intransigence":72, "ironed":72, "low-cut":72, "alabaster":72, "exonerated":72, "third-year":72, "outbuildings":72, "toasts":72, "pinky":72, "hoard":72, "snobbery":72, "victorians":72, "on-camera":72, "increment":72, "livery":72, "strangulation":72, "convex":72, "segmented":72, "buckwheat":72, "flatware":72, "patrimony":72, "neuroscientist":72, "pagans":72, "eurocentric":72, "printmaking":72, "transcribing":72, "gypsum":72, "sonnets":72, "secularists":72, "cirrhosis":72, "steppe":72, "calypso":72, "esophageal":72, "anabolic":72, "tumour":72, "unblemished":72, "charmingly":72, "go-ahead":72, "compensates":72, "capitalized":72, "galvanize":72, "fraying":72, "passers-by":72, "falters":72, "barbecues":72, "cheeky":72, "meteoric":72, "fancied":72, "inheriting":72, "flitted":72, "weeknight":72, "cutest":72, "generalizing":72, "retrain":72, "executes":72, "nerdy":72, "refuel":72, "cocking":72, "curtly":72, "flaking":72, "councilwoman":72, "encyclopedias":72, "spire":72, "hazelnut":72, "phantoms":72, "courtiers":72, "endangerment":72, "injunctions":72, "fritters":72, "oi":72, "juridical":72, "neuron":72, "menorah":72, "highlander":72, "epistemic":72, "sunscreens":72, "mortified":72, "matted":72, "reminiscing":72, "effusive":72, "determinedly":72, "derisive":72, "traceable":72, "antsy":72, "evaporating":72, "jabs":72, "impressionistic":72, "cobbled":72, "glowered":72, "raunchy":72, "fuchsia":72, "exhaling":72, "purred":72, "ballpoint":72, "imaginatively":72, "peeing":72, "shawls":72, "anarchic":72, "ritually":72, "groupies":72, "high-voltage":72, "communicable":72, "binders":72, "marigolds":72, "anthropomorphic":72, "interconnectedness":72, "centenary":72, "barbarian":72, "cheesecloth":72, "pygmy":72, "prawns":72, "regionalism":72, "auger":72, "homeownership":72, "adjuster":72, "paddock":72, "aurora":72, "goaltender":72, "excellency":72, "propellant":72, "carers":72, "assembles":72, "bristle":72, "flagging":72, "bawdy":72, "permutations":72, "deplore":72, "detours":72, "remade":72, "inherits":72, "duplicates":72, "earnestness":72, "torrents":72, "old-line":72, "massing":72, "farmhouses":72, "narrates":72, "avoidable":72, "echelon":72, "analytically":72, "doneness":72, "flotation":72, "pathologies":72, "kamikaze":72, "slayings":72, "pay-per-view":72, "amputations":72, "iterative":72, "sweatshops":72, "chink":72, "insemination":72, "ogre":72, "tabernacle":72, "minstrel":72, "bathhouse":72, "hares":72, "mestizo":72, "dyadic":72, "sinhalese":72, "poignancy":72, "aficionado":72, "rough-and-tumble":72, "rejoiced":72, "four-story":72, "cemented":72, "poignantly":72, "sidled":72, "doze":72, "busied":72, "ferment":72, "backtrack":72, "fantastical":72, "haywire":72, "ice-cold":72, "fixated":72, "tongue-in-cheek":72, "gaily":72, "sleepily":72, "opportune":72, "stipulates":72, "moisten":72, "discloses":72, "hooted":72, "plucks":72, "campy":72, "skits":72, "low-priced":72, "pervasiveness":72, "bade":72, "outperformed":72, "funders":72, "clergymen":72, "snowballs":72, "universalist":72, "trans-atlantic":72, "resonances":72, "pessimists":72, "mucous":72, "audiovisual":72, "deep-water":72, "technocrats":72, "viola":72, "neurotransmitter":72, "bobcat":72, "guilds":72, "moslems":72, "samba":72, "reliefs":72, "counterfeiting":72, "conservators":72, "histologic":72, "desalination":72, "druid":72, "pylori":72, "rekindle":72, "backfired":72, "underappreciated":72, "clinking":72, "recreating":72, "tormenting":72, "cringing":72, "abated":72, "invades":72, "two-inch":72, "acrimony":72, "mocks":72, "soundness":72, "four-inch":72, "potpourri":72, "rightness":72, "cold-weather":72, "precipitating":72, "inducements":72, "wood-burning":72, "inattentive":72, "exemplars":72, "forklift":72, "misogyny":72, "sell-off":72, "qualifiers":72, "conifer":72, "informer":72, "spatter":72, "formalism":72, "bandstand":72, "rollback":72, "hamster":72, "outliers":72, "marginality":72, "kindergartners":72, "dragonfly":72, "self-portraits":72, "ottomans":72, "elongation":72, "lichens":72, "phobias":72, "syllabi":72, "saxon":72, "peptide":72, "endothelial":72, "codex":72, "unceremoniously":72, "heeded":72, "funneled":72, "jettison":72, "impresses":72, "sympathized":72, "glowering":72, "petulant":72, "reorganizing":72, "sacrosanct":72, "complimented":72, "floodgates":72, "proclamations":72, "postgame":72, "world-wide":72, "florid":72, "marshy":72, "infiltrating":72, "squirt":72, "storyline":72, "pantsuit":72, "conciliation":72, "ravines":72, "musculature":72, "screenplays":72, "fouling":72, "recitals":72, "dynamically":72, "heretics":72, "cataract":72, "tax-deferred":72, "invertebrate":72, "associative":72, "slag":72, "equalization":72, "feedstocks":72, "anasazi":72, "mimesis":72, "lycopene":72, "eurozone":72, "neoliberalism":72, "e-books":72, "plying":72, "exacerbates":72, "refreshed":72, "ferret":72, "jealously":72, "terrorized":72, "outlast":72, "balled":72, "echelons":72, "finger-pointing":72, "sneering":72, "expelling":72, "subscribed":72, "wonderment":72, "limply":72, "legitimizing":72, "unmade":72, "bequeathed":72, "princely":72, "soundlessly":72, "physiologically":72, "after-hours":72, "segregate":72, "cordon":72, "brooms":72, "pervert":72, "fatalistic":72, "swatch":72, "equine":72, "gent":72, "site-specific":72, "opacity":72, "headroom":72, "wideout":72, "high-temperature":72, "officeholders":72, "tourney":72, "cheaters":72, "pharmacological":72, "amputee":72, "tweets":72, "bolsheviks":72, "indecency":72, "prenuptial":72, "mindfulness":72, "servo":72, "klingon":72, "publicizing":72, "ill-equipped":72, "sinewy":72, "well-paid":72, "rough-hewn":72, "vehemence":72, "reverted":72, "undercuts":72, "disapproved":72, "thudding":72, "acquiesce":72, "crackles":72, "ignites":72, "categorizing":72, "stylistically":72, "annexed":72, "crazies":72, "redder":72, "thesaurus":72, "shadowing":72, "daredevil":72, "collapsible":72, "precept":72, "kilogram":72, "moonlighting":72, "cabbages":72, "two-party":72, "halos":72, "pedicure":72, "takin":72, "adrenal":72, "hobo":72, "vixen":72, "gopher":72, "cleat":72, "maxillary":72, "out-of-the-way":72, "red-brick":72, "flaunting":72, "syrupy":72, "white-hot":72, "underwritten":72, "rebelling":72, "seventeen-year-old":72, "pathetically":72, "overreaction":72, "differentiating":72, "devalue":72, "handcrafted":72, "canopies":72, "sterility":72, "brats":72, "envoys":72, "offline":72, "demilitarized":72, "high-grade":72, "retrenchment":72, "high-fiber":72, "enchiladas":72, "botanists":72, "colonizers":72, "roadster":72, "radars":72, "kilt":72, "lipids":72, "mime":72, "instep":72, "balsam":72, "isthmus":72, "bodes":72, "gravitated":72, "courageously":72, "lulled":72, "shrewdly":72, "gizmos":72, "wallow":72, "worsens":72, "presuming":72, "reverberating":72, "unsatisfying":72, "hardening":72, "shoring":72, "cornucopia":72, "atone":72, "cuddling":72, "theatrics":72, "repulsed":72, "confection":72, "omnipotent":72, "three-inch":72, "redone":72, "ornery":72, "imaginings":72, "persisting":72, "redheaded":72, "viewership":72, "low-calorie":72, "directorial":72, "statistician":72, "apprehensions":72, "dislocations":72, "seatbelt":72, "self-identified":72, "fermented":72, "stipulations":72, "rehabilitative":72, "hew":72, "talkers":72, "canary":72, "hardliners":72, "iterations":72, "simulators":72, "silo":72, "boreal":72, "macular":72, "apothecary":72, "carotene":72, "selfhood":72, "subsample":72, "intentionality":72, "cos":72, "statins":72, "lead-based":72, "excruciatingly":72, "heroically":72, "negotiates":72, "remedied":72, "recriminations":72, "unacknowledged":72, "picture-perfect":72, "gulps":72, "rework":72, "mowed":72, "infringe":72, "infirm":72, "condense":72, "synthesized":72, "dunking":72, "inducement":72, "entanglements":72, "stockpiling":72, "joggers":72, "banquets":72, "quantifying":72, "righty":72, "gags":72, "synergistic":72, "paralegal":72, "armrest":72, "counterclockwise":72, "switchbacks":72, "adornment":72, "rename":72, "incidences":72, "ahem":72, "blotter":72, "screeches":72, "shoebox":72, "strobe":72, "retraction":72, "clotting":72, "urinal":72, "hinterland":72, "inflows":72, "advisories":72, "entomology":72, "alleviation":72, "yin":72, "alms":72, "cannibals":72, "compote":72, "hells":72, "spaceflight":72, "ordinal":72, "raffia":72, "viscount":72, "ecuadorian":72, "allergen":72, "occlusion":72, "chiseled":72, "barest":72, "eludes":72, "tearfully":72, "overwrought":72, "half-eaten":72, "untoward":72, "stilled":72, "photogenic":72, "top-quality":72, "stillborn":72, "dishonor":72, "dynasties":72, "hoists":72, "heart-healthy":72, "sable":72, "snags":72, "creeds":72, "mated":72, "foreclosed":72, "reptilian":72, "eroticism":72, "fanny":72, "ophthalmologist":72, "rhinoceros":72, "teaser":72, "bridesmaid":72, "confessor":72, "tartan":72, "tomahawk":72, "sacs":72, "cleanups":72, "parallelism":72, "cosmopolitanism":72, "casein":72, "ever-expanding":72, "disguising":72, "groundswell":72, "waist-high":72, "jotted":72, "slimmer":72, "calamities":72, "palatial":72, "equipping":72, "jubilation":72, "craziest":72, "aligns":72, "run-in":72, "overstatement":72, "odious":72, "one-sixth":72, "spook":72, "sallow":72, "convening":72, "honked":72, "demographically":72, "sequestered":72, "curable":72, "life-giving":72, "seashells":72, "nag":72, "toothbrushes":72, "megaphone":72, "puns":72, "onwards":72, "low-intensity":72, "backwardness":72, "americana":72, "boa":72, "whirls":72, "comma":72, "pelt":72, "intuitions":72, "rogues":72, "lefties":72, "breweries":72, "antihistamines":72, "on-time":72, "chromatic":72, "cartesian":72, "workloads":72, "orderlies":72, "anti-lock":72, "detoxification":72, "five-speed":72, "valise":72, "paramilitaries":72, "norse":72, "motherboard":72, "perfusion":72, "pored":72, "taunt":72, "spurts":72, "dedicating":72, "happenstance":72, "belied":72, "hounded":72, "dregs":72, "endow":72, "hunks":72, "accentuated":72, "wails":72, "blemishes":72, "wedded":72, "complicit":72, "pallor":72, "hoarsely":72, "disobey":72, "emissaries":72, "pimples":72, "outcropping":72, "loins":72, "salve":72, "ramming":72, "coming-of-age":72, "gunships":72, "beeps":72, "practicable":72, "headstones":72, "matchmaker":72, "tranquilizers":72, "gladiator":72, "merry-go-round":72, "floss":72, "supply-side":72, "doghouse":72, "polypropylene":72, "antidepressant":72, "conveyance":72, "ultramarine":72, "spank":72, "shifty":72, "mulberry":72, "federated":72, "boxwood":72, "blubber":72, "mallards":72, "kenyans":72, "oxidative":72, "pansy":72, "oomph":72, "finalize":72, "immeasurably":72, "ill-fitting":72, "perusing":72, "untrustworthy":72, "harmlessly":72, "coalesced":72, "dabbing":72, "city-based":72, "architecturally":72, "concoctions":72, "abominable":72, "reconfigure":72, "stoplight":72, "steepest":72, "lower-priced":72, "tuxedos":72, "breathy":72, "dimness":72, "serenade":72, "appraised":72, "harnesses":72, "above-mentioned":72, "capillaries":72, "plunder":72, "stoppage":72, "serpents":72, "deadbeat":72, "enameled":72, "gregorian":72, "republicanism":72, "basalt":72, "capital-gains":72, "backhoe":72, "bouillon":72, "escalators":72, "uplands":72, "knowledge-based":72, "mnemonic":72, "racialized":72, "whammy":72, "cooed":72, "fascinates":72, "torrid":72, "pastimes":72, "immovable":72, "swatted":72, "humongous":72, "broad-shouldered":72, "bakes":72, "clean-shaven":72, "fetid":72, "headstrong":72, "roped":72, "good-quality":72, "sartorial":72, "partitioned":72, "bigots":72, "undeclared":72, "insoluble":72, "add-ons":72, "grocers":72, "light-skinned":72, "clearances":72, "stretchers":72, "low-density":72, "raiser":72, "v-shaped":72, "night-vision":72, "slingshot":72, "meteorology":72, "democratizing":72, "meteorologists":72, "well-drained":72, "mixed-use":72, "telemetry":72, "porthole":72, "brainwashing":72, "snowboarders":72, "self-identity":72, "rhododendrons":72, "cohabitation":72, "mainstreaming":72, "incubators":72, "two-state":72, "mongoose":72, "jugular":72, "integer":72, "septum":72, "extrasolar":72, "corporatist":72, "condors":72, "neuroticism":72, "well-suited":72, "grumble":72, "unsurprisingly":72, "pleasantries":72, "lunging":72, "half-hearted":72, "diatribe":72, "deduced":72, "subterfuge":72, "pawing":72, "disdainful":72, "two-room":72, "weirdness":72, "obsessing":72, "slouching":72, "undressing":72, "imperfectly":72, "autumnal":72, "rediscovery":72, "secreted":72, "tomboy":72, "hunches":72, "consoles":72, "quests":72, "admittance":72, "yawns":72, "pied":72, "grade-point":72, "husbandry":72, "configure":72, "earner":72, "pageantry":72, "forked":72, "kerchief":72, "psychoanalyst":72, "arthroscopic":72, "loo":72, "devolution":72, "calamari":72, "geysers":72, "cervix":72, "copier":72, "post-colonial":72, "epidemiologists":72, "dike":72, "supercomputers":72, "prophylactic":72, "push-up":72, "thermometers":72, "rushers":72, "folio":72, "autonomic":72, "randomised":72, "heeding":72, "relinquished":72, "herculean":72, "extolling":72, "unappealing":72, "protestations":72, "pelting":72, "punctured":72, "unflinching":72, "trashed":72, "gentlemanly":72, "vibrancy":72, "mince":72, "fondling":72, "snagging":72, "worshiped":72, "trembles":72, "cuffed":72, "sustainably":72, "frugality":72, "exhales":72, "weightlessness":72, "scooters":72, "jacuzzi":72, "partitions":72, "ethicist":72, "busters":72, "northerners":72, "tweet":72, "firefighting":72, "radiology":72, "paddy":72, "corinthians":72, "dutchman":72, "comic-book":72, "maxima":72, "missus":72, "kilowatt":72, "llama":72, "positional":72, "hooters":72, "sikhs":72, "luge":72, "trawling":72, "phonemic":72, "student/teacher":72, "belie":72, "optimistically":72, "afflict":72, "stooping":72, "jumbled":72, "thrash":72, "wrinkling":72, "timidity":72, "grudges":72, "brutish":72, "retroactively":72, "unplug":72, "smokestacks":72, "scapegoats":72, "rollout":72, "third-place":72, "pleats":72, "henchmen":72, "falsetto":72, "unincorporated":72, "adulterous":72, "rotted":72, "parables":72, "tinder":72, "sliders":72, "cunt":72, "zebras":72, "beaters":72, "marjoram":72, "tarot":72, "search-and-rescue":72, "conservator":72, "mullet":72, "classicism":72, "attenuation":72, "authentication":72, "carapace":72, "school-wide":72, "boxcar":72, "amortization":72, "kashmiri":72, "gestational":72, "perinatal":72, "quartile":72, "integrator":72, "phoneme":72, "glisten":72, "escalates":72, "exuded":72, "well-prepared":72, "disparage":72, "dawns":72, "perked":72, "revving":72, "life-and-death":72, "one-liners":72, "uncontested":72, "neophyte":72, "rivulets":72, "truckloads":72, "ratcheting":72, "pampered":72, "tiptoes":72, "malfeasance":72, "resell":72, "peddlers":72, "shoelaces":72, "forbearance":72, "slither":72, "solar-powered":72, "statuary":72, "stereos":72, "extrapolation":72, "candlesticks":72, "peephole":72, "levies":72, "pagers":72, "sneezed":72, "dweller":72, "prospecting":72, "airtime":72, "ponderosa":72, "tableaux":72, "philanthropists":72, "quality-of-life":72, "interactivity":72, "vetoes":72, "idolatry":72, "carbon-fiber":72, "season-ticket":72, "caskets":72, "internalization":72, "premodern":72, "tungsten":72, "agar":72, "nanotech":72, "reb":72, "acknowledgements":72, "immeasurable":72, "scantily":72, "luckier":72, "studiously":72, "liken":72, "ferrying":72, "offhand":72, "whiny":72, "prudently":72, "nary":72, "college-age":72, "complies":72, "annihilate":72, "hefted":72, "preeminence":72, "shudders":72, "formalized":72, "xenophobic":72, "reapply":72, "gagged":72, "drawled":72, "record-keeping":72, "dumber":72, "leaguer":72, "capes":72, "revolts":72, "nepotism":72, "votive":72, "interlocutor":72, "home-run":72, "military-industrial":72, "antiaircraft":72, "chapels":72, "traditionalist":72, "interconnections":72, "resurfacing":72, "disorganization":72, "power-sharing":72, "craps":72, "neglectful":72, "implementations":72, "finches":72, "bromide":72, "vibrato":72, "nanoscale":72, "underachievers":72, "decades-long":72, "indignities":72, "grist":72, "so-so":72, "tight-knit":72, "identically":72, "give-and-take":72, "hand-picked":72, "indecipherable":72, "alleyways":72, "sixty-one":72, "devalued":72, "hypocrites":72, "infects":72, "underdogs":72, "tabulated":72, "passerby":72, "hooray":72, "father-son":72, "free-flowing":72, "entertainments":72, "creamed":72, "petit":72, "seabirds":72, "roadmap":72, "plunger":72, "latches":72, "bookseller":72, "oligarchy":72, "dystrophy":72, "hex":72, "backboard":72, "monofilament":72, "no-load":72, "centrifuges":72, "decoder":72, "epithelial":72, "manatee":72, "asynchronous":72, "extravagantly":72, "churns":72, "paralyze":72, "aglow":72, "narrowest":72, "distrustful":72, "emaciated":72, "circulates":72, "re-created":72, "morphing":72, "deliberating":72, "unpainted":72, "hipster":72, "tolerates":72, "pinkie":72, "delineation":72, "canines":72, "beady":72, "infrastructures":72, "scoundrel":72, "acquit":72, "breakage":72, "squall":72, "pith":72, "hot-air":72, "ovals":72, "colonizing":72, "townsfolk":72, "winningest":72, "airfields":72, "reconstructions":72, "helix":72, "dynastic":72, "separateness":72, "abolitionists":72, "indeterminacy":72, "nonunion":72, "chorizo":72, "yak":72, "llamas":72, "pong":72, "ginkgo":72, "bluefish":72, "coachman":72, "tibial":72, "lumped":72, "hot-button":72, "wracked":72, "pittance":72, "reinvented":72, "decently":72, "typifies":72, "safekeeping":72, "traversed":72, "stolid":72, "amiably":72, "replaying":72, "fabricating":72, "tweaks":72, "eighteen-year-old":72, "bribing":72, "bravest":72, "hallucinating":72, "hatreds":72, "misinterpretation":72, "blasphemous":72, "banked":72, "humorist":72, "deconstruct":72, "hacks":72, "automate":72, "pullover":72, "hookups":72, "curative":72, "closed-circuit":72, "multiplex":72, "stomps":72, "curfews":72, "per-capita":72, "gout":72, "molesters":72, "unscripted":72, "calico":72, "deviance":72, "exclusions":72, "heather":72, "iberian":72, "cheater":72, "hag":72, "fruitcake":72, "common-law":72, "ergonomics":72, "thermodynamics":72, "indonesians":72, "non-muslim":72, "nonnative":72, "geographies":72, "wort":72, "stylistics":72, "re-evaluate":72, "fevered":72, "alleviated":72, "quibble":72, "good-sized":72, "quizzically":72, "befriend":72, "abhorrent":72, "fidgeted":72, "good-naturedly":72, "light-colored":72, "merriment":72, "formalities":72, "punishes":72, "farmlands":72, "hums":72, "fulltime":72, "six-inch":72, "gripe":72, "certainties":72, "nuptials":72, "getaways":72, "underlining":72, "rasped":72, "mugged":72, "sear":72, "confiscation":72, "virginal":72, "orchestration":72, "unearned":72, "pro-business":72, "geometrical":72, "emcee":72, "occidental":72, "wide-angle":72, "godly":72, "ninth-grade":72, "smoothie":72, "oceanographic":72, "truancy":72, "defector":72, "prunes":72, "top-seeded":72, "azalea":72, "woodstove":72, "sweeper":72, "criminology":72, "physiologic":72, "domestication":72, "phenomenology":72, "bedchamber":72, "turnpike":72, "militarization":72, "psychomotor":72, "starlings":72, "cutlets":72, "norm-referenced":72, "fizzled":72, "prepping":72, "bedraggled":72, "self-respecting":72, "unrivaled":72, "razed":72, "swishing":72, "scuttling":72, "manipulates":72, "buzzword":72, "taciturn":72, "menacingly":72, "knickknacks":72, "espousing":72, "honorably":72, "blindfolded":72, "scribble":72, "moorings":72, "crowing":72, "corrupting":72, "ascends":72, "tiptoe":72, "episcopalian":72, "flagpole":72, "multilingual":72, "gynecology":72, "hydrant":72, "octagonal":72, "low-power":72, "pedestals":72, "hitchhiking":72, "tendinitis":72, "hernia":72, "autobiographies":72, "despotism":72, "faggot":72, "compacts":72, "afghan":72, "counterintelligence":72, "trestle":72, "haulers":72, "psychosomatic":72, "distributive":72, "roping":72, "plantain":72, "orthogonal":72, "precolonial":72, "chrysalis":72, "afrikaner":72, "transboundary":72, "self-talk":72, "quint":72, "blanketed":73, "lavished":73, "resurfaced":73, "hand-in-hand":73, "lilting":73, "loosens":73, "snide":73, "paraphrasing":73, "entrails":73, "deploys":73, "sixty-six":73, "rescind":73, "garbled":73, "deep-rooted":73, "furrowed":73, "disbelieving":73, "halts":73, "rose-colored":73, "twinkled":73, "clink":73, "equanimity":73, "prefabricated":73, "gaffe":73, "brainstorm":73, "firmament":73, "newlywed":73, "imprints":73, "irrigate":73, "dietetic":73, "liberalizing":73, "destabilization":73, "massed":73, "lyricist":73, "indivisible":73, "goons":73, "feign":73, "cramp":73, "annotated":73, "mountaineers":73, "reinvestment":73, "pacifism":73, "race-based":73, "paleontology":73, "hebrews":73, "paleolithic":73, "nitrous":73, "lordship":73, "mutants":73, "population-based":73, "divan":73, "trawlers":73, "low-dose":73, "grout":73, "diastolic":73, "valence":73, "nematodes":73, "persevered":73, "reinvigorate":73, "minted":73, "undercutting":73, "agonized":73, "pinpointing":73, "trample":73, "chastened":73, "hobbling":73, "stirrings":73, "hinders":73, "proclivity":73, "serendipitous":73, "overtaking":73, "misstated":73, "fondest":73, "vetted":73, "eccentricities":73, "greedily":73, "inspirations":73, "rush-hour":73, "stiletto":73, "hiccup":73, "four-week":73, "embellishment":73, "undertone":73, "lineups":73, "groovy":73, "stigmatized":73, "midlevel":73, "dismounted":73, "kingpin":73, "risers":73, "undertaker":73, "promontory":73, "irrationality":73, "stunner":73, "anti-social":73, "eskimos":73, "solitaire":73, "sapling":73, "locator":73, "gentrification":73, "warm-ups":73, "inline":73, "mulatto":73, "non-muslims":73, "substrates":73, "summative":73, "invariant":73, "aqueduct":73, "waterboarding":73, "dampened":73, "pocketbooks":73, "slouch":73, "jostled":73, "punctuate":73, "unsmiling":73, "indomitable":73, "loopy":73, "thoroughness":73, "landscaped":73, "classifies":73, "late-afternoon":73, "fronting":73, "moonless":73, "amputated":73, "sixty-seven":73, "shunning":73, "writhed":73, "grownup":73, "equitably":73, "woozy":73, "resuscitate":73, "overreaching":73, "dissected":73, "yuppies":73, "dehydrated":73, "bloodbath":73, "incongruity":73, "manipulator":73, "bull's-eye":73, "spinster":73, "funnels":73, "civilizing":73, "floodlights":73, "litigator":73, "aberrations":73, "tunics":73, "tricycle":73, "dismemberment":73, "certifications":73, "synonyms":73, "quartets":73, "hyperinflation":73, "watt":73, "communicators":73, "cadavers":73, "intakes":73, "non-european":73, "neurologic":73, "hangman":73, "friggin":73, "superfund":73, "macroscopic":73, "triptych":73, "third-person":73, "islamism":73, "senegalese":73, "spaceport":73, "diasporic":73, "dwarves":73, "stalwarts":73, "fourth-largest":73, "crannies":73, "mid-morning":73, "bumbling":73, "defray":73, "escapades":73, "begrudge":73, "grotesquely":73, "enliven":73, "question-and-answer":73, "million-plus":73, "infamy":73, "swerving":73, "eleven-year-old":73, "deflate":73, "undamaged":73, "low-interest":73, "infraction":73, "guarantor":73, "ladylike":73, "off-white":73, "government-owned":73, "fiddles":73, "chauvinism":73, "intangibles":73, "magnolias":73, "affirmations":73, "bloating":73, "surface-to-air":73, "troubleshooting":73, "caterers":73, "slicker":73, "fag":73, "temperaments":73, "rebounder":73, "life-support":73, "badgers":73, "baste":73, "javelin":73, "pelts":73, "deserters":73, "geriatrics":73, "baitfish":73, "cultivar":73, "keynesian":73, "spore":73, "simulacrum":73, "grass-fed":73, "ultra-orthodox":73, "adventist":73, "macros":73, "torturous":73, "huddling":73, "zeroing":73, "clamber":73, "protruded":73, "reconstitute":73, "unrequited":73, "clang":73, "bagged":73, "daydreams":73, "everyman":73, "blemish":73, "hardens":73, "calibrate":73, "treks":73, "suppers":73, "jowls":73, "soulless":73, "obeys":73, "costumed":73, "demagoguery":73, "ramparts":73, "strumming":73, "riverfront":73, "co-stars":73, "high-protein":73, "resins":73, "lettuces":73, "fatherland":73, "shifter":73, "two-point":73, "dandelions":73, "triple-a":73, "ripper":73, "spellings":73, "nix":73, "glutes":73, "violator":73, "platelets":73, "nettle":73, "binaries":73, "amygdala":73, "homocysteine":73, "ballooned":73, "crisscrossed":73, "distracts":73, "heartwarming":73, "recast":73, "half-naked":73, "thrashed":73, "demonstrable":73, "diehard":73, "siphon":73, "worshipped":73, "after-dinner":73, "seducing":73, "comparably":73, "misfits":73, "marginalize":73, "postulated":73, "sullenly":73, "retrospectively":73, "ideologue":73, "stilettos":73, "injects":73, "disaffection":73, "impure":73, "untie":73, "trots":73, "uncivilized":73, "eighty-seven":73, "brambles":73, "figurehead":73, "croissants":73, "tassels":73, "trespass":73, "five-game":73, "afterglow":73, "antiviral":73, "color-blind":73, "midfield":73, "animations":73, "temporality":73, "small-cap":73, "organisations":73, "nitric":73, "self-management":73, "serials":73, "physician-assisted":73, "ridding":73, "fast-forward":73, "tastefully":73, "revels":73, "exclaim":73, "unshakable":73, "sheathed":73, "knotty":73, "paper-thin":73, "maimed":73, "unpleasantness":73, "lengthened":73, "upstanding":73, "lugged":73, "twirl":73, "purplish":73, "bellwether":73, "necessitating":73, "gloating":73, "knitted":73, "famished":73, "inimical":73, "multilayered":73, "demoted":73, "girly":73, "denouement":73, "seventy-eight":73, "epics":73, "finisher":73, "intimates":73, "paring":73, "l-shaped":73, "leafless":73, "colloquial":73, "vetting":73, "supposes":73, "gizmo":73, "overruns":73, "optimizing":73, "chutzpah":73, "safeties":73, "walkout":73, "absolution":73, "bearish":73, "evidentiary":73, "captor":73, "drawdown":73, "rivets":73, "penne":73, "commoners":73, "stepchildren":73, "middleweight":73, "fillers":73, "transcriptions":73, "radicchio":73, "forfeiture":73, "avatars":73, "seder":73, "emigrant":73, "ales":73, "honeybees":73, "distributional":73, "refiners":73, "transducers":73, "dyad":73, "thin-film":73, "woodcock":73, "then-president":73, "measly":73, "revved":73, "unfailingly":73, "powerhouses":73, "rapidity":73, "floored":73, "wrung":73, "reining":73, "crooning":73, "engulfing":73, "imparting":73, "unpalatable":73, "forsake":73, "short-sleeved":73, "accrued":73, "pivoting":73, "noontime":73, "spiking":73, "hand-to-hand":73, "construe":73, "anthems":73, "electricians":73, "middle-age":73, "american-made":73, "temporally":73, "reinvest":73, "follow-through":73, "mid-term":73, "banishment":73, "wallop":73, "cafeterias":73, "ooze":73, "brawn":73, "arty":73, "equalizer":73, "yarns":73, "housewares":73, "opportunism":73, "amps":73, "etymology":73, "reforestation":73, "follicles":73, "vermilion":73, "anti-catholic":73, "lactic":73, "theatres":73, "symmetric":73, "out-of-wedlock":73, "vane":73, "americanism":73, "caraway":73, "pretreatment":73, "battlements":73, "parametric":73, "genotype":73, "fandom":73, "bayesian":73, "doused":73, "rollicking":73, "desist":73, "headliner":73, "unblinking":73, "retooling":73, "manifesting":73, "unusable":73, "skittered":73, "drafty":73, "slanting":73, "midwinter":73, "dirtiest":73, "urinating":73, "tortures":73, "hypothetically":73, "lacquered":73, "pulsating":73, "improprieties":73, "upraised":73, "co-editor":73, "explication":73, "startles":73, "spenders":73, "swimsuits":73, "garter":73, "reenactment":73, "retrofit":73, "icicles":73, "rosewood":73, "sterilize":73, "infantrymen":73, "stutter":73, "candlestick":73, "camo":73, "fugue":73, "steamship":73, "two-stage":73, "stabilizer":73, "nonreligious":73, "scree":73, "unbleached":73, "frequent-flier":73, "rectum":73, "improvisations":73, "asiatic":73, "quay":73, "home-equity":73, "abundances":73, "diviner":73, "laconic":73, "carted":73, "splayed":73, "ardently":73, "broadens":73, "second-highest":73, "admiringly":73, "impressing":73, "rehabilitating":73, "skittering":73, "vocally":73, "wilting":73, "flailed":73, "prancing":73, "low-paying":73, "parse":73, "nastiness":73, "interject":73, "hide-and-seek":73, "driest":73, "guiltily":73, "intersecting":73, "abetting":73, "girlhood":73, "thematically":73, "topsy-turvy":73, "upholds":73, "early-season":73, "warmup":73, "snorts":73, "hisses":73, "searchable":73, "essences":73, "tonnage":73, "egrets":73, "parliaments":73, "ledgers":73, "pro-western":73, "dumpsters":73, "dermatologists":73, "all-volunteer":73, "millisecond":73, "drumsticks":73, "displacements":73, "humpback":73, "hydrangeas":73, "anatomic":73, "prisms":73, "contestation":73, "gelding":73, "bodybuilding":73, "tipper":73, "spacesuit":73, "multilateralism":73, "antigens":73, "curriculum-based":73, "phonemes":73, "apostrophe":73, "electrifying":73, "spearheading":73, "about-face":73, "all-consuming":73, "duplicating":73, "degenerated":73, "deflated":73, "willy-nilly":73, "dishing":73, "expensively":73, "trudge":73, "bashful":73, "untidy":73, "ruthlessness":73, "subtracted":73, "reposition":73, "refresher":73, "fiend":73, "typified":73, "contentions":73, "ringlets":73, "peppery":73, "backroom":73, "obstructions":73, "letterhead":73, "off-center":73, "brushstrokes":73, "cost-of-living":73, "tulle":73, "girdle":73, "retrofitting":73, "transference":73, "transformers":73, "lakeshore":73, "national-security":73, "parishioner":73, "adapters":73, "surfboard":73, "shillings":73, "birding":73, "harmonization":73, "indefatigable":73, "hard-edged":73, "unreachable":73, "bargained":73, "wobble":73, "unassailable":73, "simplifies":73, "stealthily":73, "intervenes":73, "hard-hit":73, "contorted":73, "impetuous":73, "crazier":73, "spray-painted":73, "prioritizing":73, "blameless":73, "westerner":73, "taillights":73, "discouragement":73, "one-shot":73, "red-and-white":73, "zealot":73, "endgame":73, "shakily":73, "beheld":73, "speedometer":73, "enforcers":73, "emigre":73, "murk":73, "risk-free":73, "technicolor":73, "weaning":73, "cerulean":73, "quadruple":73, "monopolistic":73, "pails":73, "discounting":73, "fast-track":73, "technocratic":73, "guesthouse":73, "bam":73, "dockside":73, "couplings":73, "shortwave":73, "pedophilia":73, "socio-cultural":73, "bleep":73, "wolverine":73, "babylonian":73, "pastrami":73, "tannins":73, "cathode":73, "zulus":73, "athenians":73, "masa":73, "orienteering":73, "bitsy":73, "reaped":73, "grappled":73, "boldest":73, "memorably":73, "squashed":73, "buttress":73, "unmitigated":73, "fascinate":73, "squabble":73, "disreputable":73, "enriches":73, "vibrates":73, "smudges":73, "politicking":73, "penultimate":73, "reputedly":73, "scalding":73, "remodel":73, "recollect":73, "rebut":73, "synchronize":73, "matrimony":73, "either/or":73, "despotic":73, "waterline":73, "anatomically":73, "confiding":73, "bundling":73, "beeped":73, "unlisted":73, "stretchy":73, "feedings":73, "gravestone":73, "slates":73, "arias":73, "toning":73, "deductive":73, "rifling":73, "myopia":73, "swerves":73, "peremptory":73, "beachhead":73, "eclipsing":73, "emeralds":73, "regent":73, "minimums":73, "socratic":73, "lean-to":73, "professionalization":73, "cattails":73, "discus":73, "discontinuities":73, "cornice":73, "loci":73, "governess":73, "samplers":73, "mm-hm":73, "revisionists":73, "immunities":73, "effigies":73, "patristic":73, "longest-running":73, "rivaled":73, "deflecting":73, "befall":73, "douse":73, "alight":73, "overhauled":73, "spattered":73, "double-check":73, "second-story":73, "gravelly":73, "ails":73, "softest":73, "yore":73, "whoops":73, "tight-fitting":73, "meddle":73, "whittle":73, "bristly":73, "disband":73, "compressing":73, "puke":73, "reload":73, "expansionist":73, "cinematographer":73, "foreclose":73, "footfalls":73, "misbehaving":73, "tip-off":73, "girders":73, "misperceptions":73, "behaviorally":73, "honeycomb":73, "venereal":73, "wrenches":73, "quarries":73, "commissary":73, "pharaohs":73, "sandbar":73, "mermaids":73, "libretto":73, "maltese":73, "endpoint":73, "ovulation":73, "reprocessing":73, "lepers":73, "kinesiology":73, "dyads":73, "reenter":73, "morph":73, "lower-cost":73, "hackles":73, "burnished":73, "imprimatur":73, "snuggle":73, "insufferable":73, "fourfold":73, "snarls":73, "hesitancy":73, "splotches":73, "embellishments":73, "spangled":73, "assimilating":73, "prepackaged":73, "idealist":73, "slights":73, "impersonation":73, "swoops":73, "brokering":73, "sues":73, "vigils":73, "two-step":73, "propagating":73, "voiceless":73, "ritualized":73, "aeronautical":73, "mmmm":73, "lollipop":73, "magisterial":73, "pushers":73, "self-reflection":73, "galloped":73, "heretic":73, "tiara":73, "informers":73, "dishwashers":73, "technologists":73, "cinders":73, "deceleration":73, "furlough":73, "redshirt":73, "presuppositions":73, "trackers":73, "bacillus":73, "gateways":73, "maoist":73, "ocular":73, "self-criticism":73, "creosote":73, "borderlands":73, "part-timers":73, "empiricism":73, "harpoon":73, "flue":73, "nondisabled":73, "philology":73, "azerbaijani":73, "newfangled":73, "indelibly":73, "kindest":73, "deflected":73, "pretension":73, "impedes":73, "pummeling":73, "wanderings":73, "installs":73, "tingled":73, "appoints":73, "ceasing":73, "bloodletting":73, "purges":73, "welts":73, "reductive":73, "tumblers":73, "health-food":73, "energy-saving":73, "two-car":73, "daddies":73, "padlock":73, "shearing":73, "immunology":73, "on-base":73, "honorees":73, "vigilantes":73, "grooms":73, "handover":73, "neighbours":73, "liberator":73, "unilateralism":73, "federations":73, "shamrock":73, "ibis":73, "pleistocene":73, "tonsils":73, "sea-level":73, "cutaneous":73, "cormorants":73, "tsar":73, "skinhead":73, "orientalism":73, "taxonomies":73, "hipbelt":73, "eke":73, "lightened":73, "well-wishers":73, "nerve-racking":73, "frolicking":73, "tellingly":73, "bombard":73, "heedless":73, "gold-plated":73, "home-cooked":73, "well-lit":73, "fluctuates":73, "faxed":73, "squeals":73, "revelry":73, "intercede":73, "depression-era":73, "desiccated":73, "one-page":73, "mitts":73, "psyches":73, "morons":73, "jurist":73, "earlobe":73, "instinctual":73, "unpeeled":73, "scrolled":73, "bandaged":73, "dimple":73, "footpath":73, "roughing":73, "rounder":73, "co-anchor":73, "censoring":73, "effeminate":73, "underweight":73, "matchmaking":73, "bod":73, "absolutist":73, "actuarial":73, "synthesizers":73, "escapees":73, "portobello":73, "sabre":73, "plebiscite":73, "federalists":73, "hermeneutical":73, "toolbar":73, "shamanic":73, "snazzy":73, "farfetched":73, "replayed":73, "panned":73, "unhurried":73, "shrift":73, "reassures":73, "tasked":73, "vainly":73, "cantankerous":73, "droll":73, "coyly":73, "five-time":73, "wriggle":73, "droopy":73, "outfitting":73, "infinitesimal":73, "skew":73, "invisibly":73, "studious":73, "alarmist":73, "maniacal":73, "vitriol":73, "appreciatively":73, "capacious":73, "nadir":73, "daydream":73, "seventy-six":73, "sidelong":73, "candlelit":73, "dabs":73, "deleting":73, "tuft":73, "hairpin":73, "sepia":73, "full-sized":73, "curriculums":73, "free-range":73, "sleaze":73, "rear-view":73, "cheats":73, "tranquilizer":73, "dismissals":73, "french-speaking":73, "footballs":73, "outfielders":73, "telephoto":73, "quadriplegic":73, "billiard":73, "multivitamin":73, "sedation":73, "eczema":73, "mechanization":73, "cornerbacks":73, "eighth-graders":73, "underdevelopment":73, "nuclear-armed":73, "aviators":73, "low-quality":73, "hauler":73, "gringo":73, "musics":73, "singletrack":73, "assessors":73, "urea":73, "rabbinical":73, "six-speed":73, "malay":73, "stripers":73, "allele":73, "wreaking":73, "chomping":73, "unconvincing":73, "dewy":73, "wizened":73, "jarred":73, "abortive":73, "gnawed":73, "degrades":73, "insinuating":73, "deprives":73, "puckered":73, "split-second":73, "coterie":73, "airs":73, "swatting":73, "wronged":73, "regretfully":73, "stuttered":73, "forgetful":73, "joker":73, "ahhh":73, "affirmatively":73, "replaceable":73, "electrified":73, "attics":73, "band-aids":73, "telegrams":73, "downloadable":73, "idleness":73, "patios":73, "wingspan":73, "indulgences":73, "hairstylist":73, "onyx":73, "navigable":73, "synthetics":73, "arrears":73, "dependability":73, "leaflet":73, "outcrop":73, "gratin":73, "viscosity":73, "tartar":73, "dumpling":73, "ugandan":73, "bronchial":73, "historicism":73, "droid":73, "belittle":73, "trickles":73, "well-kept":73, "scoffs":73, "luxuriant":73, "submerge":73, "stoically":73, "non-stop":73, "heightening":73, "unpacked":73, "plunk":73, "nineteen-year-old":73, "liquidate":73, "impassively":73, "idiocy":73, "shaven":73, "downy":73, "single-season":73, "rumbles":73, "school-aged":73, "blotches":73, "dress-up":73, "liberalize":73, "secrete":73, "narrate":73, "teachable":73, "walk-through":73, "briefcases":73, "shush":73, "debutante":73, "post-election":73, "recuperation":73, "all-natural":73, "embossed":73, "scabs":73, "verisimilitude":73, "machetes":73, "shipboard":73, "pyrotechnics":73, "swivels":73, "secessionist":73, "christening":73, "moorish":73, "sutures":73, "beatific":73, "rotator":73, "decimal":73, "decontamination":73, "lowfat":73, "rangeland":73, "stenosis":73, "monoclonal":73, "gobblers":73, "resents":73, "fantasized":73, "phenomenally":73, "faze":73, "commemorates":73, "elbowed":73, "frizzy":73, "kneeled":73, "travelled":73, "warlike":73, "plummets":73, "olden":73, "cataclysm":73, "off-camera":73, "cussing":73, "purifying":73, "extort":73, "apologists":73, "drifter":73, "rascals":73, "needlepoint":73, "condolence":73, "tints":73, "bugle":73, "cipher":73, "sainthood":73, "sharecroppers":73, "hatchback":73, "romanesque":73, "mind-body":73, "wheeze":73, "lactation":73, "gargoyle":73, "liminal":73, "crevasse":73, "zimbabwean":73, "tempera":73, "non-indians":73, "priming":73, "opioids":73, "orthographic":73, "fancier":73, "showcased":73, "jiggling":73, "squaring":73, "jangling":73, "afflicting":73, "baseless":73, "acerbic":73, "ceaselessly":73, "rapacious":73, "gung-ho":73, "climes":73, "redirecting":73, "utters":73, "long-legged":73, "invulnerable":73, "flotsam":73, "abhor":73, "purples":73, "retracing":73, "subscribing":73, "monopolize":73, "decomposing":73, "highbrow":73, "renounced":73, "one-person":73, "legalistic":73, "monogrammed":73, "torsos":73, "humanize":73, "stopgap":73, "birdsong":73, "shimmery":73, "agape":73, "intransigent":73, "petitioning":73, "apotheosis":73, "gridiron":73, "frontman":73, "tarps":73, "embedding":73, "one-armed":73, "hustlers":73, "stockholder":73, "synapses":73, "mollusks":73, "deportations":73, "extradite":73, "tourniquet":73, "grubs":73, "sedimentary":73, "pathologic":73, "nuke":73, "blackbirds":73, "astrophysicists":73, "opiate":73, "detonator":73, "flange":73, "coon":73, "romanians":73, "consortia":73, "censuses":73, "anti-choice":73, "redfish":73, "downswing":73, "mugger":73, "overdraft":73, "arbitrators":73, "upping":73, "eschewing":73, "convenes":73, "spunky":73, "unveils":73, "entranced":73, "re-enter":73, "lessens":73, "money-making":73, "uncannily":73, "prowled":73, "anointed":73, "overthrowing":73, "well-liked":73, "glimmers":73, "insincere":73, "institutionally":73, "disfigured":73, "blacked":73, "ineffectiveness":73, "inhabitant":73, "neutralizing":73, "regains":73, "underestimates":73, "beheaded":73, "modifies":73, "anorexic":73, "market-driven":73, "drool":73, "compacted":73, "unsanitary":73, "outrages":73, "ninety-eight":73, "cityscape":73, "minimum-wage":73, "unheated":73, "mans":73, "bonfires":73, "hypodermic":73, "whitish":73, "ex-president":73, "linings":73, "limos":73, "all-around":73, "yucca":73, "neoconservative":73, "glade":73, "sterilized":73, "solid-state":73, "understory":73, "scallion":73, "lemongrass":73, "opiates":73, "tapioca":73, "wasabi":73, "stencil":73, "inquest":73, "structuralist":73, "symptomatology":73, "appraisers":73, "echinacea":73, "coders":73, "chloroform":73, "biofuel":73, "mandible":73, "castilian":73, "rickshaw":73, "self-regulated":73, "nigga":73, "concoct":73, "navigated":73, "fifty-nine":73, "peopled":73, "omits":73, "frustrates":73, "impish":73, "reuniting":73, "unstated":73, "pacify":73, "slinging":73, "mid-1800s":73, "unperturbed":73, "insures":73, "riddance":73, "bleating":73, "rewind":73, "lunatics":73, "personas":73, "reinterpretation":73, "poof":73, "sensationalism":73, "militaristic":73, "dislocated":73, "at-bat":73, "gestalt":73, "motherland":73, "pistachio":73, "anus":73, "nigh":73, "herbed":73, "signifiers":73, "redeployment":73, "quorum":73, "chessboard":73, "sleepiness":73, "hawthorn":73, "headrest":73, "iguana":73, "multi-party":73, "nurturance":73, "littoral":73, "welter":73, "supersede":73, "hard-fought":73, "circumscribed":73, "readjust":73, "redirected":73, "slurping":73, "off-balance":73, "hothouse":73, "oppress":73, "spooning":73, "co-opt":73, "insolent":73, "implicating":73, "obtuse":73, "gusty":73, "subordinated":73, "raps":73, "chump":73, "blue-black":73, "misperception":73, "king-size":73, "fatherless":73, "sourly":73, "postulate":73, "forwarding":73, "forcible":73, "westernized":73, "mooring":73, "functionaries":73, "laymen":73, "birches":73, "bylaws":73, "squawked":73, "thunderbolt":73, "soundtracks":73, "patriarchs":73, "quiche":73, "operationalized":73, "linearly":73, "alizarin":73, "lube":73, "offence":73, "lathe":73, "shoal":73, "parapet":73, "psoriasis":73, "center-left":73, "constitutionalism":73, "abalone":73, "windsurfing":73, "catchment":73, "algerians":73, "peyote":73, "homeopathy":73, "shriveled":73, "crinkled":73, "coinciding":73, "rangy":73, "askance":73, "mile-long":73, "butting":73, "flattens":73, "stepped-up":73, "ditching":73, "republican-controlled":73, "head-on":73, "ministering":73, "eventuality":73, "snowed":73, "reaffirming":73, "sulking":73, "snipped":73, "refurbish":73, "sniffling":73, "pennants":73, "hand-carved":73, "erases":73, "fertilizing":73, "watertight":73, "bedded":73, "impersonating":73, "cotta":73, "four-way":73, "knickers":73, "overseers":73, "armory":73, "homeroom":73, "handball":73, "epochs":73, "taxicab":73, "gonorrhea":73, "parasol":73, "lubricants":73, "recaptured":73, "immunodeficiency":73, "legitimation":73, "worktable":73, "rightist":73, "machinists":73, "hunchback":73, "arrhythmia":73, "nanometers":73, "seawall":73, "natal":73, "winemaking":73, "fissile":73, "muskie":73, "scoliosis":73, "unflappable":73, "derisively":73, "uncluttered":73, "hilarity":73, "eventful":73, "imparted":73, "flustered":73, "nipping":73, "depleting":73, "light-headed":73, "gusting":73, "drizzled":73, "disengaged":73, "figment":73, "squandering":73, "belching":73, "malfunctioning":73, "haired":73, "divest":73, "unscheduled":73, "showings":73, "worded":73, "honk":73, "suntan":73, "doorframe":73, "disloyalty":73, "icebox":73, "progenitor":73, "cranium":73, "revisionism":73, "vanities":73, "devotions":73, "voyeurism":73, "gender-specific":73, "wisteria":73, "sonata":73, "reservist":73, "serrano":73, "flamingo":73, "mandolin":73, "berm":73, "neuromuscular":73, "chads":73, "alaskans":73, "teacher-student":73, "nonsmokers":73, "chimera":73, "hostels":73, "podcast":73, "outboards":73, "progressivism":73, "end-stage":73, "monorail":73, "christological":73, "judgings":73, "embittered":74, "woeful":74, "retaliated":74, "dispenses":74, "undertakes":74, "predate":74, "mindlessly":74, "uninspired":74, "misrepresent":74, "reverberations":74, "ghoulish":74, "nabbed":74, "boarded-up":74, "reachable":74, "eighty-four":74, "gutting":74, "intercepting":74, "full-grown":74, "reconsidered":74, "timeliness":74, "eighty-two":74, "capitalistic":74, "denoting":74, "injurious":74, "bunting":74, "sedative":74, "mantelpiece":74, "condiment":74, "re-sign":74, "nth":74, "insolvency":74, "outlooks":74, "sedatives":74, "forecaster":74, "cross-examine":74, "pimple":74, "axles":74, "racquetball":74, "caveman":74, "mazes":74, "voicemail":74, "seepage":74, "radicalization":74, "shredder":74, "instrumentalists":74, "vintages":74, "couriers":74, "inertial":74, "choreographers":74, "short-run":74, "minority-owned":74, "staphylococcus":74, "tern":74, "powwow":74, "runes":74, "saxons":74, "multimillion":74, "careened":74, "reorganized":74, "readied":74, "fiddled":74, "unpunished":74, "darned":74, "proportioned":74, "propitious":74, "loveliest":74, "clucking":74, "puritanical":74, "rants":74, "half-full":74, "breaching":74, "retracted":74, "commuted":74, "silver-haired":74, "word-of-mouth":74, "stopover":74, "loony":74, "inhumanity":74, "reedy":74, "sprinkles":74, "beater":74, "preppy":74, "machinist":74, "sourcing":74, "omelets":74, "blanch":74, "certitude":74, "drowsiness":74, "meritorious":74, "poplars":74, "recoverable":74, "anteroom":74, "craftspeople":74, "quantification":74, "harlequin":74, "cyclones":74, "penning":74, "copyrights":74, "url":74, "carnation":74, "accelerators":74, "fixer":74, "wagering":74, "remarriage":74, "positivism":74, "canto":74, "expropriation":74, "inhaler":74, "routers":74, "unionization":74, "hydrological":74, "nonresidents":74, "annotations":74, "endometriosis":74, "occultation":74, "silicosis":74, "valiantly":74, "irresistibly":74, "up-and-down":74, "reworked":74, "undistinguished":74, "big-budget":74, "big-money":74, "envelop":74, "misinformed":74, "flinching":74, "higher-ups":74, "dampening":74, "expiring":74, "crooned":74, "compresses":74, "magnanimous":74, "suffocation":74, "showmanship":74, "solicitations":74, "radiators":74, "gallic":74, "inborn":74, "retrograde":74, "kevlar":74, "quill":74, "prissy":74, "wiper":74, "overrepresented":74, "shippers":74, "peacocks":74, "referents":74, "grinch":74, "affirmative-action":74, "low-skilled":74, "pheromones":74, "quills":74, "whitefish":74, "persimmon":74, "schoolmaster":74, "pairwise":74, "lithium-ion":74, "lumen":74, "breaststroke":74, "crawler":74, "manioc":74, "front-row":74, "watered-down":74, "smudged":74, "obliging":74, "teetered":74, "tremulous":74, "stripped-down":74, "well-fed":74, "reiterating":74, "uninhabitable":74, "overstating":74, "droned":74, "ungodly":74, "exhortations":74, "generalities":74, "approximates":74, "spooned":74, "dreadfully":74, "putrid":74, "clucked":74, "democratize":74, "abdication":74, "modulated":74, "fora":74, "counterbalanced":74, "flagstone":74, "aquamarine":74, "overactive":74, "field-goal":74, "recharging":74, "inequitable":74, "nameplate":74, "carnations":74, "skinning":74, "followup":74, "arcades":74, "raffle":74, "crystallized":74, "insurgencies":74, "scrapbooks":74, "neoprene":74, "sedimentation":74, "accesses":74, "bracken":74, "zip-top":74, "dial-up":74, "vibrator":74, "dispossession":74, "sadism":74, "aqueous":74, "jungian":74, "whalers":74, "swanky":74, "meted":74, "drenching":74, "now-famous":74, "dented":74, "profligate":74, "fresh-faced":74, "riotous":74, "loose-fitting":74, "immemorial":74, "scuffed":74, "snicker":74, "unneeded":74, "partied":74, "benefitted":74, "detest":74, "trod":74, "preening":74, "full-color":74, "disorienting":74, "marooned":74, "hurtled":74, "uncounted":74, "seventy-four":74, "european-style":74, "smoke-filled":74, "miniskirt":74, "smooths":74, "sconces":74, "polemics":74, "americanized":74, "mails":74, "dud":74, "maneuverability":74, "cabal":74, "free-floating":74, "worshiping":74, "cancer-causing":74, "trickle-down":74, "plucky":74, "incestuous":74, "nonspecific":74, "videocassette":74, "idealists":74, "reined":74, "vice-presidential":74, "struts":74, "bloods":74, "self-administered":74, "jamb":74, "crackpot":74, "mutuality":74, "skin-care":74, "dragonflies":74, "nonmembers":74, "encrypted":74, "light-rail":74, "rooming":74, "castings":74, "yearling":74, "latvian":74, "slovak":74, "musketeers":74, "loudness":74, "tilapia":74, "orzo":74, "stimulator":74, "hepatic":74, "nonathletes":74, "cross-strait":74, "forgoing":74, "eschewed":74, "two-page":74, "uproot":74, "antagonize":74, "e-mailing":74, "downsides":74, "impinge":74, "disheartening":74, "swarthy":74, "unvarnished":74, "well-preserved":74, "impolite":74, "tactful":74, "unrolled":74, "throb":74, "rifts":74, "contemptuously":74, "spittle":74, "winsome":74, "pre-dawn":74, "uncritically":74, "undertow":74, "reschedule":74, "overlaps":74, "invents":74, "commendation":74, "unloved":74, "firecracker":74, "rabble":74, "immobility":74, "disconnection":74, "blase":74, "incapacity":74, "picketing":74, "far-right":74, "limited-edition":74, "newsmagazine":74, "illegible":74, "handbooks":74, "stirrups":74, "materiel":74, "mummified":74, "virginians":74, "infomercials":74, "amplifiers":74, "coverlet":74, "eggnog":74, "gender-based":74, "pomegranates":74, "dikes":74, "heterosexuality":74, "joiner":74, "communitarian":74, "casks":74, "soft-tissue":74, "webcam":74, "mascots":74, "amphetamine":74, "subaltern":74, "topology":74, "earthworm":74, "skimmer":74, "valerian":74, "eschews":74, "hardscrabble":74, "abuzz":74, "ground-breaking":74, "pestering":74, "poverty-stricken":74, "forewarned":74, "befits":74, "thankless":74, "jet-black":74, "late-summer":74, "unwary":74, "endangers":74, "singsong":74, "touts":74, "specious":74, "dopey":74, "kid-friendly":74, "spiteful":74, "dispossessed":74, "jingling":74, "nub":74, "self-examination":74, "slop":74, "gluing":74, "tell-all":74, "philandering":74, "preset":74, "sacrilege":74, "prurient":74, "smokestack":74, "wakefulness":74, "bisque":74, "bellow":74, "thrower":74, "unleaded":74, "cardiologists":74, "video-game":74, "busboy":74, "makin":74, "converters":74, "carburetor":74, "polymerase":74, "sleepwalking":74, "viceroy":74, "universalism":74, "all-wheel":74, "vegetarianism":74, "plantains":74, "marist":74, "agave":74, "drug-resistant":74, "tepee":74, "magellanic":74, "scrubbers":74, "sardine":74, "ecumenism":74, "psychotropic":74, "coot":74, "ensign":74, "rho":74, "supermassive":74, "paraprofessional":74, "deuterium":74, "post-test":74, "non-district":74, "ulama":74, "near-perfect":74, "slathered":74, "dumbfounded":74, "cajoling":74, "high-ceilinged":74, "thoughtfulness":74, "diluting":74, "reassemble":74, "bucked":74, "trucked":74, "sunning":74, "swaggering":74, "long-dead":74, "pricked":74, "humanely":74, "constrict":74, "arguable":74, "swiveling":74, "accusatory":74, "miseries":74, "breastbone":74, "buzzes":74, "state-controlled":74, "inchoate":74, "ten-minute":74, "outsource":74, "three-person":74, "technicalities":74, "yapping":74, "backdoor":74, "butchering":74, "calisthenics":74, "bougainvillea":74, "wattage":74, "self-guided":74, "low-pressure":74, "stipends":74, "clogs":74, "coverup":74, "formulae":74, "expressiveness":74, "latrine":74, "maleness":74, "lower-class":74, "communes":74, "chariots":74, "cistern":74, "harvester":74, "referential":74, "crabmeat":74, "small-company":74, "assisted-living":74, "footman":74, "nick":74, "manatees":74, "short-sighted":74, "tweaked":74, "decrying":74, "complementing":74, "well-groomed":74, "fatten":74, "belting":74, "yearns":74, "egotistical":74, "deep-set":74, "inordinately":74, "dabbling":74, "unheralded":74, "theatrically":74, "loping":74, "undeserved":74, "leggy":74, "sawed":74, "mournfully":74, "pamper":74, "wide-brimmed":74, "upturn":74, "bird's-eye":74, "tampered":74, "cadences":74, "legislating":74, "telecommunication":74, "tutorials":74, "goblets":74, "maudlin":74, "feigned":74, "roasts":74, "brimstone":74, "booing":74, "hydraulics":74, "sunbathing":74, "egocentric":74, "dismount":74, "unisex":74, "moonshine":74, "brushwork":74, "sheepskin":74, "sequester":74, "morphs":74, "shiitake":74, "rationalist":74, "cholesterol-lowering":74, "rhododendron":74, "spotter":74, "comparability":74, "noncommercial":74, "crewman":74, "house-made":74, "compressors":74, "lutherans":74, "gun-control":74, "psychics":74, "drawbridge":74, "admiralty":74, "caliphate":74, "psychopaths":74, "taro":74, "tattooing":74, "field-based":74, "granulation":74, "monolingual":74, "isoflavones":74, "deaf-blind":74, "cut-rate":74, "marauding":74, "retraced":74, "workaday":74, "custom-built":74, "mid-thirties":74, "irritates":74, "uprooting":74, "merest":74, "zesty":74, "blotted":74, "melodious":74, "competently":74, "unelected":74, "inhales":74, "normalizing":74, "denunciations":74, "virile":74, "unbounded":74, "coastlines":74, "tycoons":74, "sequenced":74, "nonmilitary":74, "snowmelt":74, "three-step":74, "hotspots":74, "transcribe":74, "osmosis":74, "inoculation":74, "academicians":74, "vocabularies":74, "dissipation":74, "dilation":74, "bom":74, "melancholic":74, "pro-abortion":74, "spats":74, "grafts":74, "dollhouse":74, "animators":74, "jovian":74, "birthmark":74, "oboe":74, "undead":74, "riverine":74, "chiropractors":74, "chock-full":74, "tailspin":74, "relent":74, "mustered":74, "ragtag":74, "lode":74, "juts":74, "enthused":74, "encapsulated":74, "reform-minded":74, "ceding":74, "self-assurance":74, "guises":74, "proliferated":74, "drowns":74, "extra-large":74, "holdover":74, "cheeseburgers":74, "blocky":74, "leather-bound":74, "stiffens":74, "slacker":74, "brainwashed":74, "informality":74, "aftershave":74, "ninety-two":74, "pastiche":74, "completions":74, "nibbles":74, "urination":74, "self-understanding":74, "parsing":74, "goon":74, "conserved":74, "causative":74, "deletion":74, "shrew":74, "hutch":74, "naked-eye":74, "tensile":74, "kangaroos":74, "collectivist":74, "life-cycle":74, "iguanas":74, "talus":74, "bibliographic":74, "otolaryngology":74, "enablers":74, "hominids":74, "shareware":74, "samoan":74, "billfish":74, "immaculately":74, "mellowed":74, "plied":74, "nimbly":74, "ill-defined":74, "pervade":74, "majestically":74, "simmered":74, "portend":74, "withstood":74, "validates":74, "blurt":74, "quench":74, "inconveniences":74, "massacred":74, "deplored":74, "predispose":74, "paunch":74, "apocryphal":74, "untroubled":74, "brags":74, "stoking":74, "ennui":74, "vindicate":74, "referencing":74, "delineating":74, "pierces":74, "peaceable":74, "arraigned":74, "crusading":74, "signatory":74, "exonerate":74, "divas":74, "bugged":74, "pitfall":74, "orbs":74, "insubordination":74, "parentage":74, "anti-tax":74, "bedclothes":74, "all-in-one":74, "ground-level":74, "cookery":74, "in-store":74, "fracturing":74, "lucent":74, "takeaway":74, "unregistered":74, "colonials":74, "croissant":74, "mortgage-backed":74, "preservative":74, "shipwrecks":74, "micron":74, "dispatchers":74, "home-schooled":74, "pinhead":74, "breastfeed":74, "binational":74, "individuation":74, "injectors":74, "encrypt":74, "masquerades":74, "willowy":74, "zigzagging":74, "quash":74, "personified":74, "appetizing":74, "clambering":74, "high-water":74, "bribed":74, "cushioned":74, "odorless":74, "sanctimonious":74, "invective":74, "conceives":74, "nutritionally":74, "snooze":74, "holdouts":74, "gnarly":74, "pinpoints":74, "bellicose":74, "cartoonish":74, "winging":74, "underemployed":74, "no-win":74, "seventy-one":74, "front-runners":74, "live-action":74, "apogee":74, "formless":74, "freeze-dried":74, "consummation":74, "mid-sized":74, "face-lift":74, "midyear":74, "batons":74, "inbox":74, "airman":74, "indentured":74, "lentil":74, "dogmas":74, "sufficiency":74, "topples":74, "standup":74, "wiretapping":74, "vita":74, "duty-free":74, "neighbourhood":74, "merlot":74, "emigres":74, "guitarists":74, "trapdoor":74, "forceps":74, "ovary":74, "consecrated":74, "teapots":74, "cowgirl":74, "staterooms":74, "afrocentric":74, "creationists":74, "woodsman":74, "orangutans":74, "narratological":74, "knell":74, "heralds":74, "neutralized":74, "broach":74, "galling":74, "gratified":74, "swathed":74, "thinnest":74, "adorning":74, "faulted":74, "unreality":74, "three-foot":74, "unavoidably":74, "nine-month":74, "provocatively":74, "chugged":74, "clench":74, "thoroughfares":74, "spoonfuls":74, "originator":74, "intersects":74, "afflictions":74, "mediates":74, "blizzards":74, "sleight":74, "demean":74, "faux":74, "clincher":74, "womanizing":74, "lam":74, "sunburned":74, "noninvasive":74, "coiling":74, "omens":74, "triumphal":74, "adrenalin":74, "kneecap":74, "ovenproof":74, "photojournalist":74, "edwardian":74, "arbitrariness":74, "thirtysomething":74, "self-definition":74, "continuities":74, "eight-week":74, "needlework":74, "tenders":74, "underwriter":74, "solver":74, "nonacademic":74, "urologist":74, "scraper":74, "neoconservatives":74, "burlesque":74, "peruvians":74, "diuretics":74, "home-school":74, "skiable":74, "quadratic":74, "aortic":74, "dispositional":74, "maladjustment":74, "matzo":74, "anti-dumping":74, "pneumococcal":74, "mages":74, "chiasmus":74, "cascaded":74, "ho-hum":74, "hamstrung":74, "alternates":74, "freakish":74, "instigated":74, "undying":74, "explosively":74, "rationalizing":74, "tightest":74, "shell-shocked":74, "worships":74, "woodsy":74, "proffered":74, "reeks":74, "rectitude":74, "exaltation":74, "erudition":74, "nullify":74, "musky":74, "shake-up":74, "unprovoked":74, "tardiness":74, "corroboration":74, "confidences":74, "waddled":74, "modulate":74, "flickers":74, "pensioners":74, "townhouses":74, "masturbating":74, "technologist":74, "water-based":74, "blogosphere":74, "banding":74, "detentions":74, "doubleheader":74, "high-efficiency":74, "paratrooper":74, "speedboat":74, "pathogenesis":74, "papyrus":74, "side-effects":74, "mammoths":74, "chromosomal":74, "ethnocentrism":74, "ethylene":74, "telly":74, "chlamydia":74, "hitchhiker":74, "poststructuralist":74, "dataset":74, "shamanism":74, "addressee":74, "workfare":74, "smarting":74, "braved":74, "recuperate":74, "obliterating":74, "mystifying":74, "hemorrhaging":74, "generically":74, "fawning":74, "stairways":74, "oozes":74, "emanated":74, "pantomime":74, "weepy":74, "itched":74, "computer-controlled":74, "uncomprehending":74, "hastening":74, "misfit":74, "refutation":74, "self-destruct":74, "three-minute":74, "eighty-three":74, "midriff":74, "disincentive":74, "three-mile":74, "full-bodied":74, "biochemist":74, "ringside":74, "liberators":74, "distractedly":74, "godlike":74, "byline":74, "barbarous":74, "cofounded":74, "neckties":74, "absolutes":74, "pertained":74, "oceanfront":74, "soliloquy":74, "mother-of-pearl":74, "pestilence":74, "braiding":74, "rowed":74, "hijackings":74, "yachting":74, "mesas":74, "mountaineer":74, "tutu":74, "impermissible":74, "peacemakers":74, "hedgehog":74, "rayon":74, "argumentation":74, "subcontractor":74, "three-fifths":74, "mace":74, "herbaceous":74, "novelistic":74, "butch":74, "loons":74, "objectification":74, "sloop":74, "copyrighted":74, "hardiness":74, "welds":74, "modelling":74, "dormer":74, "jackal":74, "archeologist":74, "adobo":74, "mini-series":74, "hatcheries":74, "schemata":74, "intraoperative":74, "e-book":74, "branchial":74, "rejoining":74, "cavorting":74, "erred":74, "grope":74, "cookie-cutter":74, "chastised":74, "bombastic":74, "gut-wrenching":74, "remiss":74, "clouding":74, "disciplinarian":74, "tough-minded":74, "incontrovertible":74, "god-fearing":74, "tardy":74, "pop-culture":74, "avenging":74, "immaturity":74, "tidings":74, "sabotaged":74, "surmounted":74, "straitjacket":74, "retold":74, "unknowing":74, "fastballs":74, "peck":74, "turbans":74, "sportswriters":74, "detaining":74, "midrange":74, "neurosis":74, "realpolitik":74, "chieftains":74, "punctual":74, "synch":74, "lockup":74, "life-forms":74, "run-off":74, "minimization":74, "pre-school":74, "late-term":74, "balustrade":74, "phosphorous":74, "cryogenic":74, "haiku":74, "paddlers":74, "shortbread":74, "flay":74, "epidermis":74, "masonite":74, "roadless":74, "matriculation":74, "fuel-cell":74, "genotypes":74, "hypothyroidism":74, "extraversion":74, "dissipates":74, "vied":74, "congratulatory":74, "snickering":74, "jaw-dropping":74, "frankness":74, "meandered":74, "prospering":74, "vented":74, "livelier":74, "eight-foot":74, "reappearance":74, "mended":74, "sited":74, "theorizes":74, "intersected":74, "intertwining":74, "jiggled":74, "free-form":74, "bloodstained":74, "two-term":74, "boob":74, "rocketing":74, "bedlam":74, "ridged":74, "overconfident":74, "interrelationship":74, "gnats":74, "mealtime":74, "tinsel":74, "thrice":74, "pigtails":74, "oscar-nominated":74, "statisticians":74, "sleeplessness":74, "coattails":74, "north-central":74, "hallucinatory":74, "stoicism":74, "moneys":74, "lighters":74, "northerly":74, "disjunction":74, "buckskin":74, "constriction":74, "freighters":74, "tailpipe":74, "post-it":74, "acacia":74, "bandleader":74, "unconstrained":74, "recognise":74, "pacifier":74, "inbred":74, "command-and-control":74, "cambodians":74, "extractive":74, "weasels":74, "fatwa":74, "respirators":74, "forehand":74, "passers":74, "exchanger":74, "hunter-gatherers":74, "polystyrene":74, "dahlias":74, "sorcerers":74, "transporter":74, "ramekins":74, "ratepayers":74, "altarpiece":74, "opioid":74, "threefold":74, "reverting":74, "bleary-eyed":74, "well-traveled":74, "pervaded":74, "buttressed":74, "five-month":74, "gouged":74, "ebbing":74, "scintillating":74, "jaundiced":74, "fistfight":74, "reworking":74, "steadiness":74, "diverged":74, "uncoordinated":74, "gobs":74, "rotund":74, "smallness":74, "two-mile":74, "restate":74, "tax-deductible":74, "chiming":74, "damask":74, "yelping":74, "amalgamation":74, "cannonball":74, "wineglass":74, "fine-grained":74, "popsicle":74, "washable":74, "matrimonial":74, "pendants":74, "eggshell":74, "obstetricians":74, "nonbinding":74, "sleuth":74, "fathering":74, "unclassified":74, "spirituals":74, "triples":74, "cupola":74, "amity":74, "mulching":74, "flat-panel":74, "diorama":74, "pragmatists":74, "boathouse":74, "tracers":74, "statuses":74, "sarcophagus":74, "faceplate":74, "neuropsychological":74, "couplet":74, "patenting":74, "fibre":74, "endoscopy":74, "mould":74, "reengineering":74, "comorbidity":74, "anglicans":74, "cress":74, "quark":74, "burqa":74, "moravian":74, "superdelegates":74, "out-group":74, "gawk":74, "diverts":74, "tussle":74, "reiterates":74, "remembrances":74, "comely":74, "bedfellows":74, "goofing":74, "hideously":74, "attractively":74, "irascible":74, "slurred":74, "boycotted":74, "crackdowns":74, "worshipping":74, "government-funded":74, "treads":74, "confidentially":74, "unfilled":74, "trifling":74, "one-year-old":74, "wheezed":74, "gradations":74, "lamely":74, "mignon":74, "reevaluation":74, "american-led":74, "appellation":74, "gales":74, "windowpane":74, "replays":74, "malfunctions":74, "purified":74, "brews":74, "scurries":74, "absorbers":74, "caf�s":74, "oil-based":74, "geranium":74, "sacredness":74, "bloomers":74, "nonbelievers":74, "wimps":74, "big-box":74, "allotments":74, "write-in":74, "chintz":74, "greco-roman":74, "rotisserie":74, "generalist":74, "caddies":74, "dandruff":74, "absolutism":74, "toenail":74, "swag":74, "statist":74, "copilot":74, "oedipal":74, "pagoda":74, "dervish":74, "credentialing":74, "microbiological":74, "easement":74, "distillery":74, "sojourner":74, "phenotype":74, "wellhead":74, "druids":74, "staunchest":74, "jam-packed":74, "ramping":74, "cranny":74, "pocketing":74, "haltingly":74, "ravishing":74, "bulldozed":74, "wood-paneled":74, "wellspring":74, "gobbled":74, "garden-variety":74, "accentuates":74, "gnaw":74, "chalked":74, "high-strung":74, "windshields":74, "pitiless":74, "thousandth":74, "acrobatics":74, "fashionably":74, "repelled":74, "top-flight":74, "insipid":74, "well-adjusted":74, "coppery":74, "misread":74, "baby-sit":74, "rejoinder":74, "adjourned":74, "correlating":74, "freezers":74, "heads-up":74, "stonewalling":74, "cutoffs":74, "wirelessly":74, "hellfire":74, "sunblock":74, "extrapolating":74, "afro":74, "manna":74, "semi-automatic":74, "boomerang":74, "duels":74, "symposia":74, "articulations":74, "lifter":74, "non-union":74, "tonality":74, "amulets":74, "home-field":74, "diode":74, "spacer":74, "smokeless":74, "filers":74, "ischemic":74, "octane":74, "ghouls":74, "rater":74, "smelter":74, "earmark":74, "statin":74, "tillage":74, "headman":74, "faerie":74, "attributional":74, "domain-specific":74, "telenovelas":74, "wooed":74, "desultory":74, "guile":74, "bright-eyed":74, "nauseating":74, "meander":74, "mobbed":74, "audibly":74, "ground-floor":74, "paralleling":74, "pasty":74, "smothering":74, "comebacks":74, "palates":74, "credibly":74, "accede":74, "accosted":74, "disguises":74, "undersides":74, "rasping":74, "plops":74, "scruples":74, "thongs":74, "low-impact":74, "doubtfully":74, "demographer":74, "dysentery":74, "aliases":74, "unmediated":74, "snore":74, "inlets":74, "lynched":74, "reconfiguration":74, "infestations":74, "candelabra":74, "typhoon":74, "birth-control":74, "pro-government":74, "interconnection":74, "progressions":74, "chamois":74, "leathers":74, "off-line":74, "pleadings":74, "acetate":74, "thrones":74, "off-trail":74, "archeologists":74, "skeet":74, "cretaceous":74, "phallus":74, "slaughterhouses":74, "bonsai":74, "palisade":74, "endpoints":74, "wildebeest":74, "clean-energy":74, "sunfish":74, "coeducational":74, "beekeepers":74, "monthlong":74, "run-ins":74, "brandished":74, "melange":74, "salvaging":74, "gushes":74, "get-togethers":74, "consoled":74, "sabotaging":74, "exaggerates":74, "cresting":74, "nastier":74, "internecine":74, "perspiring":74, "whooped":74, "self-loathing":74, "catalogued":74, "state-by-state":74, "barbed-wire":74, "peculiarity":74, "awnings":74, "thence":74, "seventy-three":74, "reportage":74, "whir":74, "tailing":74, "acronyms":74, "freebies":74, "illegality":74, "commercialize":74, "nonessential":74, "unbecoming":74, "mixers":74, "bandana":74, "nachos":74, "japanese-american":74, "grounder":74, "famines":74, "ethnocentric":74, "aspens":74, "reductionist":74, "dinette":74, "heathen":74, "seminarians":74, "infallibility":74, "hydrology":74, "galleys":74, "dinky":74, "dyslexic":74, "talon":74, "fallopian":74, "softwood":74, "profanities":74, "vole":74, "discipline-based":74, "single-subject":74, "mozambican":74, "inveterate":74, "ill-prepared":74, "unadulterated":74, "apace":74, "gravest":74, "pining":74, "suddenness":74, "stickler":74, "squirting":74, "quarreling":74, "unanswerable":74, "reconstituted":74, "coddling":74, "ribbing":74, "cancels":74, "persuasions":74, "inquires":74, "life-sized":74, "eyesore":74, "absolve":74, "self-aware":74, "procuring":74, "pecked":74, "one-inch":74, "textural":74, "eighty-eight":74, "workspace":74, "chaff":74, "remuneration":74, "presences":74, "amusements":74, "schoolgirls":74, "acrobats":74, "criminalize":74, "filigree":74, "wacko":74, "snobs":74, "financials":74, "tenses":74, "butterscotch":74, "sentinels":74, "natural-gas":74, "impostor":74, "buffering":74, "microwave-safe":74, "white-tailed":74, "humanoid":74, "pontoon":74, "paraffin":74, "alluvial":74, "ionized":74, "trimmer":74, "julienned":74, "stirrup":74, "brasserie":74, "tamarind":74, "hip-width":74, "snowshoe":74, "berber":74, "adoptees":74, "protease":74, "wowed":75, "nitty-gritty":75, "rock-bottom":75, "colorfully":75, "surreptitious":75, "cowed":75, "unfashionable":75, "dowdy":75, "relaying":75, "well-armed":75, "sidestepped":75, "usurp":75, "orwellian":75, "irrationally":75, "knee-deep":75, "sloshed":75, "shunted":75, "expeditiously":75, "papery":75, "strays":75, "weeknights":75, "made-for-tv":75, "outcroppings":75, "christmases":75, "four-part":75, "athletically":75, "inaccurately":75, "affectation":75, "fete":75, "demonstrative":75, "resettle":75, "peed":75, "soothingly":75, "hunky":75, "cutback":75, "man-to-man":75, "shakeup":75, "roundness":75, "bicep":75, "outscored":75, "obliteration":75, "miscommunication":75, "silencing":75, "write-off":75, "post-modern":75, "pullback":75, "acrobat":75, "rue":75, "regressed":75, "barbers":75, "neurologists":75, "outbound":75, "colorist":75, "adopters":75, "barnacles":75, "self-perception":75, "quadrants":75, "slavs":75, "commodification":75, "puma":75, "supranational":75, "reparation":75, "tectonics":75, "milkman":75, "demobilization":75, "backstroke":75, "mascarpone":75, "toner":75, "treehouse":75, "sabres":75, "mums":75, "reflectivity":75, "underprepared":75, "tetracycline":75, "laundries":75, "digester":75, "salt-and-pepper":75, "educates":75, "unwillingly":75, "squelch":75, "blessedly":75, "obliges":75, "ingeniously":75, "excusing":75, "cheerily":75, "berated":75, "whizzed":75, "remodeled":75, "clumsiness":75, "outpace":75, "inculcate":75, "fairest":75, "self-promotion":75, "crooner":75, "babysit":75, "subsist":75, "mopped":75, "sixty-nine":75, "muddle":75, "reminiscence":75, "insignificance":75, "autonomously":75, "indiscretions":75, "cruelest":75, "lascivious":75, "three-star":75, "piggyback":75, "enacts":75, "repulsion":75, "virility":75, "shakedown":75, "testable":75, "bulges":75, "off-broadway":75, "northbound":75, "homemakers":75, "oppressor":75, "courthouses":75, "siesta":75, "bologna":75, "betrayals":75, "superlatives":75, "recoils":75, "coauthors":75, "lame-duck":75, "doctor-patient":75, "uppers":75, "glen":75, "adjustable-rate":75, "annunciation":75, "renter":75, "analysed":75, "trachea":75, "manliness":75, "blockages":75, "ejaculation":75, "telepathic":75, "pushups":75, "collards":75, "wide-screen":75, "vividness":75, "caesarean":75, "assays":75, "high-achieving":75, "lymphocytes":75, "wheelhouse":75, "mujahideen":75, "bonefish":75, "spectrograph":75, "fiestas":75, "modulus":75, "crisscross":75, "mainstays":75, "well-regarded":75, "cinched":75, "braving":75, "hobble":75, "torched":75, "mockingly":75, "procured":75, "blighted":75, "shepherding":75, "inimitable":75, "glorification":75, "plundering":75, "bimonthly":75, "fallible":75, "flack":75, "parquet":75, "perversity":75, "gray-green":75, "falsehoods":75, "maven":75, "callused":75, "exhalation":75, "neatness":75, "seafaring":75, "confusions":75, "professorship":75, "rinds":75, "shutouts":75, "hygienic":75, "water-resistant":75, "prongs":75, "cruciate":75, "thumps":75, "rednecks":75, "abbreviations":75, "grouper":75, "solvers":75, "semicircular":75, "megawatt":75, "readouts":75, "skydiving":75, "great-uncle":75, "demonstrator":75, "formalist":75, "fifteenth-century":75, "drafters":75, "shorebirds":75, "lifeguards":75, "bolero":75, "primus":75, "argon":75, "cross-national":75, "midwifery":75, "fluxes":75, "kipper":75, "off-label":75, "mastoid":75, "haemoglobin":75, "beefing":75, "stylishly":75, "garnished":75, "abetted":75, "weaved":75, "exhorted":75, "tactfully":75, "firebrand":75, "subpar":75, "acquaint":75, "resurrecting":75, "fidgety":75, "alternated":75, "visualized":75, "reddened":75, "underpaid":75, "overridden":75, "heartthrob":75, "repaying":75, "nice-looking":75, "underutilized":75, "demonizing":75, "good-byes":75, "hobbyists":75, "timelessness":75, "slickers":75, "lyricism":75, "microchips":75, "medium-rare":75, "babysitters":75, "briefer":75, "droplet":75, "segregationist":75, "litters":75, "motivators":75, "metronome":75, "linseed":75, "deejay":75, "perturbation":75, "napalm":75, "polluter":75, "anti-jewish":75, "historicity":75, "flamingos":75, "exhibitor":75, "virulence":75, "planar":75, "vermouth":75, "monounsaturated":75, "jayhawks":75, "steady-state":75, "interstitial":75, "mormonism":75, "conjoined":75, "prophylaxis":75, "ukulele":75, "interferometer":75, "ciprofloxacin":75, "unheard-of":75, "pummeled":75, "maddeningly":75, "sturdier":75, "overdone":75, "chitchat":75, "angering":75, "snippet":75, "alphabetically":75, "quip":75, "deservedly":75, "overestimated":75, "narrow-minded":75, "quietest":75, "stabilizes":75, "five-week":75, "pretenses":75, "lifesaver":75, "ritzy":75, "fulcrum":75, "gassed":75, "snooty":75, "unhurt":75, "blinders":75, "saturate":75, "spender":75, "bespoke":75, "blue-ribbon":75, "self-discovery":75, "hardwired":75, "misreading":75, "plateaus":75, "launder":75, "self-restraint":75, "postulates":75, "blanched":75, "self-improvement":75, "teacups":75, "clowning":75, "reorientation":75, "badass":75, "upper-level":75, "smoothies":75, "discontinuous":75, "playlist":75, "black-haired":75, "oil-producing":75, "dissented":75, "cinematography":75, "scapegoating":75, "actionable":75, "fishbowl":75, "socio-political":75, "mythologies":75, "escarpment":75, "palettes":75, "therapeutics":75, "bladders":75, "mica":75, "aorta":75, "shipmates":75, "neurosurgery":75, "meritocracy":75, "intercorrelations":75, "electrostatic":75, "serfs":75, "culvert":75, "lumpectomy":75, "between-subjects":75, "metastases":75, "angiography":75, "lutein":75, "abstinent":75, "elasticities":75, "frets":75, "nosing":75, "clear-eyed":75, "masterfully":75, "unseasonably":75, "dabbled":75, "underlings":75, "deteriorates":75, "meanders":75, "aplenty":75, "ill-conceived":75, "overrode":75, "steadier":75, "reaffirms":75, "bastions":75, "droop":75, "four-foot":75, "unimpressive":75, "clocked":75, "nurtures":75, "ballooning":75, "remorseful":75, "hems":75, "nuzzled":75, "loveliness":75, "coasted":75, "cronyism":75, "outdoorsman":75, "acolytes":75, "bitty":75, "buzzwords":75, "spurned":75, "lucidity":75, "go-between":75, "crony":75, "maniacs":75, "divorcee":75, "breakups":75, "homilies":75, "parliamentarians":75, "clods":75, "bronzes":75, "individualist":75, "facials":75, "sedition":75, "westbound":75, "gauche":75, "perturbations":75, "retrial":75, "cams":75, "islander":75, "albino":75, "gearbox":75, "esplanade":75, "birders":75, "interactional":75, "automaton":75, "femmes":75, "truss":75, "ecliptic":75, "flavonoids":75, "sig":75, "closed-end":75, "masochism":75, "cytokines":75, "bluefin":75, "macrophages":75, "favelas":75, "pertussis":75, "roughest":75, "demolishing":75, "long-forgotten":75, "feckless":75, "mull":75, "inclement":75, "implode":75, "two-pronged":75, "scrunched":75, "secondarily":75, "sways":75, "five-story":75, "coauthored":75, "goad":75, "swiping":75, "impairs":75, "ambushes":75, "protrude":75, "impregnable":75, "undergarments":75, "worthiness":75, "topmost":75, "excised":75, "homeward":75, "observances":75, "vocalists":75, "sawed-off":75, "politicizing":75, "drive-through":75, "crisp-tender":75, "irreverence":75, "penises":75, "traditionalism":75, "curried":75, "lasso":75, "swabs":75, "break-ins":75, "guava":75, "herbalist":75, "yeoman":75, "petroglyphs":75, "injectable":75, "recombinant":75, "sunroom":75, "dualistic":75, "usability":75, "illiberal":75, "claimant":75, "erotica":75, "saguaro":75, "surcharges":75, "registries":75, "triplet":75, "caldera":75, "evangelicalism":75, "acidification":75, "pilothouse":75, "shrimpers":75, "probiotics":75, "bridewealth":75, "bemoan":75, "enticed":75, "mind-numbing":75, "conscientiously":75, "nestle":75, "time-tested":75, "zealously":75, "festering":75, "assailed":75, "calloused":75, "tempestuous":75, "glints":75, "intruded":75, "top-tier":75, "tidbit":75, "absentmindedly":75, "righted":75, "scampering":75, "conformed":75, "second-guessing":75, "sappy":75, "pitch-black":75, "buttoning":75, "overhearing":75, "delineates":75, "flaccid":75, "annihilated":75, "juxtapositions":75, "epochal":75, "comprehended":75, "custom-designed":75, "indentations":75, "personage":75, "workdays":75, "limps":75, "begets":75, "seventy-seven":75, "aftertaste":75, "motes":75, "armament":75, "researches":75, "sundress":75, "reloading":75, "hardline":75, "penmanship":75, "lawnmower":75, "palpitations":75, "endocrinologist":75, "commoner":75, "enumeration":75, "episcopalians":75, "tribalism":75, "thorax":75, "outcrops":75, "sharpshooter":75, "dot-coms":75, "co-operative":75, "westernization":75, "casement":75, "moo":75, "convocation":75, "actuary":75, "conclave":75, "analgesics":75, "essentialist":75, "greenhouse-gas":75, "strep":75, "urbanism":75, "annulment":75, "arthropods":75, "hoppers":75, "exchangers":75, "meta-analyses":75, "sensorineural":75, "afrikaners":75, "ligation":75, "sociality":75, "schemas":75, "panamanians":75, "prion":75, "deluged":75, "exasperating":75, "trekked":75, "blandly":75, "pitifully":75, "slather":75, "reexamination":75, "wriggling":75, "misadventures":75, "spiffy":75, "apropos":75, "melding":75, "scrubby":75, "unthinking":75, "day-long":75, "fatigued":75, "cheekbone":75, "pasting":75, "testaments":75, "proclivities":75, "innately":75, "half-moon":75, "absurdities":75, "exterminate":75, "shirtsleeves":75, "antigovernment":75, "weirder":75, "clich�s":75, "self-supporting":75, "presuppose":75, "ninety-three":75, "four-lane":75, "thievery":75, "expletives":75, "tilling":75, "methodologically":75, "thirtieth":75, "wanderers":75, "upper-income":75, "bootleg":75, "pineapples":75, "entrant":75, "quietness":75, "satisfactions":75, "pocketknife":75, "hammocks":75, "madder":75, "correspondences":75, "molars":75, "stovetop":75, "tradesmen":75, "stoops":75, "pic":75, "dames":75, "knowable":75, "geometries":75, "cobbles":75, "hyacinth":75, "subcommittees":75, "pitchfork":75, "autocracy":75, "orienting":75, "fly-fishing":75, "toffee":75, "jelly-roll":75, "windscreen":75, "weeklies":75, "squaw":75, "dispensary":75, "endometrial":75, "cytoplasm":75, "on-task":75, "acre-feet":75, "gasification":75, "well-funded":75, "pelted":75, "bleary":75, "dog-eared":75, "revolutionizing":75, "hoped-for":75, "swished":75, "co-written":75, "ousting":75, "mid-30s":75, "prearranged":75, "detested":75, "deflating":75, "lockstep":75, "excitable":75, "co-exist":75, "swoon":75, "blacker":75, "dishonorable":75, "fortresses":75, "parodies":75, "likenesses":75, "twenty-first-century":75, "campaigners":75, "parkas":75, "four-man":75, "ridgeline":75, "marksmanship":75, "paraplegic":75, "facelift":75, "treble":75, "steelworkers":75, "homing":75, "semi":75, "masturbate":75, "ellipse":75, "sit-in":75, "intercession":75, "curries":75, "eyeshadow":75, "rawhide":75, "savant":75, "semiotics":75, "cornish":75, "landscapers":75, "transgressive":75, "spectroscopic":75, "regrowth":75, "curvilinear":75, "vaccinate":75, "fossil-fuel":75, "analgesic":75, "imposter":75, "stockade":75, "corticosteroids":75, "polyunsaturated":75, "fascia":75, "catacombs":75, "spacetime":75, "weevils":75, "transceiver":75, "adventists":75, "septal":75, "synchrotron":75, "mentees":75, "percolating":75, "dispelled":75, "self-satisfied":75, "subverting":75, "cornerstones":75, "overran":75, "brusquely":75, "disdained":75, "half-finished":75, "best-kept":75, "mid-20s":75, "overripe":75, "armful":75, "misrepresenting":75, "filmy":75, "fallback":75, "repudiated":75, "rears":75, "rip-off":75, "annoyances":75, "gingham":75, "gravestones":75, "hard-wired":75, "incoherence":75, "escapism":75, "petticoats":75, "scavenging":75, "kegs":75, "southerly":75, "washroom":75, "boarder":75, "knocker":75, "health-insurance":75, "czars":75, "infanticide":75, "navigators":75, "residencies":75, "kickers":75, "wintering":75, "lob":75, "linguine":75, "grade-level":75, "lithograph":75, "rucksack":75, "whitening":75, "werewolves":75, "dino":75, "verandah":75, "intertextual":75, "biophysical":75, "homologous":75, "intertextuality":75, "creatinine":75, "fearlessly":75, "achingly":75, "subscribes":75, "afresh":75, "amicably":75, "minutely":75, "composes":75, "constricted":75, "overpowered":75, "one-month":75, "geeky":75, "good-hearted":75, "warm-weather":75, "pliant":75, "prayerful":75, "rejuvenating":75, "election-year":75, "tersely":75, "answerable":75, "edicts":75, "rhinestone":75, "hermetically":75, "unobserved":75, "pseudonyms":75, "eight-day":75, "walk-on":75, "chums":75, "demotion":75, "late-model":75, "groupie":75, "dramatizes":75, "particularities":75, "starches":75, "fizz":75, "code-named":75, "headliners":75, "addendum":75, "lingua":75, "chrysanthemums":75, "armrests":75, "kitchenette":75, "garnishes":75, "dressy":75, "bookmark":75, "gluttony":75, "ha-ha":75, "anti-discrimination":75, "bridegroom":75, "pyre":75, "pizzeria":75, "cutie":75, "enquiry":75, "mistletoe":75, "aquatics":75, "campaign-finance":75, "mousetrap":75, "mohair":75, "sonofabitch":75, "econometric":75, "excretion":75, "headscarf":75, "grantees":75, "franciscans":75, "franchising":75, "largemouths":75, "iceman":75, "sago":75, "watercourse":75, "kitschy":75, "socalled":75, "crystal-clear":75, "angers":75, "cherishes":75, "befallen":75, "open-mouthed":75, "augmenting":75, "money-losing":75, "dislodged":75, "off-guard":75, "surmount":75, "well-mannered":75, "beneficent":75, "incongruously":75, "misrepresented":75, "imprison":75, "recreated":75, "annoys":75, "constrains":75, "revitalized":75, "unwinding":75, "humiliations":75, "rapturous":75, "pander":75, "defraud":75, "contemptible":75, "capitulate":75, "one-eighth":75, "diaphanous":75, "unremitting":75, "exclamations":75, "fave":75, "second-tier":75, "byways":75, "exteriors":75, "undignified":75, "high-class":75, "missive":75, "harmonizing":75, "tufted":75, "flesh-and-blood":75, "nationalized":75, "coexisting":75, "taupe":75, "best-case":75, "biopic":75, "warping":75, "hither":75, "playthings":75, "brushy":75, "sociopath":75, "intuit":75, "denoted":75, "water-soluble":75, "circuses":75, "lamppost":75, "board-certified":75, "life-sustaining":75, "meatless":75, "imaged":75, "vertebra":75, "judgements":75, "money-laundering":75, "marigold":75, "liturgies":75, "blood-pressure":75, "on-demand":75, "hippo":75, "co-ed":75, "flied":75, "biscotti":75, "lighthouses":75, "milkweed":75, "intrapersonal":75, "impulsivity":75, "hydrologic":75, "beekeeping":75, "periodontal":75, "avoidant":75, "pantheism":75, "mycorrhizal":75, "rivaling":75, "mulled":75, "reverts":75, "trumpeted":75, "earful":75, "close-cropped":75, "entitles":75, "humdrum":75, "suffocated":75, "unquestionable":75, "tactically":75, "unimaginative":75, "impregnated":75, "costliest":75, "evaded":75, "obligingly":75, "shoveled":75, "contraptions":75, "levity":75, "washed-out":75, "stewed":75, "subverts":75, "renouncing":75, "trivialize":75, "positing":75, "hinterlands":75, "tapers":75, "three-legged":75, "materializes":75, "two-piece":75, "avarice":75, "two-tiered":75, "mutate":75, "protean":75, "emailed":75, "disuse":75, "churchgoers":75, "sinned":75, "amenity":75, "preteens":75, "broiled":75, "molest":75, "tine":75, "ninety-six":75, "decibel":75, "breech":75, "dichotomies":75, "mid-range":75, "alternation":75, "homebuyers":75, "safaris":75, "aftermarket":75, "chaparral":75, "brooches":75, "antichrist":75, "pumice":75, "fastener":75, "leviathan":75, "bombardier":75, "voltages":75, "decathlon":75, "vamp":75, "notary":75, "hermeneutics":75, "impedance":75, "centaur":75, "tomatillos":75, "comorbid":75, "tenaciously":75, "rekindled":75, "entreaties":75, "wire-rimmed":75, "blindsided":75, "vitriolic":75, "terrifically":75, "overlapped":75, "reassembled":75, "snubbed":75, "purporting":75, "denounces":75, "undertones":75, "understate":75, "inescapably":75, "walk-up":75, "sky-blue":75, "unheeded":75, "condoning":75, "hokey":75, "clinked":75, "gaffes":75, "womanizer":75, "gunk":75, "dubiously":75, "teardrop":75, "inoperable":75, "three-course":75, "whopper":75, "cackled":75, "shucks":75, "ostracism":75, "jogs":75, "welt":75, "poach":75, "gruffly":75, "goody":75, "repeatable":75, "nines":75, "turn-on":75, "odometer":75, "chaperone":75, "chambered":75, "honeymooners":75, "normalized":75, "houseplants":75, "general-purpose":75, "pillowcases":75, "schnapps":75, "hands-free":75, "asexual":75, "consecration":75, "hijacker":75, "reassignment":75, "neuroscientists":75, "composted":75, "semi-structured":75, "nativist":75, "tropic":75, "meatpacking":75, "scots":75, "bahamian":75, "rezoning":75, "post-apartheid":75, "huntsman":75, "epithelium":75, "intracranial":75, "scientology":75, "object-oriented":75, "analgesia":75, "chimeras":75, "stapes":75, "self-attention":75, "relegate":75, "tiptoeing":75, "reverberates":75, "resurface":75, "professing":75, "nauseated":75, "maim":75, "espouses":75, "persuades":75, "indifferently":75, "prickled":75, "off-putting":75, "interloper":75, "backdrops":75, "blushes":75, "blotting":75, "vestigial":75, "numbly":75, "soundless":75, "centerpieces":75, "hewn":75, "twenty-fifth":75, "approximations":75, "panics":75, "elegiac":75, "housecleaning":75, "blithe":75, "screenwriters":75, "inflation-adjusted":75, "bed-and-breakfast":75, "lawfully":75, "refusals":75, "high-power":75, "cashiers":75, "confidence-building":75, "whorls":75, "dependencies":75, "promulgate":75, "duvet":75, "bloomer":75, "corinthian":75, "steppes":75, "draftees":75, "referendums":75, "scythe":75, "glades":75, "stork":75, "deferral":75, "tenors":75, "playpen":75, "mariachi":75, "topo":75, "pro-israel":75, "pilaf":75, "fresh-cut":75, "student-teacher":75, "refractory":75, "bagpipes":75, "decanter":75, "mallard":75, "jaundice":75, "victimhood":75, "mambo":75, "steeps":75, "leninist":75, "gerontology":75, "interceptor":75, "kosovars":75, "repeatability":75, "amplitudes":75, "skimmers":75, "doublet":75, "right-click":75, "spammers":75, "geoengineering":75, "cautioning":75, "cajole":75, "brouhaha":75, "shrivel":75, "well-planned":75, "halfhearted":75, "less-expensive":75, "cull":75, "magnifies":75, "perusal":75, "despises":75, "unpredictably":75, "gush":75, "definable":75, "dastardly":75, "voyeuristic":75, "unidentifiable":75, "half-open":75, "windpipe":75, "abstractly":75, "fivefold":75, "selflessness":75, "point-blank":75, "proactively":75, "hysterics":75, "homesickness":75, "hoots":75, "laundered":75, "verbalize":75, "playtime":75, "first-timers":75, "chafing":75, "provocations":75, "naturalness":75, "buffets":75, "housekeepers":75, "dispensers":75, "shutdowns":75, "irritants":75, "expandable":75, "maxims":75, "woodpeckers":75, "hooligans":75, "ticketing":75, "exfoliating":75, "nit":75, "badlands":75, "analytics":75, "clear-cutting":75, "airfares":75, "factionalism":75, "bachelorette":75, "dogmatism":75, "behaviorist":75, "touch-screen":75, "petitioner":75, "bilge":75, "zooplankton":75, "estuarine":75, "nebulosity":75, "malian":75, "spry":75, "unappreciated":75, "anecdotally":75, "chafed":75, "fracas":75, "disentangle":75, "unpopularity":75, "calamitous":75, "conversant":75, "unsuited":75, "intones":75, "middle-of-the-road":75, "floundered":75, "indiscretion":75, "top-heavy":75, "simplifying":75, "refilling":75, "perturbed":75, "cackling":75, "risque":75, "sensitively":75, "tramping":75, "co-sponsored":75, "low-maintenance":75, "accruing":75, "dirtier":75, "snow-white":75, "reek":75, "crags":75, "irregularity":75, "uncensored":75, "playmaker":75, "trending":75, "girlie":75, "chocolate-covered":75, "tune-up":75, "contrarian":75, "profiteering":75, "raggedy":75, "thoroughbreds":75, "bimbo":75, "tableware":75, "immigrate":75, "bilaterally":75, "providential":75, "metalwork":75, "oration":75, "guerilla":75, "guardrail":75, "abbreviation":75, "treeline":75, "half-sister":75, "speakerphone":75, "screwdrivers":75, "prefix":75, "huckleberry":75, "prospector":75, "geezer":75, "archeology":75, "statecraft":75, "microcomputer":75, "sumo":75, "gangplank":75, "croatians":75, "biologic":75, "omelette":75, "torte":75, "firewalls":75, "blimp":75, "phytochemicals":75, "buzzard":75, "kantian":75, "monotheism":75, "oligarchs":75, "transgender":75, "whistle-blowers":75, "systematics":75, "bottlers":75, "depersonalization":75, "pedometer":75, "compacting":75, "substance-related":75, "snuffed":75, "skimp":75, "amateurish":75, "scrumptious":75, "retool":75, "untended":75, "nastiest":75, "reassurances":75, "paean":75, "oversimplification":75, "aflame":75, "scatters":75, "tangential":75, "tryst":75, "eighty-one":75, "plodded":75, "agonies":75, "weaned":75, "state-funded":75, "dodges":75, "boudoir":75, "good-faith":75, "heavenward":75, "spokespersons":75, "weirdo":75, "debunking":75, "kooky":75, "decals":75, "timeframe":75, "mix-up":75, "conflation":75, "incantation":75, "ocher":75, "seven-thirty":75, "celebrants":75, "slow-growing":75, "floridians":75, "epileptic":75, "musicality":75, "anti-soviet":75, "pectoral":75, "carpal":75, "yelps":75, "impatiens":75, "boardinghouse":75, "rinks":75, "snowpack":75, "tanzanian":75, "dietitians":75, "mainframes":75, "eigenvalues":75, "cuban-americans":75, "unicorns":75, "flyby":75, "filibusters":75, "airpower":75, "campesinos":75, "breadfruit":75, "snook":75, "priory":75, "paraguayan":75, "up-country":75, "bestowing":75, "asunder":75, "budgeted":75, "harmoniously":75, "bolsters":75, "roiled":75, "envelops":75, "camouflaged":75, "romanticize":75, "animosities":75, "unfavorably":75, "gloomily":75, "claustrophobia":75, "slunk":75, "well-founded":75, "eighty-six":75, "postscript":75, "lightbulbs":75, "recycles":75, "doctrinaire":75, "luminescent":75, "quarter-inch":75, "aphrodisiac":75, "braked":75, "hypnotized":75, "sit-ins":75, "interned":75, "absorbent":75, "direct-mail":75, "dentures":75, "warehousing":75, "beading":75, "reproducible":75, "cogs":75, "self-critical":75, "medalists":75, "roosting":75, "hot-water":75, "cabdriver":75, "headlands":75, "ices":75, "steamers":75, "shanties":75, "pursuer":75, "chairlift":75, "gable":75, "lifters":75, "transposition":75, "overhand":75, "wart":75, "minutemen":75, "hypertext":75, "arbitrage":75, "punjabi":75, "metabolites":75, "interferon":75, "flume":75, "freemen":75, "pneumoniae":75, "turnabout":75, "spidery":75, "heart-wrenching":75, "crusted":75, "regimented":75, "exhorting":75, "trumped":75, "second-biggest":75, "distill":75, "high-octane":75, "unearthing":75, "bashed":75, "primly":75, "coalescing":75, "piquant":75, "grieved":75, "superlative":75, "cower":75, "belched":75, "nosed":75, "litigious":75, "scrabbling":75, "coped":75, "sinew":75, "downbeat":75, "loosed":75, "countywide":75, "remote-controlled":75, "satirist":75, "rakes":75, "overeat":75, "stock-market":75, "parsimonious":75, "photocopies":75, "risk-averse":75, "spools":75, "mouthwash":75, "sleepover":75, "gunnery":75, "bulkheads":75, "inferential":75, "cleavages":75, "less-developed":75, "world-record":75, "convertibles":75, "two-door":75, "exorcist":75, "jailer":75, "erections":75, "collectivism":75, "figuration":75, "entomologists":75, "asceticism":75, "gliders":75, "berms":75, "cannery":75, "identifiers":75, "avionics":75, "harpsichord":75, "cometary":75, "fruiting":75, "assyrian":75, "defibrillators":75, "pharyngeal":75, "well-oiled":75, "mannered":75, "hair-raising":75, "breathtakingly":75, "epitomize":75, "unfurl":75, "head-to-toe":75, "rudiments":75, "pique":75, "commencing":75, "scanty":75, "mangy":75, "blurts":75, "up-to-the-minute":75, "reconnecting":75, "ditty":75, "battery-operated":75, "imprudent":75, "stammering":75, "tinfoil":75, "half-light":75, "rolodex":75, "doorjamb":75, "scoundrels":75, "flab":75, "bitchy":75, "inadmissible":75, "self-governing":75, "dungeons":75, "resettled":75, "stir-fried":75, "arrowheads":75, "interlocutors":75, "plant-based":75, "pestle":75, "ahistorical":75, "anemones":75, "coffeemaker":75, "whiplash":75, "pull-out":75, "teleprompter":75, "discounters":75, "unaffiliated":75, "payloads":75, "bogeys":75, "suture":75, "overgrazing":75, "collectives":75, "hermeneutic":75, "stigmatization":75, "nectarines":75, "easements":75, "hardtop":75, "radiographic":75, "primitivism":75, "ionization":75, "ventricle":75, "hominid":75, "chub":75, "gecko":75, "diviners":75, "sociometric":75, "foundered":76, "boardrooms":76, "unleashes":76, "undiminished":76, "unaccountably":76, "unsurpassed":76, "unobtrusively":76, "sated":76, "expending":76, "expound":76, "jotting":76, "bypasses":76, "berating":76, "unfurled":76, "exclaiming":76, "pragmatically":76, "rock-hard":76, "scornfully":76, "incorrigible":76, "enthusiasms":76, "drop-dead":76, "two-fold":76, "dub":76, "space-age":76, "inaccuracy":76, "logjam":76, "snotty":76, "soupy":76, "underpin":76, "credulity":76, "debauchery":76, "millionth":76, "defaulted":76, "changeover":76, "zippered":76, "squeaks":76, "lead-in":76, "nearness":76, "chairing":76, "income-tax":76, "quicksilver":76, "disincentives":76, "chinos":76, "moistened":76, "abrasions":76, "hermetic":76, "remote-control":76, "ballclub":76, "corks":76, "pogroms":76, "satiric":76, "easels":76, "noncompetitive":76, "milkshake":76, "jeffersonian":76, "cleansers":76, "great-aunt":76, "platoons":76, "conferees":76, "courtier":76, "snitch":76, "gravitation":76, "self-deception":76, "kickoffs":76, "indemnity":76, "antitank":76, "non-verbal":76, "furloughs":76, "forgeries":76, "trafficker":76, "special-education":76, "radiocarbon":76, "contextualization":76, "airbrush":76, "matrilineal":76, "paranasal":76, "wiki":76, "peronist":76, "seagrass":76, "fictionality":76, "heart-stopping":76, "tanked":76, "outpacing":76, "scouted":76, "roams":76, "miniscule":76, "fenced":76, "displeased":76, "adorns":76, "fronted":76, "surrenders":76, "villainous":76, "ruffling":76, "ogling":76, "recognizably":76, "stenciled":76, "flushes":76, "outsmart":76, "fluctuated":76, "exhaustively":76, "renews":76, "briny":76, "discontented":76, "drunkenly":76, "discrediting":76, "whys":76, "higher-quality":76, "brutes":76, "purr":76, "uninvolved":76, "combos":76, "fortieth":76, "exempting":76, "displaces":76, "overexposed":76, "falsifying":76, "flinty":76, "three-man":76, "maximized":76, "remotest":76, "permissions":76, "envisage":76, "decayed":76, "supplication":76, "underperforming":76, "life-style":76, "split-level":76, "garlicky":76, "depose":76, "streetcars":76, "nonpolitical":76, "searchlight":76, "play-by-play":76, "self-selected":76, "buy-in":76, "bugger":76, "stress-related":76, "rottweiler":76, "gargoyles":76, "predispositions":76, "incumbency":76, "lances":76, "electable":76, "newsreel":76, "electrification":76, "casters":76, "canonization":76, "flan":76, "tricolor":76, "holdovers":76, "opening-day":76, "bookmarks":76, "generalists":76, "rosette":76, "adulterer":76, "focaccia":76, "caulk":76, "atoll":76, "fibromyalgia":76, "self-disclosure":76, "idiopathic":76, "fellers":76, "compulsivity":76, "dead-on":76, "idled":76, "infuses":76, "foiled":76, "steadying":76, "reassessing":76, "bread-and-butter":76, "dried-up":76, "branched":76, "mourns":76, "dumbly":76, "flutters":76, "glimmering":76, "implicates":76, "haggle":76, "sympathizer":76, "fail-safe":76, "cymbals":76, "long-handled":76, "slimming":76, "titular":76, "holdup":76, "slings":76, "scrolling":76, "all-pro":76, "frosts":76, "idealization":76, "blowup":76, "discoverer":76, "supermodels":76, "digression":76, "oscillating":76, "layperson":76, "explicate":76, "ooo":76, "bloke":76, "dramatist":76, "third-down":76, "thicknesses":76, "exotics":76, "two-headed":76, "skunks":76, "cash-flow":76, "dogwoods":76, "sunroof":76, "pylons":76, "kilowatts":76, "midline":76, "belgians":76, "alchemist":76, "lymphatic":76, "placebo-controlled":76, "videoconferencing":76, "despots":76, "receivable":76, "vitae":76, "removals":76, "schoolwide":76, "psychotherapists":76, "warbler":76, "thermostats":76, "paella":76, "embalming":76, "bobsled":76, "islets":76, "ischemia":76, "alchemical":76, "toddy":76, "rhinitis":76, "gentamicin":76, "telomerase":76, "annoyingly":76, "bombarding":76, "zillion":76, "riled":76, "bores":76, "cultivates":76, "godforsaken":76, "well-built":76, "bejeweled":76, "commences":76, "self-indulgence":76, "inflections":76, "seven-game":76, "discriminates":76, "blood-soaked":76, "coast-to-coast":76, "enunciated":76, "grumbles":76, "highest-rated":76, "abstained":76, "downer":76, "unaltered":76, "apologist":76, "lacerations":76, "envisaged":76, "swum":76, "cloistered":76, "fetches":76, "downwards":76, "fifty-fifty":76, "quarantined":76, "moveable":76, "pro-american":76, "quotidian":76, "perches":76, "comprehensiveness":76, "interest-rate":76, "definitional":76, "buzzards":76, "drunkard":76, "criminologist":76, "piercings":76, "visitations":76, "grapevines":76, "cattlemen":76, "matrons":76, "newsrooms":76, "sharecropper":76, "lotto":76, "tween":76, "hisself":76, "counter-terrorism":76, "interwar":76, "refraction":76, "wiretap":76, "school-related":76, "special-needs":76, "warblers":76, "prong":76, "kayakers":76, "macadamia":76, "spacers":76, "crewmembers":76, "immersive":76, "animal-rights":76, "cheetahs":76, "whig":76, "furlong":76, "laotian":76, "four-stroke":76, "self-regulatory":76, "individual-level":76, "sputum":76, "sheikhs":76, "metacognition":76, "americanists":76, "hagfish":76, "agitating":76, "ricocheted":76, "self-important":76, "low-hanging":76, "slog":76, "mind-blowing":76, "love-hate":76, "mischievously":76, "health-conscious":76, "wafts":76, "nonthreatening":76, "languidly":76, "terrify":76, "revives":76, "largess":76, "noblest":76, "disavow":76, "accusingly":76, "whittling":76, "certifies":76, "asides":76, "letter-writing":76, "gelatinous":76, "mustaches":76, "corroborating":76, "crockery":76, "exterminated":76, "eardrums":76, "seesaw":76, "two-sided":76, "dissonant":76, "tell-tale":76, "hangovers":76, "third-round":76, "sandalwood":76, "shoot-out":76, "revocation":76, "horseshoes":76, "litigate":76, "duckling":76, "tailors":76, "year-to-year":76, "striptease":76, "declassified":76, "calipers":76, "anti-semite":76, "bioengineering":76, "minty":76, "carbine":76, "permeability":76, "personalization":76, "gangway":76, "lioness":76, "copulation":76, "hast":76, "probabilistic":76, "miter":76, "woodcut":76, "uruguayan":76, "energy-efficiency":76, "groundhog":76, "mesoamerican":76, "soymilk":76, "eutrophication":76, "rook":76, "kinematic":76, "bimodal":76, "well-run":76, "bizarrely":76, "dulled":76, "overdoing":76, "broached":76, "teasingly":76, "speedily":76, "groundless":76, "approximating":76, "wait-and-see":76, "crystallize":76, "debunk":76, "purist":76, "downsized":76, "usurped":76, "misusing":76, "brooded":76, "befell":76, "politicize":76, "readjustment":76, "half-baked":76, "twenty-four-hour":76, "demagogue":76, "nanosecond":76, "graveyards":76, "seasick":76, "south-facing":76, "preliminaries":76, "dereliction":76, "sickest":76, "humps":76, "blue-white":76, "personages":76, "take-off":76, "torments":76, "memoranda":76, "aphorisms":76, "toothache":76, "aggregated":76, "squawk":76, "electrolytes":76, "understudy":76, "one-handed":76, "impersonator":76, "theocratic":76, "low-energy":76, "full-day":76, "learnt":76, "extradited":76, "in-kind":76, "parabolic":76, "diphtheria":76, "gnat":76, "outerwear":76, "adhesives":76, "sprinters":76, "smartphones":76, "supremacists":76, "pontifical":76, "tailgating":76, "deficit-reduction":76, "bionic":76, "caulking":76, "backstreet":76, "whey":76, "transience":76, "neo-nazis":76, "puppetry":76, "manchurian":76, "pickling":76, "trainings":76, "hypothalamus":76, "nursing-home":76, "penile":76, "dram":76, "jicama":76, "vasectomy":76, "hydrothermal":76, "metonymy":76, "bisexuals":76, "pentecostalism":76, "pellagra":76, "much-anticipated":76, "solidifying":76, "immersing":76, "tallying":76, "longish":76, "ridiculing":76, "replenishing":76, "unsentimental":76, "half-closed":76, "devolved":76, "ransacked":76, "traverses":76, "inedible":76, "realign":76, "wag":76, "transparently":76, "glimmered":76, "scrawl":76, "seventy-nine":76, "dressers":76, "snowstorms":76, "phlegm":76, "cinderblock":76, "reappraisal":76, "slivered":76, "anti-democratic":76, "doorknobs":76, "streetwise":76, "timelines":76, "pics":76, "retainers":76, "alums":76, "parisians":76, "currant":76, "sprain":76, "in-school":76, "animator":76, "liquors":76, "snowshoeing":76, "baseboard":76, "four-course":76, "substation":76, "behavioural":76, "queues":76, "boars":76, "pituitary":76, "reformists":76, "interiority":76, "rattler":76, "confucianism":76, "bozo":76, "barman":76, "gastroenteritis":76, "crankset":76, "balinese":76, "aftercare":76, "stormwater":76, "fibroids":76, "souped-up":76, "demurred":76, "recasting":76, "foment":76, "obtainable":76, "multiplies":76, "humorously":76, "beck":76, "husband-and-wife":76, "independent-minded":76, "shooed":76, "dwelt":76, "irked":76, "upstarts":76, "bravura":76, "hand-wringing":76, "doughy":76, "depredations":76, "fleetingly":76, "snub":76, "interludes":76, "forgives":76, "snuggling":76, "peripatetic":76, "redrawn":76, "bungling":76, "mashing":76, "deconstructing":76, "basketballs":76, "subservience":76, "unhooked":76, "reaffirmation":76, "honeyed":76, "spastic":76, "bartering":76, "evidences":76, "inked":76, "fancies":76, "thin-skinned":76, "fermenting":76, "zoologist":76, "rococo":76, "doormat":76, "evenhanded":76, "laureates":76, "descendents":76, "deters":76, "marketplaces":76, "agnostic":76, "unreliability":76, "racehorse":76, "boater":76, "rattan":76, "cuticles":76, "gold-medal":76, "dramatization":76, "apertures":76, "itemized":76, "bluebird":76, "enhancers":76, "corrals":76, "scabbard":76, "sororities":76, "sinkhole":76, "monarchies":76, "monotheistic":76, "non-english":76, "armature":76, "cardiopulmonary":76, "bulking":76, "primitives":76, "outflows":76, "aioli":76, "hydrogenated":76, "aldermen":76, "crampons":76, "staph":76, "airbag":76, "laminate":76, "henna":76, "antifungal":76, "non-state":76, "six-party":76, "sarcoma":76, "newsgroups":76, "age-specific":76, "chivalric":76, "self-concepts":76, "sailfish":76, "reformulated":76, "reinforcers":76, "cicada":76, "not-too-distant":76, "obscenely":76, "counterbalance":76, "cagey":76, "reconfigured":76, "sprawls":76, "heralding":76, "satiny":76, "salivating":76, "thudded":76, "inebriated":76, "encouragingly":76, "distrusted":76, "frivolity":76, "fomenting":76, "righting":76, "abstracted":76, "codify":76, "tickles":76, "exaggerations":76, "predominated":76, "all-or-nothing":76, "overspending":76, "newspaperman":76, "reframe":76, "emigrating":76, "attested":76, "disease-causing":76, "nationalize":76, "brainpower":76, "motoring":76, "re-elect":76, "incitement":76, "oilman":76, "florists":76, "five-gallon":76, "westerly":76, "transients":76, "seven-point":76, "science-based":76, "doctoring":76, "write-offs":76, "deregulated":76, "high-impact":76, "hashish":76, "sichuan":76, "dialectics":76, "objector":76, "gelato":76, "non-nuclear":76, "leprechaun":76, "bebop":76, "drop-offs":76, "globalism":76, "conscript":76, "prefrontal":76, "howler":76, "tailings":76, "low-performing":76, "sockeye":76, "breastfed":76, "antiretroviral":76, "arab-americans":76, "illusionist":76, "metonymic":76, "cantilever":76, "knowledges":76, "disinclined":76, "whittled":76, "slink":76, "touchy-feely":76, "hell-bent":76, "elbowing":76, "besotted":76, "buxom":76, "unfurling":76, "hampering":76, "conspiratorially":76, "bathes":76, "slicked":76, "outgunned":76, "grungy":76, "opportunist":76, "twisty":76, "grossing":76, "four-fifths":76, "uselessly":76, "stressed-out":76, "griping":76, "wordplay":76, "line-up":76, "wardrobes":76, "unassisted":76, "blares":76, "attenuated":76, "rhinestones":76, "nondenominational":76, "four-poster":76, "infringed":76, "memorialize":76, "built-up":76, "delegating":76, "chinese-american":76, "extroverted":76, "keystrokes":76, "gangrene":76, "leashes":76, "raisers":76, "prodigies":76, "debater":76, "origami":76, "twentysomethings":76, "gazelle":76, "questioners":76, "linearity":76, "headlamps":76, "burnings":76, "paperweight":76, "moisturizers":76, "weapons-grade":76, "holsters":76, "scrotum":76, "faceup":76, "gonzo":76, "profit-sharing":76, "honeydew":76, "hippos":76, "cashew":76, "neapolitan":76, "regularities":76, "gulch":76, "fawns":76, "thine":76, "dacha":76, "neuropathy":76, "large-cap":76, "headmistress":76, "effusion":76, "dialogical":76, "glycogen":76, "gluten-free":76, "unionist":76, "intubation":76, "capacitance":76, "reminisced":76, "bemoaning":76, "baleful":76, "joyously":76, "lamentable":76, "chummy":76, "unglamorous":76, "vociferously":76, "biding":76, "gumption":76, "fourth-generation":76, "unpleasantly":76, "mid-19th":76, "family-run":76, "fraudulently":76, "nipped":76, "grade-school":76, "jumpsuits":76, "swiftness":76, "pitied":76, "fierceness":76, "listlessly":76, "sputter":76, "cinder-block":76, "unquestioning":76, "warding":76, "snow-capped":76, "arbiters":76, "family-style":76, "manicures":76, "flatlands":76, "offsetting":76, "frocks":76, "depraved":76, "adjudicate":76, "wrappings":76, "wavers":76, "washboard":76, "hangars":76, "marinating":76, "carmaker":76, "co-conspirators":76, "chenille":76, "conjectures":76, "doodles":76, "wands":76, "janitorial":76, "prods":76, "seagull":76, "gophers":76, "black-white":76, "mugging":76, "troupes":76, "populists":76, "graveside":76, "upwelling":76, "humus":76, "bengal":76, "codeine":76, "zero-tolerance":76, "extraterrestrials":76, "cobs":76, "tasters":76, "leeward":76, "quasi-experimental":76, "calvinist":76, "moderators":76, "pavers":76, "second-order":76, "opossum":76, "wampum":76, "birthweight":76, "hard-charging":76, "circumventing":76, "sizzled":76, "happy-go-lucky":76, "nonplussed":76, "jostle":76, "emulated":76, "unceasing":76, "day-old":76, "vacuous":76, "hard-driving":76, "recurs":76, "encroach":76, "confounds":76, "intimations":76, "opportunists":76, "disembark":76, "eggshells":76, "unroll":76, "bestsellers":76, "peeved":76, "hairbrush":76, "disobeying":76, "soiree":76, "cut-up":76, "debriefed":76, "blankness":76, "pivots":76, "side-to-side":76, "motorboat":76, "crimp":76, "voyeur":76, "featherweight":76, "just-in-time":76, "overcoats":76, "gruel":76, "trolleys":76, "latrines":76, "six-thirty":76, "punctuality":76, "bodybuilder":76, "reaper":76, "voice-mail":76, "anti-israel":76, "excavators":76, "aggregates":76, "menswear":76, "windward":76, "trick-or-treating":76, "two-tailed":76, "superstores":76, "powertrain":76, "pawnshop":76, "secularist":76, "implantable":76, "piecrust":76, "drugmakers":76, "hybridity":76, "tusk":76, "trims":76, "testicle":76, "repeaters":76, "two-factor":76, "goiter":76, "reticle":76, "linguini":76, "clamored":76, "surfeit":76, "parlayed":76, "eye-opener":76, "punctuating":76, "soothes":76, "ebbed":76, "authoritatively":76, "verging":76, "swooning":76, "deserting":76, "benighted":76, "repetitious":76, "dredged":76, "denigrating":76, "one-word":76, "replanting":76, "third-rate":76, "refraining":76, "nicks":76, "situates":76, "cookout":76, "reversion":76, "theatergoers":76, "unscrew":76, "unwell":76, "three-quarter":76, "open-heart":76, "statuettes":76, "wind-up":76, "him/her":76, "grater":76, "horticulturist":76, "internationalist":76, "tweeted":76, "britches":76, "seltzer":76, "capstone":76, "milligram":76, "barbeque":76, "motorbike":76, "determinate":76, "representativeness":76, "fettuccine":76, "neighbour":76, "microelectronics":76, "two-stroke":76, "inquirer":76, "igloo":76, "old-age":76, "initiator":76, "gunwale":76, "petticoat":76, "amniotic":76, "nicaraguans":76, "escarole":76, "emotionality":76, "repellents":76, "ivories":76, "photovoltaics":76, "cogeneration":76, "airship":76, "turbidity":76, "amplifies":76, "effervescent":76, "euphemisms":76, "adventuresome":76, "forethought":76, "bestows":76, "statuesque":76, "harping":76, "ramble":76, "ranch-style":76, "entitle":76, "sharpens":76, "lime-green":76, "incomprehension":76, "foot-long":76, "juxtaposing":76, "condoned":76, "psyched":76, "reddening":76, "unread":76, "coiffed":76, "disintegrates":76, "cheerfulness":76, "shortens":76, "nether":76, "placidly":76, "well-done":76, "uncool":76, "desirous":76, "novelties":76, "likeable":76, "roughshod":76, "transposed":76, "retinue":76, "hometowns":76, "misbehave":76, "glassed-in":76, "twentysomething":76, "defrauding":76, "vestments":76, "profit-making":76, "beautification":76, "whitewash":76, "ephemera":76, "curated":76, "knockoff":76, "hindquarters":76, "dork":76, "florals":76, "falsity":76, "homesteads":76, "fifth-graders":76, "cutaway":76, "unexploded":76, "classed":76, "gas-powered":76, "meaningfulness":76, "mucky":76, "new-car":76, "asters":76, "warmers":76, "noncommissioned":76, "predicate":76, "puppeteer":76, "lateness":76, "reductionism":76, "fuhrer":76, "tuber":76, "typologies":76, "tincture":76, "fixative":76, "intertidal":76, "cognate":76, "anaesthesia":76, "cetaceans":76, "hilariously":76, "hauntingly":76, "dispassionately":76, "swashbuckling":76, "enmeshed":76, "traipsing":76, "imbue":76, "arouses":76, "idolized":76, "card-carrying":76, "convivial":76, "stewing":76, "accentuating":76, "reclined":76, "ninety-one":76, "fussed":76, "quiescent":76, "barricaded":76, "ambiguously":76, "unzip":76, "old-world":76, "surrealistic":76, "engendering":76, "unlined":76, "redraw":76, "jousting":76, "somberly":76, "umbrage":76, "farcical":76, "reorient":76, "mishandling":76, "evinced":76, "croaking":76, "self-titled":76, "single-engine":76, "nutrient-rich":76, "aphorism":76, "mikes":76, "floorboard":76, "vagabond":76, "windup":76, "amethyst":76, "customizing":76, "wicks":76, "courtside":76, "turnstile":76, "cause-and-effect":76, "antiterrorism":76, "industrializing":76, "stabilizers":76, "turnstiles":76, "homesteaders":76, "co-president":76, "brassiere":76, "frictions":76, "orifice":76, "purposive":76, "adherent":76, "astrological":76, "cumulus":76, "co-payments":76, "bouncers":76, "diuretic":76, "probationary":76, "coffeehouses":76, "watercraft":76, "slasher":76, "arse":76, "videogame":76, "gnome":76, "hydro":76, "copiers":76, "behaviours":76, "sump":76, "storks":76, "bunkhouse":76, "redistributive":76, "jetties":76, "baroness":76, "telemark":76, "interest-only":76, "acetylcholine":76, "tonsillar":76, "nutria":76, "narratee":76, "forward-thinking":76, "whet":76, "muffle":76, "enlists":76, "overburdened":76, "mishmash":76, "interlopers":76, "artsy":76, "carting":76, "companionable":76, "downplays":76, "unsuspected":76, "hoary":76, "fearlessness":76, "billion-a-year":76, "irresponsibly":76, "rationalized":76, "stupidest":76, "plaintively":76, "goodly":76, "inviolable":76, "inclines":76, "hampers":76, "coining":76, "portentous":76, "attains":76, "twitchy":76, "cameos":76, "appropriates":76, "schoolroom":76, "complexions":76, "exuding":76, "taffy":76, "techies":76, "auctioning":76, "commode":76, "hopscotch":76, "one-legged":76, "urbanites":76, "capital-intensive":76, "nihilistic":76, "retell":76, "gatherers":76, "footbridge":76, "skein":76, "handicrafts":76, "homogenization":76, "marauders":76, "half-time":76, "teleological":76, "fajitas":76, "meatball":76, "cortisone":76, "electives":76, "footstool":76, "airstrike":76, "bong":76, "lye":76, "restorations":76, "excommunication":76, "snowboarder":76, "forsythia":76, "easterly":76, "first-order":76, "camellias":76, "bioscience":76, "carats":76, "derailleurs":76, "near-earth":76, "celts":76, "interceptors":76, "anti-doping":76, "decommissioning":76, "social-emotional":76, "rabbinic":76, "locomotor":76, "azerbaijanis":76, "diarrhoea":76, "otorrhea":76, "cholesteatoma":76, "ecoregions":76, "ambling":76, "chafe":76, "five-foot":76, "inexpensively":76, "agitate":76, "rewrites":76, "sloppily":76, "embarks":76, "amble":76, "immobilized":76, "behooves":76, "dousing":76, "sonorous":76, "shimmy":76, "three-and-a-half":76, "blips":76, "defaulting":76, "affix":76, "refocusing":76, "eyelash":76, "condensing":76, "administratively":76, "percussive":76, "tutored":76, "disobedient":76, "humping":76, "great-grandson":76, "corsets":76, "one-minute":76, "hundred-dollar":76, "washingtonians":76, "finders":76, "hierarchically":76, "long-haul":76, "saunters":76, "mockingbird":76, "neediest":76, "jellies":76, "embargoes":76, "markups":76, "personae":76, "buttock":76, "navies":76, "undies":76, "red-light":76, "recline":76, "jalapenos":76, "toggle":76, "goth":76, "hydrangea":76, "guardsman":76, "aftershock":76, "emirate":76, "fitter":76, "panhandlers":76, "gallbladder":76, "veiling":76, "neuronal":76, "cross-disciplinary":76, "sublimation":76, "giblets":76, "hobbit":76, "foragers":76, "preparers":76, "mitral":76, "personalisation":76, "plumb":76, "siphoning":76, "delighting":76, "splattering":76, "demoralized":76, "five-mile":76, "extolled":76, "fifth-largest":76, "spews":76, "lunching":76, "densest":76, "crediting":76, "tidying":76, "garrulous":76, "inconsolable":76, "suffices":76, "tousled":76, "hipsters":76, "dissipating":76, "relearn":76, "forfeited":76, "amplifying":76, "bobs":76, "furnishing":76, "hounding":76, "diversionary":76, "vetoing":76, "denigration":76, "geologically":76, "overprotective":76, "implanting":76, "revisits":76, "dark-green":76, "coming-out":76, "sourced":76, "blanked":76, "hedonism":76, "wretch":76, "flinches":76, "preprogrammed":76, "neutrals":76, "morbidly":76, "theatricality":76, "servile":76, "halfback":76, "diodes":76, "superstore":76, "lollipops":76, "bloodline":76, "leech":76, "ciao":76, "eastbound":76, "liquefied":76, "sombrero":76, "systemwide":76, "throttles":76, "humour":76, "dressmaker":76, "telepathy":76, "boron":76, "eardrum":76, "chlorinated":76, "tugboat":76, "digitizing":76, "locksmith":76, "palladium":76, "inhibitory":76, "middle-level":76, "interscholastic":76, "counsellor":76, "polychlorinated":76, "copter":76, "sepsis":76, "associational":76, "patrilineal":76, "dioxins":76, "mailer":76, "sunspot":76, "ferrets":76, "composts":76, "surrogacy":76, "abductees":76, "avuncular":76, "tantalizingly":76, "unimaginably":76, "boastful":76, "sprightly":76, "tamp":76, "unenviable":76, "five-member":76, "mountaintops":76, "thereabouts":76, "embolden":76, "dabble":76, "imperil":76, "excepting":76, "mid-twenties":76, "suspends":76, "unwrapping":76, "aftereffects":76, "reestablishing":76, "glorifying":76, "temerity":76, "decisiveness":76, "endeavored":76, "well-managed":76, "half-smile":76, "clinching":76, "on-field":76, "madmen":76, "waiving":76, "rephrase":76, "puking":76, "volleys":76, "surety":76, "two-tone":76, "polka-dot":76, "metabolize":76, "gents":76, "undeserving":76, "whorehouse":76, "diverging":76, "relevancy":76, "hieroglyphics":76, "submachine":76, "pinnacles":76, "gunfight":76, "countercultural":76, "jingles":76, "leotard":76, "glosses":76, "gynecological":76, "accumulations":76, "purebred":76, "quesadillas":76, "pre-game":76, "lefthanded":76, "positivist":76, "torts":76, "exoskeleton":76, "warrantless":76, "mentorship":76, "perp":76, "profiler":76, "twelfth-century":76, "cookers":76, "buckeye":76, "frontispiece":76, "hypertensive":76, "copernican":76, "borderland":76, "within-group":76, "shunt":76, "ulcerative":76, "dissociative":76, "bedbugs":76, "nanoparticles":76, "inactivation":76, "inculturation":76, "favela":76, "graywater":76, "basked":76, "indulges":76, "blindingly":76, "encapsulates":76, "shuttled":76, "laughingly":76, "portent":76, "preteen":76, "belittling":76, "logistically":76, "guileless":76, "tangling":76, "out-of-date":76, "cumulatively":76, "royally":76, "clobbered":76, "hyped":76, "gadgetry":76, "burrowed":76, "perimeters":76, "segue":76, "ascertaining":76, "sleeker":76, "elects":76, "dumbstruck":76, "exertions":76, "hangouts":76, "inscribe":76, "thunk":76, "break-even":76, "unformed":76, "backstop":76, "evanescent":76, "riverbanks":76, "two-game":76, "waif":76, "coffeepot":76, "speared":76, "pinstripe":76, "sedated":76, "greenest":76, "hooky":76, "two-tier":76, "underestimation":76, "bough":76, "refried":76, "epigraph":76, "beheading":76, "tempos":76, "overlying":76, "blacksmiths":76, "maximization":76, "prosthetics":76, "righthander":76, "smokehouse":76, "post-hoc":76, "responder":76, "one-act":76, "moroccans":76, "city-states":76, "cosmonauts":76, "armadillo":76, "malcontents":76, "bop":76, "periscope":76, "rowers":76, "panzer":76, "chinaman":76, "gantry":76, "dispersants":76, "ethernet":76, "transnationalism":76, "lemming":76, "muon":76, "ultrasonography":76, "ravaging":77, "unerring":77, "swaddled":77, "succumbs":77, "frazzled":77, "gauged":77, "munched":77, "crestfallen":77, "sidestepping":77, "reopens":77, "titillating":77, "riskiest":77, "six-game":77, "dissuaded":77, "prideful":77, "intriguingly":77, "scamper":77, "underhanded":77, "battlegrounds":77, "sexiness":77, "snoozing":77, "perplexity":77, "gaiety":77, "bedsheets":77, "sobered":77, "coos":77, "commemorated":77, "graciousness":77, "bused":77, "serviceman":77, "all-weather":77, "subtitled":77, "snoop":77, "caffeinated":77, "mongrel":77, "regrouping":77, "all-female":77, "abstaining":77, "peppy":77, "water-filled":77, "misdiagnosed":77, "hackneyed":77, "braying":77, "misogynist":77, "coal-burning":77, "flavorings":77, "tans":77, "nightshirt":77, "season-high":77, "self-service":77, "outtakes":77, "jackhammer":77, "billiards":77, "pusher":77, "bunt":77, "three-pointer":77, "sonogram":77, "songbird":77, "brie":77, "preschools":77, "quarterfinal":77, "goddamnit":77, "promissory":77, "ionic":77, "hamsters":77, "thrush":77, "wagers":77, "stereoscopic":77, "japanese-americans":77, "transsexual":77, "phobic":77, "high-dose":77, "porcini":77, "electrochemical":77, "algebraic":77, "postnatal":77, "foal":77, "zeppelin":77, "nucleotide":77, "nodal":77, "dysphagia":77, "malformations":77, "refrigerant":77, "photonic":77, "work-family":77, "doled":77, "pugnacious":77, "umpteenth":77, "adroitly":77, "irretrievably":77, "barged":77, "obviate":77, "permeating":77, "cordially":77, "costlier":77, "collides":77, "fealty":77, "congregated":77, "typify":77, "exacted":77, "overabundance":77, "hedonistic":77, "reinterpret":77, "abating":77, "incinerated":77, "foreshadow":77, "slapstick":77, "invincibility":77, "smithereens":77, "juxtapose":77, "outwit":77, "repentant":77, "twitches":77, "second-in-command":77, "grouchy":77, "bogeyman":77, "five-dollar":77, "invidious":77, "backwaters":77, "moderate-income":77, "gastronomic":77, "institutionalizing":77, "hoodlums":77, "clumping":77, "thyself":77, "nearsighted":77, "deregulate":77, "midterms":77, "consciousness-raising":77, "promulgation":77, "compilations":77, "minefields":77, "optically":77, "bayous":77, "prefab":77, "portholes":77, "customer-service":77, "chlorofluorocarbons":77, "feelers":77, "metallurgy":77, "baathist":77, "toolkit":77, "helmsman":77, "multigenerational":77, "reciprocating":77, "gratuity":77, "depository":77, "export-oriented":77, "precancerous":77, "mommies":77, "skippers":77, "climate-change":77, "welterweight":77, "melanin":77, "barracuda":77, "tracheotomy":77, "broadsides":77, "criminal-justice":77, "cyrillic":77, "subcategory":77, "dynamical":77, "perihelion":77, "laird":77, "laparoscopic":77, "gaussian":77, "gaucho":77, "likening":77, "intrudes":77, "napped":77, "merited":77, "defusing":77, "reviled":77, "boorish":77, "sun-drenched":77, "bigwigs":77, "rust-colored":77, "unfailing":77, "forlornly":77, "assembly-line":77, "jiggle":77, "best-looking":77, "mustering":77, "eluding":77, "fair-minded":77, "tottered":77, "exempts":77, "low-rent":77, "vice-versa":77, "selfishly":77, "jetting":77, "pinstripes":77, "inexact":77, "draftsman":77, "reissued":77, "problematical":77, "self-righteousness":77, "frothing":77, "coarser":77, "conspirator":77, "cruelties":77, "unbuckled":77, "blesses":77, "crabby":77, "scoots":77, "overcook":77, "unlawfully":77, "forking":77, "fidget":77, "centralizing":77, "roomier":77, "turd":77, "right-wingers":77, "icky":77, "minarets":77, "marshland":77, "fortification":77, "reusing":77, "statuette":77, "infantryman":77, "flours":77, "stalinism":77, "blockades":77, "birthrate":77, "installer":77, "crosswalk":77, "fryer":77, "acolyte":77, "broad-spectrum":77, "venture-capital":77, "compulsions":77, "roundhouse":77, "speedo":77, "kilns":77, "discrepant":77, "optometrist":77, "lump-sum":77, "scurvy":77, "jailers":77, "expository":77, "masque":77, "descriptor":77, "hurrah":77, "conjunctions":77, "lugs":77, "screener":77, "trusses":77, "bruschetta":77, "tortellini":77, "heifer":77, "barium":77, "drinking-water":77, "convents":77, "initiations":77, "between-group":77, "bygones":77, "postural":77, "afro-cuban":77, "perfectionists":77, "archduke":77, "zodiacal":77, "coupler":77, "nonindigenous":77, "cormorant":77, "trawls":77, "adroit":77, "free-spirited":77, "reneged":77, "grapples":77, "bluntness":77, "forthrightly":77, "exorcise":77, "well-crafted":77, "legwork":77, "constricting":77, "indefinable":77, "irreversibly":77, "unruffled":77, "refuted":77, "dint":77, "bridged":77, "backtracking":77, "off-key":77, "bustled":77, "elfin":77, "confections":77, "vaulting":77, "mid-twentieth":77, "dullness":77, "coherently":77, "plundered":77, "self-absorption":77, "pouted":77, "leer":77, "digress":77, "disassociate":77, "unrealistically":77, "peacefulness":77, "suspenseful":77, "pork-barrel":77, "all-you-can-eat":77, "insolence":77, "indolent":77, "underreported":77, "straggle":77, "demagogues":77, "adjourn":77, "costars":77, "intravenously":77, "hibernating":77, "provisionally":77, "curlers":77, "marionette":77, "noonday":77, "red-headed":77, "gemstones":77, "saris":77, "stateless":77, "post-cold-war":77, "alcoves":77, "garrisons":77, "installers":77, "treadmills":77, "tiebreaker":77, "widowhood":77, "fda-approved":77, "self-published":77, "teriyaki":77, "vanes":77, "passive-aggressive":77, "genealogies":77, "favourable":77, "telethon":77, "boatman":77, "kinsmen":77, "unionism":77, "cypresses":77, "maturities":77, "underrepresentation":77, "fjord":77, "transgendered":77, "unadjusted":77, "self-presentation":77, "kilowatt-hour":77, "origination":77, "isometric":77, "foster-care":77, "wikis":77, "kaleidoscopic":77, "baubles":77, "parlay":77, "outgrew":77, "maliciously":77, "disastrously":77, "sanitized":77, "implore":77, "countryman":77, "crisper":77, "ruminations":77, "penalizing":77, "regretful":77, "coffee-table":77, "unaddressed":77, "best-sellers":77, "appeasing":77, "on-again":77, "balky":77, "grieves":77, "negates":77, "pinches":77, "neophytes":77, "stubbed":77, "marketability":77, "interred":77, "impertinent":77, "infringing":77, "roadsides":77, "tensely":77, "picnicking":77, "flexibly":77, "contextualize":77, "dunks":77, "clocking":77, "nightcap":77, "college-bound":77, "needling":77, "slithering":77, "auteur":77, "unorganized":77, "rhapsody":77, "crone":77, "street-level":77, "quick-cooking":77, "runt":77, "grimaces":77, "colorblind":77, "nonalcoholic":77, "lithographs":77, "carafe":77, "signers":77, "nuclear-weapons":77, "redden":77, "apprenticeships":77, "daresay":77, "balsa":77, "weight-bearing":77, "banquette":77, "torchlight":77, "multifamily":77, "wishbone":77, "mylar":77, "slough":77, "positron":77, "crimean":77, "slicks":77, "colonialist":77, "incised":77, "social-networking":77, "appendicitis":77, "botulism":77, "radiologists":77, "non-conference":77, "non-compliance":77, "gees":77, "mind/body":77, "creationist":77, "hyperplasia":77, "family-centered":77, "watchtower":77, "placebos":77, "superconductivity":77, "dysplasia":77, "stents":77, "adjuvant":77, "myelin":77, "belowground":77, "kava":77, "harbingers":77, "unapologetically":77, "impelled":77, "refuting":77, "subsidizes":77, "gleams":77, "negated":77, "animates":77, "mildest":77, "irreparably":77, "sprees":77, "stifles":77, "summery":77, "pawed":77, "allocates":77, "three-pronged":77, "unfeeling":77, "brawls":77, "vandalized":77, "lumping":77, "pushover":77, "bombed-out":77, "overheat":77, "buts":77, "earlobes":77, "romanticized":77, "windowsills":77, "idyll":77, "bide":77, "pisses":77, "convicting":77, "kettles":77, "restarting":77, "speciality":77, "pensively":77, "engrossing":77, "streetlamps":77, "fictionalized":77, "takeoffs":77, "goal-oriented":77, "despot":77, "landmass":77, "homebound":77, "bathtubs":77, "free-fall":77, "televise":77, "sleep-deprived":77, "hardback":77, "drifters":77, "cabinet-level":77, "presumptions":77, "semis":77, "falsification":77, "baptisms":77, "pro-growth":77, "matchbox":77, "intimacies":77, "overgrowth":77, "truant":77, "sherbet":77, "exponents":77, "reformulation":77, "ungreased":77, "orgasmic":77, "chroniclers":77, "realise":77, "nautilus":77, "varicose":77, "grinders":77, "c-section":77, "positivity":77, "paediatric":77, "screamer":77, "schizophrenics":77, "circumspection":77, "inquiry-based":77, "perforations":77, "floodplains":77, "refractors":77, "within-subjects":77, "rangelands":77, "leisure-time":77, "grandmama":77, "invariance":77, "saucepot":77, "corporatism":77, "biofilter":77, "impactor":77, "wreaked":77, "bemoaned":77, "cowered":77, "scaled-down":77, "personifies":77, "vapid":77, "hastens":77, "honcho":77, "moneyed":77, "arrogantly":77, "cementing":77, "gun-toting":77, "unacceptably":77, "recrimination":77, "extrapolated":77, "hollowed-out":77, "sharp-edged":77, "buffoon":77, "dedicates":77, "rifled":77, "plate-glass":77, "cobble":77, "beastly":77, "vaporize":77, "mauled":77, "succor":77, "grammy-winning":77, "fabrications":77, "year-and-a-half":77, "vexed":77, "farewells":77, "rakish":77, "higher-priced":77, "inextricable":77, "cakewalk":77, "faxing":77, "twin-engine":77, "left-field":77, "enunciation":77, "bling":77, "waitressing":77, "authenticate":77, "seascape":77, "tormentor":77, "incantations":77, "conquistadors":77, "fourth-graders":77, "unreleased":77, "botanicals":77, "hoes":77, "spearing":77, "rosettes":77, "dropoff":77, "catamaran":77, "mock-up":77, "austro-hungarian":77, "squashes":77, "propagandists":77, "flipper":77, "self-love":77, "policewoman":77, "colas":77, "fife":77, "post-independence":77, "bronzer":77, "egret":77, "etymological":77, "matador":77, "astern":77, "mortician":77, "regionals":77, "histology":77, "silencer":77, "frigging":77, "tarantula":77, "handsets":77, "pheromone":77, "bowhunting":77, "nullification":77, "opposite-sex":77, "digitization":77, "propositional":77, "antisemitism":77, "erythema":77, "basques":77, "co-occurring":77, "malagasy":77, "single-case":77, "euphemistically":77, "flit":77, "ignominious":77, "nuzzling":77, "untainted":77, "rescinded":77, "tensing":77, "breezed":77, "once-over":77, "shaves":77, "light-hearted":77, "untried":77, "redouble":77, "unhinged":77, "misjudged":77, "nonjudgmental":77, "dispiriting":77, "reddish-brown":77, "ornately":77, "bicker":77, "jawline":77, "aloofness":77, "snickers":77, "stoplights":77, "gallantry":77, "cold-water":77, "ingenue":77, "mire":77, "solicitude":77, "tenths":77, "stockbrokers":77, "fecund":77, "double-decker":77, "disunity":77, "heatedly":77, "stonework":77, "legislatively":77, "deterrents":77, "spokespeople":77, "statesmanship":77, "sneezes":77, "decapitated":77, "bonnets":77, "condemnations":77, "old-timer":77, "swastikas":77, "pessimist":77, "pseudo":77, "honoree":77, "disenfranchisement":77, "anti-bush":77, "ready-to-wear":77, "hillock":77, "short-story":77, "gladiators":77, "offensives":77, "gasket":77, "splint":77, "jackals":77, "scumbag":77, "thimble":77, "lassitude":77, "stoning":77, "carbide":77, "semitic":77, "coaxial":77, "queuing":77, "emitters":77, "mexican-americans":77, "goal-setting":77, "kebabs":77, "simian":77, "file-sharing":77, "muskrat":77, "mantis":77, "imp":77, "hearers":77, "anti-competitive":77, "landforms":77, "coagulation":77, "bitters":77, "rad":77, "flywheel":77, "frankincense":77, "jamaicans":77, "dermal":77, "goodness-of-fit":77, "coital":77, "bowhead":77, "consultee":77, "agonizingly":77, "deflects":77, "ostentatiously":77, "scuffling":77, "benignly":77, "crumpling":77, "imbedded":77, "up-close":77, "steeled":77, "jut":77, "thirty-year-old":77, "skulking":77, "dunked":77, "peerless":77, "miscalculations":77, "pared":77, "rationed":77, "midtown":77, "recompense":77, "great-grandparents":77, "benched":77, "straight-line":77, "higher-end":77, "tallies":77, "hick":77, "ornamented":77, "expansionism":77, "spinoffs":77, "tonics":77, "twirls":77, "handrail":77, "communally":77, "eight-thirty":77, "stand-off":77, "expedited":77, "sandstorm":77, "tax-cut":77, "eclecticism":77, "briar":77, "chirp":77, "invocations":77, "paganism":77, "sinfulness":77, "kickboxing":77, "astrologer":77, "oncologists":77, "earthworks":77, "crawlers":77, "sumac":77, "cowl":77, "freelancers":77, "panhandling":77, "beaker":77, "stencils":77, "clearcut":77, "fjords":77, "lozenges":77, "fiberoptic":77, "dowel":77, "barrister":77, "barmaid":77, "energy-intensive":77, "yeshiva":77, "dermatitis":77, "globules":77, "preparer":77, "legibility":77, "waveform":77, "dairy-free":77, "prawn":77, "firebox":77, "self-referencing":77, "nixed":77, "rancorous":77, "pinpointed":77, "gorgeously":77, "trenchant":77, "resounded":77, "acquiesced":77, "pedantic":77, "miserly":77, "front-office":77, "clingy":77, "craven":77, "cahoots":77, "graduations":77, "negating":77, "liquidated":77, "sunup":77, "cost-saving":77, "italianate":77, "hungover":77, "first-come":77, "stairwells":77, "wakeup":77, "ninety-four":77, "journeying":77, "co-producer":77, "strikeout":77, "broomstick":77, "twill":77, "in-person":77, "vitals":77, "fattest":77, "dilated":77, "follow-ups":77, "synergies":77, "tweeting":77, "rearrangement":77, "ripeness":77, "hotspot":77, "topside":77, "state-mandated":77, "atheistic":77, "deportment":77, "walkin":77, "baggie":77, "dowager":77, "noncombatants":77, "blackhawks":77, "self-actualization":77, "avenger":77, "lampoon":77, "philistine":77, "foams":77, "meaninglessness":77, "mailroom":77, "saddlebags":77, "revenue-sharing":77, "crisps":77, "aptitudes":77, "luminescence":77, "bowlers":77, "coroners":77, "intermediates":77, "amelioration":77, "jigging":77, "injector":77, "unweighted":77, "palimpsest":77, "transits":77, "shrimps":77, "spillway":77, "cubist":77, "iambic":77, "cossacks":77, "triune":77, "biometrics":77, "biocontrol":77, "cyan":77, "radiographs":77, "lector":77, "abbess":77, "influenzae":77, "rambled":77, "hairdos":77, "stone-faced":77, "well-maintained":77, "straightforwardly":77, "regrouped":77, "windless":77, "long-winded":77, "discernable":77, "overmatched":77, "butchered":77, "furnishes":77, "smidgen":77, "wrongheaded":77, "trooped":77, "quickens":77, "co-sponsor":77, "snowcapped":77, "undiluted":77, "impermeable":77, "equaling":77, "situating":77, "quieting":77, "dividers":77, "uninjured":77, "curtained":77, "whitecaps":77, "dehumanizing":77, "onlooker":77, "superheated":77, "unemotional":77, "bite-sized":77, "peeped":77, "wades":77, "splatter":77, "snores":77, "sing-along":77, "talcum":77, "repatriated":77, "swipes":77, "sign-up":77, "spotters":77, "hand-eye":77, "moralists":77, "unbelievers":77, "accursed":77, "outlier":77, "changers":77, "camisole":77, "ventriloquist":77, "perdition":77, "screwball":77, "kennels":77, "doodle":77, "noblemen":77, "yarmulke":77, "marxist-leninist":77, "contextually":77, "tassel":77, "sorrel":77, "curds":77, "bookie":77, "birthrates":77, "limbic":77, "sealer":77, "vocalizations":77, "alphabetic":77, "redcoats":77, "argentines":77, "febrile":77, "compressive":77, "ablation":77, "daguerreotype":77, "precession":77, "nematode":77, "redshifts":77, "brucellosis":77, "unhindered":77, "talked-about":77, "chain-smoking":77, "backbreaking":77, "legitimized":77, "impaled":77, "duplicitous":77, "barreled":77, "furthers":77, "last-second":77, "encapsulate":77, "gloat":77, "spunk":77, "shimmers":77, "signposts":77, "cost-efficient":77, "half-way":77, "belligerence":77, "attesting":77, "coursed":77, "unscrewed":77, "subverted":77, "jacked":77, "preyed":77, "chortled":77, "repelling":77, "convulsing":77, "frolic":77, "bitching":77, "escapist":77, "demonized":77, "praiseworthy":77, "ill-gotten":77, "gander":77, "five-inch":77, "dorky":77, "five-thirty":77, "larder":77, "contingents":77, "buggies":77, "goers":77, "demonization":77, "centrists":77, "realizations":77, "egotism":77, "revolvers":77, "edibles":77, "gravesite":77, "existent":77, "expulsions":77, "job-training":77, "carport":77, "woodshed":77, "gravitationally":77, "topcoat":77, "folktales":77, "basmati":77, "tambourine":77, "simultaneity":77, "boggy":77, "sheaths":77, "daybed":77, "corded":77, "principalities":77, "billable":77, "provencal":77, "butane":77, "beta-carotene":77, "interconnect":77, "sop":77, "subpopulations":77, "spiritualism":77, "persimmons":77, "cybernetic":77, "skateboarders":77, "similes":77, "herder":77, "histopathologic":77, "albacore":77, "synoptic":77, "torsion":77, "benchmarking":77, "subtype":77, "off-task":77, "chlorination":77, "ghoul":77, "familiarization":77, "amerindian":77, "conciliar":77, "tumours":77, "controllability":77, "ischaemic":77, "turbinate":77, "elven":77, "grief-stricken":77, "detracts":77, "exulted":77, "admonishing":77, "simple-minded":77, "enraptured":77, "well-paying":77, "insinuate":77, "shuns":77, "nobly":77, "hyperventilating":77, "devours":77, "ruffle":77, "off-again":77, "chastise":77, "jolts":77, "demystify":77, "red-eyed":77, "dramatized":77, "futilely":77, "bluesy":77, "simmers":77, "light-filled":77, "form-fitting":77, "bankrupting":77, "stockpiled":77, "encampments":77, "jacking":77, "receptacles":77, "pain-free":77, "misrepresentations":77, "inconsiderate":77, "creaks":77, "shakeout":77, "unprocessed":77, "dubbing":77, "bloodlines":77, "grecian":77, "timeouts":77, "commas":77, "hand-drawn":77, "oases":77, "anticommunist":77, "maximum-security":77, "imperialistic":77, "laxity":77, "virginian":77, "juke":77, "mid-life":77, "gigabytes":77, "proffer":77, "hippocratic":77, "damsel":77, "suckling":77, "incompleteness":77, "roadhouse":77, "folkloric":77, "aids-related":77, "nuisances":77, "identifier":77, "junket":77, "balanced-budget":77, "pecorino":77, "urethra":77, "thirteenth-century":77, "salicylic":77, "antilock":77, "honeybee":77, "tenure-track":77, "backsplash":77, "francophone":77, "telemarketer":77, "augustinian":77, "bellman":77, "adjusters":77, "crusher":77, "multipolar":77, "astrophotography":77, "bulgarians":77, "test-taking":77, "procreative":77, "fen":77, "bandy":77, "eschatology":77, "portables":77, "croc":77, "dielectric":77, "double-click":77, "exurban":77, "t-bone":77, "ephedra":77, "maquiladoras":77, "learner-centered":77, "palatal":77, "imploded":77, "contortions":77, "agonize":77, "unsurprising":77, "bonkers":77, "unsaid":77, "tenable":77, "handpicked":77, "eight-month":77, "nourishes":77, "dubs":77, "showpiece":77, "embarrassments":77, "unaffordable":77, "callousness":77, "glimpsing":77, "notched":77, "usurping":77, "sacrilegious":77, "profuse":77, "tramped":77, "half-truths":77, "money-saving":77, "inoculate":77, "full-court":77, "admonish":77, "unfamiliarity":77, "mid-20th":77, "wall-mounted":77, "presidencies":77, "wunderkind":77, "fiends":77, "officialdom":77, "callow":77, "whirred":77, "follow-on":77, "re-evaluation":77, "disharmony":77, "layover":77, "scribbles":77, "squirms":77, "magnetically":77, "milked":77, "inflexibility":77, "tormentors":77, "anti-tank":77, "plated":77, "overvalued":77, "transparencies":77, "arranger":77, "invalidated":77, "cargoes":77, "multi-national":77, "slims":77, "extinguishers":77, "postmark":77, "undercooked":77, "pantries":77, "throwers":77, "air-quality":77, "horsehair":77, "recumbent":77, "pointe":77, "bloodstains":77, "epinephrine":77, "business-as-usual":77, "hunter-gatherer":77, "specializations":77, "hellenistic":77, "scepter":77, "aborigines":77, "anticancer":77, "barrens":77, "solder":77, "savannas":77, "bicultural":77, "baathists":77, "nonstate":77, "paupers":77, "buyback":77, "slovenian":77, "deconstructive":77, "retest":77, "koi":77, "rhizomes":77, "yeti":77, "radiative":77, "hypoxia":77, "roan":77, "quilters":77, "aspartame":77, "progestin":77, "crappies":77, "aphid":77, "mmm-hm":77, "phages":77, "tempts":77, "stymie":77, "commandeered":77, "ricocheting":77, "deluded":77, "admonishes":77, "fleshed":77, "out-and-out":77, "shirk":77, "gritting":77, "straight-up":77, "toe-to-toe":77, "whines":77, "questing":77, "dark-eyed":77, "face-saving":77, "conundrums":77, "fatuous":77, "disrepute":77, "cost-conscious":77, "unexplainable":77, "vertiginous":77, "thrumming":77, "cop-out":77, "recessionary":77, "hypersensitive":77, "toehold":77, "cross-eyed":77, "straight-a":77, "co-sponsors":77, "cackle":77, "preternatural":77, "black-market":77, "wiggles":77, "fair-haired":77, "meltdowns":77, "proscribed":77, "chanced":77, "red-carpet":77, "boned":77, "disfigurement":77, "ordinariness":77, "ex-wives":77, "four-thirty":77, "mudslides":77, "masterworks":77, "adornments":77, "discontents":77, "ex-con":77, "soviet-era":77, "canteens":77, "pan-fried":77, "third-base":77, "zoned":77, "enchilada":77, "stigmatizing":77, "songbook":77, "overconfidence":77, "city-state":77, "double-wide":77, "prima":77, "caretaking":77, "widgets":77, "codification":77, "nonrenewable":77, "wench":77, "partygoers":77, "tarpaulin":77, "cajun":77, "downgrade":77, "shantytown":77, "second-seeded":77, "slammer":77, "architectures":77, "antihistamine":77, "concertos":77, "globalizing":77, "stallions":77, "colonizer":77, "ere":77, "ficus":77, "connoisseurship":77, "poisonings":77, "parodic":77, "manservant":77, "anti-imperialist":77, "telephony":77, "stamens":77, "hemophilia":77, "bisexuality":77, "midshipmen":77, "subnational":77, "weft":77, "guineas":77, "low-achieving":77, "stagehand":77, "randomisation":77, "skipjack":77, "qubit":77, "well-appointed":77, "snared":77, "outstrip":77, "refutes":77, "rocketed":77, "damnedest":77, "gorging":77, "keener":77, "tirades":77, "relegating":77, "portends":77, "masterly":77, "agreeably":77, "mightiest":77, "gurgled":77, "beseeching":77, "defecting":77, "emotionless":77, "provocateur":77, "axiomatic":77, "hyping":77, "insinuation":77, "hedged":77, "junctures":77, "boilerplate":77, "thuds":77, "season-opening":77, "heavy-metal":77, "terminates":77, "post-civil":77, "spring-loaded":77, "dogging":77, "psychopathic":77, "antiquarian":77, "double-sided":77, "below-average":77, "snakeskin":77, "top-five":77, "doer":77, "claret":77, "machined":77, "downgrading":77, "toxicologist":77, "shams":77, "undrafted":77, "foreign-language":77, "schmuck":77, "yugoslavian":77, "cross-dressing":77, "bathers":77, "diurnal":77, "baptize":77, "headphone":77, "exfoliate":77, "fornication":77, "allegories":77, "hovel":77, "oceanographer":77, "dicks":77, "lynchings":77, "courtesan":77, "sharpshooters":77, "pirated":77, "mobiles":77, "tangerines":77, "pre-trial":77, "buffaloes":77, "duffle":77, "physiognomy":77, "low-light":77, "laxatives":77, "smut":77, "hiya":77, "irishmen":77, "mufti":77, "mesopotamian":77, "blacklist":77, "prognostic":77, "sephardic":77, "byway":77, "biphenyls":77, "extraterritorial":77, "spurning":77, "striper":77, "dangerousness":77, "refrigerants":77, "hyoid":77, "mincing":77, "inaugurate":77, "debuting":77, "replenished":77, "unravels":77, "demoralizing":77, "helpings":77, "dwelled":77, "two-volume":77, "instigator":77, "abhors":77, "drizzling":77, "stapled":77, "gentility":77, "avocation":77, "reentered":77, "straight-backed":77, "maneuverable":77, "gyrating":77, "readies":77, "vanquish":77, "twosome":77, "three-ring":77, "casualness":77, "snored":77, "recanted":77, "salesmanship":77, "ceremoniously":77, "outspent":77, "above-ground":77, "ticklish":77, "streaky":77, "sulky":77, "uppity":77, "charlatan":77, "bird-watching":77, "phosphorescent":77, "ah-ha":77, "bathwater":77, "nine-thirty":77, "loners":77, "corroborates":77, "sculptured":77, "roofed":77, "censured":77, "farts":77, "knee-length":77, "knockoffs":77, "felling":77, "indicting":77, "pigmentation":77, "prophesy":77, "plenitude":77, "anti-crime":77, "unedited":77, "open-door":77, "inauthentic":77, "privileging":77, "sleepovers":77, "civilly":77, "non-political":77, "teleconference":77, "ach":77, "school-record":77, "snares":77, "zippy":77, "dinnerware":77, "vacuums":77, "catheters":77, "hoodie":77, "concord":77, "gibbous":77, "sovereigns":77, "horoscope":77, "synchronicity":77, "totalizing":77, "lesbianism":77, "organza":77, "anti-trust":77, "decapitation":77, "cur":77, "non-jews":77, "higher-education":77, "mosses":77, "air-traffic":77, "electromechanical":77, "provisioning":77, "videogames":77, "tweens":77, "foremen":77, "vernal":77, "philistines":77, "interethnic":77, "cobras":77, "reapportionment":77, "ashram":77, "nucleic":77, "hedgerow":77, "participative":77, "tubal":77, "survivorship":77, "acadian":77, "reeking":77, "rebuked":77, "scooting":77, "revolted":77, "airlifted":77, "slogged":77, "demurely":77, "speedier":77, "decries":77, "vaguest":77, "cooperates":77, "disembarked":77, "six-time":77, "unturned":77, "lank":77, "underused":77, "tricking":77, "disassemble":77, "overreach":77, "smugness":77, "bungled":77, "confidants":77, "decorous":77, "clubbing":77, "equivocation":77, "ambles":77, "disquiet":77, "careens":77, "pricking":77, "critiqued":77, "polarize":77, "repute":77, "high-backed":77, "spineless":77, "forsaking":77, "crumples":77, "pinstriped":77, "splicing":77, "dry-cleaning":77, "kickback":77, "delicatessen":77, "non-christians":77, "turbocharged":77, "preferentially":77, "rock-and-roll":77, "trellises":77, "catatonic":77, "dairies":77, "malignancies":77, "begat":77, "tribulation":77, "toga":77, "aww":77, "oregonian":77, "recurrences":77, "taster":77, "nappy":77, "consumptive":77, "irregulars":77, "junctions":77, "loaders":77, "trilateral":77, "adjuncts":77, "non-linear":77, "multicollinearity":77, "springform":77, "coptic":77, "creamery":77, "food-borne":77, "eigenvalue":77, "carotenoids":77, "calibers":77, "varmint":77, "mississippian":77, "conditionality":77, "polygamist":77, "disjuncture":77, "slipstream":77, "plovers":77, "arthurian":77, "encoder":77, "parathyroid":77, "narrativity":77, "dorsiflexion":77, "abounded":78, "puttering":78, "alacrity":78, "bedecked":78, "flaunted":78, "sure-fire":78, "boggles":78, "nagged":78, "hunkering":78, "well-tended":78, "stashing":78, "guzzling":78, "smoothest":78, "banishing":78, "lobbed":78, "action-packed":78, "unbutton":78, "repels":78, "suggestively":78, "flare-up":78, "clandestinely":78, "mothballs":78, "overpaid":78, "conniving":78, "tie-dyed":78, "anti-establishment":78, "achy":78, "tapering":78, "sowed":78, "jeering":78, "scavenge":78, "blurb":78, "expeditious":78, "pear-shaped":78, "starlets":78, "frailties":78, "facetious":78, "footloose":78, "pulpits":78, "abdicate":78, "infirmity":78, "scurrilous":78, "doodling":78, "renegades":78, "nylons":78, "hater":78, "deporting":78, "personify":78, "on/off":78, "directorship":78, "ascendance":78, "pre-med":78, "worriedly":78, "choker":78, "high-capacity":78, "refs":78, "dissenter":78, "regenerating":78, "remanded":78, "icebreaker":78, "jive":78, "drumstick":78, "shaming":78, "spooks":78, "splints":78, "remotes":78, "monogram":78, "overdoses":78, "drillers":78, "wrecker":78, "collectivity":78, "two-level":78, "bifurcation":78, "transfiguration":78, "torturers":78, "streamer":78, "domestics":78, "stepmom":78, "vellum":78, "juggler":78, "carjacking":78, "skiffs":78, "stochastic":78, "recombination":78, "epistolary":78, "ethnics":78, "ewes":78, "marquess":78, "binomial":78, "venezuelans":78, "hantavirus":78, "africanized":78, "globe-trotting":78, "brutalized":78, "re-creates":78, "mollify":78, "transpire":78, "midstream":78, "predominates":78, "sweet-smelling":78, "fragmenting":78, "joyless":78, "officious":78, "frisson":78, "zing":78, "overtakes":78, "torpor":78, "big-picture":78, "lustful":78, "codirector":78, "keepsake":78, "undergrad":78, "two-foot":78, "parachuting":78, "waggled":78, "send-off":78, "intemperate":78, "pauper":78, "consecutively":78, "sardonically":78, "privation":78, "mid-1930s":78, "hallucinogenic":78, "ratifying":78, "aspirants":78, "eighty-nine":78, "teutonic":78, "top-end":78, "low-growing":78, "muggers":78, "half-price":78, "handoff":78, "skateboards":78, "faithless":78, "brain-dead":78, "bunching":78, "infidel":78, "sugar-free":78, "walkable":78, "quack":78, "aah":78, "pussycat":78, "involvements":78, "abstention":78, "drug-addicted":78, "cavalcade":78, "center-right":78, "sealant":78, "carbonated":78, "pavements":78, "subjection":78, "stickiness":78, "decal":78, "stockpot":78, "handhold":78, "literati":78, "flatiron":78, "rodeos":78, "cued":78, "unapproved":78, "seasonality":78, "wonk":78, "semistructured":78, "brioche":78, "cask":78, "moralism":78, "sheiks":78, "imperialists":78, "sprayer":78, "objectors":78, "basketry":78, "bluebirds":78, "spreader":78, "electability":78, "hi-fi":78, "nonlethal":78, "relapses":78, "bottomland":78, "intrastate":78, "low-fare":78, "immortals":78, "ethyl":78, "alkali":78, "subjectivities":78, "crankbaits":78, "speciation":78, "franchisee":78, "landfilling":78, "supernovas":78, "iridium":78, "anticompetitive":78, "maasai":78, "ill-suited":78, "deride":78, "beefed":78, "tongue-tied":78, "endear":78, "singlehandedly":78, "curvaceous":78, "mutely":78, "military-style":78, "misspelled":78, "come-from-behind":78, "know-it-all":78, "limber":78, "jabbering":78, "numbed":78, "thoroughgoing":78, "clank":78, "seven-time":78, "squirted":78, "clubby":78, "goner":78, "dramatizing":78, "bazaars":78, "hard-packed":78, "redevelop":78, "ember":78, "elementary-school":78, "groggily":78, "centralize":78, "city-owned":78, "co-creator":78, "reemergence":78, "capsized":78, "masher":78, "self-perpetuating":78, "queen-size":78, "premiering":78, "spattering":78, "strategizing":78, "coercing":78, "stoppers":78, "motherless":78, "gestural":78, "third-degree":78, "bleakly":78, "immobilize":78, "plexus":78, "usages":78, "typhoid":78, "team-high":78, "canaries":78, "red-tailed":78, "marksman":78, "freelancer":78, "typist":78, "propulsive":78, "sashimi":78, "dachshund":78, "incontinent":78, "cocoons":78, "lookouts":78, "test-tube":78, "stepdad":78, "lodgepole":78, "junipers":78, "two-handed":78, "catnip":78, "fungicides":78, "recon":78, "legume":78, "smelting":78, "mutual-fund":78, "waterproofing":78, "german-speaking":78, "psychoactive":78, "baselines":78, "daffodil":78, "quinine":78, "hegemon":78, "hegelian":78, "scrubber":78, "n-word":78, "gramophone":78, "toboggan":78, "exegetical":78, "neoplasm":78, "ayurvedic":78, "islet":78, "ancova":78, "yellowtail":78, "namibian":78, "batterers":78, "centenarians":78, "ecclesiological":78, "bonobos":78, "telomeres":78, "ballasts":78, "peppering":78, "mouthfuls":78, "blackest":78, "frustratingly":78, "hunching":78, "roughed":78, "fiercer":78, "grousing":78, "lolled":78, "navigates":78, "disdainfully":78, "devolve":78, "endeared":78, "standard-issue":78, "liveliness":78, "ploys":78, "pizzazz":78, "slugged":78, "miscreants":78, "unbuttoning":78, "guardedly":78, "hard-to-find":78, "rectified":78, "consummated":78, "burbling":78, "endearment":78, "incognito":78, "belly-up":78, "damming":78, "replant":78, "emergency-room":78, "noisier":78, "beget":78, "scarcer":78, "fifth-year":78, "miasma":78, "lumberjack":78, "fallacious":78, "soapbox":78, "ruptures":78, "clearings":78, "two-night":78, "saboteurs":78, "mediumhigh":78, "flashbulbs":78, "eccentrics":78, "conga":78, "sidearm":78, "mourner":78, "moisturize":78, "prioritization":78, "curtsy":78, "flasks":78, "premeditation":78, "word-processing":78, "stalactites":78, "decking":78, "hypersensitivity":78, "pyramidal":78, "employable":78, "synchrony":78, "lefthander":78, "consumerist":78, "thumbprint":78, "nonreactive":78, "dyeing":78, "safflower":78, "hemlocks":78, "fireballs":78, "nonconference":78, "topos":78, "tureen":78, "whisperer":78, "betrothal":78, "intrauterine":78, "radii":78, "sphincter":78, "lyre":78, "longshoremen":78, "cavalrymen":78, "flanges":78, "unrated":78, "incommensurable":78, "hypersonic":78, "airstream":78, "tradable":78, "handhelds":78, "fleur":78, "plover":78, "applicators":78, "tipi":78, "mid-sentence":78, "lightens":78, "blanketing":78, "expansively":78, "enlarges":78, "busloads":78, "jibe":78, "sidetracked":78, "ten-foot":78, "mingles":78, "ingratiating":78, "hollowed":78, "movie-star":78, "three-page":78, "compiles":78, "telegenic":78, "gurgle":78, "instigate":78, "sloppiness":78, "fretful":78, "comeuppance":78, "overflows":78, "flighty":78, "leering":78, "sluggishly":78, "chauvinistic":78, "profundity":78, "reckons":78, "mustachioed":78, "convulsive":78, "nerve-wracking":78, "cartwheels":78, "flamed":78, "enslave":78, "jeers":78, "orgies":78, "go-round":78, "triumvirate":78, "re-enactment":78, "theoreticians":78, "drinkable":78, "imperiled":78, "trailblazer":78, "self-referential":78, "divining":78, "pre-election":78, "upper-middle":78, "imitative":78, "high-priority":78, "sashes":78, "landscaper":78, "unzips":78, "reducible":78, "soft-drink":78, "public-policy":78, "flogging":78, "swearing-in":78, "jiffy":78, "one-term":78, "child-bearing":78, "interchanges":78, "ballerinas":78, "baguettes":78, "disown":78, "apostasy":78, "remix":78, "boxcars":78, "ducklings":78, "subcompact":78, "refundable":78, "gift-giving":78, "tampons":78, "succulents":78, "rheumatic":78, "morning-after":78, "carnivals":78, "semantically":78, "fetishism":78, "comity":78, "eco":78, "hospital-based":78, "absorber":78, "rescheduling":78, "set-aside":78, "child-support":78, "child-centered":78, "plotter":78, "receivables":78, "bequests":78, "thruster":78, "stalkers":78, "overrepresentation":78, "hypertrophy":78, "chileans":78, "azimuth":78, "tahini":78, "rhesus":78, "taxonomists":78, "cyborg":78, "tracheal":78, "self-organization":78, "telework":78, "subsiding":78, "bare-chested":78, "conglomeration":78, "cajoled":78, "martyred":78, "insinuated":78, "foreshadowed":78, "pettiness":78, "well-versed":78, "dispelling":78, "poetically":78, "popularize":78, "chastising":78, "stipulating":78, "life-altering":78, "polyglot":78, "leapfrog":78, "prettily":78, "tacking":78, "out-of-work":78, "unmolested":78, "tough-guy":78, "waffling":78, "deviated":78, "underpins":78, "blotchy":78, "uncrowded":78, "acclimate":78, "micromanage":78, "pervading":78, "appended":78, "lattes":78, "inflates":78, "banquettes":78, "masterwork":78, "destitution":78, "pretenders":78, "sexless":78, "firming":78, "brainless":78, "superficiality":78, "keying":78, "draught":78, "bifocals":78, "enabler":78, "hereabouts":78, "immunize":78, "glues":78, "panoramas":78, "unrepresentative":78, "tortoiseshell":78, "hurtles":78, "shrouds":78, "early-stage":78, "inoculated":78, "fourths":78, "dragnet":78, "standardizing":78, "two-by-four":78, "rosaries":78, "racetracks":78, "heckler":78, "flagstones":78, "gamer":78, "maximally":78, "anti-missile":78, "energizer":78, "re-education":78, "immunological":78, "flatbread":78, "engraver":78, "minotaur":78, "clavicle":78, "non-communist":78, "misdiagnosis":78, "bidirectional":78, "foreignness":78, "stakeout":78, "vulva":78, "premenstrual":78, "wholes":78, "caster":78, "seafarers":78, "feu":78, "embolism":78, "one-yard":78, "simplex":78, "nightingale":78, "essentialism":78, "german-american":78, "oxytocin":78, "compilers":78, "signal-to-noise":78, "diarist":78, "vortices":78, "megachurches":78, "diachronic":78, "liberians":78, "kiva":78, "in-group":78, "immobilization":78, "smallmouths":78, "computer-mediated":78, "uighurs":78, "newsies":78, "no-holds-barred":78, "luxuriously":78, "bandied":78, "gape":78, "crispness":78, "witless":78, "flail":78, "encircles":78, "bespeaks":78, "redoing":78, "grievously":78, "blistered":78, "ovations":78, "resetting":78, "high-spirited":78, "schmoozing":78, "tactician":78, "coexisted":78, "shortchanged":78, "outshine":78, "repressing":78, "drivel":78, "gadfly":78, "saddens":78, "viciousness":78, "romping":78, "sniffled":78, "connote":78, "snobbish":78, "clacking":78, "gamesmanship":78, "insomniac":78, "birdlike":78, "reintroducing":78, "bookends":78, "ninety-seven":78, "sulfurous":78, "tie-in":78, "edification":78, "approbation":78, "chug":78, "excelling":78, "getup":78, "stranding":78, "barefooted":78, "dims":78, "fieldstone":78, "anti-terrorist":78, "destructiveness":78, "travail":78, "special-effects":78, "sauted":78, "self-hatred":78, "person-to-person":78, "tabulation":78, "non-binding":78, "renegotiation":78, "repertoires":78, "dioramas":78, "foxhole":78, "centerline":78, "recuse":78, "cloaking":78, "conflictual":78, "axioms":78, "urology":78, "breakwater":78, "gay-rights":78, "stenographer":78, "redoubt":78, "sundial":78, "nonsexual":78, "nuptial":78, "cognitive-behavioral":78, "beefsteak":78, "batten":78, "roadie":78, "self-fulfillment":78, "homeostasis":78, "cairn":78, "ethnology":78, "hominy":78, "chancery":78, "oil-for-food":78, "rainmaker":78, "impoundment":78, "compactor":78, "paroles":78, "dura":78, "islamization":78, "speedskating":78, "quintile":78, "bioremediation":78, "methylation":78, "slinking":78, "well-read":78, "outpaced":78, "drizzly":78, "pocked":78, "infuriates":78, "cliched":78, "misidentified":78, "imploding":78, "decorates":78, "estimable":78, "wreathed":78, "spares":78, "out-of-towners":78, "four-page":78, "pouty":78, "around-the-clock":78, "brawling":78, "scads":78, "showplace":78, "grafted":78, "measurably":78, "farsighted":78, "come-on":78, "contrivance":78, "clanged":78, "wadded":78, "velour":78, "buffeting":78, "mountainsides":78, "proselytize":78, "rationalizations":78, "cringes":78, "nine-day":78, "ballgames":78, "edifices":78, "moralizing":78, "fair-skinned":78, "etch":78, "court-martialed":78, "high-calorie":78, "puddings":78, "hibernate":78, "blitzing":78, "foreshadowing":78, "neuroses":78, "hyphenated":78, "yuletide":78, "perm":78, "dormancy":78, "searchlights":78, "multiday":78, "hanky":78, "retrievers":78, "scandinavians":78, "right-of-way":78, "commonest":78, "humanness":78, "unbelief":78, "advisement":78, "parliamentarian":78, "sisal":78, "splat":78, "datum":78, "ventilated":78, "micrometers":78, "ionizing":78, "blow-up":78, "henhouse":78, "monosyllabic":78, "urethane":78, "anomie":78, "reprimands":78, "allergist":78, "cabbies":78, "deviled":78, "self-propelled":78, "sultans":78, "peony":78, "cannibalistic":78, "hollandaise":78, "arrhythmias":78, "in-vitro":78, "cohabiting":78, "bluegill":78, "intranet":78, "desiccation":78, "seance":78, "injunctive":78, "phenotypes":78, "imago":78, "histamine":78, "subsidiarity":78, "mushroomed":78, "gawky":78, "delude":78, "rankled":78, "seven-member":78, "well-financed":78, "chiding":78, "ferried":78, "longer-lasting":78, "narrowness":78, "tottering":78, "modernized":78, "safeguarded":78, "maniacally":78, "retching":78, "stress-free":78, "lubricate":78, "glossed":78, "friendliest":78, "engulfs":78, "pranced":78, "babbled":78, "undoes":78, "scolds":78, "accolade":78, "baddest":78, "pint-sized":78, "bawled":78, "moping":78, "detonating":78, "non-threatening":78, "madhouse":78, "winnowing":78, "utensil":78, "hollers":78, "co-conspirator":78, "toasters":78, "separable":78, "infidelities":78, "on-the-ground":78, "dings":78, "moviemaking":78, "billows":78, "heritages":78, "gainful":78, "natural-born":78, "streetlamp":78, "enhancer":78, "stereotypically":78, "loveless":78, "decomposed":78, "cold-war":78, "polarities":78, "mitten":78, "acme":78, "pleaser":78, "top-performing":78, "persecutions":78, "tiling":78, "gilding":78, "lupine":78, "permissiveness":78, "hydrating":78, "strength-training":78, "tidewater":78, "usurpation":78, "pro-family":78, "carpool":78, "tramps":78, "moderns":78, "spectre":78, "doilies":78, "alders":78, "deferment":78, "dander":78, "wildlands":78, "medians":78, "subcontracting":78, "sparklers":78, "serbians":78, "strudel":78, "shiner":78, "four-speed":78, "dockers":78, "psychoanalysts":78, "transponder":78, "lope":78, "salvific":78, "projective":78, "shorty":78, "case-control":78, "firmware":78, "maronite":78, "inelastic":78, "snappers":78, "shales":78, "mestizos":78, "grenadier":78, "taskbar":78, "catchwords":78, "abut":78, "cognoscenti":78, "loyally":78, "first-term":78, "slurring":78, "chucked":78, "overrides":78, "laughingstock":78, "abutting":78, "quarreled":78, "mishandled":78, "unifies":78, "cast-off":78, "berate":78, "oldfashioned":78, "exultant":78, "rescheduled":78, "unseeing":78, "clanked":78, "lidded":78, "pursing":78, "teeters":78, "goof":78, "recapturing":78, "quaking":78, "government-controlled":78, "concomitantly":78, "knotting":78, "corpulent":78, "latching":78, "missives":78, "dismembered":78, "up-tempo":78, "obfuscation":78, "in-law":78, "low-flying":78, "reactivate":78, "regress":78, "cred":78, "incompletely":78, "grimmer":78, "terriers":78, "foodie":78, "biggie":78, "lullabies":78, "barstool":78, "light-emitting":78, "right-field":78, "adjudicated":78, "convulsion":78, "overpasses":78, "ready-to-eat":78, "morrow":78, "intelligence-gathering":78, "replenishment":78, "coinage":78, "texted":78, "bedsheet":78, "keyboardist":78, "upperclassmen":78, "freelancing":78, "authoring":78, "potentiality":78, "third-graders":78, "off-screen":78, "digressions":78, "manicurist":78, "ping-pong":78, "shantytowns":78, "sapphires":78, "backstory":78, "evictions":78, "truth-telling":78, "meow":78, "concubines":78, "ellipses":78, "chicory":78, "vintners":78, "harvesters":78, "opalescent":78, "pacemakers":78, "housecoat":78, "off-peak":78, "putters":78, "aviary":78, "lintel":78, "evolutionarily":78, "nondiscrimination":78, "sommelier":78, "disequilibrium":78, "cabinetmaker":78, "underclassmen":78, "torsional":78, "incubated":78, "verbena":78, "gamefish":78, "family-planning":78, "dual-use":78, "orangutan":78, "spectrometers":78, "valentines":78, "pro-independence":78, "pro-lifers":78, "structuralism":78, "recessive":78, "adjutant":78, "junk-bond":78, "histological":78, "pygmies":78, "predisposing":78, "schooners":78, "flyfishing":78, "instrumentality":78, "anesthesiologists":78, "seismologists":78, "topological":78, "pushup":78, "mmm-hmm":78, "cookstove":78, "interferometry":78, "icelanders":78, "self-determined":78, "shi'i":78, "aunty":78, "precompetitive":78, "etceteras":78, "unequaled":78, "exuberantly":78, "doted":78, "balking":78, "gyrations":78, "fortifying":78, "unawares":78, "gossipy":78, "depressingly":78, "jaunts":78, "concisely":78, "despaired":78, "tempering":78, "downpours":78, "foretold":78, "hawked":78, "animatedly":78, "ascribes":78, "hardheaded":78, "five-bedroom":78, "re-establishing":78, "ponytails":78, "ignoble":78, "formalize":78, "cycled":78, "wrap-up":78, "capitulated":78, "slushy":78, "ribcage":78, "hungrier":78, "longhand":78, "impudent":78, "pre-empt":78, "overemphasis":78, "trespassers":78, "steadfastness":78, "preserver":78, "stammer":78, "buckshot":78, "phew":78, "duller":78, "jugglers":78, "snouts":78, "mismatches":78, "full-blooded":78, "brain-damaged":78, "glamor":78, "tiredly":78, "croon":78, "do-nothing":78, "compasses":78, "borrowings":78, "faceted":78, "executioners":78, "toupee":78, "masochistic":78, "refinanced":78, "unionize":78, "dungarees":78, "crossbar":78, "bratwurst":78, "poodles":78, "scrim":78, "pampers":78, "sixth-graders":78, "sugared":78, "samaritans":78, "microfiber":78, "acupuncturist":78, "breakouts":78, "nonparametric":78, "vinegars":78, "softener":78, "salsas":78, "reverberation":78, "near-infrared":78, "weavings":78, "pogo":78, "multi-cultural":78, "teamster":78, "angora":78, "premenopausal":78, "hombres":78, "demilitarization":78, "abductors":78, "art-historical":78, "homoerotic":78, "frittata":78, "self-representation":78, "scoutmaster":78, "political-economic":78, "burro":78, "yurt":78, "gnostic":78, "wraith":78, "formatted":78, "private-equity":78, "wildland":78, "retributive":78, "autologous":78, "tai":78, "patriarchate":78, "lobstermen":78, "ototoxicity":78, "well-chosen":78, "undisguised":78, "make-or-break":78, "nosedive":78, "slovenly":78, "reappearing":78, "halfheartedly":78, "self-importance":78, "skims":78, "venal":78, "diffident":78, "editor-at-large":78, "outdoorsy":78, "lugubrious":78, "blare":78, "prouder":78, "repainted":78, "snipping":78, "re-examination":78, "amputate":78, "perpetrating":78, "stagnating":78, "slobbering":78, "walkie-talkies":78, "fiefdoms":78, "redistributing":78, "tape-recorded":78, "overloading":78, "one-mile":78, "flashpoint":78, "writer-director":78, "despondency":78, "nothings":78, "loped":78, "munchies":78, "singer/songwriter":78, "trundled":78, "noiselessly":78, "wanderlust":78, "vacantly":78, "grammatically":78, "whacks":78, "kingpins":78, "freefall":78, "hobbyist":78, "call-up":78, "hostesses":78, "cornflakes":78, "percussionist":78, "galas":78, "immunized":78, "brinkmanship":78, "peal":78, "frizz":78, "bullion":78, "employer-sponsored":78, "poinsettias":78, "crime-scene":78, "icicle":78, "game-high":78, "text-based":78, "woodcuts":78, "peer-to-peer":78, "poorhouse":78, "mother-child":78, "volcanism":78, "sixers":78, "interleague":78, "reconnection":78, "kinematics":78, "vee":78, "cardholders":78, "diamondback":78, "enteric":78, "bluegills":78, "narcolepsy":78, "vestibules":78, "krill":78, "non-athletes":78, "open-access":78, "intranasal":78, "astoundingly":78, "disappoints":78, "seethed":78, "delves":78, "voluble":78, "checkbooks":78, "meshed":78, "juggles":78, "exacts":78, "boatload":78, "stilted":78, "encumbered":78, "gouge":78, "belt-tightening":78, "fluidly":78, "funereal":78, "viscerally":78, "disapproves":78, "exultation":78, "grayer":78, "convulsed":78, "grim-faced":78, "watchword":78, "strong-arm":78, "perpetrate":78, "loaning":78, "misconstrued":78, "inflicts":78, "reenact":78, "fess":78, "ashy":78, "trouble-free":78, "mavens":78, "assassinating":78, "fluffed":78, "high-security":78, "even-handed":78, "seashell":78, "co-starring":78, "westernmost":78, "tinkle":78, "discomforts":78, "groused":78, "dithering":78, "nestling":78, "artificiality":78, "gabled":78, "co-founders":78, "greening":78, "squalls":78, "surnames":78, "home-improvement":78, "jetliners":78, "kink":78, "kisser":78, "fallacies":78, "erasers":78, "early-warning":78, "reboot":78, "pockmarked":78, "awakenings":78, "trudges":78, "downslope":78, "faustian":78, "sandbars":78, "tingly":78, "crevasses":78, "cornstalks":78, "two-word":78, "neutrally":78, "anti-ballistic":78, "hedgerows":78, "cannellini":78, "lawmen":78, "legroom":78, "anti-poverty":78, "childrearing":78, "periwinkle":78, "exhibitionism":78, "minicamp":78, "inundation":78, "aussies":78, "tong":78, "slipcovers":78, "oil-free":78, "whiteboard":78, "sprains":78, "cosmonaut":78, "polygamous":78, "tamale":78, "fescue":78, "postdoc":78, "centurion":78, "minstrels":78, "counterfeiters":78, "pressure-treated":78, "gatehouse":78, "knowed":78, "information-processing":78, "lorry":78, "porpoise":78, "neutralization":78, "steerer":78, "cryptography":78, "problem-based":78, "byzantines":78, "adder":78, "anima":78, "reinforcer":78, "metafiction":78, "twinship":78, "dataflow":78, "matronly":78, "siphoned":78, "hefting":78, "ogle":78, "movingly":78, "hands-down":78, "slumbering":78, "devilishly":78, "instigation":78, "windowpanes":78, "twenty-year":78, "jeered":78, "palpably":78, "seduces":78, "bulkier":78, "last-place":78, "scrounging":78, "possessor":78, "reverential":78, "questioningly":78, "spurting":78, "shitting":78, "inconsistently":78, "congressionally":78, "hideouts":78, "socialites":78, "customizable":78, "keening":78, "somersaults":78, "beachside":78, "functionary":78, "snuffling":78, "skinnier":78, "quitter":78, "pruned":78, "catch-all":78, "barging":78, "blubbering":78, "bigness":78, "interest-free":78, "goosebumps":78, "unchangeable":78, "omnipotence":78, "low-cal":78, "seersucker":78, "countrywide":78, "well-ordered":78, "brogue":78, "survivability":78, "scalps":78, "green-eyed":78, "belles":78, "toughs":78, "free-speech":78, "housings":78, "twisters":78, "fetishes":78, "analogues":78, "matinees":78, "reconstitution":78, "low-volume":78, "nesters":78, "docent":78, "snowmen":78, "violinists":78, "culling":78, "recyclers":78, "switchblade":78, "visors":78, "gunship":78, "kingfisher":78, "semiarid":78, "uncivil":78, "moats":78, "unidimensional":78, "non-members":78, "non-citizens":78, "hematoma":78, "communiques":78, "hatchlings":78, "condenser":78, "archangel":78, "waypoints":78, "prowler":78, "majoritarian":78, "great-power":78, "polyp":78, "jihadi":78, "carcinomas":78, "morels":78, "superconductors":78, "tahitian":78, "habituation":78, "rectification":78, "breathability":78, "alkyd":78, "self-rated":78, "introverts":78, "cajuns":78, "heritability":78, "leptin":78, "cosmic-ray":78, "necromancer":78, "parent-adolescent":78, "endolymphatic":78, "disarmingly":78, "skewered":78, "oft-repeated":78, "intentioned":78, "long-gone":78, "finalizing":78, "war-era":78, "halcyon":78, "astutely":78, "crinkly":78, "enthralling":78, "refocused":78, "foretell":78, "peddled":78, "moneymaker":78, "carping":78, "goading":78, "resold":78, "blood-stained":78, "number-two":78, "uneaten":78, "debonair":78, "unmotivated":78, "travelogue":78, "well-spoken":78, "shying":78, "encloses":78, "malevolence":78, "determinative":78, "persecute":78, "redirection":78, "prankster":78, "low-rise":78, "off-the-wall":78, "charlatans":78, "sifts":78, "gawkers":78, "lipsticks":78, "burp":78, "scowls":78, "deform":78, "symmetrically":78, "netherworld":78, "clod":78, "crescents":78, "trinket":78, "atavistic":78, "push-button":78, "reprogram":78, "yucky":78, "white-water":78, "renaming":78, "wainscoting":78, "eight-inch":78, "sheaves":78, "sags":78, "pay-as-you-go":78, "woodpile":78, "consistencies":78, "untracked":78, "proscenium":78, "speculator":78, "hoaxes":78, "postindustrial":78, "zinnias":78, "discriminations":78, "ordain":78, "loafing":78, "virtual-reality":78, "mixed-media":78, "cantina":78, "inbounds":78, "humanitarianism":78, "logbook":78, "antelopes":78, "concertina":78, "blow-dry":78, "derrick":78, "paper-and-pencil":78, "strictness":78, "swami":78, "glycerin":78, "hydrostatic":78, "shi'ite":78, "ova":78, "czechoslovak":78, "life-span":78, "breast-fed":78, "sheathing":78, "rattlers":78, "nearshore":78, "left-handers":78, "apportionment":78, "vesting":78, "heuristics":78, "glycemic":78, "neuter":78, "fatness":78, "cambrian":78, "prolife":78, "rent-seeking":78, "resveratrol":78, "non-users":78, "daintily":78, "next-to-last":78, "near-fatal":78, "flout":78, "flippant":78, "expounded":78, "melded":78, "charitably":78, "cherubic":78, "kindled":78, "crumple":78, "peaceably":78, "marshaling":78, "papered":78, "keepsakes":78, "power-hungry":78, "confiscating":78, "hydrated":78, "abashed":78, "mucking":78, "inauspicious":78, "perching":78, "orbited":78, "typewritten":78, "forty-year-old":78, "reflectively":78, "repast":78, "crinkling":78, "mutable":78, "geometrically":78, "elongate":78, "knighted":78, "jumpstart":78, "wearers":78, "wakened":78, "flare-ups":78, "non-toxic":78, "tendentious":78, "sass":78, "operationalize":78, "correlative":78, "redeploy":78, "humbug":78, "tailbone":78, "propensities":78, "pre-revolutionary":78, "downstate":78, "post-graduate":78, "unidirectional":78, "passenger-side":78, "cesspool":78, "londoners":78, "primrose":78, "proteges":78, "whistleblower":78, "dignitary":78, "drop-out":78, "instabilities":78, "feminization":78, "prescription-drug":78, "floater":78, "monoculture":78, "alliteration":78, "concubine":78, "catch-and-release":78, "solarium":78, "marzipan":78, "universals":78, "cutlass":78, "individualists":78, "toot":78, "data-based":78, "totemic":78, "parolees":78, "electrolysis":78, "introversion":78, "microgravity":78, "whigs":78, "post-treatment":78, "yemenis":78, "patrollers":78, "longhouse":78, "campesino":78, "axons":78, "sidecut":78, "reflectance":78, "sculls":78, "microfinance":78, "oestrogen":78, "methylmercury":78, "extol":79, "bedeviled":79, "upended":79, "flagrantly":79, "kilter":79, "juggled":79, "maligned":79, "shamefully":79, "disperses":79, "escapade":79, "untrammeled":79, "life-or-death":79, "undercurrents":79, "jettisoned":79, "painlessly":79, "befriends":79, "flirts":79, "energizes":79, "billowy":79, "daylights":79, "unglued":79, "most-watched":79, "edgier":79, "crime-fighting":79, "remorseless":79, "inviolate":79, "gallantly":79, "ribald":79, "dignify":79, "deciphered":79, "waist-deep":79, "flunk":79, "baited":79, "longest-serving":79, "pulpy":79, "waltzes":79, "three-tiered":79, "doctored":79, "apprenticed":79, "hard-on":79, "motored":79, "rarities":79, "loggerheads":79, "hark":79, "monoliths":79, "meshes":79, "parsimony":79, "frontage":79, "senility":79, "unenforceable":79, "matchsticks":79, "incisors":79, "setters":79, "stomachache":79, "white-owned":79, "infielders":79, "stargazing":79, "exterminator":79, "coverages":79, "doormen":79, "burrs":79, "typhus":79, "male/female":79, "off-the-record":79, "cravat":79, "pornographers":79, "imprinting":79, "talmudic":79, "piglets":79, "bipedal":79, "coupes":79, "waterside":79, "storybooks":79, "groundskeeper":79, "hindi":79, "piezoelectric":79, "stockyards":79, "greyhounds":79, "symmetries":79, "interoperability":79, "masala":79, "gerontological":79, "gainer":79, "noncontact":79, "distinctness":79, "mandibular":79, "maoists":79, "sapped":79, "scrounge":79, "piney":79, "hard-to-reach":79, "consign":79, "collaborates":79, "chide":79, "threateningly":79, "standard-bearer":79, "reestablished":79, "whisks":79, "protrudes":79, "teary-eyed":79, "complimenting":79, "furthered":79, "bowled":79, "on-the-spot":79, "lusting":79, "surfed":79, "great-looking":79, "redefines":79, "twice-weekly":79, "clumped":79, "peace-loving":79, "misinterpret":79, "antic":79, "steeples":79, "multi-million":79, "starry-eyed":79, "wanly":79, "galvanizing":79, "pester":79, "immodest":79, "intricacy":79, "stumping":79, "self-protection":79, "squiggly":79, "non-negotiable":79, "timepiece":79, "mid-day":79, "mentored":79, "face-down":79, "one-game":79, "rainstorms":79, "ice-skating":79, "blitzkrieg":79, "crocheted":79, "gaga":79, "subordinating":79, "twenty-third":79, "dark-blue":79, "whisker":79, "especial":79, "name-brand":79, "self-identification":79, "oaken":79, "jawbone":79, "straights":79, "lumberyard":79, "bibliographies":79, "university-based":79, "vipers":79, "preservationist":79, "downtowns":79, "digitize":79, "drug-induced":79, "business-to-business":79, "tallow":79, "pincers":79, "wood-fired":79, "motherfuckers":79, "amidships":79, "disavowal":79, "cantonese":79, "spindles":79, "guano":79, "enactments":79, "abrogation":79, "hieroglyphs":79, "riflemen":79, "blood-sugar":79, "modifiers":79, "megahertz":79, "podiatrist":79, "kinsman":79, "headpiece":79, "triglyceride":79, "assimilationist":79, "round-robin":79, "dusters":79, "searcher":79, "thermodynamic":79, "spectrometry":79, "anglos":79, "freehold":79, "counterterrorist":79, "roadshow":79, "subsidence":79, "nativism":79, "circumcised":79, "burros":79, "coons":79, "inverter":79, "usury":79, "actin":79, "javanese":79, "nucleotides":79, "estonians":79, "audiometric":79, "alkaloids":79, "hydroponics":79, "orality":79, "torus":79, "hedonic":79, "sarcoidosis":79, "devastatingly":79, "disregards":79, "well-thought-out":79, "foul-smelling":79, "surer":79, "cone-shaped":79, "second-most":79, "department-store":79, "anticlimactic":79, "hopefulness":79, "luncheons":79, "polices":79, "cockeyed":79, "predicaments":79, "skewing":79, "floor-length":79, "antagonisms":79, "half-buried":79, "waddling":79, "gimmicky":79, "helmeted":79, "co-writer":79, "schoolbooks":79, "paged":79, "fixedly":79, "corrode":79, "greasing":79, "snarky":79, "wags":79, "stiffs":79, "willies":79, "flurries":79, "kneecaps":79, "armload":79, "entranceway":79, "copse":79, "pinging":79, "substance-abuse":79, "overviews":79, "incurs":79, "alibis":79, "perverts":79, "swampland":79, "discos":79, "lisp":79, "foil-lined":79, "exculpatory":79, "seers":79, "foredeck":79, "physicals":79, "lawman":79, "aloneness":79, "chirps":79, "toothed":79, "autocrats":79, "catapults":79, "tripe":79, "oracles":79, "mutated":79, "spoilage":79, "abortion-rights":79, "fifths":79, "masseuse":79, "suffix":79, "pinecones":79, "porpoises":79, "snowmobiling":79, "three-season":79, "dimensionality":79, "nonresident":79, "intown":79, "convective":79, "homebuilders":79, "non-whites":79, "pull-up":79, "futurism":79, "carat":79, "nubian":79, "cabby":79, "facilitative":79, "tritium":79, "muzzleloader":79, "thalidomide":79, "subfield":79, "powwows":79, "attractor":79, "transsexuals":79, "monocular":79, "man-woman":79, "terrifies":79, "moneymaking":79, "uncouth":79, "disavowed":79, "robustly":79, "infuriate":79, "repartee":79, "blunted":79, "fresh-baked":79, "detaching":79, "hand-lettered":79, "befriending":79, "fogged":79, "comport":79, "offhandedly":79, "depresses":79, "delved":79, "transpires":79, "first-name":79, "half-filled":79, "pre-world":79, "flat-footed":79, "taxpayer-funded":79, "misting":79, "glaringly":79, "suppertime":79, "headlining":79, "punchy":79, "glob":79, "croak":79, "conflate":79, "acquisitive":79, "irritations":79, "brick-and-mortar":79, "effete":79, "cuss":79, "unprincipled":79, "ebbs":79, "handcuff":79, "breadbasket":79, "diffusing":79, "chasms":79, "bug-eyed":79, "conformist":79, "re-emergence":79, "excrete":79, "organizationally":79, "locker-room":79, "squished":79, "first-served":79, "cherubs":79, "miser":79, "disqualification":79, "winner-take-all":79, "five-course":79, "mid-sixties":79, "switchback":79, "gynecologists":79, "sundaes":79, "exoticism":79, "hydrants":79, "teakettle":79, "weight-lifting":79, "tendril":79, "suboptimal":79, "altimeter":79, "contributory":79, "matting":79, "orators":79, "crystallization":79, "gender-neutral":79, "deserter":79, "homeboy":79, "aloha":79, "sassafras":79, "compaction":79, "quartermaster":79, "discards":79, "working-age":79, "terrine":79, "anemone":79, "radiologic":79, "reeducation":79, "bier":79, "braising":79, "gnomes":79, "out-of-school":79, "parsonage":79, "corns":79, "amaranth":79, "noncompliant":79, "sino-american":79, "site-based":79, "zambian":79, "compostable":79, "cochlea":79, "fistula":79, "sanitarians":79, "audiometry":79, "workhouse":79, "bolus":79, "axillary":79, "wormholes":79, "pummel":79, "tamer":79, "concocting":79, "inopportune":79, "lounged":79, "fine-tuned":79, "entrusting":79, "jeopardizes":79, "uninspiring":79, "unwound":79, "scorch":79, "sharp-eyed":79, "beautify":79, "anoint":79, "falsify":79, "weakling":79, "bafflement":79, "winded":79, "waltzed":79, "neater":79, "peachy":79, "fast-talking":79, "enrolls":79, "disbelieve":79, "appeased":79, "lawbreakers":79, "probity":79, "fenced-in":79, "likelier":79, "thrum":79, "bottoming":79, "nestles":79, "subsisting":79, "reiteration":79, "dilate":79, "steadies":79, "cable-tv":79, "canard":79, "frumpy":79, "steams":79, "viscera":79, "ornithologist":79, "decompress":79, "pretender":79, "restocking":79, "bracketing":79, "classifieds":79, "mantras":79, "two-by-fours":79, "inquisitor":79, "sacking":79, "malign":79, "endeavoring":79, "reheating":79, "marshlands":79, "foregrounds":79, "uploading":79, "salting":79, "felines":79, "favorability":79, "crossovers":79, "savants":79, "ophthalmology":79, "orthodontist":79, "sangria":79, "drainpipe":79, "widget":79, "flukes":79, "encodes":79, "furies":79, "pars":79, "hosiery":79, "prismatic":79, "hypochondriac":79, "highlighter":79, "frontcourt":79, "birdhouses":79, "sluice":79, "graphing":79, "astral":79, "uninfected":79, "antidrug":79, "asymmetries":79, "ores":79, "closed-loop":79, "volumetric":79, "hypnotist":79, "kiwis":79, "ger":79, "norepinephrine":79, "hostas":79, "criterion-referenced":79, "epidermal":79, "congenitally":79, "spyglass":79, "bodybuilders":79, "canton":79, "penlight":79, "self-perceived":79, "imitator":79, "manga":79, "handspring":79, "intramuscular":79, "eosinophils":79, "audiation":79, "perspective-taking":79, "unwisely":79, "dished":79, "choosy":79, "imprisoning":79, "mouthwatering":79, "tastier":79, "reasserted":79, "wrangle":79, "hogging":79, "tabletops":79, "cooped":79, "withstanding":79, "waft":79, "spurted":79, "speeded":79, "all-knowing":79, "lampposts":79, "mid-forties":79, "binges":79, "enticement":79, "unrecorded":79, "skintight":79, "absolved":79, "attendee":79, "dawdling":79, "courteously":79, "multi-faceted":79, "interjects":79, "electrocuted":79, "ourself":79, "toss-up":79, "stowing":79, "curly-haired":79, "biblically":79, "mealtimes":79, "diamond-shaped":79, "masthead":79, "combatting":79, "two-legged":79, "shucked":79, "rummages":79, "mousy":79, "oversupply":79, "pounces":79, "lout":79, "worldliness":79, "latticework":79, "festivity":79, "thunderclap":79, "dishwashing":79, "seatbelts":79, "levitate":79, "signalling":79, "fuckers":79, "hawkers":79, "neighborly":79, "wrangler":79, "long-grain":79, "worrier":79, "handicapping":79, "realtime":79, "antidemocratic":79, "disease-free":79, "dysfunctions":79, "workbooks":79, "noblesse":79, "fizzle":79, "fob":79, "undesired":79, "mezzo-soprano":79, "infrastructural":79, "surtax":79, "helpfulness":79, "enjoin":79, "existentialism":79, "microorganism":79, "overlord":79, "epistle":79, "non-human":79, "unsaturated":79, "stigmata":79, "defensemen":79, "badness":79, "sawmills":79, "merchandisers":79, "gazpacho":79, "unipolar":79, "lemmings":79, "woodwind":79, "colonist":79, "polis":79, "megachurch":79, "bifurcated":79, "semi-arid":79, "arcseconds":79, "revaluation":79, "poacher":79, "triads":79, "typological":79, "immunoglobulin":79, "gallium":79, "dinars":79, "asymptotic":79, "iodide":79, "headmen":79, "phishing":79, "supplanting":79, "jealousies":79, "irksome":79, "lackadaisical":79, "loquacious":79, "cat-and-mouse":79, "weather-beaten":79, "spellbinding":79, "badgering":79, "jolting":79, "passel":79, "forges":79, "clasps":79, "scrabbled":79, "reignite":79, "saviors":79, "editorialized":79, "honey-colored":79, "fondled":79, "chinks":79, "snowbound":79, "unapproachable":79, "hush-hush":79, "epiphanies":79, "falsified":79, "pileup":79, "persecuting":79, "vilify":79, "signpost":79, "raze":79, "disobeyed":79, "pent":79, "tarry":79, "progenitors":79, "sensitize":79, "pitiable":79, "soldiering":79, "flatulence":79, "dumpy":79, "six-month-old":79, "ten-thirty":79, "mote":79, "telescoping":79, "overdrawn":79, "computerization":79, "think-tank":79, "handholds":79, "oversold":79, "notifies":79, "garters":79, "promos":79, "big-play":79, "estimations":79, "messiness":79, "promulgating":79, "bomb-making":79, "trios":79, "tripods":79, "digests":79, "early-20th-century":79, "practise":79, "seasickness":79, "inverting":79, "nightie":79, "catwalks":79, "pacifists":79, "handprints":79, "twenty-second":79, "welders":79, "tackler":79, "petroleum-based":79, "sleuths":79, "barrette":79, "anti-immigration":79, "electrocution":79, "high-wage":79, "xylophone":79, "slicer":79, "percentiles":79, "borscht":79, "gardenias":79, "creeper":79, "veneers":79, "drop-down":79, "drought-tolerant":79, "devaluations":79, "psychoeducational":79, "encephalopathy":79, "pixies":79, "chorale":79, "egoism":79, "sanatorium":79, "harrier":79, "erector":79, "agriculturalists":79, "scorecards":79, "micrometer":79, "reinsurance":79, "pre-islamic":79, "cordwood":79, "octagon":79, "debridement":79, "elector":79, "bootstrap":79, "operant":79, "chancel":79, "mods":79, "bioprospecting":79, "crowd-pleasing":79, "curbed":79, "unpromising":79, "reinstating":79, "fanciest":79, "mitigates":79, "dislodging":79, "long-sought":79, "jauntily":79, "intertwine":79, "marshaled":79, "daunted":79, "youngish":79, "addled":79, "sapping":79, "swooned":79, "quarter-million":79, "diatribes":79, "loneliest":79, "verifies":79, "predilections":79, "sightless":79, "dirge":79, "seven-foot":79, "defused":79, "waltzing":79, "globs":79, "portents":79, "idealize":79, "somethings":79, "clarifications":79, "prickling":79, "devaluing":79, "furtherance":79, "mealy":79, "overhangs":79, "black-clad":79, "distilling":79, "interweaving":79, "disinfect":79, "tax-and-spend":79, "what-if":79, "raincoats":79, "loincloth":79, "moralist":79, "ascents":79, "chipmunks":79, "marriageable":79, "lamentation":79, "hustles":79, "inbound":79, "manipulators":79, "high-growth":79, "decision-maker":79, "changeup":79, "tiramisu":79, "scripting":79, "paperless":79, "stringed":79, "typeface":79, "causally":79, "scalable":79, "beanbag":79, "dugouts":79, "floaters":79, "anti-depressants":79, "naturalize":79, "gratuities":79, "sedge":79, "pacification":79, "abductor":79, "gringos":79, "holograms":79, "all-wheel-drive":79, "utopianism":79, "cooktop":79, "externality":79, "lipoprotein":79, "phase-out":79, "gladden":79, "chameleons":79, "anthropocentric":79, "noneconomic":79, "dryland":79, "hyaluronic":79, "disinfectants":79, "morel":79, "symbolist":79, "bengali":79, "immunohistochemical":79, "debugging":79, "gluteus":79, "nitrite":79, "wid":79, "deictic":79, "fraktur":79, "outstripped":79, "invigorate":79, "rain-soaked":79, "punctuates":79, "apoplectic":79, "dwindles":79, "chow":79, "flouting":79, "hard-drinking":79, "ministrations":79, "moronic":79, "lushly":79, "upstaged":79, "ill-informed":79, "self-satisfaction":79, "snafu":79, "deviates":79, "patronized":79, "easy-going":79, "moldering":79, "catcalls":79, "amuses":79, "whispery":79, "hearted":79, "mixed-up":79, "scuffing":79, "cuddled":79, "inferring":79, "near-total":79, "biannual":79, "venerated":79, "bright-red":79, "gusher":79, "obstinacy":79, "government-backed":79, "level-headed":79, "ameliorating":79, "zilch":79, "multi-year":79, "obstructionist":79, "trill":79, "conceited":79, "copes":79, "clenches":79, "extenuating":79, "techie":79, "deadlocked":79, "earthlings":79, "horsing":79, "disclaimers":79, "bullet-proof":79, "retinas":79, "repatriate":79, "bosoms":79, "higher-income":79, "unclothed":79, "forelegs":79, "hubcaps":79, "lace-up":79, "archiving":79, "turbid":79, "approximated":79, "cancer-fighting":79, "half-court":79, "lox":79, "kickball":79, "bassinet":79, "all-conference":79, "ingrown":79, "centerfold":79, "hotelier":79, "ironical":79, "appendices":79, "paediatrician":79, "bubonic":79, "judicially":79, "left-right":79, "galilean":79, "post-revolutionary":79, "non-significant":79, "technology-based":79, "garret":79, "randomization":79, "silty":79, "separator":79, "mayday":79, "theorems":79, "couplets":79, "prednisone":79, "anti-castro":79, "innkeepers":79, "coven":79, "clubhouses":79, "daikon":79, "nonresponse":79, "teahouse":79, "intersubjective":79, "marmot":79, "cartographic":79, "lidocaine":79, "all-sky":79, "vermiculite":79, "anthropometric":79, "two-button":79, "chiefdoms":79, "magnetosphere":79, "extensor":79, "nanotube":79, "shay":79, "hypermedia":79, "anaphylaxis":79, "lemma":79, "articulatory":79, "carousing":79, "bankroll":79, "likeliest":79, "harks":79, "standing-room-only":79, "half-asleep":79, "embarrasses":79, "overshadows":79, "overused":79, "verbiage":79, "rampaging":79, "hogwash":79, "eye-to-eye":79, "familiarly":79, "limpid":79, "good-humored":79, "repainting":79, "prepped":79, "traitorous":79, "unctuous":79, "unsettle":79, "plaything":79, "gratis":79, "square-foot":79, "kick-start":79, "god-awful":79, "nostalgically":79, "offshoots":79, "must-haves":79, "unloads":79, "morosely":79, "wishy-washy":79, "forkful":79, "whirlpools":79, "incriminate":79, "dwarfing":79, "stepchild":79, "carryover":79, "forerunners":79, "fishnet":79, "lecherous":79, "tasseled":79, "pries":79, "gunslinger":79, "curmudgeon":79, "restarted":79, "chocolate-chip":79, "prerecorded":79, "potbellied":79, "sunbeam":79, "sunburst":79, "twittering":79, "airplay":79, "overproduction":79, "public-service":79, "operable":79, "idiomatic":79, "coiffure":79, "histrionic":79, "flaked":79, "two-seater":79, "policymaker":79, "slash-and-burn":79, "oilfields":79, "inlay":79, "backgammon":79, "pillbox":79, "fogs":79, "thermals":79, "deniability":79, "midsized":79, "jamboree":79, "parenthesis":79, "fielders":79, "cook-off":79, "beneficence":79, "crit":79, "belfry":79, "pidgin":79, "baccarat":79, "headhunter":79, "spitfire":79, "right-to-life":79, "inversions":79, "archivists":79, "trusteeship":79, "unforgiven":79, "run-and-shoot":79, "frigates":79, "alternator":79, "cirrus":79, "follicle":79, "terrapins":79, "slickrock":79, "iatrogenic":79, "falafel":79, "evaporative":79, "oscillator":79, "syncretism":79, "deportees":79, "ambulation":79, "sport-related":79, "postdocs":79, "combinatorial":79, "fentanyl":79, "prereferral":79, "abuts":79, "razor-thin":79, "standbys":79, "waxes":79, "disparaged":79, "long-overdue":79, "disappointingly":79, "incited":79, "beefed-up":79, "shooing":79, "high-scoring":79, "gentlest":79, "derailing":79, "appallingly":79, "partaking":79, "materializing":79, "doleful":79, "enumerate":79, "subjugated":79, "turgid":79, "rootless":79, "bantering":79, "inoffensive":79, "perceptibly":79, "out-of-court":79, "book-length":79, "burdening":79, "impugn":79, "rejoins":79, "easternmost":79, "wettest":79, "titillation":79, "manes":79, "smoothes":79, "ramrod":79, "state-supported":79, "gullet":79, "mid-eighties":79, "forthwith":79, "three-member":79, "loiter":79, "mortification":79, "outsourced":79, "wineglasses":79, "dines":79, "equalizing":79, "hailstorm":79, "pubescent":79, "lovesick":79, "reinstall":79, "thistles":79, "mislabeled":79, "buggers":79, "decoded":79, "putsch":79, "first-century":79, "sabers":79, "shrubby":79, "reordering":79, "gardenia":79, "buttes":79, "precut":79, "buttercup":79, "vagrants":79, "slithers":79, "raceway":79, "exacerbation":79, "playable":79, "portraitist":79, "laser-guided":79, "public-interest":79, "whistle-blower":79, "demolitions":79, "hotshots":79, "ticketed":79, "arsonist":79, "incongruent":79, "sadist":79, "intensive-care":79, "non-violence":79, "arms-control":79, "colonnade":79, "farm-raised":79, "aqueducts":79, "global-warming":79, "shucking":79, "geostrategic":79, "interfacing":79, "chainrings":79, "divergences":79, "chickpea":79, "beakers":79, "birdbath":79, "nonfatal":79, "typescript":79, "hospices":79, "consonance":79, "stowage":79, "andalusian":79, "welfare-to-work":79, "clapper":79, "goldsmiths":79, "transferability":79, "sonny":79, "humidor":79, "salvadorans":79, "banknotes":79, "polygons":79, "glutamate":79, "pagodas":79, "carillon":79, "noncredit":79, "place-names":79, "prepositions":79, "brushless":79, "zairian":79, "cyclotron":79, "estrogenic":79, "ejido":79, "arousability":79, "protected-area":79, "gracing":79, "paunchy":79, "has-been":79, "fended":79, "overshadowing":79, "enlivened":79, "refurbishing":79, "captivate":79, "bested":79, "bleaker":79, "glistens":79, "regaled":79, "quote-unquote":79, "scavenged":79, "subduing":79, "exhausts":79, "moxie":79, "ravage":79, "acceded":79, "dalliance":79, "hollowness":79, "unexceptional":79, "aspersions":79, "ranted":79, "untucked":79, "blacken":79, "pebbly":79, "economize":79, "laudatory":79, "testily":79, "rock-star":79, "miscalculated":79, "smarmy":79, "predestined":79, "baby-boom":79, "high-five":79, "climaxed":79, "snowdrifts":79, "prejudge":79, "three-car":79, "dumbing":79, "petted":79, "bequeath":79, "subzero":79, "scoping":79, "twenty-dollar":79, "huff":79, "wingtips":79, "stepladder":79, "broiling":79, "hearths":79, "turnarounds":79, "incubating":79, "agitator":79, "wombs":79, "computes":79, "director-general":79, "hemorrhoids":79, "totems":79, "licensees":79, "hydrate":79, "hacksaw":79, "homeric":79, "applicator":79, "notifications":79, "wide-field":79, "handmaiden":79, "slat":79, "flyover":79, "rampart":79, "unburned":79, "ornithologists":79, "egress":79, "pan-arab":79, "watermark":79, "unrolling":79, "hemorrhagic":79, "geodesic":79, "parakeet":79, "student-athlete":79, "caboose":79, "pollinate":79, "pre-k":79, "modelers":79, "actualization":79, "harmonics":79, "sumerian":79, "calving":79, "depopulation":79, "senders":79, "eunuch":79, "shire":79, "intertribal":79, "annular":79, "ductwork":79, "teaching-learning":79, "dermis":79, "mulches":79, "hatchway":79, "all-mountain":79, "lactate":79, "merengue":79, "convertibility":79, "waveforms":79, "coleus":79, "ashkenazi":79, "ricin":79, "kanji":79, "seropositive":79, "polygynous":79, "epistaxis":79, "cognates":79, "peregrines":79, "metamorphosed":79, "plopping":79, "instigating":79, "giddiness":79, "industrial-strength":79, "smoldered":79, "shimmied":79, "outstrips":79, "bulldozing":79, "warbling":79, "wholehearted":79, "jangled":79, "blurting":79, "mile-high":79, "primping":79, "bric-a-brac":79, "reconfiguring":79, "reasserting":79, "twenty-five-year-old":79, "dickensian":79, "savaged":79, "persevering":79, "redistributed":79, "disapprovingly":79, "spooking":79, "boondoggle":79, "conscripted":79, "noggin":79, "bone-dry":79, "crosstown":79, "white-faced":79, "outwards":79, "below-market":79, "dollops":79, "squish":79, "annulled":79, "hilltops":79, "thirty-year":79, "cliffhanger":79, "rimless":79, "admixture":79, "cancer-free":79, "pinprick":79, "five-pound":79, "hotlines":79, "overexposure":79, "skullcap":79, "swingman":79, "resemblances":79, "imbalanced":79, "oilcloth":79, "voyager":79, "potentialities":79, "asterisks":79, "melodramas":79, "lawyering":79, "pervasively":79, "puritanism":79, "renewals":79, "confirmations":79, "consulates":79, "sarong":79, "evangelistic":79, "quick-release":79, "freehand":79, "gas-fired":79, "existentialist":79, "underinsured":79, "pounder":79, "analogs":79, "commemorations":79, "numeral":79, "low-flow":79, "hoofs":79, "hippy":79, "marinades":79, "manse":79, "non-arab":79, "floes":79, "oilfield":79, "provolone":79, "trams":79, "sedges":79, "reefer":79, "aggregations":79, "noncitizens":79, "pylon":79, "clipless":79, "proms":79, "prototyping":79, "avengers":79, "admissibility":79, "death-penalty":79, "private-label":79, "offences":79, "landholders":79, "eunuchs":79, "imager":79, "borer":79, "neurochemical":79, "dory":79, "mortalities":79, "midsole":79, "dulcimer":79, "photosphere":79, "sinonasal":79, "fuelwood":79, "rotavirus":79, "wrested":79, "staggeringly":79, "careen":79, "indulgently":79, "submerging":79, "crookedly":79, "nine-member":79, "extravaganzas":79, "rile":79, "pint-size":79, "cure-all":79, "ascribing":79, "lettered":79, "double-checked":79, "writhe":79, "nicked":79, "brimmed":79, "multibillion":79, "ingratiate":79, "exalt":79, "newbies":79, "marginalizing":79, "burnt-out":79, "reexamined":79, "evasions":79, "modulating":79, "subplot":79, "stampeding":79, "smaller-scale":79, "industry-wide":79, "nullified":79, "diehards":79, "grazes":79, "untethered":79, "disbursed":79, "caprice":79, "focussed":79, "squirts":79, "jetted":79, "semiannual":79, "woodworker":79, "seagoing":79, "human-made":79, "reintegrate":79, "replicable":79, "self-denial":79, "expositions":79, "magnanimity":79, "night-time":79, "managements":79, "troika":79, "system-wide":79, "hygienist":79, "menstruating":79, "eighth-grader":79, "resealable":79, "electrocardiogram":79, "bumblebee":79, "self-regulating":79, "asphyxiation":79, "neurobiology":79, "itemize":79, "plaids":79, "knockouts":79, "resisters":79, "sterner":79, "preempted":79, "recycler":79, "infliction":79, "um-hmm":79, "decays":79, "bulimic":79, "hatter":79, "anti-nuclear":79, "non-catholics":79, "phosphates":79, "backwash":79, "some-thing":79, "breathlessness":79, "chanterelles":79, "myrrh":79, "fungicide":79, "sarin":79, "stoner":79, "nonwhites":79, "penitent":79, "early-twentieth-century":79, "coppers":79, "kindergartens":79, "sirs":79, "snoopy":79, "ladybugs":79, "fixed-wing":79, "dogleg":79, "yarrow":79, "risk-takers":79, "toilette":79, "refereeing":79, "trafficked":79, "postmodernity":79, "rigger":79, "hearing-impaired":79, "aerated":79, "never-married":79, "stingray":79, "meaning-making":79, "zookeeper":79, "anadromous":79, "workflow":79, "epidural":79, "arrestees":79, "off-piste":79, "piazzas":79, "memes":79, "seahorses":79, "chautauqua":79, "reaps":80, "ever-widening":80, "voraciously":80, "sun-baked":80, "squashing":80, "natty":80, "long-delayed":80, "expounding":80, "second-leading":80, "lucked":80, "budged":80, "million-a-year":80, "stop-and-go":80, "intimation":80, "unashamedly":80, "saddling":80, "shelve":80, "disfavor":80, "gossiped":80, "originators":80, "diminishment":80, "unpolished":80, "apprehending":80, "cunningly":80, "paves":80, "ramblings":80, "zillions":80, "multi-colored":80, "compassionately":80, "looseness":80, "transgress":80, "stratagem":80, "such-and-such":80, "slackers":80, "pols":80, "reproachful":80, "fizzy":80, "unspeakably":80, "self-explanatory":80, "latecomers":80, "seven-hour":80, "smart-ass":80, "holistically":80, "misogynistic":80, "condenses":80, "immigrating":80, "automating":80, "punting":80, "oceanside":80, "fairytale":80, "flu-like":80, "weatherproof":80, "foreign-owned":80, "looker":80, "barbarity":80, "ventilators":80, "aspirational":80, "sterilizing":80, "bustier":80, "treetop":80, "interrelations":80, "great-great-grandfather":80, "herniated":80, "evangelizing":80, "feudalism":80, "credenza":80, "debrief":80, "parochialism":80, "arabesque":80, "dossiers":80, "senior-level":80, "caroling":80, "drug-dealing":80, "logarithmic":80, "protrusion":80, "humanlike":80, "end-to-end":80, "junky":80, "powerboat":80, "shorting":80, "regatta":80, "all-news":80, "chive":80, "gorgonzola":80, "headland":80, "monarchical":80, "mumps":80, "nongovernment":80, "bangladeshi":80, "dropper":80, "caftan":80, "unsolvable":80, "sewerage":80, "tyrannosaurus":80, "gyroscopes":80, "otolaryngologist":80, "cassock":80, "skateboarder":80, "sex-related":80, "district-wide":80, "pinhole":80, "heritable":80, "diffuser":80, "irradiated":80, "hellenic":80, "earthlike":80, "royalist":80, "headers":80, "pergola":80, "polynesians":80, "conscientiousness":80, "townhomes":80, "work-life":80, "moray":80, "ganache":80, "hammerhead":80, "hitman":80, "neo-liberal":80, "dauphin":80, "seatstays":80, "multiculturalists":80, "reparative":80, "phylogeny":80, "amazons":80, "ideational":80, "automata":80, "adenocarcinoma":80, "exoplanets":80, "groundfish":80, "inspiratory":80, "mahjong":80, "full-bloods":80, "doorsteps":80, "deliriously":80, "not-so-subtle":80, "sopping":80, "deliberated":80, "pilloried":80, "disconnecting":80, "varnished":80, "obsequious":80, "feasted":80, "insouciance":80, "underemployment":80, "plastering":80, "alienates":80, "carload":80, "lightheaded":80, "hellhole":80, "wisecracks":80, "zapped":80, "well-bred":80, "fiendish":80, "underlay":80, "slavish":80, "ordeals":80, "suiting":80, "one-seventh":80, "renege":80, "maiming":80, "creasing":80, "hottie":80, "scrutinizes":80, "baby-boomer":80, "incarcerate":80, "tangent":80, "incoherently":80, "deconstructed":80, "honorific":80, "spaciousness":80, "unrelieved":80, "sanitize":80, "impartially":80, "kiddies":80, "conquers":80, "wets":80, "digestible":80, "self-sacrificing":80, "stonewall":80, "rummy":80, "verities":80, "anti-intellectual":80, "aggregating":80, "spar":80, "curtailment":80, "cocker":80, "best-dressed":80, "reveries":80, "recharged":80, "beepers":80, "brown-eyed":80, "misstatements":80, "peeve":80, "bas-relief":80, "newsmakers":80, "freebie":80, "anti-christian":80, "cabana":80, "litigated":80, "newsmen":80, "japanese-style":80, "kooks":80, "same-day":80, "naturals":80, "troubadour":80, "mags":80, "louse":80, "eyeglass":80, "octaves":80, "reactionaries":80, "presupposition":80, "stepbrother":80, "atlases":80, "funder":80, "product-moment":80, "hooch":80, "pull-ups":80, "churchmen":80, "transporters":80, "breastplate":80, "huh-uh":80, "heart-rate":80, "healings":80, "narcissist":80, "misalignment":80, "adverbs":80, "scalping":80, "cladding":80, "sanctification":80, "petunia":80, "pre-season":80, "gallstones":80, "asthmatics":80, "malformation":80, "dobsonian":80, "food-safety":80, "refractive":80, "hollies":80, "wicket":80, "hand-colored":80, "jacksonian":80, "brainstem":80, "cybersecurity":80, "choline":80, "eritreans":80, "lumens":80, "metronidazole":80, "postintervention":80, "decimate":80, "chides":80, "catchall":80, "rethought":80, "stanch":80, "self-congratulatory":80, "self-possessed":80, "ankle-deep":80, "easy-to-read":80, "legislated":80, "antagonizing":80, "languorous":80, "cluttering":80, "overturns":80, "reciprocated":80, "mid-40s":80, "jumping-off":80, "seamy":80, "uploaded":80, "thigh-high":80, "repositioning":80, "legitimizes":80, "peripherally":80, "retaliating":80, "bares":80, "abridged":80, "saturating":80, "underwrote":80, "cutesy":80, "rubberized":80, "topper":80, "jingled":80, "emasculated":80, "shallowness":80, "fallibility":80, "yeasty":80, "treasonous":80, "papier-mache":80, "pulverized":80, "compensations":80, "suppositions":80, "mismanaged":80, "big-boned":80, "liberates":80, "dissociate":80, "clip-on":80, "rheumatism":80, "charades":80, "comforters":80, "unwraps":80, "quadrennial":80, "drawstring":80, "pickpockets":80, "spatters":80, "untruth":80, "chipmunk":80, "bohemians":80, "drudge":80, "bandannas":80, "fucks":80, "clicker":80, "four-year-olds":80, "bounties":80, "mufflers":80, "prefect":80, "exes":80, "batik":80, "lower-body":80, "papayas":80, "fucked-up":80, "flossing":80, "pranksters":80, "camphor":80, "son-of-a-bitch":80, "levitation":80, "magnifications":80, "deadwood":80, "mailers":80, "pre-kindergarten":80, "varietal":80, "round-up":80, "small-market":80, "auctioneers":80, "rear-end":80, "uncompensated":80, "antiaging":80, "complainant":80, "skillets":80, "pandemics":80, "restorers":80, "micromanagement":80, "ferrous":80, "parsnip":80, "mudroom":80, "scheduler":80, "turkic":80, "scammers":80, "pythons":80, "priestesses":80, "tadpole":80, "dollies":80, "tenderloins":80, "xenon":80, "end-user":80, "koala":80, "milks":80, "finitude":80, "accelerometer":80, "monopolist":80, "biomedicine":80, "diasporas":80, "etruscan":80, "rune":80, "particularism":80, "capsaicin":80, "extensors":80, "joist":80, "proneness":80, "mixed-blood":80, "octopuses":80, "early-onset":80, "ephedrine":80, "nanomachines":80, "codependency":80, "congregating":80, "unswerving":80, "angriest":80, "four-person":80, "cryptically":80, "day-by-day":80, "well-used":80, "stoutly":80, "round-faced":80, "torching":80, "smolder":80, "perused":80, "blond-haired":80, "dismally":80, "cuter":80, "clamorous":80, "scruff":80, "blowtorch":80, "home-made":80, "flexes":80, "untying":80, "peevish":80, "sneers":80, "unmask":80, "stigmatize":80, "hairpins":80, "wood-frame":80, "butchery":80, "overreacted":80, "catlike":80, "overslept":80, "tartly":80, "dribbles":80, "quibbling":80, "superimpose":80, "reloaded":80, "wrongdoers":80, "mistreat":80, "combats":80, "fogging":80, "most-wanted":80, "recant":80, "elaborations":80, "sweepers":80, "barbecuing":80, "disliking":80, "fulfil":80, "oscillate":80, "chrysanthemum":80, "out-of-body":80, "remediate":80, "ponchos":80, "thunderheads":80, "on-call":80, "grandstands":80, "ringers":80, "palestinian-israeli":80, "malodorous":80, "sauteing":80, "plexiglass":80, "chiaroscuro":80, "stir-fries":80, "localize":80, "orthopedist":80, "make-ahead":80, "racehorses":80, "zydeco":80, "survivalist":80, "emitter":80, "monsoons":80, "shoeshine":80, "all-girls":80, "clothespins":80, "interventionism":80, "textually":80, "hadron":80, "protozoa":80, "bilingualism":80, "fuel-economy":80, "neurosurgeons":80, "inboard":80, "bone-marrow":80, "snowplow":80, "peninsular":80, "divestiture":80, "abscesses":80, "mistral":80, "employability":80, "caning":80, "stigmas":80, "cesium":80, "centipede":80, "capacitor":80, "bioengineered":80, "bundt":80, "hayrides":80, "bowhunters":80, "self-ratings":80, "latkes":80, "knower":80, "biomarkers":80, "rhodesian":80, "hemophiliacs":80, "tartars":80, "breakeven":80, "dayroom":80, "incus":80, "infectivity":80, "bouldering":80, "tuareg":80, "inter-korean":80, "infamously":80, "ferreting":80, "tailed":80, "unquenchable":80, "begrudgingly":80, "quelling":80, "ensnared":80, "world-weary":80, "instills":80, "gap-toothed":80, "reconvene":80, "busload":80, "coveting":80, "nobler":80, "hipper":80, "repudiating":80, "backtracked":80, "chauvinist":80, "cataloged":80, "flunking":80, "red-rimmed":80, "misjudgment":80, "devoutly":80, "self-professed":80, "regale":80, "disassembled":80, "histrionics":80, "bummed":80, "renegotiated":80, "spiderweb":80, "no-name":80, "blackening":80, "dustbin":80, "credulous":80, "x-rayed":80, "comradeship":80, "debased":80, "evince":80, "fourth-year":80, "long-stemmed":80, "fiefdom":80, "attenuate":80, "asinine":80, "wind-driven":80, "revoking":80, "telecasts":80, "half-acre":80, "sycamores":80, "unavailability":80, "criminalizing":80, "freshener":80, "defrost":80, "self-censorship":80, "folklorist":80, "workup":80, "graduate-level":80, "insularity":80, "reselling":80, "medium-range":80, "cross-pollination":80, "bramble":80, "gratify":80, "squiggles":80, "impermanence":80, "on-off":80, "retry":80, "videographer":80, "wrongness":80, "carolinians":80, "tethers":80, "colloquium":80, "private-school":80, "backrest":80, "superwoman":80, "licensee":80, "gondolas":80, "farmyard":80, "nightdress":80, "streambed":80, "beekeeper":80, "territoriality":80, "pontificate":80, "nonsmoking":80, "hyphen":80, "timberwolves":80, "readymade":80, "self-development":80, "glycol":80, "hydroponic":80, "excavator":80, "baffle":80, "intracellular":80, "state-based":80, "time-series":80, "bettors":80, "east-central":80, "bumblebees":80, "manitou":80, "meta-analytic":80, "remittance":80, "non-contact":80, "enamels":80, "lymphadenopathy":80, "aseptic":80, "baht":80, "cellulosic":80, "comorbidities":80, "homeschooling":80, "muds":80, "clonal":80, "apoptosis":80, "excitations":80, "mediastinal":80, "trickiest":80, "pitchman":80, "solidifies":80, "co-owns":80, "overemphasized":80, "bemusement":80, "bombast":80, "third-best":80, "scours":80, "heartstrings":80, "deadlier":80, "tech-savvy":80, "recreates":80, "grandstanding":80, "retrained":80, "disconsolate":80, "intermingling":80, "seven-month":80, "priciest":80, "cordoned":80, "scrum":80, "practicalities":80, "recoiling":80, "subsume":80, "commandeer":80, "demarcated":80, "rerouted":80, "subjugate":80, "shrewdness":80, "schoolboys":80, "navy-blue":80, "expunged":80, "six-packs":80, "gashes":80, "nonexistence":80, "ten-day":80, "fastens":80, "graver":80, "boldface":80, "refines":80, "mid-1920s":80, "egg-shaped":80, "five-man":80, "handrails":80, "six-point":80, "motorbikes":80, "flip-flopping":80, "timbered":80, "ultraconservative":80, "gymnasiums":80, "co-starred":80, "procreate":80, "incongruities":80, "worshipful":80, "self-analysis":80, "prospectively":80, "miniaturization":80, "sanded":80, "slaving":80, "story-telling":80, "bicyclist":80, "preproduction":80, "hand-built":80, "sawhorses":80, "redheads":80, "bloodhound":80, "birdseed":80, "late-nineteenth-century":80, "non-american":80, "introvert":80, "oleander":80, "age-group":80, "impurity":80, "pickpocket":80, "unguided":80, "terminations":80, "rooks":80, "backlogs":80, "disbursement":80, "jib":80, "pharisees":80, "special-teams":80, "pigmented":80, "cultivators":80, "molting":80, "closers":80, "howitzers":80, "opt-out":80, "chemise":80, "storekeeper":80, "daylilies":80, "koranic":80, "macaws":80, "lift-off":80, "surrealists":80, "sentience":80, "videophone":80, "birdhouse":80, "timbres":80, "contralateral":80, "retinol":80, "titling":80, "bobber":80, "tatami":80, "misclassification":80, "anglo-irish":80, "lithographic":80, "self-evaluations":80, "fresh-ground":80, "infill":80, "subsamples":80, "overexploitation":80, "listserv":80, "indexical":80, "nonrespondents":80, "orcas":80, "end-use":80, "carer":80, "eugenic":80, "cyanobacteria":80, "rebs":80, "quick-witted":80, "preternaturally":80, "plaudits":80, "much-publicized":80, "wellknown":80, "tinkered":80, "supersedes":80, "dawdle":80, "sleuthing":80, "backfires":80, "roil":80, "compatriot":80, "dispirited":80, "photocopied":80, "loathes":80, "deign":80, "hand-made":80, "fast-changing":80, "six-story":80, "slavishly":80, "higher-paying":80, "sidesteps":80, "rambles":80, "washed-up":80, "overestimating":80, "beveled":80, "high-wire":80, "exhorts":80, "uncountable":80, "catty":80, "opprobrium":80, "decentralize":80, "newbie":80, "meditated":80, "quizzing":80, "gristle":80, "courtesies":80, "glow-in-the-dark":80, "month-old":80, "misadventure":80, "banshee":80, "taxpaying":80, "reorder":80, "lubricating":80, "three-term":80, "wind-blown":80, "headbands":80, "audio-visual":80, "batty":80, "ungovernable":80, "unforeseeable":80, "red-handed":80, "unconstitutionally":80, "menthol":80, "peacekeeper":80, "firefights":80, "bleacher":80, "tastiest":80, "shuck":80, "televangelist":80, "well-functioning":80, "nuclear-powered":80, "post-mortem":80, "hecklers":80, "defeatist":80, "light-brown":80, "point-to-point":80, "exhumed":80, "burg":80, "nasturtiums":80, "preindustrial":80, "fork-tender":80, "vagrant":80, "billfold":80, "two-seat":80, "fine-art":80, "outplacement":80, "lower-back":80, "town-hall":80, "motorcyclist":80, "quadrangle":80, "front-wheel-drive":80, "conveyors":80, "miscues":80, "delinquencies":80, "gang-related":80, "inferiors":80, "orthodoxies":80, "begonias":80, "chromatography":80, "air-to-air":80, "referenda":80, "ragout":80, "penumbra":80, "swags":80, "conquistador":80, "most-favored-nation":80, "malarial":80, "reification":80, "ceramist":80, "sanitarium":80, "drive-in":80, "cottons":80, "constables":80, "subject-matter":80, "mandibles":80, "smelters":80, "high-def":80, "proboscis":80, "yearlings":80, "race-conscious":80, "halfpipe":80, "slovaks":80, "iconoclasm":80, "thang":80, "immanence":80, "bellboy":80, "nonparticipants":80, "roosts":80, "coder":80, "haciendas":80, "cellblock":80, "self-blame":80, "terracing":80, "rootstock":80, "abiotic":80, "nonfinancial":80, "polynomial":80, "cytoplasmic":80, "co-occurrence":80, "polish-american":80, "grommet":80, "affiliative":80, "cadaveric":80, "orthosis":80, "self-monitors":80, "petered":80, "tough-talking":80, "no-show":80, "fazed":80, "toughened":80, "salutation":80, "spawns":80, "weeded":80, "juxtaposes":80, "unprepossessing":80, "irks":80, "long-shot":80, "burnish":80, "chicanery":80, "shingled":80, "resound":80, "stagnate":80, "graceless":80, "whizzes":80, "feature-length":80, "house-to-house":80, "four-minute":80, "fire-breathing":80, "bleakness":80, "dosed":80, "precluding":80, "shoeless":80, "advantaged":80, "outlasted":80, "patois":80, "leitmotif":80, "mid-seventies":80, "better-looking":80, "propagandist":80, "soviet-style":80, "shiftless":80, "chancy":80, "hullabaloo":80, "paramour":80, "stumpy":80, "mailbag":80, "salvageable":80, "gobbles":80, "tuitions":80, "precariousness":80, "knighthood":80, "choreograph":80, "right-side":80, "clack":80, "vilification":80, "crescent-shaped":80, "tabled":80, "seducer":80, "retrofitted":80, "barometric":80, "imbecile":80, "boomtown":80, "small-arms":80, "unripe":80, "storylines":80, "gutless":80, "multi-dimensional":80, "no-man's-land":80, "low-speed":80, "snowbank":80, "dogfight":80, "widowers":80, "flapper":80, "death-row":80, "starburst":80, "criminologists":80, "greenbacks":80, "radio-frequency":80, "clambers":80, "humidifier":80, "gaslight":80, "roadbed":80, "torturer":80, "negligee":80, "housemates":80, "chef/owner":80, "silvers":80, "insulator":80, "permanency":80, "web-site":80, "selector":80, "simulcast":80, "threshing":80, "newsmagazines":80, "auxiliaries":80, "chainring":80, "registrants":80, "abacus":80, "phoenician":80, "labyrinths":80, "arrondissement":80, "electrophoresis":80, "transcultural":80, "stringers":80, "radium":80, "inkjet":80, "caliper":80, "gerontologist":80, "filmic":80, "circumpolar":80, "civilizational":80, "student-led":80, "bards":80, "synapse":80, "extrusion":80, "concessionaires":80, "tannin":80, "viaduct":80, "neoplasms":80, "sucrose":80, "elastomer":80, "compressions":80, "waterproof/breathable":80, "buttercream":80, "out-of-home":80, "coitus":80, "legionnaires":80, "nontarget":80, "sanctifying":80, "umbra":80, "quatrain":80, "megacities":80, "tonsil":80, "leavers":80, "low-incidence":80, "virtualization":80, "recursion":80, "popularizing":80, "moonscape":80, "chillingly":80, "exemplifying":80, "touchstones":80, "fanatically":80, "decade-old":80, "melds":80, "personalizing":80, "barrel-chested":80, "unenthusiastic":80, "enfolded":80, "loftier":80, "wrong-headed":80, "apprised":80, "slurped":80, "strategize":80, "laud":80, "sophomoric":80, "no-good":80, "conned":80, "archrival":80, "preachy":80, "doozy":80, "forestalled":80, "annihilating":80, "choicest":80, "dejectedly":80, "oppressing":80, "innovating":80, "tarred":80, "cuteness":80, "sisterly":80, "straight-ahead":80, "inconvenienced":80, "uselessness":80, "cottony":80, "mid-summer":80, "potshots":80, "jinks":80, "sauntering":80, "roofline":80, "aquiline":80, "quiets":80, "cockiness":80, "inconspicuously":80, "somersault":80, "perforce":80, "new-age":80, "elucidation":80, "cornices":80, "trigonometry":80, "chivalrous":80, "repossessed":80, "scourges":80, "transmuted":80, "typo":80, "fireproof":80, "coincident":80, "toweling":80, "light-blue":80, "triumphalism":80, "comportment":80, "unproblematic":80, "expressively":80, "slouchy":80, "one-point":80, "pushback":80, "inheritances":80, "judgeship":80, "triple-digit":80, "part-skim":80, "eulogies":80, "swoosh":80, "co-defendant":80, "clarinetist":80, "unbaked":80, "editorship":80, "co-defendants":80, "familys":80, "classicist":80, "longhorn":80, "foghorn":80, "in-box":80, "obligate":80, "urinals":80, "litigators":80, "muscovites":80, "ringmaster":80, "self-realization":80, "interpretable":80, "seaward":80, "rear-wheel":80, "transvestite":80, "dampers":80, "foregrounding":80, "beanie":80, "midgets":80, "non-catholic":80, "nays":80, "queers":80, "camellia":80, "harps":80, "baffles":80, "fibula":80, "megabits":80, "impala":80, "annotation":80, "penitential":80, "phaseout":80, "lifers":80, "self-rising":80, "flathead":80, "drug-testing":80, "racecar":80, "occipital":80, "low-mass":80, "passim":80, "extracellular":80, "parietal":80, "blackface":80, "macaw":80, "calabash":80, "obliques":80, "noncombat":80, "nodule":80, "calvinism":80, "olympiad":80, "cannoli":80, "strontium":80, "radiograph":80, "state-building":80, "ozone-depleting":80, "stepparents":80, "interventionists":80, "freedmen":80, "meringues":80, "impeller":80, "resonator":80, "historiographic":80, "help-seeking":80, "hypochlorite":80, "nitrification":80, "curation":80, "strider":80, "cross-sex":80, "sulked":80, "off-color":80, "quizzed":80, "descendent":80, "odd-looking":80, "sympathizes":80, "tangentially":80, "sullied":80, "resoundingly":80, "star-crossed":80, "reconnected":80, "masterminded":80, "guffaws":80, "mooning":80, "half-heartedly":80, "moss-covered":80, "assiduous":80, "best-loved":80, "dilutes":80, "abhorred":80, "unjustifiable":80, "memorialized":80, "reinterpreted":80, "plunking":80, "pocket-size":80, "friendless":80, "sheared":80, "unmasked":80, "preemptively":80, "glitters":80, "vaporized":80, "prescience":80, "impersonate":80, "screwy":80, "fourth-floor":80, "dissolute":80, "pollutes":80, "sunrises":80, "canopied":80, "nationalizing":80, "subhuman":80, "whodunit":80, "deducting":80, "saner":80, "previewing":80, "heathens":80, "mutinous":80, "reciprocally":80, "imprecision":80, "mumbo":80, "subplots":80, "unbuttons":80, "iniquity":80, "integrally":80, "underarms":80, "acoustically":80, "inductees":80, "mid-american":80, "patent-leather":80, "splendors":80, "post-saddam":80, "seditious":80, "birdied":80, "hemlines":80, "henchman":80, "public/private":80, "drainages":80, "hi-tech":80, "desegregate":80, "ridgetop":80, "apostate":80, "matchbook":80, "lethality":80, "constrictor":80, "bodysuit":80, "soundstage":80, "relativist":80, "parakeets":80, "jambalaya":80, "metamorphoses":80, "piglet":80, "mots":80, "hyacinths":80, "self-acceptance":80, "wackos":80, "watercooler":80, "sidewalls":80, "bellhop":80, "dramatists":80, "restorer":80, "rootedness":80, "reprogramming":80, "finials":80, "counterrevolutionary":80, "butlers":80, "expat":80, "smoking-related":80, "flightless":80, "thunderbolts":80, "air-conditioner":80, "extra-curricular":80, "functionalist":80, "interdependency":80, "principality":80, "mammary":80, "ancho":80, "breast-feed":80, "labia":80, "mastiff":80, "trekkers":80, "transponders":80, "canker":80, "mustards":80, "pharynx":80, "guaranty":80, "european-american":80, "venetians":80, "light-duty":80, "public-housing":80, "eustachian":80, "prostaglandins":80, "preventer":80, "ptolemaic":80, "jacquard":80, "altarpieces":80, "methicillin-resistant":80, "wraiths":80, "elicitation":80, "vancomycin":80, "haptic":80, "maronites":80, "prions":80, "legate":80, "infotech":80, "scrapie":80, "ecoregion":80, "voluntariness":80, "case-patients":80, "solitons":80, "metalepsis":80, "unalloyed":80, "well-earned":80, "rehashing":80, "reemerged":80, "awoken":80, "bemoans":80, "brims":80, "shushed":80, "lead-up":80, "encroached":80, "crime-ridden":80, "giggly":80, "insulates":80, "far-out":80, "insidiously":80, "untangled":80, "coaxes":80, "giddily":80, "lyrically":80, "spanish-style":80, "footstep":80, "congratulates":80, "uncalled":80, "garbed":80, "astonish":80, "shambling":80, "dammed":80, "dreamless":80, "fistfights":80, "commercialized":80, "inaccessibility":80, "frontlines":80, "ingenuous":80, "assertively":80, "prickle":80, "blacklisted":80, "subliminally":80, "indolence":80, "washingtonian":80, "gymnastic":80, "clunker":80, "unhook":80, "auditoriums":80, "reestablishment":80, "non-issue":80, "clipboards":80, "chattel":80, "punctures":80, "single-digit":80, "outdoorsmen":80, "karmic":80, "grayness":80, "mercies":80, "gasoline-powered":80, "damnable":80, "abrogate":80, "spanked":80, "meshing":80, "fix-it":80, "solvable":80, "gaskets":80, "washout":80, "agronomist":80, "over-all":80, "total-body":80, "all-americans":80, "negativism":80, "cityscapes":80, "brownstones":80, "governorships":80, "red-orange":80, "gastroenterologist":80, "circularity":80, "snowfields":80, "industrially":80, "bandmates":80, "pass-through":80, "outpatients":80, "clerked":80, "niceness":80, "cantaloupes":80, "peripheries":80, "microclimate":80, "tractor-trailer":80, "specialness":80, "chickadees":80, "chambermaid":80, "argyle":80, "stingers":80, "crabbing":80, "black-on-black":80, "antacids":80, "point-and-shoot":80, "fantasia":80, "laypersons":80, "anagram":80, "alphabets":80, "tampon":80, "star-forming":80, "hoarseness":80, "cosmetology":80, "task-oriented":80, "hearer":80, "ophthalmologists":80, "ectopic":80, "extroversion":80, "historicist":80, "nonclinical":80, "etiological":80, "cation":80, "superconductor":80, "ptarmigan":80, "lemurs":80, "centaurs":80, "counsellors":80, "ecuadorean":80, "mappings":80, "sarcophagi":80, "mujaheddin":80, "greys":80, "acculturative":80, "anthropic":80, "foramen":80, "pleural":80, "mentee":80, "bacteremia":80, "footplate":80, "sauropods":80, "seagrasses":80, "ingroup":80, "shepherded":80, "untangling":80, "lobbing":80, "muscling":80, "percolate":80, "fill-in":80, "multi-million-dollar":80, "bumper-to-bumper":80, "also-ran":80, "lulling":80, "lunched":80, "hulks":80, "gesticulating":80, "overhears":80, "socked":80, "fondle":80, "defers":80, "enticements":80, "hard-headed":80, "oversimplify":80, "equidistant":80, "prance":80, "abet":80, "vacuumed":80, "trifecta":80, "panic-stricken":80, "misbegotten":80, "retorts":80, "forfeiting":80, "fortyish":80, "placating":80, "repaint":80, "wiggly":80, "strappy":80, "bettering":80, "sunnier":80, "no-go":80, "freshening":80, "miniskirts":80, "guffawed":80, "knifed":80, "pared-down":80, "insinuations":80, "ineluctable":80, "smokescreen":80, "death-defying":80, "razing":80, "bestial":80, "industrywide":80, "kneaded":80, "encroachments":80, "gridlocked":80, "belch":80, "pirouette":80, "can't-miss":80, "league-leading":80, "introverted":80, "hitchhike":80, "mid-career":80, "syncopated":80, "seductions":80, "smocks":80, "hypothesizes":80, "deep-dish":80, "tit-for-tat":80, "flip-flopped":80, "newsreels":80, "orange-red":80, "refills":80, "seamstresses":80, "mops":80, "duos":80, "apparatuses":80, "skeins":80, "achiever":80, "three-thirty":80, "arboreal":80, "walling":80, "diagonals":80, "three-night":80, "pinup":80, "adventurism":80, "clamshell":80, "war-related":80, "detoxify":80, "clotheslines":80, "suburbanization":80, "individualization":80, "confit":80, "stoppages":80, "omniscience":80, "overruling":80, "printmaker":80, "floodwater":80, "fluorescents":80, "mallets":80, "saviour":80, "lunchbox":80, "revivalist":80, "literalism":80, "soundings":80, "derailment":80, "swimwear":80, "realised":80, "sawtooth":80, "speechwriters":80, "work-study":80, "polycarbonate":80, "raindrop":80, "six-cylinder":80, "set-asides":80, "abyssinian":80, "critical-thinking":80, "collectivization":80, "androgyny":80, "scone":80, "interpolation":80, "self-assertion":80, "windbreak":80, "war-crimes":80, "feedlot":80, "time-share":80, "foreskin":80, "rumours":80, "councilors":80, "learnings":80, "alpaca":80, "worksite":80, "minder":80, "trade-in":80, "histologically":80, "vibrational":80, "scimitar":80, "caliph":80, "sloths":80, "bonito":80, "sickle-cell":80, "political-military":80, "reactivation":80, "hyperspace":80, "hypotension":80, "chaplaincy":80, "stepparent":80, "psychophysical":80, "defined-benefit":80, "afrikaans":80, "nepali":80, "dipole":80, "marquetry":80, "distractibility":80, "incommensurability":80, "planetesimals":80, "postliberal":80, "qubits":80, "operands":80, "saunter":80, "ludicrously":80, "just-released":80, "presage":80, "far-away":80, "spurn":80, "reformulate":80, "ameliorated":80, "indoctrinated":80, "silliest":80, "rekindling":80, "low-paid":80, "singed":80, "superstardom":80, "thronged":80, "slacking":80, "sparred":80, "lambasted":80, "sluggers":80, "upstage":80, "ripened":80, "footpaths":80, "unkindly":80, "animating":80, "vacillating":80, "eight-game":80, "unspectacular":80, "incites":80, "short-circuited":80, "condones":80, "cheerless":80, "cohere":80, "teeing":80, "screened-in":80, "two-for-one":80, "hardest-hit":80, "unenlightened":80, "fount":80, "discoverers":80, "exactitude":80, "maxed":80, "law-and-order":80, "herringbone":80, "leered":80, "breadwinners":80, "copywriter":80, "peekaboo":80, "litigating":80, "persuasiveness":80, "loose-leaf":80, "liberalized":80, "injures":80, "buffing":80, "gantlet":80, "indiscreet":80, "beautician":80, "rock-climbing":80, "evocations":80, "misdirection":80, "tomorrows":80, "misfire":80, "overbuilt":80, "twenty-fourth":80, "quintessence":80, "wheelchair-bound":80, "veg":80, "triathlete":80, "unrefined":80, "relocations":80, "saggy":80, "hang-up":80, "basso":80, "gasses":80, "rumination":80, "manic-depressive":80, "matchstick":80, "crucify":80, "boosterism":80, "horsey":80, "curate":80, "ornithology":80, "ricochet":80, "fourteenth-century":80, "interment":80, "pings":80, "goalies":80, "psychometrically":80, "corsage":80, "timberland":80, "trailheads":80, "docudrama":80, "repurchase":80, "non-specific":80, "groomer":80, "pommel":80, "capacitors":80, "a-bomb":80, "minaret":80, "temblor":80, "likability":80, "constructionist":80, "inquisitors":80, "data-driven":80, "yeasts":80, "steerage":80, "heatstroke":80, "vegans":80, "logics":80, "chronometer":80, "professoriate":80, "chervil":80, "sandbag":80, "multifunction":80, "arian":80, "rollovers":80, "post-game":80, "mouthpieces":80, "glycolic":80, "elysian":80, "imagers":80, "spacesuits":80, "cost-sharing":80, "indo-european":80, "homesteading":80, "antimissile":80, "textuality":80, "sacristy":80, "p-value":80, "privatizations":80, "obelisks":80, "slavers":80, "euclidean":80, "switchgrass":80, "patron-client":80, "non-elite":80, "tows":80, "endoscope":80, "eosinophilic":80, "in-situ":80, "trilobites":80, "uncheck":80, "subjunctive":80, "basher":80, "multiverse":80, "falconry":80, "problem-focused":80, "endemism":80, "phaser":80, "rotenone":80, "codon":80, "paraeducators":80, "dovetail":81, "lofted":81, "teems":81, "formulates":81, "cleave":81, "bargain-basement":81, "monstrously":81, "three-volume":81, "frequenting":81, "bad-boy":81, "life-affirming":81, "reinterpreting":81, "arced":81, "bottomed":81, "strange-looking":81, "well-positioned":81, "climate-controlled":81, "grosses":81, "wanes":81, "compellingly":81, "dark-brown":81, "hairdressers":81, "re-examined":81, "high-fives":81, "incorruptible":81, "hardier":81, "legalities":81, "squarish":81, "exhort":81, "nine-tenths":81, "railroaded":81, "abides":81, "remedying":81, "leading-edge":81, "trillion-dollar":81, "get-out-the-vote":81, "rebuff":81, "wobbles":81, "fold-out":81, "contractually":81, "glass-enclosed":81, "turncoat":81, "whiners":81, "curio":81, "drugging":81, "spuds":81, "replanted":81, "foxholes":81, "guideposts":81, "winnable":81, "graveled":81, "perquisites":81, "pecs":81, "mutts":81, "career-best":81, "disparagement":81, "galoshes":81, "extra-base":81, "co-manager":81, "windfalls":81, "savings-and-loan":81, "craw":81, "thunders":81, "spearmint":81, "high-crime":81, "nosebleed":81, "papas":81, "analyse":81, "financial-services":81, "buttresses":81, "postmarked":81, "deconstructionist":81, "marvellous":81, "colic":81, "garbanzo":81, "militarized":81, "roll-up":81, "class-based":81, "seaplane":81, "deforested":81, "wranglers":81, "showgirls":81, "turntables":81, "boas":81, "deletions":81, "first-line":81, "biplane":81, "electromagnetism":81, "her/his":81, "cosmologist":81, "sty":81, "microbiologists":81, "asylums":81, "bivouac":81, "placer":81, "suppressor":81, "pogrom":81, "toxicological":81, "jute":81, "non-aligned":81, "puzzlemaster":81, "cyclops":81, "polyphenols":81, "academician":81, "placental":81, "manta":81, "pentatonic":81, "isotopic":81, "nonintervention":81, "heterodox":81, "singaporean":81, "creche":81, "coenzyme":81, "woodcarving":81, "counterfactual":81, "chickenpox":81, "primes":81, "ruffian":81, "classificatory":81, "maquiladora":81, "non-social":81, "percutaneous":81, "non-indigenous":81, "angiogenesis":81, "improviser":81, "biogeographic":81, "novitiate":81, "dodgeball":81, "creoles":81, "viewscreen":81, "oedema":81, "adenoma":81, "telepresence":81, "epigenetic":81, "bonobo":81, "uncontracted":81, "lionfish":81, "taskmaster":81, "divvy":81, "spotlighting":81, "lauding":81, "hand-me-downs":81, "unburdened":81, "fortuitously":81, "stridently":81, "dexterous":81, "bulldoze":81, "sublimely":81, "quashed":81, "recurred":81, "deplores":81, "astronomically":81, "baldly":81, "egging":81, "migrates":81, "throttling":81, "reassembling":81, "nonnegotiable":81, "zapping":81, "hand-me-down":81, "hesitations":81, "sellouts":81, "free-wheeling":81, "five-part":81, "abhorrence":81, "hassle-free":81, "churchgoing":81, "one-off":81, "healthfully":81, "crossroad":81, "hour-and-a-half":81, "fixings":81, "moviemakers":81, "compunction":81, "miniaturized":81, "apportioned":81, "frightfully":81, "abeyance":81, "pinwheel":81, "reissue":81, "heartsick":81, "lower-middle-class":81, "embezzling":81, "glower":81, "cherub":81, "exotica":81, "astringent":81, "gladness":81, "to-day":81, "single-story":81, "prioritized":81, "burping":81, "dishonored":81, "lifer":81, "cover-ups":81, "cut-out":81, "country-western":81, "escapee":81, "open-faced":81, "stepsister":81, "chisels":81, "criminalization":81, "typographical":81, "carbon-based":81, "light-sensitive":81, "housedress":81, "endocrinology":81, "bagpipe":81, "anti-communism":81, "beaux":81, "premiers":81, "pallbearers":81, "sluts":81, "headhunters":81, "calligraphic":81, "sheetrock":81, "concreteness":81, "magpie":81, "julienne":81, "mystification":81, "snowboards":81, "armbands":81, "vaccinating":81, "anodized":81, "schematics":81, "storehouses":81, "cesarean":81, "taxidermist":81, "fathoms":81, "enema":81, "manifestos":81, "bolt-action":81, "ageing":81, "teepee":81, "high-status":81, "plug-ins":81, "subsoil":81, "keystroke":81, "resellers":81, "ulceration":81, "neighbouring":81, "dissimilarity":81, "satiety":81, "wingtip":81, "inpatients":81, "readmission":81, "hydrodynamic":81, "handicapper":81, "girder":81, "flyway":81, "multicellular":81, "fain":81, "no-hitters":81, "obit":81, "meritocratic":81, "bathhouses":81, "botulinum":81, "insoles":81, "cardiorespiratory":81, "exchange-rate":81, "nonracial":81, "yaw":81, "soba":81, "berliners":81, "divestment":81, "frictional":81, "counter-insurgency":81, "collimation":81, "bauxite":81, "histogram":81, "phytoestrogens":81, "lingual":81, "ductal":81, "dredges":81, "disproportionality":81, "beatitude":81, "pubertal":81, "wavefront":81, "tympanostomy":81, "shadings":81, "divulged":81, "eked":81, "ultramodern":81, "browsed":81, "sobriquet":81, "canvassed":81, "clotted":81, "flamboyance":81, "plod":81, "enunciating":81, "steeling":81, "churlish":81, "irretrievable":81, "scoffing":81, "sagely":81, "enunciate":81, "ankle-length":81, "mobilizes":81, "whitest":81, "catalyze":81, "sluggishness":81, "overstates":81, "adieu":81, "unmentioned":81, "plumed":81, "buffed":81, "reattach":81, "logon":81, "tinier":81, "well-qualified":81, "show-biz":81, "slowdowns":81, "tractable":81, "fusillade":81, "sixth-grader":81, "schoolmate":81, "high-fashion":81, "dishwater":81, "wringer":81, "overlords":81, "interlaced":81, "griped":81, "salary-cap":81, "yesterdays":81, "dreamland":81, "sputters":81, "cross-examined":81, "dissing":81, "deactivate":81, "unequally":81, "fixate":81, "reassertion":81, "dilettante":81, "rifleman":81, "malformed":81, "smirks":81, "feint":81, "impertinence":81, "copycats":81, "lightless":81, "counterattacks":81, "white-painted":81, "negligently":81, "interdict":81, "terrains":81, "hermits":81, "simpleton":81, "tomcat":81, "exchequer":81, "kook":81, "geophysicist":81, "oh-oh":81, "phonetically":81, "recognised":81, "social-service":81, "low-post":81, "raffles":81, "geezers":81, "lozenge":81, "post-season":81, "actualize":81, "single-celled":81, "joint-venture":81, "clean-air":81, "hobbles":81, "crocuses":81, "anesthetics":81, "dodo":81, "crankshaft":81, "pictographs":81, "first-born":81, "planking":81, "sequoia":81, "over-the-air":81, "cabling":81, "castaways":81, "veep":81, "underpass":81, "carpaccio":81, "shortcake":81, "home-care":81, "kebab":81, "playwriting":81, "personals":81, "cartographers":81, "renewable-energy":81, "reflexivity":81, "disbursements":81, "second-growth":81, "anticorruption":81, "footings":81, "inter-rater":81, "sanitizing":81, "necrotic":81, "scalpers":81, "bushmen":81, "cueing":81, "sidecar":81, "cellos":81, "tallgrass":81, "commissar":81, "planktonic":81, "periodization":81, "albumin":81, "scalar":81, "psychoanalytical":81, "tunisians":81, "patella":81, "hardtail":81, "niggas":81, "perioperative":81, "cryptographic":81, "meteoroids":81, "audiogram":81, "spurge":81, "metafictional":81, "packbag":81, "vasopressin":81, "puter":81, "melaleuca":81, "self-oriented":81, "factorization":81, "jump-started":81, "rankles":81, "overstepping":81, "pick-me-up":81, "democratic-controlled":81, "mellifluous":81, "vacationed":81, "imbroglio":81, "appealingly":81, "square-jawed":81, "be-all":81, "workhorses":81, "salable":81, "arm-twisting":81, "rioted":81, "niggling":81, "puncturing":81, "bratty":81, "divulging":81, "infirmities":81, "uplifted":81, "pigeonhole":81, "overemphasize":81, "backsides":81, "dazzlingly":81, "deprivations":81, "gravitating":81, "twenty-two-year-old":81, "reinvested":81, "disbanding":81, "lubricated":81, "bootstraps":81, "convalescence":81, "dunce":81, "receptionists":81, "government-subsidized":81, "kitchenware":81, "curlicues":81, "partiality":81, "enshrine":81, "miscellany":81, "aerie":81, "iconoclast":81, "corduroys":81, "multiplatinum":81, "musicologist":81, "fidgets":81, "lackey":81, "prude":81, "crucifixes":81, "big-band":81, "bedpost":81, "sharpener":81, "taxied":81, "purposeless":81, "tie-ins":81, "cupid":81, "blitzes":81, "updraft":81, "snorkel":81, "pinged":81, "dehumanization":81, "gazelles":81, "longshot":81, "planing":81, "convalescent":81, "decelerate":81, "french-canadian":81, "deadbolt":81, "earmarking":81, "high-yielding":81, "kilts":81, "nursemaid":81, "right-angle":81, "multi-disciplinary":81, "pre-modern":81, "lightyears":81, "howitzer":81, "shellac":81, "largo":81, "retested":81, "hallucinogens":81, "rewound":81, "centigrade":81, "deliveryman":81, "tolling":81, "brights":81, "bookies":81, "pre-christian":81, "gremlins":81, "solicitors":81, "snowdrift":81, "self-governance":81, "degeneracy":81, "nomenklatura":81, "pyrotechnic":81, "ironwood":81, "desensitization":81, "yip":81, "formatting":81, "antechamber":81, "ingots":81, "year-ago":81, "alterity":81, "anti-taliban":81, "sphagnum":81, "analyzers":81, "effluents":81, "wehrmacht":81, "semifinalist":81, "thumbnails":81, "female-headed":81, "antipsychotic":81, "flexor":81, "fixed-price":81, "croup":81, "sherds":81, "headscarves":81, "catechesis":81, "knave":81, "feedbacks":81, "teaching/learning":81, "sounder":81, "floe":81, "dyspnea":81, "self-organizing":81, "english-only":81, "paintball":81, "prochoice":81, "zimbabweans":81, "skybox":81, "klicks":81, "cyberpunk":81, "habitus":81, "melanesian":81, "rebounders":81, "prostatectomy":81, "necrotizing":81, "completers":81, "ghanaians":81, "klingons":81, "atrazine":81, "djinn":81, "outgroup":81, "x-wing":81, "mifepristone":81, "intercountry":81, "polyimide":81, "prefetching":81, "tizzy":81, "decimating":81, "slighted":81, "liveliest":81, "off-kilter":81, "undemanding":81, "corralled":81, "bone-chilling":81, "wend":81, "pathologically":81, "half-hidden":81, "upend":81, "leavings":81, "drubbing":81, "militantly":81, "twenty-three-year-old":81, "enlivening":81, "rehabbing":81, "forgone":81, "foreshadows":81, "embellishing":81, "obliterates":81, "ill-tempered":81, "catapulting":81, "take-charge":81, "intimated":81, "unfastened":81, "unpopulated":81, "castoffs":81, "star-shaped":81, "two-bit":81, "three-room":81, "phraseology":81, "cold-hearted":81, "ex-marine":81, "fourth-place":81, "overlays":81, "gusted":81, "kaput":81, "b-movie":81, "sublet":81, "bell-shaped":81, "chignon":81, "outed":81, "nimbus":81, "mistreating":81, "check-out":81, "queasiness":81, "self-protective":81, "abstruse":81, "consolidations":81, "muzzles":81, "incapacitating":81, "wheelbarrows":81, "seaworthy":81, "horn-rimmed":81, "bathrobes":81, "disallowed":81, "high-interest":81, "grandmas":81, "ultimatums":81, "legitimization":81, "martial-arts":81, "quasi":81, "sittings":81, "putatively":81, "propagates":81, "brown-skinned":81, "disused":81, "canonized":81, "hot-dog":81, "overplayed":81, "crybaby":81, "exoneration":81, "uncollected":81, "companys":81, "orifices":81, "honky":81, "major-label":81, "secularized":81, "comedienne":81, "triathlons":81, "landmines":81, "excommunicated":81, "riboflavin":81, "shirtwaist":81, "chaperones":81, "defamatory":81, "replications":81, "low-temperature":81, "metallurgical":81, "homestand":81, "physiologists":81, "nonprofessional":81, "nondiscriminatory":81, "landline":81, "tasmanian":81, "gyroscope":81, "streamside":81, "hydroxide":81, "moviegoer":81, "in-season":81, "daypack":81, "miscegenation":81, "faggots":81, "extender":81, "predestination":81, "artistes":81, "ceviche":81, "nunnery":81, "inhalers":81, "etude":81, "anaphylactic":81, "whistleblowers":81, "cactuses":81, "impoundments":81, "klansmen":81, "sorceress":81, "myeloma":81, "gauchos":81, "splitter":81, "reversibility":81, "poststructuralism":81, "aneurysms":81, "albedo":81, "tabular":81, "osteomyelitis":81, "maroons":81, "lux":81, "heparin":81, "transborder":81, "occultations":81, "immunotherapy":81, "rentier":81, "micros":81, "nystagmus":81, "ototoxic":81, "phage":81, "demersal":81, "distressingly":81, "ratcheted":81, "terrifyingly":81, "aggravates":81, "coddle":81, "ignominy":81, "well-researched":81, "herewith":81, "stuns":81, "egregiously":81, "endows":81, "glassy-eyed":81, "endowing":81, "blustering":81, "baby-faced":81, "demagogic":81, "salivate":81, "eyeballing":81, "counteracting":81, "glorifies":81, "augments":81, "standoffish":81, "history-making":81, "forgivable":81, "hand-written":81, "much-loved":81, "single-mindedness":81, "nubby":81, "dreads":81, "squalling":81, "contrive":81, "reroute":81, "heavy-lidded":81, "century-long":81, "wedge-shaped":81, "post-industrial":81, "communing":81, "guilt-free":81, "calibrating":81, "opening-night":81, "do-gooder":81, "impulsiveness":81, "redrawing":81, "segregating":81, "quavering":81, "pendulous":81, "businessperson":81, "hightech":81, "disconnects":81, "clunk":81, "two-wheeled":81, "gossips":81, "corroded":81, "pigskin":81, "renegotiating":81, "canted":81, "uncontroversial":81, "stabbings":81, "carded":81, "impeaching":81, "check-up":81, "systemically":81, "unlearn":81, "fifteen-minute":81, "debt-free":81, "goop":81, "hungers":81, "severs":81, "high-performing":81, "evildoers":81, "run-through":81, "knockdown":81, "junkets":81, "trackless":81, "multi-media":81, "argot":81, "pastureland":81, "warm-blooded":81, "pro-gun":81, "basemen":81, "co-executive":81, "reality-based":81, "euthanized":81, "nonstandard":81, "divisible":81, "chicken-fried":81, "shaver":81, "polyphonic":81, "parfait":81, "columnar":81, "boondocks":81, "rutting":81, "widescreen":81, "sonatas":81, "rigatoni":81, "ibm-compatible":81, "epistemologies":81, "prekindergarten":81, "bostonians":81, "riffles":81, "molar":81, "encyclopaedia":81, "hocks":81, "shallow-water":81, "ostriches":81, "same-store":81, "stingrays":81, "funhouse":81, "harpist":81, "electrics":81, "crossbows":81, "nationalisms":81, "biogeochemical":81, "localism":81, "scarab":81, "fineness":81, "lead-acid":81, "criminalist":81, "warfarin":81, "v-chip":81, "metrical":81, "freeride":81, "postcommunist":81, "overdrafts":81, "ethmoid":81, "wastage":81, "finfish":81, "worriers":81, "azeri":81, "tubeless":81, "submandibular":81, "haemorrhage":81, "sphenoid":81, "starcraft":81, "consultees":81, "runners-scored":81, "straggling":81, "little-noticed":81, "sweat-soaked":81, "staving":81, "regally":81, "groveling":81, "wallowed":81, "balks":81, "corrupts":81, "belittled":81, "disconcertingly":81, "chugs":81, "midsentence":81, "even-tempered":81, "deviating":81, "deveined":81, "inestimable":81, "spendthrift":81, "horseshoe-shaped":81, "fluttery":81, "dried-out":81, "diffidence":81, "out-of-doors":81, "one-and-a-half":81, "pin-striped":81, "re-examining":81, "refracted":81, "raring":81, "consumer-oriented":81, "shallowly":81, "powder-blue":81, "commodious":81, "disengaging":81, "depletes":81, "waddle":81, "steeping":81, "discontinuing":81, "larger-scale":81, "headlock":81, "abduct":81, "wriggles":81, "country-style":81, "awakes":81, "tinkled":81, "golden-brown":81, "inheritors":81, "speculatively":81, "co-production":81, "v-neck":81, "entrap":81, "splice":81, "one-hundred":81, "inscribes":81, "houseguest":81, "matriarchal":81, "infiltrates":81, "procrastinate":81, "turds":81, "puffiness":81, "contravention":81, "itty-bitty":81, "storerooms":81, "expressways":81, "blacking":81, "televising":81, "smelt":81, "chipmaker":81, "intrusiveness":81, "non-religious":81, "modelled":81, "actuaries":81, "characterised":81, "wrens":81, "pecker":81, "hard-rock":81, "one-child":81, "bolo":81, "self-employment":81, "bouillabaisse":81, "tenancy":81, "multiplayer":81, "andouille":81, "multistage":81, "timberline":81, "ventral":81, "sandhill":81, "watchmaker":81, "helical":81, "haggis":81, "visible-light":81, "ungulates":81, "aerials":81, "abortionist":81, "value-free":81, "homeboys":81, "intellectualism":81, "deerskin":81, "crocus":81, "declassify":81, "reproducibility":81, "empiricist":81, "time-dependent":81, "finial":81, "cardiomyopathy":81, "resistive":81, "freemasons":81, "bevel":81, "amniocentesis":81, "dragoons":81, "smithy":81, "dewatering":81, "pre-hispanic":81, "regionalization":81, "luminance":81, "venusian":81, "wildebeests":81, "librarianship":81, "genderless":81, "age-based":81, "full-blood":81, "phyla":81, "narratorial":81, "videodisc":81, "amyloid":81, "emotion-focused":81, "shoulder-to-shoulder":81, "obtrusive":81, "teemed":81, "reemerge":81, "unimagined":81, "amusingly":81, "weightier":81, "sprucing":81, "glibly":81, "circumvented":81, "rehash":81, "hectoring":81, "sure-footed":81, "street-smart":81, "foul-mouthed":81, "beached":81, "wastelands":81, "rent-free":81, "emmy-winning":81, "seven-figure":81, "sews":81, "misinterpreting":81, "underpinned":81, "de-emphasize":81, "blandness":81, "high-stress":81, "stiffest":81, "bustles":81, "multifarious":81, "foreclosing":81, "theoretician":81, "shushing":81, "swabbed":81, "sell-out":81, "newscasters":81, "barbiturates":81, "delightedly":81, "wanna-be":81, "half-a-dozen":81, "bombardments":81, "overachiever":81, "non-military":81, "child-like":81, "co-opting":81, "mid-1940s":81, "validly":81, "malleability":81, "holier":81, "dupe":81, "ironwork":81, "boning":81, "art-house":81, "three-stage":81, "shipwrecked":81, "off-field":81, "eyewear":81, "woof":81, "augur":81, "heavy-bottomed":81, "peepers":81, "speakeasy":81, "cannonballs":81, "domicile":81, "look-alikes":81, "excreted":81, "repayments":81, "chartering":81, "herrings":81, "velvets":81, "archived":81, "necking":81, "cornrows":81, "company-owned":81, "apportion":81, "third-seeded":81, "anti-corruption":81, "third-class":81, "glandular":81, "multistate":81, "sweet-potato":81, "ayatollahs":81, "categorizations":81, "playlists":81, "wideouts":81, "wherefore":81, "front-wheel":81, "homepage":81, "bangle":81, "starships":81, "roaster":81, "human-induced":81, "side-impact":81, "nectarine":81, "anime":81, "periodicity":81, "rivet":81, "special-purpose":81, "utilitarianism":81, "non-smoking":81, "signet":81, "non-lethal":81, "eyelets":81, "masochist":81, "tapenade":81, "pounds-feet":81, "microcomputers":81, "inter-ethnic":81, "wahhabi":81, "mandarins":81, "pectin":81, "bottler":81, "parlour":81, "calcification":81, "corn-based":81, "guatemalans":81, "astigmatism":81, "volitional":81, "bioweapons":81, "anarchism":81, "stile":81, "farmworker":81, "child-welfare":81, "tensor":81, "hookah":81, "laryngoscopy":81, "phenol":81, "snipe":81, "prussians":81, "self-transcendence":81, "taxon":81, "landuse":81, "maglev":81, "carthaginian":81, "tyrannosaur":81, "co-teaching":81, "tablature":81, "felicitous":81, "ever-popular":81, "fistfuls":81, "extra-long":81, "presaged":81, "plainer":81, "outbid":81, "serendipitously":81, "repositioned":81, "unappetizing":81, "conversationalist":81, "reimbursing":81, "lapsing":81, "conserves":81, "coziness":81, "wedging":81, "crapshoot":81, "resentfully":81, "short-circuit":81, "mortifying":81, "equal-opportunity":81, "kidded":81, "glowingly":81, "categorizes":81, "murkier":81, "rending":81, "haughtily":81, "conflated":81, "savors":81, "disgustingly":81, "clownish":81, "idolize":81, "resenting":81, "lulls":81, "mutating":81, "accrues":81, "spritz":81, "spur-of-the-moment":81, "open-mindedness":81, "doomsayers":81, "gainfully":81, "ponytailed":81, "slosh":81, "nubile":81, "foundering":81, "deaden":81, "uncontaminated":81, "north-facing":81, "workforces":81, "undesirables":81, "untruths":81, "edifying":81, "swabbing":81, "legged":81, "candidacies":81, "rollercoaster":81, "ten-dollar":81, "octogenarian":81, "co-chairs":81, "cockpits":81, "bordello":81, "abducting":81, "shootouts":81, "orderliness":81, "rewiring":81, "specters":81, "intracoastal":81, "bruiser":81, "liquidating":81, "anti-terror":81, "saunas":81, "bloat":81, "time-lapse":81, "sanctified":81, "hippopotamus":81, "five-year-olds":81, "cubbyhole":81, "balkanization":81, "teleconferencing":81, "borderless":81, "classless":81, "screed":81, "double-dip":81, "anti-gun":81, "madras":81, "rappelling":81, "two-out":81, "showgirl":81, "uprights":81, "pedicures":81, "pinata":81, "teacher-training":81, "fold-down":81, "psychotherapeutic":81, "mid-season":81, "plenum":81, "one-stroke":81, "bonny":81, "non-academic":81, "peace-keeping":81, "syncretic":81, "self-reflexive":81, "caped":81, "clothier":81, "housemaid":81, "orbiters":81, "triennial":81, "galleon":81, "turboprop":81, "non-profits":81, "skewness":81, "mudflats":81, "disjunctive":81, "mosquitos":81, "pastoralists":81, "bicarbonate":81, "corneal":81, "pimiento":81, "fillies":81, "cybernetics":81, "mesclun":81, "soft-money":81, "ejecta":81, "trimmers":81, "ogres":81, "toque":81, "hayride":81, "geckos":81, "triceratops":81, "theism":81, "kaolin":81, "comfrey":81, "slovenes":81, "pedometers":81, "high-need":81, "angiosperms":81, "biobased":81, "wresting":81, "wreaks":81, "unflagging":81, "enrage":81, "ill-considered":81, "penalizes":81, "incomparably":81, "derring-do":81, "slack-jawed":81, "ear-splitting":81, "restock":81, "straggled":81, "sing-song":81, "relived":81, "goaded":81, "gangbusters":81, "shebang":81, "unreconstructed":81, "mouth-watering":81, "buttoned-down":81, "gratuitously":81, "untutored":81, "fist-sized":81, "decimation":81, "ever-larger":81, "ejecting":81, "aced":81, "punchline":81, "bankrolled":81, "peach-colored":81, "shut-eye":81, "resignedly":81, "dark-colored":81, "cherry-red":81, "ostentation":81, "showstopper":81, "fruitfully":81, "misspent":81, "reexamining":81, "gazillion":81, "quarrelsome":81, "windstorm":81, "shindig":81, "chapped":81, "quality-control":81, "omnivorous":81, "entreaty":81, "freest":81, "restating":81, "querulous":81, "emotionalism":81, "bashes":81, "talismans":81, "useable":81, "photographically":81, "gambles":81, "aggrandizement":81, "levitating":81, "race-car":81, "scorched-earth":81, "velveteen":81, "abstracting":81, "luckless":81, "colloquy":81, "overcharging":81, "lamentations":81, "conventioneers":81, "tamping":81, "jackknife":81, "sporting-goods":81, "supplicant":81, "dotcom":81, "ruffians":81, "delegitimize":81, "burbs":81, "libation":81, "hemline":81, "ermine":81, "doers":81, "repugnance":81, "two-thirty":81, "seacoast":81, "hook-up":81, "beheadings":81, "bewitched":81, "gunwales":81, "inexpressible":81, "detachments":81, "tinderbox":81, "fiver":81, "stewardesses":81, "laceration":81, "bibs":81, "longitudinally":81, "nametag":81, "safes":81, "cripples":81, "officiate":81, "harlot":81, "riverboats":81, "interactively":81, "homemaking":81, "utopias":81, "pardoning":81, "doily":81, "brown-haired":81, "sectarianism":81, "final-round":81, "granary":81, "wicking":81, "dissents":81, "nightstick":81, "interbreeding":81, "etiologies":81, "family-based":81, "hieroglyphic":81, "sweetbreads":81, "minders":81, "tepees":81, "soft-shell":81, "filibustering":81, "surround-sound":81, "forestland":81, "burghers":81, "back-end":81, "anti-japanese":81, "dedications":81, "prefecture":81, "cross-contamination":81, "melancholia":81, "dalmatian":81, "psychodynamic":81, "whaler":81, "hymnal":81, "gunsmith":81, "pragmatics":81, "pupae":81, "wilsonian":81, "guardhouse":81, "sprites":81, "suborbital":81, "flexors":81, "estrus":81, "subsists":81, "neotropical":81, "sexual-harassment":81, "deejays":81, "anaconda":81, "mutineers":81, "swales":81, "sex-role":81, "workgroup":81, "cilia":81, "otologic":81, "waypoint":81, "cultic":81, "school-level":81, "covenantal":81, "counternarcotics":81, "reburial":81, "hausa":81, "embolization":81, "quantization":81, "masker":81, "residuum":81, "meerkats":81, "condensates":81, "suttee":81, "glucagon":81, "shies":81, "copiously":81, "heart-rending":81, "lustily":81, "highest-profile":81, "whimsically":81, "insouciant":81, "jettisoning":81, "piously":81, "reminisces":81, "tenuously":81, "grocery-store":81, "snafus":81, "bisects":81, "foodies":81, "laggard":81, "scandalized":81, "leafed":81, "outdid":81, "crystallizes":81, "imbues":81, "gab":81, "italian-style":81, "catastrophically":81, "now-familiar":81, "coif":81, "cogently":81, "time-saving":81, "pebbled":81, "seconded":81, "roguish":81, "icily":81, "bracketed":81, "meddlesome":81, "overhung":81, "ransacking":81, "rawness":81, "lengthens":81, "fly-by-night":81, "goofball":81, "palest":81, "throttled":81, "half-assed":81, "part-owner":81, "outperforming":81, "lauds":81, "do-gooders":81, "ghostlike":81, "going-away":81, "overstepped":81, "jet-lagged":81, "hucksters":81, "burglarized":81, "man-hours":81, "nubs":81, "parasols":81, "absurdist":81, "foist":81, "seaports":81, "omnipresence":81, "sinning":81, "first-graders":81, "temperamentally":81, "rebelliousness":81, "oxymoronic":81, "ballrooms":81, "under-represented":81, "game-winner":81, "unforced":81, "seventh-grader":81, "highball":81, "epaulets":81, "full-featured":81, "high-strength":81, "inapplicable":81, "subcontract":81, "medicated":81, "analogously":81, "regressing":81, "lampshade":81, "minibus":81, "twit":81, "free-ranging":81, "haunch":81, "inwards":81, "fight-or-flight":81, "rower":81, "bluesman":81, "clef":81, "nonfunctional":81, "triplicate":81, "machine-made":81, "two-shot":81, "speedster":81, "victimless":81, "receivership":81, "steeds":81, "journaling":81, "shill":81, "transmissible":81, "in-country":81, "minestrone":81, "non-economic":81, "granaries":81, "disassembly":81, "wallboard":81, "armadillos":81, "sadomasochistic":81, "agate":81, "metalworking":81, "poinsettia":81, "deniers":81, "muff":81, "creepers":81, "nitroglycerin":81, "beignets":81, "antidiscrimination":81, "kilowatt-hours":81, "anti-colonial":81, "gaff":81, "uplink":81, "gunboats":81, "paralegals":81, "vexation":81, "computationally":81, "snifter":81, "bondsman":81, "stockroom":81, "keratin":81, "sachet":81, "patroller":81, "five-spice":81, "best-picture":81, "vids":81, "watermen":81, "necropolis":81, "payphone":81, "nonnuclear":81, "lemur":81, "grenadiers":81, "tamarisk":81, "subduction":81, "anaemia":81, "five-factor":81, "caisson":81, "irrigators":81, "hippocampal":81, "theophylline":81, "articular":81, "stepfamilies":81, "oxycodone":81, "self-injury":81, "aleph":81, "coeducation":81, "peronism":81, "solicits":81, "deep-pocketed":81, "thought-out":81, "blundered":81, "capitalizes":81, "pell-mell":81, "hard-luck":81, "alleviates":81, "dampens":81, "girding":81, "after-work":81, "invigorated":81, "disproved":81, "perfidy":81, "uproariously":81, "zigzagged":81, "masterminding":81, "reneging":81, "mushrooming":81, "daringly":81, "smoggy":81, "intellects":81, "undernourished":81, "disposes":81, "reevaluated":81, "quavered":81, "hang-ups":81, "devalues":81, "flirtations":81, "impounded":81, "picketed":81, "better-educated":81, "ramped":81, "on-court":81, "dulling":81, "uncombed":81, "nervy":81, "rebalance":81, "keeled":81, "pitchforks":81, "inundate":81, "jowl":81, "civilize":81, "entailing":81, "colonialists":81, "untraceable":81, "resuscitated":81, "buttonhole":81, "air-dry":81, "lowlife":81, "lawyerly":81, "money-management":81, "hot-pink":81, "oratorical":81, "stringently":81, "roadkill":81, "room-temperature":81, "song-and-dance":81, "cawing":81, "dang":81, "off-year":81, "strafing":81, "home-style":81, "show-and-tell":81, "trippy":81, "hoeing":81, "anchorwoman":81, "strummed":81, "blowouts":81, "young-adult":81, "madwoman":81, "banisters":81, "clunkers":81, "beatnik":81, "rebuttals":81, "man-eating":81, "improv":81, "tornados":81, "co-captain":81, "full-year":81, "occupier":81, "self-serve":81, "teething":81, "baggies":81, "dulls":81, "impersonators":81, "mid-eighteenth":81, "takedown":81, "legless":81, "motorcyclists":81, "subversives":81, "coops":81, "delis":81, "retardant":81, "undrained":81, "internists":81, "medium-term":81, "sidewall":81, "vice-chairman":81, "farmstead":81, "o'er":81, "deformations":81, "belligerents":81, "cisterns":81, "anti-tobacco":81, "roundups":81, "employer-based":81, "carolers":81, "immune-system":81, "journeymen":81, "porcupines":81, "seminarian":81, "postmodernists":81, "regency":81, "accelerations":81, "councilor":81, "latins":81, "foreign-exchange":81, "hovercraft":81, "serf":81, "liberal-arts":81, "challah":81, "anatomist":81, "barkeep":81, "enlistees":81, "magnifier":81, "ironstone":81, "spectatorship":81, "repeater":81, "cassoulet":81, "spacewalk":81, "acculturated":81, "inhalants":81, "valance":81, "daguerreotypes":81, "confessors":81, "volcanos":81, "right-to-work":81, "lysine":81, "perceiver":81, "precast":81, "glutathione":81, "endotracheal":81, "charism":81, "tasers":81, "chieftaincy":81, "sensation-seeking":81, "psyllium":81, "stela":81, "concurrency":81, "meningiomas":81, "metathesis":81, "quelled":82, "pouncing":82, "parenthetically":82, "half-dead":82, "attention-getting":82, "almond-shaped":82, "five-acre":82, "brashness":82, "degenerates":82, "commiserate":82, "romancing":82, "unashamed":82, "off-hours":82, "booting":82, "urinated":82, "quotable":82, "bewitching":82, "all-embracing":82, "breezily":82, "foggiest":82, "snuffing":82, "degenerating":82, "second-guessed":82, "faultless":82, "benefitting":82, "bludgeoned":82, "devises":82, "ruminating":82, "synthesizes":82, "toted":82, "backpedaling":82, "hardest-working":82, "all-seeing":82, "wallflower":82, "verges":82, "obeisance":82, "compartmentalize":82, "tilled":82, "misdirected":82, "funny-looking":82, "restrains":82, "wifely":82, "conviviality":82, "mid-80s":82, "unevenness":82, "shrilly":82, "trilled":82, "counter-productive":82, "bistros":82, "top-ranking":82, "beehives":82, "civic-minded":82, "arsonists":82, "atmospherics":82, "back-office":82, "pro-active":82, "yearbooks":82, "germinating":82, "chauffeurs":82, "flits":82, "loafer":82, "restated":82, "disrespecting":82, "sheet-metal":82, "slinks":82, "premonitions":82, "capsize":82, "kick-ass":82, "redbrick":82, "bestiality":82, "closeted":82, "ointments":82, "two-income":82, "heavy-set":82, "gropes":82, "demoralization":82, "do-it-yourselfers":82, "supplicants":82, "sidebars":82, "drily":82, "arbors":82, "predefined":82, "cold-pressed":82, "scrapers":82, "transpose":82, "re-enters":82, "reconceptualization":82, "chef-owner":82, "sortie":82, "anti-depressant":82, "educative":82, "samplings":82, "bodywork":82, "molybdenum":82, "hard-cooked":82, "nonprescription":82, "denominators":82, "croplands":82, "standin":82, "hypoglycemia":82, "notional":82, "blowback":82, "herbalists":82, "roofer":82, "blanching":82, "terrarium":82, "chancellors":82, "non-smokers":82, "labor-management":82, "ethnological":82, "front-drive":82, "feedlots":82, "refereed":82, "grouch":82, "pontoons":82, "topwater":82, "alchemists":82, "sot":82, "sows":82, "bowhunter":82, "cubby":82, "acid-free":82, "manures":82, "nonlocal":82, "paralympic":82, "abstinence-only":82, "ionosphere":82, "humerus":82, "third-row":82, "detections":82, "nonaggressive":82, "boatswain":82, "mitotic":82, "groundcovers":82, "couloir":82, "courts-martial":82, "biogas":82, "vestry":82, "cybersex":82, "water-use":82, "parasympathetic":82, "coliforms":82, "afro-brazilian":82, "biofilm":82, "trilby":82, "samoans":82, "polygyny":82, "microarrays":82, "well-timed":82, "predating":82, "underwhelming":82, "gawked":82, "elucidating":82, "inelegant":82, "prudish":82, "wetly":82, "war-ravaged":82, "nakedly":82, "entombed":82, "squeaky-clean":82, "ruggedly":82, "plumped":82, "redoubtable":82, "schooler":82, "commends":82, "snowballed":82, "chucking":82, "disillusion":82, "consolations":82, "ruminate":82, "inefficiently":82, "elusiveness":82, "ponderously":82, "consolidates":82, "underling":82, "proffering":82, "double-barreled":82, "weirdos":82, "homogenized":82, "busybody":82, "footholds":82, "glossing":82, "striven":82, "betters":82, "pacified":82, "hippest":82, "gas-guzzling":82, "preen":82, "predisposes":82, "distended":82, "apprehensively":82, "plaited":82, "scalpels":82, "demarcate":82, "sequitur":82, "resettling":82, "signalled":82, "totalling":82, "ingratitude":82, "yellow-green":82, "voyeurs":82, "say-so":82, "scrunch":82, "unlabeled":82, "reassessed":82, "pieties":82, "self-limiting":82, "insensible":82, "provable":82, "palmed":82, "exterminating":82, "headwind":82, "underfunding":82, "overwork":82, "co-existence":82, "brickwork":82, "trifles":82, "hypnotize":82, "back-to-basics":82, "flutist":82, "spring-fed":82, "reincarnated":82, "ambit":82, "large-screen":82, "shampooing":82, "single-issue":82, "soldering":82, "country-club":82, "cliffside":82, "vassal":82, "unbound":82, "commie":82, "g-string":82, "gender-related":82, "employer-provided":82, "accompanist":82, "detonations":82, "antipoverty":82, "porcelains":82, "merino":82, "requisites":82, "weight-training":82, "world-view":82, "cloisters":82, "decanters":82, "unranked":82, "vegetal":82, "instrumentalist":82, "co-optation":82, "typography":82, "intermountain":82, "forger":82, "cross-culturally":82, "udder":82, "kimonos":82, "raingear":82, "full-term":82, "dressage":82, "carmelite":82, "redskin":82, "embeddedness":82, "missal":82, "embankments":82, "slaveholders":82, "landholdings":82, "pancreatitis":82, "dowels":82, "prelate":82, "snowsuit":82, "foals":82, "vermicelli":82, "crosscut":82, "zero-order":82, "projectionist":82, "sojourners":82, "refectory":82, "stilt":82, "stepper":82, "spongiform":82, "left-sided":82, "intercity":82, "polymorphism":82, "chunking":82, "suffixes":82, "superposition":82, "synecdoche":82, "saccharin":82, "cowgirls":82, "gyno":82, "chairpersons":82, "choses":82, "encoders":82, "zine":82, "dervishes":82, "nativists":82, "bolivians":82, "geomorphology":82, "muskies":82, "accessions":82, "spaceman":82, "rainfly":82, "tenon":82, "wavefunction":82, "listeria":82, "subspace":82, "nondepressed":82, "andro":82, "attainder":82, "thimerosal":82, "endotoxin":82, "full-throated":82, "hard-bitten":82, "trysts":82, "castoff":82, "thorniest":82, "saccharine":82, "re-entered":82, "sidle":82, "topnotch":82, "intermingled":82, "retracting":82, "wistfulness":82, "jailing":82, "castigated":82, "laughably":82, "backsliding":82, "spouted":82, "falloff":82, "madcap":82, "redoubled":82, "muffling":82, "souring":82, "short-tempered":82, "sizzles":82, "slurp":82, "lovelorn":82, "impute":82, "grandiosity":82, "absent-minded":82, "magnates":82, "swifter":82, "disowned":82, "unschooled":82, "unasked":82, "turtlenecks":82, "reconstructs":82, "retaking":82, "flatters":82, "regenerated":82, "prognosticators":82, "sinews":82, "enumerating":82, "squishing":82, "heat-seeking":82, "tweedy":82, "unalterable":82, "pilfering":82, "convulsively":82, "hosing":82, "unimpeachable":82, "bedspreads":82, "ventilate":82, "syrups":82, "impairing":82, "twenty-minute":82, "pre-industrial":82, "pre-eminence":82, "sniveling":82, "averts":82, "inscribing":82, "unwholesome":82, "pyrrhic":82, "king-sized":82, "muddling":82, "uncompetitive":82, "dicing":82, "worthlessness":82, "remakes":82, "antidotes":82, "crotchety":82, "disinfecting":82, "exhume":82, "viewable":82, "undercarriage":82, "mud-brick":82, "bookworm":82, "obstructionism":82, "parenthetical":82, "bubblegum":82, "macadam":82, "high-velocity":82, "preflight":82, "instant-read":82, "eves":82, "heresies":82, "plait":82, "underachiever":82, "antipasto":82, "pinon":82, "poultice":82, "greeter":82, "stapler":82, "pinch-hitting":82, "saddlebag":82, "wharves":82, "nonsmoker":82, "vintner":82, "snapdragons":82, "fontina":82, "polychrome":82, "actualized":82, "detonators":82, "larks":82, "crypts":82, "antiterrorist":82, "microeconomic":82, "native-american":82, "aurally":82, "schadenfreude":82, "plus-size":82, "cote":82, "enzymatic":82, "false-positive":82, "dalmatians":82, "child-friendly":82, "palpation":82, "self-reflective":82, "ump":82, "tee-shirt":82, "transvestites":82, "panfish":82, "oxygenation":82, "nonpublic":82, "mastectomies":82, "country-music":82, "madrigal":82, "plinth":82, "potash":82, "strangler":82, "midden":82, "tricksters":82, "vocalization":82, "irreversibility":82, "retinopathy":82, "immunocompromised":82, "scientism":82, "midges":82, "crocks":82, "homology":82, "nietzschean":82, "right-to-die":82, "punters":82, "motorway":82, "tryptophan":82, "buybacks":82, "t-cells":82, "casework":82, "undercount":82, "tippet":82, "nonusers":82, "qur'anic":82, "froggy":82, "crankbait":82, "autocracies":82, "cession":82, "e-reader":82, "hiv-negative":82, "breastmilk":82, "handedness":82, "state-society":82, "fractals":82, "sterilizations":82, "ganglion":82, "rhizome":82, "streptomycin":82, "group-based":82, "follicular":82, "muons":82, "nanobots":82, "dingo":82, "runtime":82, "suicidality":82, "hemodialysis":82, "eland":82, "monads":82, "chronotope":82, "disheartened":82, "attention-grabbing":82, "faves":82, "extols":82, "bespeak":82, "unsullied":82, "pestered":82, "cocksure":82, "off-the-cuff":82, "doles":82, "flamboyantly":82, "assail":82, "cacophonous":82, "fifth-generation":82, "hemming":82, "slapdash":82, "backfiring":82, "eyeful":82, "excoriated":82, "earthiness":82, "quarterbacking":82, "bright-colored":82, "sulk":82, "excepted":82, "sixty-year-old":82, "high-top":82, "imminence":82, "unbridgeable":82, "suckered":82, "hunkers":82, "whitened":82, "stubbled":82, "clacked":82, "accessorize":82, "stunk":82, "red-blooded":82, "reinvesting":82, "pissed-off":82, "whiner":82, "refurbishment":82, "counteroffensive":82, "breakable":82, "defaced":82, "destabilized":82, "grovel":82, "demoralize":82, "prepubescent":82, "sophisticates":82, "reentering":82, "natural-looking":82, "creditable":82, "pimply":82, "oaf":82, "father-daughter":82, "thermally":82, "miscarried":82, "rosebushes":82, "nonsteroidal":82, "honky-tonk":82, "frill":82, "anti-semites":82, "overcapacity":82, "needful":82, "collared":82, "hoodlum":82, "underpowered":82, "surfboards":82, "good-luck":82, "bareback":82, "biggest-selling":82, "handwoven":82, "blenders":82, "tyrannies":82, "prolongation":82, "two-track":82, "undefended":82, "hydrochloric":82, "winches":82, "agnostics":82, "writhes":82, "penknife":82, "enlargements":82, "handprint":82, "waken":82, "deaconess":82, "polyvinyl":82, "daredevils":82, "hagiography":82, "innuendos":82, "cloakroom":82, "spruces":82, "mangos":82, "maraschino":82, "indirection":82, "goggle":82, "signer":82, "reducer":82, "castrated":82, "deviants":82, "food-service":82, "low-voltage":82, "hora":82, "nonconformity":82, "exfoliation":82, "lockbox":82, "self-mutilation":82, "fairground":82, "universalistic":82, "mohicans":82, "urinalysis":82, "red-pepper":82, "armour":82, "ceramists":82, "bedroll":82, "mythos":82, "midmonth":82, "inclusivity":82, "yous":82, "streptococcus":82, "neo-classical":82, "expansionary":82, "diagrammatic":82, "exhumation":82, "marsupial":82, "adepts":82, "preoperatively":82, "vid":82, "myrtles":82, "shrews":82, "autochthonous":82, "apologetics":82, "lyceum":82, "shiners":82, "mandala":82, "overs":82, "austral":82, "place-based":82, "mastic":82, "internees":82, "bitumen":82, "papillary":82, "magnetization":82, "borehole":82, "fee-only":82, "center-based":82, "auroral":82, "monocytogenes":82, "aircar":82, "trumped-up":82, "winnow":82, "sojourns":82, "swamping":82, "sightseers":82, "fingerprinted":82, "strong-armed":82, "self-declared":82, "unmoored":82, "avers":82, "earth-shattering":82, "pinpricks":82, "reagan-era":82, "sunless":82, "encase":82, "accouterments":82, "consorting":82, "fifty-year-old":82, "megastar":82, "counteracts":82, "swaggered":82, "microscopically":82, "mid-fifties":82, "disfiguring":82, "recollected":82, "sorrowfully":82, "explainable":82, "get-rich-quick":82, "pucker":82, "gift-wrapped":82, "publishable":82, "baseboards":82, "quartering":82, "plumping":82, "reclassified":82, "gold-rimmed":82, "before-and-after":82, "baling":82, "rhymed":82, "reallocation":82, "slipshod":82, "unsurprised":82, "halving":82, "supersized":82, "individualize":82, "kick-off":82, "obscurely":82, "mudslinging":82, "soundproof":82, "rosier":82, "best-performing":82, "misted":82, "chaining":82, "pull-down":82, "laggards":82, "crosscountry":82, "antihero":82, "autocrat":82, "buttering":82, "f-word":82, "snakelike":82, "barrenness":82, "busboys":82, "air-raid":82, "repairmen":82, "metamorphose":82, "nobodies":82, "mannish":82, "avaricious":82, "out-of-bounds":82, "sniffer":82, "spouts":82, "superfine":82, "bullfrog":82, "strum":82, "fingerling":82, "essayists":82, "coeds":82, "privet":82, "cartographer":82, "autoworkers":82, "undergrads":82, "sociopaths":82, "exploitable":82, "nondemocratic":82, "filets":82, "chalets":82, "memorandums":82, "herbivorous":82, "sanitizer":82, "tenures":82, "home-court":82, "particularistic":82, "conditionally":82, "emancipatory":82, "breathalyzer":82, "tachycardia":82, "twenty-seventh":82, "trashcan":82, "civilisation":82, "broads":82, "catheterization":82, "historiographical":82, "sidewinder":82, "cerebrospinal":82, "councilmen":82, "pedagogic":82, "pilasters":82, "extents":82, "typists":82, "docents":82, "shtetl":82, "subwoofer":82, "lancers":82, "mondo":82, "pasteurization":82, "exerciser":82, "distillers":82, "swale":82, "one-step":82, "algorithmic":82, "sequencer":82, "crocs":82, "cultists":82, "walruses":82, "sharps":82, "intermediate-term":82, "subunits":82, "rule-making":82, "reclassification":82, "prominences":82, "nooses":82, "autofocus":82, "outsole":82, "illuminator":82, "hessian":82, "gaffer":82, "emerging-market":82, "germanium":82, "haw":82, "humpbacks":82, "buckboard":82, "open-pollinated":82, "orthotics":82, "thorium":82, "clearcuts":82, "regolith":82, "ascetics":82, "latencies":82, "maser":82, "malathion":82, "pleomorphic":82, "wardroom":82, "affectivity":82, "reader-response":82, "bahian":82, "nucleon":82, "self-instructions":82, "feted":82, "skews":82, "allot":82, "heartbreakingly":82, "vibrantly":82, "jocular":82, "schmooze":82, "condescendingly":82, "two-edged":82, "whooshed":82, "jokey":82, "enjoined":82, "hankering":82, "heartbreaker":82, "toughening":82, "waylaid":82, "guffaw":82, "unflinchingly":82, "prodigiously":82, "slackened":82, "better-paying":82, "shrink-wrapped":82, "four-mile":82, "hurtle":82, "acceptably":82, "flashier":82, "inflaming":82, "sensitized":82, "undulations":82, "twenty-four-year-old":82, "inside-out":82, "congealed":82, "dupes":82, "sours":82, "coexists":82, "hitchhiked":82, "top-to-bottom":82, "foretaste":82, "fifth-grader":82, "messed-up":82, "severest":82, "oxfords":82, "marathoner":82, "sissies":82, "disempowered":82, "hard-liner":82, "two-fifths":82, "swathe":82, "middleclass":82, "quivers":82, "parklands":82, "hundredfold":82, "villainy":82, "starlit":82, "quirked":82, "victimize":82, "sunburnt":82, "gangland":82, "tumbleweed":82, "busyness":82, "fags":82, "commercializing":82, "steamroller":82, "decelerating":82, "underarm":82, "schematically":82, "understudied":82, "tubby":82, "offish":82, "chomp":82, "tolled":82, "afterschool":82, "lookalike":82, "gongs":82, "multigrain":82, "foils":82, "acetone":82, "late-stage":82, "viridian":82, "airframe":82, "litigant":82, "oracular":82, "home-building":82, "marksmen":82, "mosey":82, "bingeing":82, "submissiveness":82, "serfdom":82, "gerrymandering":82, "cerebellum":82, "rumba":82, "transmutation":82, "prelates":82, "declaratory":82, "debaters":82, "footmen":82, "semolina":82, "behaviorists":82, "toots":82, "steamboats":82, "vespers":82, "rear-drive":82, "plat":82, "angiogram":82, "chainstays":82, "panniers":82, "leachate":82, "aphasia":82, "philological":82, "unexposed":82, "input/output":82, "batterer":82, "honourable":82, "cantata":82, "longshore":82, "bottlenose":82, "confounders":82, "methodism":82, "positrons":82, "plasmas":82, "anaesthetic":82, "embryology":82, "pollinator":82, "walkie":82, "rhinoplasty":82, "concordant":82, "regulative":82, "phthalates":82, "armorer":82, "below-knee":82, "microarray":82, "leptons":82, "brownfields":82, "fulminant":82, "attenders":82, "thyroidectomy":82, "datalink":82, "lightning-fast":82, "debacles":82, "quick-fix":82, "preposterously":82, "well-formed":82, "loosing":82, "sickeningly":82, "ropy":82, "braggadocio":82, "levying":82, "reawakening":82, "neutralizes":82, "paralyzes":82, "harking":82, "bankrolling":82, "sixth-largest":82, "billion-plus":82, "battle-hardened":82, "highfalutin":82, "well-loved":82, "piddling":82, "old-timey":82, "one-upmanship":82, "mortgaged":82, "made-to-order":82, "necklines":82, "starker":82, "evicting":82, "embodiments":82, "redecorating":82, "twenty-one-year-old":82, "screwed-up":82, "intoning":82, "imperiously":82, "dismembering":82, "six-page":82, "grandmotherly":82, "electrify":82, "doyenne":82, "tyke":82, "sandy-haired":82, "besieging":82, "verandas":82, "show-off":82, "spliced":82, "prophesied":82, "high-gloss":82, "second-team":82, "swaddling":82, "unthinkingly":82, "erotically":82, "olive-green":82, "hungered":82, "inappropriateness":82, "penitence":82, "ands":82, "thieving":82, "lanced":82, "crossly":82, "overnights":82, "yardsticks":82, "better-off":82, "popsicles":82, "incubate":82, "fairyland":82, "mimosa":82, "attainments":82, "vietnam-era":82, "invalidating":82, "eight-point":82, "pomade":82, "self-reporting":82, "foundries":82, "drug-trafficking":82, "sequestering":82, "forklifts":82, "brokenness":82, "colicky":82, "laryngitis":82, "licence":82, "pan-seared":82, "ice-covered":82, "resource-rich":82, "bricklayer":82, "chinese-made":82, "neediness":82, "compartmentalization":82, "wattle":82, "moccasin":82, "hayloft":82, "voyagers":82, "sideshows":82, "art-world":82, "rickets":82, "lie-detector":82, "lobotomy":82, "briars":82, "speakership":82, "yugoslavs":82, "pre-tax":82, "zirconium":82, "topically":82, "corrosion-resistant":82, "sportfishing":82, "astrologers":82, "rain-forest":82, "cummerbund":82, "encapsulation":82, "dilatory":82, "church-related":82, "heifers":82, "dismounts":82, "unsinkable":82, "briquettes":82, "mensch":82, "beanstalk":82, "cocksucker":82, "typos":82, "nondestructive":82, "embarkation":82, "synaptic":82, "atomistic":82, "tomatillo":82, "parasitism":82, "tantric":82, "stowaway":82, "anisotropy":82, "composters":82, "insole":82, "paschal":82, "grandmaster":82, "social-media":82, "biomes":82, "submersibles":82, "cowrie":82, "dray":82, "tankard":82, "military-to-military":82, "biathlon":82, "pure-tone":82, "teleportation":82, "criticality":82, "apostolate":82, "pumper":82, "probiotic":82, "age-adjusted":82, "participle":82, "dispensaries":82, "celiac":82, "transept":82, "septuplets":82, "madrassas":82, "feldspar":82, "spatial-temporal":82, "lightsaber":82, "nonformal":82, "turbomachinery":82, "codling":82, "meningococcal":82, "rinderpest":82, "all-too-familiar":82, "then-gov":82, "rebuilds":82, "reinvigorated":82, "trounced":82, "expunge":82, "unstuck":82, "enthuses":82, "covets":82, "facetiously":82, "unthreatening":82, "immerses":82, "diverges":82, "blandishments":82, "allying":82, "deadpans":82, "disinclination":82, "proffers":82, "honchos":82, "unnerve":82, "unbending":82, "tip-top":82, "business-oriented":82, "zeroes":82, "memorializing":82, "tumbledown":82, "cherishing":82, "ecstatically":82, "ruination":82, "two-hundred":82, "drooled":82, "obdurate":82, "trivializing":82, "wolfing":82, "busty":82, "wordy":82, "infest":82, "licentious":82, "shuffleboard":82, "preened":82, "youthfulness":82, "gray-blue":82, "irrigating":82, "hair-trigger":82, "warmups":82, "steepness":82, "daffy":82, "roundtrip":82, "sweet-and-sour":82, "dejection":82, "troubleshoot":82, "objectify":82, "deactivated":82, "ditties":82, "foraged":82, "inoperative":82, "community-wide":82, "nontechnical":82, "slatted":82, "shits":82, "fur-lined":82, "radicalized":82, "twined":82, "gouges":82, "tumbleweeds":82, "overcharged":82, "must-win":82, "unabridged":82, "crewcut":82, "illiterates":82, "exhibitionist":82, "meat-packing":82, "all-girl":82, "chrissakes":82, "curios":82, "revises":82, "persecutors":82, "bests":82, "sensually":82, "ripens":82, "unsealed":82, "retrospectives":82, "heatproof":82, "quenching":82, "blotch":82, "fleshly":82, "debasement":82, "cheapskate":82, "robed":82, "multifunctional":82, "pensioner":82, "emplacements":82, "marionettes":82, "large-format":82, "bell-bottoms":82, "acquittals":82, "blonds":82, "tike":82, "no-bid":82, "stashes":82, "recapitulation":82, "conformation":82, "seventh-graders":82, "gunboat":82, "orthopedics":82, "biohazard":82, "hitchhikers":82, "yeas":82, "check-cashing":82, "sinkholes":82, "ice-free":82, "reagents":82, "inclusions":82, "cease-fires":82, "douche":82, "encores":82, "transiting":82, "nonfarm":82, "lay-up":82, "investigational":82, "midshipman":82, "judgeships":82, "empanadas":82, "wetsuit":82, "almanacs":82, "otolaryngologists":82, "sensitizing":82, "guest-worker":82, "contiguity":82, "marimba":82, "touchpad":82, "radiography":82, "agoraphobia":82, "exacerbations":82, "gametes":82, "oarsmen":82, "canneries":82, "lymphocyte":82, "yap":82, "airboat":82, "yo-yos":82, "mineralization":82, "pantheistic":82, "capacitive":82, "perfectionistic":82, "tenons":82, "moravians":82, "serif":82, "acadians":82, "nondiagnostic":82, "onrushing":82, "victorian-era":82, "eking":82, "languor":82, "odds-on":82, "jump-starting":82, "touristy":82, "hellos":82, "certifiable":82, "bonhomie":82, "dovetails":82, "ever-shifting":82, "airily":82, "self-pitying":82, "acclimated":82, "thusly":82, "sugarcoat":82, "wending":82, "slicked-back":82, "pencil-thin":82, "bisected":82, "avowedly":82, "pulverize":82, "explicable":82, "blather":82, "enigmatically":82, "redressing":82, "readjusting":82, "matchless":82, "blunting":82, "field-tested":82, "fathomless":82, "transitioned":82, "squelched":82, "recitations":82, "oiling":82, "fudging":82, "fining":82, "reinvents":82, "footfall":82, "wantonly":82, "interdenominational":82, "backless":82, "jowly":82, "sunbathe":82, "veined":82, "rinses":82, "righthand":82, "snaky":82, "turbaned":82, "lower-middle":82, "anachronisms":82, "coeditor":82, "great-granddaughter":82, "striations":82, "sandstorms":82, "snubbing":82, "realigning":82, "pedagogically":82, "state-wide":82, "handsomest":82, "accidently":82, "clairvoyant":82, "beardless":82, "leotards":82, "jiggles":82, "psychically":82, "horseshit":82, "shitless":82, "goodie":82, "procrastinating":82, "twenty-something":82, "uniter":82, "barrettes":82, "ornamentals":82, "doggone":82, "conveyer":82, "deltas":82, "aggressions":82, "righthanded":82, "vindictiveness":82, "patrolmen":82, "league-high":82, "pan-american":82, "mincemeat":82, "brunettes":82, "rectilinear":82, "satellite-based":82, "ambrosia":82, "unspent":82, "insulators":82, "bent-over":82, "piranhas":82, "saps":82, "copulate":82, "food-related":82, "numinous":82, "expressionists":82, "up-or-down":82, "antibiotic-resistant":82, "mimes":82, "circulars":82, "hair-care":82, "humors":82, "unchurched":82, "juju":82, "yuk":82, "rambler":82, "guerillas":82, "co-chief":82, "herbivore":82, "reverb":82, "inking":82, "nonsectarian":82, "instrumentally":82, "bunions":82, "pan-european":82, "adverb":82, "sun-like":82, "stickball":82, "lectionary":82, "backstretch":82, "deadfall":82, "marxian":82, "snakebite":82, "coloreds":82, "shim":82, "malachite":82, "nonliving":82, "banc":82, "tannic":82, "israelite":82, "gunmakers":82, "tobacco-related":82, "patentable":82, "behaviorism":82, "semaphore":82, "mirin":82, "modulator":82, "dildo":82, "nonlinearity":82, "state-led":82, "rutabaga":82, "nasopharyngeal":82, "geomagnetic":82, "e-business":82, "canna":82, "retinitis":82, "chicanos":82, "zoonotic":82, "psychologies":82, "prosody":82, "trapezius":82, "serological":82, "superset":82, "digesters":82, "lockean":82, "acidosis":82, "monism":82, "episcopacy":82, "bracero":82, "post-intervention":82, "transracial":82, "fijian":82, "bilirubin":82, "interactionism":82, "nonsocial":82, "tricorder":82, "schlepping":82, "harkens":82, "monopolizing":82, "urgings":82, "croons":82, "mid-50s":82, "loamy":82, "enlivens":82, "undergird":82, "lopped":82, "redid":82, "sun-kissed":82, "rearranges":82, "thwarts":82, "re-emerged":82, "agog":82, "domesticate":82, "mewling":82, "uncorked":82, "fuzziness":82, "two-tenths":82, "send-up":82, "evinces":82, "lordly":82, "maneuverings":82, "lonelier":82, "outhouses":82, "marring":82, "bedevil":82, "flummoxed":82, "unbowed":82, "huddles":82, "obstinately":82, "three-fold":82, "catchphrase":82, "earth-friendly":82, "whiten":82, "spread-eagled":82, "repulse":82, "blackmailed":82, "co-hosts":82, "uncorrected":82, "implores":82, "two-acre":82, "clubbed":82, "disqualifying":82, "self-possession":82, "wondrously":82, "unobtainable":82, "dispensable":82, "humped":82, "tanking":82, "sanctify":82, "pariahs":82, "jangle":82, "perversions":82, "stratagems":82, "agriculturally":82, "censorious":82, "technocrat":82, "redeemable":82, "invulnerability":82, "tamped":82, "get-tough":82, "nonpayment":82, "dismember":82, "huckster":82, "hangdog":82, "valedictory":82, "tuneup":82, "snobby":82, "polishes":82, "great-great":82, "post-katrina":82, "sociologically":82, "appendectomy":82, "hitless":82, "amnesiac":82, "embroidering":82, "callin":82, "burped":82, "second-term":82, "teats":82, "decaffeinated":82, "stovepipe":82, "foreknowledge":82, "spasmodic":82, "micromanaging":82, "precision-guided":82, "gabardine":82, "hostage-taking":82, "doped":82, "poetical":82, "assemblywoman":82, "s'mores":82, "webmaster":82, "steam-powered":82, "taken-for-granted":82, "topiary":82, "nonscientific":82, "fourth-seeded":82, "readmitted":82, "troubleshooter":82, "impound":82, "tabulations":82, "single-shot":82, "blood-alcohol":82, "fourth-century":82, "multisensory":82, "automatics":82, "non-essential":82, "joinery":82, "baby-boomers":82, "carbon-dioxide":82, "nonrandom":82, "porcine":82, "teleology":82, "psychodrama":82, "sexualized":82, "tempura":82, "folktale":82, "oriole":82, "astronautics":82, "hydrologist":82, "nonagricultural":82, "showboat":82, "evenness":82, "cellmate":82, "single-party":82, "compressible":82, "boatmen":82, "schnitzel":82, "duplexes":82, "rosebush":82, "assembler":82, "soft-core":82, "mastodon":82, "illusionistic":82, "soviet-american":82, "custards":82, "loggerhead":82, "probative":82, "glyphs":82, "sandpipers":82, "licit":82, "sheers":82, "manipulatives":82, "policyholder":82, "batt":82, "anthropomorphism":82, "preposition":82, "sandblasting":82, "sickles":82, "scull":82, "hymen":82, "prenup":82, "non-natives":82, "latitudinal":82, "rupee":82, "adsorption":82, "faun":82, "netbook":82, "palmtop":82, "bariatric":82, "amo":82, "wiseguys":82, "muleys":82, "ivory-billed":82, "medigap":82, "telenovela":82, "influent":82, "biome":82, "heterotrophic":82, "skiwear":82, "expiratory":82, "mortises":82, "msec":82, "sauropod":82, "wash-out":82, "greenling":82, "unbelieving":82, "uninviting":82, "encasing":82, "reveres":82, "workmanlike":82, "little-used":82, "perking":82, "stagnated":82, "prefaced":82, "full-throttle":82, "lop":82, "tone-deaf":82, "five-page":82, "vaporous":82, "sun-warmed":82, "altercations":82, "shortsightedness":82, "impel":82, "penciled":82, "invitation-only":82, "archly":82, "redecorate":82, "undershirts":82, "mete":82, "scattershot":82, "unlatched":82, "crudest":82, "muddied":82, "thousand-dollar":82, "neatest":82, "cul-de-sacs":82, "incinerate":82, "rubber-stamp":82, "jingoistic":82, "boom-and-bust":82, "popularization":82, "gale-force":82, "buzz":82, "republican-led":82, "youth-oriented":82, "whimpers":82, "spluttered":82, "runaround":82, "dues-paying":82, "parachuted":82, "counterbalancing":82, "shod":82, "thunderstruck":82, "contralto":82, "off-shore":82, "elitists":82, "ridgelines":82, "lackeys":82, "legalese":82, "insincerity":82, "everytime":82, "stooges":82, "punted":82, "feigns":82, "tweeds":82, "trolled":82, "watchable":82, "tarnishing":82, "four-and-a-half":82, "co-owners":82, "czarist":82, "cardigans":82, "drive-thru":82, "overtaxed":82, "self-delusion":82, "rerouting":82, "procedurally":82, "shoelace":82, "write-up":82, "neighborliness":82, "scuff":82, "divots":82, "hurdler":82, "bedcovers":82, "cohost":82, "valets":82, "unrepresented":82, "clatters":82, "felt-tip":82, "unexpressed":82, "anti-cancer":82, "outbuilding":82, "pinafore":82, "schmaltz":82, "discontinuation":82, "medicate":82, "ejects":82, "banditry":82, "fat-burning":82, "tinting":82, "defecate":82, "pantsuits":82, "betrothed":82, "hollyhocks":82, "knife-edge":82, "cropper":82, "anti-anxiety":82, "non-competitive":82, "hypoallergenic":82, "sitar":82, "earbuds":82, "deductibility":82, "pollinating":82, "choirboy":82, "one-run":82, "airmail":82, "crashers":82, "soiling":82, "upslope":82, "weigh-in":82, "powerboats":82, "drownings":82, "single-day":82, "multimodal":82, "time-travel":82, "non-medical":82, "anti-union":82, "centripetal":82, "nacho":82, "parchment-lined":82, "tanner":82, "patisserie":82, "bushings":82, "imputation":82, "wheelie":82, "oil-field":82, "gimlet":82, "thimbles":82, "meltwater":82, "mid-point":82, "asterism":82, "redemptions":82, "no-hit":82, "pentathlon":82, "scarification":82, "revivalism":82, "distilleries":82, "bugling":82, "datasets":82, "relinquishment":82, "skyboxes":82, "harpy":82, "concourses":82, "serialized":82, "agronomic":82, "illuminations":82, "sexton":82, "kurtosis":82, "ghostwriter":82, "headrests":82, "prostatic":82, "eurocentrism":82, "legation":82, "aestheticism":82, "microcosms":82, "corky":82, "gram-negative":82, "heterosexism":82, "anode":82, "hematite":82, "tracheostomy":82, "degradable":82, "bromine":82, "speeder":82, "decolonizing":82, "school-to-work":82, "percolation":82, "interdisciplinarity":82, "non-minority":82, "warder":82, "work/family":82, "trachoma":82, "thymic":82, "pneumatological":82, "boyar":82, "windowshade":82, "self-aggrandizing":83, "abysmally":83, "heartrending":83, "sun-dappled":83, "teem":83, "precedent-setting":83, "backhanded":83, "sympathizing":83, "deploring":83, "brandish":83, "gnaws":83, "indecisiveness":83, "redeems":83, "chowing":83, "imbibing":83, "raconteur":83, "conversed":83, "trendiest":83, "affixing":83, "evened":83, "chagrined":83, "late-breaking":83, "indigestible":83, "odder":83, "inaugurating":83, "radiantly":83, "suppleness":83, "re-read":83, "psych":83, "telegraphed":83, "disparagingly":83, "artless":83, "self-deprecation":83, "imperturbable":83, "gabbing":83, "entangle":83, "outsold":83, "outspokenness":83, "intimidates":83, "good-paying":83, "billow":83, "preciousness":83, "tough-looking":83, "flog":83, "unmentionable":83, "service-oriented":83, "telephoning":83, "investigatory":83, "prophetically":83, "mineral-rich":83, "nags":83, "church-going":83, "impinging":83, "squawks":83, "sun-bleached":83, "pedigrees":83, "riverbeds":83, "juiced":83, "dodgy":83, "numberless":83, "lifelines":83, "wracking":83, "dazzles":83, "relatable":83, "schisms":83, "whereof":83, "computer-related":83, "interrelatedness":83, "tented":83, "high-fiving":83, "perchance":83, "adversities":83, "woebegone":83, "uncapped":83, "single-game":83, "rainy-day":83, "holstered":83, "honks":83, "seascapes":83, "carpooling":83, "head-first":83, "multitask":83, "off-track":83, "uppercut":83, "retouching":83, "gored":83, "resets":83, "metabolized":83, "half-staff":83, "oxidize":83, "splotch":83, "quackery":83, "overbuilding":83, "pinwheels":83, "epicurean":83, "impostors":83, "folkways":83, "turnkey":83, "amoeba":83, "chucks":83, "bongo":83, "deal-making":83, "fishmonger":83, "money-back":83, "information-technology":83, "armband":83, "culverts":83, "mononucleosis":83, "soapstone":83, "fez":83, "heart-attack":83, "earmuffs":83, "multi-level":83, "marmots":83, "non-government":83, "householders":83, "stalagmites":83, "red-gold":83, "woodworkers":83, "symptom-free":83, "bedpan":83, "brazier":83, "co-pays":83, "groomers":83, "climatologists":83, "earphone":83, "evolutionists":83, "glassing":83, "ontologically":83, "windlass":83, "mayflies":83, "inactivate":83, "ethnographies":83, "helipad":83, "salesgirl":83, "estimator":83, "muscularity":83, "extralegal":83, "herdsmen":83, "tarantulas":83, "speculum":83, "witching":83, "adipose":83, "malted":83, "rural-urban":83, "experimentalists":83, "gas-electric":83, "looking-glass":83, "parallax":83, "incapacitation":83, "nib":83, "encyclicals":83, "hooligan":83, "u-boats":83, "large-company":83, "soothsayer":83, "violas":83, "styler":83, "extractor":83, "bigamy":83, "functionalism":83, "flintlock":83, "photoelectric":83, "ugandans":83, "areal":83, "conjugation":83, "minima":83, "nestlings":83, "drive-ins":83, "souffles":83, "tradeswomen":83, "offroad":83, "hysteresis":83, "episcopate":83, "microcredit":83, "patient-centered":83, "reputational":83, "foodservice":83, "lymphomas":83, "servos":83, "alopecia":83, "enculturation":83, "anti-chinese":83, "cybercrime":83, "sexualities":83, "dendrites":83, "africanists":83, "mediastinum":83, "giardia":83, "life-history":83, "male-male":83, "paragons":83, "overextended":83, "well-rehearsed":83, "understates":83, "foreseeing":83, "segued":83, "rashly":83, "cruder":83, "alighting":83, "levelheaded":83, "better-than-average":83, "middleaged":83, "entrancing":83, "wisecracking":83, "homebody":83, "zealotry":83, "top-shelf":83, "frequents":83, "purrs":83, "jury-rigged":83, "rail-thin":83, "shimmying":83, "rhapsodic":83, "fiendishly":83, "assailing":83, "pacifying":83, "sloughing":83, "predated":83, "sufficed":83, "partook":83, "pleasingly":83, "bleakest":83, "barrages":83, "cratered":83, "disallow":83, "lilliputian":83, "mutterings":83, "steppingstone":83, "blown-up":83, "pale-blue":83, "tiff":83, "poor-quality":83, "disease-fighting":83, "instants":83, "anti-vietnam":83, "longer-range":83, "tangents":83, "headwinds":83, "wheezy":83, "dealmaking":83, "kingly":83, "corkage":83, "wire-mesh":83, "put-down":83, "alumna":83, "physiques":83, "sidekicks":83, "odes":83, "baying":83, "nightgowns":83, "re-signing":83, "anti-clinton":83, "grindstone":83, "scampers":83, "retesting":83, "themself":83, "yipping":83, "victimizing":83, "two-faced":83, "preempting":83, "focussing":83, "trial-and-error":83, "chainsaws":83, "one-hit":83, "expansiveness":83, "correctable":83, "tossup":83, "pushcart":83, "gleaning":83, "preadolescent":83, "roofless":83, "cowlick":83, "unoriginal":83, "cowers":83, "syncopation":83, "stanchions":83, "imputed":83, "motorboats":83, "two-star":83, "sloughs":83, "stereotypic":83, "speeders":83, "typhoons":83, "pimping":83, "huevos":83, "valorization":83, "government-to-government":83, "lanyard":83, "team-building":83, "blow-dryer":83, "levelly":83, "glutinous":83, "soy-based":83, "war-fighting":83, "steelworker":83, "autobahn":83, "knapsacks":83, "mainstreamed":83, "touch-up":83, "divot":83, "prostituting":83, "paleontological":83, "proofreading":83, "mass-production":83, "arabians":83, "staves":83, "sheepdog":83, "calliope":83, "love-making":83, "baklava":83, "begotten":83, "hoofbeats":83, "contouring":83, "chino":83, "ecologies":83, "ellipsis":83, "subsections":83, "self-selection":83, "odorous":83, "water-quality":83, "speedboats":83, "perspectival":83, "chanterelle":83, "subcultural":83, "pharaonic":83, "organized-crime":83, "handicraft":83, "rubella":83, "missile-defense":83, "visualizations":83, "sport-specific":83, "statutorily":83, "all-electric":83, "recirculating":83, "acute-care":83, "ob-gyn":83, "lifeways":83, "cuneiform":83, "hatchling":83, "piecework":83, "g-spot":83, "elastin":83, "beryllium":83, "pentameter":83, "clear-cuts":83, "chipmakers":83, "hobbits":83, "foundling":83, "immunosuppressive":83, "monasticism":83, "supermajority":83, "actuation":83, "ruffed":83, "segmental":83, "ventriloquism":83, "coots":83, "fast-pitch":83, "catechists":83, "euro-americans":83, "metatarsal":83, "longleaf":83, "infallibly":83, "seahorse":83, "sawhorse":83, "buccal":83, "personal/social":83, "dexamethasone":83, "labourer":83, "buckyballs":83, "post-training":83, "chiastic":83, "plumbed":83, "nuzzle":83, "outstripping":83, "coquettish":83, "unlikeliest":83, "curdled":83, "supercilious":83, "re-emerge":83, "aping":83, "retooled":83, "deregulating":83, "merrier":83, "denigrated":83, "glass-walled":83, "reproachfully":83, "good-size":83, "too-small":83, "refrains":83, "bawl":83, "double-take":83, "schoolkids":83, "ennobling":83, "hotbeds":83, "indicts":83, "notepads":83, "childishly":83, "jokers":83, "optioned":83, "fattened":83, "protectiveness":83, "fluffing":83, "oval-shaped":83, "emulates":83, "retards":83, "little-girl":83, "smudging":83, "unseasonable":83, "conflict-of-interest":83, "splatters":83, "envying":83, "reproached":83, "hovels":83, "perishing":83, "abruptness":83, "shaper":83, "people-watching":83, "socials":83, "archways":83, "warpath":83, "bilious":83, "lusts":83, "rouses":83, "sidles":83, "reenacting":83, "gearshift":83, "wilts":83, "disembarking":83, "never-before-seen":83, "deadbeats":83, "riffraff":83, "work-in-progress":83, "overlaying":83, "derriere":83, "mentalities":83, "good-night":83, "subdivide":83, "mordant":83, "mollusk":83, "punditry":83, "callings":83, "picaresque":83, "pucks":83, "rib-eye":83, "roseate":83, "corneas":83, "lavatories":83, "rubdown":83, "wonderingly":83, "red-eye":83, "sourcebook":83, "circulations":83, "discounter":83, "anti-religious":83, "crag":83, "actuated":83, "spatulas":83, "homesteader":83, "yoo-hoo":83, "pecuniary":83, "deuce":83, "dovish":83, "isolationists":83, "dishtowel":83, "rhythmical":83, "morgues":83, "stagehands":83, "ordaining":83, "squeegee":83, "swinger":83, "nudist":83, "neurobiologist":83, "grazers":83, "mudslide":83, "goulash":83, "stimulative":83, "druggist":83, "extruded":83, "executors":83, "anticolonial":83, "locational":83, "mobile-phone":83, "whale-watching":83, "pasteurized":83, "innuendoes":83, "ethnologist":83, "watchmen":83, "nonsurgical":83, "well-regulated":83, "novellas":83, "spiritualist":83, "consumables":83, "distemper":83, "interobserver":83, "vert":83, "ex-cons":83, "lath":83, "classroom-based":83, "latvians":83, "souk":83, "trenchcoat":83, "roadies":83, "rocketry":83, "non-african":83, "intermodal":83, "acetic":83, "decriminalization":83, "deification":83, "resistors":83, "chador":83, "out-migration":83, "topiaries":83, "hypochondria":83, "seabird":83, "social-welfare":83, "alliterative":83, "wattles":83, "dirigible":83, "stillbirth":83, "monopolization":83, "godparents":83, "timings":83, "informatics":83, "motherboards":83, "kielbasa":83, "self-exams":83, "hydroxyl":83, "lacanian":83, "heptathlon":83, "repeated-measures":83, "role-play":83, "transitive":83, "tutelary":83, "caddis":83, "middens":83, "gendarme":83, "pix":83, "astrobiology":83, "trans-siberian":83, "marketization":83, "boleros":83, "hermaphrodites":83, "layaway":83, "debits":83, "potlatch":83, "non-gifted":83, "nongifted":83, "chiefdom":83, "amerindians":83, "globulars":83, "pluralists":83, "baha'i":83, "ampicillin":83, "aminoglycoside":83, "sight-singing":83, "ecosystem-based":83, "thornless":83, "almshouse":83, "stultifying":83, "go-getter":83, "slacken":83, "nuts-and-bolts":83, "fruitlessly":83, "skitter":83, "deadpanned":83, "misleadingly":83, "rehired":83, "slitting":83, "seethe":83, "undulated":83, "grandfatherly":83, "undergirding":83, "dispels":83, "lovelier":83, "up-and-comers":83, "demeans":83, "reunites":83, "egged":83, "guilt-ridden":83, "protein-rich":83, "endearingly":83, "elucidated":83, "shirking":83, "entrench":83, "possessiveness":83, "pitying":83, "ladled":83, "inglorious":83, "insuperable":83, "multi-billion-dollar":83, "ambitiously":83, "helter-skelter":83, "rend":83, "interlock":83, "parttime":83, "small-minded":83, "dovetailed":83, "hidebound":83, "abdicated":83, "typecast":83, "exactness":83, "kindergartner":83, "dizzily":83, "on-set":83, "axed":83, "leopard-print":83, "stiff-legged":83, "lived-in":83, "cavalierly":83, "automatons":83, "wile":83, "wrinkly":83, "infers":83, "whiskered":83, "gargling":83, "pumped-up":83, "coal-black":83, "inheritor":83, "swimmingly":83, "cancelling":83, "re-entering":83, "buzzers":83, "provincialism":83, "quantifies":83, "subbing":83, "spoilers":83, "babysat":83, "paintbrushes":83, "wakeful":83, "you-know-what":83, "cobblers":83, "shortchanging":83, "lovebirds":83, "redundancies":83, "future-oriented":83, "alarmists":83, "configuring":83, "bootlegger":83, "lampshades":83, "gigolo":83, "vaginas":83, "busses":83, "clairvoyance":83, "human-resources":83, "addicting":83, "synopses":83, "fakery":83, "retried":83, "mind-altering":83, "super-rich":83, "starlike":83, "type-a":83, "wormy":83, "pincer":83, "no-confidence":83, "millstone":83, "solipsism":83, "human-caused":83, "tribesman":83, "suppressant":83, "minis":83, "cochair":83, "haft":83, "agnosticism":83, "bulwarks":83, "laxative":83, "housemate":83, "encirclement":83, "all-women":83, "symposiums":83, "objectifying":83, "bedsprings":83, "kinfolk":83, "rumpus":83, "half-length":83, "rubbers":83, "anti-intellectualism":83, "argentinean":83, "doppelganger":83, "self-correcting":83, "varmints":83, "tithing":83, "broods":83, "nanometer":83, "recoded":83, "wiener":83, "mercantilist":83, "non-emergency":83, "bogeyed":83, "industrialism":83, "hobbesian":83, "anglo-saxons":83, "anti-muslim":83, "tuners":83, "putted":83, "monumentality":83, "capuchin":83, "damnit":83, "babylonians":83, "pathophysiology":83, "acupressure":83, "pee-wee":83, "high-fructose":83, "hefts":83, "psalmist":83, "triathletes":83, "neutering":83, "gaiters":83, "neocons":83, "sketchbooks":83, "awl":83, "superego":83, "ganglia":83, "scullery":83, "sales-tax":83, "high-functioning":83, "moire":83, "solenoid":83, "narrations":83, "satanism":83, "phonetics":83, "scapula":83, "scalability":83, "gigahertz":83, "roasters":83, "marsupials":83, "apical":83, "fulfilment":83, "massif":83, "airfoil":83, "ladyship":83, "neutrophils":83, "bootstrapping":83, "smallholders":83, "cohosh":83, "russian-speaking":83, "patagonian":83, "umpiring":83, "superordinate":83, "amoebas":83, "trumpeters":83, "serologic":83, "second-language":83, "mortise":83, "input-output":83, "person-centered":83, "unsifted":83, "religiousness":83, "racialism":83, "enameling":83, "thrips":83, "chicha":83, "land-reform":83, "consociational":83, "hoplites":83, "chromolithographs":83, "hypermasculinity":83, "oncocytic":83, "dismaying":83, "take-no-prisoners":83, "admonishment":83, "arcana":83, "well-manicured":83, "chock":83, "exalting":83, "badgered":83, "peals":83, "unquestioningly":83, "boggling":83, "unexciting":83, "acquiescing":83, "banged-up":83, "idiosyncrasy":83, "half-dressed":83, "liven":83, "simplistically":83, "dirt-poor":83, "haranguing":83, "jewel-like":83, "surmises":83, "filigreed":83, "well-tailored":83, "torpid":83, "rudderless":83, "prolongs":83, "boyishly":83, "reallocate":83, "much-touted":83, "bankrupted":83, "comprehends":83, "blackboards":83, "loll":83, "monopolized":83, "splurged":83, "renounces":83, "imminently":83, "self-involved":83, "populating":83, "temptress":83, "simpleminded":83, "unsparing":83, "deluding":83, "mightier":83, "extorting":83, "trills":83, "high-traffic":83, "trailblazing":83, "druthers":83, "bugaboo":83, "evermore":83, "monied":83, "houseful":83, "twinges":83, "perspire":83, "back-breaking":83, "unlovely":83, "hobnobbing":83, "seven-minute":83, "copping":83, "jazzed":83, "screw-up":83, "inculcation":83, "twenty-six-year-old":83, "nine-to-five":83, "chortling":83, "socialistic":83, "believability":83, "vocalizing":83, "exhalations":83, "less-than-perfect":83, "tartness":83, "oldie":83, "auto-parts":83, "multi-billion":83, "rehire":83, "misjudgments":83, "two-to-one":83, "alltime":83, "ergonomically":83, "career-ending":83, "playmakers":83, "becalmed":83, "conjectured":83, "gob":83, "weds":83, "riffled":83, "mitzvahs":83, "uncultivated":83, "barbells":83, "semiprecious":83, "enigmas":83, "bloodlust":83, "back-country":83, "college-aged":83, "pompadour":83, "alighted":83, "extrovert":83, "suckle":83, "reenactments":83, "caldron":83, "misbehaved":83, "unintelligent":83, "transportable":83, "slanderous":83, "billionth":83, "contravene":83, "stargazers":83, "construing":83, "trombones":83, "anti-incumbent":83, "inkwell":83, "couturier":83, "glop":83, "coniferous":83, "clapboards":83, "rappel":83, "baptizing":83, "liquefy":83, "printable":83, "floodlight":83, "clarinets":83, "fuel-efficiency":83, "downhills":83, "indepth":83, "jackrabbit":83, "sunbathers":83, "stagflation":83, "doric":83, "rear-seat":83, "basset":83, "somalian":83, "decrepitude":83, "stapling":83, "presumptively":83, "blacksmithing":83, "national-level":83, "gainers":83, "bench-press":83, "ageism":83, "greenback":83, "re-open":83, "crewmates":83, "insets":83, "whole-body":83, "electioneering":83, "gyro":83, "accelerometers":83, "antinuclear":83, "antigay":83, "juicer":83, "fetishistic":83, "self-direction":83, "chit":83, "luger":83, "primroses":83, "oxidized":83, "self-replicating":83, "bassoon":83, "breadsticks":83, "disbarred":83, "monocle":83, "hedge-fund":83, "bullfight":83, "forty-second":83, "unpasteurized":83, "syllogism":83, "forgers":83, "shoplifters":83, "registrars":83, "puller":83, "driller":83, "silicate":83, "particleboard":83, "etudes":83, "non-disabled":83, "debug":83, "rehearing":83, "logbooks":83, "hypoxic":83, "incarnational":83, "cartilaginous":83, "carlike":83, "sensitization":83, "non-fatal":83, "anagrams":83, "alveolar":83, "backspin":83, "angstroms":83, "task-specific":83, "neoplatonic":83, "resorption":83, "coulis":83, "modularity":83, "disbarment":83, "malays":83, "mujahedin":83, "sulphate":83, "templars":83, "mastoidectomy":83, "crystallography":83, "lagrangian":83, "canner":83, "endogamy":83, "gluons":83, "communitarians":83, "e-filing":83, "neuroblastoma":83, "mariculture":83, "work-time":83, "much-maligned":83, "unhesitatingly":83, "thoughtlessly":83, "sweetening":83, "classier":83, "potholed":83, "mind-bending":83, "lengthier":83, "bitterest":83, "re-established":83, "quasi-religious":83, "adoringly":83, "wittily":83, "rejoices":83, "citrusy":83, "quandaries":83, "rehearses":83, "rots":83, "hassling":83, "second-longest":83, "pillage":83, "hand-crafted":83, "top-drawer":83, "birthed":83, "long-simmering":83, "nitpicking":83, "well-marked":83, "conversationally":83, "impels":83, "ruggedness":83, "torpedoed":83, "circumscribe":83, "segues":83, "action-oriented":83, "perishables":83, "blowhard":83, "flowerbeds":83, "enviously":83, "skin-tight":83, "third-grader":83, "gullibility":83, "drippy":83, "sillier":83, "petulance":83, "stand-ins":83, "viewings":83, "disqualifies":83, "hand-holding":83, "superimposing":83, "labor-saving":83, "felonious":83, "uncommunicative":83, "squeamishness":83, "reframing":83, "fine-looking":83, "self-contradictory":83, "cognizance":83, "quietude":83, "entrenchment":83, "propounded":83, "rip-offs":83, "commendations":83, "turnouts":83, "thwack":83, "ninth-graders":83, "sociopathic":83, "tagline":83, "videocassettes":83, "self-incrimination":83, "data-gathering":83, "klutz":83, "shorthanded":83, "emanations":83, "corollaries":83, "stationing":83, "concertgoers":83, "hulled":83, "here-and-now":83, "fact-based":83, "workweeks":83, "grabber":83, "cannibalize":83, "certifiably":83, "recouped":83, "impositions":83, "milliliters":83, "trombonist":83, "mid-year":83, "millenium":83, "sixtieth":83, "bareheaded":83, "eyeless":83, "state-sanctioned":83, "anesthetized":83, "heraldic":83, "pornographer":83, "improvisatory":83, "child-abuse":83, "iridescence":83, "microfiche":83, "ex-soviet":83, "downscale":83, "west-central":83, "grapefruits":83, "playdate":83, "breezeway":83, "constabulary":83, "reduced-price":83, "deflationary":83, "doorstop":83, "sunburns":83, "internal-combustion":83, "verticals":83, "rationalistic":83, "segregationists":83, "ratatouille":83, "mid-nineteenth-century":83, "unalienable":83, "wahoo":83, "codfish":83, "greatcoat":83, "grommets":83, "two-phase":83, "process-oriented":83, "gerbil":83, "aromatics":83, "pulsations":83, "demerits":83, "opossums":83, "mediations":83, "malthusian":83, "diarrheal":83, "radially":83, "soaker":83, "rheumatologist":83, "motorcar":83, "gendarmes":83, "anti-personnel":83, "sealants":83, "pitas":83, "purulent":83, "grisaille":83, "subregional":83, "extroverts":83, "ipsilateral":83, "anti-arab":83, "transect":83, "forepaws":83, "investiture":83, "vibrators":83, "contextualized":83, "ostinato":83, "revivalists":83, "enrolment":83, "content-based":83, "vocab":83, "high-deductible":83, "flaxseeds":83, "least-squares":83, "phosphor":83, "deflector":83, "twee":83, "auroras":83, "soteriological":83, "criterion-related":83, "gramps":83, "competency-based":83, "coxswain":83, "co-ordinate":83, "re-imagining":83, "dadaists":83, "crypto":83, "wiccans":83, "indentor":83, "reinvigorating":83, "ridicules":83, "humbler":83, "entices":83, "pomposity":83, "resounds":83, "wormed":83, "preps":83, "single-mindedly":83, "sixfold":83, "eight-page":83, "harangue":83, "unvarying":83, "monumentally":83, "overdosing":83, "averred":83, "bed-and-breakfasts":83, "trivializes":83, "cobbling":83, "unzipping":83, "sicken":83, "unrehearsed":83, "prequel":83, "withholds":83, "despising":83, "parodied":83, "flaunts":83, "gloated":83, "vomits":83, "jilted":83, "fantasizes":83, "fixer-upper":83, "misleads":83, "disadvantageous":83, "game-tying":83, "business-like":83, "inch-long":83, "brutalities":83, "unerringly":83, "pricks":83, "capably":83, "cubbies":83, "fiber-rich":83, "self-confessed":83, "wonks":83, "cleaving":83, "outcries":83, "absentminded":83, "opine":83, "exploiters":83, "bankable":83, "teared":83, "dehumanize":83, "cometh":83, "israeli-occupied":83, "noiseless":83, "fourth-grader":83, "wretches":83, "undoubted":83, "zaps":83, "quaver":83, "disassembling":83, "beholding":83, "recheck":83, "incompatibilities":83, "voice-activated":83, "copper-colored":83, "frostbitten":83, "non-commercial":83, "sophistry":83, "diesel-powered":83, "smite":83, "guardrails":83, "brothers-in-law":83, "per-share":83, "cavemen":83, "evangelize":83, "open-water":83, "strongmen":83, "haystacks":83, "protrusions":83, "counterrevolution":83, "bleat":83, "blokes":83, "bloodhounds":83, "co-counsel":83, "rehydrate":83, "refinishing":83, "on-stage":83, "post-doctoral":83, "hard-drive":83, "diaphragms":83, "serially":83, "halfcourt":83, "contextualizing":83, "feminized":83, "sevens":83, "offal":83, "gold-mining":83, "hoteliers":83, "choreographic":83, "teat":83, "opposable":83, "pumpernickel":83, "dominos":83, "metaphysically":83, "relapsed":83, "spaniels":83, "horsemanship":83, "neurologically":83, "conformance":83, "hairpiece":83, "minibar":83, "fiddlers":83, "single-use":83, "thermoplastic":83, "yodeling":83, "taoism":83, "femaleness":83, "ladybug":83, "suet":83, "carry-ons":83, "large-group":83, "aerobically":83, "mississippians":83, "collegians":83, "hysterectomies":83, "rearmament":83, "aramaic":83, "consumer-driven":83, "deckhand":83, "crankcase":83, "coronet":83, "cruciferous":83, "ventricles":83, "corrector":83, "nonphysical":83, "fink":83, "power-play":83, "carbines":83, "honoraria":83, "new-wave":83, "seismologist":83, "chinoiserie":83, "newsgroup":83, "hie":83, "kola":83, "vamps":83, "low-sulfur":83, "synchronic":83, "wheelset":83, "protoplanetary":83, "non-custodial":83, "menarche":83, "indemnification":83, "disinvestment":83, "discipline-specific":83, "protozoans":83, "grantee":83, "diatoms":83, "developmentalist":83, "clientelism":83, "fasciitis":83, "no-till":83, "all-tournament":83, "telemedicine":83, "agreeableness":83, "hypertrophic":83, "ebonics":83, "keiretsu":83, "paraplegia":83, "whiteflies":83, "nonequilibrium":83, "single-wall":83, "underglaze":83, "cystitis":83, "aeronautic":83, "clubfoot":83, "sentients":83, "carnitine":83, "arthroplasty":83, "lepton":83, "e-discovery":83, "self-instruction":83, "pneumatology":83, "electroless":83, "halfling":83, "underwhelmed":83, "six-member":83, "come-ons":83, "yammering":83, "wheedling":83, "selflessly":83, "expels":83, "snub-nosed":83, "respectably":83, "righteously":83, "livings":83, "behinds":83, "explosiveness":83, "mimed":83, "snippy":83, "pocket-sized":83, "hirsute":83, "third-highest":83, "goofed":83, "salvos":83, "long-sleeve":83, "then-mayor":83, "tantalize":83, "rewinding":83, "anti-israeli":83, "camouflaging":83, "rupturing":83, "trussed":83, "undigested":83, "reawaken":83, "columned":83, "evades":83, "glass-topped":83, "uncharitable":83, "well-muscled":83, "optimizes":83, "talc":83, "muckraking":83, "budget-cutting":83, "tidied":83, "humanizing":83, "excellently":83, "permutation":83, "wristwatches":83, "blackmailing":83, "dietician":83, "nine-game":83, "uneventfully":83, "fixity":83, "shout-out":83, "waterless":83, "workingman":83, "terry-cloth":83, "wristband":83, "authorizations":83, "handbills":83, "load-bearing":83, "oodles":83, "cantilevered":83, "facsimiles":83, "left-of-center":83, "profiteers":83, "allusive":83, "hove":83, "galvanic":83, "metro-area":83, "rightists":83, "uncompleted":83, "emancipated":83, "overtone":83, "saltier":83, "normatively":83, "selfsame":83, "saber-toothed":83, "bush-era":83, "vacillation":83, "wooly":83, "wrap-around":83, "preloaded":83, "mausoleums":83, "plough":83, "houndstooth":83, "driver's-side":83, "sublimity":83, "fifty-dollar":83, "showerhead":83, "metered":83, "birthdate":83, "property-tax":83, "voiding":83, "acetylene":83, "overwintering":83, "sinkers":83, "bangers":83, "strobes":83, "reuptake":83, "insurrections":83, "ultrasounds":83, "head-coaching":83, "sudden-death":83, "land-grant":83, "trousseau":83, "porosity":83, "extrajudicial":83, "anesthesiology":83, "lathes":83, "cortege":83, "psychosexual":83, "tollbooth":83, "re-engineering":83, "jello":83, "wonton":83, "species-specific":83, "latin-american":83, "concessionaire":83, "high-skilled":83, "citric":83, "quadrillion":83, "bullfighting":83, "propellants":83, "hyperventilation":83, "ide":83, "boxwoods":83, "wingman":83, "sumatran":83, "nigra":83, "calfskin":83, "quartiles":83, "overflights":83, "taiga":83, "self-study":83, "peloponnesian":83, "alkaloid":83, "verso":83, "embroideries":83, "spinnerbaits":83, "slipcover":83, "sniffers":83, "koalas":83, "mothership":83, "wage-earning":83, "thomistic":83, "audiobooks":83, "returners":83, "community-dwelling":83, "four-factor":83, "harpies":83, "successional":83, "ergometer":83, "voyageurs":83, "synovial":83, "pyrite":83, "overtraining":83, "parapsychology":83, "adjudicator":83, "scramjet":83, "subglottic":83, "t-bird":83, "self-injurious":83, "colobus":83, "fanship":83, "come-hither":83, "on-the-go":83, "wrangled":83, "triumphing":83, "belying":83, "inured":83, "crowd-pleaser":83, "chomped":83, "orchestrates":83, "half-jokingly":83, "nonstarter":83, "paleness":83, "lambasting":83, "biggies":83, "profligacy":83, "cocooned":83, "overeager":83, "street-corner":83, "hoarded":83, "parceled":83, "reclines":83, "highest-quality":83, "chest-high":83, "ivy-covered":83, "parroting":83, "repackage":83, "recalibrate":83, "conflating":83, "season-long":83, "white-sand":83, "moped":83, "spicier":83, "hitches":83, "mid-70s":83, "shortchange":83, "menaced":83, "flesh-colored":83, "deadening":83, "spin-offs":83, "overcooked":83, "glutton":83, "decommissioned":83, "low-pitched":83, "unemployable":83, "first-grader":83, "fun-filled":83, "inculcating":83, "aborting":83, "outsides":83, "prizefighter":83, "inaudibly":83, "pre-empted":83, "powers-that-be":83, "muscle-bound":83, "adduced":83, "misquoted":83, "do-or-die":83, "expediting":83, "decomposes":83, "whiffs":83, "broad-brimmed":83, "anti-iraq":83, "brokenhearted":83, "extricating":83, "bombshells":83, "tuneful":83, "in-room":83, "ahhhh":83, "followings":83, "eying":83, "blitzed":83, "zigzags":83, "substantiation":83, "pale-green":83, "regimentation":83, "minuet":83, "indoctrinate":83, "inward-looking":83, "indoor-outdoor":83, "hundredths":83, "maintenance-free":83, "retracts":83, "match-up":83, "acclamation":83, "aspirant":83, "unlearned":83, "streetscape":83, "half-mast":83, "non-english-speaking":83, "self-interests":83, "trattoria":83, "letter-writer":83, "guarantors":83, "pungency":83, "leaderships":83, "saxophones":83, "overconsumption":83, "funnies":83, "idolatrous":83, "federal-state":83, "authenticated":83, "turnings":83, "inoculations":83, "grandfathered":83, "tautology":83, "mimeographed":83, "watercolorist":83, "datebook":83, "syntheses":83, "premade":83, "apologia":83, "fib":83, "meat-eating":83, "shoulder-fired":83, "tinned":83, "ovoid":83, "somewheres":83, "short-handed":83, "left-to-right":83, "crochet":83, "loth":83, "absinthe":83, "lorries":83, "hardpan":83, "decongestants":83, "dustpan":83, "defeatism":83, "overestimation":83, "sieges":83, "cottonseed":83, "slipcovered":83, "activator":83, "no-huddle":83, "biasing":83, "aluminium":83, "rearward":83, "theistic":83, "iron-rich":83, "naturopathic":83, "libidinal":83, "climatologist":83, "toluene":83, "post-menopausal":83, "cosmologies":83, "dipstick":83, "kumquats":83, "four-dimensional":83, "morphologically":83, "parolee":83, "blimps":83, "headboards":83, "cruciform":83, "ducky":83, "translational":83, "bailiffs":83, "ghee":83, "in-migration":83, "laudanum":83, "muscovite":83, "amalgamated":83, "classicists":83, "disputants":83, "art-making":83, "stags":83, "sailings":83, "notational":83, "need-based":83, "pupa":83, "skylark":83, "chihuahuan":83, "vibratory":83, "quilter":83, "crinoline":83, "subfields":83, "race-neutral":83, "purslane":83, "mitre":83, "capitation":83, "within-subject":83, "triadic":83, "ignatian":83, "self-publishing":83, "posttreatment":83, "subacute":83, "spawners":83, "loess":83, "subtractive":83, "mushers":83, "soundboard":83, "parachutists":83, "infant-mortality":83, "eelgrass":83, "ossicular":83, "whole-language":83, "homosocial":83, "disfranchisement":83, "nonwords":83, "grantor":83, "sargassum":83, "serotype":83, "churchgoer":84, "handbasket":84, "quibbles":84, "familiarizing":84, "juicier":84, "lushness":84, "vivacity":84, "unfortunates":84, "prettiness":84, "statesmanlike":84, "eviscerate":84, "disabuse":84, "mauling":84, "hand-to-mouth":84, "underwrites":84, "splotchy":84, "coddled":84, "unnervingly":84, "showdowns":84, "untraditional":84, "glass-fronted":84, "rivulet":84, "trendsetter":84, "bauble":84, "pillaging":84, "moodiness":84, "possessors":84, "mediterranean-style":84, "space-available":84, "heckled":84, "devolving":84, "mile-wide":84, "face-first":84, "lowliest":84, "entrapped":84, "eye-level":84, "chart-topping":84, "gray-white":84, "bumpkin":84, "caramelize":84, "enslaving":84, "lusted":84, "conflates":84, "companywide":84, "cross-purposes":84, "foldout":84, "gun-shy":84, "jokester":84, "shirttail":84, "self-aggrandizement":84, "ground-up":84, "starless":84, "recalcitrance":84, "cannibalizing":84, "colonial-era":84, "downers":84, "precipitates":84, "flogged":84, "secretes":84, "jetsam":84, "nominates":84, "hideaways":84, "recognizance":84, "trailblazers":84, "trailside":84, "reveille":84, "overachievers":84, "reelect":84, "noisemakers":84, "cowhide":84, "bended":84, "first-day":84, "thuggish":84, "beseech":84, "overqualified":84, "ventilating":84, "zits":84, "spearheads":84, "screenwriting":84, "unseasoned":84, "layups":84, "edenic":84, "experientially":84, "duct-taped":84, "push-pull":84, "bloodsuckers":84, "scintilla":84, "seductress":84, "fair-weather":84, "interspecies":84, "gurneys":84, "fishnets":84, "longshoreman":84, "steeplechase":84, "nonrefundable":84, "contraindicated":84, "squirrelly":84, "hurricane-force":84, "piranha":84, "seatmate":84, "inlays":84, "colourful":84, "auras":84, "misappropriation":84, "anklets":84, "emanation":84, "peptic":84, "oxygenated":84, "crematorium":84, "well-blended":84, "sibilant":84, "aesthetician":84, "credentialed":84, "erogenous":84, "fee-based":84, "overburden":84, "jurisprudential":84, "fellatio":84, "manzanita":84, "cattleman":84, "argentinian":84, "shockwave":84, "christianized":84, "incivility":84, "libertarianism":84, "pickax":84, "cool-down":84, "bearskin":84, "foosball":84, "dionysian":84, "cross-training":84, "methamphetamines":84, "vertex":84, "oratorio":84, "crack-up":84, "supercomputing":84, "commutation":84, "spring-training":84, "hazmat":84, "stone-ground":84, "cabinetmakers":84, "peeps":84, "evolutionist":84, "spud":84, "tachometer":84, "export-led":84, "racquets":84, "watercourses":84, "humorists":84, "amaretto":84, "internationalists":84, "dose-response":84, "speller":84, "herdsman":84, "biopsychosocial":84, "kente":84, "upcountry":84, "pan-african":84, "pounders":84, "cabriolet":84, "brier":84, "cool-season":84, "beta-blockers":84, "saliency":84, "mayor-elect":84, "modeler":84, "orthography":84, "metres":84, "lasagne":84, "nasopharynx":84, "spatiotemporal":84, "bail-out":84, "typefaces":84, "otolaryngologic":84, "non-resident":84, "butted":84, "hamiltonian":84, "tole":84, "dogfighting":84, "begonia":84, "nonbiological":84, "stator":84, "carbonates":84, "meditators":84, "pre-employment":84, "creaturely":84, "polygon":84, "retinoids":84, "phonology":84, "in-vessel":84, "classwide":84, "acidophilus":84, "exoplanet":84, "zygote":84, "areawide":84, "evapotranspiration":84, "anticoagulation":84, "prednisolone":84, "chiral":84, "mesic":84, "stapedial":84, "time-of-day":84, "phylogeography":84, "ungated":84, "biohazardous":84, "drongos":84, "brutalizing":84, "much-discussed":84, "misty-eyed":84, "hit-or-miss":84, "scrawling":84, "unfeasible":84, "curmudgeonly":84, "overstep":84, "scrounged":84, "harvard-educated":84, "leapfrogging":84, "three-month-old":84, "disgorge":84, "ebullience":84, "heftier":84, "reevaluating":84, "obstructs":84, "multitudinous":84, "guzzle":84, "then-governor":84, "genially":84, "gee-whiz":84, "backbiting":84, "totes":84, "oceangoing":84, "invariable":84, "preordained":84, "eight-minute":84, "bartending":84, "sourness":84, "unfunny":84, "one-liner":84, "archenemy":84, "slam-dunk":84, "natch":84, "editorially":84, "bopping":84, "lowbrow":84, "sudsy":84, "wretchedness":84, "wrathful":84, "dawdled":84, "double-parked":84, "higher-than-average":84, "schlock":84, "indelicate":84, "rags-to-riches":84, "three-sided":84, "valueless":84, "mulls":84, "insinuates":84, "relearning":84, "nine-point":84, "dehydrating":84, "animalistic":84, "slobs":84, "tummies":84, "half-moons":84, "desecrate":84, "misanthropic":84, "fine-dining":84, "squared-off":84, "refunded":84, "terrycloth":84, "party-line":84, "cud":84, "regurgitate":84, "wide-awake":84, "pegging":84, "conceits":84, "value-oriented":84, "hydraulically":84, "knucklehead":84, "extrapolations":84, "impudence":84, "defrauded":84, "triviality":84, "puked":84, "unwinnable":84, "flat-topped":84, "wonky":84, "minidress":84, "hipness":84, "miming":84, "pertinence":84, "sensationalist":84, "mirages":84, "silvered":84, "overdosed":84, "saturates":84, "egg-laying":84, "weather-related":84, "road-building":84, "mongers":84, "slutty":84, "coalescence":84, "endnotes":84, "depreciate":84, "improbability":84, "willfulness":84, "women-only":84, "omelettes":84, "modulates":84, "aperitif":84, "graven":84, "reactivated":84, "ex-lover":84, "peanut-butter":84, "dominatrix":84, "well-seasoned":84, "day-trippers":84, "trapezoidal":84, "impasto":84, "sconce":84, "ex-cop":84, "attention-deficit":84, "extractions":84, "snowbirds":84, "geophysics":84, "trivialization":84, "yips":84, "pingpong":84, "muezzin":84, "concatenation":84, "full-fat":84, "three-phase":84, "superlight":84, "bray":84, "inwardness":84, "esthetics":84, "conventionality":84, "resistances":84, "fraternization":84, "contraindications":84, "hummers":84, "barb":84, "alphanumeric":84, "postelection":84, "tilings":84, "horoscopes":84, "neuropsychology":84, "heart-disease":84, "flunky":84, "geosynchronous":84, "silversmith":84, "bibliographical":84, "dicta":84, "oilmen":84, "talkback":84, "recirculation":84, "baby-sitters":84, "after-effects":84, "aridity":84, "ragweed":84, "investor-owned":84, "affectively":84, "fingerlings":84, "storyboards":84, "state-to-state":84, "scrip":84, "shoplift":84, "learning-disabled":84, "monocoque":84, "runabout":84, "larkspur":84, "bolshevism":84, "yews":84, "scarcities":84, "carjackings":84, "free-living":84, "babys":84, "canoeists":84, "enchantments":84, "callus":84, "securitization":84, "bismuth":84, "half-breed":84, "socio-demographic":84, "shul":84, "carnivalesque":84, "norming":84, "osmotic":84, "community-level":84, "beatification":84, "skyway":84, "proficiencies":84, "prostaglandin":84, "microstructure":84, "fondant":84, "disposables":84, "initiatory":84, "consuls":84, "balance-of-power":84, "short-game":84, "pegboard":84, "dehydrator":84, "assistantship":84, "infinitive":84, "altiplano":84, "denitrification":84, "thymus":84, "transdisciplinary":84, "booger":84, "generativity":84, "exclusivism":84, "affinal":84, "niobium":84, "nonhandicapped":84, "land-cover":84, "chondrites":84, "tuberculous":84, "handline":84, "transgene":84, "self-construal":84, "sidling":84, "malfunctioned":84, "opines":84, "interminably":84, "obstreperous":84, "upending":84, "preoccupy":84, "self-congratulation":84, "foot-dragging":84, "long-neglected":84, "unceasingly":84, "thrillingly":84, "deflates":84, "honest-to-goodness":84, "fine-boned":84, "obliviousness":84, "skewering":84, "obfuscate":84, "leaderless":84, "ministered":84, "ice-blue":84, "unremarked":84, "callously":84, "subtlest":84, "hollow-eyed":84, "oppressively":84, "gnashing":84, "acidly":84, "trash-talking":84, "inconsiderable":84, "outnumbering":84, "uncoiled":84, "brawler":84, "backhoes":84, "back-room":84, "counterargument":84, "re-evaluated":84, "interconnecting":84, "songstress":84, "openmouthed":84, "teensy":84, "misrepresents":84, "uncrossed":84, "freckle-faced":84, "elucidates":84, "waistlines":84, "misjudge":84, "grooving":84, "falling-out":84, "budging":84, "dizzyingly":84, "shrilled":84, "twice-daily":84, "impregnate":84, "nine-hour":84, "fisticuffs":84, "refracting":84, "highspeed":84, "fedoras":84, "megalomaniac":84, "overhyped":84, "frugally":84, "dyed-in-the-wool":84, "hellbent":84, "preeminently":84, "jointed":84, "high-maintenance":84, "cherrywood":84, "commonsensical":84, "mutilating":84, "show-business":84, "yakking":84, "warhorse":84, "defile":84, "preservers":84, "trendsetters":84, "horseplay":84, "reauthorize":84, "mid-60s":84, "hot-blooded":84, "warbled":84, "fourth-round":84, "eyelet":84, "flails":84, "collude":84, "pattering":84, "ineradicable":84, "semi-darkness":84, "defiled":84, "half-gallon":84, "wagnerian":84, "greenness":84, "reconstituting":84, "milkshakes":84, "windowed":84, "armless":84, "selfesteem":84, "balladeer":84, "big-eyed":84, "off-the-field":84, "dashboards":84, "adopter":84, "gradation":84, "mannerism":84, "biked":84, "pro-war":84, "liqueurs":84, "arroyos":84, "rightwing":84, "stuntman":84, "racecourse":84, "rowboats":84, "taxiing":84, "classism":84, "discotheque":84, "nippy":84, "nonaligned":84, "defame":84, "phonies":84, "soldered":84, "webpage":84, "industrialize":84, "disease-resistant":84, "glowers":84, "nonfood":84, "quacks":84, "hotdog":84, "unmeasured":84, "mid-continent":84, "preludes":84, "shipper":84, "shipmate":84, "stricture":84, "non-invasive":84, "powerplant":84, "washtub":84, "ex-husbands":84, "brung":84, "swindler":84, "a-team":84, "tarn":84, "paddler":84, "water-related":84, "pythagorean":84, "riffle":84, "paperboard":84, "strivings":84, "non-discrimination":84, "fop":84, "safe-deposit":84, "livingroom":84, "divinities":84, "univocal":84, "histopathology":84, "emulsions":84, "nearsightedness":84, "project-based":84, "laddie":84, "subpopulation":84, "montane":84, "sharecropping":84, "urologists":84, "gradualism":84, "contrails":84, "culture-specific":84, "right-sided":84, "bugler":84, "immunologic":84, "shredders":84, "contessa":84, "enemas":84, "wallpapers":84, "fresheners":84, "alyssum":84, "roper":84, "thrasher":84, "extragalactic":84, "photochemical":84, "airships":84, "financial-aid":84, "comedy-drama":84, "lychee":84, "netbooks":84, "ruminants":84, "recordable":84, "sloops":84, "tollway":84, "zoot":84, "belongingness":84, "coolies":84, "pickerel":84, "androgens":84, "novae":84, "vietnamese-american":84, "compressibility":84, "bedbug":84, "patellar":84, "non-clinical":84, "hessians":84, "seat-back":84, "defibrillation":84, "punic":84, "transcribers":84, "by-catch":84, "prosodic":84, "whitefly":84, "ejidos":84, "transculturation":84, "quants":84, "variate":84, "intensional":84, "uveitis":84, "allayed":84, "six-part":84, "ravings":84, "regaling":84, "christen":84, "sinfully":84, "free-spending":84, "detoured":84, "tooled":84, "slathering":84, "re-enact":84, "months-long":84, "twenty-eight-year-old":84, "serenading":84, "mussed":84, "unpronounceable":84, "exploitive":84, "dry-eyed":84, "shinier":84, "muggings":84, "unreflective":84, "official-looking":84, "sate":84, "detestable":84, "massacring":84, "soirees":84, "timeworn":84, "recapitulate":84, "sycophants":84, "test-drive":84, "insupportable":84, "dreadlocked":84, "clear-headed":84, "contorting":84, "ever-evolving":84, "misinterpretations":84, "loitered":84, "redeployed":84, "worshiper":84, "stock-still":84, "mutilate":84, "teen-aged":84, "ummm":84, "half-year":84, "steepled":84, "gentrified":84, "inductively":84, "mows":84, "interweave":84, "gluey":84, "weenie":84, "industriousness":84, "red-brown":84, "reheated":84, "hollowly":84, "balling":84, "vandalizing":84, "recession-proof":84, "cobweb":84, "infringements":84, "agglomeration":84, "misstatement":84, "public-address":84, "alcohol-free":84, "well-controlled":84, "emancipate":84, "crimping":84, "proscriptions":84, "canapes":84, "public-works":84, "rebel-held":84, "washbasin":84, "subfreezing":84, "apparatchiks":84, "swindlers":84, "proscription":84, "deposing":84, "coarseness":84, "tromp":84, "queued":84, "deglaze":84, "peppercorn":84, "louts":84, "immunologist":84, "lowing":84, "church-based":84, "multi-purpose":84, "un-islamic":84, "fanciers":84, "robotically":84, "good-time":84, "synchronizing":84, "crustacean":84, "no-smoking":84, "anti-inflammatories":84, "feathering":84, "wingless":84, "modifier":84, "telecoms":84, "low-scoring":84, "bodied":84, "flavour":84, "chopstick":84, "taillight":84, "phoenicians":84, "burdock":84, "cross-cutting":84, "directionality":84, "printmakers":84, "exportation":84, "initiators":84, "half-pint":84, "exchange-traded":84, "riper":84, "washings":84, "storytime":84, "nontrivial":84, "ejections":84, "cabdrivers":84, "recliners":84, "quesadilla":84, "multifactorial":84, "steels":84, "moonwalk":84, "megalopolis":84, "panhandler":84, "kayaker":84, "punning":84, "beeches":84, "cornet":84, "full-motion":84, "airspeed":84, "megatons":84, "rookery":84, "dispositive":84, "firm-ripe":84, "drunk-driving":84, "pram":84, "infective":84, "aunties":84, "hole-in-one":84, "kabobs":84, "ivies":84, "subalpine":84, "anti-environmental":84, "anglophone":84, "equinoxes":84, "elderberry":84, "peons":84, "swifts":84, "ob/gyn":84, "androids":84, "aeroplane":84, "goaltenders":84, "flood-control":84, "blasters":84, "boatyard":84, "women-owned":84, "catechetical":84, "negros":84, "instantiation":84, "thalamus":84, "zapper":84, "posttests":84, "timescales":84, "epiphytes":84, "slotting":84, "defined-contribution":84, "nitrogen-fixing":84, "gazans":84, "transpiration":84, "polymorphisms":84, "move-up":84, "pitons":84, "cryptosporidium":84, "wahhabism":84, "amoxicillin":84, "minyan":84, "side-dish":84, "rums":84, "connotative":84, "nuncio":84, "interferometers":84, "plagiarist":84, "symbionts":84, "diegetic":84, "ethnocultural":84, "blastocyst":84, "cantilevers":84, "javelinas":84, "run-time":84, "zero-point":84, "sawfish":84, "chromolithograph":84, "bilinguals":84, "fulsome":84, "anointing":84, "besting":84, "romanticizing":84, "vies":84, "touchingly":84, "contort":84, "denizen":84, "somnolent":84, "unstudied":84, "serenaded":84, "far-ranging":84, "scandalously":84, "invitingly":84, "vindicating":84, "brandishes":84, "minute-by-minute":84, "mellowing":84, "penury":84, "equips":84, "twiddling":84, "drowsily":84, "riffling":84, "co-produced":84, "behoove":84, "belabor":84, "dim-witted":84, "hypnotically":84, "parodying":84, "errs":84, "slumming":84, "tainting":84, "baser":84, "classiest":84, "short-sleeve":84, "stickier":84, "enfolding":84, "fisted":84, "entangling":84, "companionably":84, "tipoff":84, "ever-greater":84, "barometers":84, "moviegoing":84, "decentralizing":84, "back-door":84, "chanteuse":84, "oversights":84, "shimmies":84, "idles":84, "converges":84, "scot-free":84, "audiotaped":84, "standalone":84, "livability":84, "elapse":84, "one-acre":84, "annexing":84, "assented":84, "kindhearted":84, "action-adventure":84, "complacently":84, "lawmaking":84, "betwixt":84, "vouched":84, "repopulate":84, "eleven-thirty":84, "flat-bottomed":84, "highest-scoring":84, "prowls":84, "masterminds":84, "god-like":84, "skitters":84, "flavorless":84, "colluding":84, "silver-gray":84, "touch-ups":84, "trivialized":84, "weathermen":84, "post-vietnam":84, "terroristic":84, "afterword":84, "first-base":84, "calcified":84, "annul":84, "four-color":84, "nine-hole":84, "pot-bellied":84, "wide-set":84, "equivalently":84, "antiquing":84, "transgressed":84, "flashbulb":84, "unarticulated":84, "contrivances":84, "terrazzo":84, "witch-hunt":84, "legitimated":84, "mezzo":84, "juicing":84, "pantaloons":84, "irreligious":84, "dissections":84, "shoplifter":84, "mutability":84, "twining":84, "flyaway":84, "bozos":84, "dykes":84, "year-earlier":84, "dons":84, "gigabyte":84, "double-a":84, "gastronomy":84, "pop-ups":84, "scaffolds":84, "self-images":84, "huckleberries":84, "red-nosed":84, "kidney-shaped":84, "macrobiotic":84, "sou":84, "skittles":84, "six-person":84, "marketeers":84, "gifting":84, "low-salt":84, "bootleggers":84, "early-childhood":84, "antislavery":84, "pacifiers":84, "puncher":84, "fiberboard":84, "non-russian":84, "ska":84, "televangelists":84, "anti-psychotic":84, "glens":84, "gravedigger":84, "public-access":84, "captioned":84, "minion":84, "rule-based":84, "masculinist":84, "swallowtail":84, "peer-review":84, "timescale":84, "corporeality":84, "stylization":84, "jammer":84, "hermaphrodite":84, "facially":84, "abutment":84, "decrements":84, "culturing":84, "collies":84, "bund":84, "mujahedeen":84, "cistercian":84, "astrophotographers":84, "atherosclerotic":84, "allergenic":84, "theoretic":84, "gratings":84, "transshipment":84, "vetch":84, "bivalves":84, "deinstitutionalization":84, "climatological":84, "chrome-moly":84, "sidereal":84, "broadsword":84, "estimators":84, "roll-off":84, "attunement":84, "loosestrife":84, "ellipticals":84, "virtuality":84, "vanadium":84, "visuality":84, "trapezium":84, "neuroimaging":84, "ulnar":84, "subthemes":84, "spirometry":84, "dinner-dance":84, "comparator":84, "planetaries":84, "submaximal":84, "super-sidecut":84, "intersex":84, "single-gender":84, "norovirus":84, "depositional":84, "sublegal":84, "moshav":84, "biocomplexity":84, "earmold":84, "foisted":84, "fastidiously":84, "castigating":84, "week-old":84, "colloquially":84, "blackish":84, "sturdiness":84, "assuaged":84, "spotlighted":84, "ravenously":84, "basks":84, "uproarious":84, "pointlessly":84, "unnoticeable":84, "lacerated":84, "chiseling":84, "extravagances":84, "discretely":84, "museum-quality":84, "sixth-floor":84, "gunmetal":84, "shabbily":84, "overrunning":84, "toweled":84, "well-protected":84, "down-and-out":84, "reconsiders":84, "imbuing":84, "unworldly":84, "victorian-style":84, "tired-looking":84, "eloped":84, "coal-mining":84, "inflected":84, "bartered":84, "tabulate":84, "deeming":84, "teardrops":84, "privations":84, "game-changing":84, "self-regard":84, "refitted":84, "prizewinning":84, "tangibly":84, "confusingly":84, "wide-scale":84, "diffuses":84, "intolerably":84, "sainted":84, "venality":84, "evens":84, "multitalented":84, "hand-delivered":84, "duty-bound":84, "junkyards":84, "dote":84, "slobber":84, "playdates":84, "bantam":84, "waggling":84, "earpieces":84, "codifying":84, "libations":84, "survivable":84, "bulked":84, "befalls":84, "divesting":84, "joyride":84, "metropolises":84, "bowlegged":84, "underclothes":84, "do-over":84, "hanky-panky":84, "pedestrian-friendly":84, "taxicabs":84, "holier-than-thou":84, "silver-plated":84, "irrelevancy":84, "homogenizing":84, "palm-size":84, "buccaneer":84, "pom-poms":84, "tailwind":84, "shitload":84, "breaded":84, "water-treatment":84, "nuclear-free":84, "remit":84, "old-boy":84, "malarkey":84, "dolt":84, "ascot":84, "cabled":84, "idealizing":84, "urbanity":84, "unflavored":84, "tutus":84, "first-run":84, "clean-burning":84, "swats":84, "obligates":84, "warrens":84, "price-earnings":84, "godson":84, "ninth-inning":84, "pinheads":84, "bald-headed":84, "nato-led":84, "audio/video":84, "fighter-bombers":84, "interrelation":84, "self-cleaning":84, "contrapuntal":84, "sparkler":84, "foreleg":84, "aahs":84, "medium-hot":84, "pawned":84, "writerly":84, "librettist":84, "maladjusted":84, "pastes":84, "emo":84, "anatolian":84, "barnacle":84, "sicko":84, "micronutrients":84, "statism":84, "welfare-reform":84, "two-career":84, "scrapings":84, "polyphony":84, "prematurity":84, "delphiniums":84, "passbook":84, "brining":84, "bumble":84, "point-of-view":84, "reflexology":84, "sniffles":84, "damsels":84, "cattail":84, "fortune-teller":84, "cutlet":84, "colonoscopies":84, "subarctic":84, "closed-ended":84, "cooperators":84, "sumerians":84, "stop-motion":84, "calligrapher":84, "teacher-centered":84, "trinidadian":84, "polygraphs":84, "arcadian":84, "bipolarity":84, "barrack":84, "personifications":84, "oligarchic":84, "foodways":84, "grapeseed":84, "chechens":84, "punch-card":84, "hexagons":84, "subclinical":84, "postmarks":84, "visual-spatial":84, "tunas":84, "skirmishers":84, "ragu":84, "curiouser":84, "pintails":84, "afferent":84, "antimony":84, "caries":84, "pseudoephedrine":84, "nitride":84, "estradiol":84, "alleluia":84, "antimalarial":84, "toolbars":84, "hydrates":84, "geomorphic":84, "monad":84, "espalier":84, "above-knee":84, "adenomas":84, "ossuary":84, "wombat":84, "commending":84, "detests":84, "extinguishing":84, "sincerest":84, "tromping":84, "no-fuss":84, "debilitated":84, "anticlimax":84, "castigate":84, "forevermore":84, "pastel-colored":84, "six-mile":84, "boozing":84, "inconveniently":84, "disemboweled":84, "hardiest":84, "low-ceilinged":84, "overweening":84, "meditates":84, "waist-length":84, "redirects":84, "second-ranked":84, "perfunctorily":84, "mirthless":84, "fan-shaped":84, "tames":84, "truculent":84, "whiteout":84, "watchfulness":84, "wretchedly":84, "warred":84, "moodily":84, "affability":84, "emporiums":84, "high-visibility":84, "skimping":84, "compartmentalized":84, "complexly":84, "gunplay":84, "godawful":84, "clumpy":84, "ceremonially":84, "outshines":84, "amyotrophic":84, "lights-out":84, "indisposed":84, "pre-civil":84, "doggerel":84, "unbuckle":84, "six-man":84, "outspread":84, "stubbly":84, "commiseration":84, "recreations":84, "dimmest":84, "us-backed":84, "hothead":84, "bridles":84, "pissy":84, "non-starter":84, "venerate":84, "ablutions":84, "twelve-hour":84, "information-gathering":84, "well-studied":84, "inverts":84, "blockading":84, "retch":84, "criminalized":84, "quiescence":84, "reprogrammed":84, "solipsistic":84, "stunting":84, "numerology":84, "constricts":84, "abridge":84, "man-child":84, "photo-op":84, "timepieces":84, "sports-related":84, "bad-looking":84, "abrogated":84, "play-action":84, "game-day":84, "stagings":84, "skivvies":84, "teatime":84, "interregnum":84, "houseguests":84, "salmon-colored":84, "toileting":84, "deliverer":84, "editorializing":84, "pageboy":84, "flowerpots":84, "flesh-eating":84, "copulating":84, "wristbands":84, "backlight":84, "phlegmatic":84, "honorarium":84, "overheads":84, "snowfield":84, "eighths":84, "baronial":84, "business-related":84, "no-fat":84, "two-disc":84, "friezes":84, "toppers":84, "barista":84, "calibrations":84, "placemats":84, "psycho-social":84, "waives":84, "free-roaming":84, "arpeggios":84, "realignments":84, "hillbillies":84, "wino":84, "frond":84, "fabricator":84, "ciabatta":84, "mayans":84, "hard-currency":84, "fleur-de-lis":84, "imbeciles":84, "flashers":84, "spars":84, "dauntless":84, "derogation":84, "light-gathering":84, "ascription":84, "manacles":84, "muskrats":84, "antiinflammatory":84, "chittering":84, "hotdogs":84, "filbert":84, "nitro":84, "caw":84, "landfilled":84, "goal-directed":84, "pulsation":84, "serb-held":84, "arbitrate":84, "birder":84, "cyclocross":84, "refinancings":84, "antigravity":84, "familiars":84, "tearoom":84, "manifolds":84, "cymbal":84, "serology":84, "electronica":84, "medevac":84, "timpani":84, "clearcutting":84, "perps":84, "militiaman":84, "sorter":84, "woodchuck":84, "ciphers":84, "counter-reformation":84, "houseboats":84, "decrement":84, "anti-slavery":84, "read-only":84, "shiatsu":84, "rickshaws":84, "retrofits":84, "borers":84, "self-paced":84, "calcite":84, "tangos":84, "isotropic":84, "fenugreek":84, "coolie":84, "gentian":84, "risk-based":84, "sextuplets":84, "quanta":84, "narcissists":84, "knuckleball":84, "raster":84, "conductance":84, "kinase":84, "mescal":84, "birther":84, "calyx":84, "exorcisms":84, "paratroops":84, "intercessory":84, "evaporator":84, "pay-for-performance":84, "lookup":84, "abstainers":84, "submucosal":84, "roundabouts":84, "nasturtium":84, "stationers":84, "chitin":84, "supercommittee":84, "galls":84, "originalism":84, "inducer":84, "upsilon":84, "parotidectomy":84, "skinsuit":84, "usurer":84, "salinities":84, "gender-typed":84, "subtherapeutic":84, "stapedotomy":84, "cash-balance":84, "scarfing":84, "languishes":84, "slimmest":84, "dependably":84, "scuffles":84, "ordinaries":84, "trigger-happy":84, "wind-whipped":84, "burgeoned":84, "captivates":84, "captained":84, "affordably":84, "lathered":84, "swathes":84, "disburse":84, "reconciles":84, "inculcated":84, "footed":84, "then-new":84, "genuineness":84, "white-knuckled":84, "plain-spoken":84, "countercharges":84, "sharp-tongued":84, "largescale":84, "freakishly":84, "goalposts":84, "readjusted":84, "boatloads":84, "middles":84, "loftiest":84, "nettlesome":84, "daydreamed":84, "nameplates":84, "also-rans":84, "retarding":84, "discomforting":84, "bilking":84, "perceptively":84, "discerns":84, "goodlooking":84, "trumping":84, "fixable":84, "snugged":84, "envisages":84, "hurly-burly":84, "traipse":84, "muting":84, "carloads":84, "dalliances":84, "impoverish":84, "hollowing":84, "flubbed":84, "humblest":84, "nail-biting":84, "embeds":84, "connivance":84, "white-gloved":84, "six-lane":84, "gassy":84, "illicitly":84, "tree-shaded":84, "turn-around":84, "lungful":84, "impersonations":84, "near-record":84, "dither":84, "housebound":84, "shambled":84, "mustached":84, "never-never":84, "romped":84, "iranian-backed":84, "junior-high":84, "babyhood":84, "golden-haired":84, "sand-colored":84, "frisbees":84, "unframed":84, "wipeout":84, "yahoos":84, "dystopian":84, "faints":84, "unsupportive":84, "unsnapped":84, "contradistinction":84, "impermanent":84, "abominations":84, "atonal":84, "woodsmoke":84, "doddering":84, "behead":84, "child-size":84, "blown-out":84, "rewire":84, "tractor-trailers":84, "detonates":84, "two-pound":84, "misgiving":84, "soviet-made":84, "embezzled":84, "dome-shaped":84, "nonproductive":84, "self-revelation":84, "classwork":84, "heros":84, "africanamericans":84, "shivery":84, "frontrunners":84, "specificities":84, "epistles":84, "cadaverous":84, "overwinter":84, "pincushion":84, "million-member":84, "high-waisted":84, "cufflinks":84, "mewing":84, "egomaniac":84, "unimpaired":84, "high-precision":84, "internationalize":84, "average-size":84, "frictionless":84, "salubrious":84, "scamming":84, "celebrant":84, "unbeliever":84, "strong-minded":84, "nonmusical":84, "regrow":84, "corkscrews":84, "eavesdroppers":84, "other-worldly":84, "begetting":84, "photocopier":84, "troth":84, "outrigger":84, "sextet":84, "t-shaped":84, "winos":84, "buttercups":84, "carpetbagger":84, "weenies":84, "footrest":84, "multivitamins":84, "adagio":84, "brocaded":84, "chokehold":84, "translucency":84, "portside":84, "fine-mesh":84, "palladian":84, "no-trade":84, "overwritten":84, "all-clear":84, "spoor":84, "orations":84, "defroster":84, "one-vote":84, "high/low":84, "forme":84, "operationalization":84, "purpose-built":84, "merit-based":84, "sweatsuit":84, "unmodified":84, "korean-american":84, "prepayment":84, "appropriators":84, "billet":84, "gustatory":84, "touchscreen":84, "goatskin":84, "adenosine":84, "hep":84, "subsonic":84, "wallflowers":84, "pyjamas":84, "deodorants":84, "afore":84, "companionway":84, "uncircumcised":84, "magnetometer":84, "gyros":84, "macaroons":84, "eave":84, "dawg":84, "cinematographers":84, "capo":84, "soothsayers":84, "microclimates":84, "matings":84, "monkfish":84, "sepulcher":84, "nonzero":84, "externals":84, "vitreous":84, "transubstantiation":84, "denuclearization":84, "multipliers":84, "late-life":84, "gook":84, "consomme":84, "new-media":84, "alumnae":84, "undirected":84, "woodlot":84, "homeostatic":84, "groundcover":84, "jacaranda":84, "sit-up":84, "timekeeping":84, "pre-college":84, "paddocks":84, "telecommute":84, "codependent":84, "kaffir":84, "minks":84, "numerator":84, "christianization":84, "franchiser":84, "home-schooling":84, "fill-in-the-blank":84, "silversmiths":84, "carbonaceous":84, "on-farm":84, "flybridge":84, "trade-related":84, "scrooge":84, "data-mining":84, "mapmakers":84, "oaxacan":84, "councillors":84, "singlet":84, "perigee":84, "parenteral":84, "kiwifruit":84, "pastoralism":84, "low-carbohydrate":84, "troposphere":84, "yurts":84, "agroforestry":84, "sell-by":84, "mews":84, "hilts":84, "finderscope":84, "magnifiers":84, "prolactin":84, "phosphoric":84, "postconflict":84, "manikin":84, "interpolated":84, "sociobiology":84, "chippy":84, "undervotes":84, "mongooses":84, "e-readers":84, "internationalized":84, "pullers":84, "work-based":84, "low-probability":84, "gray-scale":84, "corpora":84, "tsetse":84, "immunisation":84, "ramjet":84, "chaebol":84, "non-aboriginal":84, "belizean":84, "guideway":84, "underbar":84, "top-fives":84, "sociomoral":84, "non-dancers":84, "controversially":84, "foot-high":84, "dust-up":84, "wind-swept":84, "expounds":84, "mollified":84, "monikers":84, "expedience":84, "muddying":84, "grittier":84, "mass-produce":84, "get-up":84, "strived":84, "monetarily":84, "knifing":84, "lionized":84, "disconcerted":84, "self-evidently":84, "heartier":84, "humoring":84, "postpones":84, "cozying":84, "reprinting":84, "meccas":84, "garishly":84, "headline-grabbing":84, "hot-tempered":84, "co-owned":84, "vanishingly":84, "witticisms":84, "baby-blue":84, "beefs":84, "stolidly":84, "reshuffling":84, "wearied":84, "riposte":84, "six-minute":84, "pigeonholed":84, "appraises":84, "spicing":84, "twenty-seven-year-old":84, "short-order":84, "color-coordinated":84, "chauffeured":84, "misspellings":84, "trundling":84, "heart-to-heart":84, "seethes":84, "canvass":84, "extricated":84, "mid-to-late":84, "philosophizing":84, "benevolently":84, "existences":84, "scrunching":84, "unmindful":84, "talk-radio":84, "largeness":84, "disgustedly":84, "near-universal":84, "semidarkness":84, "brainwash":84, "self-induced":84, "turn-off":84, "yellow-orange":84, "outscoring":84, "guzzlers":84, "tooting":84, "operetta":84, "mellower":84, "six-year-olds":84, "thick-skinned":84, "star-struck":84, "smilingly":84, "second-worst":84, "overreliance":84, "therapeutically":84, "one-thirty":84, "thousand-year-old":84, "ultrathin":84, "contusions":84, "littler":84, "slideshow":84, "well-ventilated":84, "super-sized":84, "inviolability":84, "propagandistic":84, "doodads":84, "kryptonite":84, "mongering":84, "fantasyland":84, "fractionally":84, "practising":84, "out-of-focus":84, "discolor":84, "white-bearded":84, "vocalize":84, "blanking":84, "free-enterprise":84, "skinny-dipping":84, "bleated":84, "impracticable":84, "assyrians":84, "millenniums":84, "denominated":84, "warm-water":84, "northerner":84, "major-college":84, "boombox":84, "archetypical":84, "birdcage":84, "punk-rock":84, "purifier":84, "inheres":84, "disinfected":84, "unsportsmanlike":84, "per-pupil":84, "banyan":84, "cudgel":84, "pinch-hit":84, "possums":84, "pollution-control":84, "gunfighter":84, "tracings":84, "two-yard":84, "point-of-sale":84, "bazooka":84, "fonder":84, "earache":84, "open-pit":84, "transportations":84, "vagrancy":84, "gonads":84, "aide-de-camp":84, "gross-out":84, "rostrum":84, "brightnesses":84, "water-cooled":84, "wordsmith":84, "pre-olympic":84, "mafias":84, "explicitness":84, "undecideds":84, "interdependencies":84, "downrange":84, "forced-choice":84, "kibble":84, "arabic-speaking":84, "districtwide":84, "hydrophobic":84, "diablo":84, "colostomy":84, "cultivator":84, "roll-call":84, "gapes":84, "discursively":84, "low-carbon":84, "saboteur":84, "circumnavigation":84, "discoverable":84, "metamorphic":84, "folios":84, "homerun":84, "car-rental":84, "biogeography":84, "optician":84, "rehydration":84, "betel":84, "windings":84, "brownian":84, "householder":84, "regurgitation":84, "coverall":84, "entente":84, "kimchi":84, "micrograph":84, "diskette":84, "neurobiological":84, "nondairy":84, "arcsecond":84, "precocity":84, "non-public":84, "lymphoid":84, "fine-needle":84, "furrier":84, "non-asian":84, "phenolic":84, "pineal":84, "assimilative":84, "anon":84, "nonpoint":84, "bookmakers":84, "majority-black":84, "biodynamic":84, "offshoring":84, "servicers":84, "sultanate":84, "towpath":84, "interspecific":84, "meetinghouse":84, "broad-leaved":84, "inverters":84, "normals":84, "narrowband":84, "pentagram":84, "scalper":84, "atopic":84, "hoarders":84, "androgen":84, "salinization":84, "florentines":84, "person-years":84, "cypriots":84, "adenoid":84, "inhalant":84, "optimality":84, "sickbay":84, "toepiece":84, "cryonics":84, "okapi":84, "streptokinase":84, "antimetabole":84, "non-gaap":84, "shrouding":85, "partakes":85, "seventh-largest":85, "satisfyingly":85, "gravitates":85, "astonishes":85, "not-so-distant":85, "imbibe":85, "reprising":85, "leached":85, "oversimplifying":85, "pats":85, "fervid":85, "furrowing":85, "nurturer":85, "discomfiture":85, "too-tight":85, "pillowy":85, "covetous":85, "consecrate":85, "raffish":85, "re-evaluating":85, "bisecting":85, "understating":85, "copped":85, "unplugging":85, "self-created":85, "cleaved":85, "scorns":85, "colonial-style":85, "mid-90s":85, "outran":85, "reasserts":85, "freighted":85, "impolitic":85, "astound":85, "hotheaded":85, "formalizing":85, "full-tilt":85, "second-to-last":85, "leaches":85, "abdicating":85, "unmercifully":85, "gird":85, "sureness":85, "rectifying":85, "scuttlebutt":85, "buffered":85, "moneymakers":85, "roved":85, "cross-fertilization":85, "backache":85, "buttressing":85, "bootlegging":85, "inseparably":85, "improvises":85, "slouches":85, "fungible":85, "semi-circle":85, "choreographing":85, "envies":85, "cosponsored":85, "lumbers":85, "godliness":85, "cookouts":85, "cataloguing":85, "job-hunting":85, "comfortingly":85, "oscillates":85, "avenged":85, "late-twentieth-century":85, "misapprehension":85, "flag-draped":85, "triangulate":85, "explicated":85, "million-acre":85, "self-motivated":85, "midcareer":85, "sensuously":85, "public-opinion":85, "thrashes":85, "stuck-up":85, "satires":85, "food-processing":85, "unchained":85, "monstrosities":85, "high-contrast":85, "untaxed":85, "no-shows":85, "all-too-common":85, "objectified":85, "jots":85, "loaner":85, "slo-mo":85, "drugmaker":85, "usurper":85, "scammed":85, "guiltless":85, "touchable":85, "conning":85, "foothill":85, "re-creations":85, "flulike":85, "isms":85, "existentially":85, "confectionery":85, "potsherds":85, "tender-crisp":85, "rancheros":85, "demystifying":85, "twenty-sixth":85, "lustre":85, "filmgoers":85, "folk-rock":85, "interpenetration":85, "barnstorming":85, "mortared":85, "husband-to-be":85, "firework":85, "infiltrators":85, "unready":85, "face-lifts":85, "businesswomen":85, "webcast":85, "amateurism":85, "removers":85, "reunified":85, "interbreed":85, "reify":85, "extirpated":85, "decliners":85, "franco-prussian":85, "leaderboard":85, "wastepaper":85, "multi-use":85, "neuropsychologist":85, "formalization":85, "corpsman":85, "non-stick":85, "decimals":85, "demand-side":85, "natural-resource":85, "shortstops":85, "zoologists":85, "modifiable":85, "new-home":85, "underreporting":85, "full-figured":85, "freckle":85, "cratering":85, "master-planned":85, "churchman":85, "megabyte":85, "conservatories":85, "bub":85, "sequoias":85, "puffer":85, "slopeside":85, "luddites":85, "neoplastic":85, "masseur":85, "bullfrogs":85, "bureaucratization":85, "mobilizations":85, "muteness":85, "naproxen":85, "banger":85, "suppressants":85, "bioterrorist":85, "fingerings":85, "golf-course":85, "databank":85, "video-on-demand":85, "mandoline":85, "terminological":85, "cerebrovascular":85, "croquettes":85, "anorak":85, "videoconference":85, "harriers":85, "pumas":85, "anticommunism":85, "waterfowlers":85, "circlet":85, "jihadis":85, "focus-group":85, "boobies":85, "metabolite":85, "social-science":85, "jewellery":85, "subregion":85, "landownership":85, "joiners":85, "graphed":85, "tandems":85, "intrapsychic":85, "implementers":85, "anticoagulant":85, "regionalist":85, "bridgehead":85, "retardants":85, "organelles":85, "inboards":85, "headwater":85, "psychical":85, "photometry":85, "stroma":85, "ligature":85, "synesthesia":85, "lensing":85, "combined-cycle":85, "absolutists":85, "stargazer":85, "gaol":85, "well-draining":85, "anti-catholicism":85, "biodefense":85, "unitive":85, "natatorium":85, "clindamycin":85, "decoders":85, "rewritable":85, "vice-principal":85, "whoopie":85, "preeclampsia":85, "hemostasis":85, "colostrum":85, "half-breeds":85, "timeshare":85, "afrocentrism":85, "salarymen":85, "waveguide":85, "slinger":85, "psilocybin":85, "chlordane":85, "bandgap":85, "preceptor":85, "packinghouse":85, "otosclerosis":85, "bipedalism":85, "gracilis":85, "oesophageal":85, "lymphedema":85, "rehospitalization":85, "prosthetists":85, "amyloidosis":85, "dysarthria":85, "bean-curd":85, "ecophysiological":85, "phthalate":85, "indissolubility":85, "longship":85, "holing":85, "wolfed":85, "recollecting":85, "stretched-out":85, "wowing":85, "outmaneuver":85, "fashionista":85, "prospers":85, "previewed":85, "debunked":85, "decamped":85, "shriveling":85, "undulate":85, "anything-goes":85, "tediously":85, "high-handed":85, "slighting":85, "brainstormed":85, "policed":85, "stone-cold":85, "undergirds":85, "lavishing":85, "harmonized":85, "knowledgeably":85, "arm-in-arm":85, "relinquishes":85, "scrimp":85, "shopworn":85, "mid-teens":85, "incapacitate":85, "musters":85, "bejesus":85, "flag-waving":85, "disentangling":85, "absolving":85, "shapers":85, "single-spaced":85, "unburden":85, "southern-style":85, "illogic":85, "retook":85, "refashion":85, "contretemps":85, "steel-gray":85, "vote-getter":85, "gray-brown":85, "force-fed":85, "incomprehensibly":85, "hyperventilate":85, "overdressed":85, "fifth-floor":85, "parapets":85, "crudeness":85, "withstands":85, "enchant":85, "dears":85, "swindled":85, "heavies":85, "workaholics":85, "rebutting":85, "buttoned-up":85, "simpering":85, "transposing":85, "chatters":85, "affably":85, "jingoism":85, "multistory":85, "bimbos":85, "toed":85, "transpiring":85, "louvered":85, "spillage":85, "reassign":85, "nonpolluting":85, "microsecond":85, "slimmed-down":85, "fold-up":85, "delimit":85, "militate":85, "nine-foot":85, "victuals":85, "recognitions":85, "deconstructs":85, "paydays":85, "oohing":85, "nitwit":85, "showboating":85, "electroshock":85, "sired":85, "splintery":85, "off-stage":85, "editorialists":85, "virtuosic":85, "underpriced":85, "firebombs":85, "stooge":85, "sandlot":85, "outflank":85, "mutilations":85, "anti-black":85, "creditworthiness":85, "barbershops":85, "plebeian":85, "energy-related":85, "scofflaws":85, "value-laden":85, "community-oriented":85, "dooms":85, "cineplex":85, "issue-oriented":85, "precooked":85, "archaeologically":85, "woolens":85, "nonskid":85, "gordian":85, "plaits":85, "bomb-sniffing":85, "chicken-and-egg":85, "swill":85, "paralytic":85, "talkies":85, "trowels":85, "elope":85, "best-quality":85, "high-schoolers":85, "pen-and-ink":85, "interlinked":85, "unmold":85, "prophesies":85, "embroider":85, "impersonality":85, "impious":85, "friable":85, "in-fighting":85, "sportier":85, "business-friendly":85, "lames":85, "forget-me-nots":85, "out-of-print":85, "reportable":85, "levered":85, "dynamos":85, "stuffers":85, "dusts":85, "phase-in":85, "four-season":85, "minimum-security":85, "wide-body":85, "bushwhack":85, "careerist":85, "thankfulness":85, "personal-injury":85, "disproportion":85, "in-patient":85, "basses":85, "prefatory":85, "bacteriological":85, "reseller":85, "steakhouses":85, "fruitfulness":85, "chutneys":85, "warble":85, "fissionable":85, "elks":85, "flag-burning":85, "centipedes":85, "cripes":85, "disputation":85, "silage":85, "caramels":85, "recordkeeping":85, "frenchwoman":85, "whoopee":85, "afghanis":85, "nonperishable":85, "intraoperatively":85, "leninism":85, "light-year":85, "effortful":85, "noblewoman":85, "originary":85, "postproduction":85, "lattices":85, "mantels":85, "crossers":85, "pom":85, "sprocket":85, "universalizing":85, "eon":85, "bloodstain":85, "molt":85, "spacewalks":85, "folklorists":85, "unities":85, "sequencers":85, "suppressive":85, "anticoagulants":85, "procrastinators":85, "delimitation":85, "imperium":85, "rear-facing":85, "perimenopause":85, "milliner":85, "inclusionary":85, "end-users":85, "torques":85, "applique":85, "mainsail":85, "camber":85, "millage":85, "male-only":85, "depositor":85, "antihypertensive":85, "femurs":85, "perfumer":85, "tartlets":85, "terraforming":85, "pre-colonial":85, "subunit":85, "sight-reading":85, "countdowns":85, "ethnohistorical":85, "apse":85, "cytology":85, "oropharyngeal":85, "colonias":85, "improvisers":85, "integrators":85, "enlarger":85, "racialization":85, "hob":85, "rah":85, "biosafety":85, "sumbitch":85, "ender":85, "item-total":85, "workpiece":85, "resistivity":85, "ferryman":85, "algonquian":85, "sanitarian":85, "carthaginians":85, "manic-depression":85, "droids":85, "student-teaching":85, "bookmobile":85, "efferent":85, "chloramphenicol":85, "high-ability":85, "pentagonal":85, "diploid":85, "trackball":85, "asbestosis":85, "neuroma":85, "neorealism":85, "helo":85, "ischial":85, "groupware":85, "syntagmatic":85, "electrocautery":85, "formosan":85, "nonveterans":85, "free-throws":85, "beta-amyloid":85, "plain-weave":85, "tracery":85, "starkest":85, "rarified":85, "beseeched":85, "shipshape":85, "expressionistic":85, "grumpily":85, "best-laid":85, "denuded":85, "ensnare":85, "strafed":85, "red-white-and-blue":85, "seventy-year-old":85, "hauteur":85, "parried":85, "vex":85, "luxuriating":85, "first-timer":85, "candy-colored":85, "somersaulting":85, "blundering":85, "starkness":85, "adjoins":85, "mounded":85, "misfires":85, "pattered":85, "schemed":85, "pulverizing":85, "soporific":85, "enumerates":85, "relenting":85, "wholesomeness":85, "flounced":85, "meatier":85, "easy-to-follow":85, "prognostications":85, "conspires":85, "undereducated":85, "centuries-long":85, "cackles":85, "contaminates":85, "edginess":85, "puckish":85, "immobilizing":85, "pocketful":85, "kowtow":85, "enticingly":85, "chimerical":85, "war-weary":85, "results-oriented":85, "pedigreed":85, "tuxedoed":85, "vaster":85, "emptier":85, "demurs":85, "tittered":85, "muzzled":85, "vacillated":85, "full-flavored":85, "nightspot":85, "old-guard":85, "boxlike":85, "snuffled":85, "tentativeness":85, "fashion-forward":85, "draftee":85, "disgusts":85, "chastisement":85, "ambushing":85, "scabby":85, "fume":85, "cleverest":85, "awesomely":85, "descriptively":85, "tendered":85, "artiste":85, "risk-taker":85, "effervescence":85, "compactness":85, "metastasized":85, "warehoused":85, "evolutions":85, "bigtime":85, "crimped":85, "docility":85, "suasion":85, "back-alley":85, "high-tension":85, "disrespected":85, "transgressing":85, "vagabonds":85, "baby-sat":85, "acceding":85, "mendacious":85, "must-read":85, "triumphalist":85, "noncommittally":85, "four-wheeled":85, "greenhorn":85, "blueness":85, "fests":85, "thereto":85, "cornflower":85, "dotty":85, "spoken-word":85, "tinkerer":85, "pokey":85, "mooing":85, "ten-hour":85, "buffoons":85, "thither":85, "scummy":85, "czechoslovakian":85, "whirr":85, "kafkaesque":85, "electorates":85, "rhythm-and-blues":85, "derivations":85, "slingshots":85, "point-by-point":85, "shithole":85, "roadrunner":85, "creditworthy":85, "standard-size":85, "godfathers":85, "crabgrass":85, "stringency":85, "image-making":85, "bonehead":85, "houseplant":85, "frisk":85, "anthill":85, "information-based":85, "broomsticks":85, "call-and-response":85, "druggies":85, "sportscasters":85, "waked":85, "carburetors":85, "mafioso":85, "legitimating":85, "duchy":85, "expiation":85, "literalist":85, "charge-coupled":85, "scrambler":85, "profilers":85, "thunderhead":85, "intermarried":85, "hubcap":85, "non-working":85, "crosswords":85, "bergamot":85, "striated":85, "noisiest":85, "lower-fat":85, "afterbirth":85, "bullfighter":85, "non-democratic":85, "taoist":85, "pinholes":85, "bugles":85, "ings":85, "offsite":85, "rood":85, "alcohols":85, "carob":85, "front-seat":85, "cockatoo":85, "anti-fascist":85, "briefers":85, "dit":85, "sequin":85, "blood-brain":85, "parley":85, "aught":85, "pediment":85, "meniscus":85, "hoodoo":85, "rumanian":85, "sandman":85, "unconditioned":85, "posteriorly":85, "adhesions":85, "noncombatant":85, "toymaker":85, "pharma":85, "councillor":85, "user-generated":85, "seaweeds":85, "penitents":85, "matchmakers":85, "callback":85, "sociohistorical":85, "bonk":85, "splitters":85, "whist":85, "elegies":85, "foxglove":85, "transceivers":85, "black-footed":85, "decisional":85, "glucosamine":85, "gremlin":85, "t-bills":85, "fair-trade":85, "integers":85, "woodsmen":85, "formalists":85, "erasures":85, "crustal":85, "twinning":85, "humanoids":85, "fibroblasts":85, "pre-post":85, "pruners":85, "vedic":85, "reenactors":85, "emirs":85, "podcasting":85, "sardinian":85, "heat-related":85, "privateer":85, "westphalian":85, "anoxic":85, "psycholinguistic":85, "literacies":85, "capon":85, "non-local":85, "bioenergy":85, "borderlines":85, "sexology":85, "life-course":85, "yakuza":85, "affines":85, "heterozygous":85, "tympanoplasty":85, "teacher/coach":85, "parapharyngeal":85, "buckyball":85, "plyometric":85, "ascetical":85, "atlatl":85, "bioaerosols":85, "magico-religious":85, "relegates":85, "off-base":85, "slants":85, "years-long":85, "rock-strewn":85, "foiling":85, "now-infamous":85, "one-hundredth":85, "six-foot-tall":85, "defense-related":85, "unfussy":85, "thirty-five-year-old":85, "jockeyed":85, "engagingly":85, "disingenuously":85, "browbeat":85, "absolves":85, "lucidly":85, "disdaining":85, "ratchets":85, "stylings":85, "recharges":85, "destabilizes":85, "redressed":85, "puffed-up":85, "refreshes":85, "denigrates":85, "cavort":85, "harangues":85, "unscrewing":85, "splurging":85, "unpacks":85, "smudgy":85, "intermingle":85, "reconvenes":85, "long-fingered":85, "repudiates":85, "pooches":85, "hassled":85, "hashing":85, "discredits":85, "plateful":85, "eighty-year-old":85, "eavesdropped":85, "chit-chat":85, "debt-ridden":85, "platitude":85, "exalts":85, "fasted":85, "prattle":85, "mildewed":85, "well-constructed":85, "vendettas":85, "knifepoint":85, "untruthful":85, "upper-crust":85, "peninsulas":85, "dullest":85, "hellacious":85, "seven-week":85, "flat-chested":85, "starstruck":85, "newsdesk":85, "battle-scarred":85, "far-left":85, "impinges":85, "boonies":85, "not-so-good":85, "plum-colored":85, "meanderings":85, "drunkards":85, "habitations":85, "hooey":85, "purloined":85, "unhurriedly":85, "inundating":85, "inclining":85, "besetting":85, "anti-washington":85, "vaporizing":85, "uncompromised":85, "downdraft":85, "convolutions":85, "brigands":85, "lowed":85, "sclerotic":85, "marquees":85, "pre-determined":85, "wintered":85, "well-intended":85, "heeled":85, "long-necked":85, "great-tasting":85, "streambeds":85, "boardwalks":85, "collarbones":85, "luminary":85, "extra-wide":85, "smooch":85, "mystically":85, "semiconscious":85, "ex-convict":85, "twenty-eighth":85, "seceded":85, "querying":85, "breezing":85, "deployable":85, "interposed":85, "nutcase":85, "adjustability":85, "second-graders":85, "judaic":85, "swelter":85, "right-leaning":85, "frontally":85, "cross-examining":85, "zinger":85, "virologist":85, "unsystematic":85, "cloche":85, "effusions":85, "left-center":85, "defrosting":85, "semipro":85, "members-only":85, "infeasible":85, "grounders":85, "defecation":85, "muscle-building":85, "skywatchers":85, "chairlifts":85, "authenticating":85, "wet-in-wet":85, "reappointed":85, "neutered":85, "shutoff":85, "jojoba":85, "pointillist":85, "voter-approved":85, "chateaux":85, "julep":85, "polycyclic":85, "grilles":85, "subsidization":85, "data-collection":85, "maracas":85, "aspirins":85, "constructors":85, "integrationist":85, "unindicted":85, "backboards":85, "afro-caribbean":85, "sadomasochism":85, "oceanographers":85, "unilateralist":85, "underhand":85, "five-yard":85, "nightlight":85, "self-description":85, "varnishes":85, "oxtail":85, "citronella":85, "rosewater":85, "anvils":85, "sextant":85, "gooseberry":85, "precollege":85, "strainers":85, "gastroesophageal":85, "magnums":85, "internals":85, "drug-using":85, "picketers":85, "fearfulness":85, "moonrise":85, "coffer":85, "local-level":85, "lancer":85, "gynecologic":85, "arcminutes":85, "lupines":85, "reducers":85, "wigwam":85, "corporals":85, "post-modernism":85, "enlistments":85, "ex-presidents":85, "composter":85, "executable":85, "royalists":85, "herbarium":85, "pretest-posttest":85, "low-status":85, "shrimping":85, "zero-g":85, "viewport":85, "inter-group":85, "mummification":85, "midfielders":85, "polarizer":85, "winkle":85, "immunohistochemistry":85, "orthotic":85, "supermax":85, "cantos":85, "alkalinity":85, "privateers":85, "enamelware":85, "diatonic":85, "air-conditioners":85, "constructivists":85, "socioeconomics":85, "asylum-seekers":85, "two-channel":85, "men-at-arms":85, "mediational":85, "nutraceuticals":85, "noncritical":85, "endogamous":85, "reliquaries":85, "mesothelioma":85, "chloroquine":85, "amphorae":85, "oscillators":85, "amenorrhea":85, "soteriology":85, "stereotactic":85, "knowers":85, "lugers":85, "family-school":85, "multiprocessor":85, "participles":85, "ligand":85, "ecofeminism":85, "ethnicization":85, "ethnolinguistic":85, "eosinophil":85, "cholerae":85, "magnetars":85, "chloramine":85, "wends":85, "thrummed":85, "haggled":85, "long-planned":85, "cavorted":85, "cheapness":85, "latecomer":85, "rantings":85, "chastises":85, "scatological":85, "menaces":85, "two-plus":85, "much-hyped":85, "snuggles":85, "unrelentingly":85, "mix-and-match":85, "two-dozen":85, "well-attended":85, "philanderer":85, "ganging":85, "bloodier":85, "second-oldest":85, "infinitesimally":85, "circumnavigate":85, "undergirded":85, "fifteen-year":85, "implacably":85, "reconnoiter":85, "confidantes":85, "paroxysms":85, "half-built":85, "pillaged":85, "directionless":85, "tolerably":85, "debasing":85, "superfast":85, "balletic":85, "incautious":85, "swigging":85, "dolled":85, "rainbow-colored":85, "plies":85, "befitted":85, "second-grader":85, "vigilantism":85, "commiserating":85, "misunderstands":85, "shock-absorbing":85, "american-owned":85, "roomed":85, "white-blond":85, "unpolluted":85, "afterthoughts":85, "footlights":85, "scorning":85, "derelicts":85, "absent-mindedly":85, "cabarets":85, "subsumes":85, "half-human":85, "vinegary":85, "high-tops":85, "more-or-less":85, "hypotheticals":85, "semi-autonomous":85, "three-wheeled":85, "balefully":85, "price-to-earnings":85, "cluck":85, "sensationalistic":85, "misspelling":85, "deforming":85, "rescinding":85, "displease":85, "thrill-seeking":85, "multiplexes":85, "awfulness":85, "postulating":85, "chalks":85, "clerking":85, "bluejeans":85, "commies":85, "half-ton":85, "prioritizes":85, "stagecraft":85, "hussy":85, "self-policing":85, "extemporaneous":85, "recombine":85, "mid-19th-century":85, "waddles":85, "chemical-free":85, "life-insurance":85, "nips":85, "donnas":85, "bossing":85, "bioethicist":85, "ambassadorship":85, "tambourines":85, "leanest":85, "consumable":85, "bonbons":85, "low-life":85, "knuckleheads":85, "flophouse":85, "insertions":85, "derangement":85, "cleanses":85, "snips":85, "claw-foot":85, "latchkey":85, "gastroenterology":85, "crafters":85, "secreting":85, "cooling-off":85, "blurbs":85, "fratricide":85, "sippy":85, "effectual":85, "yarmulkes":85, "multichannel":85, "metastasize":85, "bluestone":85, "comas":85, "suburbanite":85, "ulcerated":85, "psychedelia":85, "zit":85, "chrome-plated":85, "israeli-arab":85, "homebuilding":85, "rutabagas":85, "record-holder":85, "computer-animated":85, "crosswinds":85, "rollerblading":85, "costuming":85, "groomsmen":85, "squiggle":85, "dormers":85, "harpoons":85, "booker":85, "embalmed":85, "swellings":85, "cholla":85, "singleness":85, "pinochle":85, "gangbangers":85, "dichotomized":85, "multicenter":85, "loveseat":85, "expats":85, "antismoking":85, "depreciated":85, "judean":85, "framer":85, "o-rings":85, "neocolonial":85, "gizzard":85, "jukeboxes":85, "cartooning":85, "beagles":85, "antifeminist":85, "lariat":85, "snowmobilers":85, "opals":85, "manchego":85, "epistemologically":85, "supercar":85, "workaholism":85, "subspecialty":85, "means-tested":85, "dividend-paying":85, "absentees":85, "antisemitic":85, "figureheads":85, "orientalist":85, "enquiries":85, "immunosuppression":85, "touristic":85, "flybys":85, "mosquito-borne":85, "lymphocytic":85, "indissoluble":85, "remand":85, "rheumatology":85, "sensorimotor":85, "social-psychological":85, "melanomas":85, "cowbell":85, "perlite":85, "moratoriums":85, "sacral":85, "one-tailed":85, "seances":85, "multicomponent":85, "nondefense":85, "disaggregation":85, "brotherhoods":85, "ninjas":85, "burka":85, "illusionism":85, "vizier":85, "singularities":85, "motoryacht":85, "suppurative":85, "diagnosticians":85, "recolonization":85, "gluteal":85, "nebular":85, "peon":85, "pronghorns":85, "civet":85, "labor-force":85, "zeaxanthin":85, "aikido":85, "hydrolysis":85, "video-based":85, "radionuclides":85, "plebes":85, "chelation":85, "nonimmigrant":85, "permaculture":85, "electroplating":85, "caiman":85, "dba":85, "plasmid":85, "sterols":85, "sculpin":85, "lossless":85, "comlink":85, "forepaw":85, "irradiance":85, "restrictiveness":85, "hemangiomas":85, "wombats":85, "ankle-foot":85, "exulting":85, "full-bore":85, "savaging":85, "ponied":85, "twenty-foot":85, "brio":85, "soldiered":85, "atrophied":85, "long-limbed":85, "warranting":85, "weak-kneed":85, "sedately":85, "jubilantly":85, "smooching":85, "exults":85, "sleekly":85, "oft-cited":85, "ballyhooed":85, "home-baked":85, "eight-member":85, "devolves":85, "disgorged":85, "ringleaders":85, "doll-like":85, "disorient":85, "multimillionaires":85, "ill-timed":85, "percolated":85, "forestalling":85, "enrages":85, "deriding":85, "pantomimed":85, "cappuccinos":85, "scorcher":85, "palm-sized":85, "odd-shaped":85, "wining":85, "rampaged":85, "overplay":85, "all-nighters":85, "blots":85, "hoards":85, "leavened":85, "clampdown":85, "easy-to-make":85, "nonissue":85, "minutia":85, "distinguished-looking":85, "high-paid":85, "homed":85, "eyesores":85, "hearken":85, "dramatics":85, "encamped":85, "loudmouth":85, "voided":85, "dun-colored":85, "desecrating":85, "effaced":85, "watchtowers":85, "burps":85, "dealmaker":85, "pin-up":85, "stinker":85, "mildness":85, "veiny":85, "reprimanding":85, "blunts":85, "slip-on":85, "wolfish":85, "influence-peddling":85, "once-a-year":85, "conjectural":85, "stemware":85, "un-christian":85, "reportorial":85, "steamships":85, "third-string":85, "creaminess":85, "pleadingly":85, "red-wine":85, "hillocks":85, "incandescence":85, "journalistically":85, "no-cost":85, "armoires":85, "co-leader":85, "post-operative":85, "nonconformist":85, "semiautonomous":85, "backlighting":85, "hyperkinetic":85, "dinged":85, "farmhand":85, "reconceptualize":85, "charring":85, "libelous":85, "waterskiing":85, "backroads":85, "gemstone":85, "orchestrations":85, "go-around":85, "hipbones":85, "complainers":85, "end-of-year":85, "unmasking":85, "sisters-in-law":85, "congeniality":85, "enfranchisement":85, "potentate":85, "hankie":85, "chambray":85, "low-skill":85, "shithead":85, "timekeeper":85, "bricks-and-mortar":85, "inch-wide":85, "complainants":85, "sleepwalker":85, "brushstroke":85, "cloudiness":85, "ejaculate":85, "notepaper":85, "lowercase":85, "entourages":85, "strums":85, "derricks":85, "ambassadorial":85, "nonscientists":85, "wifes":85, "expropriated":85, "five-second":85, "sabbaticals":85, "initialed":85, "gourmand":85, "committeeman":85, "gins":85, "trick-or-treat":85, "reified":85, "crosswind":85, "windproof":85, "secretary-treasurer":85, "sulfates":85, "radio-controlled":85, "verts":85, "jujitsu":85, "extirpation":85, "lineal":85, "elocution":85, "tubercular":85, "curler":85, "unattributed":85, "greeters":85, "pleasantness":85, "crepuscular":85, "snitches":85, "community-building":85, "semifinalists":85, "yule":85, "schnauzer":85, "school-board":85, "winder":85, "sandbagging":85, "deep-frying":85, "full-face":85, "hydroxy":85, "oxbow":85, "chairmanships":85, "roofers":85, "whinnied":85, "dilutions":85, "macroeconomics":85, "co-payment":85, "ornithological":85, "southland":85, "by-laws":85, "me-too":85, "bottomlands":85, "inseparability":85, "hemorrhages":85, "yeller":85, "summa":85, "industry-specific":85, "palaver":85, "preformed":85, "zephyr":85, "prob'ly":85, "inflatables":85, "borage":85, "semi-skilled":85, "shrimper":85, "flextime":85, "launderers":85, "governor-general":85, "evenhandedness":85, "afro-americans":85, "dimensionless":85, "inerrancy":85, "prevarication":85, "oolong":85, "ducal":85, "unserved":85, "globulin":85, "boson":85, "situps":85, "militarists":85, "psychopharmacology":85, "floppies":85, "accreting":85, "inter-arab":85, "taekwondo":85, "anti-racist":85, "sub-scales":85, "chronicity":85, "shovel-ready":85, "catechist":85, "riverwalk":85, "unicellular":85, "accentuation":85, "second-line":85, "rimfire":85, "habitability":85, "bioinformatics":85, "ebook":85, "meatus":85, "jewess":85, "multivariable":85, "audiologic":85, "megalithic":85, "historical-critical":85, "seroprevalence":85, "cumbia":85, "rabbet":85, "echocardiography":85, "turbinates":85, "mozambicans":85, "tipis":85, "madrassa":85, "stevia":85, "photoreceptors":85, "bigeye":85, "mutism":85, "anhydrous":85, "dark-matter":85, "preintervention":85, "gasifier":85, "coachability":85, "biowaste":85, "bludgeon":85, "shored":85, "corroding":85, "climaxes":85, "tradition-bound":85, "raucously":85, "frolicked":85, "raggedly":85, "lighter-weight":85, "clobber":85, "frivolously":85, "juiciest":85, "hamming":85, "interlocked":85, "synergistically":85, "sluicing":85, "slugfest":85, "stomach-churning":85, "stonewalled":85, "crystallizing":85, "oppresses":85, "slopping":85, "curdle":85, "airstrips":85, "doubtlessly":85, "non-believers":85, "head-high":85, "unsheathed":85, "quirkiness":85, "unfurls":85, "slickly":85, "overhauls":85, "megalomania":85, "factoids":85, "tinkerers":85, "enthroned":85, "lefthand":85, "unresolvable":85, "fresh-squeezed":85, "disarms":85, "eight-mile":85, "long-abandoned":85, "hypothesizing":85, "scuffled":85, "sculpts":85, "spiral-bound":85, "shirtsleeve":85, "uncorrupted":85, "computer-driven":85, "best-ever":85, "whooshing":85, "vacating":85, "sicknesses":85, "commingling":85, "crams":85, "guttering":85, "desecrated":85, "waxen":85, "invitees":85, "burbled":85, "overindulgence":85, "top-line":85, "kingmaker":85, "red-and-black":85, "whoppers":85, "cradle-to-grave":85, "crackerjack":85, "dialectically":85, "officiated":85, "sepulchral":85, "adjudicating":85, "scald":85, "repented":85, "efface":85, "guff":85, "oldsters":85, "trespasser":85, "aesthete":85, "bicycled":85, "high-mileage":85, "seismically":85, "slow-release":85, "vandal":85, "gibbering":85, "right-winger":85, "neverending":85, "handwork":85, "stream-of-consciousness":85, "grippy":85, "getter":85, "fine-arts":85, "professionalize":85, "untalented":85, "hymnals":85, "true-life":85, "egg-white":85, "deletes":85, "sodomized":85, "hairnet":85, "truisms":85, "late-19th-century":85, "stomachaches":85, "prickles":85, "mantles":85, "railroading":85, "nonvoting":85, "mid-western":85, "hatchets":85, "oof":85, "import-export":85, "epigram":85, "toolshed":85, "toke":85, "udders":85, "curveballs":85, "touch-sensitive":85, "consents":85, "pseudoscience":85, "noncommunist":85, "creekside":85, "inside-outside":85, "high-elevation":85, "multivalent":85, "coatrack":85, "kingfishers":85, "adjournment":85, "swingers":85, "nonworking":85, "five-step":85, "goddaughter":85, "patroness":85, "porterhouse":85, "ecofriendly":85, "denims":85, "self-generated":85, "ambidextrous":85, "voyaging":85, "simplifications":85, "oven-roasted":85, "three-level":85, "religionists":85, "broadsheet":85, "nanoseconds":85, "cloven":85, "harems":85, "tsarist":85, "consorts":85, "pro-reform":85, "titties":85, "rezone":85, "archdiocesan":85, "intermediate-range":85, "greengrocer":85, "pasties":85, "milanese":85, "cutthroats":85, "thrushes":85, "luau":85, "know-nothing":85, "cupolas":85, "male-oriented":85, "a-ha":85, "interest-group":85, "creative-writing":85, "bollocks":85, "incorporeal":85, "daughters-in-law":85, "salesclerk":85, "moleskin":85, "sundeck":85, "reproductively":85, "javelins":85, "waterbed":85, "perceptually":85, "lyricists":85, "talkie":85, "three-yard":85, "non-islamic":85, "drunken-driving":85, "paperboy":85, "mindsets":85, "delft":85, "formalistic":85, "millenarian":85, "prerevolutionary":85, "business-class":85, "corticosteroid":85, "provident":85, "context-specific":85, "bioavailability":85, "bromeliads":85, "darter":85, "materialists":85, "rastafarian":85, "nightshade":85, "bocce":85, "dippers":85, "obstetrical":85, "strivers":85, "tillers":85, "numeracy":85, "high-poverty":85, "granuloma":85, "spreaders":85, "digitalis":85, "trampolines":85, "relativists":85, "predicates":85, "gumball":85, "anisotropic":85, "ironworkers":85, "woodblock":85, "nonminority":85, "barristers":85, "naan":85, "context-sensitive":85, "dysphoria":85, "geo-political":85, "canaanites":85, "allium":85, "invasiveness":85, "bioethical":85, "melamine":85, "anti-abortionists":85, "wickets":85, "clothiers":85, "mobbing":85, "gimp":85, "hydrilla":85, "presbytery":85, "in-hospital":85, "kudu":85, "radiofrequency":85, "bahraini":85, "servicer":85, "probationers":85, "sensei":85, "leaver":85, "endocarditis":85, "coherency":85, "methotrexate":85, "arginine":85, "sciatic":85, "lipoic":85, "croupier":85, "supraglottic":85, "cross-gender":85, "dysphonia":85, "neuropathic":85, "ketamine":85, "adjudicators":85, "pruritus":85, "adaptationist":85, "myosin":85, "quints":85, "brane":85, "concilium":85, "magnetar":85, "trichologist":85, "predella":85, "long-dormant":85, "cozily":85, "detail-oriented":85, "re-energize":85, "outrunning":85, "smooth-talking":85, "ladling":85, "owlish":85, "stampeded":85, "denting":85, "discombobulated":85, "slickness":85, "counterattacked":85, "burnishing":85, "thirty-two-year-old":85, "sturdiest":85, "well-honed":85, "meting":85, "neck-and-neck":85, "ineluctably":85, "condescend":85, "overshoot":85, "deftness":85, "eight-man":85, "letup":85, "fiftyish":85, "unclipped":85, "wisecrack":85, "wheedled":85, "hatless":85, "lowlifes":85, "tunneled":85, "daubed":85, "euphemistic":85, "nuzzles":85, "vituperative":85, "gassing":85, "commandeering":85, "snit":85, "frilled":85, "consigning":85, "decapitate":85, "anodyne":85, "subtracts":85, "sixth-round":85, "fixating":85, "tykes":85, "jackhammers":85, "entryways":85, "balled-up":85, "pontificating":85, "invalids":85, "indian-style":85, "mid-week":85, "sponging":85, "repackaged":85, "sleight-of-hand":85, "sufferance":85, "poppycock":85, "scalded":85, "retched":85, "rubber-soled":85, "twangy":85, "get-well":85, "mid-flight":85, "untreatable":85, "bumming":85, "first-rounder":85, "xeroxed":85, "supersize":85, "reorganizations":85, "thirty-second":85, "reimagine":85, "incentivize":85, "closeups":85, "redeveloping":85, "blooded":85, "alertly":85, "redeveloped":85, "industriously":85, "naptime":85, "subsuming":85, "debase":85, "chits":85, "blab":85, "overfed":85, "microwaving":85, "adulterers":85, "benders":85, "frenzies":85, "tradesman":85, "dozes":85, "carolinian":85, "greek-style":85, "blogged":85, "gang-raped":85, "leatherette":85, "four-member":85, "cordiality":85, "stoical":85, "hailstones":85, "petulantly":85, "nitpick":85, "low-ranking":85, "agronomy":85, "broths":85, "blearily":85, "milliliter":85, "jags":85, "all-nighter":85, "abdomens":85, "nurturers":85, "voice-recognition":85, "gatherer":85, "trappist":85, "blindfolds":85, "minster":85, "igneous":85, "metabolically":85, "careerism":85, "telepathically":85, "deep-space":85, "unmanly":85, "right-center":85, "tithe":85, "clovers":85, "corncob":85, "electro":85, "performing-arts":85, "egghead":85, "pro-iranian":85, "theme-park":85, "honeymooned":85, "overmix":85, "syntactical":85, "basswood":85, "misrule":85, "microseconds":85, "supertanker":85, "climatology":85, "undergarment":85, "endorser":85, "complainer":85, "post-conflict":85, "dealmakers":85, "anticipations":85, "chesty":85, "counterweights":85, "semi-private":85, "fanged":85, "untranslatable":85, "lower-court":85, "windbreaks":85, "dissimulation":85, "didacticism":85, "coarsening":85, "reburied":85, "doo-wop":85, "superstation":85, "deferments":85, "freeloaders":85, "internationals":85, "noninterference":85, "igloos":85, "legalism":85, "nosebleeds":85, "butterflied":85, "lowlights":85, "megafauna":85, "siltation":85, "linoleic":85, "defund":85, "dinar":85, "iconoclasts":85, "motility":85, "diagnostician":85, "conflictive":85, "copyist":85, "front-loading":85, "velodrome":85, "farmhands":85, "riggers":85, "absorptive":85, "ballyhoo":85, "second-home":85, "ides":85, "hazardous-waste":85, "remote-sensing":85, "ductile":85, "minicomputers":85, "freeware":85, "fatback":85, "egoistic":85, "servicemembers":85, "substratum":85, "spayed":85, "megapixels":85, "splendour":85, "f-ing":85, "selectable":85, "interspersing":85, "full-suspension":85, "baster":85, "bookmaker":85, "cavitation":85, "thematics":85, "ploughing":85, "photonics":85, "ducats":85, "lobsterman":85, "distiller":85, "salvias":85, "marquise":85, "liquefaction":85, "massless":85, "out-of-class":85, "infra-red":85, "selectors":85, "windsurfers":85, "transcendentalism":85, "saguaros":85, "oscillatory":85, "physic":85, "discordance":85, "roughnecks":85, "houseboy":85, "metrology":85, "anti-bullying":85, "angolans":85, "organismal":85, "loco":85, "lightspeed":85, "declassification":85, "anti-hiv":85, "peoplehood":85, "midrash":85, "kibbutzim":85, "three-factor":85, "hellebores":85, "attestation":85, "trigeminal":85, "psalter":85, "nanowires":85, "nightcrawlers":85, "eighteen-year":85, "glutamine":85, "gammas":85, "rhinosinusitis":85, "proteomics":85, "anacondas":85, "patency":85, "milord":85, "verged":86, "needled":86, "reignited":86, "mistrustful":86, "demeaned":86, "thirsting":86, "virulently":86, "outpourings":86, "kibosh":86, "close-fitting":86, "throbs":86, "blustered":86, "fastidiousness":86, "sashayed":86, "reshapes":86, "sackcloth":86, "broaching":86, "nabbing":86, "presages":86, "end-of-the-year":86, "earthshaking":86, "well-guarded":86, "well-executed":86, "wittingly":86, "peevishly":86, "crosslegged":86, "fast-rising":86, "lopping":86, "belligerently":86, "big-hearted":86, "boneheaded":86, "stockinged":86, "lower-paid":86, "congeal":86, "availed":86, "solicitously":86, "unalterably":86, "horrify":86, "olive-skinned":86, "innocent-looking":86, "new-style":86, "self-centeredness":86, "reaganesque":86, "green-and-white":86, "transmute":86, "bang-up":86, "consumer-friendly":86, "knolls":86, "mid-winter":86, "blow-by-blow":86, "malefactors":86, "worming":86, "short-haired":86, "skyrockets":86, "scriptwriter":86, "senselessly":86, "detracted":86, "transact":86, "double-time":86, "once-a-week":86, "day-out":86, "trivialities":86, "public-spirited":86, "unwinds":86, "impinged":86, "hard-and-fast":86, "hosed":86, "multi-layered":86, "umpteen":86, "impale":86, "shorter-term":86, "unmixed":86, "ridiculousness":86, "snowfalls":86, "soaped":86, "gouts":86, "unprecedentedly":86, "well-advised":86, "ineptness":86, "ad-hoc":86, "accenting":86, "flirtatiously":86, "smolders":86, "vaporizes":86, "printings":86, "debunks":86, "disables":86, "big-government":86, "month-to-month":86, "southpaw":86, "one-note":86, "grillwork":86, "obstructionists":86, "squeaker":86, "visualizes":86, "intonations":86, "abortionists":86, "cut-offs":86, "white-coated":86, "clomped":86, "flatland":86, "backbones":86, "tautly":86, "unexploited":86, "nine-month-old":86, "polka-dotted":86, "cosponsors":86, "tricycles":86, "motion-picture":86, "sons-in-law":86, "etymologically":86, "earth-moving":86, "interferences":86, "fleece-lined":86, "heckling":86, "heat-trapping":86, "tableside":86, "duplicative":86, "least-expensive":86, "hindrances":86, "nor'easter":86, "handsaw":86, "disenfranchise":86, "grooved":86, "every-day":86, "marathoners":86, "unselfconscious":86, "untouchables":86, "glossies":86, "writer/director":86, "restructurings":86, "emerita":86, "air-cooled":86, "erosive":86, "dishware":86, "derbies":86, "foreign-aid":86, "microbrewery":86, "sixth-century":86, "proprietress":86, "settees":86, "uncorroborated":86, "hurray":86, "east-southeast":86, "animatronic":86, "flip-up":86, "harvestable":86, "fast-drying":86, "piteous":86, "reissues":86, "advancers":86, "voter-registration":86, "votives":86, "proofing":86, "bostonian":86, "adult-onset":86, "changeless":86, "nuclear-power":86, "fifth-century":86, "commissars":86, "bobblehead":86, "husband-wife":86, "bowstring":86, "chalkboards":86, "incrementalism":86, "step-up":86, "storyboard":86, "swordsman":86, "unmonitored":86, "metalsmith":86, "antacid":86, "dominions":86, "homelike":86, "overbite":86, "exclusivist":86, "relapsing":86, "anteriorly":86, "physiotherapy":86, "stealer":86, "economic-development":86, "fabricators":86, "urban-rural":86, "canasta":86, "resize":86, "photojournalists":86, "sprayers":86, "consensus-building":86, "driver-side":86, "non-parametric":86, "dependant":86, "blue-haired":86, "accountancy":86, "carousels":86, "foursomes":86, "tandoori":86, "softeners":86, "flood-prone":86, "confectioner":86, "pharmacologic":86, "gorse":86, "restatements":86, "fantail":86, "puffins":86, "audiologist":86, "leprechauns":86, "jackpots":86, "mixed-income":86, "single-breasted":86, "hexagon":86, "pralines":86, "sickroom":86, "emplacement":86, "off-grid":86, "puppeteers":86, "instant-messaging":86, "calvinists":86, "biomolecules":86, "avidity":86, "riddling":86, "shekels":86, "baronet":86, "personalism":86, "second-row":86, "photometric":86, "communitarianism":86, "jellybeans":86, "kasha":86, "vesicles":86, "mastitis":86, "loupe":86, "mini-van":86, "distance-learning":86, "paceline":86, "satay":86, "berbers":86, "sifter":86, "fibres":86, "arrowroot":86, "bracts":86, "foot-and-mouth":86, "trommel":86, "telex":86, "meself":86, "noncustodial":86, "dynamometer":86, "brined":86, "feminisms":86, "low-pass":86, "iff":86, "midfoot":86, "cetacean":86, "thermophilic":86, "racial-ethnic":86, "phrenology":86, "microcontroller":86, "apochromatic":86, "bisphosphonates":86, "warders":86, "glyphosate":86, "pyro":86, "lb-ft":86, "brain-based":86, "ischaemia":86, "trabecular":86, "allergists":86, "air-bone":86, "honkers":86, "seamounts":86, "nonconsensual":86, "ivorian":86, "holodeck":86, "neandertal":86, "smolts":86, "lacrimal":86, "dilator":86, "pre-competition":86, "viviparous":86, "analogizing":86, "rustproofing":86, "apnoea":86, "arousable":86, "fashionistas":86, "trouncing":86, "jibes":86, "shockwaves":86, "big-shot":86, "horrendously":86, "well-understood":86, "oddness":86, "antagonized":86, "reenters":86, "socking":86, "straight-faced":86, "well-reasoned":86, "five-person":86, "byword":86, "swiftest":86, "sturdily":86, "spluttering":86, "atypically":86, "bickered":86, "irritatingly":86, "scythes":86, "pooh-pooh":86, "cost-free":86, "deigned":86, "dead-ends":86, "nose-to-nose":86, "nostrums":86, "vanquishing":86, "overpowers":86, "emerald-green":86, "manhandling":86, "tax-paying":86, "unromantic":86, "capriciously":86, "lampooned":86, "battlefront":86, "spasmed":86, "standpoints":86, "ricochets":86, "elephantine":86, "acquiescent":86, "full-out":86, "crackly":86, "outgrowing":86, "bailiwick":86, "stupefying":86, "unproved":86, "best-preserved":86, "resinous":86, "tidiness":86, "piercingly":86, "calmest":86, "latticed":86, "unconvincingly":86, "well-cut":86, "tear-stained":86, "well-rested":86, "government-sanctioned":86, "repays":86, "individualizing":86, "clomping":86, "shortterm":86, "misconstrue":86, "better-than-expected":86, "apposite":86, "lowball":86, "light-weight":86, "subgenre":86, "whites-only":86, "paroxysm":86, "parking-lot":86, "self-dealing":86, "loofah":86, "windbreakers":86, "post-apocalyptic":86, "cuffing":86, "photocopying":86, "prosecutes":86, "sub-zero":86, "unendurable":86, "flaxen":86, "one-sentence":86, "gamy":86, "leather-clad":86, "divested":86, "mutates":86, "blonder":86, "homestretch":86, "seven-inch":86, "undertakers":86, "obsessional":86, "fishtailing":86, "bookshops":86, "moistness":86, "thuggery":86, "hypocrisies":86, "well-padded":86, "dotage":86, "hiphop":86, "hinging":86, "girdles":86, "four-step":86, "economizing":86, "unimproved":86, "hugger":86, "unprompted":86, "cubbyholes":86, "typecasting":86, "exigency":86, "wingback":86, "steel-toed":86, "farmsteads":86, "deregulatory":86, "muralist":86, "spigots":86, "multi-racial":86, "speckles":86, "two-dollar":86, "reprocess":86, "clinton-era":86, "half-truth":86, "muslim-led":86, "teaspoonful":86, "flowerpot":86, "gulags":86, "repellant":86, "downshifting":86, "earth-bound":86, "tokenism":86, "updrafts":86, "cleaner-burning":86, "genocides":86, "stock-picking":86, "corkboard":86, "soulmate":86, "terabytes":86, "playboys":86, "fells":86, "nine-inch":86, "stress-induced":86, "tremolo":86, "immunizing":86, "murderess":86, "owner-occupied":86, "shoemakers":86, "unachievable":86, "biophysics":86, "arabic-language":86, "toxic-waste":86, "accumulative":86, "promethean":86, "arteriosclerosis":86, "mouth-to-mouth":86, "motocross":86, "deciliter":86, "new-product":86, "sixth-seeded":86, "bedstead":86, "backbeat":86, "agronomists":86, "refillable":86, "rustlers":86, "home-office":86, "anglo-french":86, "parabola":86, "citrate":86, "jitterbug":86, "tonk":86, "dehydrate":86, "ninth-century":86, "decoupling":86, "pretests":86, "hoofed":86, "travel-related":86, "low-rate":86, "greenroom":86, "yaks":86, "copayments":86, "time-limited":86, "endorsers":86, "labelling":86, "deep-diving":86, "clothespin":86, "dharma":86, "accuracies":86, "skincare":86, "redlining":86, "impossibilities":86, "marginalia":86, "ramekin":86, "life-form":86, "non-racial":86, "authoritarians":86, "multitiered":86, "gerbils":86, "satyr":86, "clitoral":86, "camshaft":86, "assemblers":86, "dualities":86, "dually":86, "flasher":86, "praline":86, "tactility":86, "heart-lung":86, "mayoralty":86, "left-liberal":86, "phylum":86, "forecourt":86, "lagers":86, "hayfield":86, "quartzite":86, "echocardiogram":86, "looter":86, "all-season":86, "stock-car":86, "perineum":86, "stoics":86, "dwarfism":86, "loggia":86, "syllabic":86, "nondominant":86, "short-track":86, "light-water":86, "maidservant":86, "esters":86, "geriatrician":86, "podiatric":86, "spasticity":86, "pince-nez":86, "maxilla":86, "videocamera":86, "cosmopolitans":86, "unconventionally":86, "self-transformation":86, "fieldworkers":86, "neuralgia":86, "student-faculty":86, "adverbial":86, "bluing":86, "griot":86, "hyperthyroidism":86, "self-appraisal":86, "mitosis":86, "mainlanders":86, "seatings":86, "airfoils":86, "epiglottis":86, "lederhosen":86, "cannas":86, "big-bang":86, "psychedelics":86, "boyo":86, "post-baccalaureate":86, "eukaryotes":86, "methionine":86, "eldercare":86, "reticulum":86, "biofilters":86, "ferritin":86, "lamprey":86, "giardiasis":86, "antlerless":86, "subarachnoid":86, "femoris":86, "buprenorphine":86, "hoplite":86, "anterolateral":86, "microtubules":86, "floorplan":86, "chlorpyrifos":86, "matrilineage":86, "incomers":86, "proenvironmental":86, "other-oriented":86, "transhumance":86, "exciton":86, "disfluencies":86, "lethally":86, "deep-blue":86, "outpaces":86, "unseating":86, "dabbles":86, "lightning-quick":86, "irredeemably":86, "resurrects":86, "straight-forward":86, "advisability":86, "unrewarding":86, "caramel-colored":86, "glacially":86, "percolates":86, "whetted":86, "verbalizing":86, "cozier":86, "indescribably":86, "fends":86, "duking":86, "toddling":86, "two-ton":86, "surefooted":86, "tactless":86, "unprintable":86, "notching":86, "gofer":86, "encroaches":86, "venturesome":86, "nine-year-olds":86, "tuneless":86, "enraging":86, "turreted":86, "contentiousness":86, "sisyphean":86, "infringes":86, "cut-glass":86, "wrings":86, "outwitted":86, "zingers":86, "illusive":86, "outvoted":86, "murmurings":86, "bettered":86, "relives":86, "skirmishing":86, "prognostication":86, "beguile":86, "betrayer":86, "offload":86, "near-constant":86, "disavowing":86, "qualm":86, "costarring":86, "high-toned":86, "gold-colored":86, "beefier":86, "tromped":86, "forthrightness":86, "lazing":86, "manhandled":86, "nonentity":86, "builtin":86, "lower-quality":86, "jell":86, "dyspeptic":86, "satirizing":86, "parklike":86, "hokum":86, "dishrag":86, "page-turner":86, "wagered":86, "natured":86, "income-producing":86, "three-year-olds":86, "soliloquies":86, "marginalizes":86, "kind-hearted":86, "demigod":86, "libidinous":86, "bad-tempered":86, "assignation":86, "flea-market":86, "ne'er-do-well":86, "porky":86, "hard-hearted":86, "supernaturally":86, "character-building":86, "tragicomic":86, "city-wide":86, "psychobabble":86, "nation-wide":86, "sectioned":86, "palmettos":86, "cinches":86, "medicating":86, "medal-winning":86, "inklings":86, "boomlet":86, "cleverer":86, "creamer":86, "apoplexy":86, "unscented":86, "dissimilarities":86, "thinkable":86, "problematize":86, "pirating":86, "matriculate":86, "paperweights":86, "four-night":86, "thousand-year":86, "fledglings":86, "statehouses":86, "onside":86, "growth-oriented":86, "hotcakes":86, "singer-songwriters":86, "padlocks":86, "top-floor":86, "coin-operated":86, "roominess":86, "spreadable":86, "pop-rock":86, "all-round":86, "oversubscribed":86, "commonplaces":86, "draftsmanship":86, "schoolmarm":86, "emphasise":86, "unrolls":86, "unacquainted":86, "curtsied":86, "longhaired":86, "countermeasure":86, "laminates":86, "newsboy":86, "law-school":86, "aerodynamically":86, "third-tier":86, "republican-leaning":86, "redial":86, "demitasse":86, "double-play":86, "misidentification":86, "castaway":86, "recreationally":86, "fasts":86, "pan-asian":86, "dickhead":86, "masturbated":86, "scarecrows":86, "arts-and-crafts":86, "effectuate":86, "semi-permanent":86, "weal":86, "air-defense":86, "unfreeze":86, "stowaways":86, "turn-out":86, "auteurs":86, "uncultured":86, "ghosting":86, "hardboiled":86, "handicappers":86, "pipers":86, "badder":86, "socioeconomically":86, "unlovable":86, "accrual":86, "regionwide":86, "alsatian":86, "spic":86, "chainlink":86, "footboard":86, "seashores":86, "equalized":86, "whorl":86, "presupposed":86, "dales":86, "squids":86, "tenderfoot":86, "outcome-based":86, "ex-convicts":86, "tree-planting":86, "mastodons":86, "true-false":86, "soft-plastic":86, "one-two-three":86, "membranous":86, "drug-treatment":86, "scholasticism":86, "extrasensory":86, "collective-bargaining":86, "dyspepsia":86, "supercollider":86, "chiller":86, "conjunctivitis":86, "lemon-lime":86, "knitwear":86, "taxidermy":86, "spareribs":86, "campus-wide":86, "h-bomb":86, "kilometres":86, "railcar":86, "dissatisfactions":86, "obits":86, "syncing":86, "buckskins":86, "samovar":86, "aspic":86, "rosin":86, "ludic":86, "carbonation":86, "hardpack":86, "post-high":86, "maths":86, "illiquid":86, "voluntarism":86, "hostage-takers":86, "aborigine":86, "p-values":86, "hobos":86, "deindustrialization":86, "second-stage":86, "microdermabrasion":86, "communalism":86, "nibs":86, "nits":86, "intraclass":86, "meridians":86, "non-residents":86, "troglodytes":86, "medicalization":86, "postrevolutionary":86, "solstices":86, "non-orthodox":86, "heli-skiing":86, "pugs":86, "anorexics":86, "transcriber":86, "tonsillitis":86, "closed-cell":86, "small-stock":86, "sex-based":86, "cardiothoracic":86, "rhetorics":86, "remonstrance":86, "clementines":86, "vertices":86, "axon":86, "duodenal":86, "handcart":86, "granulomatous":86, "off-farm":86, "mesenchymal":86, "nubians":86, "whiteboards":86, "disinhibition":86, "chakras":86, "pulps":86, "sarcomas":86, "benefit-cost":86, "eyestalks":86, "meteoroid":86, "copra":86, "nonlawyer":86, "lactase":86, "fixed-point":86, "trilobite":86, "telomere":86, "amphotericin":86, "stickleback":86, "mesocosms":86, "mesocosm":86, "ribboned":86, "two-decade":86, "glitterati":86, "fusses":86, "four-room":86, "tabulating":86, "oversimplified":86, "raptly":86, "squelching":86, "interrogates":86, "post-watergate":86, "hungering":86, "inaugurates":86, "inadvisable":86, "inductee":86, "heart-breaking":86, "honest-to-god":86, "half-drunk":86, "seven-story":86, "warmed-over":86, "intone":86, "dismounting":86, "tax-cutting":86, "third-ranked":86, "coffee-colored":86, "re-form":86, "crosscurrents":86, "showstopping":86, "paraphrased":86, "schemer":86, "espousal":86, "hewing":86, "dithered":86, "hoodwinked":86, "budget-friendly":86, "budget-conscious":86, "democrat-controlled":86, "thin-lipped":86, "interning":86, "jerkily":86, "thereon":86, "unpersuasive":86, "galled":86, "backpedaled":86, "satirized":86, "self-effacement":86, "moth-eaten":86, "well-practiced":86, "queen-sized":86, "raven-haired":86, "immortalize":86, "outperforms":86, "open-and-shut":86, "claptrap":86, "tin-roofed":86, "arabesques":86, "longdistance":86, "true-blue":86, "uncompromisingly":86, "invalidates":86, "joshing":86, "jesters":86, "performance-oriented":86, "slothful":86, "misheard":86, "buffoonery":86, "pea-size":86, "scuttles":86, "seamanship":86, "punky":86, "knock-down":86, "sternness":86, "stupefied":86, "dross":86, "whoring":86, "foursquare":86, "desertions":86, "on-ramp":86, "fifty-year":86, "saltiness":86, "squabbled":86, "top-grossing":86, "off-court":86, "late-blooming":86, "interest-bearing":86, "high-concept":86, "ultranationalist":86, "three-acre":86, "abounding":86, "government-issued":86, "mope":86, "longed-for":86, "hunky-dory":86, "whinny":86, "well-endowed":86, "bowl-shaped":86, "abstentions":86, "non-alcoholic":86, "fleecy":86, "rulebook":86, "three-shot":86, "semi-annual":86, "put-on":86, "russian-language":86, "fluid-filled":86, "heartaches":86, "aver":86, "territorially":86, "enquire":86, "capsizing":86, "sere":86, "twelve-year":86, "yes-or-no":86, "bright-yellow":86, "homebuilder":86, "delimited":86, "single-file":86, "midcourt":86, "two-year-olds":86, "price-fixing":86, "microbrews":86, "rolltop":86, "generalissimo":86, "growing-up":86, "one-pot":86, "dumbass":86, "premiership":86, "loveable":86, "levitated":86, "bullshitting":86, "low-resolution":86, "multi-millionaire":86, "obstetric":86, "marl":86, "doofus":86, "crackpots":86, "thanksgivings":86, "shagging":86, "transoceanic":86, "armor-piercing":86, "pulsate":86, "bursitis":86, "average-sized":86, "seventh-round":86, "pro-palestinian":86, "over-represented":86, "rental-car":86, "fishhook":86, "three-digit":86, "ranchland":86, "fridges":86, "wheedle":86, "adaption":86, "insomniacs":86, "ingress":86, "cauldrons":86, "reanalysis":86, "bar-code":86, "chevrons":86, "cause-effect":86, "uncorrelated":86, "magnetized":86, "flints":86, "night-light":86, "pronunciations":86, "cease-and-desist":86, "dismantlement":86, "smackdown":86, "kung-fu":86, "co-curator":86, "dowries":86, "unquiet":86, "groundskeepers":86, "motherfucking":86, "clefts":86, "fifth-seeded":86, "muffs":86, "soma":86, "runoffs":86, "ophthalmic":86, "expensing":86, "brontosaurus":86, "inter-agency":86, "low-earth":86, "hydrochloride":86, "balance-of-payments":86, "elopement":86, "prompter":86, "interdepartmental":86, "high-fidelity":86, "percussionists":86, "prehensile":86, "nonresidential":86, "railhead":86, "trident":86, "anthracite":86, "leaker":86, "gold-leaf":86, "sesquicentennial":86, "cooties":86, "play-offs":86, "carbons":86, "deep-fry":86, "air-pollution":86, "brakeman":86, "slewing":86, "unobservable":86, "petroglyph":86, "silencers":86, "succotash":86, "paper-lined":86, "fishable":86, "confederations":86, "poo":86, "roll-ups":86, "dearie":86, "bushman":86, "pressurization":86, "dragster":86, "jewish-american":86, "sign-off":86, "notating":86, "brewpub":86, "memorializes":86, "pretesting":86, "gingerroot":86, "forelimbs":86, "cannelloni":86, "zither":86, "arborist":86, "sitdown":86, "overpayments":86, "incongruence":86, "clerkship":86, "jetway":86, "adjunctive":86, "senescence":86, "landholding":86, "wiseguy":86, "compadre":86, "nonconforming":86, "sufism":86, "glassmaking":86, "cuttlefish":86, "bullfights":86, "calendrical":86, "thumper":86, "cathode-ray":86, "optometrists":86, "co-educational":86, "interquartile":86, "cytokine":86, "accommodationist":86, "listservs":86, "multi-state":86, "quarterdeck":86, "time-varying":86, "dippy":86, "temporomandibular":86, "synods":86, "sugaring":86, "no-salt-added":86, "proprioceptive":86, "cantinas":86, "erythematosus":86, "fief":86, "discriminative":86, "prostate-cancer":86, "quadriplegics":86, "intaglio":86, "hemodynamic":86, "non-destructive":86, "desegregated":86, "dilatation":86, "disease-related":86, "circumstellar":86, "leatherback":86, "astrolabe":86, "dojo":86, "hansom":86, "supernumerary":86, "non-teaching":86, "mononuclear":86, "capsular":86, "auricular":86, "conjugate":86, "fracking":86, "titers":86, "filiation":86, "immunofluorescence":86, "self-heating":86, "basilisk":86, "terracottas":86, "prostatitis":86, "polonium":86, "centenarian":86, "readymades":86, "xylitol":86, "sex-typed":86, "survivance":86, "trochaic":86, "ribose":86, "skycar":86, "tocotrienols":86, "nondistressed":86, "catalyzed":86, "creamier":86, "sybaritic":86, "hundred-year-old":86, "eleventh-hour":86, "brutalize":86, "barraged":86, "substantiates":86, "skulked":86, "chockablock":86, "harebrained":86, "prattling":86, "promiscuously":86, "peeves":86, "technology-driven":86, "gourmets":86, "pirouettes":86, "quaintly":86, "lower-end":86, "puttered":86, "scissored":86, "firmed":86, "book-lined":86, "record-tying":86, "spruced":86, "dislocating":86, "unstinting":86, "totter":86, "faddish":86, "on-and-off":86, "rheumy":86, "pie-in-the-sky":86, "distresses":86, "sloshes":86, "thirty-something":86, "three-tenths":86, "dustup":86, "die-hards":86, "ineffectively":86, "easy-to-understand":86, "a-listers":86, "befuddlement":86, "reprises":86, "schmaltzy":86, "squinty":86, "ratifies":86, "sandaled":86, "babyish":86, "berates":86, "bonafide":86, "heedlessly":86, "poker-faced":86, "defacing":86, "planeload":86, "grimness":86, "late-winter":86, "low-price":86, "better-quality":86, "refolded":86, "nonconfrontational":86, "water-borne":86, "artery-clogging":86, "plunks":86, "on-deck":86, "unescorted":86, "bone-white":86, "two-toned":86, "underperformed":86, "opportunistically":86, "unreasoning":86, "disrobe":86, "relents":86, "noodling":86, "persnickety":86, "gas-station":86, "mortgaging":86, "overshot":86, "sponged":86, "thick-cut":86, "endearments":86, "west-facing":86, "phoniness":86, "satirize":86, "hypnotizing":86, "marble-topped":86, "moister":86, "high-dollar":86, "backpedal":86, "xerox":86, "griefs":86, "center-field":86, "oppressions":86, "indie-rock":86, "milieus":86, "keyless":86, "eight-ounce":86, "perjured":86, "metabolisms":86, "grottoes":86, "lacuna":86, "pre-christmas":86, "oldtimers":86, "quitters":86, "multicolor":86, "foregrounded":86, "piccolo":86, "monarchist":86, "playmaking":86, "hummocks":86, "tingles":86, "courtesans":86, "half-past":86, "asymmetrically":86, "pretexts":86, "reaganism":86, "note-taking":86, "sweet-tart":86, "heat-resistant":86, "drunker":86, "crisped":86, "washcloths":86, "footrace":86, "russian-american":86, "diapering":86, "self-flagellation":86, "cha-cha":86, "vassals":86, "scoreboards":86, "fringing":86, "receptiveness":86, "comports":86, "ultrafast":86, "ex-girlfriends":86, "best-tasting":86, "bellybutton":86, "slow-growth":86, "yogurts":86, "reaganite":86, "image-processing":86, "fatiguing":86, "spitballs":86, "worsted":86, "menfolk":86, "convergences":86, "catbird":86, "polymorphous":86, "etiologic":86, "refiner":86, "twelve-inch":86, "screwup":86, "paper-based":86, "artesian":86, "touch-tone":86, "crusting":86, "unreformed":86, "legitimates":86, "hardtack":86, "invalidation":86, "heterogenous":86, "office-supply":86, "re-emerging":86, "folksinger":86, "dandies":86, "recommit":86, "sideman":86, "sex-abuse":86, "abolishment":86, "inquisitiveness":86, "scepticism":86, "songbooks":86, "buildups":86, "gladiatorial":86, "vice-presidents":86, "peerage":86, "warplane":86, "sub-groups":86, "flamethrower":86, "rudders":86, "uneconomic":86, "market-rate":86, "nonbeliever":86, "g-men":86, "incan":86, "pinion":86, "god-damned":86, "curia":86, "right-handers":86, "formulary":86, "tippy":86, "extenders":86, "g-forces":86, "quarantines":86, "problematics":86, "twelfth-grade":86, "hyperbaric":86, "non-use":86, "impresarios":86, "anti-aids":86, "hydride":86, "co-ceo":86, "pre-emption":86, "self-healing":86, "anti-saddam":86, "mouthparts":86, "fire-fighting":86, "aryans":86, "pathfinders":86, "conservativism":86, "urinary-tract":86, "silicates":86, "whole-class":86, "pawnshops":86, "colouring":86, "activity-based":86, "trig":86, "calumny":86, "barberry":86, "low-back":86, "intercorrelation":86, "deltoids":86, "liberationist":86, "fixations":86, "performance-related":86, "shackle":86, "decongestant":86, "interregional":86, "mid-major":86, "arms-for-hostages":86, "anglicanism":86, "mid-suburban":86, "polygamists":86, "crewmember":86, "subdisciplines":86, "lamina":86, "hospital-acquired":86, "fumigation":86, "pawnbroker":86, "non-fat":86, "psychoses":86, "atolls":86, "webcams":86, "bioluminescence":86, "standardised":86, "neo-conservative":86, "nonfictional":86, "intranets":86, "narc":86, "gender-role":86, "gay/lesbian":86, "dedicatory":86, "cheesecakes":86, "weightings":86, "mid-cap":86, "direct-to-consumer":86, "guinean":86, "coalitional":86, "gingivitis":86, "interconnects":86, "digoxin":86, "rookeries":86, "zonal":86, "intragroup":86, "biogeographical":86, "baud":86, "three-strikes":86, "personalist":86, "abbots":86, "inspectorate":86, "grayling":86, "woodcarver":86, "reenlistment":86, "midcap":86, "omani":86, "raloxifene":86, "megaliths":86, "concordat":86, "prosthetist":86, "conditionalities":86, "retropharyngeal":86, "fishfinder":86, "colonisation":86, "lithosphere":86, "biofilms":86, "self-instructional":86, "stepfamily":86, "seroconversion":86, "visuospatial":86, "zambians":86, "sulforaphane":86, "handpiece":86, "autoantibodies":86, "naltrexone":86, "isomers":86, "khat":86, "meerkat":86, "gleaners":86, "isomer":86, "window-shade":86, "boychik":86, "fed-up":86, "thirty-minute":86, "caricatured":86, "swilling":86, "corralling":86, "play-calling":86, "lose-lose":86, "sickens":86, "fleshing":86, "newish":86, "quaked":86, "chirpy":86, "sunbaked":86, "dogmatically":86, "earsplitting":86, "bullet-riddled":86, "gilt-edged":86, "instigators":86, "provocateurs":86, "congealing":86, "botch":86, "botching":86, "lightweights":86, "inventoried":86, "retrench":86, "off-the-rack":86, "spasmodically":86, "repetitively":86, "hocus-pocus":86, "well-grounded":86, "bloodcurdling":86, "young-looking":86, "punctilious":86, "blacked-out":86, "shames":86, "sledgehammers":86, "half-million-dollar":86, "hate-filled":86, "franchise-record":86, "cosponsor":86, "stuffer":86, "singe":86, "one-by-one":86, "soldierly":86, "ordinary-looking":86, "dismantles":86, "far-sighted":86, "splay":86, "rictus":86, "overemphasizing":86, "semi-official":86, "polymath":86, "sad-eyed":86, "witticism":86, "slow-cooked":86, "corrodes":86, "funnyman":86, "fast-acting":86, "generalizes":86, "unlikable":86, "flip-flopper":86, "down-filled":86, "information-sharing":86, "specialities":86, "sevenfold":86, "searchingly":86, "effrontery":86, "crossbones":86, "documentarian":86, "foretelling":86, "celadon":86, "personal-computer":86, "ninth-grader":86, "scrimmages":86, "dissociated":86, "high-low":86, "loonies":86, "non-ideological":86, "shut-off":86, "to-go":86, "booby-trapped":86, "mass-transit":86, "fourth-down":86, "woodwinds":86, "frisked":86, "unfrozen":86, "repurposed":86, "rosebuds":86, "obverse":86, "pro-soviet":86, "engrave":86, "castrate":86, "mojitos":86, "has-beens":86, "accretions":86, "stuffiness":86, "preppie":86, "ream":86, "takeaways":86, "irk":86, "seven-night":86, "indigents":86, "grannies":86, "soonest":86, "obviousness":86, "retrievable":86, "shape-up":86, "gauntlets":86, "seaborne":86, "substations":86, "candleholders":86, "low-altitude":86, "injury-prone":86, "joysticks":86, "knock-off":86, "rawboned":86, "faceoff":86, "montages":86, "uncertified":86, "flattop":86, "eyedropper":86, "beachgoers":86, "glamorize":86, "punch-drunk":86, "snatchers":86, "bleeping":86, "darning":86, "fertilizes":86, "lairs":86, "conjuncture":86, "showerheads":86, "nonconventional":86, "urological":86, "overbroad":86, "huskily":86, "personifying":86, "interrogative":86, "dual-purpose":86, "gardened":86, "asocial":86, "nonaggression":86, "wayfarer":86, "chronologies":86, "tinctures":86, "self-insured":86, "oil-price":86, "anti-feminist":86, "labile":86, "operationalizing":86, "hygienists":86, "mind-sets":86, "multidirectional":86, "gessoed":86, "ovum":86, "roughneck":86, "cherubim":86, "parallelogram":86, "line-of-sight":86, "verdigris":86, "collectivities":86, "playhouses":86, "weberian":86, "foot-pounds":86, "footlocker":86, "standard-setting":86, "lipoproteins":86, "echolocation":86, "primatologist":86, "pulpwood":86, "pawning":86, "gratifications":86, "enshrinement":86, "wild-caught":86, "animistic":86, "arsenide":86, "extramural":86, "sappers":86, "soloing":86, "open-space":86, "product-development":86, "suffragists":86, "podiatrists":86, "ombudsmen":86, "diptych":86, "zero-coupon":86, "ebonized":86, "seafoods":86, "macro-level":86, "jerkins":86, "crash-test":86, "burqas":86, "watersports":86, "jammers":86, "retrovirus":86, "ziggurat":86, "under-secretary":86, "epee":86, "monologic":86, "senator-elect":86, "black-tailed":86, "farthing":86, "spay":86, "newts":86, "rices":86, "lodger":86, "sub-scale":86, "macaques":86, "pirogue":86, "career-related":86, "sacrum":86, "downlink":86, "supercenters":86, "cardholder":86, "albatrosses":86, "cameroonian":86, "reamer":86, "dozer":86, "district-level":86, "reanimation":86, "koan":86, "mutinies":86, "proctors":86, "solar-electric":86, "three-button":86, "big-school":86, "pre-raphaelite":86, "otic":86, "interposition":86, "bowmen":86, "vampirism":86, "sebaceous":86, "forewoman":86, "autocorrelation":86, "american-arab":86, "fieldworker":86, "seawalls":86, "binaural":86, "caciques":86, "non-sport":86, "apostrophes":86, "unplanted":86, "metalinguistic":86, "audiograms":86, "collegium":86, "nonmetropolitan":86, "monotype":86, "co-researchers":86, "perineural":86, "zircon":86, "planetoid":86, "programas":86, "orthoses":86, "smokejumpers":86, "paraphilic":86, "teacher-coaches":86, "loose-limbed":86, "shuttering":86, "vigilantly":86, "savviest":86, "heart-pounding":86, "mystifies":86, "fritter":86, "highschool":86, "suffuses":86, "media-savvy":86, "loftily":86, "insufferably":86, "firmest":86, "retells":86, "much-ballyhooed":86, "unsubtle":86, "pitch-perfect":86, "frenetically":86, "slopped":86, "twinkly":86, "bided":86, "tiaras":86, "impugning":86, "maxing":86, "marshalling":86, "pined":86, "unreservedly":86, "surmounting":86, "slow-witted":86, "backslapping":86, "execrable":86, "oddballs":86, "overpopulated":86, "overpay":86, "help-wanted":86, "archbishops":86, "stows":86, "jeer":86, "lowest-priced":86, "articulately":86, "dream-like":86, "scenting":86, "despairingly":86, "co-sponsoring":86, "short-cropped":86, "blabbing":86, "dime-store":86, "oversexed":86, "chaotically":86, "sound-bite":86, "imprisons":86, "disengages":86, "bobbled":86, "banalities":86, "steadiest":86, "four-month-old":86, "radicalize":86, "underperform":86, "republished":86, "counter-intuitive":86, "hand-hewn":86, "slate-gray":86, "twenty-odd":86, "clearheaded":86, "stentorian":86, "overpaying":86, "preconception":86, "cofounders":86, "unburied":86, "airbase":86, "rebutted":86, "reimburses":86, "champing":86, "systematize":86, "giveth":86, "augurs":86, "spiciness":86, "gushy":86, "stinginess":86, "curating":86, "philanthropies":86, "trancelike":86, "dearer":86, "endorphin":86, "picnickers":86, "twerp":86, "sight-seeing":86, "magpies":86, "sorbets":86, "overdevelopment":86, "die-off":86, "spiderwebs":86, "hormonally":86, "retellings":86, "potentates":86, "combat-ready":86, "carry-out":86, "braise":86, "dices":86, "bouffant":86, "empathizing":86, "nondisclosure":86, "scram":86, "crow's-feet":86, "raptures":86, "prospectuses":86, "mange":86, "mottoes":86, "misplace":86, "italian-americans":86, "insecticidal":86, "public-affairs":86, "safe-sex":86, "half-brothers":86, "remarrying":86, "shamanistic":86, "music-making":86, "long-form":86, "designee":86, "icemaker":86, "pro-union":86, "situationally":86, "soft-boiled":86, "sprockets":86, "overfished":86, "premed":86, "cased":86, "unvoiced":86, "nutritive":86, "self-reinforcing":86, "year-to-date":86, "deeps":86, "all-boys":86, "dissidence":86, "taproot":86, "flounders":86, "preemies":86, "drought-resistant":86, "plug-and-play":86, "purees":86, "penthouses":86, "in-office":86, "hallucinogen":86, "vice-chair":86, "convalescing":86, "boner":86, "furred":86, "tony-winning":86, "recognising":86, "preponderant":86, "full-moon":86, "walk-off":86, "fencer":86, "tonalities":86, "comps":86, "tastemakers":86, "pterodactyl":86, "upperclassman":86, "calcium-fortified":86, "unstrapped":86, "shunting":86, "loblolly":86, "personal-finance":86, "anti-us":86, "resource-based":86, "whirlwinds":86, "tithes":86, "tigress":86, "maestros":86, "hummock":86, "dreamscape":86, "non-renewable":86, "upfield":86, "seatback":86, "semipermanent":86, "localizing":86, "theorization":86, "cold-hardy":86, "reappointment":86, "matriarchs":86, "mercantilism":86, "synth":86, "bioavailable":86, "colonic":86, "townhome":86, "crape":86, "headcount":86, "dolomite":86, "pregnancy-related":86, "rollbacks":86, "exercise-induced":86, "self-exam":86, "veldt":86, "subjectivism":86, "emersonian":86, "ink-jet":86, "enforceability":86, "croaker":86, "hermaphroditic":86, "concessional":86, "free-radical":86, "nonfamily":86, "microscale":86, "footbed":86, "lifeforms":86, "play-off":86, "resistor":86, "attractant":86, "intravascular":86, "anglo-americans":86, "single-leg":86, "hondurans":86, "inter-state":86, "half-marathon":86, "self-medication":86, "broilers":86, "location-based":86, "nought":86, "champagnes":86, "self-determining":86, "tuff":86, "labor-market":86, "stirrers":86, "drams":86, "quotients":86, "nanostructures":86, "pan-indian":86, "heteroglossia":86, "pre-registration":86, "omicron":86, "jefe":86, "psychogenic":86, "cellulitis":86, "expander":86, "circumscription":86, "musketeer":86, "knitter":86, "between-subject":86, "rent-stabilized":86, "conjoint":86, "vaquero":86, "naphtha":86, "doublets":86, "grampa":86, "marchioness":86, "genet":86, "tippers":86, "transgenerational":86, "comprehensibility":86, "bods":86, "prolapse":86, "aminoglycosides":86, "food-handling":86, "scimitars":86, "thrombus":86, "neuromas":86, "four-strokes":86, "haemorrhagic":86, "elvish":86, "physis":86, "posthospital":86, "abattoirs":86, "drongo":86, "most-emailed":86, "overlong":87, "look-see":87, "resuscitating":87, "doorbells":87, "indubitably":87, "excoriating":87, "entitling":87, "gravity-defying":87, "sumptuously":87, "smack-dab":87, "seldom-used":87, "cuddles":87, "misfired":87, "undermanned":87, "divined":87, "plumper":87, "chocolate-brown":87, "small-boned":87, "refueled":87, "miscreant":87, "lowest-cost":87, "show-stopping":87, "gorged":87, "cockamamie":87, "less-than-ideal":87, "government-supported":87, "warps":87, "dooming":87, "diamond-studded":87, "tete-a-tete":87, "throwbacks":87, "trodden":87, "adventuring":87, "outsell":87, "transfigured":87, "overdid":87, "unladylike":87, "mawkish":87, "exult":87, "near-empty":87, "bromides":87, "crinkle":87, "fur-trimmed":87, "rumps":87, "substantiating":87, "poseur":87, "french-style":87, "adjourns":87, "incisor":87, "cultish":87, "childishness":87, "pale-skinned":87, "five-piece":87, "snaring":87, "abodes":87, "up-and-comer":87, "virtuosos":87, "edgewise":87, "high-caliber":87, "wellsprings":87, "desensitize":87, "uncoiling":87, "deface":87, "half-billion":87, "congratulation":87, "bureaucratically":87, "well-nigh":87, "conflagrations":87, "time-sensitive":87, "salutations":87, "gloomier":87, "modulations":87, "record-high":87, "scarily":87, "love/hate":87, "good-for-nothing":87, "hand-sewn":87, "suss":87, "short-circuiting":87, "unlettered":87, "free-falling":87, "promenades":87, "barstools":87, "enjoins":87, "recouping":87, "poundage":87, "enmities":87, "tacklers":87, "semiprivate":87, "hard-to-get":87, "mispronounced":87, "coldblooded":87, "disaggregated":87, "revealingly":87, "one-car":87, "loincloths":87, "sachets":87, "inquiringly":87, "illumine":87, "slackness":87, "thinners":87, "zinging":87, "interlacing":87, "preselected":87, "re-enactments":87, "chromed":87, "brayed":87, "seven-page":87, "pseudonymous":87, "softballs":87, "six-legged":87, "nickel-plated":87, "community-service":87, "forelock":87, "cretin":87, "leis":87, "torqued":87, "nightclothes":87, "incarnated":87, "dilating":87, "destructively":87, "decider":87, "climaxing":87, "thousandths":87, "ditzy":87, "skittishness":87, "leftward":87, "banjos":87, "sunbeams":87, "scotches":87, "student-run":87, "life-styles":87, "bluebells":87, "unpardonable":87, "airhead":87, "agribusinesses":87, "birdwatchers":87, "government-mandated":87, "resubmit":87, "aright":87, "calcium-rich":87, "horseless":87, "violist":87, "toon":87, "multisport":87, "psychos":87, "nightsticks":87, "corruptions":87, "boneyard":87, "inhere":87, "nonmaterial":87, "higher-resolution":87, "decoratively":87, "synthetically":87, "thirty-first":87, "tenderize":87, "washerwoman":87, "debriefings":87, "aaah":87, "crosswalks":87, "teasers":87, "washstand":87, "post-vatican":87, "rebalancing":87, "biochemically":87, "carbonara":87, "summonses":87, "seceding":87, "ironworks":87, "filberts":87, "conquistadores":87, "hydrogen-powered":87, "pick-ups":87, "unprovable":87, "substructure":87, "unredeemed":87, "two-family":87, "university-level":87, "self-regulate":87, "commercial-free":87, "disciplinarians":87, "honeymoons":87, "eliminations":87, "time-space":87, "balancer":87, "signboard":87, "gay-bashing":87, "reseeding":87, "chevre":87, "mesozoic":87, "abatements":87, "accordions":87, "notated":87, "multiplicative":87, "halal":87, "short-haul":87, "toggles":87, "infotainment":87, "butterball":87, "hydrocortisone":87, "hassock":87, "superhighways":87, "teacher-directed":87, "exurbs":87, "on-road":87, "copperhead":87, "science-related":87, "pro-british":87, "phantasm":87, "ocotillo":87, "realising":87, "gayness":87, "fitters":87, "spiritualists":87, "pollens":87, "ex-offenders":87, "hullo":87, "softcover":87, "oscilloscope":87, "take-away":87, "impingement":87, "beaked":87, "purifiers":87, "old-lady":87, "segmenting":87, "pre-race":87, "waterfowling":87, "post-race":87, "counterfeits":87, "snowcat":87, "step-father":87, "gorp":87, "disrupters":87, "sealskin":87, "radiations":87, "slaver":87, "indium":87, "hyperlinks":87, "logocentric":87, "preload":87, "lutes":87, "denier":87, "vasoconstriction":87, "scleroderma":87, "slicers":87, "oryx":87, "decryption":87, "vaulter":87, "corsairs":87, "volatiles":87, "applet":87, "step-in":87, "decedent":87, "quadruplets":87, "chickweed":87, "garrote":87, "teacher-education":87, "attractors":87, "hypochondriacs":87, "telecommuters":87, "sigmoidoscopy":87, "blockhouse":87, "taxiway":87, "nonspecialist":87, "precontact":87, "aeroplanes":87, "fluvial":87, "brechtian":87, "musher":87, "factory-built":87, "parrotfish":87, "arians":87, "purgation":87, "adenoids":87, "chicken-breast":87, "zeppelins":87, "alga":87, "locos":87, "anthocyanins":87, "bosun":87, "indigenization":87, "plurals":87, "macula":87, "scribal":87, "intifadah":87, "succubus":87, "slow-cooker":87, "signorina":87, "on-chip":87, "geospatial":87, "combustors":87, "perceivers":87, "missionization":87, "afarensis":87, "dairying":87, "lower-limb":87, "decoherence":87, "spaceplane":87, "hadrons":87, "phosphatidylserine":87, "operand":87, "catastrophizing":87, "when/where":87, "midwater":87, "ligands":87, "theocrat":87, "short-cycle":87, "excitons":87, "presciently":87, "rosy-cheeked":87, "coalition-building":87, "expensive-looking":87, "audaciously":87, "too-short":87, "stubbing":87, "crew-cut":87, "luxuriate":87, "well-served":87, "brazenness":87, "unfasten":87, "lower-paying":87, "repackaging":87, "kowtowing":87, "half-formed":87, "six-bedroom":87, "lampooning":87, "gimpy":87, "upswept":87, "roust":87, "jet-setting":87, "prefigured":87, "drought-stricken":87, "forsook":87, "relentlessness":87, "jack-of-all-trades":87, "overreached":87, "reclaims":87, "outmaneuvered":87, "harmonizes":87, "hustings":87, "accessorized":87, "twothirds":87, "ruby-red":87, "cupful":87, "fratricidal":87, "listlessness":87, "bandaging":87, "research-and-development":87, "freedom-loving":87, "manfully":87, "nullifying":87, "clued":87, "kindnesses":87, "mown":87, "ill-mannered":87, "tussling":87, "off-beat":87, "nastily":87, "indiscernible":87, "trundle":87, "towheaded":87, "put-downs":87, "red-tiled":87, "impaling":87, "disclaim":87, "sweat-stained":87, "amorality":87, "incurably":87, "next-best":87, "consortiums":87, "implausibly":87, "girl-next-door":87, "rah-rah":87, "sophisticate":87, "right-thinking":87, "rigmarole":87, "dissembling":87, "swigs":87, "prayerfully":87, "peruses":87, "cost-effectively":87, "rightward":87, "political-action":87, "lashings":87, "chalking":87, "farting":87, "padlocked":87, "processional":87, "war-time":87, "snowbanks":87, "unclog":87, "outwitting":87, "plainness":87, "humored":87, "hightail":87, "anesthetize":87, "excusable":87, "ripoff":87, "wine-colored":87, "wrongdoings":87, "half-circle":87, "itches":87, "bases-loaded":87, "mendacity":87, "foamed":87, "bantered":87, "new-generation":87, "flaying":87, "dimpling":87, "cosmetically":87, "hypothermic":87, "blowups":87, "unmapped":87, "prisoner-of-war":87, "fledging":87, "high-country":87, "chatterbox":87, "doggedness":87, "throwaways":87, "weather-resistant":87, "schtick":87, "biter":87, "doffed":87, "rededicate":87, "appreciations":87, "tax-supported":87, "wadding":87, "lit-up":87, "brownouts":87, "foul-weather":87, "tugboats":87, "lumberjacks":87, "deader":87, "bushwhacking":87, "shish":87, "self-motivation":87, "made-for-television":87, "unmake":87, "ferryboat":87, "misfiring":87, "habituated":87, "sceptical":87, "alt-rock":87, "lifesavers":87, "undershorts":87, "cross-sections":87, "work-up":87, "car-free":87, "cabanas":87, "neurotoxin":87, "handmaidens":87, "pistol-whipped":87, "deadweight":87, "jackrabbits":87, "sugarless":87, "tautological":87, "overstaffed":87, "pecks":87, "shut-in":87, "cretins":87, "turbocharger":87, "repurposing":87, "locution":87, "placekicker":87, "wildernesses":87, "sex-change":87, "euthanize":87, "crocheting":87, "kingfish":87, "reseed":87, "motor-driven":87, "nihilist":87, "solid-waste":87, "exoskeletons":87, "blow-drying":87, "unleavened":87, "three-layer":87, "four-digit":87, "move-in":87, "problematizes":87, "reconquest":87, "double-headed":87, "triple-double":87, "deflections":87, "aphrodisiacs":87, "helpmate":87, "pigpen":87, "neoclassicism":87, "ex-lovers":87, "hook-and-loop":87, "wholesaling":87, "blooper":87, "baize":87, "crackhead":87, "faunal":87, "lumberyards":87, "communality":87, "depredation":87, "evacuee":87, "menses":87, "unglazed":87, "concertmaster":87, "thighbone":87, "notate":87, "civil-service":87, "praetorian":87, "mid-section":87, "recaptures":87, "cheerio":87, "change-up":87, "treadle":87, "apportioning":87, "multisite":87, "multispecies":87, "incomprehensibility":87, "straightedge":87, "duplications":87, "landowning":87, "tannery":87, "stonemasons":87, "lipless":87, "bookbag":87, "grifters":87, "stalactite":87, "short-form":87, "pinecone":87, "balusters":87, "anticlerical":87, "likert-scale":87, "nonmember":87, "satyrs":87, "geochemical":87, "israeli-syrian":87, "fast-twitch":87, "multiculturalist":87, "mnemonics":87, "geostationary":87, "uric":87, "anti-virus":87, "candida":87, "symbolization":87, "eyedrops":87, "galette":87, "abrahamic":87, "clansmen":87, "annealing":87, "benzodiazepines":87, "colloidal":87, "alumina":87, "lambing":87, "subfloor":87, "majordomo":87, "johnboat":87, "emus":87, "patrimonial":87, "attractants":87, "heathers":87, "rare-earth":87, "mycobacterium":87, "fish-eye":87, "dumbwaiter":87, "nodular":87, "puffball":87, "pica":87, "texturing":87, "lolly":87, "vanitas":87, "gyre":87, "ecotourists":87, "zines":87, "subroutines":87, "precolumbian":87, "saracens":87, "competences":87, "four-bar":87, "amphora":87, "doctoral-level":87, "fibrin":87, "batsman":87, "catchable":87, "aerodrome":87, "anti-spam":87, "socioemotional":87, "partygoer":87, "aggress":87, "non-physical":87, "aflatoxin":87, "almsgiving":87, "saracen":87, "denotative":87, "foetal":87, "disruptor":87, "skinfold":87, "punjabis":87, "aromatase":87, "superscalar":87, "mastoiditis":87, "osteotomy":87, "cenotes":87, "formant":87, "styloid":87, "eusocial":87, "munches":87, "nattering":87, "doe-eyed":87, "suffocates":87, "fuzzier":87, "circumvents":87, "boded":87, "cultlike":87, "tight-fisted":87, "vindicates":87, "diabolically":87, "beguiled":87, "ineffectually":87, "boffo":87, "jarringly":87, "peccadilloes":87, "jet-set":87, "displeasing":87, "effusively":87, "compactly":87, "pavlovian":87, "twelve-foot":87, "intimating":87, "modish":87, "impersonally":87, "cheapen":87, "subsisted":87, "herky-jerky":87, "keenest":87, "rusted-out":87, "humiliates":87, "timorous":87, "wide-spread":87, "impracticality":87, "girded":87, "expends":87, "overworking":87, "senselessness":87, "accustom":87, "revenue-generating":87, "trouper":87, "plumpness":87, "sweet-faced":87, "as-yet":87, "dust-covered":87, "overcooking":87, "pale-pink":87, "tricked-out":87, "seven-mile":87, "straightness":87, "hijinks":87, "cussed":87, "remorselessly":87, "puerile":87, "orients":87, "trespasses":87, "potbelly":87, "stick-on":87, "spilt":87, "incompetents":87, "faintness":87, "monosyllables":87, "post-taliban":87, "slighter":87, "swordplay":87, "special-occasion":87, "woo-hoo":87, "half-submerged":87, "incarcerating":87, "exclusiveness":87, "vim":87, "vilifying":87, "noooo":87, "co-chairmen":87, "computerize":87, "sunday-school":87, "bicoastal":87, "low-class":87, "new-fangled":87, "ecru":87, "english-style":87, "anti-nazi":87, "flayed":87, "debutantes":87, "domesticating":87, "podiums":87, "hellion":87, "bird-like":87, "straightest":87, "then-vice":87, "health-promoting":87, "pre-established":87, "unverifiable":87, "kerchiefs":87, "out-of-season":87, "moistening":87, "high-desert":87, "unscrews":87, "failsafe":87, "charmers":87, "miscarry":87, "western-oriented":87, "op-eds":87, "luddite":87, "junked":87, "bowtie":87, "bylines":87, "allegro":87, "tatty":87, "bombproof":87, "recused":87, "unravelling":87, "on-the-record":87, "fifth-place":87, "deliciousness":87, "woos":87, "gooseneck":87, "late-game":87, "imperishable":87, "contorts":87, "sidearms":87, "valedictorians":87, "naturalizing":87, "rearrested":87, "jaywalking":87, "imponderable":87, "ticker-tape":87, "maul":87, "brassieres":87, "goal-line":87, "externalize":87, "knock-out":87, "quick-drying":87, "stethoscopes":87, "two-liter":87, "duffer":87, "distributorship":87, "differentiations":87, "particularized":87, "cartwheel":87, "delphic":87, "verticality":87, "surface-to-surface":87, "barf":87, "humpbacked":87, "re-enactors":87, "non-americans":87, "navels":87, "teletype":87, "chorused":87, "mittened":87, "threesomes":87, "senates":87, "disempowerment":87, "proprieties":87, "mockup":87, "web-enabled":87, "belowdecks":87, "bioluminescent":87, "cavalryman":87, "glaciation":87, "intoxicants":87, "logarithm":87, "gingersnaps":87, "undelivered":87, "expropriate":87, "sightlines":87, "broadcloth":87, "obesity-related":87, "chewable":87, "wrongdoer":87, "mindfully":87, "non-confrontational":87, "boozer":87, "good-by":87, "jumbotron":87, "disassociation":87, "s-shaped":87, "espadrilles":87, "firetruck":87, "anti-military":87, "unfertilized":87, "one-hitter":87, "velcro":87, "panicles":87, "dermatologic":87, "microsurgery":87, "polymeric":87, "narratively":87, "secessionists":87, "mem":87, "cantons":87, "brandies":87, "chapeau":87, "coneflower":87, "grammars":87, "two-line":87, "recertification":87, "jigger":87, "unstandardized":87, "pneumocystis":87, "lantana":87, "defilement":87, "gouda":87, "micrographs":87, "postsurgical":87, "hydroelectricity":87, "animism":87, "malaysians":87, "mariachis":87, "beachcomber":87, "eleventh-century":87, "procrastinator":87, "non-professional":87, "multiagency":87, "hostiles":87, "cheque":87, "scape":87, "harasser":87, "manichean":87, "login":87, "de-baathification":87, "cassis":87, "priors":87, "spinal-cord":87, "cubists":87, "mendelian":87, "bosons":87, "perpetration":87, "first-stage":87, "umbilicus":87, "swatter":87, "foliar":87, "weight-related":87, "wop":87, "anklet":87, "all-district":87, "firepit":87, "whap":87, "erythromycin":87, "arachnids":87, "ossification":87, "single-member":87, "beholders":87, "craniofacial":87, "skank":87, "autarky":87, "directorates":87, "umps":87, "post-racial":87, "splinting":87, "oropharynx":87, "determiner":87, "clientelistic":87, "bullring":87, "aerodigestive":87, "chilli":87, "emic":87, "granulomas":87, "leukocyte":87, "hardboard":87, "zipper-lock":87, "capitated":87, "subregions":87, "subtotal":87, "overbilling":87, "copperplate":87, "z-scores":87, "belay":87, "uvula":87, "folklife":87, "transvestism":87, "physiognomic":87, "footbeds":87, "flowmeter":87, "spinnerbait":87, "performativity":87, "genotyping":87, "fluidized":87, "late-onset":87, "snakeheads":87, "angiotensin":87, "self-enforcing":87, "audio-video":87, "narratologists":87, "self-statements":87, "serotypes":87, "extraverts":87, "rhabdomyosarcoma":87, "salt-glazed":87, "helioseismology":87, "nanites":87, "moduli":87, "direct-care":87, "plasmacytoma":87, "postexperimental":87, "subgoal":87, "slimmed":87, "shoulder-high":87, "append":87, "much-vaunted":87, "high-rolling":87, "dethrone":87, "oft-quoted":87, "two-fisted":87, "elongating":87, "curdling":87, "blow-dried":87, "overachieving":87, "withers":87, "five-fold":87, "drabs":87, "detracting":87, "underdressed":87, "bashers":87, "dirt-cheap":87, "open-toed":87, "insightfully":87, "rear-guard":87, "money-grubbing":87, "dauntingly":87, "mistrusted":87, "orgiastic":87, "reconfirm":87, "scoped":87, "dulcet":87, "wearisome":87, "inarguably":87, "hightailed":87, "totalled":87, "heartbreakers":87, "blockaded":87, "backed-up":87, "one-lane":87, "deferentially":87, "amuck":87, "codger":87, "long-serving":87, "glad-handing":87, "appraisingly":87, "crescendos":87, "disillusioning":87, "drawls":87, "battle-tested":87, "incontestable":87, "early-bird":87, "mismanaging":87, "adjoined":87, "straw-colored":87, "backward-looking":87, "staved":87, "relegation":87, "telegraphs":87, "self-promoter":87, "highest-grossing":87, "divvying":87, "hews":87, "blood-curdling":87, "shut-down":87, "ruminated":87, "soap-opera":87, "forefingers":87, "unseated":87, "obviating":87, "unbalance":87, "on-duty":87, "winnowed":87, "weightlifter":87, "well-recognized":87, "scions":87, "inarguable":87, "mockingbirds":87, "unclench":87, "supplants":87, "nitty":87, "perfidious":87, "reunify":87, "stiffed":87, "quasi-governmental":87, "chastely":87, "reality-tv":87, "fickleness":87, "ecstasies":87, "spoofing":87, "haberdashery":87, "malcontent":87, "millinery":87, "animal-like":87, "earthling":87, "harvard-trained":87, "coterminous":87, "sombre":87, "co-religionists":87, "riffing":87, "government-approved":87, "trick-or-treaters":87, "four-term":87, "sleepy-eyed":87, "undercapitalized":87, "renomination":87, "bringer":87, "unwelcoming":87, "affronted":87, "check-ups":87, "satirizes":87, "air-tight":87, "promptness":87, "pro-gay":87, "shovelful":87, "reinstalling":87, "repack":87, "time-outs":87, "beaten-down":87, "agitprop":87, "pre-production":87, "self-identify":87, "per-person":87, "antioxidant-rich":87, "re-released":87, "noshing":87, "extra-firm":87, "stackable":87, "entrepreneurialism":87, "diagramming":87, "dug-in":87, "pan-roasted":87, "constrictions":87, "fizzing":87, "nonideological":87, "triangulating":87, "eight-year-olds":87, "outspend":87, "treaded":87, "pop-music":87, "pre-vatican":87, "cogency":87, "braggart":87, "storekeepers":87, "year-over-year":87, "roomie":87, "foots":87, "louvers":87, "misanthrope":87, "twenty-ninth":87, "tag-team":87, "unhampered":87, "preplanned":87, "stilling":87, "unmanaged":87, "broad-scale":87, "seemly":87, "district-based":87, "hedgehogs":87, "data-processing":87, "inmost":87, "coextensive":87, "frontiersmen":87, "geophysicists":87, "spritzer":87, "risk-benefit":87, "inattentiveness":87, "draughts":87, "scotch-irish":87, "sadists":87, "built-ins":87, "self-tanner":87, "inquirers":87, "bodiless":87, "hook-ups":87, "east-northeast":87, "walkabout":87, "lancing":87, "human-interest":87, "shearling":87, "three-hundred":87, "reddest":87, "reengage":87, "pro-labor":87, "out-and-back":87, "pustules":87, "motorcycling":87, "troubadours":87, "blood-borne":87, "wheelchair-accessible":87, "zookeepers":87, "womenfolk":87, "non-smoker":87, "majolica":87, "toxicologists":87, "vegetated":87, "redoubts":87, "proliferators":87, "human-powered":87, "mark-up":87, "remediating":87, "launchpad":87, "coachable":87, "rumour":87, "overtop":87, "interventional":87, "chickadee":87, "essentialized":87, "congresswomen":87, "returnee":87, "student-loan":87, "bootie":87, "couloirs":87, "dicker":87, "incentive-based":87, "boy-girl":87, "causeways":87, "pappardelle":87, "recuperative":87, "kindergarteners":87, "petrodollars":87, "investment-banking":87, "cowbells":87, "toothpastes":87, "vasectomies":87, "trekker":87, "polymorphic":87, "colons":87, "any-thing":87, "circumferential":87, "litanies":87, "cytotoxic":87, "hieratic":87, "sibs":87, "body-fat":87, "big-mountain":87, "y-axis":87, "counterman":87, "waste-water":87, "situation-specific":87, "unsubsidized":87, "hard-disk":87, "catholicity":87, "qatari":87, "actualities":87, "philologist":87, "flammability":87, "open-end":87, "crosscutting":87, "hackberry":87, "nonspecialists":87, "sinusoidal":87, "granita":87, "between-groups":87, "oboist":87, "neo-conservatives":87, "prefixes":87, "full-text":87, "rules-based":87, "thiamin":87, "lumpiness":87, "bowline":87, "redbud":87, "neuropsychiatric":87, "oil-exporting":87, "prenatally":87, "papoose":87, "assistantships":87, "social-cognitive":87, "college/university":87, "muzzleloaders":87, "hyperdrive":87, "ague":87, "large-print":87, "autosomal":87, "collinearity":87, "airlocks":87, "battler":87, "bunion":87, "barcode":87, "scrapbooking":87, "pro-environmental":87, "glassblower":87, "canaanite":87, "dimorphism":87, "compactors":87, "long-period":87, "carapaces":87, "piagetian":87, "hemophiliac":87, "burgundian":87, "dysphoric":87, "task-related":87, "subcomponents":87, "glycerine":87, "uncompressed":87, "supremo":87, "gam":87, "asbestos-related":87, "fino":87, "meiosis":87, "extrication":87, "cowbirds":87, "chromatin":87, "chadian":87, "safehouse":87, "counter-narcotics":87, "hydrocodone":87, "goldenseal":87, "plasmids":87, "flitter":87, "ultracold":87, "vaccinia":87, "impactors":87, "e-waste":87, "criollo":87, "dieback":87, "driftnet":87, "subareas":87, "organelle":87, "anoles":87, "lingcod":87, "eusociality":87, "forgoes":87, "derides":87, "scathingly":87, "thronging":87, "decorously":87, "gambits":87, "nightspots":87, "sandwiching":87, "repossess":87, "restates":87, "passer-by":87, "torn-up":87, "unconquerable":87, "two-block":87, "razzle-dazzle":87, "lavenders":87, "award-winner":87, "cobblestoned":87, "risible":87, "semi-retired":87, "dressed-up":87, "desensitized":87, "bashfully":87, "bigwig":87, "mangle":87, "mangling":87, "rough-edged":87, "cheapo":87, "modernistic":87, "three-decade":87, "obsesses":87, "obnoxiously":87, "hallucinate":87, "highflying":87, "disproving":87, "drench":87, "schoolyards":87, "sublimate":87, "dog-eat-dog":87, "currying":87, "foil-wrapped":87, "slaved":87, "brunches":87, "inebriation":87, "unlikelihood":87, "disquisition":87, "one-thousandth":87, "non-technical":87, "handsomeness":87, "one-dollar":87, "repatriating":87, "recapping":87, "plagiarizing":87, "horrifically":87, "inside-the-beltway":87, "retraces":87, "twenty-nine-year-old":87, "years-old":87, "cash-rich":87, "dishonestly":87, "enfold":87, "repercussion":87, "unappreciative":87, "lathering":87, "croaks":87, "intractability":87, "wafer-thin":87, "nuttiness":87, "in-town":87, "stop-gap":87, "saltines":87, "doyen":87, "twentyfive":87, "jawing":87, "falseness":87, "unequipped":87, "shallowest":87, "purposefulness":87, "bails":87, "incidentals":87, "needlelike":87, "verbose":87, "three-pound":87, "hetero":87, "spinsters":87, "diversities":87, "revile":87, "soundbites":87, "mustard-colored":87, "levelled":87, "free-thinking":87, "overgrazed":87, "obsessiveness":87, "travelogues":87, "squab":87, "wuss":87, "pseudoscientific":87, "gazebos":87, "pectorals":87, "faster-growing":87, "fire-resistant":87, "realizable":87, "two-wheel":87, "quacking":87, "marvelled":87, "notarized":87, "favourites":87, "half-step":87, "debauched":87, "kissy":87, "salt-free":87, "front-running":87, "make-out":87, "unfulfilling":87, "three-headed":87, "outriggers":87, "sagacious":87, "fetters":87, "hedonist":87, "suckled":87, "dinghies":87, "plowshares":87, "unloving":87, "used-up":87, "health-club":87, "co-chairwoman":87, "bricklayers":87, "deadhead":87, "crackheads":87, "repressions":87, "game-changer":87, "assimilates":87, "fie":87, "blinker":87, "outwork":87, "riderless":87, "ovulating":87, "liberality":87, "investment-grade":87, "cigaret":87, "run-scoring":87, "self-assessments":87, "bentwood":87, "three-letter":87, "flourless":87, "scrubland":87, "practised":87, "laundromats":87, "nut-brown":87, "time-management":87, "buzzy":87, "non-chinese":87, "oxidizing":87, "self-seeking":87, "lawyer-client":87, "wrinkle-free":87, "biplanes":87, "packable":87, "pouf":87, "acquirer":87, "grosgrain":87, "ground-penetrating":87, "suturing":87, "liniment":87, "frameless":87, "ultra-high":87, "calorie-burning":87, "blaxploitation":87, "lower-ranking":87, "tendonitis":87, "perms":87, "hemispherical":87, "apostates":87, "pedagogies":87, "mountain-bike":87, "dark-sky":87, "internationalizing":87, "human-like":87, "false-color":87, "acacias":87, "exchangeable":87, "preschool-age":87, "people-to-people":87, "polycystic":87, "unpaired":87, "consciousnesses":87, "dong":87, "high-carbohydrate":87, "skanky":87, "greeting-card":87, "slavonic":87, "materialization":87, "recreationists":87, "dollar-cost":87, "leftwing":87, "metonymically":87, "gameboy":87, "tomahawks":87, "scholastics":87, "bone-building":87, "cordons":87, "dragoon":87, "germinal":87, "privies":87, "holism":87, "medially":87, "lenticular":87, "contrail":87, "extensible":87, "crawlspace":87, "vaseline":87, "pre-katrina":87, "exegetes":87, "pro-slavery":87, "unreason":87, "long-chain":87, "caching":87, "communicants":87, "home-shopping":87, "filamentous":87, "aureole":87, "viscoelastic":87, "psychopathological":87, "supplications":87, "estate-planning":87, "post-tests":87, "electromagnets":87, "lodgers":87, "moonstone":87, "shade-tolerant":87, "grandad":87, "zairean":87, "lignin":87, "cannula":87, "post-partum":87, "taproom":87, "dorsum":87, "know-nothings":87, "thatcherism":87, "christian-muslim":87, "doxology":87, "present-tense":87, "main-sequence":87, "agaves":87, "americanist":87, "low-enriched":87, "giblet":87, "ocelot":87, "transects":87, "criminological":87, "miscue":87, "ingot":87, "antenatal":87, "confraternity":87, "post-invasion":87, "hammerheads":87, "prebiotic":87, "homozygous":87, "dialogism":87, "herbicide-resistant":87, "debt-for-nature":87, "gastrocnemius":87, "etic":87, "monozygotic":87, "altitudinal":87, "polypeptide":87, "netball":87, "congeners":87, "mixed-bloods":87, "myoelectric":87, "autoregressive":87, "peroneal":87, "xeric":87, "imagist":87, "epidermoid":87, "recoupment":87, "urbanicity":87, "dynast":87, "uniparental":87, "newspapermen":87, "treacherously":87, "chafes":87, "down-and-dirty":87, "cinching":87, "one-line":87, "hole-in-the-wall":87, "placated":87, "highquality":87, "best-of-seven":87, "uneconomical":87, "sunniest":87, "once-thriving":87, "three-plus":87, "craftily":87, "goggle-eyed":87, "black-rimmed":87, "spotlessly":87, "impoverishing":87, "seat-of-the-pants":87, "smarted":87, "chauffeur-driven":87, "capitulating":87, "outclassed":87, "reformulating":87, "jalopy":87, "cash-poor":87, "surfs":87, "double-duty":87, "blue-sky":87, "hit-and-miss":87, "unselfishness":87, "unshakeable":87, "sagacity":87, "insubordinate":87, "refrigerating":87, "amiability":87, "poky":87, "weaklings":87, "subjugating":87, "reinstalled":87, "drumbeats":87, "bad-mouthing":87, "reapplied":87, "idolizing":87, "reacquainted":87, "resolvable":87, "broad-minded":87, "flouted":87, "therefrom":87, "titillate":87, "unconcealed":87, "interrelate":87, "pratfalls":87, "musts":87, "divvied":87, "abided":87, "career-long":87, "jostles":87, "self-mocking":87, "yokes":87, "high-style":87, "lineaments":87, "chopped-up":87, "five-month-old":87, "beribboned":87, "passionless":87, "tidily":87, "shamefaced":87, "execution-style":87, "starves":87, "counterclaims":87, "megahit":87, "emote":87, "six-fold":87, "government-imposed":87, "bookkeepers":87, "contusion":87, "scrawls":87, "next-day":87, "big-spending":87, "amber-colored":87, "outplayed":87, "blunter":87, "imperiling":87, "unblinkingly":87, "round-the-world":87, "beachy":87, "supersensitive":87, "doughboy":87, "fountainhead":87, "pictorially":87, "laconically":87, "dockets":87, "corroborative":87, "habit-forming":87, "bandanas":87, "unmaking":87, "hotness":87, "bedtimes":87, "anti-business":87, "pre-arranged":87, "metier":87, "gangrenous":87, "headline-making":87, "disfigure":87, "clintonites":87, "shellacking":87, "demigods":87, "beatable":87, "saucepans":87, "amphitheaters":87, "domestic-violence":87, "pre-programmed":87, "ridgetops":87, "russian-made":87, "reimagined":87, "tuxes":87, "tress":87, "late-spring":87, "brinksmanship":87, "voting-age":87, "smote":87, "forewarning":87, "puckering":87, "inaugurations":87, "error-free":87, "red-skinned":87, "phantasmagoric":87, "huggers":87, "furloughed":87, "gurgles":87, "industry-standard":87, "divorcees":87, "stutters":87, "ballsy":87, "unifier":87, "geochemist":87, "folkie":87, "crooners":87, "tune-ups":87, "semi-pro":87, "stopovers":87, "sally":87, "shellshocked":87, "research-oriented":87, "mimosas":87, "blood-sucking":87, "worthies":87, "officeholder":87, "unreimbursed":87, "disaggregate":87, "silicon-based":87, "stepfathers":87, "same-age":87, "linkup":87, "neurodegenerative":87, "checkmate":87, "incommunicado":87, "lawbreaking":87, "seedpods":87, "in-ground":87, "antireligious":87, "home-buying":87, "downsizings":87, "hitmen":87, "pollinated":87, "cosy":87, "quenched":87, "trances":87, "nonhierarchical":87, "new-look":87, "explainer":87, "marabou":87, "multi-agency":87, "premixed":87, "deer-hunting":87, "homefront":87, "shiitakes":87, "cohabit":87, "conservatorship":87, "ski-area":87, "military-backed":87, "polkas":87, "roll-out":87, "decennial":87, "factory-made":87, "shiite-dominated":87, "work-at-home":87, "stanchion":87, "neocolonialism":87, "immolation":87, "apres-ski":87, "reticule":87, "bight":87, "four-team":87, "cryogenics":87, "imps":87, "exceptionality":87, "degree-granting":87, "dollar-denominated":87, "trillium":87, "rights-of-way":87, "defunding":87, "school-sponsored":87, "multilayer":87, "uranium-enrichment":87, "predator-prey":87, "x-axis":87, "anthills":87, "arthropod":87, "yuccas":87, "hydrologists":87, "objectivist":87, "sharers":87, "dramaturgy":87, "neurochemistry":87, "modulators":87, "boot-camp":87, "bluesmen":87, "six-letter":87, "nine-one-one":87, "solubility":87, "sandpiper":87, "two-in-one":87, "pro-israeli":87, "basaltic":87, "audiophiles":87, "landward":87, "shims":87, "conceptualism":87, "decentered":87, "cheroot":87, "translocation":87, "redshifted":87, "technicals":87, "earth-sized":87, "entombment":87, "quaternary":87, "organisational":87, "overcharges":87, "anti-asian":87, "letterpress":87, "separators":87, "glyph":87, "magnetite":87, "livres":87, "railcars":87, "drawdowns":87, "birthmarks":87, "erythropoietin":87, "mindedness":87, "f-stop":87, "microvascular":87, "headpieces":87, "cottonmouth":87, "asymptotically":87, "purism":87, "pedant":87, "betas":87, "allopathic":87, "transcriptase":87, "relationally":87, "amines":87, "subroutine":87, "salmonids":87, "indivisibility":87, "pre-retirement":87, "stelae":87, "hypnotherapy":87, "sledges":87, "rootstocks":87, "self-focused":87, "monetarist":87, "summerhouse":87, "guyanese":87, "antimicrobials":87, "medullary":87, "chert":87, "atria":87, "dirigibles":87, "biogenic":87, "phosphors":87, "terrapin":87, "interactionist":87, "paleozoic":87, "woodstoves":87, "arbitral":87, "sigmoid":87, "spelt":87, "nosocomial":87, "intraspecific":87, "commissariat":87, "houseman":87, "brushwood":87, "cautery":87, "no-stick":87, "swidden":87, "shogun":87, "chukar":87, "double-layer":87, "biliary":87, "innervation":87, "limnology":87, "digitizer":87, "antitoxin":87, "masers":87, "cisplatin":87, "mycobacterial":87, "tire-pressure":87, "piecewise":87, "coastguard":87, "oviposition":87, "use/abuse":87, "tin-glazed":87, "metamaterials":87, "boyars":87, "postlarvae":87, "bedeviling":88, "path-breaking":88, "grimmest":88, "too-long":88, "untrimmed":88, "in-demand":88, "adeptly":88, "castanets":88, "beery":88, "dotes":88, "one-trick":88, "flipside":88, "confab":88, "besiege":88, "all-pervasive":88, "dissects":88, "dissuading":88, "drowsing":88, "bald-faced":88, "pooh-poohed":88, "brashly":88, "stepping-stone":88, "disdains":88, "thornier":88, "distills":88, "schoolchild":88, "inconceivably":88, "guzzled":88, "sun-filled":88, "cannily":88, "nattily":88, "forcefulness":88, "slake":88, "roundish":88, "bunking":88, "mesmerize":88, "serious-minded":88, "ink-stained":88, "straightforwardness":88, "well-represented":88, "languorously":88, "noncontroversial":88, "bossed":88, "self-doubts":88, "reconvened":88, "ham-handed":88, "shortlived":88, "upends":88, "oxygen-rich":88, "unsettles":88, "taints":88, "fretfully":88, "dallying":88, "fusty":88, "ever-more":88, "realigned":88, "around-the-world":88, "bellied":88, "roly-poly":88, "exaggeratedly":88, "represses":88, "encapsulating":88, "declaiming":88, "jovially":88, "co-chaired":88, "hand-woven":88, "all-too-human":88, "gunslingers":88, "comradely":88, "rubes":88, "fashion-conscious":88, "streamlines":88, "pinker":88, "pedantry":88, "pretested":88, "leveler":88, "firebomb":88, "crunchers":88, "professorships":88, "smouldering":88, "cartoony":88, "misdeed":88, "germinated":88, "inquisitions":88, "autumns":88, "scaled-back":88, "disconsolately":88, "recondite":88, "unclenched":88, "back-seat":88, "hoedown":88, "recasts":88, "carryout":88, "flatulent":88, "interchangeability":88, "market-research":88, "beautifying":88, "then-wife":88, "combativeness":88, "impaneled":88, "rough-looking":88, "puckers":88, "peelings":88, "meowing":88, "fingerless":88, "twelve-thirty":88, "adults-only":88, "rearguard":88, "stonily":88, "eight-month-old":88, "imprecations":88, "encumbrance":88, "plotlines":88, "self-obsessed":88, "sombreros":88, "hand-rolled":88, "sniffle":88, "oversensitive":88, "anti-communists":88, "grubbing":88, "lisping":88, "unreserved":88, "striping":88, "shorted":88, "pees":88, "spume":88, "lintels":88, "architectonic":88, "megabucks":88, "home-state":88, "homestyle":88, "ostracize":88, "penitentiaries":88, "flattest":88, "one-foot":88, "softy":88, "pugilist":88, "illusionary":88, "profit-driven":88, "unverified":88, "unhooks":88, "people-oriented":88, "lily-white":88, "laugher":88, "absconded":88, "sealable":88, "perspicacious":88, "milk-white":88, "concussive":88, "gobbledygook":88, "deeded":88, "antiballistic":88, "maxi":88, "game-show":88, "sloganeering":88, "nonparticipation":88, "adulteress":88, "horticulturists":88, "munchkin":88, "downgrades":88, "facemask":88, "risk-management":88, "pro-environment":88, "hunchbacked":88, "submersion":88, "congressperson":88, "self-empowerment":88, "phoney":88, "tempests":88, "earflaps":88, "assaultive":88, "witchy":88, "luncheonette":88, "relaxant":88, "post-christian":88, "drop-outs":88, "hotheads":88, "spitball":88, "epitaphs":88, "disjunctions":88, "satirists":88, "isopropyl":88, "connoted":88, "irredentist":88, "medicinally":88, "putrefaction":88, "snoops":88, "long-tailed":88, "bullwhip":88, "high-demand":88, "mountings":88, "team-oriented":88, "pussies":88, "fusions":88, "desperado":88, "indwelling":88, "milkmaid":88, "whetstone":88, "balaclava":88, "right-of-center":88, "flashcards":88, "dockworkers":88, "macrame":88, "man-of-war":88, "revolving-door":88, "diskettes":88, "charnel":88, "pubis":88, "self-scrutiny":88, "playgroup":88, "pleat":88, "sexologist":88, "penetrator":88, "write-downs":88, "word-for-word":88, "intercorrelated":88, "pest-control":88, "gorgon":88, "zip-lock":88, "nonemergency":88, "duffels":88, "lactating":88, "liege":88, "franco-german":88, "stippled":88, "transgressor":88, "waistcoats":88, "technology-related":88, "all-metal":88, "pimento":88, "babushka":88, "kazoo":88, "unicycle":88, "liminality":88, "non-tariff":88, "pion":88, "coagulate":88, "cretan":88, "scampi":88, "sharkskin":88, "seatbacks":88, "preapproved":88, "anchorages":88, "watermarks":88, "insulin-dependent":88, "hormone-replacement":88, "knightly":88, "concierges":88, "crip":88, "intellectual-property":88, "under-served":88, "clucks":88, "yipped":88, "peewee":88, "moralities":88, "magnetometers":88, "personalistic":88, "parent/child":88, "transylvanian":88, "fajita":88, "bluebonnets":88, "race-related":88, "mojito":88, "stuffings":88, "five-letter":88, "teacher/student":88, "crabapple":88, "luxury-car":88, "hypo":88, "chronograph":88, "erring":88, "cross-species":88, "spaying":88, "calender":88, "campanile":88, "peritonitis":88, "centrism":88, "supply-siders":88, "social-political":88, "quranic":88, "angelfish":88, "cyborgs":88, "test-takers":88, "grands":88, "hydrodynamics":88, "tramway":88, "commodified":88, "planer":88, "contrastive":88, "warthog":88, "zoroastrian":88, "longbow":88, "parterre":88, "thru-hike":88, "cerebellar":88, "hatbox":88, "cockfighting":88, "dogfish":88, "bluestem":88, "scow":88, "coevolution":88, "black-hole":88, "regularization":88, "annulus":88, "neurovascular":88, "teach-in":88, "high-throughput":88, "sunlike":88, "pat-down":88, "fibroid":88, "prodemocracy":88, "syncope":88, "sexualization":88, "gatekeeping":88, "horas":88, "hyssop":88, "prerelease":88, "all-cause":88, "pions":88, "fusarium":88, "addressees":88, "arsons":88, "anthropocentrism":88, "acuities":88, "metanarrative":88, "bolivarian":88, "wadi":88, "aboriginals":88, "uninstall":88, "nonathletic":88, "spacemen":88, "singletons":88, "baitcasting":88, "scintillation":88, "honker":88, "amerasian":88, "aerogel":88, "etruscans":88, "multidrug-resistant":88, "negritude":88, "bamboos":88, "perimenopausal":88, "syllogisms":88, "forager":88, "parent/teacher":88, "community-acquired":88, "logical-mathematical":88, "spammer":88, "motorman":88, "past-life":88, "dyspnoea":88, "self-administration":88, "antivenin":88, "lowrider":88, "polysaccharide":88, "boiling-water":88, "cavers":88, "worksites":88, "ethnohistory":88, "franchisor":88, "waterlilies":88, "syllabary":88, "anthocyanin":88, "scintigraphy":88, "protostar":88, "oocytes":88, "metacarpal":88, "mycotoxins":88, "self-other":88, "desorption":88, "cholecystectomy":88, "pre-student":88, "high-incidence":88, "manscape":88, "gyroplane":88, "diadromous":88, "tarsiers":88, "endoskeleton":88, "hot-selling":88, "lovey-dovey":88, "slackening":88, "gussied":88, "conked":88, "olympic-size":88, "toddle":88, "divulges":88, "redeploying":88, "dolefully":88, "festered":88, "banishes":88, "once-proud":88, "wangled":88, "exorbitantly":88, "oversimplifies":88, "deceives":88, "twiggy":88, "twilit":88, "toddled":88, "naughtiness":88, "underfed":88, "interceded":88, "unnerves":88, "well-lighted":88, "ignominiously":88, "resurfaces":88, "murderously":88, "unsanctioned":88, "thirty-eight-year-old":88, "faint-hearted":88, "obviates":88, "dappling":88, "impactful":88, "late-morning":88, "mumbo-jumbo":88, "scabrous":88, "reenacted":88, "agonizes":88, "heart-warming":88, "antediluvian":88, "feuded":88, "lacerating":88, "half-starved":88, "idolizes":88, "thespian":88, "mislaid":88, "toneless":88, "monocultural":88, "how-tos":88, "alights":88, "eddying":88, "distrusting":88, "colluded":88, "chickened":88, "sweetens":88, "dead-ended":88, "quadrupling":88, "tortoise-shell":88, "nosh":88, "prefigures":88, "predominating":88, "long-anticipated":88, "legerdemain":88, "meditatively":88, "verity":88, "brick-red":88, "schlep":88, "concocts":88, "belittles":88, "rewinds":88, "swindling":88, "frisking":88, "throw-away":88, "doodled":88, "well-shaped":88, "forty-year":88, "hangnail":88, "miscalculate":88, "sonograms":88, "sexpot":88, "rearm":88, "outselling":88, "stroganoff":88, "leonine":88, "one-pound":88, "kidnaps":88, "pesticide-free":88, "salves":88, "unforgettably":88, "two-timing":88, "coring":88, "collarless":88, "heckle":88, "inflames":88, "druggie":88, "freeze-frame":88, "character-driven":88, "incinerating":88, "dime-size":88, "grouses":88, "accident-prone":88, "anti-hero":88, "vacationer":88, "dollar-for-dollar":88, "not-guilty":88, "nine-story":88, "dickering":88, "transgressors":88, "bachelorhood":88, "declaimed":88, "proprietorship":88, "firebombed":88, "plaint":88, "dressier":88, "reddens":88, "rededication":88, "downshift":88, "short-wave":88, "liberal-minded":88, "matchbooks":88, "reauthorized":88, "vulgarities":88, "unblocked":88, "y-shaped":88, "busywork":88, "softie":88, "wools":88, "career-oriented":88, "servility":88, "earthward":88, "landmasses":88, "whump":88, "serums":88, "anti-christ":88, "libertine":88, "damped":88, "pretentiousness":88, "spangles":88, "company-sponsored":88, "truncheons":88, "finales":88, "mood-altering":88, "drawing-room":88, "colonnades":88, "emptily":88, "strip-searched":88, "ten-gallon":88, "enfolds":88, "straggler":88, "four-square":88, "bodegas":88, "electorally":88, "cantered":88, "disrobing":88, "suntanned":88, "medium-security":88, "harmonically":88, "plods":88, "ateliers":88, "evidential":88, "tablespoonfuls":88, "half-game":88, "logjams":88, "left-side":88, "eye-hand":88, "lightheadedness":88, "potlucks":88, "continent-wide":88, "bole":88, "yard-long":88, "pinking":88, "freethinkers":88, "unelectable":88, "anti-regime":88, "acclimation":88, "collusive":88, "secondary-school":88, "charcuterie":88, "honeys":88, "thematized":88, "job-seekers":88, "masturbatory":88, "outcompete":88, "wetback":88, "gentled":88, "suggestible":88, "concavity":88, "ex-slaves":88, "six-yard":88, "razorback":88, "import-substitution":88, "neckerchief":88, "positivistic":88, "overharvesting":88, "biped":88, "pro-development":88, "showoff":88, "microwaveable":88, "wreckers":88, "anesthetist":88, "protozoan":88, "male-to-female":88, "rucksacks":88, "bidet":88, "poser":88, "markdowns":88, "elbowroom":88, "full-timers":88, "flat-rate":88, "state-imposed":88, "gastritis":88, "oregonians":88, "triplex":88, "glottal":88, "handwashing":88, "ne'er":88, "subject-specific":88, "gearboxes":88, "country-specific":88, "sparky":88, "contrast-enhanced":88, "ironworker":88, "preclinical":88, "metalworkers":88, "aliveness":88, "stygian":88, "college-prep":88, "acupuncturists":88, "macro-economic":88, "matriarchy":88, "supply-chain":88, "purser":88, "klaxon":88, "aetiology":88, "tureens":88, "jamesian":88, "borax":88, "exemplum":88, "state-chartered":88, "state-centered":88, "codices":88, "stele":88, "acclimatization":88, "excitability":88, "ibex":88, "bloodflow":88, "underactive":88, "laver":88, "anti-retroviral":88, "bobwhite":88, "feverfew":88, "nonferrous":88, "mobile-home":88, "genoese":88, "non-financial":88, "body-mass":88, "egocentrism":88, "necropsy":88, "doorstops":88, "cheesemakers":88, "neonates":88, "iliac":88, "country-house":88, "half-lives":88, "globule":88, "gadolinium":88, "manufactory":88, "crosshatch":88, "parachutist":88, "anthers":88, "augustan":88, "altazimuth":88, "plebe":88, "interglacial":88, "off-reservation":88, "applets":88, "chillers":88, "ethnic-based":88, "laurentian":88, "speedup":88, "achievement-related":88, "fat-skimmed":88, "hoboes":88, "barrier-free":88, "astrometry":88, "crashworthiness":88, "anti-federalists":88, "one-china":88, "whiskies":88, "frisket":88, "combustor":88, "scapular":88, "eukaryotic":88, "yellowcake":88, "short-answer":88, "millennials":88, "tympanum":88, "titer":88, "school-community":88, "encaustic":88, "linnaean":88, "duple":88, "diplomate":88, "nonvolatile":88, "aspected":88, "lobstering":88, "leukaemia":88, "testbed":88, "autoimmunity":88, "divinatory":88, "transtheoretical":88, "superfluid":88, "maundy":88, "cottagers":88, "peritonsillar":88, "clavichord":88, "world-system":88, "radiosurgery":88, "guideways":88, "fixator":88, "snuffles":88, "demoiselles":88, "semiperipheral":88, "gunny":88, "cowpox":88, "baymen":88, "recuperated":88, "sun-splashed":88, "comedown":88, "peddles":88, "sepia-toned":88, "semiretired":88, "bone-deep":88, "problem-free":88, "armloads":88, "armfuls":88, "black-andwhite":88, "trooping":88, "crotches":88, "five-figure":88, "all-expenses-paid":88, "goateed":88, "danceable":88, "reacquaint":88, "explicating":88, "bleeding-heart":88, "chest-deep":88, "lamentably":88, "shoehorn":88, "apprise":88, "replenishes":88, "contemporaneously":88, "slandering":88, "less-experienced":88, "reemerging":88, "wearying":88, "reorienting":88, "non-denominational":88, "atomized":88, "reconfirmed":88, "off-hand":88, "rough-cut":88, "intermixed":88, "reshuffle":88, "sentimentally":88, "low-heeled":88, "menage":88, "redoubling":88, "unjustifiably":88, "translucence":88, "uncomplaining":88, "thatched-roof":88, "plugged-in":88, "squirreled":88, "stupider":88, "computer-literate":88, "more-efficient":88, "cornball":88, "tenth-grade":88, "tie-dye":88, "underfinanced":88, "eviscerated":88, "panders":88, "huffs":88, "crinkles":88, "foreshortened":88, "impelling":88, "permed":88, "credit-rating":88, "demarcating":88, "iron-clad":88, "idiotically":88, "half-blind":88, "then-husband":88, "elixirs":88, "countrified":88, "healthily":88, "parlous":88, "chinese-style":88, "ailed":88, "highwaymen":88, "indispensability":88, "fetes":88, "stoop-shouldered":88, "homecomings":88, "daiquiris":88, "earth-orbiting":88, "forebear":88, "interpose":88, "humanizes":88, "citadels":88, "pharmacologist":88, "scudding":88, "traipsed":88, "madding":88, "egotist":88, "disseminates":88, "deafened":88, "duffers":88, "boo-boo":88, "motorcars":88, "empty-nesters":88, "rearrangements":88, "overestimates":88, "true/false":88, "error-prone":88, "reintegrating":88, "lapdog":88, "pro-bush":88, "close-range":88, "company-wide":88, "semi-conscious":88, "subcontracts":88, "wastrel":88, "tailpipes":88, "snake-like":88, "hayseed":88, "upsides":88, "glamorizing":88, "out-patient":88, "quarried":88, "eightieth":88, "proscribe":88, "garlanded":88, "nooky":88, "cost/benefit":88, "preys":88, "pot-smoking":88, "reconceptualizing":88, "italicized":88, "self-defined":88, "subhead":88, "highrise":88, "church-sponsored":88, "mongrels":88, "non-discriminatory":88, "preliminarily":88, "gingery":88, "undeliverable":88, "unhealthful":88, "hipbone":88, "leave-taking":88, "semester-long":88, "jacobean":88, "generalship":88, "occupationally":88, "deceiver":88, "unstrung":88, "cremate":88, "pigtail":88, "protectionists":88, "light-speed":88, "multiple-use":88, "chinese-language":88, "wine-tasting":88, "presidium":88, "scamp":88, "rear-wheel-drive":88, "eight-person":88, "slitted":88, "fixers":88, "centerfield":88, "castrating":88, "piecrusts":88, "greatest-hits":88, "hybridizing":88, "region-wide":88, "muumuu":88, "fragrance-free":88, "three-tier":88, "die-offs":88, "spoonbills":88, "pardner":88, "unseeded":88, "force-feed":88, "double-hung":88, "lunker":88, "seaway":88, "dressing-room":88, "counteroffer":88, "unfenced":88, "impermissibly":88, "counter-revolutionary":88, "pain-relieving":88, "hydrotherapy":88, "equilateral":88, "nonverbally":88, "militarist":88, "leftism":88, "peppermints":88, "helpline":88, "viticulture":88, "intraparty":88, "burden-sharing":88, "tanager":88, "desalinization":88, "buy-back":88, "pro-military":88, "turbot":88, "autoworker":88, "dolor":88, "blowdown":88, "nine-millimeter":88, "scribbler":88, "two-digit":88, "containerized":88, "ecclesia":88, "groins":88, "inheritable":88, "antiperspirant":88, "nonorganic":88, "refinished":88, "lounger":88, "oxidase":88, "variable-speed":88, "kiting":88, "gripper":88, "symbology":88, "two-speed":88, "social-democratic":88, "zero-emission":88, "hoarder":88, "stevedores":88, "teahouses":88, "wheatgrass":88, "buy-and-hold":88, "silkworm":88, "ayes":88, "neurodevelopmental":88, "discourtesy":88, "neocon":88, "bas-reliefs":88, "taxol":88, "phytonutrients":88, "diffusers":88, "medico":88, "chinchilla":88, "riskiness":88, "papermaking":88, "corncobs":88, "spellers":88, "dehydrogenase":88, "hydrocephalus":88, "specie":88, "neurophysiological":88, "carwash":88, "arab-islamic":88, "rain-fed":88, "crucibles":88, "canadian-style":88, "internet-only":88, "trichloroethylene":88, "drug-taking":88, "epigrams":88, "crosscultural":88, "covariances":88, "influencers":88, "beamer":88, "gaullist":88, "ulna":88, "caudal":88, "flame-retardant":88, "sex-specific":88, "aerators":88, "twelve-step":88, "pulldown":88, "consanguinity":88, "transcutaneous":88, "pro-syrian":88, "killdeer":88, "holography":88, "all-ages":88, "cowries":88, "aerator":88, "sex-education":88, "self-fashioning":88, "celt":88, "dominator":88, "catalans":88, "objectivism":88, "pectoralis":88, "bacteriology":88, "sheepherder":88, "clickers":88, "plasm":88, "laterals":88, "geode":88, "benchtop":88, "optimizations":88, "sepals":88, "burundian":88, "gambian":88, "microbiologic":88, "stutterers":88, "potencies":88, "countertenor":88, "syllogistic":88, "vermicomposting":88, "lavas":88, "swingarm":88, "microfluidic":88, "drug-exposed":88, "cookstoves":88, "testis":88, "normal-hearing":88, "distractors":88, "free-tailed":88, "disruptors":88, "linewidth":88, "dual-core":88, "mealybugs":88, "subluxation":88, "solarization":88, "imagists":88, "dehiscence":88, "audiate":88, "simony":88, "high-probability":88, "chlorite":88, "subarea":88, "hibernators":88, "tutee":88, "tetrapods":88, "grapheme":88, "perception-based":88, "interjecting":88, "swaggers":88, "rebuffs":88, "whiz-bang":88, "by-the-book":88, "opining":88, "numbingly":88, "buffet-style":88, "gluttonous":88, "father-and-son":88, "bridled":88, "uncurled":88, "shakier":88, "unmarred":88, "unlatch":88, "translatable":88, "hewed":88, "self-promoting":88, "piteously":88, "pitch-dark":88, "toddlerhood":88, "unembarrassed":88, "piped-in":88, "too-big":88, "tomato-based":88, "aimlessness":88, "backgrounder":88, "government-issue":88, "well-thumbed":88, "miscast":88, "bright-green":88, "pilfered":88, "multitasker":88, "capriciousness":88, "bated":88, "contriving":88, "ten-inch":88, "sideswiped":88, "bunked":88, "aboveboard":88, "unsexy":88, "outsmarted":88, "thirty-foot":88, "waifs":88, "aw-shucks":88, "half-expected":88, "airbrushed":88, "nicking":88, "entreated":88, "palming":88, "romps":88, "balustrades":88, "conciliator":88, "decapitating":88, "slithery":88, "undependable":88, "allotting":88, "much-improved":88, "gender-bending":88, "freshened":88, "low-down":88, "portended":88, "sensationally":88, "rapturously":88, "telegraphing":88, "hashed":88, "magnanimously":88, "overspend":88, "beer-drinking":88, "tiffs":88, "crueler":88, "bloodred":88, "scrimping":88, "astounds":88, "password-protected":88, "construes":88, "perturb":88, "one-track":88, "yoked":88, "french-language":88, "staticky":88, "monotonously":88, "block-long":88, "delectation":88, "phosphorescence":88, "longest-lasting":88, "straggly":88, "yearround":88, "retaken":88, "gray-black":88, "remunerative":88, "summered":88, "drawling":88, "dislocate":88, "cross-checking":88, "mass-media":88, "off-the-books":88, "unambitious":88, "lifethreatening":88, "availing":88, "fording":88, "publically":88, "demarcations":88, "yellow-white":88, "woodburning":88, "well-structured":88, "redecorated":88, "inoculating":88, "busybodies":88, "petard":88, "haughtiness":88, "bedpans":88, "sea-green":88, "dark-red":88, "powdering":88, "in-car":88, "no-lose":88, "harrumphed":88, "defrosted":88, "all-over":88, "co-operate":88, "broken-hearted":88, "dissed":88, "five-and-a-half":88, "hot-weather":88, "pinewood":88, "scribblings":88, "tap-dancing":88, "antiapartheid":88, "reproof":88, "decolletage":88, "grammy-nominated":88, "single-serving":88, "satchels":88, "slip-up":88, "eight-story":88, "memoirist":88, "pro-communist":88, "toucans":88, "slewed":88, "straggles":88, "point-and-click":88, "seventieth":88, "untranslated":88, "life-enhancing":88, "hot-shot":88, "multi-day":88, "pigsty":88, "teetotaler":88, "for-sale":88, "requiting":88, "congresspeople":88, "less-educated":88, "recalibration":88, "underthings":88, "seafront":88, "acquisitiveness":88, "half-timbered":88, "encumbrances":88, "worshipper":88, "wormlike":88, "full-screen":88, "licentiousness":88, "pushcarts":88, "catsup":88, "stogie":88, "housewarming":88, "newel":88, "run-on":88, "mounding":88, "pedagogue":88, "cockney":88, "odd-numbered":88, "virology":88, "refinish":88, "jodhpurs":88, "strung-out":88, "rottweilers":88, "speakeasies":88, "close-set":88, "caddying":88, "promptings":88, "oligopoly":88, "hairdressing":88, "irremediable":88, "watercolorists":88, "gun-related":88, "second-century":88, "morticians":88, "demobilize":88, "infectious-disease":88, "cline":88, "ex-partner":88, "fluting":88, "multiuse":88, "power-plant":88, "deliverable":88, "grayed":88, "elision":88, "communions":88, "marrieds":88, "won-lost":88, "reengineer":88, "coreligionists":88, "go-betweens":88, "deactivation":88, "non-japanese":88, "prefacing":88, "sorters":88, "bedsores":88, "arm's-length":88, "swizzle":88, "tunable":88, "edelweiss":88, "eyeholes":88, "vaginally":88, "presentiment":88, "herpetologist":88, "photo-realistic":88, "feeler":88, "banshees":88, "re-regulation":88, "highchair":88, "cotillion":88, "fatwas":88, "anti-globalization":88, "single-item":88, "godhead":88, "festoons":88, "exterminators":88, "anti-viral":88, "frame-up":88, "conjugated":88, "galleons":88, "yeomen":88, "cyberattacks":88, "deviancy":88, "icebreakers":88, "doughs":88, "pro-social":88, "supergiant":88, "servicewomen":88, "nonuse":88, "co-occur":88, "trans-alaska":88, "motor-vehicle":88, "antipersonnel":88, "medical-school":88, "saltpeter":88, "manholes":88, "job-search":88, "sit-com":88, "postpaid":88, "transhistorical":88, "childlessness":88, "midcourse":88, "tranche":88, "goddamit":88, "human-to-human":88, "oooo":88, "portages":88, "micro-organisms":88, "ecologic":88, "presentational":88, "parents/guardians":88, "unstressed":88, "ontogeny":88, "caul":88, "icehouse":88, "staleness":88, "macrocosm":88, "accordionist":88, "theory-based":88, "thermoelectric":88, "five-shot":88, "human-resource":88, "timeslot":88, "weaponization":88, "true-crime":88, "reticular":88, "alternative-fuel":88, "cleavers":88, "particularist":88, "biotechnological":88, "platonism":88, "chiggers":88, "griffins":88, "red-cockaded":88, "jewish-christian":88, "avocational":88, "rock'n'roll":88, "discussants":88, "unconfined":88, "e-learning":88, "deformable":88, "inductions":88, "modernizers":88, "choirmaster":88, "antipsychotics":88, "non-us":88, "gits":88, "orderings":88, "fish-oil":88, "sketchpad":88, "faeries":88, "penetrative":88, "phenotypically":88, "no-kill":88, "angulation":88, "audiobook":88, "catchments":88, "daemon":88, "e-tailers":88, "brassicas":88, "anti-indian":88, "seines":88, "ossicles":88, "scammer":88, "phospholipids":88, "silesian":88, "thomism":88, "mandrel":88, "nutraceutical":88, "murrelet":88, "utility-scale":88, "unaudited":88, "narwhal":88, "adenoidectomy":88, "chapatis":88, "psychopathy":88, "nucleosynthesis":88, "short-course":88, "notetaking":88, "cryptosporidiosis":88, "kart":88, "trebuchet":88, "tribology":88, "earworm":88, "angiosperm":88, "baptistery":88, "seiners":88, "scutum":88, "isolator":88, "geniculate":88, "heelpiece":88, "confessionalism":88, "beta-glucan":88, "allograft":88, "hypocalcemia":88, "foodborne-disease":88, "yucatecan":88, "extramedullary":88, "web-enhanced":88, "prehension":88, "conventionalization":88, "nasality":88, "hyrax":88, "postdicted":88, "healthy-looking":88, "hones":88, "empathized":88, "puddled":88, "subpoenaing":88, "discomfiting":88, "haloed":88, "eulogized":88, "toeing":88, "gumming":88, "imbibed":88, "rechecked":88, "undefinable":88, "ever-rising":88, "mud-caked":88, "jerry-rigged":88, "belches":88, "second-ranking":88, "abates":88, "visages":88, "somersaulted":88, "cannibalized":88, "bargain-priced":88, "unshed":88, "still-warm":88, "bookend":88, "jiggly":88, "impishly":88, "fortress-like":88, "wetted":88, "sugar-coated":88, "heeds":88, "chillier":88, "wastefulness":88, "shrewdest":88, "plainspoken":88, "re-enacting":88, "oscillated":88, "gooseflesh":88, "delineations":88, "moonlights":88, "different-colored":88, "dominantly":88, "after-the-fact":88, "wood-framed":88, "mass-marketed":88, "piggybacking":88, "aflutter":88, "swigged":88, "hushing":88, "gunfights":88, "pealing":88, "imprecisely":88, "team-record":88, "grossest":88, "adman":88, "lacunae":88, "low-margin":88, "disavows":88, "demote":88, "shape-shifting":88, "snowplows":88, "red-and-blue":88, "four-sided":88, "near-zero":88, "eight-track":88, "gumshoe":88, "dissemble":88, "incantatory":88, "trounce":88, "accredits":88, "bagful":88, "careering":88, "meanly":88, "ambivalently":88, "italian-made":88, "mannerly":88, "simpatico":88, "outscore":88, "reattached":88, "neo-gothic":88, "emasculating":88, "figments":88, "saleable":88, "radioing":88, "name-dropping":88, "pseudo-scientific":88, "indoctrinating":88, "goody-goody":88, "defamed":88, "myriads":88, "sous-chef":88, "reenergize":88, "irredeemable":88, "lameness":88, "tussles":88, "summering":88, "golfs":88, "uninformative":88, "inputting":88, "lothario":88, "prep-school":88, "busies":88, "studly":88, "secondaries":88, "uncoupled":88, "bludgeoning":88, "reigniting":88, "unquantifiable":88, "constipated":88, "occluded":88, "reabsorbed":88, "ex-military":88, "handcuffing":88, "team-leading":88, "arrangers":88, "meet-and-greet":88, "crudity":88, "tragicomedy":88, "bare-breasted":88, "professional-quality":88, "hospitalize":88, "small-car":88, "sidewise":88, "irresolution":88, "genuflect":88, "white-bread":88, "empathetically":88, "tethering":88, "text-messaging":88, "lofting":88, "doctrinally":88, "eruptive":88, "ten-year-olds":88, "polemicist":88, "rearming":88, "joust":88, "mean-looking":88, "second-lowest":88, "blue-blooded":88, "anti-white":88, "eight-team":88, "experimentalist":88, "subtexts":88, "spooled":88, "impregnating":88, "grandbaby":88, "single-malt":88, "thermoses":88, "ocean-going":88, "spake":88, "cuckold":88, "mexican-style":88, "lean-tos":88, "pooped":88, "yippee":88, "roadsters":88, "perfects":88, "evasively":88, "supped":88, "wetsuits":88, "cutline":88, "omnivores":88, "less-skilled":88, "longitudes":88, "backfill":88, "three-dimensionality":88, "viburnum":88, "ratting":88, "self-financing":88, "pleasuring":88, "halitosis":88, "survivals":88, "ruder":88, "anti-islamic":88, "anti-death":88, "addenda":88, "poltergeist":88, "child-development":88, "leant":88, "reclassify":88, "sentimentalism":88, "engravers":88, "astrophotographer":88, "under-stand":88, "mission-critical":88, "percents":88, "seraphim":88, "birdshot":88, "congregationalists":88, "protoplasm":88, "straightaways":88, "nonslip":88, "gravediggers":88, "footrests":88, "keels":88, "basecamp":88, "sexual-abuse":88, "shamrocks":88, "baobab":88, "brutalization":88, "intemperance":88, "sarongs":88, "business-school":88, "floatplane":88, "pulmonologist":88, "extracurriculars":88, "wormwood":88, "co-existing":88, "chocolate-dipped":88, "yowl":88, "papilloma":88, "soundman":88, "non-aggression":88, "utopians":88, "margarines":88, "carpathian":88, "nom":88, "self-creation":88, "protestor":88, "part-timer":88, "partyers":88, "writs":88, "carpools":88, "fishmongers":88, "profit-seeking":88, "volumizing":88, "criterium":88, "caricaturist":88, "marsala":88, "stimulators":88, "absorbable":88, "non-intervention":88, "gastroenterologists":88, "work-force":88, "megastore":88, "yapped":88, "filer":88, "snitching":88, "blue-striped":88, "phytochemical":88, "low-water":88, "energetics":88, "anti-theft":88, "co-head":88, "switch-hitting":88, "ex-spouse":88, "otherworld":88, "neo-colonial":88, "take-up":88, "empiric":88, "artifactual":88, "coarse-grained":88, "shagged":88, "post-conviction":88, "constructionism":88, "arm-wrestling":88, "relationality":88, "antitheses":88, "monotonic":88, "majesties":88, "tabbouleh":88, "jihadism":88, "codicil":88, "pastis":88, "shi'ites":88, "erythrocyte":88, "canting":88, "mottos":88, "intersubjectivity":88, "read-out":88, "righties":88, "extrinsically":88, "fifty-seventh":88, "rear-projection":88, "bucktail":88, "taxiways":88, "self-renewal":88, "ironist":88, "doctor-assisted":88, "groupers":88, "hard-of-hearing":88, "playability":88, "ballistic-missile":88, "vaporization":88, "tree-ring":88, "self-initiated":88, "whole-house":88, "windjammer":88, "phenols":88, "psychophysiological":88, "matzoh":88, "grifter":88, "governability":88, "paroxysmal":88, "kivas":88, "dendritic":88, "car-pool":88, "credit-reporting":88, "infinitives":88, "interorganizational":88, "thiamine":88, "rhetoricians":88, "titration":88, "transmigration":88, "herbivory":88, "transduction":88, "venial":88, "towboat":88, "waterhole":88, "bundlers":88, "boreholes":88, "yerself":88, "father-child":88, "headspace":88, "collectivistic":88, "tympani":88, "peccaries":88, "catechins":88, "mesons":88, "deputation":88, "shite":88, "apophatic":88, "pec":88, "crystallographic":88, "durum":88, "instantiations":88, "summarization":88, "harbormaster":88, "pronominal":88, "toxoplasmosis":88, "proteolytic":88, "reactants":88, "albinos":88, "minoan":88, "reductase":88, "megacity":88, "didgeridoo":88, "strikebreakers":88, "elastomeric":88, "nonmainstream":88, "homonym":88, "velociraptor":88, "ribosomal":88, "many-body":88, "fullerenes":88, "zero-gee":88, "layette":88, "kenosis":88, "empath":88, "ototopical":88, "basilar":88, "precompetition":88, "same-race":88, "cyberbullying":88, "catalogers":88, "hydrops":88, "cenote":88, "hadiths":88, "chondrules":88, "axion":88, "self-estimates":88, "too-large":88, "sidelight":88, "bikini-clad":88, "fainthearted":88, "cashes":88, "homogenize":88, "straight-talking":88, "make-work":88, "fomented":88, "pizazz":88, "chocolate-colored":88, "de-emphasizing":88, "exotically":88, "spine-tingling":88, "once-great":88, "cements":88, "brandnew":88, "angst-ridden":88, "flashiest":88, "racketeer":88, "reworks":88, "messily":88, "evidencing":88, "fire-sale":88, "purifies":88, "unremittingly":88, "furled":88, "engrained":88, "accost":88, "cloth-covered":88, "reverentially":88, "skullduggery":88, "skulk":88, "kibitzing":88, "sycophantic":88, "shark-infested":88, "beanpole":88, "alter-ego":88, "manhandle":88, "slandered":88, "steely-eyed":88, "contravenes":88, "affectations":88, "chauffeuring":88, "jangly":88, "convulse":88, "fishhooks":88, "ratted":88, "mirthful":88, "unselfconsciously":88, "most-used":88, "rebuking":88, "cushiony":88, "oddsmakers":88, "feather-light":88, "sorriest":88, "short-changed":88, "exploiter":88, "floaty":88, "franchised":88, "meat-and-potatoes":88, "republican-dominated":88, "fascinatingly":88, "cataclysms":88, "four-volume":88, "conceptualizes":88, "fledged":88, "lacework":88, "tudor-style":88, "founds":88, "double-teamed":88, "lucre":88, "metabolizing":88, "high-society":88, "pirouetted":88, "fire-engine":88, "fresh-tasting":88, "unhygienic":88, "chicago-style":88, "depoliticize":88, "gams":88, "redistributes":88, "resource-poor":88, "unlivable":88, "shabbiness":88, "egomaniacal":88, "possessively":88, "cocooning":88, "unclasped":88, "embargoed":88, "outstandingly":88, "abridging":88, "non-defense":88, "upmarket":88, "waffled":88, "self-justification":88, "eviscerating":88, "jammies":88, "billionths":88, "out-of-the-box":88, "off-the-shoulder":88, "trendiness":88, "peek-a-boo":88, "conveyances":88, "avantgarde":88, "zingy":88, "thirty-fifth":88, "misapplication":88, "perplexities":88, "irresolvable":88, "overplaying":88, "now-closed":88, "button-up":88, "buttonholes":88, "subcontracted":88, "philadelphians":88, "talky":88, "socializes":88, "concrete-block":88, "unreceptive":88, "undecorated":88, "everywoman":88, "schoolhouses":88, "half-turned":88, "shut-ins":88, "distaff":88, "thousandfold":88, "musicologists":88, "speechmaking":88, "east-facing":88, "bloopers":88, "keychain":88, "osteopathic":88, "backaches":88, "over-reliance":88, "holey":88, "dystopia":88, "third-biggest":88, "turned-up":88, "bullhorns":88, "clerestory":88, "non-commissioned":88, "perpendicularly":88, "newswoman":88, "white-skinned":88, "hags":88, "prophesying":88, "tousle":88, "inter-war":88, "blowed":88, "floury":88, "three-second":88, "programmatically":88, "socio-historical":88, "sicilians":88, "compositionally":88, "nullity":88, "bi-weekly":88, "quarrying":88, "sentimentalist":88, "million-year-old":88, "floral-print":88, "formers":88, "light-green":88, "federalize":88, "indoor/outdoor":88, "dogfights":88, "pre-recorded":88, "analysing":88, "microwavable":88, "returnable":88, "chalices":88, "biochemists":88, "appellations":88, "urban-based":88, "plutocrats":88, "snorkelers":88, "bizarro":88, "wastebaskets":88, "co-hosting":88, "guppies":88, "cost-containment":88, "non-standard":88, "nuclear-tipped":88, "undulation":88, "blowjob":88, "wavery":88, "woodlots":88, "cross-town":88, "inauthenticity":88, "truffled":88, "double-double":88, "inconstancy":88, "instrumented":88, "treacle":88, "low-yield":88, "murder-suicide":88, "nonperforming":88, "mirror-image":88, "survivalists":88, "recapitulates":88, "grappa":88, "provincials":88, "medias":88, "suffragette":88, "blockhead":88, "pilotless":88, "one-time-only":88, "typesetting":88, "flyweight":88, "grenadine":88, "sea-based":88, "genealogist":88, "leakers":88, "knowingness":88, "defrocked":88, "luminosities":88, "junior-college":88, "guesthouses":88, "self-exploration":88, "denatured":88, "quatre":88, "income-generating":88, "apelike":88, "methylene":88, "post-production":88, "b-flat":88, "stenciling":88, "woodchucks":88, "redacted":88, "beadboard":88, "fruitcakes":88, "dogsled":88, "user-defined":88, "sunpad":88, "minicomputer":88, "platypus":88, "centerfire":88, "gangbanger":88, "choristers":88, "f-series":88, "gooseberries":88, "mayfly":88, "sino-soviet":88, "augers":88, "binocs":88, "neurosurgical":88, "grayscale":88, "timesaver":88, "factionalized":88, "legato":88, "overvaluation":88, "crushers":88, "decrypt":88, "hand-over":88, "non-participants":88, "chaperon":88, "phantasms":88, "adulterated":88, "processual":88, "vagus":88, "three-fingered":88, "amnesties":88, "bomb-grade":88, "narco":88, "carjacker":88, "best-actor":88, "trade-union":88, "piratical":88, "sealers":88, "sell-offs":88, "greenway":88, "neurotics":88, "clop":88, "homeopaths":88, "german-jewish":88, "saturnian":88, "fumaroles":88, "faro":88, "double-butted":88, "microprocessor-based":88, "sociolinguistic":88, "mousetraps":88, "mudhole":88, "tostada":88, "positivists":88, "theodicy":88, "dualisms":88, "age-matched":88, "superclusters":88, "suffragettes":88, "organismic":88, "hangup":88, "accelerant":88, "harissa":88, "stock-option":88, "crabbers":88, "icecap":88, "interlocks":88, "species-rich":88, "nonresponders":88, "anoxia":88, "maharajah":88, "sanitizers":88, "madrasas":88, "pair-wise":88, "sacramentality":88, "endothelium":88, "risk-assessment":88, "arabists":88, "farside":88, "halftone":88, "short-sellers":88, "subsea":88, "water-supply":88, "postconciliar":88, "vaqueros":88, "frankish":88, "antivirals":88, "surface-water":88, "sublingual":88, "olfaction":88, "half-cup":88, "extramusical":88, "fermions":88, "elastomers":88, "debentures":88, "bollworm":88, "quattrocento":88, "mestiza":88, "landform":88, "valvular":88, "immunocompetent":88, "ravers":88, "repos":88, "chowders":88, "sunchokes":88, "conchs":88, "single-state":88, "kapok":88, "quinces":88, "originalist":88, "non-unionized":88, "panga":88, "hittite":88, "mutualistic":88, "wavefunctions":88, "illocutionary":88, "octavo":88, "goobers":88, "petrels":88, "yawl":88, "antiprotons":88, "iconicity":88, "internality":88, "slingers":88, "tahitians":88, "hemangioma":88, "air-conduction":88, "super-sidecuts":88, "ex-gay":88, "imagism":88, "homeschoolers":88, "atlantean":88, "polyamory":88, "haole":88, "jackalope":88, "ascites":88, "hyperacusis":88, "americo-liberians":88, "mucormycosis":88, "fall-related":88, "swirly":89, "sashaying":89, "devotedly":89, "chaperoned":89, "one-twentieth":89, "flippantly":89, "reprised":89, "sniped":89, "just-published":89, "stridency":89, "fortysomething":89, "screw-ups":89, "toils":89, "well-spent":89, "superseding":89, "subdividing":89, "cross-referenced":89, "disparages":89, "unplayable":89, "sinuously":89, "nicety":89, "straitlaced":89, "half-decade":89, "seventh-century":89, "unrewarded":89, "outshone":89, "high-fived":89, "cheapens":89, "fist-size":89, "blow-out":89, "uncomprehendingly":89, "five-night":89, "deal-breaker":89, "thaws":89, "paraphrases":89, "prolifically":89, "anguishing":89, "intuited":89, "gyrated":89, "heave-ho":89, "tie-ups":89, "soundest":89, "caustically":89, "ultra-conservative":89, "panaceas":89, "problem-solve":89, "humanized":89, "thespians":89, "underdone":89, "dethroned":89, "hoofing":89, "sensationalize":89, "homages":89, "devastates":89, "eight-time":89, "resells":89, "engorged":89, "disgorging":89, "plastic-covered":89, "back-channel":89, "okayed":89, "droops":89, "full-dress":89, "de-emphasized":89, "relit":89, "scrunches":89, "long-buried":89, "three-to-one":89, "wheezes":89, "well-coordinated":89, "commensurately":89, "neologism":89, "immoderate":89, "mass-producing":89, "intermissions":89, "inconsolably":89, "silk-screened":89, "filched":89, "diffidently":89, "unclenching":89, "tough-love":89, "dazedly":89, "metastasizing":89, "multicourse":89, "ossified":89, "kicky":89, "spitefully":89, "rent-controlled":89, "yachtsman":89, "self-destructing":89, "rear-ended":89, "universalized":89, "stammers":89, "bucketful":89, "lovefest":89, "billeted":89, "thumbs-down":89, "pigheaded":89, "cedes":89, "spymaster":89, "collegian":89, "glutted":89, "drag-out":89, "space-saving":89, "ungracious":89, "pea-sized":89, "big-ass":89, "erects":89, "unearths":89, "realness":89, "palpitating":89, "misjudging":89, "doublespeak":89, "circumscribing":89, "capering":89, "onrush":89, "unhealed":89, "underexposed":89, "swoons":89, "rezoned":89, "floodlit":89, "quiches":89, "plummy":89, "reactivating":89, "need-to-know":89, "sundresses":89, "ninny":89, "farm-fresh":89, "mission-style":89, "clean-lined":89, "manipulable":89, "news-gathering":89, "unself-conscious":89, "overindulge":89, "avowal":89, "botanically":89, "pockmarks":89, "normal-looking":89, "pre-selected":89, "hog-tied":89, "fibbing":89, "disproves":89, "what's-his-name":89, "gulfs":89, "inventorying":89, "split-rail":89, "mop-up":89, "terrorizes":89, "half-grown":89, "bussed":89, "springboards":89, "six-acre":89, "take-it-or-leave-it":89, "hissy":89, "knife-wielding":89, "consumer-products":89, "near-miss":89, "tri-state":89, "electric-powered":89, "flypaper":89, "hoodies":89, "bicameral":89, "ring-shaped":89, "supermen":89, "four-stage":89, "moment-to-moment":89, "million-square-foot":89, "whiskery":89, "triggerman":89, "remainders":89, "keenness":89, "creaming":89, "interlace":89, "institution-building":89, "turpitude":89, "bird-watchers":89, "seven-month-old":89, "deficit-cutting":89, "frontiersman":89, "chines":89, "ah-hah":89, "german-language":89, "superrich":89, "traumatizing":89, "cleaves":89, "high-carb":89, "applewood":89, "unawareness":89, "non-combat":89, "deadness":89, "rollerblades":89, "darndest":89, "eighth-seeded":89, "democratic-leaning":89, "paybacks":89, "portraitists":89, "attune":89, "realisation":89, "post-enlightenment":89, "scumbags":89, "handshaking":89, "armories":89, "growth-stock":89, "cuing":89, "relaxants":89, "unconcern":89, "walk-ons":89, "preemie":89, "historicizing":89, "profiteer":89, "front-porch":89, "gracefulness":89, "overflight":89, "seedbed":89, "weigh-ins":89, "clearinghouses":89, "peroration":89, "incurious":89, "colorings":89, "co-publisher":89, "vermillion":89, "private-public":89, "faulting":89, "leavening":89, "recidivist":89, "vinaigrettes":89, "gridded":89, "under-representation":89, "relationship-building":89, "paymaster":89, "injury-free":89, "handstand":89, "maternally":89, "post-op":89, "oppositely":89, "night-blooming":89, "entrenching":89, "post-and-beam":89, "shacking":89, "scratchings":89, "serbo-croatian":89, "idlers":89, "cyclicals":89, "coverlets":89, "isosceles":89, "water-repellent":89, "whacko":89, "counterpane":89, "raku":89, "teeter-totter":89, "carny":89, "switch-hitter":89, "stoners":89, "revocable":89, "ruminative":89, "cargos":89, "co-managers":89, "dermatological":89, "jitter":89, "omnivore":89, "age-defying":89, "tabla":89, "nontariff":89, "self-sealing":89, "value-based":89, "impasses":89, "doggie-style":89, "eosin":89, "music-related":89, "hooliganism":89, "intermediation":89, "gaffs":89, "nutcrackers":89, "rangefinder":89, "lodestone":89, "interbred":89, "phalanxes":89, "wintergreen":89, "gulley":89, "calamine":89, "genealogists":89, "maoism":89, "postnasal":89, "construal":89, "bandwidths":89, "nonuniform":89, "intubated":89, "gameplay":89, "thermocouples":89, "abolitionism":89, "nondeductible":89, "truncation":89, "boric":89, "cowhand":89, "duodenum":89, "placemat":89, "bivalve":89, "neurotoxic":89, "ketch":89, "self-giving":89, "proliferative":89, "peritoneal":89, "limericks":89, "pinatas":89, "off-axis":89, "thundercloud":89, "postconsumer":89, "pluralities":89, "shepherdess":89, "glovebox":89, "haying":89, "physiotherapist":89, "flagon":89, "endometrium":89, "half-point":89, "gauss":89, "hardhat":89, "glycoprotein":89, "uncreated":89, "faience":89, "aggregator":89, "biomarker":89, "laparoscopy":89, "soya":89, "airbrushing":89, "upper-division":89, "multipolarity":89, "readerly":89, "deconstructionism":89, "recusal":89, "nonlinearities":89, "broadhead":89, "lamas":89, "ablative":89, "severally":89, "mediaeval":89, "southcentral":89, "dancehall":89, "brickyard":89, "spooling":89, "tribespeople":89, "piton":89, "canadian-american":89, "ventilatory":89, "autoloader":89, "home-theater":89, "bioreactor":89, "gnosticism":89, "kokanee":89, "alpacas":89, "conic":89, "brachial":89, "turn-ons":89, "neuroendocrine":89, "autoloaders":89, "nonchemical":89, "recurve":89, "arsenate":89, "macromolecules":89, "mixtape":89, "tappers":89, "quantum-mechanical":89, "responsivity":89, "momenta":89, "rubbings":89, "cross-validation":89, "thromboembolism":89, "brigand":89, "live-work":89, "delisting":89, "classicizing":89, "indexation":89, "excimer":89, "tribunes":89, "traversal":89, "terrariums":89, "self-construction":89, "inter-religious":89, "streamflow":89, "clientelist":89, "compostables":89, "vinifera":89, "sabot":89, "pruner":89, "maskers":89, "gasohol":89, "bindle":89, "quinolone":89, "tattooist":89, "sino-indian":89, "neo-scholastic":89, "native-language":89, "transsexualism":89, "technetium":89, "self-presentational":89, "pinniped":89, "kettlebell":89, "arb":89, "isolette":89, "soliton":89, "fecal-coliform":89, "haredim":89, "osteoma":89, "hantaviruses":89, "polyploid":89, "load/store":89, "middle-of-the-night":89, "careworn":89, "worry-free":89, "uncork":89, "blood-spattered":89, "full-speed":89, "demolishes":89, "budget-minded":89, "picture-postcard":89, "ill-starred":89, "refashioned":89, "sticklers":89, "enfeebled":89, "sluiced":89, "life-like":89, "caromed":89, "wire-rim":89, "then-secretary":89, "boringly":89, "irrepressibly":89, "well-integrated":89, "white-knuckle":89, "winningly":89, "searingly":89, "wended":89, "rustles":89, "postcard-perfect":89, "lowest-paid":89, "rebukes":89, "outweighing":89, "fishtailed":89, "retrenching":89, "bilked":89, "cavelike":89, "happily-ever-after":89, "thirty-one-year-old":89, "rankle":89, "earth-toned":89, "star-filled":89, "reallocating":89, "soaping":89, "eighth-largest":89, "eightfold":89, "line-by-line":89, "two-burner":89, "singeing":89, "unmemorable":89, "blahs":89, "jouncing":89, "blackballed":89, "sightsee":89, "second-string":89, "smidge":89, "plotline":89, "millwork":89, "broadsided":89, "philosophize":89, "verily":89, "walloped":89, "trifled":89, "savs":89, "two-front":89, "acquaintanceship":89, "asian-style":89, "fleet-footed":89, "broody":89, "lave":89, "doughnut-shaped":89, "brushfire":89, "bone-jarring":89, "portentously":89, "half-opened":89, "gratefulness":89, "wage-earners":89, "professional-looking":89, "glass-and-steel":89, "forty-two-year-old":89, "evasiveness":89, "rabble-rouser":89, "tree-covered":89, "amortize":89, "pile-up":89, "mystify":89, "multipart":89, "year-by-year":89, "then-current":89, "aggravations":89, "protuberances":89, "genuflecting":89, "defiling":89, "thrift-store":89, "super-efficient":89, "ululating":89, "ravished":89, "even-numbered":89, "contemplatively":89, "fretwork":89, "doubter":89, "thingy":89, "prostate-specific":89, "twittered":89, "fascistic":89, "de-emphasis":89, "waitstaff":89, "brittleness":89, "censuring":89, "fenced-off":89, "quick-tempered":89, "signees":89, "twofer":89, "blackand-white":89, "crowbars":89, "exigent":89, "hand-cranked":89, "rigidities":89, "kissable":89, "abrogating":89, "packagers":89, "post-modernist":89, "falling-down":89, "candelabras":89, "bodacious":89, "shrilling":89, "swishes":89, "off-ramp":89, "serb-dominated":89, "forfeits":89, "understandingly":89, "mythically":89, "protegee":89, "half-frozen":89, "fillip":89, "shiite-led":89, "beaut":89, "north-northeast":89, "figure-eight":89, "blindside":89, "aeons":89, "half-man":89, "quarter-acre":89, "in-and-out":89, "transcribes":89, "hand-operated":89, "dust-free":89, "pass-rush":89, "windchill":89, "shirtfront":89, "yowled":89, "indented":89, "million-selling":89, "cloudburst":89, "armamentarium":89, "liveried":89, "one-volume":89, "undercounted":89, "fall-out":89, "fuzzies":89, "posies":89, "due-process":89, "corn-fed":89, "bongos":89, "pipsqueak":89, "pearlescent":89, "handpainted":89, "clintonian":89, "colognes":89, "early-19th-century":89, "parceling":89, "gimmickry":89, "slumbered":89, "unnumbered":89, "humbles":89, "plagiarize":89, "face-up":89, "pre-packaged":89, "zags":89, "seventh-inning":89, "emollient":89, "usurps":89, "discography":89, "reassembly":89, "itsy-bitsy":89, "inseam":89, "merchandiser":89, "rowdies":89, "give-away":89, "rack-and-pinion":89, "sheetmetal":89, "endangered-species":89, "anticrime":89, "prepay":89, "three-putt":89, "drivetrains":89, "bricked":89, "garbanzos":89, "hugest":89, "ultra-light":89, "big-company":89, "cruncher":89, "cooptation":89, "mandolins":89, "eight-yard":89, "summations":89, "unserious":89, "hispanic-americans":89, "hub-and-spoke":89, "dishevelled":89, "malts":89, "pasteboard":89, "yardwork":89, "wheelies":89, "beneficially":89, "flunks":89, "tankards":89, "excreta":89, "dayhikes":89, "seventh-seeded":89, "harassers":89, "yellow-haired":89, "playbill":89, "democratically-elected":89, "blameworthy":89, "extra-marital":89, "unmerited":89, "pinch-hitter":89, "lasses":89, "seismograph":89, "ungrammatical":89, "mushing":89, "jerkin":89, "vittles":89, "profs":89, "presser":89, "red-winged":89, "long-nosed":89, "supercharger":89, "noncash":89, "wolfhound":89, "nitroglycerine":89, "on-ice":89, "partridges":89, "diggings":89, "consensually":89, "solar-system":89, "lawnmowers":89, "adoptable":89, "self-tanning":89, "commingled":89, "pro-style":89, "read-aloud":89, "vampiric":89, "victimizer":89, "foxtrot":89, "three-quarter-length":89, "candleholder":89, "bicolor":89, "barrows":89, "goy":89, "suctioning":89, "toxicities":89, "dianthus":89, "counterfeiter":89, "parsecs":89, "effacement":89, "chine":89, "footballers":89, "low-value":89, "percolator":89, "reconstructionist":89, "rezonings":89, "non-interference":89, "anti-gang":89, "revisionary":89, "locators":89, "metroplex":89, "guppy":89, "sawgrass":89, "pedagogues":89, "nonhazardous":89, "tribally":89, "tuberous":89, "slaveholding":89, "dreadnought":89, "kentuckians":89, "weirs":89, "post-structuralist":89, "physician-patient":89, "crewneck":89, "cations":89, "anti-nafta":89, "short-grain":89, "shootdown":89, "gamelan":89, "service-related":89, "paratroop":89, "mils":89, "deadheading":89, "postindependence":89, "grazer":89, "multiplexing":89, "post-retirement":89, "metallurgist":89, "proofreader":89, "truncheon":89, "bezel":89, "foucauldian":89, "cantatas":89, "entropic":89, "trillionth":89, "tyrosine":89, "injectables":89, "laotians":89, "postauricular":89, "halogens":89, "untimed":89, "half-pipe":89, "in-game":89, "high-seas":89, "ultrafine":89, "thomist":89, "specular":89, "pullups":89, "photosensitive":89, "abaya":89, "thermocouple":89, "slaveholder":89, "matadors":89, "odalisque":89, "dreidel":89, "submariners":89, "meddler":89, "voyageur":89, "chia":89, "thatcherite":89, "constitutionalists":89, "kentish":89, "euroamericans":89, "atropine":89, "kugel":89, "congruency":89, "covariation":89, "anabaptists":89, "cingulate":89, "salsify":89, "false-negative":89, "transcendentalists":89, "generalised":89, "antifascist":89, "climate-related":89, "monistic":89, "mutualism":89, "geishas":89, "sludges":89, "noncriminal":89, "travertine":89, "arteriovenous":89, "health-risk":89, "clit":89, "sternocleidomastoid":89, "methylphenidate":89, "non-typical":89, "chromosphere":89, "zoomorphic":89, "neonate":89, "calcitonin":89, "gilder":89, "policy-relevant":89, "labial":89, "freeholders":89, "paracetamol":89, "narrow-band":89, "state-centric":89, "incompressible":89, "variegation":89, "pre-nup":89, "phosphatase":89, "delegitimation":89, "aliyah":89, "penumbral":89, "symbiont":89, "deprogramming":89, "afforestation":89, "day-trading":89, "longlines":89, "cathodic":89, "post-exercise":89, "subtheme":89, "payee":89, "masculinities":89, "golems":89, "pump-out":89, "longliners":89, "mahout":89, "solution-focused":89, "iroquoian":89, "trenchers":89, "upper-limb":89, "hyperparathyroidism":89, "oystering":89, "purgatorial":89, "bronchiectasis":89, "demandingness":89, "expellees":89, "tech-prep":89, "drama/theatre":89, "three-channel":89, "aptness":89, "rabidly":89, "potboiler":89, "papering":89, "contortionist":89, "laidback":89, "vituperation":89, "left-over":89, "undervalue":89, "time-worn":89, "state-approved":89, "suspicious-looking":89, "legendarily":89, "go-slow":89, "fraternizing":89, "as-needed":89, "chicest":89, "outlandishly":89, "hurdling":89, "shellacked":89, "sendup":89, "much-heralded":89, "transacted":89, "snuggly":89, "quaintness":89, "ever-shrinking":89, "slays":89, "dueled":89, "sashay":89, "assails":89, "plastic-wrapped":89, "pulsates":89, "extorted":89, "vacillate":89, "hours-long":89, "computer-savvy":89, "cross-fire":89, "fourth-ranked":89, "unceremonious":89, "escarpments":89, "ripest":89, "indispensible":89, "moonlighted":89, "rock-throwing":89, "custom-tailored":89, "whiskeys":89, "wined":89, "now-classic":89, "foodstuff":89, "spread-out":89, "horrifyingly":89, "preoccupies":89, "double-crossed":89, "direst":89, "unwaveringly":89, "eventualities":89, "imperils":89, "temptingly":89, "dislodges":89, "obtuseness":89, "lifelessly":89, "converses":89, "squanders":89, "variably":89, "unbolted":89, "snacked":89, "overlarge":89, "rampages":89, "self-education":89, "roosted":89, "well-proportioned":89, "fifty-foot":89, "on-the-fly":89, "super-secret":89, "two-cd":89, "overcharge":89, "meagre":89, "excising":89, "anglicized":89, "old-money":89, "vine-covered":89, "sequiturs":89, "feints":89, "huffy":89, "four-acre":89, "two-bath":89, "thoughtlessness":89, "five-way":89, "man-sized":89, "heavy-gauge":89, "abutted":89, "interweaves":89, "mid-thigh":89, "angularity":89, "bladed":89, "rubble-strewn":89, "pass-rushing":89, "pollution-free":89, "nine-week":89, "wall-sized":89, "well-conceived":89, "hand-stitched":89, "oak-paneled":89, "pixelated":89, "jellied":89, "clopping":89, "anted":89, "one-dish":89, "catalyzing":89, "stalinists":89, "unworthiness":89, "jittering":89, "unutterable":89, "peremptorily":89, "toothsome":89, "intermarry":89, "side-view":89, "scissor":89, "ten-mile":89, "uploads":89, "twelve-month":89, "one-horse":89, "self-educated":89, "deliberates":89, "caftans":89, "counterforce":89, "hawker":89, "long-barreled":89, "ad-libbed":89, "invectives":89, "lobs":89, "no-spin":89, "characterless":89, "alcohol-based":89, "cosmically":89, "crabbed":89, "higher-risk":89, "outgrowths":89, "breathers":89, "looses":89, "unrepaired":89, "four-footed":89, "perjure":89, "recrossed":89, "near-misses":89, "double-overtime":89, "large-size":89, "detoxifying":89, "sendoff":89, "anglophile":89, "black-and-blue":89, "one-ton":89, "co-equal":89, "corporately":89, "metallics":89, "well-tuned":89, "repaving":89, "delicatessens":89, "six-footer":89, "bolt-on":89, "his-and-hers":89, "guzzler":89, "atomization":89, "screamers":89, "thunderclouds":89, "jockstrap":89, "untempered":89, "canonize":89, "frozen-food":89, "lodestar":89, "breakin":89, "reimagining":89, "arithmetical":89, "leashed":89, "dual-income":89, "reciprocation":89, "auburn-haired":89, "adjectival":89, "limbless":89, "disease-carrying":89, "ballfield":89, "four-run":89, "interoffice":89, "sateen":89, "regular-size":89, "underreport":89, "tightwad":89, "redline":89, "vegetable-based":89, "plagiarized":89, "wildcard":89, "tripwire":89, "midnight-blue":89, "cyclically":89, "bussing":89, "hairball":89, "filibustered":89, "head-butting":89, "golfed":89, "aesthetes":89, "americanness":89, "energy-rich":89, "earls":89, "unitarians":89, "after-market":89, "homogeneously":89, "breadcrumb":89, "philodendron":89, "ionize":89, "diagnosable":89, "bagger":89, "lockable":89, "occlude":89, "japanese-owned":89, "prosecutable":89, "near-complete":89, "einsteinian":89, "swindles":89, "indemnify":89, "equestrians":89, "groupthink":89, "relaxer":89, "two-by-two":89, "recapitalization":89, "gaits":89, "birdwatching":89, "midweight":89, "third-century":89, "bildungsroman":89, "incubus":89, "vexatious":89, "bordellos":89, "convenience-store":89, "pressurize":89, "pulitzer-winning":89, "admonishments":89, "colorists":89, "saleslady":89, "white-gold":89, "filleting":89, "half-cent":89, "townsmen":89, "hand-washing":89, "industrial-scale":89, "tricyclic":89, "near-shore":89, "caliphs":89, "non-food":89, "cruise-ship":89, "rejectionist":89, "high-rate":89, "unexpired":89, "prefaces":89, "schist":89, "stuntmen":89, "reimbursable":89, "nonconformists":89, "jellyroll":89, "write-down":89, "strongbox":89, "public-land":89, "lawgiver":89, "bioethicists":89, "re-enlist":89, "yogis":89, "second-day":89, "indictable":89, "gunsmiths":89, "technologic":89, "single-track":89, "decadal":89, "noncompete":89, "oeuvres":89, "pillboxes":89, "perfections":89, "sphinxes":89, "tailless":89, "job-seeking":89, "psychotherapies":89, "violative":89, "databanks":89, "pro-choicers":89, "riprap":89, "workability":89, "agoraphobic":89, "spacings":89, "microelectronic":89, "sheepherders":89, "underaged":89, "under-eye":89, "kilobits":89, "pan-islamic":89, "disrupter":89, "ailerons":89, "multitool":89, "chadors":89, "client-centered":89, "toxicants":89, "striders":89, "politico-economic":89, "espaliered":89, "high-sulfur":89, "carmelites":89, "she-wolf":89, "annexes":89, "sleepwalkers":89, "inter-governmental":89, "go-cart":89, "carcinogenicity":89, "co-pay":89, "toymakers":89, "language-based":89, "top-loading":89, "off-course":89, "instrumentalities":89, "secularity":89, "property-rights":89, "indochinese":89, "deconstructionists":89, "faunas":89, "equilibria":89, "selectmen":89, "letter-writers":89, "earwax":89, "prescribers":89, "osteoporotic":89, "impellers":89, "lovey":89, "smoothbore":89, "inquisitorial":89, "neodymium":89, "battlement":89, "parastatal":89, "outgassing":89, "gigabit":89, "topologies":89, "vitrine":89, "tailgaters":89, "brads":89, "thresher":89, "warm-season":89, "majority-minority":89, "mongolians":89, "non-school":89, "biodegradation":89, "phenology":89, "dobro":89, "panegyric":89, "tanzanians":89, "gigabits":89, "neurochemicals":89, "autoclave":89, "hyperthermia":89, "interannual":89, "student-initiated":89, "bloodroot":89, "bursar":89, "predication":89, "antispyware":89, "cookhouse":89, "umbral":89, "organochlorine":89, "log-rank":89, "indo-pakistani":89, "estate-tax":89, "seining":89, "counterproliferation":89, "planetariums":89, "universalists":89, "out-groups":89, "eyepatch":89, "machinegun":89, "manumission":89, "vasodilator":89, "preimplantation":89, "dadaist":89, "glomerular":89, "acellular":89, "nonword":89, "plodder":89, "goldenrods":89, "sport/utility":89, "syngas":89, "petrine":89, "oystermen":89, "anthropometry":89, "candomble":89, "transposable":89, "inductance":89, "uniaxial":89, "postnational":89, "determiners":89, "free-born":89, "parthian":89, "graphemes":89, "jacksonians":89, "gasbags":89, "harm-reduction":89, "pinnipeds":89, "supracondylar":89, "curandero":89, "hyporheic":89, "localist":89, "medflies":89, "premigration":89, "phylogeographic":89, "microdisk":89, "sweet-natured":89, "hobnob":89, "once-powerful":89, "sorrier":89, "sopped":89, "formidably":89, "tantalized":89, "bell-like":89, "compunctions":89, "occured":89, "meretricious":89, "head-turning":89, "outranked":89, "untarnished":89, "enshrines":89, "smalltown":89, "cojones":89, "heart-felt":89, "middle-sized":89, "parlaying":89, "splotched":89, "unobjectionable":89, "well-trodden":89, "wavelets":89, "parroted":89, "self-destructed":89, "precipices":89, "bounteous":89, "strangles":89, "tarpaulins":89, "rouged":89, "bungle":89, "affronts":89, "pleasers":89, "ransack":89, "horse-racing":89, "cathedral-like":89, "creeped":89, "rip-roaring":89, "snug-fitting":89, "reallocated":89, "double-spaced":89, "double-team":89, "disassociated":89, "demur":89, "disabused":89, "bantamweight":89, "decipherable":89, "explicates":89, "toned-down":89, "literal-minded":89, "clime":89, "well-considered":89, "overcompensate":89, "patronizingly":89, "floodgate":89, "speechifying":89, "mid-nineties":89, "cult-like":89, "jottings":89, "meekness":89, "emailing":89, "flowy":89, "besmirch":89, "acquiesces":89, "jack-in-the-box":89, "episodically":89, "demobilized":89, "limned":89, "thigh-deep":89, "leverages":89, "mischaracterization":89, "zip-up":89, "munificent":89, "monetize":89, "masterstroke":89, "chauvinists":89, "masklike":89, "forest-green":89, "irreducibly":89, "washer/dryer":89, "deliberateness":89, "midflight":89, "curtails":89, "re-establishment":89, "kiddy":89, "gloaming":89, "showpieces":89, "maybes":89, "straight-laced":89, "then-senator":89, "embellishes":89, "espressos":89, "eeriness":89, "refract":89, "shockers":89, "pothead":89, "steep-sided":89, "thirty-four-year-old":89, "standard-bearers":89, "ransomed":89, "levering":89, "catfight":89, "attenuating":89, "buff-colored":89, "firebombing":89, "allover":89, "allegorically":89, "backstabbing":89, "piques":89, "government-appointed":89, "four-plus":89, "tonelessly":89, "relaunch":89, "goads":89, "leatherbound":89, "milquetoast":89, "overregulation":89, "careerists":89, "gargle":89, "extra-point":89, "legalisms":89, "land-locked":89, "crossways":89, "early-spring":89, "uninflected":89, "laziest":89, "first-of-its-kind":89, "bullet-shaped":89, "dweeb":89, "folk-art":89, "after-party":89, "gowned":89, "wise-cracking":89, "four-wheeler":89, "multilaterally":89, "hundred-year":89, "exfoliator":89, "sciatica":89, "fibs":89, "towelettes":89, "unchartered":89, "half-glasses":89, "autographing":89, "neologisms":89, "bulrushes":89, "incompetency":89, "toiletry":89, "upholsterer":89, "thickener":89, "undulant":89, "foulness":89, "frequent-flyer":89, "pickaxes":89, "slavering":89, "jests":89, "bamboozled":89, "blemished":89, "corruptible":89, "eighteen-wheeler":89, "sunni-dominated":89, "rappelled":89, "balms":89, "teacher-led":89, "non-black":89, "kilobytes":89, "ladles":89, "unseal":89, "bullpens":89, "happy-hour":89, "usurious":89, "drawstrings":89, "ultrasensitive":89, "analog-to-digital":89, "room-service":89, "mooch":89, "moonbeams":89, "emasculation":89, "well-supported":89, "world-historical":89, "oldtime":89, "unfaithfulness":89, "unfurnished":89, "ungoverned":89, "south-southeast":89, "education-related":89, "ham-fisted":89, "spankings":89, "power-generating":89, "quasi-public":89, "non-steroidal":89, "moue":89, "ballhandling":89, "hibachi":89, "eight-legged":89, "single-cell":89, "ad-lib":89, "leaper":89, "black/white":89, "ruched":89, "five-passenger":89, "bestowal":89, "feely":89, "art-deco":89, "manors":89, "third-hand":89, "bullseye":89, "carryall":89, "heliocentric":89, "moderate-intensity":89, "pendulums":89, "anteater":89, "commercial-grade":89, "catechisms":89, "advert":89, "katydids":89, "bleeder":89, "non-farm":89, "post-office":89, "jeremiad":89, "kismet":89, "lunchboxes":89, "stress-management":89, "encomium":89, "second-level":89, "stirrer":89, "handmaid":89, "teach-ins":89, "four-car":89, "demimonde":89, "uplifts":89, "unscreened":89, "alternative-energy":89, "fish-eating":89, "fluoresce":89, "seat-belt":89, "bioterror":89, "homeschooled":89, "narrow-gauge":89, "clomp":89, "russets":89, "interferometric":89, "farces":89, "upsidedown":89, "tax-sheltered":89, "europe-wide":89, "coloratura":89, "tattle":89, "toady":89, "antiterror":89, "cooldown":89, "heat-treated":89, "three-toed":89, "preempts":89, "ascorbic":89, "schismatic":89, "yogic":89, "deism":89, "black-bean":89, "mm-mm":89, "dissociating":89, "centric":89, "tongue-and-groove":89, "electrodynamics":89, "likeability":89, "groundhogs":89, "adoptee":89, "andirons":89, "man-eater":89, "cross-functional":89, "interbank":89, "elementary-age":89, "meowed":89, "zinnia":89, "reformism":89, "body-building":89, "opticians":89, "chaque":89, "carding":89, "morphologic":89, "shootaround":89, "numismatic":89, "flagellation":89, "traffic-choked":89, "non-response":89, "uninsurable":89, "roundworm":89, "polygonal":89, "classical-music":89, "moneylenders":89, "couplers":89, "ikat":89, "synchronously":89, "sommeliers":89, "gendering":89, "spamming":89, "weedless":89, "goaltending":89, "tenth-century":89, "semitransparent":89, "to-morrow":89, "abortion-related":89, "steelmakers":89, "agonists":89, "copyists":89, "propinquity":89, "time-trial":89, "tunings":89, "ataxia":89, "double-wall":89, "gumdrops":89, "neem":89, "goldfinch":89, "madams":89, "citizen-soldiers":89, "archangels":89, "ethane":89, "neoconservatism":89, "pee-pee":89, "laminar":89, "museological":89, "sub-categories":89, "eld":89, "drug-use":89, "nonindustrial":89, "decontrol":89, "anti-syrian":89, "javelina":89, "forestlands":89, "solar-type":89, "aphoristic":89, "arabism":89, "sedating":89, "multidrug":89, "initialization":89, "draft-free":89, "blackpowder":89, "angioplasties":89, "bylaw":89, "copal":89, "escapement":89, "retinoid":89, "rabbinate":89, "pro-ams":89, "coveys":89, "mini-vans":89, "ryegrass":89, "gram-positive":89, "artefact":89, "sensorial":89, "noise-induced":89, "understudies":89, "time-delay":89, "fluoroquinolones":89, "plasmodium":89, "member-states":89, "adductor":89, "hussars":89, "deadlift":89, "tactual":89, "idiographic":89, "pari-mutuel":89, "dosa":89, "orchardists":89, "pre-treatment":89, "micrometeorites":89, "sea-ice":89, "neap":89, "millennialism":89, "snorers":89, "thrombolytic":89, "historicists":89, "olestra":89, "cichlids":89, "adiabatic":89, "seropositivity":89, "multispecialty":89, "scrofula":89, "nondoctoral":89, "haemodialysis":89, "laager":89, "self-competence":89, "self-beliefs":89, "heterotopia":89, "governmentality":89, "microdebrider":89, "four-buckle":89, "transmigrants":89, "pre-clovis":89, "virga":89, "giant-cell":89, "school-family-community":89, "twice-exceptional":89, "vision-specific":89, "apostrophic":89, "bioaerosol":89, "vestries":89, "razzing":89, "fresh-water":89, "fierce-looking":89, "four-decade":89, "ever-higher":89, "patriotically":89, "maddened":89, "mid-stride":89, "thank-yous":89, "spanking-new":89, "enervating":89, "rawest":89, "rattletrap":89, "upbraided":89, "reassigning":89, "soviet-built":89, "penny-pinching":89, "enthrall":89, "irresolute":89, "normal-sized":89, "churchy":89, "honeymooning":89, "noisome":89, "birthplaces":89, "water-cooler":89, "quintupled":89, "trustful":89, "inconveniencing":89, "good-tasting":89, "unwrinkled":89, "togas":89, "ceremonious":89, "fair-sized":89, "liberal-leaning":89, "meriting":89, "harangued":89, "thunderously":89, "dehumanized":89, "chaperoning":89, "child-sized":89, "pummels":89, "bloodsucking":89, "asian-inspired":89, "image-conscious":89, "pink-and-white":89, "laserlike":89, "impugned":89, "reapplying":89, "thickset":89, "undramatic":89, "clunking":89, "overstayed":89, "crisscrosses":89, "cherry-pick":89, "thirty-seven-year-old":89, "pretence":89, "melodramatically":89, "bellyache":89, "sensuousness":89, "assignations":89, "assayed":89, "implodes":89, "trademarked":89, "injury-plagued":89, "under-the-table":89, "laser-like":89, "democratized":89, "disallowing":89, "muffles":89, "exonerating":89, "teardrop-shaped":89, "worthier":89, "decreeing":89, "nineteenthcentury":89, "inexpressibly":89, "unamused":89, "vainglorious":89, "crime-free":89, "non-sectarian":89, "apparatchik":89, "augured":89, "mid-decade":89, "queenly":89, "pleasurably":89, "over-arching":89, "well-watered":89, "reintegrated":89, "dreck":89, "octogenarians":89, "ingests":89, "congeries":89, "cut-and-dried":89, "weird-looking":89, "white-robed":89, "make-shift":89, "nit-picking":89, "water-logged":89, "parsed":89, "eyeballed":89, "unfeminine":89, "third-story":89, "forded":89, "forbears":89, "misuses":89, "basted":89, "out-of-touch":89, "stupefaction":89, "feasibly":89, "intersperse":89, "long-cherished":89, "skylines":89, "dropoffs":89, "postponements":89, "monkish":89, "actor-director":89, "brooked":89, "fastenings":89, "unpublicized":89, "looseleaf":89, "rehiring":89, "non-existence":89, "pealed":89, "movie-going":89, "revues":89, "unrepeatable":89, "fast-forwarding":89, "minimalists":89, "stonemason":89, "despoiled":89, "unlighted":89, "carnality":89, "yokels":89, "photocopiers":89, "hard-ass":89, "cawed":89, "contortion":89, "energy-producing":89, "gray-bearded":89, "augury":89, "quashing":89, "flunkies":89, "backlogged":89, "wayfarers":89, "soviet-backed":89, "south-southwest":89, "repurpose":89, "grade-schoolers":89, "heists":89, "emboldens":89, "fifth-round":89, "rootsy":89, "megalomaniacal":89, "half-cocked":89, "urinates":89, "front-door":89, "information-rich":89, "efflorescence":89, "sanctimony":89, "persecutor":89, "illumined":89, "comb-over":89, "hard-copy":89, "kitties":89, "cost-competitive":89, "solidification":89, "garnets":89, "middle-management":89, "used-book":89, "whinnying":89, "hard-shelled":89, "half-pound":89, "propositioned":89, "haberdasher":89, "blessedness":89, "build-out":89, "tie-breaking":89, "hard-eyed":89, "ecclesiastic":89, "eccentrically":89, "three-putted":89, "inessential":89, "fat-soluble":89, "chokers":89, "thumbscrews":89, "kith":89, "datable":89, "emphasises":89, "employer-paid":89, "deliverers":89, "inconstant":89, "hazarded":89, "rebranding":89, "womankind":89, "search-and-destroy":89, "megaphones":89, "folie":89, "odour":89, "communistic":89, "confessionals":89, "colonnaded":89, "preheating":89, "date-rape":89, "poplin":89, "producer/director":89, "five-pointed":89, "i-beams":89, "broadleaf":89, "high-tax":89, "recoding":89, "mutinied":89, "reanimated":89, "freeloading":89, "proscribes":89, "dartboard":89, "call-ups":89, "constitutionalist":89, "transacting":89, "contestable":89, "dirtbag":89, "aerate":89, "cross-over":89, "afterburners":89, "normed":89, "on-street":89, "reel-to-reel":89, "six-course":89, "ageist":89, "dynamiting":89, "plutocracy":89, "splashdown":89, "unfired":89, "vote-getters":89, "stand-by":89, "hayfields":89, "nonmetallic":89, "knothole":89, "flanged":89, "accrete":89, "jacketed":89, "jailbird":89, "non-oil":89, "cloverleaf":89, "musketry":89, "kahuna":89, "cuckoos":89, "inter-generational":89, "meadowlark":89, "spatio-temporal":89, "strop":89, "tweeter":89, "nuthouse":89, "requisition":89, "red-meat":89, "defoliation":89, "provisos":89, "samizdat":89, "artillerymen":89, "bituminous":89, "histograms":89, "bather":89, "lock-up":89, "doggies":89, "bellhops":89, "team-based":89, "contraries":89, "neurophysiology":89, "jambs":89, "open-wheel":89, "dinos":89, "bottom-dwelling":89, "homesites":89, "stepmothers":89, "steno":89, "carpetbag":89, "carters":89, "air-bag":89, "shavers":89, "insider-trading":89, "lady-in-waiting":89, "hematoxylin":89, "car-buying":89, "adaptively":89, "skydiver":89, "two-hitter":89, "bowsprit":89, "stevedore":89, "solidarities":89, "sweet-sour":89, "landmine":89, "verbalization":89, "deep-ocean":89, "ringworm":89, "flycatcher":89, "potpie":89, "unarmored":89, "employment-related":89, "outriders":89, "west-northwest":89, "moonies":89, "superbugs":89, "anteaters":89, "chatelaine":89, "off-ice":89, "oblate":89, "reapplication":89, "doubloons":89, "social-security":89, "civilised":89, "cytomegalovirus":89, "nougat":89, "hate-crime":89, "bricolage":89, "coronas":89, "futurity":89, "allee":89, "catalysis":89, "gravities":89, "feeble-minded":89, "congruity":89, "soft-bodied":89, "catchword":89, "chaldean":89, "streptococcal":89, "fens":89, "mechanicals":89, "hmong":89, "politico-military":89, "pillory":89, "colored-pencil":89, "spillways":89, "unselected":89, "monograms":89, "statics":89, "electric-car":89, "landlord-tenant":89, "spiritualities":89, "self-organized":89, "telcos":89, "checkering":89, "contrarians":89, "griots":89, "scats":89, "osseous":89, "nonathlete":89, "libration":89, "school-choice":89, "ocelots":89, "fleeces":89, "suppressors":89, "log-transformed":89, "context-free":89, "dematerialization":89, "quatrains":89, "buntings":89, "gondolier":89, "calibrator":89, "gravity-fed":89, "electroweak":89, "triply":89, "paps":89, "druggists":89, "stonecutter":89, "subchapter":89, "speechwriting":89, "bushing":89, "abductee":89, "skydivers":89, "mackinaw":89, "copepods":89, "anencephaly":89, "deliverables":89, "oiler":89, "puja":89, "triangulated":89, "purpose-driven":89, "supercritical":89, "myringotomy":89, "parterres":89, "masculinized":89, "cereus":89, "peacebuilding":89, "hepatocellular":89, "morphemes":89, "fem":89, "phospholipid":89, "geoeconomic":89, "preterite":89, "leasehold":89, "intervenor":89, "clades":89, "telnet":89, "glioblastoma":89, "thromboembolic":89, "cowbird":89, "cash-value":89, "outfall":89, "ichthyosaurs":89, "microsatellite":89, "cognitional":89, "current-account":89, "lossy":89, "albinism":89, "mycenaean":89, "heterodiegetic":89, "perilymph":89, "toe-off":89, "translocal":89, "slopestyle":89, "biofiltration":89, "propolis":89, "pre-eclampsia":89, "creatureliness":89, "cerumen":89, "post-tenure":89, "phytoliths":89, "whole-word":89, "repair-prone":89, "theophanies":89, "schizotypal":89, "non-engaged":89, "goofiness":90, "unclouded":90, "watchwords":90, "dribs":90, "suffusing":90, "warm-hearted":90, "arch-rival":90, "spritzing":90, "horse-trading":90, "reawakened":90, "temperature-controlled":90, "trend-setting":90, "revenue-producing":90, "closed-off":90, "higher-profile":90, "leapfrogged":90, "fawned":90, "sternest":90, "gibes":90, "despairs":90, "well-entrenched":90, "deviousness":90, "brown-bag":90, "problem-solver":90, "half-joking":90, "poseurs":90, "re-think":90, "dizzied":90, "foul-ups":90, "fall-off":90, "criss-crossed":90, "fat-cat":90, "sloughed":90, "wallows":90, "threedimensional":90, "deemphasize":90, "go-it-alone":90, "flower-filled":90, "sullenness":90, "incisively":90, "pratfall":90, "potently":90, "combust":90, "cleanings":90, "retread":90, "unsteadiness":90, "unscramble":90, "snake-oil":90, "similar-sized":90, "bareness":90, "thirty-odd":90, "twenty-five-year":90, "mammon":90, "nasally":90, "boulder-strewn":90, "busying":90, "dinner-table":90, "frolics":90, "namesakes":90, "hairlike":90, "reimpose":90, "palm-lined":90, "defaming":90, "doff":90, "eye-rolling":90, "ribbon-cutting":90, "wheeler-dealer":90, "guffawing":90, "lapidary":90, "gainsay":90, "timesaving":90, "smeary":90, "world-changing":90, "mischaracterized":90, "oxidizes":90, "third-ranking":90, "traumatize":90, "immodesty":90, "bumptious":90, "planed":90, "impecunious":90, "trendier":90, "topflight":90, "small-caliber":90, "sweet-talking":90, "know-it-alls":90, "reproaches":90, "esoterica":90, "passably":90, "psyching":90, "nine-time":90, "strip-mall":90, "hand-cut":90, "street-wise":90, "supermom":90, "rinky-dink":90, "barricading":90, "big-bellied":90, "pusillanimous":90, "nullifies":90, "ladder-back":90, "slaughters":90, "ungrounded":90, "sleeting":90, "titters":90, "boggle":90, "prostration":90, "fast-break":90, "bleeps":90, "feinted":90, "hand-tooled":90, "whippings":90, "predraft":90, "goalpost":90, "florescent":90, "mashes":90, "fannies":90, "evisceration":90, "anxiety-producing":90, "half-an-hour":90, "government-financed":90, "coffered":90, "ethnomusicologist":90, "mother-to-be":90, "pathbreaking":90, "straight-on":90, "anger-management":90, "reoccurring":90, "pre-condition":90, "bedposts":90, "feature-film":90, "post-up":90, "bearlike":90, "gentrifying":90, "long-life":90, "white-flowered":90, "washrooms":90, "abolishes":90, "outsmarting":90, "standoffs":90, "convulses":90, "obsolescent":90, "un-sponsored":90, "cleaned-up":90, "sidemen":90, "vaguer":90, "beholds":90, "walkouts":90, "stalemates":90, "melodically":90, "rehabbed":90, "statically":90, "deoxyribonucleic":90, "pancaked":90, "overstay":90, "purposively":90, "picture-book":90, "determinist":90, "crapper":90, "flacks":90, "four-fold":90, "windage":90, "anti-violence":90, "best-actress":90, "personal-care":90, "acanthus":90, "million-man":90, "hankies":90, "hortatory":90, "greensward":90, "uninsulated":90, "employee-owned":90, "oil-drilling":90, "abominably":90, "gut-level":90, "heiresses":90, "middlebrow":90, "conflict-resolution":90, "undistorted":90, "highest-ranked":90, "semi-independent":90, "boudin":90, "leprous":90, "untenured":90, "fudgy":90, "sonically":90, "downpayment":90, "millionths":90, "regenerates":90, "living-history":90, "high-tide":90, "all-sports":90, "musical-theater":90, "bestiary":90, "non-event":90, "eighteen-year-olds":90, "superimposition":90, "erasable":90, "grandiloquent":90, "debilitation":90, "imponderables":90, "two-a-days":90, "long-exposure":90, "windstorms":90, "plinking":90, "pullovers":90, "preplanning":90, "telegraphic":90, "gristmill":90, "plant-derived":90, "paparazzo":90, "lifespans":90, "case-study":90, "abracadabra":90, "on-course":90, "excreting":90, "fowls":90, "caging":90, "cockles":90, "sharpies":90, "spittoon":90, "sharer":90, "buy-out":90, "state-issued":90, "beachcombers":90, "hazed":90, "somnolence":90, "openwork":90, "audiocassette":90, "dramatizations":90, "bootlegged":90, "vexations":90, "caws":90, "trestles":90, "repenting":90, "quickies":90, "degradations":90, "recognises":90, "psychiatrically":90, "bandoliers":90, "great-great-grandmother":90, "handholding":90, "liquid-crystal":90, "antisubmarine":90, "ultra-low":90, "body-image":90, "minimise":90, "cabernets":90, "regularize":90, "governesses":90, "long-duration":90, "three-word":90, "flamethrowers":90, "skin-side":90, "chemotherapeutic":90, "aversions":90, "overexploited":90, "radio-collared":90, "homegirl":90, "wrongful-death":90, "warningly":90, "restiveness":90, "submariner":90, "whalebone":90, "friendlies":90, "chumming":90, "global-scale":90, "malting":90, "mother/daughter":90, "springwater":90, "ex-boyfriends":90, "farsightedness":90, "high-explosive":90, "sidings":90, "cerebrum":90, "manichaean":90, "sexual-assault":90, "rugrats":90, "second-time":90, "saxophonists":90, "go-karts":90, "free-fire":90, "anti-growth":90, "herbals":90, "corked":90, "unheroic":90, "decalogue":90, "female-dominated":90, "muslim-majority":90, "bobbin":90, "formalin":90, "post-college":90, "long-acting":90, "phenomenologically":90, "selloff":90, "spelunking":90, "roadrunners":90, "evaders":90, "straightjacket":90, "wildcatter":90, "individuated":90, "townies":90, "underutilization":90, "gaiter":90, "maltreated":90, "grackles":90, "first-course":90, "gigawatts":90, "mastiffs":90, "blue-water":90, "short-period":90, "mid-ocean":90, "unlearning":90, "ice-fishing":90, "centralism":90, "term-limit":90, "flotillas":90, "clambake":90, "trapezoid":90, "forced-air":90, "delisted":90, "boogeyman":90, "agonistic":90, "lignite":90, "indigenously":90, "defences":90, "muralists":90, "censer":90, "cottontails":90, "igniter":90, "economy-wide":90, "post-mao":90, "de-escalation":90, "disinflation":90, "left-behind":90, "quincentennial":90, "entrained":90, "three-hitter":90, "scarp":90, "ganja":90, "hittites":90, "savannahs":90, "maturational":90, "nonvisual":90, "caucus-goers":90, "discriminator":90, "patricians":90, "above-normal":90, "spermicide":90, "neurogenic":90, "tourmaline":90, "provenances":90, "ya-ya":90, "nitrites":90, "ching":90, "dah":90, "earth-crossing":90, "apiary":90, "indenture":90, "ratepayer":90, "baleen":90, "rightmost":90, "double-stranded":90, "taverna":90, "hoodoos":90, "unreinforced":90, "jordanian-palestinian":90, "pestilential":90, "supersectional":90, "oxtails":90, "sandcastle":90, "deckhands":90, "scriptorium":90, "wallaby":90, "active-matrix":90, "plasticized":90, "crasher":90, "shade-grown":90, "oarsman":90, "millipede":90, "polyvalent":90, "organophosphate":90, "chubs":90, "kike":90, "red-legged":90, "instrumentalism":90, "boomerangs":90, "abjection":90, "riflery":90, "balloonist":90, "cephalopods":90, "disease-modifying":90, "singaporeans":90, "theban":90, "automatism":90, "isoniazid":90, "self-emptying":90, "fibrinogen":90, "myocardium":90, "papyri":90, "furriers":90, "non-veterans":90, "thracian":90, "market-timing":90, "geriatricians":90, "cashless":90, "monarchic":90, "dopaminergic":90, "copolymer":90, "inuits":90, "gumballs":90, "enumerators":90, "bushmeat":90, "annulments":90, "metaphysician":90, "log-linear":90, "homonyms":90, "charisms":90, "homologues":90, "phonons":90, "four-party":90, "mendicant":90, "sulfites":90, "multiscale":90, "ethno-national":90, "anabaptist":90, "rotifers":90, "determinists":90, "introns":90, "maguey":90, "afrocentrists":90, "sino-british":90, "fullerene":90, "code-switching":90, "paddlefish":90, "whitebark":90, "braceros":90, "nonheterosexual":90, "productivist":90, "falconers":90, "gonad":90, "viatical":90, "posttraining":90, "gyroplanes":90, "gyrate":90, "blazingly":90, "decent-sized":90, "sickbed":90, "tongue-lashing":90, "browses":90, "half-lit":90, "general-interest":90, "nine-minute":90, "blowsy":90, "three-sport":90, "bacchanal":90, "first-inning":90, "latenight":90, "even-keeled":90, "hosannas":90, "bright-orange":90, "caking":90, "laze":90, "nettled":90, "totters":90, "counteracted":90, "hearkens":90, "speckle":90, "cigar-smoking":90, "restructures":90, "reinterpretations":90, "unwatchable":90, "basest":90, "scarfed":90, "retaliates":90, "appurtenances":90, "derails":90, "evocatively":90, "turncoats":90, "reconciliations":90, "proliferates":90, "knuckled":90, "tramples":90, "cotton-candy":90, "revitalizes":90, "full-frontal":90, "exorcised":90, "sniggering":90, "shabbier":90, "scrollwork":90, "sub-par":90, "pirouetting":90, "tautness":90, "enjoining":90, "ankle-high":90, "arrow-straight":90, "pinups":90, "minting":90, "lording":90, "drug-infested":90, "distrusts":90, "imposters":90, "six-shooter":90, "supergroup":90, "collated":90, "candle-lit":90, "damnably":90, "semiofficial":90, "unhooking":90, "despondently":90, "bequeathing":90, "hotel-room":90, "luminously":90, "wows":90, "christmas-tree":90, "emancipator":90, "bumpkins":90, "scarfs":90, "pay-off":90, "knick-knacks":90, "microwaved":90, "chintzy":90, "re-engage":90, "reinstitute":90, "secretively":90, "confiscatory":90, "filleted":90, "different-sized":90, "half-a-million":90, "workspaces":90, "woodcutters":90, "grabby":90, "idiosyncracies":90, "perv":90, "over-the-hill":90, "illegalities":90, "violence-prone":90, "yellow-brown":90, "veto-proof":90, "apple-cheeked":90, "evanescence":90, "discourteous":90, "glaciated":90, "glamorized":90, "hurry-up":90, "dry-erase":90, "difference-maker":90, "fraternize":90, "more-expensive":90, "just-picked":90, "junk-food":90, "uncongenial":90, "clunked":90, "re-reading":90, "mottling":90, "damndest":90, "crankiness":90, "problematized":90, "quagmires":90, "misprint":90, "romper":90, "tomfoolery":90, "brown-and-white":90, "coopted":90, "unrecoverable":90, "imploringly":90, "maters":90, "humanitarians":90, "collating":90, "overstimulation":90, "half-measures":90, "keyboarding":90, "nine-page":90, "decontaminate":90, "moisturizes":90, "set-ups":90, "late-day":90, "scorekeeper":90, "ten-point":90, "shoeboxes":90, "multi-generational":90, "automates":90, "ex-communist":90, "picayune":90, "eulogize":90, "cochairman":90, "wavelike":90, "cross-generational":90, "federal-style":90, "connoting":90, "major-party":90, "protuberance":90, "codifies":90, "four-wheelers":90, "crossbreeding":90, "prizewinner":90, "pro-nazi":90, "counterproposal":90, "maidenhair":90, "secretiveness":90, "undersigned":90, "ungenerous":90, "graybeard":90, "take-over":90, "laminating":90, "greenlight":90, "greenhorns":90, "refunding":90, "easy-listening":90, "accredit":90, "hoofprints":90, "underperformance":90, "perishes":90, "five-ten":90, "successions":90, "runneth":90, "seamed":90, "artemisia":90, "heartwood":90, "laundress":90, "interpersonally":90, "reseal":90, "grandees":90, "fired-up":90, "dry-roasted":90, "resizing":90, "antianxiety":90, "two-earner":90, "self-gratification":90, "dramedy":90, "topknot":90, "subornation":90, "gravels":90, "itchiness":90, "seedings":90, "reoccur":90, "globalist":90, "small-diameter":90, "pre-paid":90, "precis":90, "communitywide":90, "penetrations":90, "state-record":90, "unfree":90, "hispanic-american":90, "forget-me-not":90, "fundament":90, "full-strength":90, "fornicating":90, "philistinism":90, "mile-per-hour":90, "consumer-electronics":90, "dry-land":90, "millipedes":90, "tastebuds":90, "mansard":90, "adjoin":90, "ex-spouses":90, "commonness":90, "calibre":90, "space-shuttle":90, "sleepwalk":90, "miseducation":90, "skill-based":90, "squib":90, "spectrographs":90, "godmothers":90, "cottontail":90, "ball-bearing":90, "calendula":90, "dacron":90, "sinless":90, "time-release":90, "friend-of-the-court":90, "bedrolls":90, "self-defining":90, "self-conception":90, "six-nation":90, "multidimensionality":90, "lighter-skinned":90, "olive-oil":90, "eco-tourism":90, "choleric":90, "irish-americans":90, "decontextualized":90, "ungroomed":90, "low-cholesterol":90, "looky":90, "baddies":90, "pappy":90, "herbes":90, "terminologies":90, "rill":90, "posthole":90, "superfoods":90, "dildos":90, "goer":90, "irish-catholic":90, "unconverted":90, "lifework":90, "ovulate":90, "midnorthern":90, "conflict-ridden":90, "community-supported":90, "embouchure":90, "embraceable":90, "small-government":90, "humidifiers":90, "lecithin":90, "job-approval":90, "mapmaker":90, "piggies":90, "paediatrics":90, "grog":90, "theocrats":90, "optometry":90, "civil-society":90, "demonology":90, "listenership":90, "impotency":90, "belligerency":90, "par-three":90, "c-sections":90, "nanograms":90, "yodel":90, "great-nephew":90, "land-management":90, "dissonances":90, "gladiolus":90, "denture":90, "nonparticipating":90, "wader":90, "parmigiana":90, "air-popped":90, "flues":90, "reinstallation":90, "xylene":90, "biomorphic":90, "conjunctive":90, "inactivated":90, "caesura":90, "unfavourable":90, "nymphomaniac":90, "ven":90, "enrollee":90, "disk-drive":90, "convener":90, "corporate-sponsored":90, "corpuscles":90, "schistosomiasis":90, "lead-free":90, "quercetin":90, "macaroon":90, "acreages":90, "racialist":90, "toners":90, "near-surface":90, "postholes":90, "bonbon":90, "artefacts":90, "self-mastery":90, "medulla":90, "go-fast":90, "immunologists":90, "aestheticians":90, "fuck-up":90, "photo-sharing":90, "polisher":90, "silkworms":90, "chthonic":90, "fiances":90, "pre-independence":90, "carabiner":90, "bump-and-run":90, "flowchart":90, "quadriplegia":90, "relict":90, "self-monitor":90, "clinker":90, "rhinorrhea":90, "slav":90, "per-minute":90, "anti-rejection":90, "faster-than-light":90, "lats":90, "indicia":90, "cellists":90, "maxillofacial":90, "chinooks":90, "homeopath":90, "estrogen-like":90, "replicator":90, "serviceability":90, "crude-oil":90, "nonlinguistic":90, "balloonists":90, "bi-national":90, "stridor":90, "maquette":90, "nonpaying":90, "supersets":90, "workgroups":90, "snooker":90, "photomontage":90, "anti-pornography":90, "nonmagnetic":90, "office-based":90, "platted":90, "unduplicated":90, "motorhome":90, "vice-presidency":90, "multispectral":90, "spline":90, "campion":90, "mullein":90, "full-grain":90, "titre":90, "secretariats":90, "cads":90, "coprocessor":90, "flatfish":90, "woodcarvers":90, "masqueraders":90, "butterfat":90, "leafhoppers":90, "rifampin":90, "overstory":90, "antiparticles":90, "supercooled":90, "periosteum":90, "exactions":90, "proselytism":90, "principalship":90, "banknote":90, "meditator":90, "excludable":90, "stereolithography":90, "sambar":90, "pikemen":90, "bluecoats":90, "emulsified":90, "myoglobin":90, "ossetians":90, "pyroclastic":90, "chroma":90, "halogenated":90, "muscadine":90, "leghorn":90, "developmentalism":90, "transcriptional":90, "theropod":90, "do-not-call":90, "femtosecond":90, "neo-traditional":90, "mineworkers":90, "superstring":90, "dyslexics":90, "refuseniks":90, "jewish-arab":90, "uptime":90, "intervertebral":90, "raclette":90, "parallelisms":90, "tropological":90, "renormalization":90, "neorealist":90, "cultural-linguistic":90, "morpheme":90, "benthos":90, "basin-wide":90, "modifiability":90, "wavelet":90, "tercet":90, "nonadherence":90, "mucoepidermoid":90, "expectancy-value":90, "haplotypes":90, "estriol":90, "deixis":90, "arbs":90, "e-beam":90, "anole":90, "group-home":90, "pool-table":90, "yod":90, "boundary-layer":90, "low-e":90, "gametophyte":90, "trophoblast":90, "encumber":90, "grumblings":90, "despoil":90, "just-completed":90, "assuaging":90, "camera-ready":90, "festively":90, "adjudged":90, "soulfully":90, "largest-ever":90, "body-hugging":90, "devil-may-care":90, "tea-colored":90, "then-boyfriend":90, "tenderest":90, "reinsert":90, "inanity":90, "guitar-playing":90, "dispassion":90, "cross-reference":90, "high-flown":90, "fissured":90, "top-grade":90, "upstaging":90, "surliness":90, "untiring":90, "blue-veined":90, "incontrovertibly":90, "earth-shaking":90, "fudged":90, "rough-and-ready":90, "disingenuousness":90, "first-in-the-nation":90, "lipsticked":90, "unarguably":90, "trespassed":90, "clobbering":90, "bisect":90, "glom":90, "kick-started":90, "repeals":90, "suffuse":90, "smartass":90, "wild-haired":90, "amputating":90, "irreverently":90, "providentially":90, "normalizes":90, "shibboleths":90, "twice-divorced":90, "often-overlooked":90, "internalizes":90, "handpick":90, "five-term":90, "clinches":90, "numbs":90, "riotously":90, "two-month-old":90, "god-forsaken":90, "ganged":90, "selfconscious":90, "wide-mouthed":90, "wittiest":90, "stock-in-trade":90, "rat-infested":90, "rechecking":90, "prattled":90, "mustiness":90, "outfox":90, "outflanked":90, "leanness":90, "excitements":90, "colloquialism":90, "compleat":90, "schizoid":90, "sneakily":90, "sing-alongs":90, "post-coital":90, "acquainting":90, "asphyxiated":90, "chomps":90, "computer-science":90, "whirs":90, "well-aimed":90, "deducing":90, "deep-throated":90, "decoupled":90, "ninety-degree":90, "two-sport":90, "imputing":90, "end-zone":90, "enduringly":90, "spotlit":90, "under-appreciated":90, "heaven-sent":90, "septuagenarian":90, "fascinations":90, "four-piece":90, "strawberry-blond":90, "reshuffled":90, "paterfamilias":90, "german-made":90, "six-and-a-half":90, "hairstyling":90, "beachcombing":90, "foldable":90, "reoriented":90, "recanting":90, "hypocritically":90, "goofily":90, "siphons":90, "light-reflecting":90, "lightheartedly":90, "puzzler":90, "gloried":90, "usurpers":90, "scooped-out":90, "out-of-place":90, "boondoggles":90, "dishy":90, "scabbed":90, "scalped":90, "reframed":90, "forecasted":90, "fine-tooth":90, "faker":90, "finessed":90, "charmless":90, "scene-stealing":90, "trashes":90, "incompletion":90, "gaslights":90, "smooth-skinned":90, "outrageousness":90, "power-hitting":90, "anxiousness":90, "keened":90, "non-combatants":90, "round-table":90, "pigging":90, "organised":90, "problematizing":90, "sparseness":90, "valorize":90, "syncs":90, "schoolrooms":90, "bravos":90, "holdups":90, "deforms":90, "rock-ribbed":90, "white-on-white":90, "one-celled":90, "depressant":90, "all-aluminum":90, "mouthy":90, "stone-walled":90, "prefigure":90, "swaddle":90, "non-judgmental":90, "singer-actress":90, "yowling":90, "behind-the-back":90, "hirings":90, "animist":90, "diabolic":90, "uncreative":90, "jackasses":90, "o-ring":90, "sutured":90, "strife-torn":90, "stain-resistant":90, "unmeasurable":90, "overage":90, "flounces":90, "sensationalized":90, "bidden":90, "re-opened":90, "demotic":90, "presupposing":90, "fast-tracked":90, "house-passed":90, "racier":90, "shellfire":90, "malingering":90, "beatniks":90, "frost-free":90, "parkways":90, "tamper-proof":90, "split-screen":90, "flatlanders":90, "pallbearer":90, "unbeknown":90, "unanchored":90, "slumbers":90, "forty-something":90, "immutability":90, "scabies":90, "tootsies":90, "turndown":90, "open-top":90, "twanging":90, "outsells":90, "trapdoors":90, "insignias":90, "audiocassettes":90, "rationalists":90, "peer-group":90, "foretells":90, "hostelry":90, "educable":90, "chaw":90, "carpetbaggers":90, "cafeteria-style":90, "proustian":90, "agreed-on":90, "mother-son":90, "self-disciplined":90, "soft-serve":90, "pitchmen":90, "fire-roasted":90, "alley-oop":90, "taters":90, "porkpie":90, "iniquities":90, "debility":90, "cryogenically":90, "malevolently":90, "hysteric":90, "readjustments":90, "exhuming":90, "spiralling":90, "lock-in":90, "league-low":90, "mattering":90, "ploughed":90, "industry-funded":90, "gummed":90, "decriminalize":90, "single-room":90, "stratigraphy":90, "center-cut":90, "one-ounce":90, "look-out":90, "filibuster-proof":90, "warthogs":90, "tinkers":90, "configures":90, "escargot":90, "locutions":90, "wenches":90, "off-speed":90, "serenades":90, "variable-rate":90, "organise":90, "fuel-injected":90, "rowhouse":90, "yellow-eyed":90, "natural-foods":90, "nonprofessionals":90, "monger":90, "pro-immigration":90, "fifty-cent":90, "nitwits":90, "factuality":90, "streetwalkers":90, "suppository":90, "slops":90, "slipperiness":90, "half-size":90, "extra-legal":90, "pashmina":90, "sunstroke":90, "moisturized":90, "shipbuilders":90, "tanners":90, "keyholes":90, "overtimes":90, "big-market":90, "two-third":90, "cancan":90, "art-history":90, "teakwood":90, "draftsmen":90, "bipeds":90, "wetbacks":90, "andante":90, "compadres":90, "oven-safe":90, "fluorocarbon":90, "dishcloth":90, "crones":90, "multi-family":90, "sieves":90, "off-planet":90, "weatherization":90, "woodcutter":90, "conjurer":90, "shiksa":90, "regularized":90, "consigliere":90, "firehouses":90, "glassine":90, "undercard":90, "necrophilia":90, "male-centered":90, "counter-intelligence":90, "highborn":90, "dehumidifier":90, "earthwork":90, "chordal":90, "relativize":90, "driverless":90, "scrivener":90, "eavesdropper":90, "candelabrum":90, "underplayed":90, "cording":90, "flycatchers":90, "primitivist":90, "infiltrator":90, "all-defensive":90, "six-three":90, "satiation":90, "prurience":90, "gentlewoman":90, "iron-on":90, "steerable":90, "four-yard":90, "bettor":90, "mescaline":90, "kestrels":90, "commenters":90, "automaticity":90, "autopsied":90, "hot-glue":90, "first-choice":90, "downhiller":90, "gussets":90, "hyperextension":90, "contestations":90, "day-night":90, "post-structuralism":90, "sovereignties":90, "eroticized":90, "sino-japanese":90, "self-adhesive":90, "abyssal":90, "glassblowers":90, "remissions":90, "black-on-white":90, "sulfides":90, "mortuaries":90, "fullbacks":90, "tattling":90, "single-point":90, "udon":90, "ribeye":90, "cyclamen":90, "fine-scale":90, "vestal":90, "forty-ninth":90, "ten-four":90, "mapper":90, "narthex":90, "wifey":90, "subdiscipline":90, "subdural":90, "pet-friendly":90, "inferiorly":90, "tamarack":90, "counter-rotating":90, "tear-gas":90, "quadrupeds":90, "stouts":90, "agonist":90, "scapes":90, "hematologic":90, "routinization":90, "nonpracticing":90, "tailbacks":90, "hemolytic":90, "non-citizen":90, "immorally":90, "klezmer":90, "arborvitae":90, "trollers":90, "asphyxia":90, "sight-read":90, "gingered":90, "mantilla":90, "okinawan":90, "driveshaft":90, "rot-resistant":90, "putti":90, "student-to-student":90, "off-budget":90, "pro-nafta":90, "legionnaire":90, "trike":90, "heterosexist":90, "seismometers":90, "leukocytes":90, "flyways":90, "chitlins":90, "erythematous":90, "biotin":90, "nog":90, "longhouses":90, "denial-of-service":90, "neocortex":90, "click-click":90, "small-caps":90, "paleoanthropologists":90, "duckweed":90, "imposture":90, "bowrider":90, "rubrum":90, "transnationalization":90, "shore-based":90, "dieldrin":90, "examinees":90, "crossbars":90, "benchrest":90, "shareholding":90, "sidespin":90, "rowan":90, "chuckwagon":90, "dispersant":90, "restyled":90, "speech-recognition":90, "single-country":90, "tri-tip":90, "ulema":90, "electro-magnetic":90, "traffic-related":90, "bobble":90, "birdwatcher":90, "burkean":90, "cerise":90, "johannine":90, "unbelted":90, "subscript":90, "lamarckian":90, "monetarists":90, "oxalate":90, "precognition":90, "endives":90, "interruptible":90, "prereading":90, "non-living":90, "chloroplasts":90, "mid-cabin":90, "sahelian":90, "unaligned":90, "realises":90, "liming":90, "anti-matter":90, "nontimber":90, "haversack":90, "fibrils":90, "baryons":90, "jacobite":90, "tumescence":90, "backdating":90, "catenary":90, "goniometer":90, "esophagitis":90, "tuberosity":90, "carbon-carbon":90, "gravitational-wave":90, "metallicity":90, "self-enhancing":90, "rootkits":90, "moas":90, "weakfish":90, "diatom":90, "aye-aye":90, "ethnonational":90, "tibias":90, "hypostasis":90, "ridleys":90, "trotline":90, "random-effects":90, "atman":90, "nonabused":90, "actives":90, "self-categorization":90, "alkyds":90, "stereographs":90, "dimer":90, "dioxin-like":90, "past-year":90, "murrelets":90, "ectomycorrhizal":90, "adverbials":90, "russian-speakers":90, "tectorial":90, "well-hidden":90, "ineptly":90, "raiment":90, "extinguishes":90, "imbecilic":90, "forsworn":90, "outlasting":90, "smokiness":90, "joviality":90, "acquitting":90, "offseasons":90, "pouts":90, "bogging":90, "undreamed":90, "shrivels":90, "underplay":90, "tenderhearted":90, "gallivanting":90, "over-sized":90, "now-empty":90, "hell-raising":90, "chumps":90, "well-orchestrated":90, "boisterously":90, "neon-lit":90, "pilfer":90, "lusterless":90, "multivolume":90, "scissoring":90, "caved-in":90, "spurns":90, "unsought":90, "twenty-some":90, "menstruate":90, "love-struck":90, "folded-up":90, "iron-fisted":90, "majorly":90, "grass-covered":90, "finagle":90, "e-form":90, "less-than-stellar":90, "strafe":90, "induct":90, "frittered":90, "confusedly":90, "desensitizing":90, "runty":90, "unimposing":90, "coquettishly":90, "prig":90, "oohed":90, "brush-off":90, "fussiness":90, "occuring":90, "loose-knit":90, "spoofs":90, "commingle":90, "sweetish":90, "victoriously":90, "plumps":90, "end-all":90, "flannels":90, "martinet":90, "snidely":90, "transmuting":90, "co-writing":90, "over-the-shoulder":90, "once-popular":90, "nosey":90, "redshirted":90, "lolls":90, "flouts":90, "garden-fresh":90, "whiplike":90, "windmilling":90, "shoot-'em-up":90, "uncurling":90, "objectifies":90, "entrusts":90, "balkanized":90, "encases":90, "husbanding":90, "jollies":90, "complicitous":90, "disentangled":90, "disgruntlement":90, "dark-horse":90, "jesting":90, "four-pound":90, "bad-ass":90, "cable-television":90, "muckraker":90, "pitter-patter":90, "problematically":90, "extrude":90, "soundscape":90, "unnameable":90, "pyramid-shaped":90, "entertainingly":90, "blinkers":90, "rootlessness":90, "dwarfish":90, "upper-right":90, "rousted":90, "wadded-up":90, "unselfishly":90, "murkiness":90, "lamination":90, "submissively":90, "basketful":90, "roadwork":90, "quarter-size":90, "untidiness":90, "refit":90, "refitting":90, "slacked":90, "class-conscious":90, "cut-outs":90, "churchillian":90, "phone-in":90, "one-eighty":90, "malnourishment":90, "bendable":90, "cocktail-party":90, "water-packed":90, "overusing":90, "quaffing":90, "collate":90, "allots":90, "breath-taking":90, "moustaches":90, "mementoes":90, "tacticians":90, "streetside":90, "childproof":90, "dry-goods":90, "regattas":90, "molehill":90, "mutes":90, "niggardly":90, "flapjacks":90, "religious-based":90, "single-handed":90, "weekend-long":90, "maligning":90, "redrew":90, "formfitting":90, "sulkily":90, "cloudlike":90, "game-playing":90, "one-touch":90, "microcosmic":90, "anomalously":90, "evilly":90, "double-teams":90, "undresses":90, "thin-walled":90, "low-ball":90, "inhumanly":90, "underlain":90, "two-week-old":90, "ruses":90, "juleps":90, "uncoated":90, "froufrou":90, "on-mountain":90, "on-scene":90, "profoundest":90, "affiliating":90, "horsewoman":90, "puddling":90, "presidentially":90, "ravish":90, "high-heel":90, "apartheid-era":90, "manhunts":90, "nutrient-poor":90, "prejudging":90, "universalize":90, "mopeds":90, "courtships":90, "beachheads":90, "factoid":90, "unclassifiable":90, "eyestrain":90, "re-formed":90, "ticket-holders":90, "peacoat":90, "bug-free":90, "tranquilizing":90, "arrowed":90, "caddied":90, "self-recognition":90, "spectrums":90, "keystones":90, "military-related":90, "headstart":90, "die-cast":90, "whup":90, "camelback":90, "drive-up":90, "asperity":90, "transoms":90, "repossession":90, "aahing":90, "deified":90, "nightingales":90, "foyers":90, "ejaculated":90, "offside":90, "papists":90, "tattletale":90, "damage-control":90, "mariposa":90, "mini-skirt":90, "water-saving":90, "bling-bling":90, "left-wingers":90, "see-saw":90, "awaking":90, "warmonger":90, "sonorities":90, "open-plan":90, "bigamist":90, "anxiety-provoking":90, "historicize":90, "nonrational":90, "europeanized":90, "drainer":90, "ex-employees":90, "chambermaids":90, "pigtailed":90, "out-of-staters":90, "spanner":90, "serous":90, "random-access":90, "hematology":90, "horizontals":90, "virtuously":90, "moraines":90, "cyclonic":90, "filmstrips":90, "tarpaper":90, "middle-schoolers":90, "flus":90, "wolfs":90, "butyl":90, "motorcades":90, "annotate":90, "freeboard":90, "culottes":90, "incarnates":90, "wind-tunnel":90, "anti-submarine":90, "industry-sponsored":90, "transmittal":90, "rapporteur":90, "annexations":90, "side-effect":90, "commonalties":90, "ecumenically":90, "starbursts":90, "underbody":90, "unexcavated":90, "birdman":90, "one-parent":90, "prudery":90, "red-rock":90, "red-zone":90, "nitrogen-rich":90, "brilliancy":90, "appliques":90, "edutainment":90, "family-related":90, "columbines":90, "syntactically":90, "soother":90, "cess":90, "homeplace":90, "seaplanes":90, "brain-imaging":90, "wheelers":90, "eliminator":90, "backlashes":90, "glassed":90, "semiskilled":90, "mana":90, "mountain-biking":90, "blondie":90, "inexpressive":90, "co-ordination":90, "blowhole":90, "flow-through":90, "headwaiter":90, "keypads":90, "non-mainstream":90, "stir-frying":90, "stepsons":90, "decontaminated":90, "furlongs":90, "track-and-field":90, "overwrite":90, "groundlings":90, "ouzo":90, "weapons-related":90, "inter-racial":90, "biostatistics":90, "age-mates":90, "downhillers":90, "first-world":90, "biodegrade":90, "interjections":90, "redaction":90, "rosacea":90, "post-wwii":90, "copperheads":90, "gearhead":90, "unfixed":90, "large-sized":90, "cancer-related":90, "lading":90, "gnomic":90, "locked-in":90, "degreaser":90, "preelection":90, "phenobarbital":90, "non-organic":90, "reagent":90, "corporatization":90, "fatties":90, "freeskiing":90, "acting-out":90, "sportfish":90, "satanists":90, "sarge":90, "rheumatologists":90, "weaponized":90, "treasurers":90, "lianas":90, "open-field":90, "guv":90, "paresis":90, "catamarans":90, "presets":90, "population-level":90, "webby":90, "bendy":90, "ethnic/racial":90, "genies":90, "spectating":90, "t-bar":90, "freights":90, "heavy-lift":90, "cunnilingus":90, "joint-stock":90, "exteriority":90, "keynesianism":90, "mathematic":90, "monocultures":90, "congregant":90, "noblewomen":90, "mother-to-child":90, "isomorphic":90, "flatbreads":90, "fingerboard":90, "oxygen-carrying":90, "pietism":90, "topspin":90, "magus":90, "protractor":90, "crankarm":90, "handcarts":90, "asteroidal":90, "vector-borne":90, "suggestibility":90, "flagstick":90, "madisonian":90, "condensers":90, "burnet":90, "pre-invasion":90, "chippers":90, "rank-order":90, "liberal-democratic":90, "atrophic":90, "susceptibilities":90, "effing":90, "smallholder":90, "shorebird":90, "rastafarians":90, "glassmakers":90, "push-off":90, "boatlift":90, "sea-lanes":90, "space-station":90, "brownfield":90, "copayment":90, "portobellos":90, "tidally":90, "octet":90, "beignet":90, "cytosine":90, "doit":90, "rads":90, "longboat":90, "screensaver":90, "sex-offender":90, "creolization":90, "adulteration":90, "inoculum":90, "prefectural":90, "superoxide":90, "catacomb":90, "supportiveness":90, "lavage":90, "nursemaids":90, "postmistress":90, "fall-line":90, "reviewable":90, "strakes":90, "dominants":90, "evolutionism":90, "misbehaviors":90, "nephropathy":90, "blackbody":90, "flowcharts":90, "rightfield":90, "remora":90, "extraterritoriality":90, "chondrite":90, "venturers":90, "intransitive":90, "canners":90, "chartplotter":90, "density-dependent":90, "electron-beam":90, "diarists":90, "dissipative":90, "injera":90, "petrous":90, "ecofeminist":90, "thralldom":90, "take-back":90, "power-law":90, "double-entry":90, "bioassay":90, "popery":90, "t-scores":90, "multinomial":90, "onsets":90, "laryngectomy":90, "exorcists":90, "sablefish":90, "nanostructured":90, "corms":90, "axonal":90, "parities":90, "sailplane":90, "baryon":90, "waterproof-breathable":90, "metaplasia":90, "exemplarity":90, "invariants":90, "stylebook":90, "tufa":90, "fine-structure":90, "peer-mediated":90, "cognitivists":90, "re-signed":90, "parasail":90, "xenotransplantation":90, "protein-coding":90, "butadiene":90, "fishfinders":90, "variates":90, "antialiasing":90, "hutterites":90, "glyceryl":90, "titres":90, "oviparous":90, "paraeducator":90, "hyper-responsiveness":90, "betweenness":90, "osteoarthritic":90, "heteronomy":90, "stayer":90, "eco-economy":90, "henge":90, "mendicancy":90, "self-ownership":90, "profit-based":90, "myoepithelial":90, "belaboring":90, "knock-kneed":90, "quick-thinking":90, "rechristened":90, "tightlipped":90, "speediest":90, "khaki-colored":90, "best-equipped":90, "brocades":90, "ragging":90, "politesse":90, "whiled":90, "whiling":90, "unpracticed":90, "meltingly":90, "baller":90, "proselytizers":90, "flashpoints":90, "honeycombed":90, "mothballed":90, "now-retired":90, "satiate":90, "thenceforth":90, "cajoles":90, "money-raising":90, "open-sided":90, "third-leading":90, "discoursing":90, "luxuriated":90, "buoying":90, "battle-weary":90, "bopped":90, "merrymaking":90, "lambent":90, "jampacked":90, "top-three":90, "out-of-the-ordinary":90, "out-of-favor":90, "procreating":90, "late-arriving":90, "apprenticing":90, "caprices":90, "bubble-gum":90, "head-spinning":90, "job-creating":90, "newsweekly":90, "robin's-egg":90, "shills":90, "ignoramus":90, "influxes":90, "cutup":90, "warhorses":90, "cloak-and-dagger":90, "write-ups":90, "goopy":90, "indistinctly":90, "olympic-sized":90, "time-intensive":90, "twinkles":90, "depreciating":90, "deprecating":90, "commiserated":90, "browbeaten":90, "kitchenettes":90, "jerry-built":90, "feistiness":90, "mellows":90, "near-vertical":90, "do-good":90, "cluelessness":90, "thick-walled":90, "evincing":90, "dourly":90, "verbalized":90, "past-due":90, "gangling":90, "blotched":90, "scruple":90, "singalong":90, "recollects":90, "highest-priced":90, "leather-covered":90, "fender-bender":90, "oversell":90, "abbreviate":90, "career-minded":90, "consummately":90, "colloquialisms":90, "outdoing":90, "talismanic":90, "truces":90, "lumpen":90, "pine-covered":90, "medium-length":90, "vacuity":90, "high-rent":90, "ultra-modern":90, "crustless":90, "electric-blue":90, "half-page":90, "porker":90, "soulmates":90, "near-freezing":90, "bad-mouth":90, "cached":90, "muss":90, "best-paid":90, "twice-monthly":90, "storm-tossed":90, "snookered":90, "propagandizing":90, "recalculate":90, "midstride":90, "blinkered":90, "unpeopled":90, "fourth-best":90, "plain-vanilla":90, "re-educate":90, "lowest-rated":90, "smart-aleck":90, "government-guaranteed":90, "satirically":90, "sauced":90, "cowpoke":90, "dinner-party":90, "sun-browned":90, "nonpareil":90, "gashed":90, "clannish":90, "retouched":90, "discolorations":90, "eco-conscious":90, "foreign-made":90, "low-stress":90, "tooted":90, "stuccoed":90, "swashbuckler":90, "peregrinations":90, "multipronged":90, "sidesaddle":90, "tax-advantaged":90, "vouching":90, "earned-income":90, "hemorrhaged":90, "insensate":90, "illogically":90, "kneads":90, "professionalized":90, "helmed":90, "roped-off":90, "nasties":90, "spread-eagle":90, "wife-beater":90, "market-share":90, "pro-democratic":90, "pyres":90, "postage-paid":90, "dressmakers":90, "coquette":90, "whitewashing":90, "reordered":90, "ennoble":90, "concision":90, "semitropical":90, "reamed":90, "nemeses":90, "hard-throwing":90, "metabolizes":90, "sawn":90, "obfuscating":90, "relocates":90, "hand-knit":90, "fatefully":90, "forswear":90, "ghettoes":90, "chocolaty":90, "recombining":90, "one-semester":90, "solider":90, "rudest":90, "lead-off":90, "shackling":90, "medium-weight":90, "hard-shell":90, "mud-walled":90, "pickoff":90, "big-deal":90, "breasted":90, "unrealizable":90, "darker-skinned":90, "twentyfour":90, "streetwalker":90, "racketeers":90, "propertied":90, "braziers":90, "countersuit":90, "trust-fund":90, "kickstand":90, "large-diameter":90, "western-educated":90, "white-out":90, "well-priced":90, "seventh-floor":90, "irremediably":90, "satiated":90, "helium-filled":90, "intrasquad":90, "live-fire":90, "get-out":90, "sparser":90, "latinate":90, "disbursing":90, "hot-rod":90, "fishtail":90, "hammy":90, "jimmies":90, "hubristic":90, "inseminated":90, "double-figure":90, "beaus":90, "mineralogical":90, "seven-eighths":90, "test-fired":90, "white-supremacist":90, "white-dominated":90, "white-washed":90, "wrong-doing":90, "stouter":90, "air-filled":90, "current-day":90, "pre-law":90, "reoccurrence":90, "housemade":90, "rediscovers":90, "whorehouses":90, "disrobed":90, "easy-care":90, "stepsisters":90, "tyrolean":90, "anti-british":90, "guavas":90, "tranquilize":90, "maximums":90, "weed-free":90, "whetting":90, "coagulated":90, "cable-knit":90, "freethinking":90, "post-impressionist":90, "gourmands":90, "cordite":90, "crumpets":90, "half-wit":90, "ringtone":90, "whistle-blowing":90, "tars":90, "barkers":90, "forty-fifth":90, "ga-ga":90, "high-bandwidth":90, "orientated":90, "editorialist":90, "carbon-rich":90, "batboy":90, "open-mike":90, "ziplock":90, "saltbox":90, "specialised":90, "custom-fit":90, "goofs":90, "single-lens":90, "rehabs":90, "freesia":90, "eighth-century":90, "grey-haired":90, "alimentary":90, "deductively":90, "full-spectrum":90, "mid-seventeenth":90, "dual-career":90, "pone":90, "unconstitutionality":90, "hickory-smoked":90, "space-related":90, "superiorly":90, "group-oriented":90, "menorahs":90, "gearheads":90, "hypoglycemic":90, "semicolon":90, "guidepost":90, "figure-skating":90, "essentializing":90, "churchly":90, "theirselves":90, "pathologizing":90, "vote-counting":90, "early-retirement":90, "outtake":90, "cribbage":90, "grippers":90, "perceptiveness":90, "thruway":90, "pressure-sensitive":90, "dreamtime":90, "reconditioning":90, "moistens":90, "neuro":90, "lip-syncing":90, "keister":90, "vodkas":90, "stamen":90, "mineralogy":90, "half-dollar":90, "pre-planned":90, "phantasmagoria":90, "saltshaker":90, "sugar-cane":90, "intercellular":90, "cross-tabulations":90, "risk-adjusted":90, "demystification":90, "re-arrested":90, "pearl-handled":90, "muslim-christian":90, "unconventionality":90, "orange-colored":90, "anti-ship":90, "irishness":90, "wide-leg":90, "middle-distance":90, "least-cost":90, "self-reference":90, "carbonic":90, "blading":90, "plonk":90, "vining":90, "three-masted":90, "milepost":90, "post-consumer":90, "landlines":90, "baldy":90, "kilotons":90, "hyphens":90, "mainstage":90, "oscar-worthy":90, "pre-teens":90, "honey-glazed":90, "urbanizing":90, "manias":90, "non-disclosure":90, "aporia":90, "atomizer":90, "hot-pepper":90, "masculinization":90, "law-related":90, "sphericity":90, "wanna-bes":90, "palimony":90, "snowdrops":90, "switcher":90, "cirques":90, "four-hitter":90, "centurions":90, "self-administer":90, "existentialists":90, "spirea":90, "one-button":90, "minimus":90, "crankarms":90, "grammarians":90, "state-federal":90, "narcotraffickers":90, "parchments":90, "abridgment":90, "nonfederal":90, "captioning":90, "topographies":90, "car-based":90, "rounders":90, "captive-bred":90, "lithographed":90, "sun-up":90, "manicotti":90, "uppercase":90, "salesroom":90, "lap-top":90, "fetishization":90, "liberatory":90, "peace-building":90, "transaxle":90, "sealift":90, "sheepdogs":90, "commoditization":90, "tellings":90, "shiso":90, "abbeys":90, "fencers":90, "progressivity":90, "harmonicas":90, "suspiciousness":90, "quadrature":90, "bobbins":90, "proprioception":90, "developing-country":90, "hypnotherapist":90, "bottle-fed":90, "burkas":90, "heliport":90, "slanders":90, "surfactants":90, "farrier":90, "after-action":90, "greenies":90, "neomycin":90, "biphasic":90, "megapixel":90, "gingersnap":90, "impounding":90, "adenopathy":90, "linesman":90, "harmonium":90, "intubate":90, "cloud-based":90, "cosine":90, "two-component":90, "skycap":90, "familiarized":90, "lilliputians":90, "orthodontic":90, "motile":90, "bondsmen":90, "ecotourist":90, "free-style":90, "superscript":90, "claymation":90, "veld":90, "oxidants":90, "aplastic":90, "silverback":90, "stationmaster":90, "cordgrass":90, "spiritedness":90, "hutches":90, "reamers":90, "pre-natal":90, "dispersions":90, "phylloxera":90, "percale":90, "contractile":90, "self-inflating":90, "bristlecone":90, "flatboat":90, "craniotomy":90, "grandaddy":90, "mandalas":90, "naphthalene":90, "jessamine":90, "anaphora":90, "bey":90, "phylogenetically":90, "lifeworld":90, "glottic":90, "commissaries":90, "eosinophilia":90, "coronagraph":90, "spectroscope":90, "avascular":90, "croker":90, "copybook":90, "team-teaching":90, "enmeshment":90, "ego-oriented":90, "ferromagnetic":90, "egalitarians":90, "low-vision":90, "aquaria":90, "process-product":90, "reconfigurable":90, "seronegative":90, "agroecosystems":90, "goalkeepers":90, "moldovan":90, "focalizer":90, "ofloxacin":90, "sucralose":90, "consequentialist":90, "quinolones":90, "ecocentric":90, "platen":90, "ichor":90, "endosperm":90, "dut":90, "concessioners":90, "bacteriologic":90, "presettlement":90, "pre-exercise":90, "enuresis":90, "prioress":90, "transitivity":90, "magnetron":90, "zidovudine":90, "kolkhoz":90, "broker-dealers":90, "overexcitability":90, "apoptotic":90, "telecosm":90, "diapause":90, "lifesuit":90, "patient-focused":90, "piriform":90, "consociationalism":90, "mycoplasma":90, "fucken":90, "teraflops":90, "dependence-independence":90, "adventism":90, "progestagens":90, "derivational":90, "ivory-bill":90, "brasscasting":90, "shipworms":90, "gruesomely":91, "boyish-looking":91, "militates":91, "rhapsodized":91, "crushingly":91, "unhinge":91, "fire-and-brimstone":91, "mud-colored":91, "to-die-for":91, "seesawing":91, "often-cited":91, "new-born":91, "girlishly":91, "twice-yearly":91, "regurgitated":91, "low-rated":91, "three-block":91, "out-of-shape":91, "forty-five-year-old":91, "park-like":91, "money-maker":91, "hyped-up":91, "bombards":91, "dabbler":91, "forecloses":91, "horrifies":91, "open-hearted":91, "retied":91, "unworried":91, "fluster":91, "confreres":91, "effacing":91, "jelled":91, "geniality":91, "awardwinning":91, "cinematically":91, "half-conscious":91, "innovatively":91, "polarizes":91, "well-taken":91, "warded":91, "defensive-minded":91, "hundred-foot":91, "re-enacted":91, "bivouacked":91, "touch-and-go":91, "splaying":91, "royal-blue":91, "misaligned":91, "much-debated":91, "foppish":91, "double-checking":91, "appalls":91, "bright-blue":91, "good-government":91, "good-guy":91, "summer-long":91, "unshaved":91, "screwups":91, "untypical":91, "fortifies":91, "unbothered":91, "top-scoring":91, "self-justifying":91, "paeans":91, "obliviously":91, "regurgitating":91, "hiccuping":91, "newly-elected":91, "quailed":91, "jawboning":91, "high-mountain":91, "stymies":91, "peacenik":91, "overstressed":91, "half-listening":91, "well-coiffed":91, "chocolatey":91, "flappers":91, "easy-to-find":91, "suggestiveness":91, "tightfisted":91, "vine-ripened":91, "self-parody":91, "squirmy":91, "regales":91, "closed-minded":91, "culls":91, "declamatory":91, "sangfroid":91, "husked":91, "high-stepping":91, "outdoes":91, "perseveres":91, "prances":91, "bloodstreams":91, "eight-lane":91, "pejoratively":91, "saber-rattling":91, "wall-size":91, "strewing":91, "worst-performing":91, "jabber":91, "equivocate":91, "endears":91, "douses":91, "canary-yellow":91, "ginormous":91, "fast-flowing":91, "eddied":91, "street-side":91, "revved-up":91, "editorialize":91, "threadlike":91, "utile":91, "reconfigures":91, "repetitiveness":91, "echoey":91, "family-size":91, "unshaded":91, "profit-and-loss":91, "classic-rock":91, "illegitimately":91, "scatterbrained":91, "reorganizes":91, "post-punk":91, "inanely":91, "afterimage":91, "protuberant":91, "homesteaded":91, "warty":91, "stepdaughters":91, "self-disgust":91, "axing":91, "workbenches":91, "lemon-yellow":91, "rockier":91, "northeasterly":91, "fifth-ranked":91, "interdicting":91, "light-footed":91, "carry-over":91, "eggheads":91, "desegregating":91, "sublimated":91, "reoccupation":91, "hold-up":91, "canoodling":91, "proficiently":91, "planked":91, "boor":91, "scandalize":91, "dreamboat":91, "moviemaker":91, "number-three":91, "deceits":91, "unpredicted":91, "thirty-six-year-old":91, "intelligibly":91, "shamelessness":91, "underpopulated":91, "deathless":91, "nuking":91, "emasculate":91, "tearjerker":91, "toreador":91, "weekenders":91, "withal":91, "scriptwriters":91, "two-fifty":91, "greasepaint":91, "needle-nose":91, "mix-ups":91, "blood-thinning":91, "cruddy":91, "paramours":91, "knockers":91, "black-framed":91, "trainable":91, "skin-to-skin":91, "lockjaw":91, "franco-american":91, "blackly":91, "schemers":91, "second-fastest":91, "speed-dial":91, "league-wide":91, "just-right":91, "big-business":91, "lasciviously":91, "crawdads":91, "bleats":91, "post-feminist":91, "border-crossing":91, "bootlegs":91, "pugilistic":91, "non-productive":91, "impetuously":91, "casebook":91, "voluptuousness":91, "vitiate":91, "eye-witness":91, "semi-retirement":91, "whole-milk":91, "after-shave":91, "beauticians":91, "fruit-flavored":91, "satins":91, "policy-oriented":91, "straitjackets":91, "biotechnologies":91, "southwesterly":91, "postcoital":91, "recapitalize":91, "oven-baked":91, "libeled":91, "intimidator":91, "municipally":91, "system-level":91, "instructionally":91, "roughage":91, "three-hit":91, "drafter":91, "callbacks":91, "blusher":91, "four-seat":91, "glaucous":91, "hardbound":91, "mini-mall":91, "suavely":91, "nine-inning":91, "floozy":91, "cornflowers":91, "carjacked":91, "scherzo":91, "expressivity":91, "blackheads":91, "higher-ranking":91, "higher-cost":91, "fattier":91, "tun":91, "paradises":91, "anti-russian":91, "pow-wow":91, "non-federal":91, "heavily-armed":91, "marbling":91, "safety-net":91, "munition":91, "plenipotentiary":91, "fugues":91, "retentive":91, "oligarchies":91, "fiats":91, "risk-reduction":91, "fadeaway":91, "prowlers":91, "amperage":91, "washdown":91, "seven-yard":91, "cesspools":91, "abridgement":91, "hammerlock":91, "abysses":91, "four-leaf":91, "single-purpose":91, "tubas":91, "heraldry":91, "bifocal":91, "armatures":91, "dilapidation":91, "harlots":91, "jonquils":91, "molder":91, "free-agency":91, "co-ordinator":91, "minicamps":91, "humaneness":91, "pugnacity":91, "slow-roasted":91, "newspeople":91, "hoppy":91, "misclassified":91, "avow":91, "air-breathing":91, "tousles":91, "waste-disposal":91, "masturbates":91, "thumbprints":91, "doughboys":91, "half-sisters":91, "electroencephalogram":91, "tracksuit":91, "nonmarket":91, "prostates":91, "non-europeans":91, "confederated":91, "lefts":91, "fatalist":91, "asiago":91, "sunder":91, "typesetter":91, "invalidity":91, "hybridize":91, "morphologies":91, "somatization":91, "ruffs":91, "nonwestern":91, "byelorussian":91, "mulberries":91, "chorales":91, "actualizing":91, "banes":91, "pinyon":91, "cacciatore":91, "darkies":91, "equipments":91, "extrusions":91, "flyswatter":91, "trenching":91, "chatroom":91, "abovementioned":91, "dazzler":91, "androstenedione":91, "afterworld":91, "hairpieces":91, "pasturage":91, "paleoanthropologist":91, "woollen":91, "nonmusic":91, "forebrain":91, "bonking":91, "doubleness":91, "dementias":91, "peopling":91, "anti-narcotics":91, "literalists":91, "bacon-wrapped":91, "shoreside":91, "trimesters":91, "co-authoring":91, "novenas":91, "belladonna":91, "microcassette":91, "all-access":91, "limited-access":91, "canvassers":91, "fiddlehead":91, "potentiometer":91, "fishpond":91, "splines":91, "electromagnet":91, "truing":91, "noetic":91, "figurations":91, "waterboy":91, "systematization":91, "ransoms":91, "retouch":91, "alveoli":91, "fieldhouse":91, "ladies-in-waiting":91, "single-stage":91, "monographic":91, "resegregation":91, "mimetically":91, "blackflies":91, "carnitas":91, "crabapples":91, "sandblasted":91, "gas-giant":91, "mukhabarat":91, "shelf-stable":91, "engorgement":91, "ha-ha-ha":91, "unvaccinated":91, "boing":91, "tarsal":91, "nasogastric":91, "boucle":91, "courseware":91, "time-based":91, "catecholamines":91, "silverfish":91, "staters":91, "other-directed":91, "pickaxe":91, "nudists":91, "fiefs":91, "parasitical":91, "recitative":91, "skin-cancer":91, "recidivists":91, "nacelle":91, "toroidal":91, "transfused":91, "memorialization":91, "sub-basement":91, "ephemerality":91, "polypoid":91, "fluorine":91, "metaphysic":91, "homebrew":91, "circassian":91, "man-eaters":91, "pat-downs":91, "electrolytic":91, "volcanologists":91, "sexting":91, "valences":91, "man-size":91, "shuttlecock":91, "non-zero":91, "skyglow":91, "wi-fi":91, "brasher":91, "clostridium":91, "fenceline":91, "occulted":91, "quantized":91, "flywheels":91, "ex-smokers":91, "replicators":91, "pantothenic":91, "nondiabetic":91, "bilateralism":91, "deflectors":91, "looked-after":91, "waveguides":91, "horsemeat":91, "trefoil":91, "amma":91, "kerb":91, "tubercle":91, "free-time":91, "franchisers":91, "middle-ear":91, "excessiveness":91, "commensurable":91, "polycrystalline":91, "content-area":91, "monotherapy":91, "dysregulation":91, "major-general":91, "zoroastrians":91, "emulator":91, "fishmeal":91, "macrophage":91, "flowmeters":91, "lessor":91, "crania":91, "sutra":91, "high-tensile":91, "sulcus":91, "koinonia":91, "travois":91, "canids":91, "oil-spill":91, "parthians":91, "lesbian/gay":91, "osteosarcoma":91, "multipartyism":91, "seraglio":91, "mycelium":91, "segmentary":91, "spandrels":91, "plats":91, "anti-judaism":91, "appreciators":91, "olivine":91, "rock-art":91, "resampling":91, "german-polish":91, "pneumothorax":91, "sacrality":91, "elaborative":91, "difference-makers":91, "griffon":91, "meningioma":91, "area-based":91, "firstborns":91, "meridional":91, "publicness":91, "bunco":91, "keelboat":91, "conspecifics":91, "civets":91, "vaporetto":91, "scrying":91, "monopoles":91, "near-field":91, "pedicle":91, "semiclassical":91, "quark-gluon":91, "clade":91, "price-level":91, "isokinetic":91, "biospherians":91, "locoregional":91, "genome-wide":91, "ecopsychology":91, "astrocytes":91, "issues-centered":91, "metaleptic":91, "neo-authoritarianism":91, "whalemen":91, "resolvers":91, "tonging":91, "prosopopoeia":91, "polymorphs":91, "much-admired":91, "tolerantly":91, "retitled":91, "retailed":91, "anybodys":91, "fun-house":91, "buoyantly":91, "three-foot-long":91, "serious-looking":91, "slow-speed":91, "steamiest":91, "ritualistically":91, "kid-size":91, "highpitched":91, "re-emerges":91, "defecating":91, "super-size":91, "narrow-mindedness":91, "overmuch":91, "now-legendary":91, "empathizes":91, "emoting":91, "emboldening":91, "cut-throat":91, "rag-tag":91, "thirtyish":91, "darnedest":91, "criss-crossing":91, "machine-gunned":91, "funkier":91, "ne'er-do-wells":91, "let-up":91, "backslide":91, "onslaughts":91, "disallows":91, "fuss-free":91, "hobnobbed":91, "deducts":91, "waistbands":91, "well-accepted":91, "fulllength":91, "primp":91, "clammed":91, "inveighed":91, "squinched":91, "skin-deep":91, "ruddy-faced":91, "presaging":91, "business-size":91, "blackens":91, "excitingly":91, "perspicacity":91, "prognosticator":91, "needle-sharp":91, "grease-stained":91, "flower-print":91, "festoon":91, "festers":91, "predetermine":91, "once-mighty":91, "damply":91, "misnamed":91, "superhot":91, "under-funded":91, "soul-stirring":91, "switchboards":91, "reinvigoration":91, "low-powered":91, "half-smoked":91, "inhabitable":91, "hoo-ha":91, "mint-green":91, "funnel-shaped":91, "fix-up":91, "impregnation":91, "chewed-up":91, "suppurating":91, "infrequency":91, "infuriatingly":91, "country-by-country":91, "well-meant":91, "white-walled":91, "seven-person":91, "warmhearted":91, "eminences":91, "beatifically":91, "then-chief":91, "time-traveling":91, "snoozed":91, "truncate":91, "leeching":91, "leers":91, "heartiest":91, "hawing":91, "hundred-pound":91, "lower-wage":91, "carrot-and-stick":91, "drearily":91, "synonymously":91, "claw-footed":91, "refracts":91, "quarterbacked":91, "scary-looking":91, "taxpayer-supported":91, "nutrient-dense":91, "twenty-pound":91, "waggle":91, "sexily":91, "foremothers":91, "foreign-based":91, "paid-for":91, "pillowed":91, "pop-cultural":91, "even-par":91, "luxuriantly":91, "planetwide":91, "record-company":91, "entreat":91, "close-by":91, "placeholder":91, "reinstituting":91, "sublimating":91, "midriffs":91, "mazelike":91, "pre-cut":91, "recency":91, "belter":91, "security-conscious":91, "secularize":91, "super-duper":91, "softspoken":91, "ear-to-ear":91, "fruited":91, "rose-tinted":91, "mothers-in-law":91, "seven-course":91, "salt-water":91, "country-and-western":91, "cutaways":91, "pointy-toed":91, "four-tenths":91, "fifteen-foot":91, "detractor":91, "sleekness":91, "mispronounce":91, "constrictive":91, "overbooked":91, "redound":91, "restarts":91, "camouflages":91, "strike-shortened":91, "window-dressing":91, "value-neutral":91, "great-grandchild":91, "de-stress":91, "promisingly":91, "garnishing":91, "black-robed":91, "truants":91, "costarred":91, "equalled":91, "blank-faced":91, "rashness":91, "trance-like":91, "reprocessed":91, "service-based":91, "accessorizing":91, "pellucid":91, "walkup":91, "wherefores":91, "stagecoaches":91, "shoot-outs":91, "shoplifted":91, "cuppa":91, "redesigns":91, "circumscribes":91, "misreads":91, "ocean-view":91, "pro-saddam":91, "tenting":91, "unhittable":91, "lace-trimmed":91, "overstocked":91, "abscond":91, "pachyderm":91, "heat-loving":91, "anti-pollution":91, "edge-to-edge":91, "thirty-seventh":91, "prostrated":91, "poetess":91, "gradualist":91, "smasher":91, "ignorantly":91, "fiascoes":91, "show-stopper":91, "gloppy":91, "mist-shrouded":91, "quarter-hour":91, "pares":91, "zig":91, "something-or-other":91, "inquisitively":91, "fine-toothed":91, "quays":91, "simplicities":91, "aforethought":91, "puffery":91, "solders":91, "shoeing":91, "three-eighths":91, "carsick":91, "quintuple":91, "mothball":91, "dinging":91, "springlike":91, "spring-break":91, "smartness":91, "church-run":91, "front-loaded":91, "five-volume":91, "action-movie":91, "music-industry":91, "matriculated":91, "four-engine":91, "levelling":91, "cubical":91, "epiphenomenon":91, "decelerated":91, "huggable":91, "circumvention":91, "trans-pacific":91, "fraudulence":91, "triphosphate":91, "unmarketable":91, "limpets":91, "cholesterol-free":91, "stingiest":91, "harridan":91, "preprinted":91, "ski-resort":91, "anti-authoritarian":91, "go-anywhere":91, "baby-food":91, "singer-guitarist":91, "shoreward":91, "diddle":91, "blue-light":91, "underdiagnosed":91, "payola":91, "price-sensitive":91, "ported":91, "schoolbook":91, "pabulum":91, "clip-clop":91, "english-speakers":91, "commodes":91, "hairstylists":91, "media-driven":91, "leniently":91, "water-soaked":91, "war-making":91, "grapeshot":91, "cigs":91, "artist-in-residence":91, "excommunicate":91, "excretory":91, "entomological":91, "lowincome":91, "metamorphosing":91, "ten-week":91, "immigrations":91, "plaiting":91, "unsayable":91, "reassessments":91, "structuralists":91, "taxonomically":91, "vintage-inspired":91, "non-conventional":91, "teeny-tiny":91, "wiseass":91, "carry-on":91, "logarithms":91, "unchristian":91, "suchlike":91, "burglarizing":91, "biopsied":91, "government-held":91, "clintonesque":91, "four-seater":91, "self-affirmation":91, "self-abuse":91, "pinkies":91, "slayers":91, "sub-national":91, "labours":91, "tranquilly":91, "brunet":91, "firebrands":91, "sniggered":91, "formlessness":91, "accommodative":91, "fearmongering":91, "huntress":91, "moly":91, "hydrofoil":91, "begot":91, "acculturate":91, "ejector":91, "pompoms":91, "lumpish":91, "concupiscence":91, "stress-reduction":91, "human-animal":91, "toadstools":91, "labourers":91, "honours":91, "sub-committee":91, "nurseryman":91, "slovakian":91, "machine-tool":91, "genovese":91, "coequal":91, "grass-green":91, "megadoses":91, "six-item":91, "benedictions":91, "breadbox":91, "chinese-americans":91, "check-ins":91, "fakers":91, "vitrines":91, "apprehends":91, "foxgloves":91, "myth-making":91, "coiffures":91, "geochemistry":91, "spectrally":91, "sensualist":91, "revote":91, "rewarm":91, "gene-based":91, "reappropriation":91, "demiurge":91, "adaptor":91, "anti-woman":91, "gang-bangers":91, "tapir":91, "hurdy-gurdy":91, "dimmers":91, "encrypting":91, "gas-rich":91, "constructionists":91, "ploughs":91, "externalization":91, "counter-culture":91, "headhunting":91, "antiglobalization":91, "fricassee":91, "drug-sniffing":91, "cinematographic":91, "hypnotism":91, "fishless":91, "hallo":91, "iteratively":91, "psychotics":91, "pick-and-roll":91, "charioteer":91, "dichotomously":91, "cloisonne":91, "deferrals":91, "radioman":91, "depoliticization":91, "collateralized":91, "pan-arabism":91, "rotator-cuff":91, "verdure":91, "tapeworm":91, "therefor":91, "flanker":91, "bagpipers":91, "two-handled":91, "marts":91, "metropole":91, "crouton":91, "co-sign":91, "high-skill":91, "seismographs":91, "resected":91, "leukemias":91, "sensorium":91, "resales":91, "churros":91, "executive-branch":91, "pizzerias":91, "penetrators":91, "double-bogey":91, "ill-health":91, "forensically":91, "fanzine":91, "gladioli":91, "rabbitskin":91, "non-scientists":91, "self-test":91, "logarithmically":91, "nonrecyclable":91, "storeys":91, "softwoods":91, "experimentalism":91, "sportcoat":91, "cordovan":91, "nudie":91, "nuclearization":91, "campus-based":91, "wakeboarding":91, "crosshatched":91, "exceptionalities":91, "no-fee":91, "blood-glucose":91, "necromancy":91, "assonance":91, "ferric":91, "double-paned":91, "pick-your-own":91, "inhomogeneous":91, "switchers":91, "ungulate":91, "tings":91, "self-reflexivity":91, "ceremonials":91, "bright-line":91, "recontextualization":91, "fossilization":91, "high-carbon":91, "blue-winged":91, "permissibility":91, "open-book":91, "covalent":91, "reinfection":91, "peared":91, "co-prosperity":91, "reduced-calorie":91, "mulattos":91, "non-latino":91, "bakhtinian":91, "eight-ball":91, "sugarplum":91, "cabochon":91, "coolants":91, "micronesian":91, "in-camera":91, "metalsmithing":91, "backflow":91, "tintype":91, "sebum":91, "roundworms":91, "race-specific":91, "derridean":91, "maketh":91, "problem-oriented":91, "superdelegate":91, "attar":91, "literariness":91, "fellah":91, "septicemia":91, "excluder":91, "meatpackers":91, "glycerol":91, "keycard":91, "quadrupole":91, "breastworks":91, "bronchodilators":91, "half-shell":91, "manufacturability":91, "homeschool":91, "beanies":91, "brain-wave":91, "vasodilation":91, "adventitious":91, "class-size":91, "creativeness":91, "non-revenue":91, "in-progress":91, "silver-gilt":91, "worklife":91, "peonage":91, "neighborhood-based":91, "pachinko":91, "eidetic":91, "tapa":91, "resource-use":91, "phenylalanine":91, "vaporizer":91, "framesheet":91, "pericardial":91, "waterlogging":91, "paperclip":91, "audiologists":91, "organophosphates":91, "battens":91, "woodcarvings":91, "ironclads":91, "parthenogenesis":91, "arachidonic":91, "noncognitive":91, "sensory-motor":91, "orbitals":91, "legates":91, "telemarking":91, "non-hispanics":91, "unibody":91, "conformal":91, "haematological":91, "spearfishing":91, "seatwork":91, "delegitimization":91, "baseball/softball":91, "fairing":91, "scaup":91, "caladiums":91, "africanization":91, "obliquity":91, "waterlily":91, "hooped":91, "opacification":91, "bushwhackers":91, "timber-frame":91, "philosophe":91, "deterritorialization":91, "dependent-care":91, "caravel":91, "miscanthus":91, "capuchins":91, "neurofibromatosis":91, "e-zines":91, "cooktops":91, "minoxidil":91, "field-effect":91, "oocysts":91, "s-curve":91, "respirable":91, "anti-spyware":91, "ellagic":91, "antillean":91, "axilla":91, "arachnid":91, "geodes":91, "home-schoolers":91, "polydrug":91, "genistein":91, "dybbuk":91, "fibular":91, "teacher-coach":91, "curcumin":91, "jacobites":91, "progress-monitoring":91, "antiserum":91, "reimportation":91, "avulsion":91, "zaibatsu":91, "aminoacid":91, "neo-malthusian":91, "heptachlor":91, "orthostatic":91, "obeah":91, "transmembrane":91, "axions":91, "rent-to-own":91, "preassessment":91, "australopithecines":91, "pharyngitis":91, "quale":91, "high-pass":91, "space-science":91, "diverticulum":91, "needlestick":91, "inclusivism":91, "weight-based":91, "pneumomediastinum":91, "incomer":91, "electro-motive":91, "ichthyosaur":91, "lap-band":91, "ethnic-food":91, "hypergiants":91, "non-renewal":91, "subagent":91, "nosphere":91, "decouple":91, "despoiling":91, "crowd-pleasers":91, "punctually":91, "harkened":91, "electrocute":91, "inhouse":91, "rimming":91, "dirtying":91, "snubs":91, "heavyduty":91, "hollywood-style":91, "rehashed":91, "expense-account":91, "fleeced":91, "six-two":91, "commendably":91, "clearness":91, "tussled":91, "fancifully":91, "sad-looking":91, "oilier":91, "similar-size":91, "rowdiness":91, "half-century-old":91, "waspy":91, "tabbed":91, "pointlessness":91, "on-the-road":91, "lower-than-expected":91, "inanities":91, "multihued":91, "glommed":91, "cobalt-blue":91, "snowballing":91, "true-to-life":91, "undimmed":91, "wastefully":91, "warmongering":91, "seven-day-a-week":91, "doornail":91, "photo-ops":91, "then-record":91, "urbanite":91, "upbringings":91, "open-necked":91, "jittered":91, "knaves":91, "slower-moving":91, "contravening":91, "lusher":91, "luridly":91, "lipped":91, "forty-one-year-old":91, "scandal-ridden":91, "disinterestedly":91, "disk-shaped":91, "multi-tiered":91, "fizzling":91, "thousand-foot":91, "coalesces":91, "bell-bottom":91, "everpresent":91, "mispronouncing":91, "messiest":91, "fog-shrouded":91, "frescos":91, "do-it-yourselfer":91, "debt-laden":91, "tidier":91, "jonesing":91, "sweet-tempered":91, "career-threatening":91, "co-directors":91, "disrespectfully":91, "five-room":91, "landlubbers":91, "hesitance":91, "dolorous":91, "besmirched":91, "chortles":91, "respecter":91, "nine-mile":91, "savoir-faire":91, "tear-streaked":91, "vamping":91, "well-articulated":91, "countenances":91, "couching":91, "blubbery":91, "extra-special":91, "eight-by-ten":91, "intuits":91, "bailer":91, "costumer":91, "stupidities":91, "cozied":91, "underrate":91, "aubergine":91, "crusaded":91, "iniquitous":91, "memorizes":91, "remonstrate":91, "unethically":91, "pacesetter":91, "bellyful":91, "playbooks":91, "depopulated":91, "best-in-class":91, "gild":91, "self-immolation":91, "harasses":91, "impersonated":91, "bluffed":91, "adorably":91, "oil-and-gas":91, "contextualizes":91, "voracity":91, "footballer":91, "seven-part":91, "zombie-like":91, "pre-set":91, "pre-schoolers":91, "protestation":91, "disowning":91, "defecated":91, "curlicue":91, "parrying":91, "slingbacks":91, "win-loss":91, "hair-thin":91, "government-paid":91, "moonstruck":91, "conk":91, "delimiting":91, "most-favored":91, "then-attorney":91, "zig-zag":91, "earned-run":91, "empty-headed":91, "clangs":91, "misallocation":91, "fuchsias":91, "manically":91, "love-in":91, "parentless":91, "powerbrokers":91, "scrapper":91, "unshackled":91, "guttered":91, "mid-20th-century":91, "trembly":91, "impiety":91, "interfaced":91, "plant-eating":91, "coltish":91, "shit-eating":91, "oboes":91, "pediments":91, "farted":91, "all-digital":91, "disgracefully":91, "romanticization":91, "pure-white":91, "grosser":91, "demilitarize":91, "jabbered":91, "libidos":91, "injudicious":91, "pricy":91, "bona-fide":91, "tenseness":91, "snappier":91, "moralize":91, "industrial-size":91, "three-peat":91, "trilingual":91, "shopaholic":91, "worst-hit":91, "full-price":91, "co-dependent":91, "compartmentalizing":91, "sleepier":91, "foam-rubber":91, "rewired":91, "druggy":91, "radicalizing":91, "supply-and-demand":91, "fast-forwarded":91, "otherworldliness":91, "obscurantist":91, "hand-blown":91, "roundtables":91, "cave-ins":91, "bookworms":91, "perfectibility":91, "sludgy":91, "slurpee":91, "sideboards":91, "layovers":91, "calculable":91, "unreturned":91, "power-pop":91, "horseflesh":91, "thirty-day":91, "university-wide":91, "routinized":91, "pastorally":91, "bounce-back":91, "heeling":91, "pre-teen":91, "unpinned":91, "oddments":91, "caffeine-free":91, "unclip":91, "undertrained":91, "sharking":91, "unbuilt":91, "recantation":91, "prix-fixe":91, "highwayman":91, "winglike":91, "wieners":91, "noise-canceling":91, "homos":91, "soft-sided":91, "germinates":91, "opening-round":91, "fine-textured":91, "syphilitic":91, "impersonates":91, "revalue":91, "teepees":91, "biodiverse":91, "papier-mch":91, "boardinghouses":91, "minutest":91, "antipathies":91, "bi-partisan":91, "ultrahigh":91, "cellmates":91, "photorealistic":91, "flagpoles":91, "tilth":91, "significances":91, "blood-clotting":91, "optionally":91, "rototiller":91, "preestablished":91, "overanxious":91, "curiae":91, "add-in":91, "doglike":91, "whirligig":91, "chokecherry":91, "crucifying":91, "no-risk":91, "no-growth":91, "ascertainable":91, "neigh":91, "ochres":91, "eye-contact":91, "injection-molded":91, "kaffiyeh":91, "disinterestedness":91, "popup":91, "three-card":91, "three-in-one":91, "retrogression":91, "fortuneteller":91, "chainstay":91, "hormone-free":91, "altruistically":91, "baritones":91, "carryin":91, "copters":91, "dumbness":91, "townie":91, "featherbed":91, "reinserted":91, "weakside":91, "rusts":91, "rose-pink":91, "half-days":91, "burgher":91, "aftertax":91, "abraded":91, "blues-rock":91, "stillbirths":91, "appendixes":91, "family-values":91, "roughhouse":91, "shoestrings":91, "downspouts":91, "sobers":91, "pre-approved":91, "orange-flavored":91, "stippling":91, "tapings":91, "all-party":91, "coneflowers":91, "reduced-cost":91, "bandolier":91, "tostadas":91, "crudites":91, "divide-and-conquer":91, "diadem":91, "antonyms":91, "tsars":91, "microelectromechanical":91, "suppositories":91, "operating-system":91, "distillate":91, "puffballs":91, "unresponsiveness":91, "quasi-judicial":91, "double-doubles":91, "octopi":91, "lower-energy":91, "meteoritic":91, "etymologies":91, "gay-marriage":91, "tactilely":91, "ecstacy":91, "crinolines":91, "casuistry":91, "styrene":91, "canticle":91, "foghorns":91, "nappies":91, "five-digit":91, "non-jew":91, "post-doc":91, "right-to-left":91, "tapeworms":91, "gunnysack":91, "plink":91, "civilian-military":91, "undereye":91, "problemas":91, "abled":91, "bighorns":91, "merchantmen":91, "dayhike":91, "shotgunning":91, "sedums":91, "propitiation":91, "differentness":91, "doorkeeper":91, "amalgams":91, "thundershowers":91, "teddies":91, "supernaturalism":91, "howlers":91, "pupate":91, "governable":91, "infalling":91, "angstrom":91, "pre-adolescent":91, "one-arm":91, "wind-generated":91, "rights-based":91, "orchestrator":91, "metrosexual":91, "exonerations":91, "anti-hunting":91, "philologists":91, "indian-controlled":91, "kachina":91, "actinic":91, "this-worldly":91, "sportster":91, "sleep-away":91, "pictorialists":91, "bike-friendly":91, "food-stamp":91, "geodetic":91, "prophetess":91, "electrophysiological":91, "kidder":91, "guilders":91, "gulches":91, "reintroductions":91, "pathogenicity":91, "gat":91, "acre-foot":91, "pipette":91, "fledge":91, "corsican":91, "legislations":91, "go-kart":91, "mulattoes":91, "mew":91, "extra-constitutional":91, "all-union":91, "psychologic":91, "bone-density":91, "antigenic":91, "referentiality":91, "presentment":91, "multi-user":91, "thymes":91, "humoral":91, "brake/shift":91, "dispersers":91, "fibrocystic":91, "birchbark":91, "test-ban":91, "charter-school":91, "polyposis":91, "sub-cabinet":91, "cuddy":91, "liquidators":91, "junks":91, "child-protection":91, "solitudes":91, "signal-processing":91, "discriminators":91, "untransformed":91, "temperate-zone":91, "solenoids":91, "krypton":91, "multiphase":91, "inter-observer":91, "copulations":91, "swash":91, "multi-service":91, "turboprops":91, "non-dominant":91, "racewalking":91, "inflator":91, "star-formation":91, "alliums":91, "ipecac":91, "bait-casting":91, "compensator":91, "low-acid":91, "caliche":91, "context-dependent":91, "communicational":91, "gallbladders":91, "long-horned":91, "cigarillo":91, "ethnobotanical":91, "fibrotic":91, "middleware":91, "hypericum":91, "turbofan":91, "familism":91, "shipowners":91, "querida":91, "goiters":91, "resonators":91, "person-in-environment":91, "incisional":91, "rubidium":91, "extended-stay":91, "single-pivot":91, "erg":91, "clean-tech":91, "reticles":91, "arts-based":91, "arabica":91, "salmonellosis":91, "namibians":91, "hagiographical":91, "quirt":91, "oximetry":91, "aquatint":91, "solute":91, "anti-alcohol":91, "interscorer":91, "mycobacteria":91, "teacher-preparation":91, "teacher-child":91, "freeloader":91, "sclerotherapy":91, "sheng":91, "pantheist":91, "soleus":91, "staphylococcal":91, "knowledge-intensive":91, "madrasahs":91, "tympanometry":91, "mega-cities":91, "flexibilities":91, "rationalities":91, "zebrafish":91, "dystonia":91, "post-totalitarian":91, "teacher-initiated":91, "prologues":91, "dewatered":91, "ashkenazic":91, "reading/language":91, "proslavery":91, "otoscopy":91, "school-home":91, "phonation":91, "consanguineous":91, "hornworm":91, "tuberculin":91, "tularemia":91, "otoliths":91, "brominated":91, "nontypical":91, "smokejumper":91, "checkable":91, "brachialis":91, "li-ion":91, "orc":91, "microtubule":91, "myoclonus":91, "task-focused":91, "arbuscular":91, "intimal":91, "extranodal":91, "glazings":91, "perforator":91, "constructal":91, "hypercar":91, "orienteers":91, "berrying":91, "hybridities":91, "pompously":91, "frail-looking":91, "flimsiest":91, "epitomizing":91, "shirttails":91, "excavates":91, "bowlful":91, "stagy":91, "entwining":91, "astuteness":91, "docilely":91, "grandness":91, "oft-told":91, "lavishes":91, "fizzed":91, "center-stage":91, "thirty-three-year-old":91, "supportable":91, "gaudily":91, "drug-addled":91, "melting-pot":91, "amped":91, "travesties":91, "bulled":91, "steamrolling":91, "thunked":91, "mid-1700s":91, "brightly-colored":91, "cartwheeling":91, "profit-taking":91, "unspecific":91, "finessing":91, "early-evening":91, "earthier":91, "taxpayer-financed":91, "voluptuously":91, "foisting":91, "nail-biter":91, "saleswomen":91, "irrefutably":91, "homebodies":91, "wine-red":91, "six-foot-high":91, "gemlike":91, "trundles":91, "showstoppers":91, "wisdoms":91, "sleighs":91, "slickest":91, "moderate-sized":91, "light-headedness":91, "seductiveness":91, "dumbed":91, "cobwebby":91, "confiscations":91, "rebuts":91, "pessimistically":91, "most-visited":91, "agitates":91, "etches":91, "woodenly":91, "speckling":91, "iron-gray":91, "overextend":91, "rubbernecking":91, "faithlessness":91, "keen-eyed":91, "oil-soaked":91, "systematized":91, "reconceived":91, "plangent":91, "masseuses":91, "jewel-toned":91, "lamest":91, "lifesize":91, "infesting":91, "ice-cube":91, "brother-sister":91, "fastness":91, "fizzles":91, "jewel-encrusted":91, "platinum-selling":91, "monkeying":91, "picture-taking":91, "overtax":91, "picnicked":91, "traffic-clogged":91, "tradespeople":91, "boggled":91, "crassly":91, "considerately":91, "high-profit":91, "high-necked":91, "misplacing":91, "brickbats":91, "orangey":91, "relevantly":91, "needier":91, "linebacking":91, "sundered":91, "scuffs":91, "uncredited":91, "stalemated":91, "sorrowing":91, "short-circuits":91, "not-so-secret":91, "assortments":91, "broken-in":91, "broad-brush":91, "eloping":91, "shipload":91, "cost-prohibitive":91, "begrudged":91, "no-look":91, "one-sixteenth":91, "gamine":91, "extendable":91, "rasps":91, "befit":91, "stern-faced":91, "sandboxes":91, "deep-down":91, "chortle":91, "blubbered":91, "threeyear":91, "mulched":91, "great-grandfathers":91, "computer-enhanced":91, "remonstrated":91, "foulest":91, "thick-soled":91, "swishy":91, "lissome":91, "eight-pound":91, "arrhythmic":91, "unregenerate":91, "green-tinted":91, "peepholes":91, "misstating":91, "non-polluting":91, "reuses":91, "late-1980s":91, "reattaching":91, "misapplied":91, "rubber-stamped":91, "viselike":91, "sallied":91, "folky":91, "fondles":91, "biophysicist":91, "seventy-fifth":91, "tableaus":91, "ramification":91, "tarnishes":91, "air-dried":91, "airconditioning":91, "dull-witted":91, "disproportional":91, "rustlings":91, "weathervane":91, "waylay":91, "water-purification":91, "runup":91, "larcenous":91, "lockups":91, "superabundance":91, "doormats":91, "frothed":91, "terrorism-related":91, "stenographers":91, "government-wide":91, "strobing":91, "adult-size":91, "paper-wrapped":91, "out-of-tune":91, "reconcilable":91, "safety-related":91, "sluices":91, "life-time":91, "aproned":91, "comic-strip":91, "enroute":91, "enshrouded":91, "handedly":91, "twinned":91, "tsked":91, "fireplug":91, "endlessness":91, "choosers":91, "five-eight":91, "hand-in-glove":91, "whipsawed":91, "hoarfrost":91, "mid-priced":91, "quick-change":91, "prescreening":91, "lecher":91, "ejaculating":91, "skilful":91, "goggled":91, "gold-rush":91, "sandbagged":91, "inexpert":91, "nosegay":91, "freak-out":91, "value-priced":91, "five-and-dime":91, "ghosted":91, "two-color":91, "firetrucks":91, "twiddled":91, "implausibility":91, "shyster":91, "ice-filled":91, "farm-to-table":91, "carabiners":91, "ceiling-mounted":91, "popularizer":91, "swamplands":91, "first-pitch":91, "unsalvageable":91, "mangers":91, "pice":91, "lemon-colored":91, "county-based":91, "security-related":91, "frippery":91, "back-stabbing":91, "counterpunch":91, "jazzing":91, "light-up":91, "cartoon-like":91, "tough-on-crime":91, "whee":91, "semi-nude":91, "semicircles":91, "marketeer":91, "pro-level":91, "breading":91, "maypole":91, "biosciences":91, "idler":91, "nitely":91, "ethers":91, "anatomies":91, "homophobe":91, "six-digit":91, "sodomites":91, "cream-filled":91, "transpacific":91, "unslung":91, "barbiturate":91, "forty-third":91, "chaises":91, "unblock":91, "reformatory":91, "organdy":91, "ex-cia":91, "art-related":91, "decathlete":91, "disempowering":91, "cool-weather":91, "cooly":91, "prorated":91, "stockyard":91, "pushbutton":91, "shakespearian":91, "anti-family":91, "giantess":91, "imbecility":91, "whinnies":91, "junking":91, "timbering":91, "favoured":91, "black-and-whites":91, "parasitize":91, "hatband":91, "guayabera":91, "game-like":91, "extensiveness":91, "garage-door":91, "price-gouging":91, "semiprofessional":91, "staplers":91, "consigns":91, "coonskin":91, "plasters":91, "noninstitutionalized":91, "papist":91, "felted":91, "eclairs":91, "casements":91, "head-up":91, "newspapering":91, "content-specific":91, "fingerpointing":91, "dooryard":91, "burn-out":91, "benching":91, "defacement":91, "tenderizing":91, "desiderata":91, "midpriced":91, "tanagers":91, "town-house":91, "front-to-back":91, "weightlessly":91, "fandango":91, "jet-powered":91, "depressor":91, "darkling":91, "clintonism":91, "residentially":91, "tonguing":91, "single-mother":91, "underachieved":91, "two-putt":91, "ungraded":91, "primogeniture":91, "two-deep":91, "nine-county":91, "three-on-three":91, "complete-game":91, "stunners":91, "dimly-lit":91, "sterling-silver":91, "three-state":91, "unconsolidated":91, "sundried":91, "instantiate":91, "brute-force":91, "hardhats":91, "centeredness":91, "new-school":91, "juvenilia":91, "bilges":91, "strychnine":91, "dailiness":91, "bolognese":91, "bewitch":91, "white-wine":91, "domiciled":91, "beaching":91, "north-northwest":91, "poled":91, "areola":91, "guestroom":91, "brainwave":91, "tourniquets":91, "fly-in":91, "benedictines":91, "final-status":91, "filmstrip":91, "cofactors":91, "snakebites":91, "naturopath":91, "hematologist":91, "transpositions":91, "vocationally":91, "enquiring":91, "aforesaid":91, "off-roading":91, "slow-pitch":91, "nonhumans":91, "stratify":91, "rimrock":91, "fireweed":91, "term-limited":91, "heterogeneously":91, "animality":91, "consumer-protection":91, "corniche":91, "unilinear":91, "rhetorician":91, "tomographic":91, "monopolists":91, "bobsledding":91, "pinscher":91, "vales":91, "fuckup":91, "unsaved":91, "spillovers":91, "spiller":91, "literature-based":91, "emendation":91, "on-track":91, "artificial-intelligence":91, "electromyography":91, "proof-of-concept":91, "tendering":91, "wildcatters":91, "women's-rights":91, "clockmaker":91, "pest-resistant":91, "fetishized":91, "phallocentric":91, "lay-offs":91, "canoeist":91, "apotropaic":91, "vasculature":91, "spatiality":91, "packhorse":91, "abutments":91, "barracudas":91, "corporates":91, "brewmaster":91, "headwear":91, "psycho-educational":91, "recession-resistant":91, "stumper":91, "hasp":91, "handbuilt":91, "non-normative":91, "sunporch":91, "tanneries":91, "alpha-hydroxy":91, "rulership":91, "syndicators":91, "hematocrit":91, "income-based":91, "goober":91, "pre-raphaelites":91, "heli-ski":91, "hagiographic":91, "model-based":91, "medical-care":91, "arbitrations":91, "bolls":91, "colorblindness":91, "retractor":91, "aerosolized":91, "clinic-based":91, "infinities":91, "pistils":91, "transmissibility":91, "schlemiel":91, "poolroom":91, "brasses":91, "three-position":91, "sustainer":91, "scaloppine":91, "dispersive":91, "pet-food":91, "dogcatcher":91, "erosional":91, "fluoridated":91, "glockenspiel":91, "web-only":91, "symbolists":91, "zoster":91, "non-point":91, "nonfigurative":91, "three-wheeler":91, "well-differentiated":91, "disseminator":91, "child-labor":91, "proletarianization":91, "craftsperson":91, "opacities":91, "distracters":91, "boat-building":91, "client-server":91, "surcoat":91, "nomadism":91, "sensate":91, "smoking-cessation":91, "gnosis":91, "gandhian":91, "striatum":91, "sieving":91, "parching":91, "gaijin":91, "chairman/ceo":91, "immunoglobulins":91, "inflorescence":91, "overfeed":91, "godchild":91, "tonnages":91, "freemasonry":91, "coagulant":91, "letter-sound":91, "recto":91, "clinicopathologic":91, "muskeg":91, "mantises":91, "vagal":91, "metros":91, "college-going":91, "rocketship":91, "spearmen":91, "fly-by-wire":91, "monstrance":91, "ummah":91, "applejack":91, "plantlets":91, "versification":91, "bioaccumulation":91, "deltoid":91, "cusps":91, "mid-majors":91, "cytologic":91, "non-life-threatening":91, "astrometric":91, "nonlegal":91, "gay-straight":91, "shylock":91, "nonstandardized":91, "cowpeas":91, "preconditioning":91, "stromal":91, "far-infrared":91, "immune-mediated":91, "lamellar":91, "augmentative":91, "whiteners":91, "noninterventionist":91, "interracially":91, "cerebellopontine":91, "overglaze":91, "gillnets":91, "planetaria":91, "moiety":91, "echinoderms":91, "delegative":91, "dali":91, "mesoscopic":91, "otoacoustic":91, "macrophytes":91, "pastured":91, "gages":91, "finite-element":91, "parent-reported":91, "hyperfine":91, "cross-linguistic":91, "midlatitude":91, "parasitoids":91, "photodetector":91, "bloodborne":91, "corporative":91, "overclocking":91, "epitopes":91, "attitude-behavior":91, "pre-oedipal":91, "parthenogenetic":91, "buy-sell":91, "highlife":91, "permittees":91, "dahomean":91, "blacklight":91, "counselors-in-training":91, "brideprice":91, "antifouling":91, "monkeypox":91, "noninstrumental":91, "postsocialist":91, "intratympanic":91, "nonprimary":91, "driftnets":91, "left-ventricular":91, "flivver":91, "antinoise":91, "self-modeling":91, "noncommunity":91, "re-exports":91, "datastream":91, "extrahepatic":91, "antihydrogen":91, "oldest-old":91, "bluetongue":91, "spim":91, "turbolift":91, "intersexual":91, "other-race":91, "laugh-out-loud":92, "cool-looking":92, "twice-a-week":92, "believably":92, "slow-paced":92, "unremembered":92, "grogginess":92, "palsied":92, "high-margin":92, "star-making":92, "accomodate":92, "guesstimate":92, "accosting":92, "deep-pocket":92, "co-hosted":92, "junker":92, "exonerates":92, "painted-on":92, "saddening":92, "forty-odd":92, "bilk":92, "cautiousness":92, "deputized":92, "chameleon-like":92, "better-trained":92, "abjectly":92, "hazily":92, "livened":92, "gratifyingly":92, "wheat-colored":92, "wrack":92, "rebuffing":92, "elide":92, "long-suppressed":92, "irreproachable":92, "mindlessness":92, "shibboleth":92, "finagled":92, "soft-hearted":92, "urgencies":92, "soft-focus":92, "butcher-block":92, "mindboggling":92, "one-issue":92, "country-rock":92, "court-mandated":92, "cutely":92, "super-fast":92, "snitched":92, "breakfasting":92, "counterpoints":92, "well-trimmed":92, "bedevils":92, "placidity":92, "of-the-moment":92, "lightheartedness":92, "larded":92, "itsy":92, "wackiness":92, "munificence":92, "bargain-hunting":92, "unsociable":92, "unsettlingly":92, "unsupportable":92, "smooth-running":92, "cheeriness":92, "battle-ready":92, "hot-headed":92, "roughhousing":92, "cd-quality":92, "grittiness":92, "reconnects":92, "spiritless":92, "scudded":92, "uncorking":92, "oafish":92, "orange-yellow":92, "metronomic":92, "hotties":92, "skullcaps":92, "whiffed":92, "wide-legged":92, "nimbleness":92, "leisured":92, "deep-green":92, "anthropologically":92, "mean-spiritedness":92, "youthful-looking":92, "rascally":92, "roll-on":92, "half-second":92, "many-layered":92, "catnap":92, "fictionalizing":92, "largish":92, "likeminded":92, "adenoidal":92, "bodices":92, "bruisers":92, "undulates":92, "spraining":92, "absconding":92, "fleshless":92, "propound":92, "cat-like":92, "clinks":92, "newly-formed":92, "monomaniacal":92, "recurrently":92, "non-family":92, "near-collapse":92, "lopsidedly":92, "annihilates":92, "seamier":92, "snuffs":92, "double-talk":92, "jawed":92, "dudgeon":92, "low-gravity":92, "overthink":92, "re-release":92, "shrillness":92, "stewpot":92, "vilest":92, "grumped":92, "gold-leafed":92, "sweetmeats":92, "anti-corporate":92, "fetchingly":92, "window-shopping":92, "reloads":92, "blonde-haired":92, "slower-growing":92, "slumlord":92, "high-decibel":92, "modest-sized":92, "capper":92, "champaign":92, "unscarred":92, "stiff-necked":92, "abrasiveness":92, "head-over-heels":92, "uprightness":92, "manhattanites":92, "catchphrases":92, "put-together":92, "putdown":92, "disputable":92, "semiformal":92, "thrift-shop":92, "brawlers":92, "rebrand":92, "gop-controlled":92, "snowless":92, "unchaperoned":92, "undistracted":92, "identifiably":92, "pointblank":92, "nixonian":92, "silent-film":92, "workshirt":92, "ramp-up":92, "beaten-up":92, "awe-struck":92, "sodomizing":92, "six-four":92, "six-foot-four":92, "birdbaths":92, "bourbons":92, "reenacts":92, "seven-tenths":92, "red-painted":92, "long-playing":92, "geocentric":92, "understaffing":92, "stopwatches":92, "stove-top":92, "juiciness":92, "aircrafts":92, "erosions":92, "bitched":92, "non-cash":92, "tweezer":92, "surpassingly":92, "refashioning":92, "summarised":92, "outward-looking":92, "multi-volume":92, "bookmaking":92, "crenellated":92, "sadistically":92, "bloodsucker":92, "asphyxiate":92, "deadliness":92, "ghost-like":92, "us-russian":92, "three-stroke":92, "unkindness":92, "closed-in":92, "pony-tailed":92, "bow-tie":92, "recessional":92, "vigour":92, "unharvested":92, "semirural":92, "tradecraft":92, "hard-faced":92, "mud-spattered":92, "crapped":92, "coatless":92, "ick":92, "heavy-equipment":92, "matriculating":92, "best-of-five":92, "disenfranchising":92, "draft-day":92, "boated":92, "calve":92, "price-cutting":92, "concessionary":92, "run-ups":92, "fall-back":92, "tie-up":92, "two-shoes":92, "reissuing":92, "antitax":92, "steppingstones":92, "leaguewide":92, "byronic":92, "armadas":92, "online-only":92, "hybridized":92, "chickenshit":92, "anti-bacterial":92, "three-week-old":92, "flophouses":92, "medleys":92, "therewith":92, "disbelieved":92, "low-riding":92, "depthless":92, "shoe-in":92, "roadhouses":92, "mid-1850s":92, "standing-room":92, "universalization":92, "exfoliant":92, "southern-fried":92, "break-out":92, "propeller-driven":92, "trumpet-shaped":92, "on-target":92, "t-bones":92, "whisperings":92, "weight-control":92, "overnighter":92, "ignoramuses":92, "fill-up":92, "bottom-feeding":92, "six-county":92, "well-tempered":92, "workingmen":92, "step-wise":92, "warlock":92, "kamikazes":92, "conjoin":92, "healthfulness":92, "elite-level":92, "witch-hunts":92, "dachshunds":92, "creamers":92, "non-compliant":92, "hemorrhoid":92, "gravies":92, "itemizing":92, "short-legged":92, "formes":92, "eight-acre":92, "anti-clerical":92, "chicken-wire":92, "victimizers":92, "onomatopoeia":92, "sleazeball":92, "coachmen":92, "gyroscopic":92, "gingko":92, "proselytization":92, "six-sided":92, "tequilas":92, "grandniece":92, "firestorms":92, "campout":92, "kilim":92, "undercoat":92, "moldable":92, "bagpiper":92, "non-market":92, "snatcher":92, "more-powerful":92, "long-faced":92, "saw-toothed":92, "first-level":92, "multi-instrumentalist":92, "pileated":92, "sonority":92, "forefather":92, "polytheism":92, "creedal":92, "chromatograph":92, "backflip":92, "indiscipline":92, "overgeneralization":92, "grasslike":92, "honky-tonks":92, "ethnographically":92, "aggregators":92, "cofactor":92, "test-score":92, "time-bound":92, "snow-packed":92, "woodshop":92, "strongpoint":92, "renames":92, "dangly":92, "appliqued":92, "serialization":92, "turn-by-turn":92, "sunni-shiite":92, "culture-bound":92, "sportive":92, "mislabeling":92, "reapers":92, "bi-polar":92, "freeskier":92, "racecars":92, "tomboyish":92, "causalities":92, "fobs":92, "overthrows":92, "soundscapes":92, "superefficient":92, "care-givers":92, "notecards":92, "interrogatories":92, "jackboots":92, "jackfruit":92, "de-icing":92, "whorled":92, "doglegs":92, "forty-seventh":92, "pressroom":92, "multi-lateral":92, "bopper":92, "reasonings":92, "daisylike":92, "faille":92, "petites":92, "curtsey":92, "circumcise":92, "malty":92, "e-mailers":92, "germ-free":92, "stegosaurus":92, "sectionals":92, "copywriters":92, "pharmacotherapy":92, "three-party":92, "five-item":92, "mullets":92, "tropicals":92, "glassblowing":92, "adenine":92, "pictographic":92, "low-emission":92, "dockyard":92, "bobbers":92, "handgrip":92, "ankh":92, "runout":92, "swivelled":92, "sub-group":92, "dovecote":92, "overshoes":92, "regionalized":92, "weblog":92, "miler":92, "rebury":92, "conjugations":92, "ethnologists":92, "karat":92, "puce":92, "natural-history":92, "pressman":92, "toolmakers":92, "impalpable":92, "ordinations":92, "thirteen-year-olds":92, "voltmeter":92, "intraocular":92, "calcareous":92, "facticity":92, "urologic":92, "noncoercive":92, "staghorn":92, "exogamy":92, "egoist":92, "belarussian":92, "closeout":92, "armoring":92, "hidden-camera":92, "micronutrient":92, "social-scientific":92, "okey-dokey":92, "second-wave":92, "photometer":92, "private-property":92, "us-mexican":92, "leishmaniasis":92, "rainmaking":92, "chorionic":92, "intercessor":92, "thru-hikers":92, "polarizations":92, "government-in-exile":92, "face-offs":92, "anatomists":92, "thrombotic":92, "glottis":92, "testings":92, "british-american":92, "oxidizer":92, "inquests":92, "aeolian":92, "off-balance-sheet":92, "caponata":92, "limpet":92, "ascertainment":92, "highboy":92, "scythian":92, "bomblets":92, "chittered":92, "rhenish":92, "unexcused":92, "rectors":92, "nonmarital":92, "carjackers":92, "speedball":92, "land-tenure":92, "technology-rich":92, "impetigo":92, "automat":92, "tolerability":92, "nonscience":92, "docudramas":92, "emendations":92, "partials":92, "ideographic":92, "zakat":92, "facultative":92, "bounder":92, "proximally":92, "fly-by":92, "sambal":92, "hornbill":92, "rank-ordered":92, "interleukin":92, "claymore":92, "vasculitis":92, "pemmican":92, "cracklings":92, "interservice":92, "perjurious":92, "rule-breaking":92, "goshawk":92, "arrestee":92, "chipset":92, "mucilage":92, "lassoing":92, "landlessness":92, "tantalum":92, "theory-driven":92, "temping":92, "canonists":92, "urticaria":92, "emissivity":92, "fore-aft":92, "submillimeter":92, "popovers":92, "whelks":92, "extraverted":92, "portcullis":92, "noninstructional":92, "hardrock":92, "endoscopes":92, "psychoeducation":92, "luminal":92, "epoxies":92, "interinstitutional":92, "appellant":92, "restrictor":92, "thrombocytopenia":92, "left-handedness":92, "one-factor":92, "supersymmetry":92, "phasers":92, "justificatory":92, "ventriloquists":92, "neighbourhoods":92, "thingamajig":92, "myeloid":92, "sieved":92, "neoliberals":92, "twelve-bar":92, "vision-related":92, "laddering":92, "neutrophil":92, "vacs":92, "total-return":92, "qigong":92, "borate":92, "forelimb":92, "nonsupportive":92, "medical-malpractice":92, "dinoflagellate":92, "rosicrucians":92, "divinations":92, "transection":92, "perspectivism":92, "agnatic":92, "subject-verb":92, "ribavirin":92, "interleave":92, "hypercalcemia":92, "meningeal":92, "bacteriophages":92, "annotating":92, "tubule":92, "allometric":92, "carboxylic":92, "planisphere":92, "hypomanic":92, "age-grade":92, "collectivists":92, "constructed-response":92, "sapiential":92, "peak-to-peak":92, "pollution-prevention":92, "guidestar":92, "preliteracy":92, "afterglows":92, "contactless":92, "niggah":92, "burundians":92, "ascender":92, "field-independent":92, "multiple-birth":92, "fecking":92, "above-level":92, "laundrymen":92, "patrilateral":92, "harm/loss":92, "demyelination":92, "shipmaster":92, "hypervisor":92, "olivary":92, "consanguineal":92, "ethno-racial":92, "reemerges":92, "precociously":92, "reed-thin":92, "water-stained":92, "silky-smooth":92, "pre-emptively":92, "back-of-the-envelope":92, "breakfasted":92, "seedier":92, "nerveless":92, "interceding":92, "reinstitution":92, "outthink":92, "outrank":92, "sexed":92, "unshaken":92, "forebodings":92, "advantageously":92, "jibed":92, "interjection":92, "cheapening":92, "sidetrack":92, "serried":92, "sparely":92, "rephrasing":92, "tremulously":92, "tunelessly":92, "vaudevillian":92, "unavailing":92, "obscurantism":92, "indecorous":92, "galvanizes":92, "charcoal-gray":92, "befuddle":92, "overdeveloped":92, "inexcusably":92, "miles-long":92, "ninetieth":92, "broad-ranging":92, "countenanced":92, "elongates":92, "stagnates":92, "savvier":92, "weed-choked":92, "worldclass":92, "ready-to-use":92, "insignificantly":92, "dallied":92, "cold-eyed":92, "budget-balancing":92, "big-bucks":92, "terming":92, "handsomer":92, "fast-approaching":92, "bad-news":92, "decanted":92, "pachyderms":92, "disgracing":92, "proscribing":92, "senior-citizen":92, "re-invent":92, "antlered":92, "death-dealing":92, "much-praised":92, "shampooed":92, "stockier":92, "insolently":92, "mixed-breed":92, "pale-yellow":92, "shadowless":92, "unconsidered":92, "week-to-week":92, "whooshes":92, "verifiably":92, "shopping-mall":92, "condescended":92, "milky-white":92, "league-best":92, "outer-space":92, "coyness":92, "declaim":92, "gluttons":92, "no-sweat":92, "instinctually":92, "edify":92, "rationalizes":92, "forty-foot":92, "gizzards":92, "haplessly":92, "much-deserved":92, "toe-tapping":92, "zinged":92, "bare-knuckled":92, "inconclusively":92, "knickknack":92, "incorrectness":92, "little-boy":92, "unutterably":92, "water-skiing":92, "hundred-mile":92, "odoriferous":92, "dreariness":92, "time-pressed":92, "chuffing":92, "counterarguments":92, "recalibrated":92, "riptide":92, "goose-stepping":92, "wide-reaching":92, "wigged":92, "fifty-pound":92, "mopey":92, "long-promised":92, "governmentally":92, "rock-steady":92, "pointillism":92, "northwesterly":92, "hellishly":92, "loftlike":92, "counterintuitively":92, "cursorily":92, "uncoil":92, "uncarpeted":92, "cross-referencing":92, "fourthly":92, "reintroduces":92, "stick-figure":92, "pleasant-looking":92, "refolding":92, "bold-faced":92, "chary":92, "interior-design":92, "cheapened":92, "american-backed":92, "self-financed":92, "fragile-looking":92, "joyriding":92, "roller-skating":92, "roils":92, "matter-of-factness":92, "juntas":92, "semi-autobiographical":92, "unknotted":92, "egomania":92, "fatso":92, "full-contact":92, "thin-sliced":92, "tittering":92, "hard-right":92, "last-chance":92, "city-dwellers":92, "oozy":92, "red-and-yellow":92, "castigates":92, "interpolate":92, "literalness":92, "manacled":92, "blathering":92, "hollyhock":92, "house-hunting":92, "ginning":92, "criss-cross":92, "tomcats":92, "supportively":92, "antipollution":92, "unimportance":92, "city-run":92, "sports-car":92, "sabotages":92, "ad-free":92, "maturely":92, "c-shaped":92, "hindmost":92, "poops":92, "decodes":92, "extemporaneously":92, "expressionlessly":92, "zenlike":92, "misreporting":92, "interlibrary":92, "gabby":92, "lunchrooms":92, "vending-machine":92, "ten-fold":92, "synergism":92, "appall":92, "self-responsibility":92, "transposes":92, "unsurpassable":92, "hitmakers":92, "bare-knuckle":92, "gastronomical":92, "unthinkably":92, "semiautobiographical":92, "reimposed":92, "guestrooms":92, "doffing":92, "recalibrating":92, "oven-proof":92, "pre-draft":92, "phlegmy":92, "resupplied":92, "information-age":92, "ingrate":92, "facelifts":92, "cutlasses":92, "silver-blue":92, "dignifying":92, "make-over":92, "longest-lived":92, "anchormen":92, "monosodium":92, "back-to-the-land":92, "backhands":92, "light-polluted":92, "re-energized":92, "cross-shaped":92, "showtimes":92, "rust-red":92, "live-and-let-live":92, "unshared":92, "rowhouses":92, "inscrutability":92, "fortune-tellers":92, "capitols":92, "non-perishable":92, "dishonorably":92, "three-act":92, "schmucks":92, "dry-clean":92, "chapbook":92, "photolithography":92, "black-oriented":92, "smiting":92, "flounce":92, "well-floured":92, "sables":92, "greases":92, "remixes":92, "license-plate":92, "propylene":92, "home-front":92, "abstractedly":92, "overstretch":92, "overstaying":92, "per-student":92, "bodysuits":92, "imagistic":92, "full-course":92, "snick":92, "sunshade":92, "uncontained":92, "transliteration":92, "co-parenting":92, "political-science":92, "maximalist":92, "pooper":92, "divines":92, "non-refundable":92, "pilling":92, "apple-green":92, "late-victorian":92, "polysyllabic":92, "aerating":92, "chardonnays":92, "directorships":92, "four-wheeling":92, "postapocalyptic":92, "gooks":92, "covetousness":92, "half-circles":92, "israeli-lebanese":92, "polemicists":92, "mooned":92, "bayberry":92, "waterfronts":92, "cut-side":92, "anally":92, "judiciaries":92, "tow-truck":92, "light-truck":92, "cross-curricular":92, "renominated":92, "off-street":92, "checkouts":92, "fan-friendly":92, "ten-second":92, "hernias":92, "viceroys":92, "decisionmaker":92, "morns":92, "incarcerations":92, "ineligibility":92, "nine-yard":92, "extortionist":92, "tipster":92, "five-four":92, "jackbooted":92, "atavism":92, "reanimate":92, "naysayer":92, "pushpins":92, "paradisiacal":92, "five-ton":92, "cliff-top":92, "post-enron":92, "pearl-gray":92, "minx":92, "red-bearded":92, "best-qualified":92, "ex-governor":92, "housepainter":92, "flyboy":92, "ground-nesting":92, "doubleheaders":92, "right-clicking":92, "anti-zionist":92, "blowdowns":92, "significations":92, "telegraphy":92, "dishwasher-safe":92, "cheapskates":92, "profit-maximizing":92, "similitude":92, "catalonian":92, "ambivalences":92, "misbehaves":92, "federalization":92, "nonbusiness":92, "odysseys":92, "long-wavelength":92, "arab-jewish":92, "dopers":92, "bechamel":92, "sectioning":92, "airdrop":92, "aphelion":92, "audiophile":92, "tollbooths":92, "multireligious":92, "drainboard":92, "handbill":92, "barbering":92, "high-occupancy":92, "high-price":92, "lace-ups":92, "elder-care":92, "spaetzle":92, "stationer":92, "experience-based":92, "handgrips":92, "paragliding":92, "rejectionists":92, "imaginal":92, "mixed-sex":92, "luminarias":92, "eiderdown":92, "gun-free":92, "teardown":92, "self-trained":92, "declension":92, "localised":92, "interpretability":92, "carnelian":92, "amoebic":92, "toolmaking":92, "mickey":92, "sadnesses":92, "wage-earner":92, "contemporary-art":92, "profiteroles":92, "cockatoos":92, "erotics":92, "time-line":92, "unchosen":92, "intercommunal":92, "long-travel":92, "redecoration":92, "wontons":92, "pastorate":92, "straightway":92, "hacky":92, "alterable":92, "leviathans":92, "reconditioned":92, "unassigned":92, "masochists":92, "tussock":92, "ultranationalists":92, "roughy":92, "non-rational":92, "sandhills":92, "twosomes":92, "lockets":92, "imbrication":92, "snapdragon":92, "nucleation":92, "bankrupts":92, "four-by-four":92, "potteries":92, "asset-backed":92, "sheepshead":92, "kabbalistic":92, "heat-transfer":92, "plastique":92, "motoryachts":92, "minibuses":92, "pharmacologists":92, "novena":92, "preretirement":92, "self-rating":92, "enchantress":92, "carbon-free":92, "clay-court":92, "sceptre":92, "fetishist":92, "watchmakers":92, "pianoforte":92, "clarifier":92, "lionesses":92, "plowman":92, "magics":92, "eight-item":92, "grain-fed":92, "social-studies":92, "anomic":92, "brooder":92, "low-oxygen":92, "antitheft":92, "epa-approved":92, "heterosexually":92, "nebulas":92, "milfoil":92, "magnetic-field":92, "hydroplane":92, "diabetes-related":92, "prepositional":92, "progressivist":92, "steppers":92, "crematory":92, "downscaling":92, "vibraphone":92, "direct-drive":92, "microsurgical":92, "lectors":92, "spitter":92, "reemployment":92, "softshell":92, "theists":92, "cyberattack":92, "homeruns":92, "salmonid":92, "embalmers":92, "risk-sharing":92, "nonsexist":92, "untouchability":92, "open-enrollment":92, "cheesemaker":92, "appetitive":92, "one-world":92, "whippet":92, "tap-tap":92, "consignments":92, "high-key":92, "disestablishment":92, "freemason":92, "substance-abusing":92, "prewriting":92, "othering":92, "bodily-kinesthetic":92, "transit-oriented":92, "palanquin":92, "gamekeeper":92, "micro-level":92, "institutionalism":92, "guider":92, "unordered":92, "iodized":92, "sex-ed":92, "decolonize":92, "excisional":92, "concretization":92, "ubuntu":92, "bronchoscopy":92, "freestone":92, "post-holocaust":92, "adjudicative":92, "biff":92, "exhumations":92, "cytometry":92, "bare-root":92, "vises":92, "horsetail":92, "europeanization":92, "rivalrous":92, "supers":92, "estrous":92, "radioisotopes":92, "overdraw":92, "biologicals":92, "monotypes":92, "azimuthal":92, "bookmarking":92, "greenspace":92, "ultraorthodox":92, "unitard":92, "adrenals":92, "anglo-indian":92, "photomultiplier":92, "fiduciaries":92, "paneer":92, "sociobiological":92, "nucleons":92, "collodion":92, "all-optical":92, "histiocytes":92, "unrepresentable":92, "entablature":92, "copy-protection":92, "flavonoid":92, "lessee":92, "ideograms":92, "codons":92, "dinoflagellates":92, "autoerotic":92, "hydroxyapatite":92, "early-music":92, "knorr":92, "patrilineage":92, "mucin":92, "viewports":92, "bride-price":92, "modulo":92, "water-level":92, "petrel":92, "securities-fraud":92, "cyberterrorism":92, "preconquest":92, "superpipe":92, "probly":92, "turbojet":92, "swazi":92, "submittal":92, "microspheres":92, "clonidine":92, "tibialis":92, "tachyon":92, "spaceports":92, "spallation":92, "sportfishermen":92, "ladinos":92, "desistance":92, "accelerants":92, "sedentarization":92, "ribozyme":92, "vitalism":92, "autonomie":92, "fire-safe":92, "post-exposure":92, "stereograph":92, "thyroglossal":92, "dichotic":92, "wavevector":92, "agent-based":92, "atresia":92, "ragpicker":92, "galactosemia":92, "friends-and-family":92, "time-to-degree":92, "reionization":92, "succinylcholine":92, "self-completion":92, "chordomas":92, "lobectomy":92, "yield-per-recruit":92, "common-pool":92, "quadword":92, "last-resort":92, "ever-smaller":92, "undrinkable":92, "bone-crushing":92, "best-trained":92, "decamp":92, "eighth-floor":92, "bad-guy":92, "anti-climactic":92, "defuses":92, "dilettantes":92, "harkening":92, "high-wattage":92, "higher-paid":92, "muzzy":92, "couch-potato":92, "flouncy":92, "nabs":92, "unlaced":92, "fullblown":92, "blood-thirsty":92, "readier":92, "counterattacking":92, "myopically":92, "entreating":92, "whole-heartedly":92, "submerges":92, "half-awake":92, "once-a-month":92, "seven-man":92, "then-rep":92, "restocked":92, "now-deceased":92, "knife-edged":92, "sun-soaked":92, "silvering":92, "self-reproach":92, "strong-arming":92, "surmountable":92, "dirtied":92, "fine-tunes":92, "ill-founded":92, "steamroll":92, "sidelining":92, "late-evening":92, "hanker":92, "austerely":92, "discomfited":92, "daunt":92, "insultingly":92, "instrumentals":92, "mesmerizes":92, "sweat-drenched":92, "cheerier":92, "captaincy":92, "hanger-on":92, "gadflies":92, "out-of-this-world":92, "perceivable":92, "topographically":92, "ill-served":92, "loutish":92, "advisedly":92, "rousting":92, "refocuses":92, "ogled":92, "abrade":92, "cartwheeled":92, "calf-length":92, "saucer-shaped":92, "reemphasize":92, "cowritten":92, "test-driving":92, "wingspans":92, "widely-held":92, "thriftiness":92, "thrill-seekers":92, "shrewder":92, "weathers":92, "chin-length":92, "disproven":92, "heartlessness":92, "repairable":92, "pock":92, "nicotine-stained":92, "artfulness":92, "fettered":92, "tousling":92, "texas-sized":92, "shaggy-haired":92, "two-foot-long":92, "unconquered":92, "blondish":92, "gibe":92, "five-cent":92, "enviably":92, "skulduggery":92, "vacuum-packed":92, "lollygagging":92, "ineffably":92, "rain-slicked":92, "outgained":92, "highest-level":92, "second-youngest":92, "closet-sized":92, "million-strong":92, "patsies":92, "pooping":92, "gamey":92, "schmoozed":92, "squirreling":92, "deviously":92, "flimflam":92, "home-brewed":92, "slow-burning":92, "thirtysomethings":92, "comported":92, "alluringly":92, "ivory-colored":92, "two-wheeler":92, "undecipherable":92, "foul-up":92, "bi-monthly":92, "messaged":92, "pityingly":92, "semipublic":92, "lacquers":92, "low-angle":92, "grained":92, "re-thinking":92, "darkish":92, "best-organized":92, "house-cured":92, "romanced":92, "side-mounted":92, "distastefully":92, "art-filled":92, "younger-looking":92, "zero-gravity":92, "swept-back":92, "exportable":92, "armholes":92, "easy-to-grow":92, "higher-yielding":92, "nightstands":92, "prohibition-era":92, "pliability":92, "ninety-year-old":92, "gum-chewing":92, "deep-red":92, "short-distance":92, "strew":92, "deafeningly":92, "five-alarm":92, "epaulettes":92, "computer-chip":92, "prise":92, "mixup":92, "uncurtained":92, "tan-colored":92, "sires":92, "fetishizing":92, "nickel-and-dime":92, "dressmaking":92, "by-the-glass":92, "thrice-weekly":92, "well-tested":92, "partings":92, "provisioned":92, "hairier":92, "ingenuously":92, "esthetically":92, "aftereffect":92, "anarchistic":92, "filthiest":92, "moss-green":92, "megastars":92, "oil-packed":92, "smutty":92, "stigmatizes":92, "ill-trained":92, "gray-eyed":92, "mirrorlike":92, "unarguable":92, "spastically":92, "late-20th-century":92, "late-inning":92, "bulked-up":92, "derisory":92, "obscurities":92, "three-foot-high":92, "toothaches":92, "kerfuffle":92, "farsi":92, "commercial-scale":92, "cave-like":92, "reposed":92, "reconnoitering":92, "oil-fired":92, "lawfulness":92, "self-enclosed":92, "spray-painting":92, "beach-front":92, "frosted-glass":92, "emcees":92, "domiciles":92, "irregardless":92, "washboards":92, "suctioned":92, "sudoku":92, "subletting":92, "slicking":92, "intercedes":92, "braless":92, "dispensations":92, "indrawn":92, "siring":92, "risottos":92, "spindrift":92, "co-discoverer":92, "three-speed":92, "counter-revolution":92, "dollhouses":92, "counter-attack":92, "ninety-minute":92, "prefiguring":92, "easiness":92, "handstands":92, "plateaued":92, "assemblymen":92, "cherry-picking":92, "five-to-four":92, "fastfood":92, "swooshing":92, "unhip":92, "snowsuits":92, "undyed":92, "tickers":92, "non-agricultural":92, "compromiser":92, "darkhaired":92, "red-carpeted":92, "grump":92, "lead-lined":92, "repositions":92, "decommission":92, "cost-savings":92, "whoo-hoo":92, "ball-handling":92, "shade-loving":92, "artilleryman":92, "flub":92, "rebooted":92, "coproducer":92, "state-directed":92, "wellies":92, "silver-colored":92, "omnidirectional":92, "essayed":92, "kurd":92, "monarchists":92, "cashiered":92, "unsorted":92, "gestating":92, "thirteen-year":92, "impetuosity":92, "luxury-goods":92, "african-inspired":92, "daubing":92, "pigeonholes":92, "fumigate":92, "autodidact":92, "valises":92, "tais":92, "nonreading":92, "gasoline-electric":92, "grabbers":92, "silting":92, "suffragist":92, "swordsmen":92, "riptides":92, "erodible":92, "conformism":92, "unction":92, "unlinked":92, "leftmost":92, "dusk-to-dawn":92, "intuiting":92, "service-sector":92, "maws":92, "black-capped":92, "acclimatize":92, "decant":92, "allstar":92, "bogeymen":92, "brushfires":92, "in-jokes":92, "remodelers":92, "schoolbus":92, "school-bus":92, "re-use":92, "post-hurricane":92, "post-gulf":92, "packager":92, "player-coach":92, "nonurban":92, "hydro-electric":92, "fraudsters":92, "all-race":92, "unmentionables":92, "waiting-room":92, "three-prong":92, "palatability":92, "blights":92, "jumbles":92, "day-use":92, "interconnectivity":92, "penetrable":92, "well-treated":92, "unplowed":92, "wide-plank":92, "moonshiners":92, "charismatics":92, "forefeet":92, "three-disc":92, "vicepresident":92, "umbrian":92, "self-hypnosis":92, "gigantism":92, "mapmaking":92, "pah":92, "illumines":92, "barfly":92, "yachtsmen":92, "tenderizer":92, "ba'athist":92, "arts-related":92, "backflips":92, "counterterror":92, "non-participation":92, "anti-german":92, "cornhusker":92, "one-bath":92, "brandied":92, "anti-china":92, "bagman":92, "diversely":92, "pergolas":92, "portaging":92, "subalterns":92, "two-second":92, "high-latitude":92, "underachieve":92, "under-age":92, "nuclear-capable":92, "ladleful":92, "absentmindedness":92, "shunts":92, "four-item":92, "downwardly":92, "declamation":92, "nonwork":92, "dotcoms":92, "free-lancers":92, "extra-cost":92, "wallabies":92, "five-sided":92, "drug-abusing":92, "frogmen":92, "hauntings":92, "semi-sweet":92, "semi-custom":92, "witchery":92, "homesite":92, "homunculus":92, "taskforce":92, "employment-based":92, "steelmaker":92, "gad":92, "after-care":92, "crockpot":92, "physiatrist":92, "rapeseed":92, "sumptuary":92, "ding-dong":92, "half-blood":92, "footer":92, "consecrating":92, "narcosis":92, "county-level":92, "deers":92, "sunward":92, "asexually":92, "ecuadorians":92, "sentimentalists":92, "punt-return":92, "double-walled":92, "family-leave":92, "docosahexaenoic":92, "subbasement":92, "chi-squares":92, "channelization":92, "cost-plus":92, "pompom":92, "right-left":92, "drop-in":92, "tape-recorder":92, "deep-fat":92, "below-cost":92, "nontaxable":92, "pre-contact":92, "lightnings":92, "penstemons":92, "mild-winter":92, "small-game":92, "ranchettes":92, "diphthongs":92, "summiteers":92, "direct-injection":92, "aerobatic":92, "base-line":92, "volcanologist":92, "massager":92, "cays":92, "boomtowns":92, "hanseatic":92, "high-gain":92, "unassimilable":92, "poppy-seed":92, "win-lose":92, "hyperpigmentation":92, "fractionation":92, "self-portraiture":92, "delamination":92, "boarding-school":92, "pupal":92, "free-swimming":92, "cathouse":92, "piste":92, "consolidator":92, "consolidators":92, "capacity-building":92, "excitatory":92, "sessile":92, "video-editing":92, "broadsheets":92, "sutras":92, "titlist":92, "myelogenous":92, "midsoles":92, "brain-injured":92, "chipotles":92, "wigeon":92, "embalmer":92, "pudge":92, "neoplasia":92, "soilborne":92, "autobiographer":92, "parfaits":92, "product-liability":92, "procurator":92, "skeeter":92, "ethnomusicology":92, "penances":92, "toucan":92, "post-american":92, "whirligigs":92, "acyclovir":92, "legionaries":92, "rare-book":92, "joycean":92, "bagasse":92, "high-mass":92, "concentrator":92, "group-level":92, "drylands":92, "kraken":92, "best-fitting":92, "sophists":92, "same-old":92, "drawcord":92, "viscose":92, "apparat":92, "fiords":92, "colorants":92, "non-consensual":92, "tax-efficient":92, "queerness":92, "barmaids":92, "maquettes":92, "pre-intervention":92, "wineskin":92, "diet-related":92, "five-note":92, "alewife":92, "inter-item":92, "pirogues":92, "undernutrition":92, "pupfish":92, "self-advocacy":92, "hexavalent":92, "switchable":92, "trans-fat":92, "passionflower":92, "wetware":92, "arthroscopy":92, "lower-skilled":92, "amnio":92, "laterality":92, "voltaic":92, "nonbreeding":92, "precollegiate":92, "strandings":92, "single-channel":92, "zygotes":92, "yoghurt":92, "mycologist":92, "biaxial":92, "cephalopod":92, "viewscreens":92, "alehouse":92, "congee":92, "ligurian":92, "galangal":92, "cage-free":92, "baryonic":92, "intolerances":92, "advisees":92, "fossae":92, "carbon-monoxide":92, "in-plane":92, "palmatum":92, "thermography":92, "floodwall":92, "sigil":92, "prohibitionists":92, "intervenors":92, "criollos":92, "barbadian":92, "gleaner":92, "portabella":92, "laser-disc":92, "romulan":92, "decomposers":92, "non-obese":92, "noncommunicable":92, "chromoly":92, "nonserious":92, "three-body":92, "first-best":92, "neuropeptides":92, "multi-age":92, "microstructural":92, "rearrest":92, "fijians":92, "transnasal":92, "morphosyntactic":92, "self-referral":92, "starfighter":92, "chloroplast":92, "assayer":92, "paperwhites":92, "corrida":92, "thermocline":92, "curlews":92, "sylph":92, "keloids":92, "masquerader":92, "control-group":92, "filename":92, "mechs":92, "afro-cubans":92, "viceregal":92, "gutta":92, "mitochondrion":92, "bandoneon":92, "debugger":92, "periodontitis":92, "field-dependent":92, "rainfed":92, "self-watering":92, "intraracial":92, "self-generation":92, "rational-emotive":92, "amerasians":92, "psoas":92, "branes":92, "mycosis":92, "rhabdomyolysis":92, "nudibranchs":92, "democratizers":92, "alendronate":92, "banally":92, "hectarage":92, "race-norming":92, "lymphangioma":92, "oncocytomas":92, "master-at-arms":92, "pock-marked":92, "juggernauts":92, "fiascos":92, "cobbled-together":92, "back-to-nature":92, "unfashionably":92, "unforgivably":92, "longlasting":92, "half-block":92, "half-forgotten":92, "arduously":92, "straitened":92, "soft-pedal":92, "long-vanished":92, "cigar-chomping":92, "white-tablecloth":92, "well-insulated":92, "salt-of-the-earth":92, "shortish":92, "self-righteously":92, "tax-writing":92, "early-summer":92, "blue-tinted":92, "outranks":92, "unrevealing":92, "similar-looking":92, "steel-blue":92, "combated":92, "cribbed":92, "pantomiming":92, "forty-five-minute":92, "square-cut":92, "bumbled":92, "commentating":92, "cross-checked":92, "low-wattage":92, "immortalizing":92, "hodge-podge":92, "best-educated":92, "broader-based":92, "vandalize":92, "computerizing":92, "drop-ins":92, "linchpins":92, "transmogrified":92, "middle-american":92, "dime-sized":92, "suicidally":92, "leaven":92, "near-impossible":92, "drumroll":92, "feinting":92, "abstemious":92, "art-school":92, "enlightens":92, "playacting":92, "sheerest":92, "prostrating":92, "foulmouthed":92, "everchanging":92, "unequalled":92, "peaceniks":92, "half-remembered":92, "cloyingly":92, "barnlike":92, "sensationalizing":92, "swooshed":92, "unhitched":92, "big-headed":92, "bugbear":92, "elbow-to-elbow":92, "titter":92, "four-block":92, "damps":92, "hugeness":92, "non-voting":92, "red-and-green":92, "six-team":92, "six-plus":92, "self-adjusting":92, "social-economic":92, "fixates":92, "disease-ridden":92, "decadelong":92, "mountain-climbing":92, "gnashed":92, "no-nos":92, "pulsated":92, "republish":92, "bow-tied":92, "dehumanizes":92, "encouragements":92, "incalculably":92, "walled-in":92, "walkthrough":92, "broaches":92, "confectionary":92, "low-priority":92, "green-light":92, "dishonoring":92, "dishpan":92, "klutzy":92, "pantomimes":92, "stealers":92, "profit-oriented":92, "good-will":92, "mid-18th":92, "eulogizing":92, "adventurousness":92, "baseness":92, "horse-riding":92, "uninfluenced":92, "smarten":92, "white-capped":92, "west-side":92, "six-foot-long":92, "beauteous":92, "self-designated":92, "undiplomatic":92, "unbuckles":92, "sharp-toothed":92, "supercede":92, "nice-guy":92, "olive-drab":92, "community-college":92, "puzzlingly":92, "sourpuss":92, "totalitarians":92, "prizewinners":92, "repacked":92, "back-ups":92, "anthemic":92, "fluffs":92, "reeducate":92, "homophobes":92, "minesweepers":92, "cinnamon-colored":92, "butt-kicking":92, "foot-tall":92, "doorless":92, "spritzed":92, "couturiers":92, "fabric-covered":92, "front-yard":92, "partaken":92, "pre-show":92, "mooted":92, "tax-funded":92, "thirty-nine-year-old":92, "rapacity":92, "public-safety":92, "public-education":92, "bluish-green":92, "reassembles":92, "perplex":92, "sex-crazed":92, "treelike":92, "hued":92, "cribbing":92, "fishlike":92, "lampoons":92, "pillared":92, "blue-and-yellow":92, "selfconfidence":92, "scribblers":92, "tipsters":92, "high-sugar":92, "high-ticket":92, "end-run":92, "dilates":92, "civvies":92, "self-mockery":92, "diagrammed":92, "frailer":92, "tabulates":92, "arrant":92, "disease-specific":92, "cool-headed":92, "twilights":92, "quarantining":92, "pities":92, "lubricates":92, "killjoy":92, "allaying":92, "thin-crust":92, "ubiquitously":92, "seeing-eye":92, "fogies":92, "detouring":92, "cauterize":92, "big-haired":92, "nubbins":92, "purvey":92, "switcheroo":92, "stone-age":92, "teacherly":92, "criminalizes":92, "disempower":92, "sealed-off":92, "anti-affirmative":92, "harked":92, "proletarians":92, "single-car":92, "needle-like":92, "instamatic":92, "malefactor":92, "low-tax":92, "self-hate":92, "tuscan-style":92, "discotheques":92, "impenetrability":92, "linnean":92, "forward-facing":92, "planeloads":92, "nondrinkers":92, "mid-1880s":92, "liturgically":92, "polychromatic":92, "hornbeam":92, "deliverymen":92, "slackens":92, "ideologists":92, "hair-pulling":92, "protectorates":92, "overexcited":92, "fifty-mile":92, "chunked":92, "well-scrubbed":92, "war-like":92, "coheres":92, "one-gallon":92, "reestablishes":92, "fourth-highest":92, "communist-era":92, "inactions":92, "hatefully":92, "guilts":92, "lanolin":92, "noncancerous":92, "globalize":92, "dumb-ass":92, "confluences":92, "time-wasting":92, "ungloved":92, "burble":92, "avocations":92, "northwestward":92, "moorland":92, "taxman":92, "violet-blue":92, "early-1900s":92, "certitudes":92, "getters":92, "mentalist":92, "mid-conversation":92, "haymaker":92, "contrives":92, "solar-power":92, "reformulations":92, "non-prescription":92, "ex-communists":92, "conversationalists":92, "brogues":92, "user-friendliness":92, "de-escalate":92, "hot-tub":92, "nihilists":92, "trainload":92, "pump-action":92, "zen":92, "beiges":92, "scuzzy":92, "runic":92, "shushes":92, "loosey-goosey":92, "inflammable":92, "purdah":92, "tonally":92, "lubricious":92, "pandered":92, "labrum":92, "trackside":92, "constrictors":92, "falsies":92, "sports-talk":92, "price-conscious":92, "infinitude":92, "one-star":92, "self-managed":92, "self-questioning":92, "solomonic":92, "second-rounder":92, "non-legal":92, "chocolatier":92, "technology-intensive":92, "camisoles":92, "ad-supported":92, "extortionists":92, "rainmakers":92, "preens":92, "respirations":92, "affectless":92, "capos":92, "networker":92, "fortnightly":92, "uteruses":92, "blunderbuss":92, "mannerist":92, "pianissimo":92, "italic":92, "earaches":92, "finned":92, "uphills":92, "kameez":92, "party-building":92, "bird-watcher":92, "oleanders":92, "pneumatically":92, "exculpate":92, "cross-dresser":92, "state-licensed":92, "symptomless":92, "exhibitionists":92, "dribbler":92, "light-tackle":92, "oligarch":92, "shew":92, "one-for-one":92, "coffeemakers":92, "head-butted":92, "sidedecks":92, "glass-front":92, "check-off":92, "mistreats":92, "decriminalized":92, "dieted":92, "choirboys":92, "pale-faced":92, "religion-based":92, "taquerias":92, "dot-matrix":92, "bacchanalia":92, "indian-american":92, "ophthalmologic":92, "developable":92, "ruminant":92, "ex-soldiers":92, "ukranian":92, "fire-retardant":92, "futons":92, "non-trivial":92, "pro-russian":92, "field-test":92, "reabsorption":92, "detriments":92, "demerit":92, "superglue":92, "conceptualist":92, "millstones":92, "personalised":92, "videography":92, "tipple":92, "stakeouts":92, "phased-in":92, "unacceptability":92, "tempi":92, "some-one":92, "route-finding":92, "colorized":92, "apollonian":92, "diggin":92, "on-snow":92, "pastoring":92, "phlebitis":92, "unchallengeable":92, "plungers":92, "re-imagine":92, "ricer":92, "hellcat":92, "geosciences":92, "xylophones":92, "yellow-bellied":92, "tree-lighting":92, "lutheranism":92, "potheads":92, "off-price":92, "missourians":92, "foreperson":92, "carbohydrate-rich":92, "anti-labor":92, "taloned":92, "incendiaries":92, "growed":92, "gluteals":92, "lavender-blue":92, "sub-sample":92, "underplanted":92, "toboggans":92, "nevermore":92, "photomicrograph":92, "notionally":92, "reverberant":92, "grebes":92, "clericalism":92, "neurosciences":92, "intermarriages":92, "bulrush":92, "binging":92, "nonobjective":92, "salt-tolerant":92, "ethnographical":92, "cioppino":92, "soft-shelled":92, "pro-lifer":92, "dayhiking":92, "chipboard":92, "postbellum":92, "store-brand":92, "warfighting":92, "heh-heh":92, "yeshivas":92, "bullhead":92, "fosse":92, "retroactivity":92, "achromatic":92, "novelization":92, "guanine":92, "dories":92, "harpsichordist":92, "person-environment":92, "underclassman":92, "remarriages":92, "subassemblies":92, "berserker":92, "bergs":92, "fistulas":92, "sergeant-at-arms":92, "riven":92, "dachas":92, "tax-preparation":92, "pleasure-seeking":92, "calabrian":92, "arborists":92, "ethnobotany":92, "pronation":92, "aircrew":92, "carpathians":92, "subject-object":92, "soffit":92, "thirty-eighth":92, "haloes":92, "combat-related":92, "biogeochemistry":92, "forest-products":92, "metonym":92, "flamingoes":92, "rhomboids":92, "freudianism":92, "antiperspirants":92, "metal-rich":92, "bi-district":92, "undecidability":92, "goslings":92, "slovenians":92, "disembodiment":92, "supercontinent":92, "ripcord":92, "low-noise":92, "child-free":92, "godchildren":92, "phenylketonuria":92, "institutionalist":92, "insurrectionary":92, "crits":92, "contracture":92, "daily-fee":92, "yemenite":92, "enablement":92, "rennet":92, "hanoverian":92, "usufruct":92, "melanocytes":92, "lookalikes":92, "hawser":92, "caissons":92, "aspirate":92, "sweeties":92, "poststructuralists":92, "sib":92, "spacewalkers":92, "loppers":92, "self-actualized":92, "sociobiologists":92, "disability-related":92, "end-times":92, "end-of-course":92, "parastatals":92, "rebuttable":92, "tartlet":92, "codebook":92, "impaction":92, "biogenetic":92, "yellowjackets":92, "virtu":92, "continuing-care":92, "monetization":92, "monetarism":92, "insurable":92, "merman":92, "viceroyalty":92, "multiport":92, "biotechs":92, "kidnaping":92, "examinee":92, "dosas":92, "non-west":92, "fascial":92, "teacher-rated":92, "low-order":92, "underemphasized":92, "study-abroad":92, "yoyo":92, "pulsatile":92, "epithelioid":92, "single-dose":92, "interatomic":92, "androcentric":92, "logocentrism":92, "normativity":92, "terraform":92, "photocells":92, "modern-dance":92, "aminos":92, "comix":92, "intra-regional":92, "creatives":92, "polynomials":92, "businesss":92, "radiographically":92, "clockworks":92, "wrasse":92, "sundews":92, "floristic":92, "manus":92, "cryptogram":92, "non-starters":92, "stoma":92, "quant":92, "banqueting":92, "bryozoans":92, "semiosis":92, "goby":92, "dollarization":92, "noncom":92, "t-value":92, "cash-out":92, "moieties":92, "pterosaurs":92, "gratuitousness":92, "chinup":92, "copy-protected":92, "anti-mafia":92, "presbyopia":92, "cause-specific":92, "group-administered":92, "grid-connected":92, "local-scale":92, "monopsony":92, "spay/neuter":92, "muscadines":92, "protists":92, "preclusion":92, "achaemenid":92, "grebe":92, "idolization":92, "disaffiliation":92, "flexion-extension":92, "substitutionary":92, "exoteric":92, "emachines":92, "counter-drug":92, "cyclotrons":92, "hagiographers":92, "non-elites":92, "interferons":92, "cricoid":92, "ligamentous":92, "intracompany":92, "fluorosis":92, "toxoid":92, "cross-site":92, "seamount":92, "floodwalls":92, "ondansetron":92, "fatigability":92, "outcrossing":92, "microlensing":92, "overvotes":92, "aconites":92, "pre-refunded":92, "cross-level":92, "polyploidy":92, "malawians":92, "franchisors":92, "telepaths":92, "hydrogeologic":92, "grammaticality":92, "interphone":92, "subpart":92, "mikveh":92, "specialist-level":92, "subagents":92, "javan":92, "madrassahs":92, "signaler":92, "expungement":92, "malaria-endemic":92, "proteinase":92, "noise-reducing":92, "nasolacrimal":92, "psychosurgery":92, "thyroarytenoid":92, "aerospike":92, "lusterware":92, "entitative":92, "anthropoids":92, "leafrollers":92, "leaded-glass":93, "middle-ground":93, "reckonings":93, "troves":93, "onesies":93, "just-opened":93, "overambitious":93, "ferreted":93, "goatees":93, "skinniest":93, "windbag":93, "whets":93, "drools":93, "entwine":93, "pink-cheeked":93, "shakiness":93, "unconscionably":93, "hard-partying":93, "disapprobation":93, "adduce":93, "traffics":93, "sleep-inducing":93, "underequipped":93, "graffiti-covered":93, "overstretched":93, "adjourning":93, "barrel-shaped":93, "debilitate":93, "handiest":93, "play-acting":93, "tonier":93, "sashays":93, "airlifts":93, "near-unanimous":93, "excoriate":93, "button-downs":93, "palled":93, "hightailing":93, "unbuckling":93, "gelled":93, "bemusedly":93, "perverting":93, "rebranded":93, "one-in-a-million":93, "archconservative":93, "anachronistically":93, "silver-tongued":93, "seventh-place":93, "suffocatingly":93, "yale-educated":93, "wonderfulness":93, "off-load":93, "lastminute":93, "boons":93, "discernibly":93, "down-at-the-heels":93, "rephrased":93, "neon-colored":93, "commandingly":93, "laid-out":93, "demeanors":93, "up-close-and-personal":93, "surreally":93, "vouchsafed":93, "cash-starved":93, "gussied-up":93, "better-informed":93, "abrading":93, "outshining":93, "unspooling":93, "untamable":93, "sun-streaked":93, "road-trip":93, "outraging":93, "oil-stained":93, "nonplused":93, "quasi-military":93, "better-equipped":93, "better-funded":93, "standard-sized":93, "upthrust":93, "contemporaneity":93, "forages":93, "hopped-up":93, "preoccupying":93, "much-criticized":93, "too-high":93, "treasure-trove":93, "three-cornered":93, "pulchritude":93, "halters":93, "race-day":93, "trendsetting":93, "glamorously":93, "washouts":93, "seven-plus":93, "congregates":93, "different-size":93, "folksiness":93, "proverbially":93, "longer-lived":93, "fibbed":93, "unfathomably":93, "superannuated":93, "south-of-the-border":93, "reincarnations":93, "plainest":93, "paling":93, "palliatives":93, "babbles":93, "effectually":93, "arrestingly":93, "blaspheme":93, "reshoot":93, "handwringing":93, "corkscrewing":93, "generationally":93, "lichen-covered":93, "tension-filled":93, "demystifies":93, "orthodontia":93, "huffily":93, "under-reported":93, "sunshiny":93, "readjusts":93, "lunch-hour":93, "jacked-up":93, "bloodily":93, "co-founding":93, "unlamented":93, "deep-voiced":93, "telephonic":93, "stupendously":93, "lechery":93, "millenia":93, "hip-deep":93, "game-breaking":93, "bait-and-switch":93, "trailer-park":93, "timberlands":93, "outdistance":93, "easy-access":93, "fear-mongering":93, "crablike":93, "colloquia":93, "parasailing":93, "mid-way":93, "elapses":93, "indecently":93, "lockouts":93, "one-shoulder":93, "blotters":93, "gun-wielding":93, "skull-and-crossbones":93, "exotic-looking":93, "ghettoization":93, "line-drive":93, "relaunched":93, "uncorks":93, "human-sized":93, "misreadings":93, "dance-hall":93, "bible-thumping":93, "circumstantially":93, "consorted":93, "men-only":93, "general-election":93, "priggish":93, "electroconvulsive":93, "extrapolates":93, "chlorofluorocarbon":93, "propounding":93, "sixth-place":93, "oppressiveness":93, "semi-rural":93, "toughing":93, "time-efficient":93, "samosas":93, "spittoons":93, "eyeteeth":93, "pre-dinner":93, "then-girlfriend":93, "redundantly":93, "coifs":93, "emmy-nominated":93, "fool-proof":93, "irrigates":93, "offensiveness":93, "dentition":93, "contritely":93, "obviated":93, "dishonors":93, "farrago":93, "unaccented":93, "reformat":93, "inseminate":93, "eared":93, "early-nineteenth-century":93, "zings":93, "zealousness":93, "cakey":93, "screechy":93, "unresisting":93, "oil-related":93, "barehanded":93, "intramurals":93, "unwonted":93, "vivisection":93, "candy-striped":93, "get-acquainted":93, "self-hating":93, "multi-tasking":93, "disconnectedness":93, "clawlike":93, "courtliness":93, "government-led":93, "overexertion":93, "megaton":93, "pre-marital":93, "confinements":93, "cocreator":93, "below-the-belt":93, "dumper":93, "woozily":93, "gloats":93, "prizing":93, "caboodle":93, "eight-tenths":93, "two-and-a-half-year-old":93, "fast-growth":93, "depersonalized":93, "hieroglyph":93, "kiss-off":93, "half-siblings":93, "inhalations":93, "soulfulness":93, "hard-looking":93, "toadies":93, "stone-washed":93, "ringless":93, "oaky":93, "great-aunts":93, "envelopment":93, "wallet-sized":93, "countable":93, "mimeograph":93, "costless":93, "mid-twentieth-century":93, "higher-density":93, "nighthawks":93, "mommas":93, "black-box":93, "blabbed":93, "gas-filled":93, "anti-capitalist":93, "acculturating":93, "expropriations":93, "mortarboard":93, "hydrographic":93, "flippy":93, "cupidity":93, "durables":93, "malayan":93, "resource-intensive":93, "week-end":93, "correctives":93, "non-official":93, "privately-owned":93, "tap-in":93, "human-centered":93, "pro-taliban":93, "addressable":93, "glibness":93, "terminators":93, "tie-breaker":93, "handsprings":93, "four-track":93, "drag-and-drop":93, "sport-fishing":93, "noncooperation":93, "global-positioning":93, "russian-built":93, "duping":93, "fried-chicken":93, "coccyx":93, "monotonically":93, "one-click":93, "home-video":93, "luxuriance":93, "hangups":93, "high-back":93, "preshow":93, "lift-served":93, "clear-thinking":93, "inside-the-park":93, "up-down":93, "thirty-fourth":93, "self-starter":93, "slangy":93, "money-hungry":93, "lazarette":93, "adult-oriented":93, "saintliness":93, "twelve-year-olds":93, "gerrymander":93, "catalyzes":93, "non-payment":93, "unassembled":93, "velvet-lined":93, "embezzler":93, "domestic-policy":93, "waterspout":93, "mineralized":93, "mothered":93, "homoeroticism":93, "phone-sex":93, "food-producing":93, "e-newsletter":93, "faculty-student":93, "cowhands":93, "hearses":93, "artifices":93, "flubs":93, "slide-out":93, "bed-wetting":93, "decentering":93, "poverty-level":93, "centerfolds":93, "climatically":93, "offsides":93, "funnest":93, "handoffs":93, "hierarchic":93, "tiding":93, "two-wheel-drive":93, "fuselages":93, "neighed":93, "japanese-made":93, "wide-area":93, "overacting":93, "one-second":93, "nonviolently":93, "oldgrowth":93, "goldfinches":93, "haricots":93, "aardvark":93, "black-painted":93, "nonviable":93, "persuader":93, "mid-sixteenth":93, "victimology":93, "solid-color":93, "loiterers":93, "extra-strength":93, "anti-science":93, "well-browned":93, "walking-around":93, "great-niece":93, "great-grandma":93, "postfeminist":93, "circumcisions":93, "high-acid":93, "anti-reform":93, "drumhead":93, "kabob":93, "excursus":93, "flat-tax":93, "water-holding":93, "granularity":93, "saltine":93, "embryologist":93, "northland":93, "topicality":93, "proconsul":93, "fisting":93, "tutsi-dominated":93, "insectivorous":93, "horsehide":93, "misanthropy":93, "parents-in-law":93, "nonporous":93, "baristas":93, "master's-level":93, "murres":93, "adverts":93, "creekbed":93, "boot-up":93, "non-responsive":93, "herpetologists":93, "seventeen-year-olds":93, "white-trash":93, "self-consistent":93, "shoulds":93, "guided-missile":93, "diaphragmatic":93, "dark-complexioned":93, "deportable":93, "newly-created":93, "periwinkles":93, "sheepskins":93, "g-force":93, "tic-tac-toe":93, "souks":93, "portmanteau":93, "piebald":93, "hotel/motel":93, "land-owning":93, "optometric":93, "shadowbox":93, "windsurfer":93, "short-duration":93, "cunts":93, "nookie":93, "box-like":93, "favourably":93, "ease-of-use":93, "sulfa":93, "mortadella":93, "dry-season":93, "brassica":93, "technocracy":93, "collaborationist":93, "antimilitary":93, "non-work":93, "intellectualization":93, "ground-to-air":93, "high-iq":93, "poultices":93, "ecosphere":93, "coanchor":93, "non-game":93, "electromyographic":93, "escargots":93, "investable":93, "storm-water":93, "subcortical":93, "geopolitically":93, "hegemonies":93, "foil-covered":93, "denotation":93, "prelims":93, "prelim":93, "publican":93, "self-tanners":93, "rubato":93, "lawn-care":93, "calabashes":93, "unstuffed":93, "mics":93, "double-faced":93, "finny":93, "variance-covariance":93, "cheques":93, "ranchero":93, "semicolons":93, "rent-a-cop":93, "dichotomizing":93, "levantine":93, "downspout":93, "kinesthetically":93, "double-standard":93, "everydayness":93, "single-species":93, "transcendentalist":93, "ticketless":93, "wide-mouth":93, "gunbelt":93, "politique":93, "scrimshaw":93, "pimentos":93, "greatgrandmother":93, "magneto":93, "spectrophotometer":93, "midbrain":93, "interurban":93, "acid-fast":93, "co-curricular":93, "headwall":93, "medievalism":93, "astroimagers":93, "sub-prime":93, "endoscopically":93, "negations":93, "oud":93, "absorptiometry":93, "friendly-fire":93, "hypochondriacal":93, "midships":93, "sector-specific":93, "post-testing":93, "cross-trainers":93, "superstate":93, "tableland":93, "ensuite":93, "orientalists":93, "solar-panel":93, "usurpations":93, "high-caste":93, "impalas":93, "boogie-woogie":93, "non-dairy":93, "gravid":93, "master-slave":93, "spheroid":93, "summer-league":93, "nonoccurrence":93, "fuckhead":93, "life-spans":93, "pre-state":93, "doper":93, "inter-tribal":93, "corruptly":93, "loopers":93, "prevalences":93, "self-alienation":93, "sound-alike":93, "pay-to-play":93, "confabulation":93, "headmasters":93, "five-level":93, "dualist":93, "paired-samples":93, "diesel-electric":93, "allosaurus":93, "call-center":93, "machine-guns":93, "non-industrial":93, "arterials":93, "in-place":93, "truth-seeking":93, "confocal":93, "mild-to-moderate":93, "ciders":93, "amine":93, "kleptomania":93, "out-of-area":93, "polysaccharides":93, "professional-level":93, "practicability":93, "scrap-metal":93, "upper-back":93, "vitiligo":93, "zebu":93, "clave":93, "ketones":93, "hot-pressed":93, "redactions":93, "fluoridation":93, "taggers":93, "anti-satellite":93, "adductors":93, "adduction":93, "probationer":93, "primitively":93, "sleep-related":93, "co-morbidity":93, "anti-imperialism":93, "tippets":93, "two-cycle":93, "dual-suspension":93, "child-related":93, "celibates":93, "fen-phen":93, "anthropologies":93, "equal-protection":93, "skink":93, "sandstones":93, "formula-fed":93, "exogamous":93, "environment-related":93, "heterocyclic":93, "non-being":93, "catholic-jewish":93, "anti-obscenity":93, "chi-chi":93, "pro-china":93, "enterprise-wide":93, "amperes":93, "agro-industrial":93, "vortexes":93, "misbehaviour":93, "heme":93, "professorate":93, "quasi-static":93, "ordo":93, "retransmission":93, "cribriform":93, "wet/dry":93, "codec":93, "salesian":93, "participations":93, "longbeard":93, "maintainers":93, "exercise-related":93, "caimans":93, "individuating":93, "pluripotent":93, "anti-porn":93, "monoplane":93, "ladino":93, "swim/tennis":93, "kopecks":93, "poorhouses":93, "akkadian":93, "ontologies":93, "deuteron":93, "cryopreservation":93, "hyperplastic":93, "faecal":93, "urbanists":93, "prodigality":93, "repellency":93, "intifadeh":93, "case-based":93, "physiographic":93, "workhouses":93, "zoysia":93, "snow-making":93, "lower-sodium":93, "metapopulation":93, "microcontrollers":93, "anti-piracy":93, "compensable":93, "whelk":93, "stalagmite":93, "non-kosher":93, "self-communication":93, "septoplasty":93, "stoneflies":93, "ultraconservatives":93, "systole":93, "longneck":93, "participial":93, "netters":93, "trencher":93, "foreseeability":93, "anticholinergic":93, "relapsing-remitting":93, "activations":93, "pascalian":93, "photoreceptor":93, "gnomon":93, "interschool":93, "nasolabial":93, "cowpea":93, "rocketeers":93, "thalassemia":93, "nanas":93, "nectars":93, "micromachines":93, "luciferase":93, "shuckers":93, "thoracotomy":93, "reverser":93, "self-executing":93, "kemalism":93, "zircons":93, "amontillado":93, "codecs":93, "haul-out":93, "bandidos":93, "breathiness":93, "rhodopsin":93, "oocyte":93, "monophyletic":93, "influenzas":93, "binaurally":93, "lycanthrope":93, "nonnormative":93, "hornless":93, "agentes":93, "sevenths":93, "soyfoods":93, "trichotillomania":93, "mousehole":93, "nuclides":93, "rhodesians":93, "hatchery-reared":93, "second-mortgage":93, "anhydride":93, "psychologism":93, "managerialism":93, "majority-rule":93, "sphenopalatine":93, "gating":93, "sado-masochism":93, "after-class":93, "smear-positive":93, "guilt-producing":93, "disyllabic":93, "clamming":93, "acclimating":93, "outmatched":93, "talentless":93, "sullying":93, "least-known":93, "no-interest":93, "oversleep":93, "rain-drenched":93, "respites":93, "once-promising":93, "mediocrities":93, "extirpate":93, "stage-managed":93, "tech-heavy":93, "userfriendly":93, "worn-down":93, "pimpled":93, "pristinely":93, "acing":93, "envisaging":93, "drizzles":93, "desperadoes":93, "scuba-diving":93, "infectiously":93, "sheerly":93, "chestnut-colored":93, "nuh-uh":93, "rhapsodizes":93, "deathtrap":93, "fresh-picked":93, "bone-weary":93, "bone-rattling":93, "mud-splattered":93, "orthopedists":93, "penurious":93, "dovetailing":93, "under-the-radar":93, "spot-on":93, "hundred-plus":93, "close-mouthed":93, "tough-as-nails":93, "unmovable":93, "countersued":93, "snow-dusted":93, "shatterproof":93, "supercharge":93, "tinges":93, "rafted":93, "overenthusiastic":93, "namby-pamby":93, "congeals":93, "fifty-minute":93, "dopes":93, "overindulging":93, "innocuously":93, "ink-black":93, "soft-looking":93, "pressure-packed":93, "immodestly":93, "square-shaped":93, "square-mile":93, "slurps":93, "off-the-charts":93, "high-brow":93, "cartoonlike":93, "lazed":93, "perplexes":93, "profanity-laced":93, "quarter-sized":93, "pleasantry":93, "lovelies":93, "premonitory":93, "mirthlessly":93, "chart/map":93, "vitiated":93, "soon-to-be-released":93, "yellow-and-black":93, "buddy-buddy":93, "open-eyed":93, "preliterate":93, "newsy":93, "unstained":93, "mid-1900s":93, "jiving":93, "incompetently":93, "gabbling":93, "forty-minute":93, "late-1990s":93, "jillion":93, "disclaimed":93, "toques":93, "thunderclaps":93, "spruced-up":93, "obsequiousness":93, "misspoken":93, "chambering":93, "fisheye":93, "dreaminess":93, "supersecret":93, "then-director":93, "honeycombs":93, "rakishly":93, "conniption":93, "burglarize":93, "chunkier":93, "reroll":93, "undescribed":93, "toylike":93, "same-size":93, "heartiness":93, "mailorder":93, "repave":93, "wire-frame":93, "well-turned":93, "slinked":93, "showier":93, "showmen":93, "semi-professional":93, "flavor-packed":93, "effluvia":93, "palm-fringed":93, "single-most":93, "last-gasp":93, "capered":93, "bonanzas":93, "corkscrewed":93, "desultorily":93, "rejuvenates":93, "pied-a-terre":93, "cliff-hanger":93, "castigation":93, "calorie-free":93, "handier":93, "importunate":93, "red-and-white-striped":93, "team-by-team":93, "two-and-a-half-hour":93, "tackiness":93, "unrefrigerated":93, "spacefaring":93, "lorded":93, "pipe-smoking":93, "shakedowns":93, "snarly":93, "transgresses":93, "de-emphasizes":93, "posses":93, "mule-drawn":93, "mullioned":93, "hand-printed":93, "wicked-looking":93, "beseechingly":93, "all-too":93, "more-sophisticated":93, "inefficacy":93, "phrasings":93, "blackmailer":93, "bushed":93, "skinflint":93, "solid-looking":93, "twostory":93, "role-model":93, "outliving":93, "hushes":93, "madrigals":93, "animal-print":93, "dorm-room":93, "craftsman-style":93, "favours":93, "construction-paper":93, "black-diamond":93, "knuckling":93, "harped":93, "reclassifying":93, "typifying":93, "ruinously":93, "career-wise":93, "compendia":93, "equalizers":93, "more-advanced":93, "medievalist":93, "acuteness":93, "camel-hair":93, "condemnatory":93, "externalized":93, "windiest":93, "stagey":93, "wittier":93, "post-christmas":93, "expectedly":93, "two-hundred-year-old":93, "undammed":93, "heat-proof":93, "absoluteness":93, "breastplates":93, "coruscating":93, "feet-first":93, "explications":93, "unproduced":93, "offloading":93, "sleaziest":93, "subclass":93, "fresh-air":93, "hardliner":93, "high-net-worth":93, "thingies":93, "featherlight":93, "close-quarters":93, "bracingly":93, "reinterprets":93, "state-certified":93, "tenderizes":93, "wintery":93, "wised":93, "writer-producer":93, "frigidity":93, "countrywoman":93, "from-scratch":93, "smart-alecky":93, "small-screen":93, "enquired":93, "battening":93, "lamplit":93, "tussocks":93, "varnishing":93, "lionize":93, "postulation":93, "fortissimo":93, "first-tier":93, "better-tasting":93, "admonitory":93, "hypercompetitive":93, "unspooled":93, "unsnap":93, "stickiest":93, "oilskin":93, "rear-mounted":93, "rear-window":93, "cannonade":93, "dirndl":93, "double-dealing":93, "demarcates":93, "classifiable":93, "upper-deck":93, "catalpa":93, "audibles":93, "gerontologists":93, "screw-top":93, "unsuitability":93, "laywoman":93, "abjure":93, "forty-fourth":93, "problemo":93, "boom-bust":93, "clayey":93, "three-day-old":93, "greenwashing":93, "misstates":93, "data-storage":93, "birdcalls":93, "pokers":93, "room-sized":93, "tarring":93, "smallscale":93, "silhouetting":93, "seven-acre":93, "season-low":93, "wine-dark":93, "cut-and-paste":93, "grab-and-go":93, "ungraceful":93, "countermand":93, "counterexample":93, "throwed":93, "slenderness":93, "angel-hair":93, "gallops":93, "fust":93, "firelit":93, "high-schooler":93, "in-dash":93, "ocean-front":93, "electric-power":93, "detestation":93, "cast-offs":93, "noninvolvement":93, "social-justice":93, "slip-ups":93, "freeform":93, "concomitants":93, "airlifting":93, "reifies":93, "pretrip":93, "spinmeisters":93, "comrades-in-arms":93, "aspersion":93, "paisleys":93, "whupped":93, "dietetics":93, "cup-shaped":93, "baneful":93, "fencepost":93, "photosynthesize":93, "poon":93, "tropospheric":93, "reproving":93, "stepping-stones":93, "high-walled":93, "highest-paying":93, "maddest":93, "dimwit":93, "sandblast":93, "viewfinders":93, "blanches":93, "meat-based":93, "flinders":93, "ragtop":93, "well-fitting":93, "balladry":93, "spit-up":93, "man-on-the-street":93, "coachspeak":93, "twice-baked":93, "machine-like":93, "liquefying":93, "housecleaner":93, "grand-jury":93, "transdermal":93, "ahs":93, "pro-death":93, "goody-two-shoes":93, "frittatas":93, "fibroblast":93, "pre-ordained":93, "rescission":93, "silkscreen":93, "supertankers":93, "phonebook":93, "most-popular":93, "conventionalized":93, "carbon-neutral":93, "toolboxes":93, "viaducts":93, "valorized":93, "thumbtacks":93, "handymen":93, "jinxed":93, "intermediate-level":93, "forbear":93, "vocational-technical":93, "sooth":93, "mid-course":93, "off-ramps":93, "bullfighters":93, "topcoats":93, "vascularity":93, "vestment":93, "suborning":93, "self-funded":93, "caramelizes":93, "polecat":93, "self-designed":93, "awardees":93, "half-black":93, "ragamuffin":93, "reoccupy":93, "parses":93, "nickered":93, "snowiest":93, "towel-lined":93, "compact-disc":93, "effeminacy":93, "flatirons":93, "rich-poor":93, "reappraisals":93, "remixing":93, "jawbones":93, "porting":93, "flyovers":93, "bandbox":93, "twentyfirst":93, "resister":93, "shut-up":93, "deaf-mute":93, "expandability":93, "egocentricity":93, "well-baby":93, "wind-chill":93, "wizardly":93, "gunfighters":93, "decriminalizing":93, "roll-top":93, "civil-liberties":93, "vileness":93, "co-investigator":93, "stadia":93, "penalty-free":93, "shelf-life":93, "schoolbag":93, "unhappiest":93, "crossbeams":93, "cross-tabulation":93, "noncooperative":93, "underwire":93, "air-to-ground":93, "codefendants":93, "spanks":93, "trellised":93, "checkin":93, "contrasty":93, "microstructures":93, "alternative-rock":93, "barbwire":93, "pom-pom":93, "non-college":93, "misconstruing":93, "lost-and-found":93, "augmentations":93, "transversely":93, "any-way":93, "mid-evening":93, "lysis":93, "link-up":93, "bulls-eye":93, "disjunct":93, "presider":93, "solar-heated":93, "squareness":93, "refractions":93, "afterburner":93, "zucchinis":93, "inkblots":93, "nonselective":93, "noncontiguous":93, "nonbank":93, "webcasts":93, "shrink-wrap":93, "nominalism":93, "per-son":93, "undecidable":93, "alienness":93, "full-employment":93, "full-season":93, "aleatory":93, "username":93, "speed-up":93, "solid-fuel":93, "overpressure":93, "outlander":93, "sulphuric":93, "assisted-suicide":93, "infall":93, "five-run":93, "pen-based":93, "paraglider":93, "self-assertive":93, "roof-mounted":93, "social-cultural":93, "pintail":93, "remapping":93, "laserdisc":93, "underpayment":93, "nonschool":93, "plus-sized":93, "plyometrics":93, "ethno-religious":93, "ethnobotanist":93, "reformatting":93, "greenways":93, "data-base":93, "apperception":93, "auscultation":93, "contractures":93, "late-nineteenth":93, "neurocognitive":93, "unretired":93, "empiricists":93, "tweeters":93, "stroboscopic":93, "wine-making":93, "radioisotope":93, "redbuds":93, "homebuyer":93, "single-level":93, "sportscasting":93, "freeriding":93, "distally":93, "tach":93, "verbalizations":93, "outmigration":93, "millibars":93, "overprotection":93, "fencerows":93, "carcinogenesis":93, "czechoslovaks":93, "dictaphone":93, "heterodoxy":93, "alewives":93, "fellow-feeling":93, "rule-governed":93, "griddles":93, "chi-squared":93, "ampersand":93, "dysmorphic":93, "small-firm":93, "circularly":93, "archdeacon":93, "anastomosis":93, "loge":93, "postcolonialism":93, "chimeric":93, "panopticon":93, "torchbearers":93, "recordholder":93, "reconversion":93, "president/ceo":93, "turn-taking":93, "calcifications":93, "twat":93, "zappers":93, "audiometer":93, "fairgoers":93, "spheroidal":93, "turfs":93, "unbanning":93, "mainmast":93, "involution":93, "pastelists":93, "sikhism":93, "proscriptive":93, "single-stranded":93, "brownshirts":93, "festschrift":93, "adders":93, "well-acted":93, "glycine":93, "lobular":93, "reverends":93, "presbyteries":93, "feminazis":93, "harpsichords":93, "balalaika":93, "needs-based":93, "brownness":93, "underlayer":93, "non-athlete":93, "bronchodilator":93, "dowsing":93, "otalgia":93, "birdsongs":93, "mazy":93, "countersink":93, "efflux":93, "downforce":93, "multi-tool":93, "salaryman":93, "lovastatin":93, "trapline":93, "standers":93, "unusualness":93, "pikas":93, "eclair":93, "osteogenesis":93, "cyber-security":93, "mamba":93, "par-five":93, "perineal":93, "jerusalemites":93, "commun":93, "central-city":93, "all-carbon":93, "bactrian":93, "dobsonians":93, "non-mormon":93, "post-colonialism":93, "sulfite":93, "blacklists":93, "hydroquinone":93, "dimorphic":93, "extremophiles":93, "orphic":93, "belatedness":93, "epiphytic":93, "fixatives":93, "coinsurance":93, "country-fried":93, "metastable":93, "bitmap":93, "shotshell":93, "imipramine":93, "murine":93, "intraregional":93, "profanation":93, "creamware":93, "edibility":93, "topwaters":93, "gorget":93, "distractor":93, "black-jewish":93, "stingless":93, "astroimaging":93, "formularies":93, "stereopticon":93, "telematics":93, "stutterer":93, "rule-of-law":93, "liquid-fuel":93, "matricide":93, "central-bank":93, "sixths":93, "postmasters":93, "erythrocytes":93, "stenting":93, "phosphorylation":93, "versicolor":93, "antrum":93, "variable-star":93, "ultraportable":93, "dvd-rom":93, "toxoplasma":93, "fembot":93, "acceptor":93, "extradiegetic":93, "medium-volume":93, "rosicrucian":93, "principal-agent":93, "stock-based":93, "nonvoters":93, "imprimatura":93, "neighborhood-level":93, "scarabs":93, "vasoconstrictor":93, "scarps":93, "pantheons":93, "point-of-use":93, "chinups":93, "metaphysicians":93, "place-name":93, "non-target":93, "extranet":93, "independent-counsel":93, "care-taking":93, "heteronomous":93, "pharming":93, "dogmatics":93, "hydric":93, "vervain":93, "trecento":93, "polyhedron":93, "mercuric":93, "colorant":93, "disposer":93, "time-invariant":93, "time-of-use":93, "deerskins":93, "northcentral":93, "crudes":93, "fescues":93, "polyamorous":93, "superfluidity":93, "limited-entry":93, "overcorrection":93, "wineshop":93, "queendom":93, "salafism":93, "chaat":93, "birthmother":93, "calutrons":93, "blepharitis":93, "cardiogenic":93, "marmoset":93, "out-of-seat":93, "luteal":93, "scratchboard":93, "tutees":93, "rickettsial":93, "medium-quality":93, "singulars":93, "motorically":93, "low-gi":93, "driftnetting":93, "infrasound":93, "gifted-education":93, "progestagen":93, "ecovillage":93, "alexithymia":93, "perianth":93, "quasiparticles":93, "mesophytic":93, "afterdeath":93, "befuddling":93, "armor-plated":93, "secretary-designate":93, "pooh-poohing":93, "shiniest":93, "pullouts":93, "getups":93, "eight-foot-high":93, "dissuades":93, "disquisitions":93, "great-great-grandson":93, "titillated":93, "scrimped":93, "not-so-great":93, "deduces":93, "camera-toting":93, "importuning":93, "four-foot-high":93, "ennobled":93, "best-run":93, "six-term":93, "prosaically":93, "corsages":93, "bellicosity":93, "post-natal":93, "near-sighted":93, "status-conscious":93, "number-crunching":93, "opaquely":93, "purveying":93, "alpenglow":93, "unhesitating":93, "so-far":93, "human-scale":93, "pitilessly":93, "reality-show":93, "circumnavigating":93, "citified":93, "heebie-jeebies":93, "gracelessly":93, "irrelevantly":93, "irradiating":93, "red-striped":93, "red-letter":93, "whistle-stop":93, "room-size":93, "one-paragraph":93, "conservation-minded":93, "bottled-up":93, "ear-piercing":93, "delectably":93, "re-electing":93, "semiliterate":93, "shrewish":93, "state-operated":93, "main-course":93, "gilt-framed":93, "greenish-yellow":93, "enshrining":93, "firsttime":93, "bumpier":93, "ravening":93, "modest-size":93, "kittenish":93, "glacier-carved":93, "temporizing":93, "quasi-official":93, "rendezvoused":93, "brisker":93, "head-banging":93, "little-understood":93, "unvisited":93, "up-market":93, "zigs":93, "emptyhanded":93, "nuttier":93, "horseflies":93, "halfdozen":93, "mid-1870s":93, "jocularity":93, "incorrigibly":93, "quasi-scientific":93, "nonmonetary":93, "steel-and-glass":93, "sadden":93, "systematizing":93, "subscription-based":93, "vengefulness":93, "soldiery":93, "three-hundred-pound":93, "challengingly":93, "forestalls":93, "fulminating":93, "non-scientific":93, "pressure-cooker":93, "piled-up":93, "presentday":93, "goosed":93, "eyebrow-raising":93, "dumbed-down":93, "text-only":93, "texas-style":93, "highprofile":93, "humbleness":93, "coproduced":93, "factotum":93, "foot-wide":93, "sauting":93, "phonographs":93, "pasty-faced":93, "seaworthiness":93, "warmongers":93, "well-spaced":93, "on-location":93, "overextending":93, "moonbeam":93, "government-provided":93, "idealistically":93, "fabricates":93, "cigar-shaped":93, "endurable":93, "reanalyzed":93, "grottos":93, "thimbleful":93, "subbed":93, "bone-tired":93, "clowned":93, "clutter-free":93, "pushovers":93, "overtired":93, "nauseatingly":93, "mini-malls":93, "near-normal":93, "heavy-hitting":93, "ditsy":93, "blaspheming":93, "red-cheeked":93, "betide":93, "fastest-selling":93, "communed":93, "four-passenger":93, "never-say-die":93, "decreasingly":93, "elliptically":93, "fessed":93, "gargled":93, "nose-dived":93, "overcompensating":93, "overanalyze":93, "nabobs":93, "well-aware":93, "verbosity":93, "walkmans":93, "vacillates":93, "pine-scented":93, "meticulousness":93, "co-edited":93, "rued":93, "some-odd":93, "lock-step":93, "jounced":93, "flippancy":93, "career-making":93, "diversifies":93, "sanguinary":93, "speeded-up":93, "earthmovers":93, "collation":93, "cabalistic":93, "black-gloved":93, "dry-cleaned":93, "clotheshorse":93, "cellular-phone":93, "go-carts":93, "hipped":93, "aspirated":93, "hesitatingly":93, "tapirs":93, "well-born":93, "military-grade":93, "restage":93, "once-in-a-generation":93, "pharmacopoeia":93, "gangstas":93, "blue-painted":93, "plastic-coated":93, "drabness":93, "twits":93, "streetscapes":93, "romanticizes":93, "bleaches":93, "abusively":93, "melt-in-your-mouth":93, "near-naked":93, "razz":93, "reifying":93, "unreconciled":93, "space-faring":93, "half-sleep":93, "overwatering":93, "barrooms":93, "swingy":93, "underpasses":93, "tuition-free":93, "undercounting":93, "intellectualize":93, "endeavours":93, "fact-checking":93, "naivety":93, "reddish-orange":93, "requisitioned":93, "weightlifters":93, "yappy":93, "butter-yellow":93, "bedazzled":93, "bitter-tasting":93, "brainiacs":93, "disposals":93, "mock-ups":93, "reinventions":93, "whacked-out":93, "wild-looking":93, "elided":93, "eyeblink":93, "backpacked":93, "proofed":93, "editorial-page":93, "valorous":93, "trended":93, "scofflaw":93, "check-writing":93, "disclaiming":93, "stick-thin":93, "knifelike":93, "inclusively":93, "alternations":93, "fuel-injection":93, "open-market":93, "polytheistic":93, "patters":93, "creepiness":93, "cannister":93, "yellower":93, "wack":93, "volcanically":93, "short-yardage":93, "surveilling":93, "ill-lit":93, "advanced-placement":93, "alt-country":93, "abnegation":93, "lazier":93, "pleating":93, "disbelievers":93, "affixes":93, "boogers":93, "impassible":93, "turbo-charged":93, "retreads":93, "bumbler":93, "non-sexual":93, "multibillionaire":93, "blobby":93, "escalations":93, "documentarians":93, "unchallenging":93, "state-subsidized":93, "synchronizes":93, "hung-over":93, "desiccating":93, "flatlander":93, "agriculturists":93, "west-southwest":93, "well-matched":93, "spectaculars":93, "rerelease":93, "front-desk":93, "coedited":93, "bazookas":93, "disaster-relief":93, "crawly":93, "problem-solvers":93, "ormolu":93, "unexceptionable":93, "crybabies":93, "purveyed":93, "half-lidded":93, "many-sided":93, "heartthrobs":93, "dark-wood":93, "four-ounce":93, "four-pronged":93, "blue-flowered":93, "emaciation":93, "extra-inning":93, "poll-driven":93, "psychoanalyze":93, "well-greased":93, "semi-circular":93, "torpedo-shaped":93, "stinkers":93, "anti-frizz":93, "onionskin":93, "oversaturated":93, "accoutrement":93, "babushkas":93, "bow-legged":93, "progressiveness":93, "recolonize":93, "trainloads":93, "spectrographic":93, "interrupter":93, "city/county":93, "baby-doll":93, "deco-style":93, "ghostwritten":93, "disqualifications":93, "environment-friendly":93, "hotplate":93, "quadruped":93, "wind-power":93, "rainout":93, "goatherd":93, "communicant":93, "betacarotene":93, "red-and-gold":93, "fleecing":93, "arpeggio":93, "pretty-boy":93, "pinko":93, "unpremeditated":93, "idolaters":93, "electricity-generating":93, "tentlike":93, "groundings":93, "atemporal":93, "fifty-first":93, "pre-owned":93, "northeastward":93, "idealizations":93, "heedlessness":93, "small-sized":93, "waterings":93, "connubial":93, "inkblot":93, "saturnine":93, "eggbeater":93, "post-trial":93, "subheadings":93, "ungentlemanly":93, "electrophysiology":93, "benefactress":93, "peeper":93, "amortized":93, "bunkhouses":93, "ex-employee":93, "spuriously":93, "slurries":93, "late-1800s":93, "fanfares":93, "spiderlike":93, "anxiety-ridden":93, "menu-driven":93, "unwired":93, "fuel-saving":93, "empyrean":93, "faith-filled":93, "simpletons":93, "nonpartisanship":93, "contraindication":93, "auto-body":93, "sideview":93, "depressors":93, "peelers":93, "neo-marxist":93, "fiber-optics":93, "rent-a-cops":93, "undipped":93, "lowest-income":93, "executive-level":93, "cartload":93, "nocturnes":93, "straight-leg":93, "straight-back":93, "kumbaya":93, "markdown":93, "remarries":93, "thickeners":93, "sounders":93, "semites":93, "porkers":93, "preventers":93, "miracle-working":93, "critical-care":93, "girls-only":93, "rainfalls":93, "phenomenologist":93, "wedgie":93, "shoppe":93, "print-out":93, "muffed":93, "cultural-historical":93, "blackguard":93, "dot-commers":93, "cost-shifting":93, "transmittable":93, "hand-dyed":93, "crosshair":93, "three-note":93, "redshirting":93, "anti-modern":93, "idylls":93, "adenovirus":93, "red-roofed":93, "waterfowler":93, "step-down":93, "mini-bar":93, "pre-event":93, "organists":93, "data-entry":93, "derringer":93, "forty-eighth":93, "cannisters":93, "nature-based":93, "boilermaker":93, "summitry":93, "tailcoat":93, "procedurals":93, "sys-tem":93, "bunkering":93, "insulin-producing":93, "sampan":93, "salver":93, "inaugurals":93, "pro-bono":93, "nonconsumptive":93, "antinarcotics":93, "low-caste":93, "flyfishermen":93, "cordage":93, "self-chosen":93, "habituate":93, "post-olympic":93, "epiphanic":93, "decertify":93, "disunion":93, "frappuccino":93, "suspender":93, "mullions":93, "lumbermen":93, "cenotaph":93, "self-observation":93, "shipwrights":93, "pulping":93, "dimethyl":93, "goldfields":93, "persuadable":93, "speedskater":93, "decontextualization":93, "glucocorticoids":93, "mezuzah":93, "ionian":93, "bactericidal":93, "abstractionist":93, "justness":93, "cookoff":93, "orthopaedics":93, "post-revolution":93, "copyediting":93, "trivially":93, "snoot":93, "nonstructural":93, "eyeshade":93, "bearnaise":93, "ethnomusicologists":93, "repurchases":93, "age-discrimination":93, "congregationalist":93, "neoclassic":93, "popularizers":93, "cross-case":93, "torchbearer":93, "first-responders":93, "renovators":93, "voting-rights":93, "misalignments":93, "first-trimester":93, "caver":93, "topologically":93, "turbochargers":93, "smarty":93, "bipartite":93, "poisoner":93, "electrostatically":93, "secretory":93, "kidskin":93, "ground-water":93, "anticonvulsants":93, "extratextual":93, "barony":93, "alpha-linolenic":93, "nominators":93, "onomatopoeic":93, "bobwhites":93, "concert-goers":93, "female-to-male":93, "stairclimber":93, "nanotechnologies":93, "accumulators":93, "preppies":93, "reverse-engineering":93, "bushmaster":93, "recoilless":93, "gumdrop":93, "philosophes":93, "nosepiece":93, "all-leather":93, "astrobiologists":93, "intention-to-treat":93, "occlusive":93, "eff":93, "confounder":93, "phosphate-buffered":93, "conjoining":93, "neurobehavioral":93, "open-endedness":93, "cartouche":93, "vireo":93, "wadis":93, "non-science":93, "be-bop":93, "biosecurity":93, "redcoat":93, "faery":93, "limeade":93, "antinomian":93, "fire-prone":93, "low-elevation":93, "tabling":93, "cephalosporins":93, "edematous":93, "spoonbill":93, "chiffonade":93, "blacktail":93, "molts":93, "military-civilian":93, "vegetatively":93, "client/server":93, "anion":93, "packability":93, "high-order":93, "fado":93, "agitations":93, "precognitive":93, "domiciliary":93, "multifactor":93, "event-related":93, "intraoral":93, "canid":93, "air-force":93, "seven-letter":93, "zoroastrianism":93, "pan-frying":93, "grandmasters":93, "barque":93, "non-fictional":93, "baconian":93, "godparent":93, "religio-political":93, "pimientos":93, "macrolevel":93, "revetments":93, "stupa":93, "televisual":93, "mulligans":93, "bridgedeck":93, "simulcasting":93, "broadscale":93, "monolayer":93, "bone-conduction":93, "cryonic":93, "if-then":93, "glasshouse":93, "waterslide":93, "nicad":93, "waste-to-energy":93, "bilberry":93, "non-critical":93, "jewelweed":93, "ordinate":93, "raw-water":93, "medicaments":93, "proximities":93, "polish-jewish":93, "shi'ism":93, "cyclophosphamide":93, "alluvium":93, "microcirculation":93, "depletions":93, "gyres":93, "statists":93, "lugger":93, "personal-social":93, "cytochrome":93, "fauvism":93, "parathion":93, "aseptically":93, "locater":93, "squealer":93, "exons":93, "dolphin-safe":93, "drug-enforcement":93, "recrudescence":93, "tonsillectomies":93, "speci":93, "braillewriter":93, "lipophilic":93, "hematological":93, "intra-individual":93, "peronists":93, "high-hazard":93, "subfamily":93, "ungendered":93, "bustard":93, "alienist":93, "female-female":93, "cloze":93, "nomothetic":93, "damselfish":93, "supergiants":93, "dural":93, "hiv-prevention":93, "mediumship":93, "self-presence":93, "growth-and-income":93, "damson":93, "sub-category":93, "communalities":93, "ecoregional":93, "zonas":93, "undistributed":93, "humidification":93, "gasolines":93, "haloperidol":93, "open-cell":93, "teff":93, "perchlorate":93, "mahouts":93, "underdrawing":93, "socioreligious":93, "self-neglect":93, "noncoding":93, "lathe-turned":93, "firm-specific":93, "immunoreactivity":93, "neo-conservatism":93, "kenotic":93, "spent-fuel":93, "hypermasculine":93, "homodiegetic":93, "distant-water":93, "antivenom":93, "crus":93, "quantifier":93, "patriline":93, "hutong":93, "eigenstates":93, "orcs":93, "arbour":93, "wiregrass":93, "gravity-wave":93, "fordism":93, "oblast":93, "non-regular":93, "cross-age":93, "musculocutaneous":93, "spindle-cell":93, "anti-whaling":93, "bidimensional":93, "substitutional":93, "drug-resistance":93, "ipsative":93, "leatherbacks":93, "naturalizations":93, "continuous-time":93, "cross-cousin":93, "wayfinding":93, "anandamide":93, "helicity":93, "remyelination":93, "bark-cloth":93, "postulants":93, "cross-gendered":93, "dial-around":93, "clockless":93, "meristem":93, "dink":94, "helicoptered":94, "moseyed":94, "six-foot-three":94, "six-foot-two":94, "codgers":94, "table-top":94, "highperformance":94, "toughed":94, "toupees":94, "state-financed":94, "slip-ons":94, "mythologized":94, "rebroadcast":94, "below-freezing":94, "confidence-inspiring":94, "secularizing":94, "sharp-witted":94, "snow-laden":94, "splurges":94, "marble-floored":94, "cross-check":94, "foreordained":94, "shoehorned":94, "roughened":94, "potholder":94, "masqueraded":94, "authenticates":94, "steamrolled":94, "bare-legged":94, "outrace":94, "outspokenly":94, "sex-starved":94, "non-committal":94, "open-collared":94, "forbiddingly":94, "forearmed":94, "trash-strewn":94, "twanged":94, "third-most":94, "rowdier":94, "dewy-eyed":94, "begrudging":94, "career-low":94, "independence-minded":94, "sweet-talk":94, "outmaneuvering":94, "recirculated":94, "easy-to-clean":94, "enchants":94, "encomiums":94, "recombined":94, "tightknit":94, "maladroit":94, "christenings":94, "dictums":94, "go-for-broke":94, "whippersnapper":94, "single-lane":94, "sunned":94, "dissatisfying":94, "five-foot-tall":94, "fattens":94, "bloodying":94, "expiate":94, "flaxen-haired":94, "anoints":94, "blarney":94, "icebound":94, "social-services":94, "too-bright":94, "thirtyfive":94, "fiveyear":94, "impotently":94, "interpenetrating":94, "liquefies":94, "lavishness":94, "budget-busting":94, "tenuousness":94, "demystified":94, "fuzzily":94, "antiestablishment":94, "consolingly":94, "crash-landed":94, "crassness":94, "circumspectly":94, "astronautical":94, "gleanings":94, "familiar-looking":94, "ever-so-slightly":94, "ever-escalating":94, "remastered":94, "muddier":94, "superimposes":94, "stoles":94, "seesaws":94, "tent-like":94, "two-syllable":94, "rejigger":94, "reacquire":94, "dethroning":94, "played-out":94, "offhanded":94, "mushroom-shaped":94, "acquits":94, "downturned":94, "ex-navy":94, "enjoyably":94, "spoofed":94, "operettas":94, "inflect":94, "female-friendly":94, "slobbered":94, "asphyxiating":94, "deadened":94, "enzyme-linked":94, "forkfuls":94, "enunciates":94, "pen-pal":94, "rids":94, "hour-by-hour":94, "stingier":94, "shadowboxing":94, "three-team":94, "well-acquainted":94, "broken-up":94, "end-of-summer":94, "craftiness":94, "gruffness":94, "gold-standard":94, "beefcake":94, "mid-spring":94, "knowhow":94, "stylishness":94, "soloed":94, "mortgage-related":94, "himself/herself":94, "cloudier":94, "short-staffed":94, "twentiethcentury":94, "upcourt":94, "zebra-striped":94, "horsedrawn":94, "non-controversial":94, "colorations":94, "catchup":94, "smuggles":94, "still-living":94, "aperitifs":94, "massiveness":94, "book-signing":94, "fancying":94, "modernday":94, "thready":94, "top-dollar":94, "fishtails":94, "croaky":94, "piggybacked":94, "neo-colonialism":94, "multi-story":94, "conformists":94, "cadge":94, "pre-fab":94, "heartbreaks":94, "logician":94, "middle-of-the-pack":94, "invitee":94, "sycophancy":94, "drenches":94, "tablemates":94, "warbles":94, "smarty-pants":94, "white-columned":94, "customizes":94, "amped-up":94, "moony":94, "ingloriously":94, "overemphasizes":94, "fryers":94, "half-dark":94, "analogize":94, "pathologize":94, "prudes":94, "irredentism":94, "bureaucratized":94, "folk-pop":94, "well-nourished":94, "wantonness":94, "sucky":94, "effortlessness":94, "aids-infected":94, "hungriest":94, "state-regulated":94, "subgenres":94, "tripod-mounted":94, "wordsmiths":94, "what's-her-name":94, "pre-op":94, "propagandize":94, "fly-fish":94, "snow-filled":94, "sharp-featured":94, "unfitness":94, "undersize":94, "neons":94, "piker":94, "pigeon-toed":94, "lambskin":94, "drainpipes":94, "three-foot-tall":94, "retrogressive":94, "scapegoated":94, "mashup":94, "grilled-cheese":94, "high-collared":94, "downdrafts":94, "energy-conservation":94, "clean-ups":94, "seraphic":94, "spasming":94, "intoxicate":94, "bare-handed":94, "unrevealed":94, "unstoppably":94, "remoter":94, "double-digits":94, "ranger-led":94, "insatiably":94, "yes-men":94, "twaddle":94, "self-same":94, "retakes":94, "declivity":94, "guest-starring":94, "rat-a-tat-tat":94, "mid-month":94, "midcalf":94, "hurdled":94, "plumbs":94, "dimwitted":94, "counter-argument":94, "diddling":94, "psychologizing":94, "overdetermined":94, "headshots":94, "uncomplimentary":94, "jades":94, "land-for-peace":94, "mulish":94, "paint-spattered":94, "co-creators":94, "epicenters":94, "expediently":94, "freethinker":94, "bleeped":94, "infests":94, "sixtyish":94, "six-pound":94, "six-piece":94, "enjoyments":94, "disfavored":94, "rhapsodizing":94, "pie-shaped":94, "graininess":94, "two-thousand":94, "unhinging":94, "unenthusiastically":94, "reappoint":94, "postmortems":94, "demonstratively":94, "bi-directional":94, "canards":94, "endocrinologists":94, "misperceived":94, "soundproofing":94, "nuclear-waste":94, "canvasses":94, "attenuates":94, "downstroke":94, "california-style":94, "office-holders":94, "kingmakers":94, "ministership":94, "lessees":94, "peaty":94, "regularizing":94, "backtalk":94, "gavel-to-gavel":94, "eighth-inning":94, "distractible":94, "substantiality":94, "baled":94, "eggy":94, "mewed":94, "go-to":94, "co-producers":94, "concretize":94, "weblike":94, "exclamatory":94, "prankish":94, "theatricals":94, "sand-filled":94, "tranquilized":94, "prerace":94, "unionizing":94, "tweezing":94, "liaise":94, "get-away":94, "double-cross":94, "earplug":94, "contemplations":94, "catatonia":94, "outplay":94, "better-paid":94, "veneered":94, "steel-framed":94, "enfranchised":94, "neurasthenic":94, "criticised":94, "snobbishness":94, "eleven-year":94, "doffs":94, "threshhold":94, "glossaries":94, "special-ed":94, "wielder":94, "face-framing":94, "moolah":94, "miked":94, "major-leaguer":94, "heeler":94, "hedonists":94, "prudishness":94, "self-destructiveness":94, "one-hand":94, "innercity":94, "lookers":94, "agglomerations":94, "six-night":94, "ursine":94, "softies":94, "granitic":94, "overeaters":94, "requisitions":94, "facings":94, "dispossess":94, "wilful":94, "wordings":94, "womblike":94, "tristate":94, "troglodyte":94, "weak-minded":94, "foreign-currency":94, "low-rider":94, "self-harm":94, "three-guard":94, "impeachments":94, "evenhandedly":94, "synths":94, "ten-pound":94, "lawbreaker":94, "newsboys":94, "powerplants":94, "playpens":94, "third-order":94, "son-of-a-gun":94, "stripling":94, "cell-like":94, "chief-of-staff":94, "bushy-tailed":94, "busi":94, "trotters":94, "plotless":94, "molehills":94, "mad-cow":94, "babied":94, "stretchable":94, "tearless":94, "astir":94, "berthing":94, "gangsterism":94, "greaser":94, "relativizing":94, "sackful":94, "tagliatelle":94, "seafarer":94, "pured":94, "reworded":94, "movie-theater":94, "home-furnishings":94, "musicmaking":94, "new-fallen":94, "depressives":94, "supply-demand":94, "biddies":94, "antique-filled":94, "cantonment":94, "determinable":94, "ignitions":94, "terabyte":94, "two-layer":94, "human-machine":94, "huger":94, "humanization":94, "postprandial":94, "bias-cut":94, "allpurpose":94, "four-cd":94, "integrations":94, "tie-down":94, "seminomadic":94, "many-colored":94, "nubbin":94, "do-overs":94, "boo-hoo":94, "homburg":94, "gay-related":94, "absorbency":94, "spinnaker":94, "titleholder":94, "extractors":94, "conduce":94, "health-based":94, "gas-fueled":94, "tranches":94, "thataway":94, "chanter":94, "prepaying":94, "self-select":94, "toggled":94, "waggles":94, "finning":94, "merchantman":94, "permeation":94, "liveable":94, "intracytoplasmic":94, "above-market":94, "brines":94, "product-oriented":94, "ambulate":94, "chattels":94, "first-wave":94, "submergence":94, "sower":94, "biters":94, "metallurgists":94, "heartlands":94, "holies":94, "hyperlink":94, "nonrepresentational":94, "breakfront":94, "countercyclical":94, "blipped":94, "air-launched":94, "rockslide":94, "small-school":94, "beanbags":94, "springbok":94, "pre-recession":94, "nonrecognition":94, "rebus":94, "odometers":94, "reinstates":94, "munchkins":94, "turnpikes":94, "kewpie":94, "population-control":94, "ex-fiance":94, "bardic":94, "match-play":94, "nonoverlapping":94, "loungers":94, "teleported":94, "dorks":94, "bowthruster":94, "molded-in":94, "higher-energy":94, "plugger":94, "techy":94, "co-ownership":94, "co-created":94, "optoelectronic":94, "oafs":94, "lindens":94, "landholder":94, "freeborn":94, "island-wide":94, "heat-tolerant":94, "mouthfeel":94, "bronzers":94, "interoperable":94, "pictograph":94, "reappraise":94, "bogies":94, "body-weight":94, "crampon":94, "camshafts":94, "evildoer":94, "re-presentation":94, "mendicants":94, "matey":94, "clifftop":94, "nurserymen":94, "caballeros":94, "green-black":94, "extra-judicial":94, "preexistent":94, "redistributionist":94, "passenger-car":94, "krauts":94, "whiney":94, "prohibitionist":94, "moment-by-moment":94, "maxed-out":94, "deionized":94, "self-sabotage":94, "cheesesteak":94, "pressmen":94, "puckery":94, "multi-sensory":94, "checkmark":94, "affectional":94, "basketball-related":94, "disconnections":94, "pro-clinton":94, "placentas":94, "community-development":94, "shotmaking":94, "woks":94, "nonteaching":94, "logrolling":94, "elementary-level":94, "fluorescently":94, "white-on-black":94, "buskers":94, "biowarfare":94, "one-meter":94, "aggro":94, "wine-producing":94, "filamentary":94, "cognacs":94, "agarose":94, "arab-muslim":94, "slews":94, "enthronement":94, "pro-inflammatory":94, "reincorporation":94, "marmosets":94, "temporaries":94, "mitered":94, "ex-fiancee":94, "derailments":94, "treaters":94, "non-drug":94, "earnings-per-share":94, "truck-based":94, "us-soviet":94, "maldistribution":94, "ferrule":94, "god-damn":94, "doll-size":94, "linage":94, "mixed-gender":94, "anisette":94, "airshaft":94, "distention":94, "gazer":94, "ichthyologist":94, "cooperativeness":94, "radials":94, "detectability":94, "remodeler":94, "groundnuts":94, "metalanguage":94, "campuswide":94, "chlorides":94, "low-fiber":94, "laboratory-based":94, "neutralizer":94, "importations":94, "iconographically":94, "co-option":94, "pharmacokinetic":94, "once-daily":94, "redrock":94, "wakeboard":94, "second-trimester":94, "arks":94, "liverwurst":94, "oil-well":94, "jitney":94, "caledonian":94, "sojourning":94, "datura":94, "thumbscrew":94, "turfgrass":94, "interfacial":94, "lateralization":94, "neuritis":94, "market-friendly":94, "pro-moscow":94, "symptomology":94, "wimple":94, "womanliness":94, "hogshead":94, "health-oriented":94, "nitrogenous":94, "wood-boring":94, "axially":94, "area-ranked":94, "overpayment":94, "longhair":94, "phonologically":94, "past-tense":94, "minesweeper":94, "homeland-security":94, "digitals":94, "quietist":94, "dress-down":94, "potentiometers":94, "cremations":94, "autopilots":94, "avant-gardists":94, "lambada":94, "higher-fat":94, "mid-semester":94, "carolingian":94, "videodiscs":94, "cosmetologists":94, "weedbeds":94, "rotatable":94, "eicosapentaenoic":94, "non-immigrant":94, "fastback":94, "clinchers":94, "nucleated":94, "problematization":94, "bodyweight":94, "antiguan":94, "singlehood":94, "chism":94, "canvasbacks":94, "recursively":94, "latke":94, "perfumery":94, "computer-security":94, "shop-floor":94, "convolution":94, "dermabrasion":94, "family-type":94, "apposition":94, "kleptocracy":94, "gonadal":94, "non-credit":94, "national-park":94, "iterated":94, "four-word":94, "chip-making":94, "pro-castro":94, "multifocal":94, "quietism":94, "hypoplastic":94, "invidiously":94, "fluorescein":94, "chronometers":94, "tetrahedral":94, "diphenhydramine":94, "agrochemical":94, "genotypic":94, "towline":94, "kraal":94, "pre-engineering":94, "nonreproductive":94, "phylogenies":94, "moneylender":94, "kettlebells":94, "maleficent":94, "simvastatin":94, "linesmen":94, "cellblocks":94, "plinths":94, "gavotte":94, "exudates":94, "singlespeed":94, "problem-centered":94, "pentobarbital":94, "glial":94, "ukuleles":94, "pericardium":94, "pottage":94, "monomers":94, "macaque":94, "tamarins":94, "culturalist":94, "patrilocal":94, "paladins":94, "aspergillus":94, "drogue":94, "malawian":94, "skyhook":94, "depressurization":94, "earth-size":94, "nontherapeutic":94, "fluoxetine":94, "water-color":94, "trochanter":94, "cycads":94, "conjunctiva":94, "iron-deficiency":94, "overexpression":94, "small-ensemble":94, "ribosomes":94, "textualism":94, "plein-air":94, "velociraptors":94, "preexistence":94, "paramagnetic":94, "nonmajors":94, "self-assessed":94, "peccary":94, "mesopotamians":94, "postmoderns":94, "postinjury":94, "big-bass":94, "papuan":94, "ponding":94, "dropcloth":94, "maquis":94, "spruce-fir":94, "fakir":94, "wild-type":94, "palindrome":94, "cloners":94, "karelian":94, "theobromine":94, "mamluk":94, "xhosa-speaking":94, "brachiopods":94, "multigroup":94, "multilingualism":94, "metalware":94, "bench-top":94, "multi-faith":94, "politico-cultural":94, "deep-vein":94, "telepath":94, "shipwright":94, "intersession":94, "nonmalignant":94, "nurse-midwives":94, "loonie":94, "faller":94, "disability-specific":94, "glioma":94, "traction-control":94, "subcabinet":94, "twoness":94, "timbales":94, "introgression":94, "acetaldehyde":94, "extra-territorial":94, "condyle":94, "exigence":94, "haploid":94, "tailwaters":94, "penicillin-resistant":94, "carseat":94, "narratees":94, "nonpregnant":94, "marabout":94, "ellipsoid":94, "blackfish":94, "doula":94, "metal-poor":94, "ex-vessel":94, "four-eyes":94, "tegmental":94, "planers":94, "silvicultural":94, "apocalypticism":94, "infratemporal":94, "azithromycin":94, "multiple-regression":94, "language-impaired":94, "bisphosphonate":94, "saltcellar":94, "homophony":94, "non-energy":94, "haplotype":94, "postexercise":94, "phronesis":94, "person-hours":94, "nonvoluntary":94, "animal-assisted":94, "equidistance":94, "pangolin":94, "yellow-spotted":94, "longhorned":94, "mother-only":94, "hypomania":94, "propionate":94, "flu-shot":94, "baas":94, "scintillators":94, "tertile":94, "auteurist":94, "stomatal":94, "central-place":94, "mandatory-minimum":94, "coati":94, "college-credit":94, "exobiologist":94, "mixed-effects":94, "imaginational":94, "cancer-specific":94, "subretinal":94, "rockfishes":94, "cross-cousins":94, "glomus":94, "dispatchable":94, "digestate":94, "coagulants":94, "downwinders":94, "cooling-out":94, "pole-and-line":94, "demand-management":94, "stative":94, "tocotrienol":94, "ginned":94, "four-foot-long":94, "offs":94, "depersonalize":94, "sentimentalize":94, "slippered":94, "fleshes":94, "felicitously":94, "eighth-place":94, "rule-bound":94, "post-holiday":94, "piquancy":94, "punitively":94, "city-sponsored":94, "adeptness":94, "body-conscious":94, "disaggregating":94, "gleans":94, "fussily":94, "remitted":94, "realistic-looking":94, "largest-selling":94, "hulked":94, "semitrailer":94, "barnstormed":94, "freshens":94, "injury-riddled":94, "green-and-gold":94, "relight":94, "fatuously":94, "dolts":94, "brobdingnagian":94, "blue-and-gold":94, "tear-filled":94, "weeks-long":94, "walloping":94, "vampy":94, "boyishness":94, "army-issue":94, "exasperate":94, "flameout":94, "outdistancing":94, "promontories":94, "intertwines":94, "higher-than-expected":94, "speedsters":94, "sanest":94, "overproduce":94, "rat-a-tat":94, "telescoped":94, "stablemate":94, "mischaracterize":94, "twenty-plus":94, "upbraiding":94, "snail-mail":94, "outspending":94, "profitless":94, "remounted":94, "renovates":94, "atoning":94, "valances":94, "venerates":94, "sad-sack":94, "bulletin-board":94, "dangerous-looking":94, "gaggles":94, "givebacks":94, "jimmied":94, "lusciously":94, "swankiest":94, "treasuring":94, "square-shouldered":94, "scandalizing":94, "low-sugar":94, "fulminations":94, "cheekily":94, "recaps":94, "recalculated":94, "invigorates":94, "hoity-toity":94, "jump-starts":94, "below-zero":94, "cadenced":94, "unburdening":94, "trustingly":94, "unfed":94, "dressing-down":94, "fourth-leading":94, "flat-roofed":94, "close-minded":94, "b-list":94, "brainiac":94, "lower-profile":94, "guested":94, "hijacks":94, "postage-stamp":94, "toughens":94, "nasty-looking":94, "half-covered":94, "then-unknown":94, "then-coach":94, "softhearted":94, "rededicated":94, "pointy-headed":94, "nixing":94, "hairlines":94, "meddled":94, "definer":94, "dysfunctionality":94, "filch":94, "court-approved":94, "world-champion":94, "them-selves":94, "half-completed":94, "doorjambs":94, "archenemies":94, "birdcages":94, "wire-service":94, "symbiotically":94, "humorlessly":94, "buzz-cut":94, "undomesticated":94, "undiscriminating":94, "counterbalances":94, "left-winger":94, "middle-range":94, "midtempo":94, "recapped":94, "propitiate":94, "pronged":94, "ex-boss":94, "scandal-plagued":94, "raunch":94, "toolmaker":94, "teetotalers":94, "nonevent":94, "jiggy":94, "reposing":94, "race-baiting":94, "steel-rimmed":94, "bewilderingly":94, "good-news":94, "bluish-white":94, "incommensurate":94, "he-man":94, "reboard":94, "quasi-independent":94, "plentifully":94, "similiar":94, "unrighteous":94, "unthreatened":94, "up-and-up":94, "zig-zagging":94, "ownerships":94, "halfhour":94, "directionally":94, "employer-employee":94, "sweepings":94, "youthfully":94, "squishes":94, "division-leading":94, "ash-blond":94, "anthologized":94, "cellophane-wrapped":94, "reprovingly":94, "victimizes":94, "leaf-eating":94, "questionably":94, "gold-framed":94, "end-of-season":94, "easy-to-reach":94, "bedsides":94, "vacuum-sealed":94, "whippoorwill":94, "adages":94, "extra-credit":94, "nacreous":94, "inexpertly":94, "exorcising":94, "read-through":94, "shakeups":94, "honoured":94, "half-mad":94, "big-cap":94, "club-record":94, "senior-year":94, "underqualified":94, "high-return":94, "hard-sell":94, "misimpression":94, "glassful":94, "segueing":94, "blasphemer":94, "blastoff":94, "slobbery":94, "slow-down":94, "six-room":94, "six-shooters":94, "sixth-ranked":94, "recrossing":94, "dark-gray":94, "dark-suited":94, "offertory":94, "nonleague":94, "import/export":94, "funkiest":94, "four-to-one":94, "housefly":94, "periscopes":94, "microbrew":94, "tomato-basil":94, "shyer":94, "coaming":94, "icecream":94, "misdirect":94, "swoopy":94, "attorney-general":94, "french-american":94, "destructions":94, "overstock":94, "primary-school":94, "shake-ups":94, "shacked":94, "jade-green":94, "five-state":94, "full-width":94, "drolly":94, "drudges":94, "environmental-impact":94, "acid-washed":94, "mile-an-hour":94, "rainbow-hued":94, "unkept":94, "walk-ups":94, "walk-around":94, "boxful":94, "gold-flecked":94, "plights":94, "night-shift":94, "interrelating":94, "knuckleballer":94, "cement-block":94, "child-safety":94, "pompons":94, "stably":94, "direct-marketing":94, "creepiest":94, "lexicons":94, "prejudgment":94, "mirror-like":94, "voicings":94, "sailcloth":94, "slyness":94, "reconceive":94, "thwacking":94, "multitaskers":94, "fanlike":94, "downshifts":94, "disclaims":94, "bookers":94, "bathetic":94, "trebled":94, "unaccounted-for":94, "disneyesque":94, "pre-made":94, "industrial-grade":94, "dunces":94, "unclogging":94, "texas-size":94, "bitingly":94, "federalizing":94, "inter-related":94, "lighter-than-air":94, "pro-market":94, "state-appointed":94, "area-wide":94, "fin-de-siecle":94, "honey-blond":94, "zag":94, "bureaucratese":94, "coercively":94, "makeups":94, "irrelevancies":94, "inflight":94, "conjoins":94, "congrats":94, "white-clad":94, "leopard-skin":94, "noisemaker":94, "footbridges":94, "grassless":94, "unplugs":94, "nester":94, "hundred-odd":94, "federally-funded":94, "entrapping":94, "super-human":94, "curled-up":94, "f-bomb":94, "frights":94, "heartshaped":94, "pre-flight":94, "over-fishing":94, "disjoint":94, "insufficiencies":94, "studding":94, "auto-repair":94, "discontinuance":94, "crime-prevention":94, "forty-sixth":94, "unassimilated":94, "quarter-point":94, "oiliness":94, "next-highest":94, "barefaced":94, "votaries":94, "visored":94, "shot-blocker":94, "manlike":94, "continuing-education":94, "double-jointed":94, "clamshells":94, "audio-taped":94, "preregistration":94, "locavore":94, "knock-knock":94, "aaaah":94, "tamely":94, "thatching":94, "suzerainty":94, "phenoms":94, "militarize":94, "free-lancer":94, "blown-glass":94, "coulees":94, "ball-size":94, "pink-flowered":94, "painkilling":94, "moulded":94, "low-friction":94, "mini-fridge":94, "frescoed":94, "high-sided":94, "human-dominated":94, "quarrelling":94, "panelling":94, "collaged":94, "collaring":94, "unexpectedness":94, "home-built":94, "puppy-dog":94, "anointment":94, "run-around":94, "six-way":94, "bobbling":94, "housing-related":94, "kinked":94, "red-checked":94, "ultra-thin":94, "seismology":94, "sportswoman":94, "fuzzball":94, "negligees":94, "rills":94, "gendarmerie":94, "componentry":94, "miniaturist":94, "half-minute":94, "non-athletic":94, "port-side":94, "two-meter":94, "two-three":94, "sinecure":94, "uncrowned":94, "orange-brown":94, "crosshatching":94, "five-county":94, "whens":94, "beetroot":94, "box-shaped":94, "mutagenic":94, "child-proof":94, "self-medicating":94, "buckaroo":94, "reexperience":94, "liberal-conservative":94, "self-storage":94, "gaslit":94, "chain-mail":94, "capitalizations":94, "three-and-out":94, "fulness":94, "automaking":94, "inducting":94, "curs":94, "eleventh-grade":94, "web-like":94, "slimness":94, "shouters":94, "financial-planning":94, "doorpost":94, "spritzers":94, "wrongfulness":94, "silver-framed":94, "homebuilt":94, "prototypically":94, "rod-shaped":94, "salespersons":94, "nippers":94, "bottlebrush":94, "womenswear":94, "fruitiness":94, "photo-editing":94, "cross-state":94, "hightops":94, "monthlies":94, "tourneys":94, "unbundled":94, "foreshortening":94, "horsetails":94, "non-party":94, "three-by-five":94, "three-generation":94, "student-directed":94, "bookselling":94, "disconfirm":94, "energy-absorbing":94, "nonexclusive":94, "outcomes-based":94, "bluewater":94, "nonperformance":94, "short-handled":94, "lotuses":94, "psychotically":94, "baserunners":94, "rathole":94, "yin-yang":94, "child-oriented":94, "meat-processing":94, "meanie":94, "no-cook":94, "milliners":94, "short-grass":94, "gantries":94, "escutcheon":94, "health-enhancing":94, "headship":94, "railyard":94, "full-power":94, "drovers":94, "instantiated":94, "re-register":94, "opaqueness":94, "groundball":94, "bible-believing":94, "episiotomy":94, "sarsaparilla":94, "clinkers":94, "peritoneum":94, "self-belief":94, "pureeing":94, "moussaka":94, "bi-level":94, "glassmaker":94, "falsifiable":94, "doublewide":94, "sportsmanlike":94, "sapient":94, "unencrypted":94, "licences":94, "antiparticle":94, "pelvises":94, "concubinage":94, "short-acting":94, "indian-owned":94, "elastics":94, "preprocessing":94, "recluses":94, "black-faced":94, "amatory":94, "prelapsarian":94, "physical-education":94, "reflectiveness":94, "virologists":94, "non-respondents":94, "fundamentalisms":94, "gift-wrapping":94, "janus-faced":94, "davit":94, "chancellery":94, "coconspirator":94, "pension-fund":94, "carotenoid":94, "rust-resistant":94, "policewomen":94, "saturnalia":94, "resurrections":94, "mother-infant":94, "geomorphological":94, "wave-like":94, "red-state":94, "table-tennis":94, "beauty-supply":94, "megastores":94, "shiism":94, "provosts":94, "shotshells":94, "weatherstripping":94, "unmounted":94, "crossbeam":94, "pro-consumer":94, "model-building":94, "brazing":94, "aquavit":94, "neo-liberalism":94, "unbaptized":94, "fore-and-aft":94, "three-line":94, "trilliums":94, "not-knowing":94, "anti-inflationary":94, "scruffy-looking":94, "compressed-air":94, "non-bank":94, "lever-action":94, "habaneros":94, "iconographical":94, "operationalizations":94, "ozone-destroying":94, "sea-run":94, "sea-surface":94, "she-devil":94, "internal/external":94, "chessmen":94, "ex-members":94, "sport-utilities":94, "coatroom":94, "gawker":94, "letter-size":94, "pictograms":94, "price-to-book":94, "mini-mart":94, "catsuit":94, "buffalos":94, "so-and-so":94, "imputations":94, "sabra":94, "spinet":94, "unknowability":94, "black-bearded":94, "grouting":94, "personal-best":94, "moldavian":94, "sweet-hot":94, "non-core":94, "physiotherapists":94, "catechumens":94, "euphorbia":94, "caryatids":94, "atomically":94, "bateau":94, "three-axis":94, "cross-racial":94, "root-beer":94, "delegator":94, "emergency-response":94, "urban-industrial":94, "omerta":94, "makeable":94, "medicos":94, "bioregion":94, "cyanosis":94, "waterproofness":94, "women-specific":94, "situatedness":94, "self-enhancement":94, "humic":94, "tetrahedron":94, "midship":94, "oligopolistic":94, "traumatization":94, "halyard":94, "process-based":94, "late-18th-century":94, "syncretistic":94, "nonnarrative":94, "vote-buying":94, "zirconia":94, "hornbills":94, "characterisation":94, "hydrophilic":94, "gamebirds":94, "intertext":94, "vicuna":94, "three-item":94, "malabsorption":94, "co-morbid":94, "garbageman":94, "print-outs":94, "post-debate":94, "sanitization":94, "herbalism":94, "inguinal":94, "social/emotional":94, "cassia":94, "internal-external":94, "listenings":94, "muslim-american":94, "conclusory":94, "runabouts":94, "canyoneering":94, "cryptographers":94, "shape-shifter":94, "postharvest":94, "neckpiece":94, "anti-lynching":94, "gannets":94, "tornadic":94, "shoot-down":94, "sorbitol":94, "cell-based":94, "decoction":94, "cultist":94, "telestrator":94, "hematomas":94, "illusionists":94, "phys-ed":94, "earth-centered":94, "catarrh":94, "histopathological":94, "intrafamily":94, "autarkic":94, "bookbinding":94, "solar-cell":94, "nickel-metal":94, "nonbeing":94, "plainclothesmen":94, "ethology":94, "springhouse":94, "xeriscape":94, "world-music":94, "test-based":94, "digital-to-analog":94, "connexion":94, "informed-consent":94, "point-and-shoots":94, "white-winged":94, "ethnoreligious":94, "multiculturally":94, "intercostal":94, "daybook":94, "paddlewheel":94, "mongoloid":94, "mid-eighteenth-century":94, "employes":94, "for-profits":94, "viol":94, "arnica":94, "tortious":94, "redox":94, "five-inning":94, "occluding":94, "sapper":94, "fricatives":94, "iftar":94, "ontogenetic":94, "tickertape":94, "ground-attack":94, "limiter":94, "likelihoods":94, "infarct":94, "hidey-hole":94, "self-assess":94, "too-big-to-fail":94, "benzine":94, "durian":94, "typicality":94, "standpipe":94, "nonpoor":94, "ecocide":94, "event-driven":94, "osteopenia":94, "pro-arab":94, "artmaking":94, "seed-starting":94, "cowled":94, "isolators":94, "partialed":94, "mignonette":94, "aggiornamento":94, "z-score":94, "homosexually":94, "soft-ware":94, "hawthorns":94, "anencephalic":94, "venoms":94, "meson":94, "herniation":94, "umbels":94, "atomism":94, "toiles":94, "thallium":94, "interprofessional":94, "stableboy":94, "epitaxy":94, "astragalus":94, "prefectures":94, "non-majors":94, "plasticine":94, "integrals":94, "sportswriting":94, "sub-regional":94, "clownfish":94, "thermoregulation":94, "housemother":94, "cassowary":94, "cephalosporin":94, "heartworm":94, "non-experts":94, "single-action":94, "jupiter-sized":94, "prokaryotes":94, "screwholes":94, "sole-source":94, "crocodilians":94, "out-of-order":94, "desaturation":94, "wheats":94, "wireframe":94, "breakpoint":94, "myxoid":94, "anathemas":94, "diphthong":94, "inn-to-inn":94, "wood-block":94, "timorese":94, "undervote":94, "water-boarding":94, "pyrethroids":94, "subscores":94, "microsatellites":94, "some-where":94, "germline":94, "sight-size":94, "sestina":94, "no-take":94, "nanowire":94, "gobies":94, "non-participating":94, "perfumers":94, "spondylitis":94, "cathexis":94, "antiproton":94, "bibliotherapy":94, "proptosis":94, "leukemic":94, "icepick":94, "drug-control":94, "metonymical":94, "predoctoral":94, "indexicality":94, "cloud-seeding":94, "tailgater":94, "versos":94, "serostatus":94, "modernities":94, "foreign-body":94, "ex-combatants":94, "ceftriaxone":94, "quitclaim":94, "goodwife":94, "bawd":94, "sherd":94, "counterhegemonic":94, "marabouts":94, "student-teachers":94, "grindhouse":94, "dischargers":94, "forcefield":94, "ambergris":94, "bursters":94, "nunciature":94, "palps":94, "antituberculosis":94, "lacustrine":94, "collaboratives":94, "micromechanical":94, "somatosensory":94, "zero-energy":94, "whirrs":94, "prison-based":94, "gustavian":94, "ecofeminists":94, "pycnogenol":94, "axisymmetric":94, "aragonese":94, "heiau":94, "architected":94, "poliovirus":94, "multilocus":94, "hijra":94, "guidescope":94, "cross-straits":94, "interlinear":94, "wait-list":94, "just-war":94, "muthafucka":94, "streetwalking":94, "criterion-based":94, "living-wage":94, "windowing":94, "cholecystitis":94, "spindling":94, "solar-wind":94, "polyarchy":94, "coprolites":94, "odd-man-out":94, "unpaged":94, "whole-genome":94, "stegosaur":94, "ethnonationalism":94, "ribozymes":94, "splittings":94, "polysilicon":94, "roundel":94, "microarchitecture":94, "socio-spatial":94, "inter-jurisdictional":94, "chloramines":94, "camera-eye":94, "sulfonamide":94, "helminths":94, "target-date":94, "electrophysiologic":94, "histiocytosis":94, "spheric":94, "sub-types":94, "cast-out":94, "subtribal":94, "riparians":94, "microrover":94, "sunyata":94, "enterovirus":94, "sterol":94, "reproved":94, "reciprocates":94, "angry-looking":94, "flameouts":94, "end-of-the-world":94, "squelches":94, "schlocky":94, "shirt-sleeves":94, "prepossessing":94, "cosmetologist":94, "equalizes":94, "one-upped":94, "overrules":94, "broadway-style":94, "extra-sharp":94, "deep-sixed":94, "once-dominant":94, "win-win-win":94, "walled-off":94, "snappish":94, "tantalizes":94, "uncrossing":94, "alcohol-induced":94, "fat-laden":94, "ego-driven":94, "eight-figure":94, "quadruples":94, "jaggedly":94, "thick-necked":94, "ground-hugging":94, "hardcovers":94, "hardpressed":94, "circumnavigated":94, "evil-looking":94, "soul-satisfying":94, "canter":94, "navel-gazing":94, "rewrapped":94, "lethargically":94, "abstractness":94, "all-expense-paid":94, "draft-dodging":94, "nonintrusive":94, "spookily":94, "self-anointed":94, "flatfooted":94, "gloomiest":94, "buttonholed":94, "lighter-colored":94, "whammo":94, "well-told":94, "wellheads":94, "unpleasantries":94, "unmusical":94, "wrenchingly":94, "seediness":94, "fluffier":94, "blisteringly":94, "rippers":94, "petering":94, "log-cabin":94, "inventively":94, "hypervigilance":94, "minces":94, "doozies":94, "german-style":94, "half-billion-dollar":94, "half-crazed":94, "half-done":94, "zagged":94, "wide-shouldered":94, "county-owned":94, "fighter-bomber":94, "fifty-two-year-old":94, "sun-scorched":94, "parented":94, "horror-movie":94, "colonizes":94, "voluminously":94, "off-loaded":94, "hucksterism":94, "deodorizer":94, "contravened":94, "suborn":94, "thumb-sized":94, "teflon-coated":94, "populates":94, "bored-looking":94, "afros":94, "fare-thee-well":94, "enslaves":94, "multi-course":94, "gigging":94, "rough-textured":94, "tunnel-like":94, "sad-faced":94, "procurements":94, "reconquer":94, "siestas":94, "cheap-looking":94, "american-educated":94, "forty-five-degree":94, "forty-four-year-old":94, "offensive-minded":94, "neurotically":94, "yellow-brick":94, "fingerlike":94, "hallucinated":94, "force-feeding":94, "naturalizes":94, "open-topped":94, "misappropriated":94, "still-developing":94, "sewage-treatment":94, "knifes":94, "bewilder":94, "folk-music":94, "long-stalled":94, "poignance":94, "white-tiled":94, "tinkly":94, "one-fiftieth":94, "then-chairman":94, "sockless":94, "nonresponsive":94, "diamond-encrusted":94, "time-frame":94, "well-toned":94, "wraithlike":94, "rustproof":94, "odiferous":94, "meter-long":94, "reinjured":94, "bedcover":94, "glorying":94, "describable":94, "red-clay":94, "often-used":94, "playbills":94, "lisped":94, "monolithically":94, "impoverishes":94, "fast-action":94, "distractingly":94, "epicure":94, "slovenliness":94, "pea-green":94, "purple-black":94, "rhinestone-studded":94, "rekindles":94, "miniaturize":94, "buildable":94, "election-night":94, "debases":94, "ticketholders":94, "cancer-stricken":94, "brusqueness":94, "mish-mash":94, "high-sounding":94, "piss-poor":94, "posteriors":94, "hand-pick":94, "forsakes":94, "anti-iraqi":94, "uncontainable":94, "sun-washed":94, "stir-crazy":94, "wakening":94, "unluckiest":94, "torpedoing":94, "once-sleepy":94, "overdependence":94, "rain-swollen":94, "nincompoop":94, "blue-jeaned":94, "berthed":94, "pontificated":94, "no-fail":94, "dexterously":94, "accosts":94, "alarmism":94, "region-specific":94, "grumpiness":94, "collegiately":94, "pertinently":94, "league-record":94, "higher-than-normal":94, "truck-driving":94, "videographers":94, "village-based":94, "jollity":94, "knurled":94, "outmanned":94, "armoured":94, "shipbuilder":94, "blacklisting":94, "busi-ness":94, "charcoals":94, "diverticulitis":94, "extortionate":94, "extraditing":94, "more-detailed":94, "torquing":94, "weekender":94, "tar-paper":94, "pinafores":94, "large-volume":94, "lassoed":94, "double-page":94, "tauntingly":94, "two-parter":94, "sleeved":94, "lachrymose":94, "grandee":94, "grand-scale":94, "overvalue":94, "fleshpots":94, "devilment":94, "art-supply":94, "art-materials":94, "infection-fighting":94, "isinglass":94, "heat-sensitive":94, "disembowel":94, "anti-regulatory":94, "betrayers":94, "cherry-flavored":94, "internet-savvy":94, "greying":94, "stratifying":94, "treys":94, "exhibitionistic":94, "caroming":94, "buzzsaw":94, "pro-football":94, "mod":94, "palely":94, "jazzman":94, "shot-up":94, "soviet-bloc":94, "snow-free":94, "uncalculated":94, "dullards":94, "rebooting":94, "jump-off":94, "goosing":94, "now-grown":94, "narrow-eyed":94, "filmography":94, "butter-colored":94, "suck-up":94, "red-tile":94, "irrecoverable":94, "irradiate":94, "major-leaguers":94, "height-adjustable":94, "graduate-student":94, "face-painting":94, "cuties":94, "conglomerations":94, "average-looking":94, "incorruptibility":94, "powertrains":94, "untwisted":94, "get-up-and-go":94, "insensibly":94, "deluges":94, "mass-circulation":94, "hang-out":94, "high-cholesterol":94, "impact-resistant":94, "impassivity":94, "late-in-life":94, "american-built":94, "auto-industry":94, "bastardized":94, "chalk-white":94, "spareness":94, "uttermost":94, "valorizes":94, "scarcest":94, "retrospection":94, "horticulturalist":94, "puissance":94, "piggish":94, "thumbtack":94, "small-college":94, "side-stepping":94, "side-street":94, "saffron-colored":94, "checkerboards":94, "fantasist":94, "immunosorbent":94, "aphasic":94, "aeries":94, "openended":94, "toggling":94, "power-line":94, "quarter-turn":94, "outrebounded":94, "spermatozoa":94, "unswayed":94, "fifty-ninth":94, "proto":94, "pre-release":94, "stepbrothers":94, "wife-beating":94, "yawing":94, "cowlicks":94, "cohesively":94, "e-mailer":94, "self-correction":94, "uncollectible":94, "subcompacts":94, "sliding-scale":94, "semi-finals":94, "large-capacity":94, "pro-iraqi":94, "reinsertion":94, "thirty-third":94, "stratigraphic":94, "social-climbing":94, "interposing":94, "parabolas":94, "ex-mayor":94, "minority-group":94, "backstairs":94, "baddie":94, "conclaves":94, "developing-world":94, "epidemiologically":94, "flavours":94, "manual-shift":94, "compulsiveness":94, "extrudes":94, "alphabetized":94, "aloes":94, "big-buck":94, "grotesques":94, "poster-sized":94, "misquoting":94, "misquote":94, "non-league":94, "green-blue":94, "anti-foreign":94, "blondness":94, "croton":94, "fatted":94, "two-character":94, "strength-to-weight":94, "long-ball":94, "blowjobs":94, "elasticized":94, "explorative":94, "declassifying":94, "meat-eaters":94, "end-around":94, "videocam":94, "truck-stop":94, "consubstantial":94, "shirtdress":94, "mechanize":94, "baggers":94, "decompressing":94, "dual-zone":94, "calzone":94, "curates":94, "anti-fraud":94, "anti-liberal":94, "pitbull":94, "high-sensitivity":94, "lubes":94, "firebreaks":94, "transcendently":94, "antiquarians":94, "bonked":94, "dockworker":94, "lacewings":94, "lactose-intolerant":94, "two-mile-long":94, "launchings":94, "hierarchal":94, "pro-rated":94, "odor-free":94, "light-absorbing":94, "metalsmiths":94, "cross-hairs":94, "cross-dressers":94, "rural-to-urban":94, "rice-growing":94, "woman-centered":94, "unnamable":94, "water-powered":94, "truckstop":94, "configurable":94, "precedential":94, "pasturing":94, "food-grade":94, "coverts":94, "x-raying":94, "search-engine":94, "normal-weight":94, "fabian":94, "amusement-park":94, "biopics":94, "biomolecular":94, "misapprehensions":94, "dairyman":94, "nondrug":94, "multitrack":94, "treestand":94, "syrian-israeli":94, "pop-art":94, "non-reactive":94, "organising":94, "strumpet":94, "squaws":94, "three-cd":94, "greengrocers":94, "convexity":94, "syndicator":94, "mass-based":94, "lip-smacking":94, "hard-bodied":94, "crikey":94, "chain-saw":94, "bull's-eyes":94, "bull-riding":94, "creches":94, "candy-coated":94, "ambassador-at-large":94, "tax-favored":94, "knishes":94, "frosh":94, "smelted":94, "counterclaim":94, "lecterns":94, "oldster":94, "water-efficient":94, "pro-immigrant":94, "fungo":94, "jerk-off":94, "ex-slave":94, "sixty-second":94, "streetcorner":94, "substitutability":94, "subclasses":94, "porticos":94, "superfood":94, "fire-eating":94, "disarticulation":94, "remanufacturing":94, "negroid":94, "non-surgical":94, "confederal":94, "redeye":94, "declamations":94, "hip-hoppers":94, "ponderosas":94, "onesie":94, "schedulers":94, "prepublication":94, "self-massage":94, "cost-based":94, "accreted":94, "baby-making":94, "enchanter":94, "timbale":94, "values-based":94, "chooser":94, "co-dependency":94, "driveline":94, "tiptop":94, "postmen":94, "in-boxes":94, "fire-eaters":94, "antiracist":94, "two-letter":94, "rumanians":94, "belled":94, "home-delivered":94, "tomboys":94, "rollouts":94, "liquid-cooled":94, "bedchambers":94, "scientistic":94, "southeastward":94, "storable":94, "megayacht":94, "beasties":94, "saltiest":94, "seven-step":94, "step-daughter":94, "fifty-fifth":94, "digressive":94, "biologics":94, "point-source":94, "heideggerian":94, "brindle":94, "late-medieval":94, "off-world":94, "serb-controlled":94, "bootprints":94, "three-family":94, "trebles":94, "student-generated":94, "shofar":94, "shithouse":94, "daters":94, "life-supporting":94, "poppet":94, "modernizations":94, "lawn-mower":94, "unshelled":94, "scoutmasters":94, "newsreader":94, "plea-bargain":94, "strongpoints":94, "colon-cancer":94, "biosensors":94, "fade-out":94, "phonic":94, "nicotinic":94, "korean-owned":94, "airdrops":94, "dialled":94, "wasters":94, "microflora":94, "darwinist":94, "bandeau":94, "non-formal":94, "unpresidential":94, "minimart":94, "bar-ends":94, "muesli":94, "two-flat":94, "eiders":94, "crosser":94, "image-editing":94, "savin":94, "black-suited":94, "mid-mountain":94, "poor-performing":94, "meathead":94, "judaeo-christian":94, "onliest":94, "college-wide":94, "cottonmouths":94, "curettage":94, "non-monetary":94, "read/write":94, "entrenchments":94, "occults":94, "stogies":94, "dukedom":94, "tickler":94, "coal-based":94, "rewrap":94, "heaths":94, "gremolata":94, "metanarratives":94, "logicians":94, "unbundling":94, "factitious":94, "dominus":94, "silk-screen":94, "short-wavelength":94, "sexually-transmitted":94, "hispanic-owned":94, "multisystemic":94, "sifters":94, "neo-soul":94, "non-russians":94, "keratosis":94, "chekhovian":94, "potager":94, "immunosuppressants":94, "hyperglycemia":94, "wigglers":94, "haircolor":94, "townscape":94, "left-turn":94, "diaper-changing":94, "intercessors":94, "driers":94, "assault-weapons":94, "ex-kgb":94, "heatwave":94, "arses":94, "freeze-thaw":94, "term-limits":94, "crumpet":94, "superjumbo":94, "anti-wrinkle":94, "sustainment":94, "venture-backed":94, "deistic":94, "myalgia":94, "complementarities":94, "anti-bias":94, "cell-mediated":94, "morro":94, "revenue-neutral":94, "young-old":94, "characterological":94, "incas":94, "malamute":94, "brewpubs":94, "non-lawyers":94, "two-class":94, "superluminal":94, "firewater":94, "mini-golf":94, "gazan":94, "non-ethnic":94, "showhouse":94, "diatomaceous":94, "below-normal":94, "undescended":94, "bougainvilleas":94, "saurian":94, "mammas":94, "no-treatment":94, "self-stimulation":94, "unitarianism":94, "halftones":94, "daddys":94, "biocentric":94, "cross-class":94, "low-res":94, "tefillin":94, "teen-pop":94, "three-fifty":94, "ultramarathon":94, "bupropion":94, "neurasthenia":94, "class-specific":94, "double-clicking":94, "cankers":94, "standard-definition":94, "liturgists":94, "money-center":94, "barer":94, "narcos":94, "agrochemicals":94, "pre-performance":94, "folliculitis":94, "hackle":94, "fowling":94, "pinole":94, "absorbance":94, "laboratory-confirmed":94, "low-birth-weight":94, "sledders":94, "mudflat":94, "anti-illegal":94, "pass-rusher":94, "bandpass":94, "carbureted":94, "epizootic":94, "solution-oriented":94, "yttrium":94, "zygomatic":94, "diaconate":94, "cotoneaster":94, "full-swing":94, "ghats":94, "tissue-specific":94, "two-strokes":94, "liberationists":94, "primatologists":94, "non-amish":94, "hearing-aid":94, "midlatitudes":94, "nonroutine":94, "spliff":94, "longbeards":94, "waterpark":94, "ternary":94, "israel-palestinians":94, "sherries":94, "powerlifting":94, "down-payment":94, "grillers":94, "sidecuts":94, "tuscans":94, "top-loader":94, "self-insurance":94, "insulations":94, "submunitions":94, "paresthesia":94, "onanism":94, "bionics":94, "biohazards":94, "initialized":94, "crullers":94, "cryostat":94, "coagulase-negative":94, "rumen":94, "anti-federalist":94, "bedwetting":94, "anti-life":94, "hypostatic":94, "vancomycin-resistant":94, "ex-post":94, "gingers":94, "antiplatelet":94, "trade-up":94, "carthusian":94, "intercooler":94, "severability":94, "preconstruction":94, "cognizable":94, "plebeians":94, "sex-toy":94, "glaciologists":94, "disconfirming":94, "croat-muslim":94, "self-guiding":94, "retroviral":94, "scaffolded":94, "swedenborgian":94, "vibrio":94, "tree-shaped":94, "cataloger":94, "inoculant":94, "leptospirosis":94, "churchwomen":94, "proteinuria":94, "monos":94, "townsite":94, "cop-killer":94, "durational":94, "private-pay":94, "animal-derived":94, "collimator":94, "dittos":94, "zenithal":94, "thermomechanical":94, "clinicopathological":94, "cabooses":94, "non-hazardous":94, "leucocytes":94, "rememberer":94, "high-redshift":94, "asynchrony":94, "pre-injury":94, "averageness":94, "insider/outsider":94, "surinamese":94, "autoguider":94, "preauricular":94, "time/space":94, "laryngopharyngeal":94, "kinases":94, "traditional-aged":94, "extruder":94, "purse-seine":94, "sepoys":94, "stableman":94, "decolonized":94, "cardioversion":94, "magnetoresistance":94, "highbush":94, "set-associative":94, "aguardiente":94, "cyclorama":94, "t-score":94, "vice-consul":94, "owlets":94, "nyah":94, "oil-shale":94, "student-aid":94, "auto-theft":94, "beachfronts":94, "influenza-like":94, "donor-imposed":94, "food-web":94, "springers":94, "smithian":94, "madrassah":94, "mealybug":94, "transgenes":94, "necromancers":94, "tachyons":94, "loris":94, "flexural":94, "allelopathic":94, "damascene":94, "fretboard":94, "terahertz":94, "discrete-time":94, "luminist":94, "reactance":94, "aspergillosis":94, "blood-lead":94, "ego-involved":94, "nondelinquent":94, "nutrias":94, "brighteners":94, "wavefronts":94, "nonspeech":94, "reachability":94, "gender-stereotyped":94, "consilium":94, "manometry":94, "pictish":94, "blastomycosis":94, "space-charge":94, "cholangitis":94, "myocytes":94, "cofferdam":94, "perfective":94, "synovitis":94, "hiragana":94, "supplementarity":94, "cryosleep":94, "daminozide":94, "injury-prevention":94, "high-acuity":94, "angiosarcoma":94, "strikebreaking":94, "e-portfolios":94, "metamaterial":94, "modalism":94, "osteopath":95, "re-experience":95, "hummable":95, "carrier-based":95, "glossier":95, "water-ski":95, "watchfully":95, "rusticity":95, "indubitable":95, "coconspirators":95, "confiscates":95, "dog-tired":95, "frittering":95, "undeservedly":95, "circuitously":95, "longest-tenured":95, "inner-ear":95, "straight-arrow":95, "burbles":95, "embroil":95, "hairbrushes":95, "radioactively":95, "reddish-blond":95, "seven-pound":95, "seclude":95, "secedes":95, "weight-conscious":95, "white-shoe":95, "ten-page":95, "sermonizing":95, "scorches":95, "scotched":95, "first-week":95, "first-serve":95, "auspiciously":95, "enervated":95, "teleconferences":95, "commandeers":95, "disinherited":95, "edgily":95, "fulminated":95, "immobilizes":95, "multi-talented":95, "mid-calf":95, "lynchpin":95, "income-oriented":95, "misconceived":95, "oxford-educated":95, "publicizes":95, "lovably":95, "get-out-of-jail-free":95, "surveil":95, "shortchanges":95, "waiflike":95, "stress-relieving":95, "soughing":95, "wangle":95, "witheringly":95, "broadness":95, "christ-centered":95, "inelegantly":95, "headquarter":95, "legalizes":95, "overburdening":95, "rainless":95, "aslant":95, "eight-foot-tall":95, "five-plus":95, "marshalled":95, "great-great-great":95, "stinting":95, "tape-measure":95, "two-inch-thick":95, "two-foot-tall":95, "transmutes":95, "byplay":95, "gruelling":95, "gold-trimmed":95, "high-up":95, "outgrows":95, "recirculate":95, "sulks":95, "sets-in-use":95, "gnash":95, "one-up":95, "oversimplifications":95, "ascendency":95, "solid-gold":95, "pungently":95, "oft-stated":95, "dark-paneled":95, "fast-running":95, "bestknown":95, "triangular-shaped":95, "twentythree":95, "twiddle":95, "self-admitted":95, "six-seat":95, "ruminates":95, "sloppier":95, "eighteen-month":95, "manageability":95, "mellowness":95, "near-daily":95, "rejoinders":95, "rhapsodize":95, "foible":95, "extruding":95, "adminstration":95, "demonically":95, "double-takes":95, "ever-tightening":95, "high-school-age":95, "realworld":95, "quaff":95, "pissant":95, "tastemaker":95, "superfluity":95, "tobacco-stained":95, "much-used":95, "limey":95, "crated":95, "electrifies":95, "half-mile-long":95, "soundstages":95, "semitism":95, "school-by-school":95, "reworkings":95, "pablum":95, "cuckolded":95, "expedients":95, "slipup":95, "self-abnegation":95, "tony-nominated":95, "supplicating":95, "castle-like":95, "callouses":95, "listenable":95, "mustardy":95, "girds":95, "revengeful":95, "yokel":95, "ekes":95, "him-self":95, "joyfulness":95, "outlasts":95, "highballs":95, "inboxes":95, "inch-high":95, "moisture-wicking":95, "two-horse":95, "hottest-selling":95, "jailbreak":95, "prised":95, "right-angled":95, "rain-streaked":95, "over-zealous":95, "long-drawn-out":95, "industry-leading":95, "choreographs":95, "duvets":95, "welfare-state":95, "well-coached":95, "stress-reducing":95, "rubber-coated":95, "reforest":95, "strobed":95, "shot-blocking":95, "amalgamate":95, "caterwauling":95, "emulsify":95, "delish":95, "inroad":95, "much-coveted":95, "barhopping":95, "atomize":95, "attaboy":95, "athletic-looking":95, "pleasanter":95, "stickpin":95, "non-performing":95, "hospitably":95, "crookedness":95, "top-hatted":95, "self-generating":95, "self-invention":95, "shitter":95, "soil-dwelling":95, "scabbards":95, "crewed":95, "australasian":95, "appending":95, "ameliorates":95, "glass-bottom":95, "modern-looking":95, "lip-synching":95, "record-low":95, "top-ten":95, "vengefully":95, "white-tipped":95, "on-the-field":95, "nametags":95, "beady-eyed":95, "less-qualified":95, "self-diagnosis":95, "self-controlled":95, "rooflines":95, "conservative-leaning":95, "empathically":95, "unfruitful":95, "risk-reward":95, "curtsies":95, "cagily":95, "wiseacre":95, "fecklessness":95, "feebleness":95, "excoriates":95, "desideratum":95, "by-your-leave":95, "lower-case":95, "lowlight":95, "palpating":95, "nonce":95, "modem-day":95, "prizefighters":95, "putrefying":95, "b-movies":95, "disobeys":95, "exfoliates":95, "wise-guy":95, "womanish":95, "work-oriented":95, "mythologize":95, "cock-eyed":95, "snowblower":95, "timeframes":95, "football-playing":95, "hell-raiser":95, "anal-retentive":95, "roomiest":95, "self-critique":95, "honor-bound":95, "now-extinct":95, "spring-like":95, "chutzpa":95, "reddish-purple":95, "rockfall":95, "pre-pubescent":95, "pre-trip":95, "seven-speed":95, "white-chocolate":95, "waspish":95, "steel-reinforced":95, "micro-manage":95, "first-strike":95, "first-edition":95, "forty-nine-year-old":95, "eclat":95, "raven-black":95, "retro-style":95, "cross-breeding":95, "multi-culturalism":95, "unshielded":95, "job-creation":95, "unviable":95, "manoeuvre":95, "double-header":95, "yellowy":95, "yeses":95, "technophiles":95, "torsionally":95, "three-sixty":95, "well-diversified":95, "wide-bodied":95, "v-shape":95, "emancipating":95, "counter-clockwise":95, "passed-out":95, "formica-topped":95, "exiling":95, "acne-prone":95, "right-brain":95, "post-crisis":95, "pinions":95, "hand-embroidered":95, "greediness":95, "stitchery":95, "taproots":95, "flakiness":95, "crack-addicted":95, "black-and-gold":95, "sandy-colored":95, "smirky":95, "steroidal":95, "game-saving":95, "meadowlarks":95, "expunging":95, "dry-mouthed":95, "bus-stop":95, "blah-blah-blah":95, "self-produced":95, "four-level":95, "four-line":95, "hiccupped":95, "hiccuped":95, "perjurer":95, "five-to-one":95, "assenting":95, "anti-republican":95, "team-first":95, "teacher-pupil":95, "self-abasement":95, "sixty-foot":95, "subversions":95, "unproblematically":95, "drug-smuggling":95, "conciliate":95, "airiness":95, "non-functional":95, "purgative":95, "post-new":95, "gazetteer":95, "senate-passed":95, "half-jewish":95, "french-made":95, "cantering":95, "bugaboos":95, "bond-rating":95, "disassociating":95, "glimmerings":95, "misplacement":95, "huggy":95, "much-talked-about":95, "palpitation":95, "postseasons":95, "ultra-efficient":95, "ultra-nationalist":95, "think-tanks":95, "glissando":95, "every-down":95, "body-language":95, "antonym":95, "capful":95, "equivocating":95, "island-hopping":95, "mousses":95, "kaboom":95, "coagulating":95, "two-a-day":95, "centrifuged":95, "ex-new":95, "offsprings":95, "internet-connected":95, "housebroken":95, "zester":95, "millworkers":95, "no-parking":95, "learnable":95, "indigence":95, "sightlessly":95, "interrogatory":95, "muzzling":95, "pre-algebra":95, "two-hit":95, "cornstalk":95, "prefiguration":95, "health-giving":95, "campaign-style":95, "zillionaire":95, "soot-covered":95, "vintage-style":95, "baserunner":95, "miscommunications":95, "pay-back":95, "intoxicant":95, "sun-loving":95, "still-lifes":95, "oh-ho":95, "peep-toe":95, "green-gold":95, "merrymakers":95, "caramelizing":95, "evaporators":95, "ameliorative":95, "capsicum":95, "potato-chip":95, "steam-driven":95, "slowed-down":95, "repents":95, "producer-director":95, "particularize":95, "overfly":95, "long-wearing":95, "ideologist":95, "sprayings":95, "sods":95, "urbanist":95, "overnighting":95, "satellite-guided":95, "splices":95, "goofballs":95, "defense-oriented":95, "cockfight":95, "beltline":95, "nonrepresentative":95, "heart-related":95, "slimeball":95, "whatchamacallit":95, "fourteen-year-olds":95, "chin-ups":95, "palestinian-controlled":95, "lower-price":95, "guiltier":95, "weaponize":95, "tourer":95, "shoulder-launched":95, "left-brain":95, "recalculation":95, "reoffend":95, "duopoly":95, "split-finger":95, "factious":95, "idiosyncratically":95, "salesclerks":95, "court-imposed":95, "won-loss":95, "seven-and-a-half":95, "venders":95, "repopulation":95, "serape":95, "immunosuppressant":95, "bookbinder":95, "bass-baritone":95, "commensal":95, "bummers":95, "dishtowels":95, "refutations":95, "tee-shirts":95, "murmurous":95, "match-ups":95, "public-employee":95, "non-descript":95, "adventuress":95, "dirtiness":95, "unworn":95, "vixens":95, "free-flying":95, "frat-boy":95, "frankfurters":95, "headshot":95, "iranian-american":95, "wind-resistant":95, "wanker":95, "webmasters":95, "technology-oriented":95, "anti-hispanic":95, "bloop":95, "dissention":95, "egyptian-israeli":95, "metrowide":95, "rigour":95, "scrotal":95, "black-skinned":95, "arms-length":95, "thai-style":95, "overselling":95, "nanoscience":95, "divine-human":95, "five-tool":95, "bronzy":95, "airsick":95, "grand-mother":95, "purple-leaved":95, "re-present":95, "sub-surface":95, "at-sea":95, "limited-production":95, "non-urban":95, "pisser":95, "limitlessness":95, "allocative":95, "rheostat":95, "antiracism":95, "debt-service":95, "gyration":95, "pretties":95, "broncs":95, "all-city":95, "microhabitats":95, "selectman":95, "accumulator":95, "poopy":95, "hybrid-electric":95, "signboards":95, "harelip":95, "recognisable":95, "old-economy":95, "load-carrying":95, "hand-crank":95, "balaclavas":95, "computer-game":95, "short-barreled":95, "flowerbed":95, "tokes":95, "short-season":95, "footsie":95, "lakebed":95, "halide":95, "mid-city":95, "newsworthiness":95, "retrievals":95, "life-force":95, "immunologically":95, "continuums":95, "glace":95, "nonflammable":95, "cigarets":95, "pre-wedding":95, "factory-installed":95, "aging-related":95, "self-contempt":95, "innovativeness":95, "tourist-oriented":95, "splats":95, "shark-fin":95, "mailmen":95, "semi-nomadic":95, "subheading":95, "market-place":95, "bedframe":95, "cloches":95, "fourth-and-one":95, "pened":95, "throw-in":95, "witchhunt":95, "fetishists":95, "salvagers":95, "mind-control":95, "overpainting":95, "no-wake":95, "cowshed":95, "thematizes":95, "longbows":95, "moocher":95, "f-sharp":95, "wingshooting":95, "washer-dryer":95, "pannier":95, "serialism":95, "subnormal":95, "sweatband":95, "murder-for-hire":95, "barbless":95, "early-blooming":95, "colony-forming":95, "roustabouts":95, "upgradable":95, "gunmaker":95, "veganism":95, "briers":95, "fornicate":95, "hand-dug":95, "reactively":95, "tip-toe":95, "crack-cocaine":95, "sterilizer":95, "videophones":95, "hate-crimes":95, "hydroponically":95, "measurer":95, "preschool-aged":95, "revealer":95, "launderer":95, "anti-oxidants":95, "sepulchre":95, "overtopping":95, "non-waiver":95, "single-line":95, "astrophotos":95, "bodhisattva":95, "endogenously":95, "tradewinds":95, "unhistorical":95, "arousals":95, "disembarkation":95, "streaker":95, "tribals":95, "hydrofluoric":95, "gamebird":95, "dry-aged":95, "extended-cab":95, "sandpit":95, "deify":95, "noradrenaline":95, "landscape-scale":95, "coronaries":95, "anti-foreigner":95, "inegalitarian":95, "milk-based":95, "meditational":95, "co-parent":95, "third-period":95, "shortgrass":95, "historicized":95, "self-expressive":95, "hot-and-sour":95, "paper-towel-lined":95, "columbarium":95, "crewmate":95, "gentling":95, "theocentric":95, "sprit":95, "superspeedways":95, "restrictionist":95, "jumbos":95, "water-conserving":95, "russian-jewish":95, "noncanonical":95, "intercropping":95, "chinstrap":95, "chinaberry":95, "methicillin":95, "health-policy":95, "snorer":95, "super-premium":95, "agrarians":95, "etcher":95, "filles":95, "coffeeshop":95, "irreligion":95, "hegemons":95, "robusta":95, "late-19th":95, "jighead":95, "gusset":95, "conterminous":95, "audibility":95, "nature-oriented":95, "rapid-response":95, "oxidant":95, "psychopharmacological":95, "use-of-force":95, "wholistic":95, "bent-knee":95, "expectorant":95, "five-card":95, "land-line":95, "person-centred":95, "middle-grade":95, "declawed":95, "deckhouse":95, "fenestration":95, "gamboge":95, "telekinesis":95, "social-historical":95, "rehabilitator":95, "revolutionists":95, "pornos":95, "single-vehicle":95, "transcranial":95, "superorganism":95, "fire-related":95, "pickiness":95, "foetus":95, "ductility":95, "tie-downs":95, "bad-faith":95, "self-annihilation":95, "asset-management":95, "import-substituting":95, "flagella":95, "skills-based":95, "solvent-based":95, "feminazi":95, "parapsychological":95, "harmfulness":95, "post-disaster":95, "benzodiazepine":95, "shopgirl":95, "broadheads":95, "fraudster":95, "tax-rate":95, "bris":95, "simians":95, "gin-and-tonic":95, "forgings":95, "intactness":95, "life-skills":95, "pop-pop":95, "frontside":95, "genitourinary":95, "bottom-bracket":95, "recentering":95, "companionate":95, "daylight-saving":95, "work-place":95, "multichip":95, "breadboard":95, "most-cited":95, "burin":95, "nonexperimental":95, "volar":95, "strong-side":95, "self-representations":95, "chicos":95, "chicle":95, "hydrolyzed":95, "self-publish":95, "calligraphers":95, "nurse-patient":95, "habilitation":95, "half-liter":95, "poststructural":95, "epidurals":95, "centroid":95, "center-periphery":95, "darkie":95, "rolloff":95, "street-based":95, "patient-controlled":95, "dialectal":95, "moldavians":95, "madrasa":95, "fathead":95, "self-tapping":95, "unsustainability":95, "nonedible":95, "forward-deployed":95, "basketmaker":95, "capstan":95, "three-drug":95, "disjunctures":95, "embryological":95, "hellenism":95, "curvatures":95, "petioles":95, "globalists":95, "noncaloric":95, "woofer":95, "pneumonic":95, "midlist":95, "anaerobes":95, "moonie":95, "scale-up":95, "polyandry":95, "interprovincial":95, "glycosides":95, "solid-wood":95, "presbyters":95, "epigraphic":95, "breast-side":95, "equivalencies":95, "rhinovirus":95, "doubloon":95, "candidiasis":95, "listeriosis":95, "no-haggle":95, "asbestos-containing":95, "representable":95, "horatian":95, "double-action":95, "forward/center":95, "phone-line":95, "waste-treatment":95, "triploid":95, "wilsonianism":95, "sympatric":95, "hypertensives":95, "fluence":95, "architrave":95, "autobiographers":95, "turbofans":95, "conventionalism":95, "instream":95, "hosel":95, "structuration":95, "exceptionalist":95, "garbs":95, "prefilter":95, "redescription":95, "social-environmental":95, "minitower":95, "stationhouse":95, "four-cycle":95, "seismometer":95, "ovipositor":95, "conspecific":95, "substance-use":95, "new-music":95, "phenological":95, "long-arm":95, "fermionic":95, "shahid":95, "titmouse":95, "higher-skilled":95, "chigger":95, "locknut":95, "daemons":95, "nonnegative":95, "nonordinary":95, "atrioventricular":95, "crofters":95, "phonon":95, "self-constitution":95, "thrombi":95, "thrombophlebitis":95, "uranian":95, "biodegradability":95, "moneyless":95, "fermata":95, "garlics":95, "college-radio":95, "sandblasters":95, "heterozygosity":95, "nonliberal":95, "parafoil":95, "endarterectomy":95, "heterotopic":95, "malians":95, "intragenerational":95, "digicam":95, "inbetween":95, "odontogenic":95, "break-in":95, "diffusionist":95, "small-mammal":95, "nasserism":95, "basils":95, "dreamcatcher":95, "rouille":95, "stearic":95, "psychokinesis":95, "nontribal":95, "dual-channel":95, "compensators":95, "nanomechanical":95, "vehicle-mounted":95, "fatalists":95, "thermogenic":95, "bulblets":95, "foreshore":95, "unsettlement":95, "overmantel":95, "analytes":95, "helminth":95, "zulu-speaking":95, "fibrinolytic":95, "nonstationary":95, "textualized":95, "globality":95, "cross-lagged":95, "popliteal":95, "endothelium-dependent":95, "orthosilicic":95, "supernatants":95, "debilitative":95, "micropayments":95, "calutron":95, "acrolein":95, "punitives":95, "printhead":95, "shipworm":95, "capsid":95, "perfluorinated":95, "plethysmography":95, "intraosseous":95, "work-group":95, "fluorinated":95, "timeshares":95, "mother-adolescent":95, "rootworm":95, "uraemic":95, "home-prepared":95, "time-domain":95, "testbeds":95, "work-product":95, "intra-arterial":95, "kerogen":95, "vibrotactile":95, "broadtail":95, "coumaphos":95, "ductless":95, "nuclear-weapon-free":95, "blastomere":95, "religious-philosophical":95, "photorefractive":95, "excitor":95, "leprosarium":95, "empathy-related":95, "genuflection":95, "fifty-three-year-old":95, "burgeon":95, "rereleased":95, "party-goers":95, "pg-rated":95, "well-polished":95, "eagle-eyed":95, "foolhardiness":95, "coincidently":95, "moss-draped":95, "reemphasized":95, "policy-maker":95, "straight-shooting":95, "spritely":95, "six-foot-five":95, "hawed":95, "lower-grade":95, "wishers":95, "state-ofthe-art":95, "superceded":95, "snot-nosed":95, "cobwebbed":95, "brawled":95, "quivery":95, "hogged":95, "logy":95, "immunizes":95, "gigged":95, "fist-pumping":95, "bathos":95, "firstclass":95, "boogaloo":95, "downshifted":95, "disconcert":95, "unbend":95, "ten-story":95, "abjuring":95, "calculatedly":95, "unstick":95, "unseasonal":95, "screeds":95, "big-shouldered":95, "biggest-ever":95, "crazy-quilt":95, "hopscotching":95, "loud-mouthed":95, "ill-concealed":95, "somebodies":95, "stampedes":95, "rubber-stamping":95, "volubly":95, "thirstily":95, "consultancies":95, "outdistanced":95, "quells":95, "highend":95, "channelled":95, "carbonized":95, "belabored":95, "alcohol-fueled":95, "pincushions":95, "insincerely":95, "fathoming":95, "eight-and-a-half":95, "coronations":95, "shadier":95, "co-producing":95, "adamantine":95, "go-getters":95, "philadelphian":95, "once-famous":95, "nimbler":95, "industrial-sized":95, "winched":95, "threeday":95, "tortuously":95, "blemish-free":95, "feelingly":95, "fleabag":95, "infernos":95, "home-maintenance":95, "run-and-gun":95, "depopulate":95, "copacetic":95, "plasterboard":95, "sixth-year":95, "proselytizer":95, "push-back":95, "low-brow":95, "big-dollar":95, "soup-to-nuts":95, "tucked-away":95, "unenforced":95, "ultra-sensitive":95, "much-lauded":95, "remediated":95, "mismanage":95, "high-rollers":95, "demoting":95, "damns":95, "family-like":95, "dirty-blond":95, "hard-edge":95, "misperceive":95, "messianism":95, "negligibly":95, "unengaged":95, "undersell":95, "boo-boos":95, "big-leaguer":95, "kayaked":95, "mini-vacation":95, "half-turn":95, "pussycats":95, "overstimulated":95, "suprisingly":95, "seldom-seen":95, "housecat":95, "hideousness":95, "often-repeated":95, "muslim-dominated":95, "micromanager":95, "ex-soldier":95, "commodify":95, "best-managed":95, "deceivers":95, "drugged-out":95, "eighteenthcentury":95, "drug-fueled":95, "stair-step":95, "soppy":95, "skyscraping":95, "vegas-style":95, "long-accepted":95, "once-white":95, "rain-slick":95, "redhaired":95, "deemphasized":95, "deep-freeze":95, "all-too-real":95, "bequeaths":95, "bloody-minded":95, "blood-drenched":95, "blood-filled":95, "hotfoot":95, "necessaries":95, "obduracy":95, "sweet-talked":95, "regenerist":95, "business-minded":95, "blah-blah":95, "child-custody":95, "costeffective":95, "costumers":95, "export-driven":95, "inveighing":95, "no-hassle":95, "quicklime":95, "flagships":95, "goggling":95, "earthmoving":95, "earthquake-prone":95, "encourager":95, "thirty-ninth":95, "retractions":95, "slathers":95, "strong-looking":95, "vulgarly":95, "misanthropes":95, "itty":95, "lewdness":95, "graybeards":95, "clanks":95, "bigger-than-life":95, "scrabbles":95, "still-active":95, "stiflingly":95, "spiff":95, "remount":95, "rearmost":95, "cartoonishly":95, "adult-education":95, "moneymen":95, "livelong":95, "unventilated":95, "untangles":95, "repopulating":95, "steep-walled":95, "enforcements":95, "auto-pilot":95, "plantation-style":95, "lustfully":95, "championship-caliber":95, "multi-stage":95, "insurgence":95, "life-prolonging":95, "three-four":95, "mainspring":95, "health-maintenance":95, "repacking":95, "parred":95, "blithering":95, "caesarian":95, "fetishize":95, "custardy":95, "uncaged":95, "unfeigned":95, "sanctifies":95, "towhead":95, "subdues":95, "runts":95, "wishfully":95, "toughie":95, "wazoo":95, "writer/producer":95, "hunched-over":95, "re-introduce":95, "putdowns":95, "penny-wise":95, "pencil-and-paper":95, "postdate":95, "multimillions":95, "cross-references":95, "flatterer":95, "feature-rich":95, "disputatious":95, "pathognomonic":95, "reenlist":95, "butthead":95, "boundlessly":95, "footers":95, "half-expecting":95, "eager-to-please":95, "well-tanned":95, "seventy-five-year-old":95, "overfeeding":95, "rereads":95, "hairnets":95, "long-married":95, "coexistent":95, "county-wide":95, "cogitation":95, "fifty-six-year-old":95, "genuflected":95, "ingenuousness":95, "wigwams":95, "yardarm":95, "woodcraft":95, "workrooms":95, "doorsill":95, "emollients":95, "awls":95, "overhunting":95, "noncorrosive":95, "highlight-reel":95, "weak-willed":95, "shovelfuls":95, "uncharged":95, "uncleared":95, "curmudgeons":95, "dog-friendly":95, "fringy":95, "artists-in-residence":95, "backfilling":95, "toons":95, "low-tide":95, "clear-sighted":95, "bathing-suit":95, "planet-wide":95, "hucking":95, "first-and-goal":95, "downfalls":95, "procrustean":95, "atrociously":95, "reauthorizing":95, "newsgathering":95, "outruns":95, "canoed":95, "euro-style":95, "gravesites":95, "roustabout":95, "container-grown":95, "animal-based":95, "high-spending":95, "one-thirtieth":95, "equable":95, "carefulness":95, "somberness":95, "fullscale":95, "anti-inflation":95, "anti-european":95, "crosspiece":95, "theretofore":95, "transfigure":95, "all-stock":95, "co-organizer":95, "one-back":95, "leitmotifs":95, "hoagie":95, "hocked":95, "well-conditioned":95, "three-martini":95, "eighteen-wheelers":95, "operating-room":95, "opposite-field":95, "slipups":95, "unprejudiced":95, "cliffhangers":95, "liquidations":95, "ginger-haired":95, "supply-sider":95, "oompah":95, "re-inventing":95, "mantled":95, "elbow-length":95, "french-inspired":95, "flyleaf":95, "slave-holding":95, "unembellished":95, "under-performing":95, "mucked":95, "pamphleteers":95, "riling":95, "remixed":95, "misinterprets":95, "laser-based":95, "high-mindedness":95, "improvident":95, "dance-floor":95, "demesne":95, "marine-grade":95, "quart-size":95, "posterboard":95, "fictionalize":95, "antiviolence":95, "portuguese-speaking":95, "overthinking":95, "street-legal":95, "surcease":95, "sixmonth":95, "societally":95, "four-round":95, "slogs":95, "post-imperial":95, "irruption":95, "mousing":95, "gay-friendly":95, "experimentations":95, "skylit":95, "wind-powered":95, "medium-bodied":95, "mediumsize":95, "mileposts":95, "resoluteness":95, "sunny-side":95, "snifters":95, "snark":95, "uncomplainingly":95, "lumbago":95, "house-brand":95, "greek-american":95, "regnant":95, "diagnostically":95, "childproofing":95, "overrate":95, "outflung":95, "babying":95, "byes":95, "flash-frozen":95, "repossessing":95, "videocameras":95, "misappropriating":95, "naturalistically":95, "caned":95, "sticklike":95, "good-enough":95, "temperature-sensitive":95, "unattractiveness":95, "venerating":95, "procures":95, "steepened":95, "cleanshaven":95, "convalesce":95, "american-trained":95, "clavier":95, "glass-top":95, "percentage-point":95, "masques":95, "daub":95, "aft-facing":95, "cedar-lined":95, "non-residential":95, "tutsi-led":95, "swaybacked":95, "dunker":95, "stovepipes":95, "story-teller":95, "symptomatically":95, "weatherproofing":95, "guillotined":95, "lower-tier":95, "daypacks":95, "carrels":95, "bishopric":95, "six-foot-six":95, "winterize":95, "special-order":95, "spectacled":95, "specifiable":95, "wanning":95, "overexpose":95, "gentlewomen":95, "coffee-shop":95, "warlordism":95, "ethno-cultural":95, "drivable":95, "fox-trot":95, "post-presidency":95, "pro-peace":95, "unpicked":95, "whitener":95, "tankless":95, "underuse":95, "truth-value":95, "defamiliarization":95, "blimey":95, "break-away":95, "nonrecurring":95, "korean-americans":95, "refreeze":95, "misters":95, "piggy-back":95, "ceasefires":95, "enflamed":95, "littleness":95, "takedowns":95, "amanuensis":95, "employments":95, "emphasised":95, "oxcart":95, "lostness":95, "carless":95, "civically":95, "crackup":95, "black-and-yellow":95, "old-man":95, "recharger":95, "hurrahs":95, "highest-priority":95, "no-see-ums":95, "lobotomies":95, "intros":95, "regicide":95, "rapports":95, "solid-colored":95, "shires":95, "shinbone":95, "paint-by-numbers":95, "deadlocks":95, "anti-french":95, "anti-gravity":95, "extra-terrestrial":95, "preemptory":95, "wallpapering":95, "epigraphs":95, "backtracks":95, "razor-wire":95, "scut":95, "ex-students":95, "sixpack":95, "non-blacks":95, "pushrod":95, "re-opening":95, "grammarian":95, "jaybird":95, "falsifies":95, "circumferences":95, "bible-study":95, "to-night":95, "mispronunciations":95, "schoolmasters":95, "underinflated":95, "sheeps":95, "boardings":95, "microlevel":95, "plasterer":95, "periodontist":95, "substrata":95, "home-canned":95, "debt-to-equity":95, "walk-out":95, "psychometrics":95, "free-marketeers":95, "all-russian":95, "corpsmen":95, "right-to-lifers":95, "sundials":95, "taoists":95, "living-dining":95, "upholster":95, "upper-respiratory":95, "oxalic":95, "pubes":95, "operability":95, "continuations":95, "scramblers":95, "playland":95, "apartness":95, "affordable-housing":95, "panoptic":95, "forty-hour":95, "impales":95, "steel-cut":95, "turbocharging":95, "carafes":95, "carbon-intensive":95, "clevis":95, "draw-down":95, "misspeak":95, "non-readers":95, "ligatures":95, "treatment-related":95, "salutatorian":95, "snow-removal":95, "wharfs":95, "multileveled":95, "metanoia":95, "jaywalkers":95, "covens":95, "special-operations":95, "connive":95, "diffusive":95, "normal-size":95, "long-repressed":95, "seven-passenger":95, "consensus-based":95, "close-ended":95, "bradycardia":95, "kikes":95, "pro-competitive":95, "south-eastern":95, "undersurface":95, "aurorae":95, "adult-child":95, "playgoers":95, "buck-toothed":95, "taxidermists":95, "nontraumatic":95, "collimate":95, "stupas":95, "glute":95, "patient-physician":95, "cost-control":95, "post-coup":95, "insolation":95, "acidifying":95, "vapour":95, "rehear":95, "anti-nausea":95, "tone-on-tone":95, "starfield":95, "flytrap":95, "gender-biased":95, "adenomatous":95, "misrecognition":95, "muchachos":95, "supernormal":95, "antinomy":95, "catmint":95, "picture-in-picture":95, "ectoplasm":95, "noninstitutional":95, "hide-out":95, "post-performance":95, "decertified":95, "drug/alcohol":95, "freeze-up":95, "spading":95, "siberians":95, "anti-zionism":95, "camerawork":95, "floribunda":95, "anti-gambling":95, "needle-exchange":95, "riflescope":95, "dhows":95, "pathophysiological":95, "phrygian":95, "deists":95, "matter-antimatter":95, "speedways":95, "smithing":95, "earbud":95, "natively":95, "polyphenol":95, "gerontocracy":95, "oil-painting":95, "playrooms":95, "simples":95, "still-hunt":95, "barfed":95, "jewelled":95, "multiuser":95, "temporalities":95, "reusability":95, "insureds":95, "pigweed":95, "text-to-speech":95, "nickel-iron":95, "cockle":95, "triptychs":95, "aileron":95, "exfoliators":95, "ancestress":95, "gerbera":95, "minerality":95, "precapitalist":95, "spring-flowering":95, "uremic":95, "wiggy":95, "after-noon":95, "digestibility":95, "embrasure":95, "medical-surgical":95, "weight-management":95, "nocked":95, "beatified":95, "by-election":95, "brays":95, "dulcimers":95, "drawcords":95, "swallowtails":95, "three-county":95, "percept":95, "high-flow":95, "cricketers":95, "aestheticization":95, "outsoles":95, "fore/aft":95, "hemostatic":95, "fine-motor":95, "dematerialize":95, "cha-ching":95, "scaredy":95, "speed-skating":95, "intestate":95, "flash-based":95, "anglo-german":95, "local-option":95, "guard-forward":95, "ascriptive":95, "pen-raised":95, "greasers":95, "hexafluoride":95, "chocks":95, "fatherlessness":95, "gangways":95, "blowpipe":95, "mega-projects":95, "nacelles":95, "weblogs":95, "sibilants":95, "debt-to-gdp":95, "infiltrations":95, "tonite":95, "supra-national":95, "sociopsychological":95, "poutical":95, "integrationists":95, "fireproofing":95, "double-occupancy":95, "allday":95, "school-children":95, "raconteurs":95, "par-four":95, "darkside":95, "anti-poaching":95, "post-harvest":95, "distributorships":95, "runner-ups":95, "pass/fail":95, "eight-letter":95, "ballcap":95, "carbuncle":95, "cosmogony":95, "regionalists":95, "dejeuner":95, "highest-energy":95, "euonymus":95, "euchre":95, "histoplasmosis":95, "matched-pairs":95, "classifier":95, "thymine":95, "varicella":95, "time-shares":95, "cartilages":95, "flatscreen":95, "information-seeking":95, "white-black":95, "megaparsec":95, "b-type":95, "synchronically":95, "backdraft":95, "maidenhead":95, "cheatgrass":95, "affine":95, "pud":95, "apatosaurus":95, "advisee":95, "horizontality":95, "oxygenating":95, "recision":95, "beechwood":95, "collimated":95, "chieftainship":95, "photomontages":95, "anti-malarial":95, "fat-tire":95, "post-abortion":95, "post-divorce":95, "verifiability":95, "distracter":95, "cubits":95, "freesias":95, "coal-bed":95, "asset-allocation":95, "darwinians":95, "fascicles":95, "self-assembly":95, "payors":95, "hepatocytes":95, "fireboat":95, "allocator":95, "cold-case":95, "liriope":95, "abstinence-based":95, "post-polio":95, "mega-churches":95, "military-political":95, "overpumping":95, "dual-mode":95, "credit-default":95, "vygotskian":95, "abortifacient":95, "historiographer":95, "power-on":95, "severities":95, "multiaxial":95, "auto-insurance":95, "nonelectric":95, "micro-credit":95, "topline":95, "treehouses":95, "air/oil":95, "coca-growing":95, "confirmability":95, "countervail":95, "shareable":95, "biserial":95, "archaeoastronomy":95, "bourgeoise":95, "supersymmetric":95, "tessitura":95, "identity-theft":95, "salicylates":95, "differentiable":95, "wefts":95, "raker":95, "post-tiananmen":95, "subnotebook":95, "postulant":95, "auspice":95, "ketoacidosis":95, "shortcakes":95, "cessions":95, "industry-based":95, "five-paragraph":95, "dowser":95, "quarrymen":95, "debit-card":95, "antiretrovirals":95, "dalmation":95, "taurine":95, "taconite":95, "optimizer":95, "malanga":95, "sturgeons":95, "hussar":95, "intervener":95, "visual-effects":95, "nonpunitive":95, "forewings":95, "neo-platonic":95, "car-sharing":95, "slurpy":95, "hafnium":95, "factor-analytic":95, "world-systems":95, "inkjets":95, "strabismus":95, "market-clearing":95, "brailling":95, "subcomponent":95, "valencian":95, "permittee":95, "hemagglutinin":95, "dual-fuel":95, "strength-based":95, "saxes":95, "non-monogamous":95, "possessory":95, "post-deng":95, "sentential":95, "concessioner":95, "corundum":95, "low-load":95, "meninges":95, "radial-velocity":95, "overdiagnosis":95, "blowgun":95, "curies":95, "macromolecular":95, "atorvastatin":95, "evaluable":95, "jinn":95, "multiplications":95, "brayer":95, "splenic":95, "ujamaa":95, "electron-hole":95, "myomectomy":95, "nontheistic":95, "pre-nuptial":95, "weans":95, "plasmapheresis":95, "billfishes":95, "synthase":95, "serifs":95, "microworld":95, "cookie-protein":95, "microcode":95, "opposite-gender":95, "anticline":95, "kimberlite":95, "gene-altered":95, "bombsight":95, "drug-prevention":95, "jadeite":95, "self-relevant":95, "submersed":95, "supercell":95, "warmings":95, "medical-marijuana":95, "cross-informant":95, "interleaving":95, "observability":95, "tire-related":95, "preform":95, "paraspinal":95, "fermenter":95, "deciles":95, "crystallographers":95, "ischium":95, "matrilateral":95, "ground-effect":95, "nonaccidental":95, "panchayat":95, "chirality":95, "ozonation":95, "deradicalization":95, "skald":95, "dysmorphia":95, "phloem":95, "enteric-coated":95, "oestrogens":95, "datasheet":95, "social-structural":95, "acedia":95, "dimers":95, "oncocytoma":95, "verbal-linguistic":95, "within-class":95, "scullion":95, "curl-up":95, "dickcissels":95, "floodways":95, "living-learning":95, "teacher-based":95, "cold-dark-matter":95, "bulbing":95, "polychoric":95, "psychs":95, "morphic":95, "goanna":95, "co-housing":95, "blowhards":95, "bandy-legged":95, "garbage-strewn":95, "militated":95, "godlessness":95, "wallops":95, "wallet-size":95, "worst-kept":95, "wouldbe":95, "shafted":95, "two-day-old":95, "unconsummated":95, "real-live":95, "relaunching":95, "gewgaws":95, "full-skirted":95, "disrespects":95, "deal-maker":95, "brick-paved":95, "co-existed":95, "dive-bombing":95, "deciphers":95, "sweet-looking":95, "league-worst":95, "personalizes":95, "old-looking":95, "goldmine":95, "aahed":95, "reproaching":95, "demonizes":95, "ever-improving":95, "fuzzed":95, "posthaste":95, "hard-scrabble":95, "in-joke":95, "limbering":95, "budget-priced":95, "bone-thin":95, "barn-like":95, "allures":95, "fresh-caught":95, "fifth-best":95, "exultantly":95, "picturesquely":95, "priding":95, "unhealthily":95, "two-and-a-half-year":95, "six-week-old":95, "recross":95, "new-model":95, "offloaded":95, "perforate":95, "four-foot-tall":95, "four-hundred":95, "jet-setters":95, "lavender-scented":95, "fastest-rising":95, "near-future":95, "purebreds":95, "rehabilitates":95, "ice-breaker":95, "heavy-looking":95, "blasphemies":95, "decadently":95, "fleshed-out":95, "shutterbugs":95, "forbore":95, "ill-chosen":95, "candy-apple":95, "euphonious":95, "double-entendre":95, "earth-tone":95, "short-short":95, "rethinks":95, "soon-to-be-published":95, "vise-like":95, "wackiest":95, "lithely":95, "intimidatingly":95, "adumbrated":95, "guzzles":95, "screamingly":95, "stiffing":95, "unstintingly":95, "bookended":95, "down-on-his-luck":95, "denude":95, "high-handedness":95, "forty-six-year-old":95, "fortresslike":95, "procrastinated":95, "spaz":95, "recommitted":95, "rabble-rousers":95, "rabble-rousing":95, "bunkmate":95, "comfortable-looking":95, "after-dark":95, "bumper-sticker":95, "obsequiously":95, "obligating":95, "pigeonholing":95, "green-painted":95, "lambaste":95, "low-yielding":95, "roughhewn":95, "teeny-weeny":95, "pixilated":95, "re-emphasize":95, "humiliatingly":95, "in-the-know":95, "dayto-day":95, "sycophant":95, "soused":95, "reinstituted":95, "weatherbeaten":95, "whole-hearted":95, "wholegrain":95, "supercedes":95, "snowcovered":95, "promulgates":95, "recapitulating":95, "pre-eminently":95, "plusher":95, "hearkening":95, "eliding":95, "fluorescent-lit":95, "back-lit":95, "preciously":95, "self-denying":95, "mind-numbingly":95, "now-forgotten":95, "now-bankrupt":95, "overlain":95, "ethereally":95, "ear-shattering":95, "delimits":95, "foot-thick":95, "then-soviet":95, "dweebs":95, "bosomy":95, "country-wide":95, "kaleidoscopes":95, "radio-friendly":95, "seven-piece":95, "winter-weary":95, "weeper":95, "welcome-home":95, "wine-and-cheese":95, "wideranging":95, "wideopen":95, "seventy-two-year-old":95, "warp-speed":95, "t-bill":95, "rerunning":95, "overextension":95, "idealizes":95, "moon-faced":95, "afterimages":95, "afterparty":95, "aviaries":95, "estrange":95, "frolicsome":95, "then-candidate":95, "tarried":95, "six-block":95, "pseudo-science":95, "ramrod-straight":95, "backrooms":95, "fice":95, "dog-and-pony":95, "spleens":95, "uncelebrated":95, "semi-literate":95, "semi-transparent":95, "state-dominated":95, "ten-thousandth":95, "copses":95, "globetrotting":95, "highest-risk":95, "metalworker":95, "interchanged":95, "re-engineer":95, "post-recession":95, "nervous-system":95, "reupholstered":95, "scale-model":95, "marauder":95, "chameleonlike":95, "forest-dwelling":95, "valorizing":95, "unathletic":95, "thumb-size":95, "topsides":95, "top-priority":95, "safety-conscious":95, "sidelights":95, "off-off-broadway":95, "masseurs":95, "forty-plus":95, "fortyfive":95, "glacier-fed":95, "impenetrably":95, "klatch":95, "contrariness":95, "energy-consuming":95, "eventuate":95, "still-standing":95, "nonprobability":95, "ogles":95, "pleurisy":95, "quasi-legal":95, "queasily":95, "cakelike":95, "blued":95, "adult-sized":95, "barfing":95, "hypercritical":95, "incompletes":95, "mid-2000s":95, "untestable":95, "vitamin-rich":95, "upper-end":95, "creditably":95, "color-coding":95, "boldfaced":95, "baseball-size":95, "gesticulation":95, "polyrhythmic":95, "mischance":95, "subterfuges":95, "decertification":95, "habitues":95, "near-monopoly":95, "crispier":95, "all-business":95, "internet-enabled":95, "houselights":95, "intermix":95, "four-of-seven-game":95, "oft-injured":95, "sixth-generation":95, "tucked-in":95, "portending":95, "nuked":95, "half-hours":95, "motionlessly":95, "electrocardiograms":95, "limn":95, "grotesquerie":95, "neighing":95, "stone-throwing":95, "u-shape":95, "single-seat":95, "rollerbladers":95, "theatergoer":95, "tile-roofed":95, "quick-draw":95, "perspired":95, "knowledgable":95, "huskier":95, "highenergy":95, "sweet-scented":95, "equal-sized":95, "epoch-making":95, "extended-family":95, "abasement":95, "ponying":95, "cornucopias":95, "relearned":95, "pinioned":95, "instigates":95, "great-grandpa":95, "transfixing":95, "stiller":95, "witness-protection":95, "windier":95, "not-quite":95, "not-so-famous":95, "pharmacognosy":95, "rotgut":95, "broken-off":95, "co-inventor":95, "camp-out":95, "curdles":95, "unluckily":95, "transfix":95, "tip-offs":95, "spinsterhood":95, "greatgrandfather":95, "insteps":95, "neckwear":95, "deafen":95, "co-captains":95, "five-nine":95, "expectable":95, "poofy":95, "no-slip":95, "novocaine":95, "one-syllable":95, "care-giver":95, "ditz":95, "divestitures":95, "higher-speed":95, "tyro":95, "stereophonic":95, "intellectualizing":95, "human-generated":95, "futzing":95, "cold-storage":95, "detains":95, "hooter":95, "re-member":95, "soul-food":95, "sixty-five-year-old":95, "spookier":95, "self-avowed":95, "new-old":95, "literarily":95, "perkier":95, "four-pack":95, "actor/director":95, "ballot-box":95, "best-of-three":95, "ceramicist":95, "chessboards":95, "cooperator":95, "depositories":95, "depositary":95, "fast-breaking":95, "pinkness":95, "man-shaped":95, "freestyler":95, "naturally-occurring":95, "fuel-air":95, "lexicographer":95, "earth-colored":95, "double-ended":95, "reticulated":95, "self-regarding":95, "upholders":95, "matchboxes":95, "incubates":95, "quavers":95, "power-generation":95, "outpolled":95, "stickup":95, "clean-water":95, "american-soviet":95, "imperially":95, "high-court":95, "plantsman":95, "sidehill":95, "submicroscopic":95, "dawa":95, "cheese-making":95, "jammy":95, "round-shouldered":95, "treasonable":95, "flattish":95, "cross-hatching":95, "crossbreed":95, "bitchiness":95, "slice-of-life":95, "win-at-all-costs":95, "undesignated":95, "dumpers":95, "flush-mounted":95, "confluent":95, "back-yard":95, "holiday-themed":95, "petrolatum":95, "pre-crisis":95, "pre-dated":95, "pastiches":95, "half-burned":95, "bustline":95, "beamy":95, "tarns":95, "supersexy":95, "government-industry":95, "biorhythms":95, "medical-device":95, "majority-owned":95, "lemon-scented":95, "long-lashed":95, "parvenu":95, "northwards":95, "seven-room":95, "white-male":95, "wood-grain":95, "workingclass":95, "red-velvet":95, "radio-wave":95, "course-record":95, "bottle-feeding":95, "arboretums":95, "spray-paint":95, "urban/rural":95, "hell-hole":95, "grant-making":95, "donnybrook":95, "ethnocentricity":95, "pastness":95, "counterpoise":95, "uncolored":95, "trunkful":95, "split-up":95, "riskless":95, "waxwings":95, "lowest-performing":95, "pennyroyal":95, "re-introduced":95, "immune-boosting":95, "missing-person":95, "mascaras":95, "lung-cancer":95, "nondirective":95, "fortune-telling":95, "klaxons":95, "lint-free":95, "billets":95, "oil-cured":95, "hyperbolically":95, "dabblers":95, "auguries":95, "oxygen-free":95, "pauperization":95, "felt-tipped":95, "tagine":95, "ecosystem-level":95, "centerfielder":95, "casino-style":95, "betoken":95, "implementer":95, "kitchen-table":95, "sixteen-year":95, "hoofer":95, "detainment":95, "equivocations":95, "french-built":95, "bichon":95, "groomsman":95, "misinforming":95, "mismatching":95, "pan-fry":95, "pamphleteer":95, "speedos":95, "set-piece":95, "animists":95, "college-preparatory":95, "civilities":95, "garrets":95, "degreed":95, "equably":95, "character-based":95, "abayas":95, "swimmable":95, "dead-even":95, "ballcarrier":95, "green-and-yellow":95, "ordains":95, "post-convention":95, "whip-smart":95, "philanderers":95, "overbake":95, "gunbattle":95, "hobgoblin":95, "decoupage":95, "jurys":95, "well-capitalized":95, "stair-climber":95, "chophouse":95, "full-coverage":95, "gibbet":95, "chiffons":95, "cosmologically":95, "pompeian":95, "indent":95, "hydrogenation":95, "angiograms":95, "madeleines":95, "repot":95, "big-breasted":95, "compotes":95, "flyball":95, "elderberries":95, "herb-crusted":95, "low-country":95, "re-offend":95, "two-on-two":95, "unicameral":95, "kinswoman":95, "girl-child":95, "macadamias":95, "neurotoxicity":95, "depilatory":95, "darky":95, "subtractions":95, "preventively":95, "pipettes":95, "rehydrated":95, "third-term":95, "voyaged":95, "hitmaker":95, "parenchyma":95, "perkily":95, "unsealing":95, "american-israeli":95, "high-current":95, "small-claims":95, "clickable":95, "fisherfolk":95, "telco":95, "strugglers":95, "self-limited":95, "lower-density":95, "kiddush":95, "exemplification":95, "dressing-table":95, "semi-trailer":95, "wearability":95, "tourism-related":95, "dialer":95, "nickel-cadmium":95, "pre-history":95, "archipelagoes":95, "urban-planning":95, "fifty-yard":95, "ingrain":95, "raga":95, "red-flowered":95, "phalanges":95, "westerlies":95, "seventeen-year":95, "silver-tipped":95, "white-minority":95, "reductionistic":95, "petit-bourgeois":95, "health-reform":95, "elisions":95, "anteroposterior":95, "unchaste":95, "undervaluation":95, "wheelwright":95, "wheatfields":95, "descant":95, "dreamworld":95, "fourposter":95, "low-stakes":95, "lampreys":95, "unbraided":95, "off-roaders":95, "offed":95, "knickerbockers":95, "bewitchment":95, "gateau":95, "transportation-related":95, "owner-operators":95, "premedical":95, "non-cooperation":95, "nationalizations":95, "mentorships":95, "direct-action":95, "airworthiness":95, "dark-adapted":95, "bromeliad":95, "ungraspable":95, "sub-optimal":95, "sour-cream":95, "reabsorb":95, "half-smiles":95, "tumescent":95, "nightcrawler":95, "end-of-semester":95, "hydrogen-alpha":95, "mortgage-interest":95, "sacerdotal":95, "godhood":95, "ninety-day":95, "bank-owned":95, "anti-yeltsin":95, "legal-sized":95, "gunnel":95, "shoot-to-kill":95, "hydrogen-based":95, "bushwhacker":95, "telekinetic":95, "zero-based":95, "solon":95, "constructedness":95, "maximizers":95, "speech/language":95, "quality-assurance":95, "banzai":95, "caudillo":95, "fogey":95, "duck-billed":95, "assessable":95, "rule-of-thumb":95, "punisher":95, "nurturant":95, "sea-launched":95, "colossi":95, "apologise":95, "polysemy":95, "wahabi":95, "job-placement":95, "hypercholesterolemia":95, "percepts":95, "lip-read":95, "glass-bottomed":95, "clean-room":95, "unbranched":95, "non-slip":95, "non-roster":95, "davidic":95, "bioactive":95, "roulade":95, "gallerist":95, "chip-in":95, "inadmissable":95, "wealth-building":95, "semigloss":95, "unfreedom":95, "town-hall-style":95, "super-majority":95, "air-traffic-control":95, "cod-liver":95, "electron-positron":95, "leftfield":95, "propos":95, "motets":95, "megaplex":95, "financings":95, "xylem":95, "timespan":95, "raffled":95, "majorette":95, "geo-strategic":95, "conservative-liberal":95, "one-fifty":95, "patchiness":95, "sherlock":95, "self-deceptive":95, "rich-field":95, "hatters":95, "netizens":95, "boot-cut":95, "bootlaces":95, "celeriac":95, "low-productivity":95, "tuneups":95, "small-boat":95, "off-leash":95, "casebooks":95, "gusseted":95, "brigantine":95, "unstraps":95, "scratch-off":95, "power-supply":95, "mentation":95, "non-elderly":95, "hematopoietic":95, "baserunning":95, "peckerwood":95, "letterbox":95, "muslim-americans":95, "plasterwork":95, "social-policy":95, "two-pole":95, "damselflies":95, "pan-ethnic":95, "pit-bull":95, "non-specialists":95, "tobacconist":95, "unenhanced":95, "plucker":95, "flash-bang":95, "prescription-only":95, "teleprompters":95, "bairn":95, "costal":95, "anti-state":95, "calzones":95, "drop-leaf":95, "exoskeletal":95, "pinchers":95, "instantiates":95, "malediction":95, "dewberry":95, "anti-art":95, "human-environment":95, "thyroids":95, "shrublands":95, "cruelty-free":95, "fifteen-year-olds":95, "budgie":95, "adjacency":95, "half-witted":95, "beta-blocker":95, "l-tests":95, "pecan-crusted":95, "canebrake":95, "horehound":95, "polybrominated":95, "taxonomist":95, "lycee":95, "intermittency":95, "americium":95, "affaire":95, "scopic":95, "greenheads":95, "organization-wide":95, "bootable":95, "large-ensemble":95, "lanthanum":95, "cross-ethnic":95, "dripper":95, "time-related":95, "understeer":95, "parricide":95, "satrap":95, "self-descriptions":95, "boundlessness":95, "agriculturalist":95, "radiotelemetry":95, "yum-yum":95, "gentlemanliness":95, "ethologists":95, "nonsustainable":95, "midmountain":95, "samsara":95, "flatheads":95, "biocompatible":95, "vicarage":95, "slow-wave":95, "toponyms":95, "clean-coal":95, "hara-kiri":95, "intra-abdominal":95, "spermicides":95, "tailwater":95, "paver":95, "mannitol":95, "content-oriented":95, "freeholder":95, "nonliterate":95, "gender-appropriate":95, "minidisc":95, "subclavian":95, "misers":95, "cranberry-orange":95, "censures":95, "eponym":95, "ejaculatory":95, "deconditioning":95, "mealworms":95, "gasbag":95, "typographic":95, "sabayon":95, "dropsy":95, "shorefront":95, "civilisations":95, "quick-dry":95, "macrocosmic":95, "constantinian":95, "antichoice":95, "mudflows":95, "pistil":95, "ultimacy":95, "low-growth":95, "antisense":95, "capelin":95, "chipsets":95, "fiddleheads":95, "desulfurization":95, "fixed-grip":95, "discussant":95, "ephemeris":95, "creditability":95, "nutter":95, "polyclonal":95, "upper-caste":95, "littermates":95, "lip-reading":95, "crematoria":95, "chalcedony":95, "safe-haven":95, "student-level":95, "wireline":95, "risk-reducing":95, "diopter":95, "agglutination":95, "dysplastic":95, "waterslides":95, "wrong-way":95, "defocused":95, "provenience":95, "red-giant":95, "party-state":95, "nonsticky":95, "quincentenary":95, "cock-up":95, "caravels":95, "non-rem":95, "multiaxis":95, "off-flavors":95, "outcome-oriented":95, "brindled":95, "standardisation":95, "eurasians":95, "base-year":95, "pupil-teacher":95, "economism":95, "musicological":95, "extralinguistic":95, "thyroiditis":95, "leadeth":95, "squeezebox":95, "swabian":95, "coronavirus":95, "single-edged":95, "cornhusks":95, "ackee":95, "interrupters":95, "paramecium":95, "black-sheep":95, "core-periphery":95, "cryptology":95, "adjustor":95, "ukelele":95, "postnatally":95, "peristyle":95, "grift":95, "commonwealths":95, "pinna":95, "isoflavone":95, "ankylosing":95, "breast-implant":95, "amaro":95, "prehuman":95, "sonography":95, "skywalk":95, "short-tailed":95, "briskets":95, "nonoperative":95, "nondiscretionary":95, "tunica":95, "three-door":95, "semidouble":95, "metallization":95, "multijurisdictional":95, "emissions-trading":95, "protostars":95, "bioregional":95, "odorants":95, "ostinatos":95, "copulatory":95, "carriageway":95, "parsi":95, "neovascularization":95, "ordovician":95, "calculi":95, "retorting":95, "ladybird":95, "lovage":95, "apolipoprotein":95, "coach-athlete":95, "oubliette":95, "saponins":95, "chloral":95, "focalized":95, "non-arts":95, "civilianization":95, "vietnamese-americans":95, "one-to-many":95, "orang":95, "non-nutritive":95, "co-sleeping":95, "frats":95, "hypothyroid":95, "pelvic-floor":95, "mezzotint":95, "chondritic":95, "magneto-optical":95, "telluric":95, "grow-out":95, "quick-turning":95, "macroscopically":95, "shrike":95, "monophasic":95, "anisotropies":95, "direct-view":95, "pestos":95, "pre-experimental":95, "botnet":95, "hairstreak":95, "ramie":95, "narcotraffic":95, "front-loaders":95, "x-linked":95, "sisterhoods":95, "humeral":95, "thrombin":95, "immunogenicity":95, "retrocochlear":95, "neurodevelopment":95, "heat-shock":95, "neutron-star":95, "stapedectomy":95, "non-accredited":95, "extrapulmonary":95, "fynbos":95, "localisation":95, "extensional":95, "espaliers":95, "chorda":95, "krewes":95, "political-economy":95, "mixed-species":95, "theophany":95, "eponyms":95, "magnetoresistive":95, "fire-adapted":95, "detrital":95, "antitype":95, "peafowl":95, "microbots":95, "engrams":95, "catastrophism":95, "transoral":95, "crossbowmen":95, "zairians":95, "supination":95, "hilar":95, "multihospital":95, "synchronizer":95, "diamagnetic":95, "visitable":95, "neorealists":95, "experiencers":95, "two-vehicle":95, "mucociliary":95, "total-coliform":95, "linac":95, "memetic":95, "autogenic":95, "histone":95, "nonmedically":95, "word-finding":95, "nonart":95, "policy-driven":95, "rootkit":95, "community-associated":95, "intra-personal":95, "premoral":95, "preoedipal":95, "biodiversity-rich":95, "pupping":95, "subtribes":95, "shallop":95, "saccule":95, "duppy":95, "heterojunction":95, "ghosties":95, "progressive-era":95, "mesophilic":95, "hamartoma":95, "functionings":95, "bullous":95, "hypercalciuria":95, "intracluster":95, "transtibial":95, "bindles":95, "subpersonalities":95, "immunogen":95, "effect-size":95, "conjugality":95, "pharmacogenomics":95, "tyrosinase":95, "telescreen":95, "schistosome":95, "spiration":95, "goal-related":95, "non-examples":95, "minisystems":95, "ministration":96, "minored":96, "letterheads":96, "gothic-style":96, "near-identical":96, "razzmatazz":96, "expedites":96, "bad-mouthed":96, "badmouthing":96, "breast-beating":96, "unpreparedness":96, "sloe-eyed":96, "fast-lane":96, "climate-control":96, "never-used":96, "music-video":96, "perfuming":96, "house-sized":96, "heydays":96, "spoked":96, "much-feared":96, "remold":96, "high-living":96, "crazes":96, "unholstered":96, "overthe-counter":96, "pursuance":96, "ivory-tower":96, "graffito":96, "bone-crunching":96, "barrelling":96, "clumsier":96, "eradicates":96, "fresh-brewed":96, "broadcasted":96, "all-too-brief":96, "ad-libbing":96, "bandmate":96, "ninth-seeded":96, "long-bladed":96, "three-meter":96, "well-furnished":96, "worst-ever":96, "sunstruck":96, "two-engine":96, "fullfledged":96, "hand-deliver":96, "lunch-time":96, "neatnik":96, "obfuscates":96, "self-recrimination":96, "squinty-eyed":96, "indecisively":96, "leather-wrapped":96, "fence-sitters":96, "ashen-faced":96, "speechlessness":96, "thatch-roofed":96, "secondfloor":96, "middle-eastern":96, "lo-fi":96, "carnival-like":96, "containable":96, "army-green":96, "hailstorms":96, "graduate-school":96, "countrysides":96, "customer-friendly":96, "folderol":96, "cutting-room":96, "embezzle":96, "well-thought":96, "well-schooled":96, "silicone-based":96, "second-act":96, "prearrangement":96, "moseying":96, "foot-deep":96, "graspable":96, "strait-laced":96, "softball-size":96, "soft-voiced":96, "spring-blooming":96, "then-existing":96, "then-deputy":96, "excretions":96, "metes":96, "hawklike":96, "weary-looking":96, "way-out":96, "trollop":96, "thrums":96, "sourceless":96, "showiest":96, "dialoguing":96, "counterstrike":96, "quirkier":96, "mythologizing":96, "mah-jongg":96, "maidenly":96, "hearten":96, "testiness":96, "super-hot":96, "undervalues":96, "ensnaring":96, "shoddily":96, "sweatsuits":96, "too-familiar":96, "unbent":96, "unassertive":96, "slower-paced":96, "appends":96, "appointive":96, "disc-shaped":96, "fancy-pants":96, "down-to-the-wire":96, "lungfuls":96, "modernizes":96, "gladdened":96, "uninterruptedly":96, "uninvestigated":96, "retighten":96, "short-shorts":96, "self-starters":96, "scatterings":96, "sonorously":96, "zigged":96, "zaniness":96, "yellow-flowered":96, "yellow-gold":96, "oxygen-starved":96, "much-awaited":96, "horse-and-buggy":96, "gerrymandered":96, "chastening":96, "ambrosial":96, "aureoles":96, "credos":96, "colossally":96, "finger-wagging":96, "little-seen":96, "bright-pink":96, "above-board":96, "oil-industry":96, "outside-the-box":96, "powerful-looking":96, "power-mad":96, "unstrap":96, "sun-faded":96, "tailgates":96, "unswept":96, "good-old-boy":96, "hitchcockian":96, "claque":96, "lovestruck":96, "nationstate":96, "vulpine":96, "scavenges":96, "short-sightedness":96, "unironic":96, "third-country":96, "jewellike":96, "jigged":96, "scoldings":96, "reconfigurations":96, "unadventurous":96, "ten-foot-high":96, "trepidations":96, "thumbtacked":96, "unaccredited":96, "self-exile":96, "eeriest":96, "farflung":96, "daubs":96, "ceiling-high":96, "chancing":96, "life-list":96, "misspell":96, "pileups":96, "undiscussed":96, "siree":96, "healthwise":96, "olive-colored":96, "congas":96, "artlessly":96, "diapered":96, "semi-regular":96, "tender-hearted":96, "toughly":96, "guilelessly":96, "inter-personal":96, "re-forming":96, "ostracizing":96, "copout":96, "cross-platform":96, "brainstorms":96, "soft-shoe":96, "straight-sided":96, "cyberworld":96, "overloads":96, "mind-expanding":96, "inoculates":96, "rope-a-dope":96, "shepherdesses":96, "self-contradiction":96, "seamlessness":96, "terrorist-related":96, "white-noise":96, "weirded":96, "worked-out":96, "cut-down":96, "estranging":96, "burgled":96, "burnt-orange":96, "home-team":96, "ingrates":96, "mild-flavored":96, "salmon-pink":96, "fazes":96, "favouring":96, "flame-colored":96, "crafter":96, "practical-minded":96, "quencher":96, "nighties":96, "smooches":96, "villainess":96, "trouble-making":96, "troublemaking":96, "training-camp":96, "as-yet-unnamed":96, "abets":96, "cosponsoring":96, "game-time":96, "solidness":96, "pulled-together":96, "telltales":96, "orangish":96, "nebbish":96, "marvelling":96, "hand-shaped":96, "hand-forged":96, "five-seven":96, "fathomed":96, "desisted":96, "drive-time":96, "blood-smeared":96, "spiritedly":96, "wedding-cake":96, "wind-tossed":96, "unloosed":96, "legging":96, "nine-man":96, "militarizing":96, "redraws":96, "ninth-largest":96, "gobbets":96, "durably":96, "frenziedly":96, "fifth-highest":96, "field-testing":96, "extricates":96, "canvas-covered":96, "half-used":96, "overwriting":96, "unhitch":96, "unhelpfully":96, "stare-down":96, "brownout":96, "demi-glace":96, "firebreak":96, "hard-hat":96, "lassos":96, "remodels":96, "reappraised":96, "toadying":96, "sponge-like":96, "gregariousness":96, "imprisonments":96, "deplorably":96, "dark-stained":96, "scything":96, "eight-piece":96, "prewashed":96, "movie-making":96, "non-german":96, "inflammations":96, "icecaps":96, "eight-part":96, "cudgels":96, "crystalized":96, "shutterbug":96, "subversively":96, "dark-rimmed":96, "chewing-gum":96, "calorie-dense":96, "calluses":96, "castrato":96, "music-hall":96, "prostituted":96, "proprietorships":96, "toadstool":96, "toddles":96, "poster-size":96, "reanimating":96, "lubed":96, "fall/winter":96, "double-teaming":96, "dove-gray":96, "eavesdrops":96, "bibliophiles":96, "sleepwear":96, "rhumba":96, "schooldays":96, "sub-standard":96, "unhappier":96, "ungraciously":96, "re-write":96, "grails":96, "grammar-school":96, "antipathetic":96, "exwife":96, "equipoise":96, "free-lancing":96, "camera-shy":96, "pass-interference":96, "redrafting":96, "maliciousness":96, "whiffle":96, "teaspoonfuls":96, "short-cut":96, "sellable":96, "tissue-paper":96, "despoliation":96, "faultlessly":96, "five-six":96, "giant-screen":96, "zephyrs":96, "zero-degree":96, "punchers":96, "punchlines":96, "squirrely":96, "no-loads":96, "bads":96, "smog-forming":96, "leaf-shaped":96, "mollifying":96, "harpooning":96, "dot-corn":96, "on-trail":96, "hairbreadth":96, "customer-driven":96, "congresspersons":96, "bayed":96, "workmates":96, "seatposts":96, "reengineered":96, "longsuffering":96, "one-hundred-dollar":96, "homiletic":96, "six-burner":96, "brainwaves":96, "coquetry":96, "fourth-degree":96, "humdinger":96, "guitar-driven":96, "larders":96, "lower-than-average":96, "work-out":96, "writer-in-residence":96, "deepsky":96, "frisks":96, "maharaja":96, "juiced-up":96, "approachability":96, "tree-huggers":96, "lathers":96, "late-1970s":96, "moist-looking":96, "voluntaristic":96, "natural-food":96, "levitates":96, "horsefly":96, "appeasers":96, "creamy-white":96, "moneybags":96, "goo-goo":96, "gasoline-fueled":96, "power-to-weight":96, "newsbreak":96, "productivity-enhancing":96, "take-offs":96, "unrivalled":96, "mastication":96, "head-mounted":96, "contingently":96, "credit-worthy":96, "bigshot":96, "clappers":96, "helpmeet":96, "miscalculating":96, "vote-rigging":96, "taxpayer-subsidized":96, "twelve-pack":96, "short-selling":96, "fanners":96, "eveningwear":96, "dapple":96, "apple-cider":96, "multivocal":96, "first-down":96, "unbranded":96, "three-hole":96, "deputize":96, "life-extending":96, "herpetology":96, "heartlessly":96, "over-representation":96, "over-reaction":96, "over-consumption":96, "outworn":96, "cocksuckers":96, "cockatiels":96, "stop-loss":96, "tour-de-force":96, "weather-worn":96, "weaponless":96, "waste-management":96, "inapt":96, "post-surgical":96, "exculpation":96, "chinese-owned":96, "finalization":96, "empanada":96, "dope-smoking":96, "world-premiere":96, "yard-sale":96, "washrag":96, "home-plate":96, "pocketknives":96, "protein-based":96, "black-leather":96, "a-to-z":96, "collegially":96, "maximise":96, "divans":96, "overspent":96, "foxtail":96, "schmo":96, "revery":96, "drug-abuse":96, "balderdash":96, "computerised":96, "spirit-filled":96, "scrims":96, "stress-inducing":96, "unlatches":96, "whereon":96, "camomile":96, "anti-skid":96, "deep-tissue":96, "labouring":96, "porousness":96, "tentacled":96, "two-semester":96, "seminude":96, "groundout":96, "imprudence":96, "originations":96, "tobaccos":96, "superintendency":96, "new-economy":96, "machineries":96, "perjuring":96, "separate-but-equal":96, "drug-dependent":96, "razzed":96, "regrowing":96, "holograph":96, "ex-smoker":96, "socio-emotional":96, "protectant":96, "single-person":96, "under-reporting":96, "mudholes":96, "high-nitrogen":96, "larger-diameter":96, "family-focused":96, "two-putted":96, "sub-continent":96, "posers":96, "libertinism":96, "deathwatch":96, "alpinist":96, "decors":96, "elliptic":96, "brogans":96, "co-signed":96, "gunnels":96, "gunsight":96, "well-covered":96, "unmerciful":96, "strengthener":96, "aldehydes":96, "formic":96, "expatriation":96, "pimply-faced":96, "hand-off":96, "hand-fed":96, "hotel-casino":96, "yowls":96, "patinas":96, "meadowland":96, "huntsmen":96, "carfare":96, "salesgirls":96, "long-wave":96, "codings":96, "diplopia":96, "rootlets":96, "poliomyelitis":96, "bedmate":96, "reincarnate":96, "wiretapped":96, "timekeepers":96, "sirree":96, "gel-like":96, "hypertrophied":96, "indissolubly":96, "puffers":96, "ensigns":96, "commencements":96, "vichyssoise":96, "denaturing":96, "downcourt":96, "tweeze":96, "unworked":96, "prejudicing":96, "randomize":96, "insectile":96, "aerialists":96, "monetizing":96, "good-lookin":96, "quavery":96, "nonnatives":96, "peroxidase":96, "bargainers":96, "kneeler":96, "untwist":96, "canonic":96, "lady-like":96, "meows":96, "violence-related":96, "danged":96, "boors":96, "plasminogen":96, "scots-irish":96, "steepens":96, "kerf":96, "middle-value":96, "geldings":96, "deerstalker":96, "cockfights":96, "thru-hiker":96, "semi-urban":96, "sybarite":96, "subjectivist":96, "paleoanthropology":96, "birthers":96, "b-complex":96, "aneurism":96, "one-out":96, "noise-reduction":96, "footpads":96, "archimedean":96, "spring-summer":96, "median-priced":96, "grackle":96, "woodcutting":96, "silicones":96, "bedsteads":96, "hardshell":96, "roleplaying":96, "troopship":96, "hinky":96, "hybridizers":96, "sabbaths":96, "dromedary":96, "alcohol/drug":96, "sacralization":96, "tape-record":96, "uncured":96, "tech-support":96, "co-winner":96, "corbels":96, "map-making":96, "star-driven":96, "canape":96, "underboss":96, "stone-paved":96, "trans-national":96, "to-and-fro":96, "teacher-made":96, "dozy":96, "criminal-defense":96, "chewers":96, "bobbies":96, "liquidator":96, "neurotoxins":96, "high-adventure":96, "levelers":96, "run-out":96, "lability":96, "districting":96, "female-owned":96, "plasticizers":96, "shekel":96, "sports-medicine":96, "browser-based":96, "ecclesiastics":96, "grotty":96, "pay-tv":96, "auberge":96, "bifurcate":96, "hoar":96, "inerrant":96, "windsock":96, "taquitos":96, "concealed-carry":96, "enumerator":96, "as-tested":96, "punchbowl":96, "video-conferencing":96, "programing":96, "biosynthesis":96, "embossing":96, "aggressivity":96, "precipitant":96, "birthdates":96, "buy-outs":96, "exegete":96, "nonalignment":96, "noncitizen":96, "south-western":96, "submenu":96, "wheatfield":96, "cochineal":96, "nicotiana":96, "pluperfect":96, "non-responders":96, "batiks":96, "swallower":96, "turbos":96, "eutrophic":96, "unitized":96, "clansman":96, "big-rig":96, "empresses":96, "head-tube":96, "hitlerism":96, "layabouts":96, "bare-footed":96, "altruists":96, "gondoliers":96, "plebiscites":96, "newtonians":96, "screen-printed":96, "blue-suited":96, "mid-engine":96, "matchstick-size":96, "basilicas":96, "bilevel":96, "fuel-burning":96, "chayote":96, "appreciator":96, "multisyllabic":96, "klick":96, "hoyden":96, "slow-twitch":96, "self-expectations":96, "bavarians":96, "cel":96, "pietistic":96, "maple-glazed":96, "wordsworthian":96, "synchro":96, "subject-area":96, "exhaustible":96, "buttstock":96, "pasteurize":96, "hellebore":96, "conjunctural":96, "iron-fortified":96, "pre-cancerous":96, "practicums":96, "nopal":96, "molecularly":96, "pondweed":96, "balder":96, "bennies":96, "readmissions":96, "poltergeists":96, "adaptors":96, "pushpin":96, "mantlepiece":96, "men-of-war":96, "sleep-wake":96, "sub-samples":96, "sub-sahara":96, "snowpacks":96, "stolen-base":96, "red-blue":96, "pound-feet":96, "freeskiers":96, "free-riding":96, "tackier":96, "bestest":96, "baluster":96, "balsams":96, "radian":96, "supraclavicular":96, "tongueless":96, "hard-money":96, "tick-borne":96, "trade-show":96, "lactose-free":96, "all-suite":96, "antibiotic-free":96, "decoying":96, "prediabetic":96, "medium-heavy":96, "loma":96, "enumerations":96, "cellularity":96, "pullup":96, "sshh":96, "sweetgum":96, "service-connected":96, "iron-ore":96, "red-dot":96, "analogically":96, "man-at-arms":96, "innerspring":96, "redware":96, "sitting-room":96, "subject/object":96, "individuate":96, "pagination":96, "fishbone":96, "scandium":96, "three-bladed":96, "safe-house":96, "thumbhole":96, "jingly":96, "halfpipes":96, "surfactant":96, "sex-linked":96, "parenchymal":96, "fore-end":96, "natural-language":96, "non-coercive":96, "polychromed":96, "polymerization":96, "dairymen":96, "auto-immune":96, "echolalia":96, "subsector":96, "vasomotor":96, "solar-thermal":96, "student-student":96, "fishponds":96, "lifeform":96, "wolf-like":96, "dispersals":96, "hawksbill":96, "precipitator":96, "mammies":96, "cowls":96, "ideogram":96, "age-dependent":96, "white-footed":96, "lividity":96, "rarefaction":96, "cuirass":96, "hipbelts":96, "all-german":96, "co-wives":96, "motoric":96, "attorney/client":96, "bugled":96, "rhodium":96, "occultism":96, "demining":96, "foundationalism":96, "socioecological":96, "centralist":96, "disease-prevention":96, "numerological":96, "mouser":96, "gyp":96, "freeze-out":96, "substitutable":96, "doxorubicin":96, "shellfishing":96, "firebase":96, "in-fill":96, "tobacco-growing":96, "ulcerations":96, "sled-dog":96, "ergs":96, "anti-trafficking":96, "hypotensive":96, "whippets":96, "technology-enhanced":96, "luminol":96, "intrathoracic":96, "mycology":96, "gas-turbine":96, "talkativeness":96, "tyrannosaurs":96, "agroecological":96, "phlogiston":96, "nephritis":96, "inducers":96, "eyrie":96, "merovingian":96, "green-collar":96, "miters":96, "fitness-related":96, "spumoni":96, "denationalization":96, "neurotologic":96, "enactive":96, "audio/visual":96, "museology":96, "trash-talker":96, "neuroscientific":96, "posttesting":96, "off-dry":96, "treeing":96, "ritualization":96, "refusenik":96, "elevational":96, "midocean":96, "pre-market":96, "sanatoriums":96, "post-registration":96, "re-export":96, "phosphide":96, "embroiderers":96, "stereoscope":96, "inclinometer":96, "morphogenesis":96, "nearside":96, "thermistor":96, "mantas":96, "general-education":96, "spoliation":96, "literalization":96, "run-flat":96, "isobutane":96, "post-fordist":96, "microfabrication":96, "coquina":96, "do-right":96, "transferees":96, "orographic":96, "transmittance":96, "tortelloni":96, "gluon":96, "hashtag":96, "stumpage":96, "old-old":96, "tyger":96, "face-recognition":96, "bosonic":96, "participant-observation":96, "workflows":96, "salt-marsh":96, "desalinated":96, "water-sharing":96, "pre-implantation":96, "bioeconomic":96, "sadhu":96, "vascularized":96, "utilisation":96, "neuropeptide":96, "cleanout":96, "classifiers":96, "bilaterals":96, "chasuble":96, "direct-response":96, "lymphadenitis":96, "untrusted":96, "screen-reading":96, "misattribution":96, "graviton":96, "virilocal":96, "autocephalous":96, "colposcopy":96, "sclerosing":96, "hostage-taker":96, "invitro":96, "airbrushes":96, "granulomatosis":96, "ethnogenesis":96, "superpositions":96, "mycologists":96, "equerry":96, "belarusian":96, "uncredentialed":96, "gene-spliced":96, "ontic":96, "underlayment":96, "free-verse":96, "epigraphy":96, "distractive":96, "epigastric":96, "substitutive":96, "monopolar":96, "dragnets":96, "supraventricular":96, "nucleoside":96, "limited-english":96, "adiposity":96, "cholinergic":96, "krait":96, "more-than-human":96, "chiffonier":96, "loadmaster":96, "megawatt-hour":96, "bioidentical":96, "myocutaneous":96, "hypopharyngeal":96, "toxaphene":96, "state-dependent":96, "autogenous":96, "lytic":96, "nonmonogamous":96, "scenographic":96, "phylacteries":96, "catalase":96, "eyewall":96, "chytrid":96, "flam":96, "pulsed-field":96, "reversers":96, "solidus":96, "preforms":96, "chondrosarcoma":96, "heteronormativity":96, "antithrombin":96, "ungrazed":96, "centerboard":96, "pipelining":96, "heavy-ion":96, "neutropenia":96, "recovered-memory":96, "propranolol":96, "pulmonologists":96, "preprocessor":96, "bahai":96, "cichlid":96, "cocollection":96, "viscoelasticity":96, "sticklebacks":96, "gasifiers":96, "ketosis":96, "instruction-level":96, "auricle":96, "configural":96, "maiolica":96, "restorationists":96, "acequia":96, "anti-tamil":96, "self-transcending":96, "jesses":96, "kiteboarding":96, "anonymized":96, "frequency-dependent":96, "graffitists":96, "evicts":96, "allelopathy":96, "nudibranch":96, "prefetch":96, "trotlines":96, "coelacanth":96, "nephrotoxic":96, "moderate/severe":96, "off-premise":96, "interfuel":96, "tremolite":96, "boost-phase":96, "bollworms":96, "interaural":96, "doe-in-estrus":96, "frybread":96, "additionality":96, "pretransplant":96, "icosahedral":96, "periodized":96, "compost-amended":96, "underflow":96, "noodler":96, "actual-world":96, "crosshead":96, "ureteric":96, "homeotic":96, "zooids":96, "investment-backed":96, "siphonophores":96, "charreadas":96, "own-price":96, "greenspaces":96, "laser-beam":96, "marinates":96, "muchneeded":96, "cravats":96, "ever-deepening":96, "ever-diminishing":96, "to-the-point":96, "things-like":96, "stone-lined":96, "snowplowing":96, "shallow-draft":96, "shallow-rooted":96, "seesawed":96, "star-like":96, "tuckered":96, "catty-corner":96, "bides":96, "electrocuting":96, "cordoning":96, "generations-old":96, "half-serious":96, "low-keyed":96, "miniaturizing":96, "oft-used":96, "jeremiads":96, "boastfully":96, "bronzing":96, "ectoplasmic":96, "fast-expanding":96, "coopt":96, "proselytized":96, "prosperous-looking":96, "strategical":96, "sixty-fifth":96, "twice-a-year":96, "thorough-going":96, "iciness":96, "gazillions":96, "peccadillo":96, "bleached-out":96, "coattail":96, "fleshiness":96, "freelanced":96, "taciturnity":96, "unredeemable":96, "corpulence":96, "co-found":96, "blood-letting":96, "blood-vessel":96, "eight-fifteen":96, "five-foot-long":96, "getting-to-know-you":96, "hand-scrawled":96, "tissue-thin":96, "blue-blood":96, "besets":96, "co-located":96, "co-opts":96, "cupfuls":96, "dicier":96, "deep-breathing":96, "frays":96, "preferment":96, "redefinitions":96, "nine-term":96, "savories":96, "unkindest":96, "window-shop":96, "verifications":96, "high-tailed":96, "going-over":96, "flareups":96, "bacchanalian":96, "clacks":96, "consummating":96, "twoyear":96, "sterilizes":96, "smokier":96, "tallish":96, "recombinations":96, "careered":96, "leavens":96, "hip-replacement":96, "millennia-old":96, "skimpier":96, "rues":96, "sweepingly":96, "immoderately":96, "multi-step":96, "cheese-filled":96, "fish-and-chips":96, "ex-army":96, "pulled-back":96, "raw-boned":96, "too-sweet":96, "trenchantly":96, "utilitarians":96, "reposes":96, "reconceptualized":96, "imperiousness":96, "potboilers":96, "capsizes":96, "capitulates":96, "cleanness":96, "much-celebrated":96, "forbearing":96, "catch-phrase":96, "unintimidated":96, "scaremongering":96, "slantwise":96, "waggish":96, "bluegreen":96, "briskness":96, "headachy":96, "knife-sharp":96, "spiels":96, "unruliness":96, "roadbeds":96, "muscle-flexing":96, "quarterlies":96, "rebelliously":96, "splays":96, "unfastening":96, "undertreated":96, "unclogged":96, "uncharitably":96, "hoed":96, "prophylactics":96, "repasts":96, "dullard":96, "back-page":96, "blind-sided":96, "plain-clothes":96, "days-old":96, "featherless":96, "gloom-and-doom":96, "by-now":96, "b-grade":96, "southeasterly":96, "year-out":96, "world-beating":96, "westering":96, "seven-term":96, "smart-looking":96, "iron-willed":96, "conjecturing":96, "avows":96, "fifty-second":96, "diktat":96, "covetable":96, "bountifully":96, "restaurant-style":96, "self-dramatizing":96, "less-populated":96, "less-is-more":96, "innovated":96, "mother-inlaw":96, "kumquat":96, "restrictively":96, "rose-scented":96, "precipitately":96, "phoenix-like":96, "filled-in":96, "fill-ups":96, "superstitiously":96, "supersmart":96, "software-based":96, "fabulist":96, "front-and-center":96, "avowals":96, "county-by-county":96, "coffeepots":96, "point-guard":96, "phantasmagorical":96, "red-tinged":96, "salty-sweet":96, "succulence":96, "well-illustrated":96, "well-reviewed":96, "yardages":96, "wreath-laying":96, "water-intensive":96, "water-loving":96, "watchband":96, "southwestern-style":96, "stars-and-stripes":96, "state-required":96, "slim-fitting":96, "day-time":96, "glitzier":96, "flat-top":96, "disorientated":96, "re-ignite":96, "re-imagined":96, "highly-trained":96, "countersuits":96, "dumbing-down":96, "custom-fitted":96, "curly-headed":96, "gorgeousness":96, "midpoints":96, "monopolizes":96, "mainlining":96, "sipper":96, "sippers":96, "super-heated":96, "queerly":96, "profundities":96, "professionalizing":96, "next-gen":96, "playgroups":96, "sexists":96, "jocularly":96, "british-made":96, "blue-tiled":96, "brightly-lit":96, "stronger-than-expected":96, "scepters":96, "third-and-long":96, "thirst-quenching":96, "toilet-paper":96, "vinyl-covered":96, "clangor":96, "aerialist":96, "double-barrel":96, "dirges":96, "double-height":96, "disbelievingly":96, "econometrics":96, "even-handedness":96, "energy-hungry":96, "off-seasons":96, "nonfunctioning":96, "out-of-towner":96, "multistep":96, "forty-eight-year-old":96, "forty-seven-year-old":96, "gabfest":96, "grim-looking":96, "interesting-looking":96, "race-ready":96, "recommitment":96, "temporized":96, "three-dimensionally":96, "shoe-leather":96, "solar-energy":96, "sketchily":96, "revanchist":96, "dateless":96, "ex-football":96, "farm-state":96, "battened":96, "ammunitions":96, "mistrusts":96, "obsessives":96, "ship-to-shore":96, "meat-free":96, "no-new-taxes":96, "no-strings-attached":96, "complaisant":96, "second-chance":96, "stern-looking":96, "videoconferences":96, "twodimensional":96, "beer-swilling":96, "harmlessness":96, "faux-fur":96, "higher-margin":96, "molests":96, "pluming":96, "unmaintained":96, "unmatchable":96, "windsurf":96, "whipped-cream":96, "whelp":96, "tortes":96, "skunked":96, "skulks":96, "redoubles":96, "responsively":96, "pass-happy":96, "nose-dive":96, "notaries":96, "camel-colored":96, "conferral":96, "best-documented":96, "transiently":96, "two-book":96, "heuristically":96, "five-foot-high":96, "dead-set":96, "sickle-shaped":96, "slit-eyed":96, "free-swinging":96, "drug-delivery":96, "debunker":96, "decanting":96, "abstains":96, "bellmen":96, "opinion-makers":96, "movie-goers":96, "gyrates":96, "holocausts":96, "six-pointed":96, "brother-inlaw":96, "brown-paper":96, "bobble-head":96, "cassocks":96, "cherry-wood":96, "girl-group":96, "oft-maligned":96, "newly-minted":96, "lidless":96, "half-white":96, "grand-prize":96, "purposelessness":96, "antiqued":96, "tenterhooks":96, "tubelike":96, "two-passenger":96, "supernal":96, "tastelessness":96, "ultra-rich":96, "demotions":96, "glasslike":96, "crating":96, "cravenly":96, "human-size":96, "ground-dwelling":96, "high-output":96, "mishandle":96, "misidentify":96, "kilohertz":96, "reanalyze":96, "cold-calling":96, "circus-like":96, "supercool":96, "snugs":96, "tube-shaped":96, "crumpled-up":96, "do-ing":96, "gender-blind":96, "re-learn":96, "grandiloquence":96, "hookahs":96, "plasterers":96, "peristaltic":96, "furore":96, "housemaids":96, "anti-religion":96, "common-sensical":96, "red-coated":96, "sheens":96, "mountebank":96, "corseted":96, "eight-sided":96, "run-oriented":96, "sentimentalizing":96, "spackle":96, "hand-out":96, "limpness":96, "pilot-tested":96, "transnationally":96, "stimulatory":96, "sunroofs":96, "anti-scientific":96, "extra-thick":96, "curie":96, "milkmaids":96, "legal-size":96, "medium-large":96, "medium-density":96, "headbanging":96, "wind-energy":96, "vanguards":96, "veritably":96, "walkover":96, "worm-like":96, "molestations":96, "higher-up":96, "incidently":96, "excises":96, "earwigs":96, "end-product":96, "encrustation":96, "dimensionally":96, "dimwits":96, "bedstand":96, "black-tipped":96, "republican-sponsored":96, "decontaminating":96, "overshooting":96, "measureless":96, "no-decision":96, "hatchbacks":96, "galumphing":96, "framings":96, "self-punishment":96, "yiddish-speaking":96, "neonatologist":96, "horsy":96, "green-tea":96, "chamber-music":96, "far-distant":96, "rottenness":96, "refreezing":96, "umbers":96, "velvet-covered":96, "vest-pocket":96, "unbolt":96, "unassailably":96, "glamorizes":96, "forty-three-year-old":96, "off-the-grid":96, "down-sizing":96, "lewdly":96, "manicurists":96, "public-television":96, "publicans":96, "pterodactyls":96, "uppercuts":96, "scariness":96, "casbah":96, "bargainer":96, "hit-making":96, "museum-goers":96, "unfitted":96, "hold-out":96, "mythmaking":96, "plushness":96, "eyeshot":96, "backseats":96, "bemuse":96, "placeless":96, "gallstone":96, "cross-train":96, "clopped":96, "ribonucleic":96, "schussing":96, "weak-side":96, "zagging":96, "xeroxes":96, "work-release":96, "white-jacketed":96, "silkier":96, "provender":96, "lensman":96, "moon-shaped":96, "home-security":96, "coerces":96, "congruous":96, "essentiality":96, "fifty-odd":96, "diffusely":96, "six-one":96, "boutonniere":96, "preachings":96, "prows":96, "ropelike":96, "motherin-law":96, "minerally":96, "isomorphism":96, "birdy":96, "emotion-laden":96, "thematize":96, "theocracies":96, "biotechnologists":96, "spectatorial":96, "trivet":96, "chinking":96, "pro-european":96, "multimethod":96, "highpowered":96, "kiddos":96, "jellylike":96, "conflict-free":96, "cockatiel":96, "proportioning":96, "pre-holiday":96, "heart-smart":96, "uncoerced":96, "superbug":96, "unsalable":96, "moneyman":96, "bewail":96, "untilled":96, "slate-blue":96, "upper-left":96, "vouchsafe":96, "kegger":96, "advices":96, "miasmic":96, "high-art":96, "late-eighteenth-century":96, "safecracker":96, "self-insure":96, "draughtsman":96, "african-american-owned":96, "packrat":96, "puissant":96, "prequels":96, "leathered":96, "magnetics":96, "poo-poo":96, "dextrose":96, "equalities":96, "smoosh":96, "trailerable":96, "bee-stung":96, "consumer-goods":96, "flameproof":96, "middle-market":96, "veining":96, "leguminous":96, "meerschaum":96, "resized":96, "deep-cycle":96, "co-leaders":96, "co-insurance":96, "two-hand":96, "paintwork":96, "hand-thrown":96, "deadens":96, "fornicator":96, "five-hit":96, "deal-makers":96, "fellow-travelers":96, "airings":96, "government-created":96, "tom-toms":96, "tricep":96, "depreciates":96, "darters":96, "anti-racism":96, "best-studied":96, "kinfolks":96, "handicapped-accessible":96, "hide-and-go-seek":96, "machine-readable":96, "her-self":96, "libertines":96, "overstatements":96, "cryptographer":96, "tube-like":96, "sleepyhead":96, "transcendentally":96, "toddies":96, "trans-fatty":96, "ultra-violet":96, "high-rated":96, "imputes":96, "remodelling":96, "tobacco-chewing":96, "fictionalization":96, "peace-making":96, "rhapsodies":96, "four-eyed":96, "chewier":96, "twenty-year-olds":96, "preventions":96, "shysters":96, "balers":96, "hand-dipped":96, "privately-funded":96, "calvinistic":96, "walk-behind":96, "wall-hung":96, "wind-turbine":96, "well-combined":96, "thresh":96, "incarnating":96, "hurlers":96, "inbounded":96, "flareup":96, "armorers":96, "expressible":96, "millwright":96, "gameday":96, "ski-town":96, "revalued":96, "reconfirms":96, "slump-shouldered":96, "multipoint":96, "bastardy":96, "booby-trap":96, "binged":96, "thirty-degree":96, "stand-ups":96, "altruist":96, "calibrates":96, "gatepost":96, "hazes":96, "stop-smoking":96, "midprice":96, "judgemental":96, "juicers":96, "fezzes":96, "lower-status":96, "lower-ranked":96, "lower-order":96, "humours":96, "metatextual":96, "pro-german":96, "gallon-size":96, "wildwood":96, "seatstay":96, "weight-reduction":96, "yaps":96, "embryogenesis":96, "hairiness":96, "majority-white":96, "redbone":96, "six-cd":96, "diphenyl":96, "doodad":96, "dingbat":96, "diningroom":96, "granule":96, "anarchical":96, "grass-court":96, "frostings":96, "mind-reading":96, "dystopic":96, "cutworms":96, "fifty-fourth":96, "work-site":96, "woodchips":96, "water-ice":96, "unpermitted":96, "ridgepole":96, "drip-irrigation":96, "fluorocarbons":96, "cockerel":96, "breadstick":96, "blinky":96, "supercars":96, "mid-infrared":96, "still-hunting":96, "retirement-age":96, "uninstalled":96, "upshifts":96, "appeals-court":96, "adze":96, "fiord":96, "national-championship":96, "amendable":96, "book-club":96, "down-low":96, "first-semester":96, "paid-up":96, "gigawatt":96, "marge":96, "ratiocination":96, "yo-yoing":96, "leaseholders":96, "judge-made":96, "lochs":96, "dewdrop":96, "business-sized":96, "second-strike":96, "three-round":96, "teargas":96, "self-treatment":96, "walk-throughs":96, "vaccine-preventable":96, "broadswords":96, "anti-trade":96, "pharmacokinetics":96, "hypotenuse":96, "post-castro":96, "bakeshop":96, "blockhouses":96, "five-string":96, "post-freudian":96, "neapolitans":96, "infarctions":96, "infiltrative":96, "lordships":96, "ballistically":96, "ass-kicking":96, "funicular":96, "electro-optical":96, "antitumor":96, "big-eared":96, "school-lunch":96, "tieless":96, "unibrow":96, "stockades":96, "remanding":96, "kiloton":96, "misfeasance":96, "four-disc":96, "cruiserweight":96, "interparty":96, "kippers":96, "monoamine":96, "centrum":96, "downstage":96, "gouaches":96, "pedalling":96, "flexure":96, "concealers":96, "single-arm":96, "sculptress":96, "actualizes":96, "c-rich":96, "clairvoyants":96, "quick-reaction":96, "plumbago":96, "nighthawk":96, "declensions":96, "cultural-political":96, "oneiric":96, "immigration-related":96, "non-permanent":96, "car-like":96, "foreskins":96, "derms":96, "nonelite":96, "eventide":96, "tempter":96, "open-records":96, "naturopaths":96, "demagoguing":96, "upper-middle-income":96, "upholder":96, "underwritings":96, "backlights":96, "disputations":96, "by-elections":96, "nepotistic":96, "oculus":96, "larcenies":96, "light-bulb":96, "subdistrict":96, "triple-doubles":96, "whacky":96, "wool-blend":96, "special-use":96, "coevolutionary":96, "pre-planning":96, "prunings":96, "butterfish":96, "cycladic":96, "urethral":96, "circulator":96, "precipitators":96, "pasture-raised":96, "aviatrix":96, "difficile":96, "seven-card":96, "step-mother":96, "whiteware":96, "rice-paper":96, "nonclassical":96, "articulators":96, "oven-dried":96, "cash-only":96, "lithographer":96, "quayside":96, "eugenicists":96, "synthesised":96, "appian":96, "neurobiologists":96, "africana":96, "multi-unit":96, "jubilees":96, "hydroplaning":96, "dhow":96, "divertissement":96, "sweety":96, "junior-level":96, "single-edge":96, "full-frame":96, "gynaecology":96, "shell-shaped":96, "antis":96, "canvasback":96, "chitterlings":96, "crawdad":96, "ground-state":96, "extubation":96, "low-molecular-weight":96, "half-strength":96, "hoody":96, "monological":96, "free-play":96, "concentrators":96, "scuppernong":96, "five-on-five":96, "muggles":96, "garage-rock":96, "solidarity-led":96, "gnatcatcher":96, "guesser":96, "nigras":96, "multi-component":96, "interdimensional":96, "bullheads":96, "syncytial":96, "validations":96, "steelworks":96, "physiologies":96, "pleomorphism":96, "stiffnesses":96, "adsorbed":96, "barcodes":96, "plainclothesman":96, "in-vivo":96, "globalisation":96, "soviet-designed":96, "tintypes":96, "coffeecake":96, "reregulation":96, "cognitivist":96, "aggressive-growth":96, "software-development":96, "reef-building":96, "phlebotomy":96, "meconium":96, "age-associated":96, "spearfish":96, "waterboarded":96, "trismus":96, "nonstrategic":96, "nonrelativistic":96, "hypoglossal":96, "good/bad":96, "electronystagmography":96, "incremented":96, "gravitons":96, "audiological":96, "unintelligibility":96, "sonuvabitch":96, "spare-parts":96, "tree-stand":96, "lungfish":96, "ordinator":96, "earthquake-resistant":96, "repowering":96, "fractionated":96, "dry-fly":96, "co-management":96, "coumarin":96, "concealed-weapons":96, "bakeware":96, "flex-fuel":96, "epistemically":96, "callaloo":96, "sura":96, "pide":96, "school-year":96, "humanmade":96, "marginals":96, "ebooks":96, "four-beat":96, "gender-free":96, "sixty-third":96, "freestylers":96, "near-poor":96, "subvocalized":96, "bentgrass":96, "ghat":96, "positioners":96, "scrod":96, "co-morbidities":96, "diacritical":96, "glug":96, "skiffle":96, "stereographic":96, "high-sticking":96, "change-of-address":96, "commensurability":96, "sado-masochistic":96, "contextualist":96, "psychospiritual":96, "intra-class":96, "inclusivist":96, "lyres":96, "anxious/depressed":96, "plesiosaurs":96, "outshot":96, "hypopharynx":96, "mazurka":96, "dredgers":96, "winterizing":96, "cutwork":96, "grade-three":96, "rocketeer":96, "radionuclide":96, "aggregative":96, "self-disclose":96, "pre-shot":96, "protoplanets":96, "yardman":96, "widgeon":96, "laparotomy":96, "intercoastal":96, "unowned":96, "trypsin":96, "rear-entry":96, "rebating":96, "pubescence":96, "emplotment":96, "baseload":96, "scatting":96, "synesthetic":96, "chalcedonian":96, "pederasty":96, "gilt-bronze":96, "myasthenia":96, "outdoors-related":96, "meatal":96, "burrowers":96, "anti-armenian":96, "lindane":96, "nurse-midwife":96, "revolutionary-era":96, "breechcloth":96, "almshouses":96, "sanitariums":96, "supergun":96, "kinescopes":96, "barthesian":96, "debarment":96, "dizygotic":96, "space-suited":96, "right-brained":96, "acid-base":96, "theodolite":96, "condyles":96, "krater":96, "off-time":96, "pothos":96, "interiorly":96, "interindividual":96, "uteri":96, "transvaluation":96, "gravimetric":96, "insect-resistant":96, "calcium-channel":96, "truthiness":96, "fha-insured":96, "multilayers":96, "multimode":96, "identifiability":96, "anaemic":96, "congest":96, "cowry":96, "dipolar":96, "cyberpunks":96, "seven-eleven":96, "palm-wine":96, "postclassical":96, "pyrolysis":96, "language-specific":96, "anesthetists":96, "androcentrism":96, "copepod":96, "whole-life":96, "hearthside":96, "hadrosaur":96, "hadronic":96, "hazardous-materials":96, "sumpter":96, "sperms":96, "amazonians":96, "vitrification":96, "potlatches":96, "cheep":96, "cameroonians":96, "tap-taps":96, "tantra":96, "possible-worlds":96, "hexadecimal":96, "mutagen":96, "teacher-reported":96, "otolith":96, "fresh-market":96, "orthographically":96, "antigambling":96, "transferee":96, "manorial":96, "sickout":96, "guan":96, "inulin":96, "aspirates":96, "stoats":96, "curl-ups":96, "herpesvirus":96, "tree-free":96, "upward-sloping":96, "yellow-legged":96, "pawpaw":96, "progestins":96, "alternate-form":96, "eschar":96, "carry-all":96, "hill-country":96, "facial-recognition":96, "cycle-time":96, "diplodocus":96, "eaglet":96, "shigellosis":96, "task-orientation":96, "normlessness":96, "in-vehicle":96, "chukars":96, "uncaused":96, "prehospital":96, "aerostat":96, "curanderos":96, "male-authored":96, "thermohaline":96, "transmission-line":96, "transmastoid":96, "de-christianization":96, "palaeolithic":96, "phrenological":96, "interpretivist":96, "college-related":96, "impressment":96, "prostatectomies":96, "play-within-the-play":96, "dechlorination":96, "icosahedron":96, "high-threat":96, "harpooner":96, "acequias":96, "albopictus":96, "thermographic":96, "phytosanitary":96, "apneic":96, "demander":96, "postclassic":96, "bioregionalism":96, "pseudopod":96, "emission-line":96, "geomorphologists":96, "grasscycling":96, "nonremedial":96, "screwworm":96, "closed-ends":96, "breastwork":96, "micromachine":96, "handpieces":96, "tricameral":96, "electroactive":96, "tocopherols":96, "rejecter":96, "sociodramatic":96, "caltrops":96, "epicardial":96, "icemen":96, "co-ordinators":96, "upfronts":96, "bootstrapped":96, "time-stream":96, "wise-use":96, "privatizers":96, "estrone":96, "namings":96, "scintillations":96, "pronuclear":96, "natural-hair":96, "manichaeism":96, "ego-identity":96, "jowers":96, "feng-shui":96, "rewilding":96, "monoecious":96, "ornithopter":96, "much-sought-after":96, "quaffed":96, "remediable":96, "kindliness":96, "lily-livered":96, "miserliness":96, "intellectualized":96, "groundbased":96, "hard-muscled":96, "high-percentage":96, "high-salaried":96, "fussier":96, "ever-ready":96, "singleminded":96, "poshest":96, "overtaxing":96, "half-wild":96, "grandiosely":96, "half-melted":96, "cauterized":96, "sub-freezing":96, "mushed":96, "officiously":96, "hiccupping":96, "girdling":96, "castiron":96, "spoilsport":96, "spookiest":96, "thousand-pound":96, "revivify":96, "post-partisan":96, "pacifistic":96, "mint-condition":96, "decimates":96, "distillations":96, "absent-mindedness":96, "badinage":96, "bad-girl":96, "sensitizes":96, "spaced-out":96, "gambol":96, "declaims":96, "anthropomorphize":96, "bejeezus":96, "careerwise":96, "child-raising":96, "shindigs":96, "swilled":96, "outfight":96, "pertly":96, "c-note":96, "enchantingly":96, "reprobate":96, "reprove":96, "sightline":96, "drowsed":96, "egotistic":96, "father/son":96, "obfuscated":96, "hand-sized":96, "hand-over-hand":96, "two-inch-long":96, "co-own":96, "doltish":96, "frat-house":96, "florescence":96, "long-expected":96, "mega-hit":96, "nilly":96, "nosedived":96, "overawed":96, "vanquishes":96, "unmasks":96, "well-compensated":96, "well-aged":96, "sorry-ass":96, "horseback-riding":96, "gesticulations":96, "rankling":96, "empire-building":96, "amasses":96, "upper-echelon":96, "university-educated":96, "stand-out":96, "surmising":96, "wagonload":96, "snaggle-toothed":96, "still-growing":96, "adulatory":96, "adroitness":96, "atoned":96, "bewilders":96, "intra-party":96, "incrimination":96, "murkily":96, "untraveled":96, "unwatched":96, "after-christmas":96, "champagne-colored":96, "bunkered":96, "foreign-affairs":96, "green-lighted":96, "fundraise":96, "life-drawing":96, "pedestrian-only":96, "roughs":96, "refrozen":96, "ravishingly":96, "raveled":96, "apple-pie":96, "authentic-looking":96, "denuding":96, "luxuriates":96, "implacability":96, "imperturbably":96, "forward-leaning":96, "grittiest":96, "turbocharge":96, "reconstitutes":96, "recalculating":96, "nonsensically":96, "pre-dates":96, "heart-bypass":96, "indolently":96, "break-through":96, "back-slapping":96, "backburner":96, "airconditioned":96, "fluky":96, "goofiest":96, "frivolities":96, "cushier":96, "time-zone":96, "timeconsuming":96, "truculence":96, "stop-and-start":96, "sanctimoniously":96, "unbrushed":96, "unfelt":96, "subcontinental":96, "work-arounds":96, "whittles":96, "waywardness":96, "triple-decker":96, "unobservant":96, "prizefight":96, "re-enacts":96, "moderate-size":96, "hundred-yard":96, "light-gray":96, "lowest-scoring":96, "carped":96, "dawn-to-dusk":96, "day-trip":96, "desensitizes":96, "entreats":96, "gloveless":96, "gainsaying":96, "protein-packed":96, "ingratiated":96, "half-bad":96, "media-saturated":96, "fifty-four-year-old":96, "fiftysomething":96, "frostily":96, "born-and-bred":96, "aftermaths":96, "coffee-stained":96, "silent-movie":96, "seasonlong":96, "silted":96, "warm-and-fuzzy":96, "sucker-punched":96, "terror-stricken":96, "white-glove":96, "water-tight":96, "half-chewed":96, "half-crazy":96, "conscienceless":96, "busman":96, "rampantly":96, "precociousness":96, "reenergized":96, "nobrainer":96, "inner-cities":96, "less-efficient":96, "less-costly":96, "less-traveled":96, "soft-porn":96, "look-at-me":96, "mini-camp":96, "rooty":96, "self-containment":96, "predations":96, "busted-up":96, "footgear":96, "waterproofed":96, "weightiness":96, "well-rotted":96, "yukking":96, "worktables":96, "small-mindedness":96, "amping":96, "don't-miss":96, "midthigh":96, "repulses":96, "gloominess":96, "cross-examinations":96, "b-word":96, "metatarsals":96, "palpated":96, "unmodulated":96, "well-wisher":96, "wrangles":96, "womb-like":96, "semiannually":96, "unfixable":96, "stoppered":96, "super-strong":96, "goose-down":96, "poaches":96, "pre-occupied":96, "small-bore":96, "small-budget":96, "ritualize":96, "utilise":96, "valediction":96, "unanalyzed":96, "grindings":96, "glass-encased":96, "hangnails":96, "glancingly":96, "modern-era":96, "neuralgic":96, "nonentities":96, "moistly":96, "off-target":96, "deniable":96, "downhome":96, "apples-to-apples":96, "application-specific":96, "bulling":96, "self-identifying":96, "neo-fascist":96, "institutionalizes":96, "fit-looking":96, "comestibles":96, "comfortless":96, "job-killing":96, "hitlerian":96, "still-hot":96, "stiffener":96, "summited":96, "tail-end":96, "sex-obsessed":96, "quarter-pound":96, "perkiness":96, "permanents":96, "surmounts":96, "slate-colored":96, "self-repairing":96, "upswings":96, "upperclass":96, "uproots":96, "delusive":96, "public-speaking":96, "oxygen-poor":96, "gesticulated":96, "hallelujahs":96, "insensibility":96, "skydive":96, "threeyear-old":96, "wallpapered":96, "overcompensation":96, "ninth-floor":96, "not-so-young":96, "more-recent":96, "legibly":96, "garble":96, "counter-cultural":96, "brokenly":96, "all-steel":96, "all-pervading":96, "blue-and-green":96, "blowtorches":96, "two-finger":96, "uncurl":96, "spit-and-polish":96, "sunshades":96, "spiriting":96, "land-mine":96, "metronomes":96, "handblown":96, "hourglass-shaped":96, "jackknifed":96, "paint-splattered":96, "relaxers":96, "co-editors":96, "achiness":96, "acquaints":96, "ball-control":96, "giant-sized":96, "easy-to-prepare":96, "growly":96, "fawn-colored":96, "clamors":96, "quick-and-dirty":96, "outlives":96, "higher-value":96, "higher-tech":96, "leapfrogs":96, "shinnied":96, "shirked":96, "charcoal-colored":96, "chaplinesque":96, "care-giving":96, "expropriating":96, "floggings":96, "note-taker":96, "sea-blue":96, "bellying":96, "distressful":96, "epigrammatic":96, "letdowns":96, "home-decorating":96, "heathenism":96, "peccadillos":96, "priapic":96, "propositioning":96, "pourable":96, "dishabille":96, "deprecate":96, "discreditable":96, "bronze-colored":96, "centred":96, "all-cash":96, "acquirers":96, "higgledy-piggledy":96, "jet-engine":96, "out-compete":96, "poufy":96, "musical-comedy":96, "sub-human":96, "tidepools":96, "sleekest":96, "buffoonish":96, "exurb":96, "fresh-looking":96, "lace-edged":96, "primary-colored":96, "single-year":96, "ever-vigilant":96, "familar":96, "double-whammy":96, "antimacassars":96, "imprudently":96, "high-season":96, "metaanalysis":96, "realer":96, "dance-pop":96, "grandmom":96, "bongs":96, "catkins":96, "attention-getter":96, "jet-setter":96, "interpolations":96, "furball":96, "ballfields":96, "boatbuilding":96, "deplane":96, "radar-evading":96, "sixty-three-year-old":96, "tongued":96, "piping-hot":96, "regular-sized":96, "pinwheeling":96, "ice-bound":96, "epiphenomenal":96, "concensus":96, "coarsened":96, "sea-change":96, "unprofessionally":96, "fenceposts":96, "hirelings":96, "cost-reduction":96, "compendiums":96, "blackeyed":96, "aberrational":96, "reveler":96, "knotty-pine":96, "knockdowns":96, "mid-step":96, "high-topped":96, "quibbled":96, "collectable":96, "consummates":96, "babysits":96, "a-hole":96, "czarina":96, "truckbed":96, "troths":96, "sightseer":96, "secondary-level":96, "sulphurous":96, "brick-lined":96, "pain-killing":96, "insolvencies":96, "linemates":96, "lummox":96, "spit-roasted":96, "cambric":96, "co-presidents":96, "co-productions":96, "dif-ferent":96, "inextinguishable":96, "headful":96, "not-for-profits":96, "vanilla-scented":96, "strip-club":96, "savour":96, "ill-treatment":96, "hopscotched":96, "non-entity":96, "catfights":96, "apothecaries":96, "university-trained":96, "twelve-gauge":96, "toeholds":96, "reforesting":96, "robot-like":96, "unsaddled":96, "head-shaking":96, "money-driven":96, "matchy-matchy":96, "bewhiskered":96, "better-performing":96, "abrasion-resistant":96, "depressurize":96, "fish-out-of-water":96, "drapey":96, "insurance-company":96, "ham-and-cheese":96, "non-practicing":96, "oblongs":96, "soilless":96, "bassinets":96, "boogied":96, "bassoons":96, "bill-paying":96, "fancy-dress":96, "crewing":96, "percentage-wise":96, "first-string":96, "gladed":96, "kleptocratic":96, "tree-hugging":96, "steeliness":96, "nonregulatory":96, "code-breaking":96, "backcourts":96, "eyeshades":96, "frissons":96, "flumes":96, "testamentary":96, "storebought":96, "sharklike":96, "truth-teller":96, "subcutaneously":96, "reinscription":96, "putty-colored":96, "multilane":96, "multiform":96, "brambly":96, "brainpan":96, "communist-led":96, "effaces":96, "feebler":96, "red-flag":96, "might-have-beens":96, "inflexibly":96, "identity-based":96, "bayfront":96, "step-ups":96, "wroughtiron":96, "white-fleshed":96, "axiomatically":96, "preconference":96, "shifty-eyed":96, "reevaluations":96, "narcoleptic":96, "pasturelands":96, "overindulgent":96, "six-inning":96, "six-hundred":96, "soft-soled":96, "tasking":96, "precious-metals":96, "patent-infringement":96, "phonographic":96, "awesomeness":96, "cohabitating":96, "cinderblocks":96, "emetic":96, "donut-shaped":96, "wild-goose":96, "seven-foot-tall":96, "ampules":96, "conjointly":96, "digerati":96, "pre-screening":96, "ragbag":96, "overfill":96, "effulgence":96, "reinscribes":96, "re-employment":96, "lowermost":96, "in-process":96, "unmourned":96, "water-bottle":96, "unfastens":96, "tamers":96, "toxemia":96, "googly":96, "fiber-reinforced":96, "elephantiasis":96, "documentary-style":96, "hypervigilant":96, "tree-trimming":96, "glamorization":96, "harassments":96, "amharic":96, "self-incriminating":96, "retype":96, "mesmeric":96, "pukes":96, "hot-line":96, "instillation":96, "far-seeing":96, "data-acquisition":96, "dasher":96, "historicization":96, "scrapyard":96, "power-driven":96, "remounting":96, "refight":96, "skywriting":96, "taxidermied":96, "non-caucasian":96, "oxbows":96, "oxblood":96, "physiognomies":96, "threepiece":96, "vacillations":96, "week-and-a-half":96, "once-and-for-all":96, "junior-senior":96, "medium-priced":96, "military-dominated":96, "blue-grey":96, "besiegers":96, "non-overlapping":96, "co-champion":96, "de-facto":96, "dead-center":96, "gherkins":96, "full-fare":96, "entrepot":96, "speed-of-light":96, "tyrannous":96, "tyrannize":96, "deist":96, "army-surplus":96, "collier":96, "knotholes":96, "leak-free":96, "magnesia":96, "art-rock":96, "airworthy":96, "decease":96, "deciders":96, "freebasing":96, "expiry":96, "lop-sided":96, "numeration":96, "non-intrusive":96, "draft-age":96, "depoliticized":96, "brothy":96, "centrifugation":96, "best-prepared":96, "plastic-surgery":96, "noninfectious":96, "caudillos":96, "initialize":96, "injury-related":96, "librettos":96, "lickety-split":96, "low-lifes":96, "non-aggressive":96, "semipermeable":96, "fire-control":96, "citizenships":96, "non-story":96, "seismological":96, "tundras":96, "stonefly":96, "bi-racial":96, "everbody":96, "everthing":96, "crawlies":96, "sound-effects":96, "reinvestigate":96, "low-mileage":96, "grandnephew":96, "chitinous":96, "potty-trained":96, "clinique":96, "six-step":96, "powder-coated":96, "freebooters":96, "space-borne":96, "unreasonableness":96, "sickos":96, "juche":96, "anti-constitutional":96, "knockabout":96, "perturbing":96, "parasitized":96, "black-bellied":96, "theatergoing":96, "sunglass":96, "single-layer":96, "singable":96, "two-item":96, "actuarially":96, "adaptational":96, "beriberi":96, "co-signing":96, "doghouses":96, "ambassadorships":96, "upholstering":96, "sex-segregated":96, "job-specific":96, "intra-european":96, "lay-off":96, "ape-like":96, "gutsiest":96, "gut-shot":96, "haymakers":96, "gastropods":96, "brightener":96, "bluestocking":96, "dishrags":96, "ex-fbi":96, "eery":96, "halyards":96, "swamis":96, "clawfoot":96, "first-ballot":96, "denouncement":96, "glass-paneled":96, "paperclips":96, "pantleg":96, "modern-rock":96, "subscripts":96, "vase-shaped":96, "spates":96, "serb-led":96, "pre-internet":96, "mythologist":96, "over-the-knee":96, "pre-convention":96, "cadenza":96, "supercluster":96, "securitized":96, "unfocussed":96, "waster":96, "waxer":96, "woodsmanship":96, "subfolders":96, "sliding-glass":96, "large-market":96, "putschists":96, "post-presidential":96, "nephrologist":96, "nerved":96, "flautist":96, "braincase":96, "redd":96, "church-owned":96, "biospheres":96, "dingoes":96, "hellholes":96, "megatrends":96, "pastoralist":96, "ear-training":96, "axiological":96, "bipod":96, "front-panel":96, "hairlessness":96, "silk-chiffon":96, "large-bodied":96, "rural/urban":96, "state-managed":96, "well-validated":96, "wheaten":96, "samosa":96, "chromodynamics":96, "counterfeited":96, "airboats":96, "doctor/patient":96, "custodianship":96, "flutists":96, "hyphenate":96, "moderate-to-severe":96, "nonexecutive":96, "out-of-network":96, "first-date":96, "energy-storage":96, "booklist":96, "swallowers":96, "hambone":96, "greenish-blue":96, "quarto":96, "shorter-range":96, "range-of-motion":96, "natural-law":96, "cambium":96, "junkman":96, "gunrunner":96, "resource-efficient":96, "sawbuck":96, "semaphores":96, "deadbolts":96, "coronary-artery":96, "hand-pulled":96, "sugarplums":96, "paratactic":96, "intersubjectively":96, "behavioristic":96, "chaperons":96, "indian-americans":96, "nappy-headed":96, "reverse-osmosis":96, "flex-time":96, "minstrelsy":96, "social-work":96, "sportfisherman":96, "team-taught":96, "darwinists":96, "microbus":96, "macerated":96, "four-ply":96, "hider":96, "chlorine-free":96, "bid-rigging":96, "ducted":96, "j-shaped":96, "motorways":96, "school-reform":96, "two-wheelers":96, "orthodontics":96, "postprocessing":96, "high-modulus":96, "grosbeak":96, "shape-shifters":96, "santolina":96, "orthodontists":96, "traceability":96, "tuberose":96, "tuberoses":96, "purty":96, "canticles":96, "commission-based":96, "balloon-borne":96, "pachysandra":96, "episteme":96, "sibility":96, "unreeled":96, "raptured":96, "gamete":96, "chick-peas":96, "persuaders":96, "black-powder":96, "bachelorettes":96, "second-born":96, "greek-turkish":96, "metrically":96, "quadrille":96, "dispute-resolution":96, "rainouts":96, "i-beam":96, "all-woman":96, "non-combatant":96, "kefir":96, "clan-based":96, "upwellings":96, "vireos":96, "virally":96, "monastics":96, "instrumentalization":96, "crop-dusting":96, "ultralights":96, "chairwomen":96, "combustibles":96, "seraph":96, "month-by-month":96, "diazepam":96, "sourwood":96, "semiconducting":96, "larches":96, "mo-ment":96, "nonbiased":96, "netiquette":96, "re-exported":96, "white-light":96, "pre-professional":96, "age-groups":96, "course-related":96, "dipshit":96, "kurta":96, "satinwood":96, "cinnamon-sugar":96, "connective-tissue":96, "biopharmaceutical":96, "waterbirds":96, "penny-stock":96, "odynophagia":96, "brailled":96, "water-management":96, "touchback":96, "bread-baking":96, "myocarditis":96, "mailbags":96, "serine":96, "turkish-iraqi":96, "contractility":96, "givenness":96, "neuropsychiatry":96, "daubers":96, "car-dependent":96, "amnesiacs":96, "green-card":96, "intraindividual":96, "he-said":96, "power-saving":96, "outward-oriented":96, "sailboard":96, "scatterplot":96, "zip-off":96, "audio-recorded":96, "keloid":96, "inside/outside":96, "ovo":96, "public-spiritedness":96, "all-stater":96, "bandito":96, "co-generation":96, "industrialised":96, "psycho-physical":96, "oncogene":96, "polonaise":96, "trimaran":96, "formulators":96, "crosspieces":96, "thermoluminescence":96, "titleholders":96, "black-brown":96, "civilian-led":96, "garnishment":96, "chapbooks":96, "business-government":96, "hassidic":96, "no-flight":96, "female-oriented":96, "gay-themed":96, "preverbal":96, "officemate":96, "papillae":96, "proteases":96, "duckie":96, "gender-equity":96, "herb-roasted":96, "circumlocutions":96, "seismicity":96, "oceanarium":96, "porta-potties":96, "debt-equity":96, "antitobacco":96, "new-play":96, "asset-based":96, "catafalque":96, "experiencer":96, "yorubas":96, "growler":96, "mutagenesis":96, "molders":96, "sternal":96, "sundew":96, "single-factor":96, "sachem":96, "triple-bogey":96, "overdetermination":96, "medievals":96, "polysomnography":96, "open-country":96, "tax-shelter":96, "nonmotorized":96, "lychees":96, "dishcloths":96, "evensong":96, "usurers":96, "frogman":96, "inter-republican":96, "worker-owned":96, "sugar-sweetened":96, "biomimetic":96, "frontality":96, "majoritarianism":96, "cinquefoil":96, "reengagement":96, "patentability":96, "delftware":96, "pre-sale":96, "embryologic":96, "amyl":96, "fluorite":96, "electrophysiologist":96, "counterparties":96, "columbians":96, "planum":96, "enteral":96, "biocide":96, "low-revenue":96, "neotropics":96, "strudels":96, "togolese":96, "chars":96, "medium-grain":96, "blowfly":96, "wouldst":96, "full-beam":96, "hand-warmer":96, "instar":96, "single-crystal":96, "higher-dimensional":96, "pre-agricultural":96, "gamekeepers":96, "gneiss":96, "hydrazine":96, "intratextual":96, "chiefship":96, "doxycycline":96, "microenterprise":96, "microlending":96, "otoscope":96, "bombmaking":96, "manzanilla":96, "endoplasmic":96, "stokers":96, "allelic":96, "social-ecological":96, "mandamus":96, "leukotriene":96, "ichthyology":96, "gyrus":96, "separability":96, "cardinality":96, "brandade":96, "preperformance":96, "projectionists":96, "encephalomyelitis":96, "trampy":96, "verifier":96, "phenolics":96, "short-turn":96, "pilaster":96, "africanus":96, "cross-channel":96, "cocci":96, "dodecahedron":96, "octoroon":96, "congener":96, "salt-sensitive":96, "dingle":96, "donor-advised":96, "diopters":96, "biphenyl":96, "agoutis":96, "saucier":96, "sodding":96, "empaths":96, "biomonitoring":96, "prototypic":96, "salina":96, "f-ratio":96, "hypertonic":96, "planetesimal":96, "danubian":96, "uninstaller":96, "oxygenates":96, "hygroscopic":96, "alsatians":96, "orchardist":96, "pelota":96, "signed-rank":96, "collective-security":96, "persecutory":96, "culex":96, "leukocytosis":96, "twin-screw":96, "import-competing":96, "center-pivot":96, "catadioptric":96, "limited-service":96, "generic-drug":96, "rhizomatous":96, "microcellular":96, "math-related":96, "reifications":96, "magickal":96, "animal-welfare":96, "anti-treaty":96, "vernaculars":96, "tricuspid":96, "silversides":96, "polys":96, "polycentric":96, "volutes":96, "stromatolites":96, "captive-breeding":96, "interdistrict":96, "drawtube":96, "oligonucleotides":96, "informativeness":96, "pastorals":96, "restrictionists":96, "rootball":96, "avians":96, "estancias":96, "smart-card":96, "glossopharyngeal":96, "guilloche":96, "mids":96, "aquanauts":96, "bioassays":96, "bioaccumulative":96, "multicampus":96, "reflectometry":96, "polychaetes":96, "polyhedral":96, "delousing":96, "psycholinguists":96, "cradleboard":96, "indeterminacies":96, "glycaemic":96, "blacktip":96, "peatlands":96, "lab-made":96, "matrilocal":96, "school-leaving":96, "switch-hitters":96, "debt-relief":96, "erbium":96, "quagga":96, "quahogs":96, "circumciser":96, "ubiquinone":96, "human-altered":96, "spokeshave":96, "gynaecological":96, "abstainer":96, "breccia":96, "stayers":96, "lockring":96, "mean-field":96, "stereotypy":96, "land-sea":96, "spirochetes":96, "transgenics":96, "taylorism":96, "intracultural":96, "synodic":96, "nonsterile":96, "cocreators":96, "splenectomy":96, "lightship":96, "trivalent":96, "heian":96, "karts":96, "grantors":96, "biparental":96, "supersessionism":96, "vertical-axis":96, "pantheists":96, "event-based":96, "pig-iron":96, "squawfish":96, "uraemia":96, "blood-pressure-lowering":96, "trinities":96, "haredi":96, "interruptive":96, "childe":96, "freeload":96, "home-business":96, "sarcopenia":96, "red-crested":96, "allogeneic":96, "doubleword":96, "chironomids":96, "tractate":96, "school-linked":96, "adenotonsillectomy":96, "bibliographers":96, "postliberals":96, "sapsuckers":96, "hiatuses":96, "gyrfalcon":96, "ejaculates":96, "patristics":96, "somatically":96, "corneum":96, "image-guided":96, "chautauquas":96, "capriccio":96, "babesiosis":96, "splanchnic":96, "chronotopes":96, "clathrate":96, "polyptych":96, "mentor-protege":96, "sabbatarian":96, "compile-time":96, "loquats":96, "antituberculous":96, "electrodermal":96, "tuffs":96, "probands":96, "draftnik":96, "hyperostosis":96, "superyacht":96, "infosphere":96, "interpenetrate":97, "impressive-looking":97, "fast-developing":97, "commerical":97, "betokens":97, "recoups":97, "splutter":97, "spoon-fed":97, "sixty-odd":97, "near-flawless":97, "razor-edged":97, "corruptive":97, "concentration-camp":97, "arrogate":97, "bad-weather":97, "bellwethers":97, "mud-covered":97, "impudently":97, "bar-coded":97, "adduces":97, "circumlocution":97, "bruited":97, "demobilizing":97, "evergrowing":97, "thin-faced":97, "superintend":97, "sober-minded":97, "freshet":97, "deathblow":97, "clutters":97, "pussyfoot":97, "re-route":97, "nugatory":97, "slayed":97, "tidies":97, "switchover":97, "swimming-pool":97, "cloud-shrouded":97, "blander":97, "blank-eyed":97, "chicly":97, "career-defining":97, "overreacts":97, "meagerly":97, "indefatigably":97, "ruffly":97, "your-self":97, "huntable":97, "matter-offactly":97, "leading-man":97, "liver-spotted":97, "nonunionized":97, "quenches":97, "hardware-store":97, "cynosure":97, "craggy-faced":97, "caricaturing":97, "reprobates":97, "recommenced":97, "troublingly":97, "twoperson":97, "full-force":97, "epaulet":97, "dead-eyed":97, "crowd-control":97, "computer-simulated":97, "chocoholic":97, "ball-peen":97, "readmit":97, "pajama-clad":97, "palazzos":97, "greedier":97, "snazzier":97, "two-foot-high":97, "threnody":97, "wallet-friendly":97, "vegetate":97, "va-va-voom":97, "wind-scoured":97, "weed-grown":97, "well-defended":97, "worrywart":97, "wornout":97, "politics-as-usual":97, "gumshoes":97, "hobnobs":97, "long-deceased":97, "all-world":97, "blousy":97, "chowed":97, "deemphasizes":97, "fessing":97, "non-elected":97, "creepily":97, "emptiest":97, "footsore":97, "visioning":97, "thirsted":97, "third-level":97, "thirty-plus":97, "unintelligibly":97, "retinues":97, "rubberneckers":97, "striver":97, "blue-tinged":97, "aborts":97, "barebones":97, "hazarding":97, "head-in-the-sand":97, "livens":97, "money-makers":97, "scratch-resistant":97, "still-open":97, "stiff-backed":97, "outnumbers":97, "oil-company":97, "nonperson":97, "perquisite":97, "cavorts":97, "chain-smoked":97, "chain-smoker":97, "hankered":97, "thwacked":97, "pain-filled":97, "presumable":97, "neonatology":97, "neon-green":97, "lifeguarding":97, "meritless":97, "green-gray":97, "immediate-past":97, "avails":97, "bunched-up":97, "farreaching":97, "homeliness":97, "home-repair":97, "mediagenic":97, "provincially":97, "overfilled":97, "party-hearty":97, "x-shaped":97, "well-staffed":97, "well-played":97, "straight-out":97, "beaky":97, "aways":97, "cyclopean":97, "less-known":97, "less-than-desirable":97, "overinflated":97, "noirish":97, "ropey":97, "self-deprecatory":97, "patched-together":97, "patched-up":97, "hearthstone":97, "midteens":97, "reoccupied":97, "recants":97, "break-down":97, "airier":97, "fluffiest":97, "goof-proof":97, "gelling":97, "tourist-friendly":97, "cross-pollinate":97, "community-minded":97, "enthuse":97, "dispiritedly":97, "inter-regional":97, "inarticulateness":97, "nonconsecutive":97, "penciling":97, "unnoted":97, "whacker":97, "shout-outs":97, "shovelers":97, "semi-famous":97, "rich-tasting":97, "semi-precious":97, "startlement":97, "unpleasing":97, "re-engineered":97, "reimposition":97, "putt-putt":97, "post-reconstruction":97, "post-surgery":97, "effulgent":97, "fourteen-hour":97, "chilliest":97, "bizarreness":97, "carom":97, "truncating":97, "dichotomization":97, "curtsying":97, "elides":97, "frizzy-haired":97, "articulateness":97, "blissed-out":97, "belt-driven":97, "countermove":97, "repaved":97, "plunderers":97, "perversities":97, "maze-like":97, "paternally":97, "resurging":97, "most-important":97, "emotional/behavioral":97, "half-cooked":97, "aggrandize":97, "superthin":97, "six-decade":97, "washtubs":97, "wonkish":97, "season-best":97, "seventy-six-year-old":97, "seventy-eight-year-old":97, "digresses":97, "fabulousness":97, "codpiece":97, "cig":97, "hairdryer":97, "ingenues":97, "disinherit":97, "marble-top":97, "presto":97, "pop-eyed":97, "refurbishes":97, "tut-tutting":97, "trawled":97, "teeniest":97, "three-color":97, "three-and-a-half-hour":97, "ten-month-old":97, "proctologist":97, "hang-gliding":97, "off-the-beaten-path":97, "potentiate":97, "creepy-crawlies":97, "demythologizing":97, "england-style":97, "cave-dwelling":97, "claw-like":97, "bastardization":97, "still-unsolved":97, "unsustainably":97, "jitterbugging":97, "golf-ball-size":97, "slackly":97, "short-timer":97, "self-sacrificial":97, "uninspected":97, "zigging":97, "fair-market":97, "open-house":97, "publicity-shy":97, "ill-at-ease":97, "extractable":97, "goal-scoring":97, "frazzle":97, "co-organized":97, "concretized":97, "anti-seizure":97, "mildewy":97, "meet-and-greets":97, "more-complex":97, "nine-digit":97, "headon":97, "junkers":97, "predinner":97, "psycho-sexual":97, "well-edited":97, "walnut-size":97, "winching":97, "shafting":97, "necked":97, "keynotes":97, "priori":97, "anti-defamation":97, "chock-a-block":97, "exhusband":97, "egomaniacs":97, "caricatural":97, "civic-mindedness":97, "east-side":97, "hare-brained":97, "gold-painted":97, "outguess":97, "outflanking":97, "leak-proof":97, "leakproof":97, "mid-latitudes":97, "schlepped":97, "squiring":97, "pumpkin-colored":97, "reverse-engineer":97, "gamboling":97, "no-contest":97, "no-account":97, "anti-americans":97, "decked-out":97, "childbirths":97, "closet-size":97, "sub-species":97, "two-percent":97, "semiregular":97, "underinvestment":97, "re-up":97, "hoodwink":97, "mantelpieces":97, "labradoodle":97, "big-firm":97, "debited":97, "destruct":97, "equipage":97, "segregates":97, "fire-engine-red":97, "falsifications":97, "city-dwelling":97, "hard-sided":97, "high-res":97, "kin-based":97, "misinform":97, "mispronunciation":97, "per-unit":97, "heavy-footed":97, "hollow-cheeked":97, "suburban-style":97, "seafoam":97, "shyest":97, "sloe":97, "strategized":97, "spoilt":97, "romantic-comedy":97, "thirty-sixth":97, "strawberry-rhubarb":97, "betokened":97, "bestir":97, "blurriness":97, "all-cotton":97, "boathouses":97, "ennobles":97, "dozers":97, "coowner":97, "imposingly":97, "mustard-yellow":97, "monogamist":97, "liquidy":97, "jet-fuel":97, "depoliticizing":97, "depravation":97, "coopting":97, "cast-aluminum":97, "actor/comedian":97, "best-paying":97, "streamliner":97, "radiation-induced":97, "sheikdoms":97, "unreflectively":97, "infields":97, "management-consulting":97, "mouthwashes":97, "bellyaching":97, "coarse-ground":97, "cabals":97, "intellectuality":97, "anticapitalist":97, "fussbudget":97, "four-alarm":97, "freshman-year":97, "focusses":97, "desuetude":97, "pie-eating":97, "non-cancerous":97, "motormouth":97, "cul":97, "achievement-oriented":97, "beguilingly":97, "anti-consumer":97, "child-molestation":97, "hireling":97, "zestful":97, "outdueled":97, "night-long":97, "proles":97, "proliferator":97, "growth-promoting":97, "fear-based":97, "blabbering":97, "roes":97, "sign-language":97, "eight-cylinder":97, "blood-splattered":97, "riff-raff":97, "religious-right":97, "post-1960s":97, "scribed":97, "vanload":97, "passkey":97, "mediumlow":97, "deep-conditioning":97, "patty-cake":97, "owlishly":97, "nutcases":97, "vulgarization":97, "upsweep":97, "trapezoids":97, "scentless":97, "shorties":97, "gutsiness":97, "massifs":97, "unsnaps":97, "still-young":97, "sun-blasted":97, "oil-consuming":97, "outsources":97, "unusual-looking":97, "auto-focus":97, "checkoff":97, "bulleted":97, "fanboy":97, "postulations":97, "glass-half-full":97, "gabble":97, "imperviousness":97, "repopulated":97, "ten-speed":97, "ten-fifteen":97, "three-bean":97, "scaled-up":97, "reunifying":97, "round-trips":97, "pop-out":97, "obtrude":97, "multi-lingual":97, "low-relief":97, "lambastes":97, "criticise":97, "haircutting":97, "pre-pregnancy":97, "seven-fifteen":97, "steering-wheel":97, "warlocks":97, "washbasins":97, "wussy":97, "weepers":97, "weight-saving":97, "white-blonde":97, "white-and-black":97, "wingbeats":97, "six-fifteen":97, "six-footers":97, "soft-touch":97, "supping":97, "straight-edge":97, "cowpokes":97, "birdlife":97, "footpad":97, "nodiing":97, "honey-roasted":97, "raita":97, "plutocrat":97, "plushly":97, "pre-concert":97, "gel-filled":97, "gelid":97, "curvier":97, "defendable":97, "defang":97, "uncared":97, "towelette":97, "tankful":97, "copper-mining":97, "flatboats":97, "executive-produced":97, "dispossessing":97, "daywear":97, "oenophile":97, "mobilisation":97, "post-show":97, "pyromaniac":97, "wheat-free":97, "placket":97, "birthstone":97, "unclips":97, "cusses":97, "airframes":97, "air-fuel":97, "honeysuckles":97, "israeli-controlled":97, "israeli-jordanian":97, "film-making":97, "dinning":97, "bottlings":97, "tinkles":97, "tabernacles":97, "seven-fifty":97, "sallies":97, "burled":97, "conman":97, "foremast":97, "changeability":97, "multi-axis":97, "mistake-free":97, "non-random":97, "oblation":97, "tootling":97, "vicars":97, "viburnums":97, "syncopations":97, "river-bottom":97, "sparsity":97, "nonexpert":97, "lunkers":97, "echocardiograms":97, "crematoriums":97, "chatrooms":97, "park-and-ride":97, "liturgist":97, "microplane":97, "mid-16th":97, "mid-1890s":97, "bluebottle":97, "anuses":97, "slashings":97, "trattorias":97, "third-team":97, "updos":97, "open-hearth":97, "pay-offs":97, "leveraged-buyout":97, "illiquidity":97, "fine-print":97, "empty-nest":97, "blowholes":97, "long-cooked":97, "medium-brown":97, "politically-motivated":97, "preferred-provider":97, "walkaround":97, "technophobes":97, "sacramentally":97, "pain-killers":97, "righthanders":97, "landscapist":97, "brevet":97, "acidify":97, "anti-homosexual":97, "computer-graphics":97, "deadfalls":97, "deadlifts":97, "corporate-owned":97, "drought-prone":97, "serviceberry":97, "roll-over":97, "babydoll":97, "dehumidifiers":97, "skin-softening":97, "squibs":97, "flip-top":97, "no-calorie":97, "overreactions":97, "pattern-recognition":97, "traditional-age":97, "swing-out":97, "undersecretaries":97, "undersecretary-general":97, "primness":97, "boneheads":97, "ultracompetitive":97, "soapsuds":97, "toastmaster":97, "baptizes":97, "crash-landing":97, "cold-turkey":97, "memoirists":97, "home-base":97, "socio-psychological":97, "teachin":97, "trichinosis":97, "cat-eye":97, "fast-flying":97, "housedresses":97, "pouched":97, "peristalsis":97, "oftener":97, "maces":97, "criminalists":97, "ballhandler":97, "twirlers":97, "reservationist":97, "bellboys":97, "anodes":97, "slipknot":97, "sentimentalized":97, "septet":97, "marked-up":97, "mark-ups":97, "four-cheese":97, "fire-safety":97, "endpapers":97, "sapwood":97, "cordials":97, "picture-making":97, "overtighten":97, "opaqued":97, "inhomogeneities":97, "ascertains":97, "patronymic":97, "mechanistically":97, "flagons":97, "proinflammatory":97, "ploughshares":97, "leakages":97, "reproducers":97, "acid-loving":97, "image-building":97, "non-material":97, "pinewoods":97, "tansu":97, "sophist":97, "astrobiologist":97, "anti-sodomy":97, "dogshit":97, "credit-worthiness":97, "libels":97, "natural-fiber":97, "non-communists":97, "transplantable":97, "slashers":97, "golf-club":97, "golf-ball":97, "knobbies":97, "quarterfinalist":97, "out-of-district":97, "linolenic":97, "kleptomaniac":97, "intermezzo":97, "first-period":97, "self-evaluate":97, "squashy":97, "soil-borne":97, "non-security":97, "missing-persons":97, "biobehavioral":97, "crookneck":97, "bioregions":97, "essayistic":97, "pre-testing":97, "podiatry":97, "species-level":97, "timelessly":97, "white-throated":97, "ethnical":97, "german-americans":97, "isolations":97, "inkpot":97, "policy-related":97, "theirself":97, "tarnation":97, "urbanize":97, "backbencher":97, "below-the-knee":97, "counterpunching":97, "toxicant":97, "tetrachloride":97, "pendency":97, "re-enlistment":97, "metalheads":97, "highly-skilled":97, "syllabuses":97, "semiaquatic":97, "schoolmistress":97, "rustler":97, "whole-group":97, "lapin":97, "pro-gram":97, "pro-islamic":97, "pro-apartheid":97, "chinless":97, "cloggers":97, "tetracyclines":97, "underskirt":97, "uncapitalized":97, "aircrews":97, "mythopoetic":97, "quintets":97, "urban/suburban":97, "theist":97, "roots-rock":97, "prebaked":97, "isometrics":97, "overidentification":97, "one-fifteen":97, "circuit-riding":97, "waterwheel":97, "wingmen":97, "test-prep":97, "parturition":97, "rockface":97, "repurchasing":97, "long-stay":97, "dyers":97, "facialist":97, "conjuration":97, "foreseeably":97, "life-bearing":97, "low-to-moderate":97, "hospitalisation":97, "three-footer":97, "renominate":97, "outreaching":97, "knapweed":97, "atonality":97, "wagonloads":97, "mergansers":97, "premillennial":97, "loverboy":97, "direct-sales":97, "cumulonimbus":97, "political-religious":97, "nine-step":97, "tearooms":97, "spirometer":97, "shade-tree":97, "living/dining":97, "end-of-the-day":97, "cab-forward":97, "local-area":97, "lebensraum":97, "blackmailers":97, "clothbound":97, "rashers":97, "temblors":97, "teleporting":97, "teleport":97, "motion-control":97, "debt-financed":97, "detectible":97, "determinacy":97, "underpricing":97, "adenocarcinomas":97, "freeze-frames":97, "abusiveness":97, "art-film":97, "arraignments":97, "caber":97, "home-delivery":97, "recyclability":97, "self-betrayal":97, "cliff-side":97, "fur-collared":97, "fizzes":97, "kinking":97, "otorhinolaryngology":97, "kirtle":97, "four-phase":97, "browned-about":97, "all-beef":97, "juvenile-justice":97, "anticlericalism":97, "antimodernist":97, "coleader":97, "fallowing":97, "high-potential":97, "remilitarization":97, "single-screen":97, "superdense":97, "subcellular":97, "tradeable":97, "semiological":97, "french-fry":97, "electrodynamic":97, "corncrib":97, "non-biological":97, "purple-blue":97, "young-of-the-year":97, "presbyterianism":97, "childbed":97, "floatable":97, "floatplanes":97, "guarana":97, "crab-apple":97, "koans":97, "recirculates":97, "great-granddaddy":97, "hand-formed":97, "paint-stained":97, "non-member":97, "blood-forming":97, "ghostwriters":97, "sgraffito":97, "scripturally":97, "withholdings":97, "prefects":97, "decrescendo":97, "catamount":97, "lake-effect":97, "non-deductible":97, "viticultural":97, "reassignments":97, "scrapple":97, "retreatants":97, "reformations":97, "pulldowns":97, "gifted/talented":97, "fundus":97, "ketone":97, "piggybacks":97, "dramaturgical":97, "ammonite":97, "planet-hunting":97, "fanlight":97, "combined-arms":97, "record-book":97, "conjunctures":97, "after-life":97, "fifty-sixth":97, "embrasures":97, "seven-county":97, "german-soviet":97, "faggy":97, "motherhouse":97, "ranched":97, "hypnotists":97, "confraternities":97, "testability":97, "through-hull":97, "sousaphone":97, "effector":97, "lower-division":97, "time-traveler":97, "dog-faced":97, "eschatologically":97, "cockapoo":97, "block-in":97, "self-conceptions":97, "narwhals":97, "isotonic":97, "businesspersons":97, "seven-hundred":97, "defocus":97, "ampoules":97, "avoiders":97, "pre-specified":97, "race-blind":97, "ex-felons":97, "three-cylinder":97, "threadless":97, "roboticist":97, "atopy":97, "hyperinflationary":97, "lying-in":97, "lymphoblastic":97, "third-stage":97, "uninterpretable":97, "self-timer":97, "pomace":97, "hemiplegia":97, "festal":97, "ninety-sixth":97, "computable":97, "anti-institutional":97, "hand-stitch":97, "molluscan":97, "intertexts":97, "tall-grass":97, "introjection":97, "hootch":97, "cantors":97, "tubules":97, "teratogenic":97, "supernatant":97, "pro-woman":97, "mesquites":97, "endotoxins":97, "bar-restaurant":97, "anti-mormon":97, "catabolism":97, "nonliterary":97, "monist":97, "self-command":97, "strategic-planning":97, "officer-involved":97, "crystallographer":97, "biculturalism":97, "cistercians":97, "postgraduation":97, "postmarital":97, "mucopurulent":97, "two-strike":97, "semiology":97, "antispam":97, "minicam":97, "hydrophone":97, "indexer":97, "means-testing":97, "dry-cured":97, "sandblaster":97, "trainability":97, "pilot-scale":97, "whiggish":97, "extrafamilial":97, "antibourgeois":97, "astrogation":97, "bank-card":97, "hemoptysis":97, "mangosteen":97, "big-wave":97, "tweakers":97, "liveaboard":97, "cartouches":97, "unspecialized":97, "multi-jurisdictional":97, "replicants":97, "sidestream":97, "synecdochic":97, "deontological":97, "nonethnic":97, "latinization":97, "nailer":97, "filariasis":97, "folksong":97, "grape-growing":97, "pastorale":97, "counternarrative":97, "defaulters":97, "induration":97, "tanka":97, "entrain":97, "pentagons":97, "osmium":97, "noncapitalist":97, "tamponade":97, "tamper-resistant":97, "ciliary":97, "point-of-service":97, "radiometer":97, "moonlets":97, "sidecars":97, "life-science":97, "student/faculty":97, "direct-pull":97, "illuminators":97, "milkers":97, "pinche":97, "crowder":97, "exoticizing":97, "nonvintage":97, "mutagens":97, "armlets":97, "growth-management":97, "anthropoid":97, "non-attainment":97, "admixtures":97, "orthomolecular":97, "postdischarge":97, "pro-yeltsin":97, "misogynous":97, "kilocalories":97, "fustian":97, "tocopherol":97, "arteriography":97, "lordosis":97, "ice-age":97, "pupation":97, "seabeds":97, "scythians":97, "anti-miscegenation":97, "tondo":97, "kinetoscope":97, "subtopic":97, "pretraining":97, "non-greek":97, "drug-involved":97, "consilience":97, "catheterisation":97, "corm":97, "duiker":97, "electric-vehicle":97, "mini-lessons":97, "channelers":97, "indexers":97, "revelational":97, "armored-car":97, "colloid":97, "desk-top":97, "achondroplasia":97, "heterozygotes":97, "resource-management":97, "resource-related":97, "owner-built":97, "snakehead":97, "jangles":97, "biocontainment":97, "batsmen":97, "carbamazepine":97, "commandoes":97, "bast":97, "ilium":97, "patentee":97, "urgent-care":97, "curlew":97, "rurality":97, "lowriders":97, "federative":97, "fluid-structure":97, "pathogenetic":97, "naloxone":97, "replicant":97, "apses":97, "tailpiece":97, "pleura":97, "nonparental":97, "microprobe":97, "hyperemia":97, "public-art":97, "double-counting":97, "voluntarist":97, "vulvar":97, "redistributional":97, "anti-stalking":97, "franking":97, "torr":97, "object-relations":97, "ivorians":97, "herbicide-tolerant":97, "spotted-owl":97, "levator":97, "girlies":97, "all-decade":97, "centroids":97, "cooperative-learning":97, "teams/reserves":97, "dependences":97, "tablewares":97, "adinkra":97, "motorhomes":97, "prefinished":97, "medkit":97, "bowerbird":97, "nopales":97, "blacktails":97, "contextualism":97, "gessoes":97, "haz-mat":97, "nonoccupational":97, "mesoamericans":97, "clausal":97, "nondualistic":97, "kales":97, "cyanobacterial":97, "anaesthetics":97, "timpanist":97, "t-values":97, "inoculants":97, "less-favored":97, "cocobolo":97, "copolymers":97, "lapa":97, "hillslope":97, "plainchant":97, "subglacial":97, "hypoglycaemia":97, "ileostomy":97, "ananda":97, "archbishopric":97, "task-involved":97, "steatite":97, "laicism":97, "daguerreotypist":97, "virgilian":97, "paraphilias":97, "doshas":97, "victimizations":97, "adaptogens":97, "fatty-acid":97, "spin-up":97, "thermistors":97, "electro-chemical":97, "electrochromic":97, "pitot":97, "punitiveness":97, "eight-word":97, "microcephaly":97, "family-business":97, "tlingit":97, "overwash":97, "co-cathedral":97, "unlikeness":97, "muthafuckin":97, "interveners":97, "loan-guarantee":97, "deworming":97, "hybridisation":97, "zero-turn":97, "non-carbon":97, "subperiosteal":97, "pothunters":97, "fortunetellers":97, "oreganos":97, "agroecosystem":97, "raised-line":97, "restenosis":97, "anorectal":97, "semi-homemade":97, "wavetable":97, "putrescible":97, "daybooks":97, "noncontradiction":97, "goos":97, "hadrosaurs":97, "shared-memory":97, "green-haired":97, "preinjury":97, "pay-per-click":97, "gweilo":97, "atraumatic":97, "skiboards":97, "cullet":97, "interpretant":97, "niggahs":97, "nonworkers":97, "susu":97, "mill-levy":97, "hypos":97, "railgun":97, "canal-wall-down":97, "postracial":97, "macassar":97, "jet-ski":97, "mateship":97, "anti-phishing":97, "corvee":97, "transfemoral":97, "superlattices":97, "extraterritorially":97, "post-competition":97, "transnationalized":97, "prang":97, "fragranced":97, "patrolwoman":97, "patient-reported":97, "self-objectification":97, "apatheia":97, "bunghole":97, "capture-recapture":97, "telecomputer":97, "kouros":97, "parotitis":97, "backplane":97, "superstates":97, "homophily":97, "neoadjuvant":97, "grilse":97, "matching-funds":97, "goat-boy":97, "gender-typing":97, "overstimulate":97, "french-fried":97, "duchesses":97, "cordoned-off":97, "coral-colored":97, "stymieing":97, "slave-owning":97, "shriller":97, "tepidly":97, "supereasy":97, "sinister-looking":97, "problem-plagued":97, "muddles":97, "limited-liability":97, "lasciviousness":97, "misogynists":97, "cold-bloodedly":97, "city-bred":97, "crapping":97, "allaround":97, "bibliophile":97, "futuristic-looking":97, "disablement":97, "blazoned":97, "blathered":97, "gaudiest":97, "non-exclusive":97, "near-certain":97, "pinkly":97, "l9th-century":97, "loose-lipped":97, "minute-to-minute":97, "heatings":97, "spackled":97, "slow-acting":97, "fastestgrowing":97, "dozen-plus":97, "machination":97, "new-looking":97, "new-fashioned":97, "often-heard":97, "ousts":97, "performance-art":97, "laundresses":97, "four-hit":97, "funks":97, "girdled":97, "six-tenths":97, "gangplanks":97, "fernlike":97, "festooning":97, "dogsledding":97, "bankbook":97, "blow-ups":97, "bespeaking":97, "redolence":97, "rosiest":97, "politicizes":97, "one-and-done":97, "one-and-only":97, "over-whelming":97, "not-so-friendly":97, "militating":97, "more-effective":97, "long-extinct":97, "legislates":97, "strewed":97, "tear-jerker":97, "v-necked":97, "us-sponsored":97, "well-disciplined":97, "well-characterized":97, "wholly-owned":97, "real-looking":97, "peignoir":97, "hour-plus":97, "hand-knitted":97, "neck-deep":97, "gherkin":97, "dissembled":97, "schmoozer":97, "ruing":97, "shinny":97, "self-powered":97, "ruby-colored":97, "swift-moving":97, "patronizes":97, "one-upsmanship":97, "meat-eater":97, "gnarliest":97, "gamed":97, "inundates":97, "least-favorite":97, "closetful":97, "expostulated":97, "bushwhacked":97, "ash-colored":97, "beggarly":97, "pre-broadway":97, "old-country":97, "mauves":97, "black-and-red":97, "earthquake-proof":97, "easy-to-assemble":97, "easeful":97, "end-of-the-season":97, "end-of-the-week":97, "dehydrates":97, "flame-haired":97, "flame-resistant":97, "tilt-adjustable":97, "tromps":97, "roistering":97, "sanely":97, "second-favorite":97, "laxness":97, "incompletions":97, "inconsequence":97, "haziness":97, "kneeing":97, "ablution":97, "good-girl":97, "case-specific":97, "rends":97, "spiffed":97, "spike-heeled":97, "unshaped":97, "unshakably":97, "unspool":97, "unseeable":97, "oxygenate":97, "open-toe":97, "open-handed":97, "loudmouthed":97, "insanities":97, "illimitable":97, "insectlike":97, "fuelling":97, "double-entendres":97, "finetune":97, "barware":97, "cha-cha-cha":97, "up-river":97, "third-worst":97, "soon-to-open":97, "soot-blackened":97, "strip-mined":97, "tawdriness":97, "grinded":97, "first-night":97, "lastingly":97, "late-career":97, "late-1960s":97, "late-autumn":97, "off-brand":97, "mumblings":97, "multisystem":97, "moisture-laden":97, "mask-like":97, "cavil":97, "basketball-size":97, "combers":97, "discouragingly":97, "stealthier":97, "seriocomic":97, "thursday-night":97, "top-paid":97, "value-conscious":97, "unbathed":97, "venomously":97, "multi-pronged":97, "multi-platinum":97, "multi-candidate":97, "misreported":97, "gimlet-eyed":97, "gimlets":97, "gigot":97, "marble-sized":97, "fish-shaped":97, "dishevelment":97, "three-cheese":97, "top-four":97, "vexes":97, "squatty":97, "solicitousness":97, "skedaddle":97, "scantily-clad":97, "now-standard":97, "one-in-four":97, "rooters":97, "agitatedly":97, "and-most":97, "half-carried":97, "half-bottle":97, "doom-and-gloom":97, "supersizing":97, "strange-sounding":97, "stencilled":97, "smaller-diameter":97, "well-pressed":97, "wide-spaced":97, "wing-tipped":97, "wielders":97, "burnishes":97, "coffee-flavored":97, "digressing":97, "faceful":97, "on-the-scene":97, "provinciality":97, "repurchased":97, "rocklike":97, "parries":97, "pre-conceived":97, "over-regulation":97, "pre-empting":97, "loftiness":97, "hearkened":97, "health-wise":97, "heart-pumping":97, "snorkels":97, "snoozes":97, "stop-action":97, "uncoils":97, "undesirability":97, "palmy":97, "inadvertence":97, "lantern-jawed":97, "large-caliber":97, "company-paid":97, "buzzer-beating":97, "excoriation":97, "entombing":97, "desertlike":97, "weather-wise":97, "unpersuaded":97, "semi-serious":97, "swordlike":97, "submarine-launched":97, "rust-belt":97, "weatherworn":97, "woolgathering":97, "excrescences":97, "brain-cell":97, "light-haired":97, "kick-butt":97, "multipaned":97, "penchants":97, "unexpurgated":97, "tow-headed":97, "seducers":97, "sanctums":97, "indiscreetly":97, "left/right":97, "jump-rope":97, "nonsupervisory":97, "nonreflective":97, "plusses":97, "deepness":97, "chubby-cheeked":97, "cage-like":97, "bench-clearing":97, "backbenchers":97, "back-handed":97, "salivated":97, "red-tipped":97, "provably":97, "once-a-day":97, "hairsplitting":97, "informations":97, "lemon-flavored":97, "different-looking":97, "defiles":97, "cut-through":97, "coeval":97, "burnouts":97, "bawls":97, "weight-forward":97, "yawed":97, "works-in-progress":97, "smalltime":97, "seventy-three-year-old":97, "wash-and-wear":97, "straight-through":97, "eternities":97, "half-decent":97, "graphic-design":97, "arch-enemy":97, "archipelagos":97, "awkward-looking":97, "resupplying":97, "ramifying":97, "pastored":97, "megahits":97, "roughen":97, "reupholstering":97, "retyping":97, "tool-and-die":97, "too-good-to-be-true":97, "three-inch-long":97, "turned-out":97, "thread-like":97, "dashingly":97, "car-bomb":97, "changeups":97, "bops":97, "life-ending":97, "insulin-like":97, "thunking":97, "scourged":97, "smackers":97, "steel-frame":97, "score-settling":97, "combusting":97, "chair-elect":97, "off-day":97, "off-the-court":97, "gabbled":97, "tax-evasion":97, "stand-down":97, "routs":97, "third-longest":97, "vocalized":97, "aerobatics":97, "earless":97, "continous":97, "ladys":97, "mergers-and-acquisitions":97, "pomades":97, "unshod":97, "reattachment":97, "professional-grade":97, "cajolery":97, "bluecollar":97, "adulteries":97, "knobbed":97, "monetized":97, "muscle-car":97, "rollaway":97, "rolled-down":97, "smidgeon":97, "video-sharing":97, "flash-forward":97, "craftier":97, "encrypts":97, "encasement":97, "made-from-scratch":97, "knowns":97, "harpooned":97, "practice-based":97, "plowshare":97, "begrudges":97, "censers":97, "closed-up":97, "closed-down":97, "hip-huggers":97, "game-ending":97, "flirtatiousness":97, "mortify":97, "meaninglessly":97, "lobotomized":97, "locked-up":97, "oneyear":97, "prescription-strength":97, "desk-bound":97, "eight-footer":97, "full-circle":97, "five-footer":97, "five-block":97, "balance-sheet":97, "great-great-grandparents":97, "great-grandmothers":97, "khaki-clad":97, "non-motorized":97, "orange-haired":97, "ready-to-go":97, "primped":97, "rifle-toting":97, "stimulations":97, "suntans":97, "sneakered":97, "well-camouflaged":97, "sawbones":97, "malapropisms":97, "milk-chocolate":97, "milk-glass":97, "milelong":97, "gunky":97, "iranian-style":97, "ionizes":97, "ninth-ranked":97, "resplendently":97, "redly":97, "diesel-fueled":97, "exterior-grade":97, "ferryboats":97, "gang-banger":97, "six-volume":97, "sartorially":97, "sassing":97, "sixty-two-year-old":97, "recuperates":97, "radicalizes":97, "radar-guided":97, "poured-concrete":97, "tom-tom":97, "twentyone":97, "four-nation":97, "gridlike":97, "hibernated":97, "must-stop":97, "disgorges":97, "cringe-worthy":97, "anti-oxidant":97, "best-practice":97, "cat's-eye":97, "slippages":97, "seam-side":97, "heat-producing":97, "pack-a-day":97, "punk-pop":97, "pretentiously":97, "re-covered":97, "flea-bitten":97, "epigones":97, "decapitations":97, "bad-smelling":97, "abstractionists":97, "coarsest":97, "disagreeably":97, "brutishness":97, "misnomers":97, "limited-slip":97, "kiln-dried":97, "muckrakers":97, "orneriness":97, "sink-or-swim":97, "snugger":97, "stockholdings":97, "thigh-length":97, "underlit":97, "deathbeds":97, "deary":97, "duchesse":97, "dockage":97, "antiseizure":97, "pushiness":97, "overstuff":97, "pickier":97, "pickpocketing":97, "motorsport":97, "grain-based":97, "half-seriously":97, "do-able":97, "dug-out":97, "flyboys":97, "termini":97, "sub-culture":97, "tiebreakers":97, "semisolid":97, "tasso":97, "sportscast":97, "cold-climate":97, "antinausea":97, "abscessed":97, "bad-hair":97, "eighty-three-year-old":97, "drug-crazed":97, "distillates":97, "home-and-home":97, "mountain-man":97, "spacewalking":97, "dark-chocolate":97, "liquid-fueled":97, "peridot":97, "noninvasively":97, "impor-tant":97, "six-string":97, "flower-patterned":97, "floral-patterned":97, "blow-dryers":97, "over-weight":97, "overcautious":97, "philosophizes":97, "pollinates":97, "selfdefense":97, "tech-stock":97, "three-to-five":97, "unmanipulated":97, "snicked":97, "shadeless":97, "spit-shined":97, "uncross":97, "bridge-builder":97, "designator":97, "telethons":97, "ferments":97, "compatibly":97, "devourer":97, "branchings":97, "pre-assigned":97, "quick-moving":97, "querulously":97, "outdrive":97, "diminutives":97, "college-student":97, "typeset":97, "truck-mounted":97, "sped-up":97, "reprobation":97, "hitmaking":97, "sexing":97, "untruthfully":97, "lagniappe":97, "lousiest":97, "gestate":97, "buckaroos":97, "bollards":97, "voicemails":97, "vivify":97, "toilsome":97, "university-affiliated":97, "shorthair":97, "off-loading":97, "out-stretched":97, "multiscreen":97, "cheapie":97, "contractionary":97, "greenbelts":97, "lifelessness":97, "paediatricians":97, "biocides":97, "three-book":97, "self-involvement":97, "now-dead":97, "noisemaking":97, "resubmitted":97, "cohabited":97, "tart-tongued":97, "stemless":97, "seven-fold":97, "well-remembered":97, "wing-tip":97, "bioreactors":97, "ironman":97, "moonglow":97, "pocks":97, "phantasmal":97, "overdubs":97, "radio-tv":97, "counteraction":97, "curtseyed":97, "documentations":97, "oldness":97, "tangibility":97, "uncatchable":97, "place-specific":97, "placatingly":97, "post-super":97, "re-interpretation":97, "large-breasted":97, "lightning-rod":97, "guillotines":97, "angelically":97, "cross-dressed":97, "clomps":97, "descender":97, "unpayable":97, "weasely":97, "throwdown":97, "thru-hiking":97, "touchbacks":97, "southpaws":97, "enthrallment":97, "cloaca":97, "inactivates":97, "lower-elevation":97, "palmful":97, "seedbeds":97, "pre-conference":97, "pestilent":97, "juncos":97, "dungs":97, "f-bombs":97, "counterexamples":97, "countersunk":97, "back-nine":97, "artificer":97, "backrub":97, "mood-boosting":97, "heinie":97, "bossiness":97, "bottle-green":97, "winey":97, "wine-country":97, "white-only":97, "workboat":97, "seven-item":97, "smart-phone":97, "smashers":97, "task-force":97, "coxcomb":97, "grassroot":97, "proximately":97, "nows":97, "mineralogist":97, "kurdish-controlled":97, "issue-specific":97, "turned-down":97, "autograph-seekers":97, "bungee-jumping":97, "clefs":97, "dramaturge":97, "farmboy":97, "insurances":97, "energy-boosting":97, "network-based":97, "glamourous":97, "later-life":97, "procurer":97, "temperature-dependent":97, "vertiginously":97, "unalike":97, "retractors":97, "virtuosi":97, "volatilization":97, "amberjack":97, "emphasising":97, "insectoid":97, "insect-borne":97, "preinstalled":97, "sexualizing":97, "rebel-controlled":97, "renegotiations":97, "persecutes":97, "laxer":97, "atheoretical":97, "gushers":97, "tyres":97, "black-out":97, "black-run":97, "blackball":97, "accompanists":97, "dehydroepiandrosterone":97, "degustation":97, "encrustations":97, "excellences":97, "inchworm":97, "locavores":97, "million-and-a-half":97, "five-nation":97, "bridgework":97, "co-evolution":97, "brick-colored":97, "anti-incumbency":97, "mixologist":97, "hothouses":97, "pelagian":97, "right-side-up":97, "relativized":97, "snigger":97, "whomsoever":97, "stainlesssteel":97, "junior-high-school":97, "long-eared":97, "blue-corn":97, "anti-west":97, "chorea":97, "freakout":97, "tonsure":97, "teabag":97, "twinged":97, "cook-offs":97, "minor-leaguers":97, "inferentially":97, "pintos":97, "non-football":97, "non-hierarchical":97, "expensed":97, "cabinetmaking":97, "family-controlled":97, "pistol-grip":97, "sportscar":97, "sportiest":97, "undefiled":97, "fly-tying":97, "fictionally":97, "clubroom":97, "catnaps":97, "minimalistic":97, "low-emissions":97, "non-arabs":97, "nubbly":97, "non-art":97, "payroll-tax":97, "superconductive":97, "non-uniform":97, "groundwaters":97, "biannually":97, "bellflower":97, "revocations":97, "mouton":97, "subsumption":97, "ex-gang":97, "communicability":97, "implosions":97, "girl-friend":97, "noninflationary":97, "two-back":97, "support-group":97, "trialists":97, "curial":97, "medievalists":97, "philosopher-king":97, "three-liter":97, "walleyed":97, "releasable":97, "private-eye":97, "non-marital":97, "anti-freeze":97, "ball-striking":97, "chocoholics":97, "cholesterol-reducing":97, "forkball":97, "five-car":97, "one-state":97, "frag":97, "clot-busting":97, "prepregnancy":97, "revellers":97, "self-referentiality":97, "maximizer":97, "project-oriented":97, "queueing":97, "flashiness":97, "deicing":97, "adobes":97, "lithium-polymer":97, "mid-block":97, "masturbator":97, "intramuscularly":97, "newspeak":97, "sphincters":97, "unresectable":97, "mentholated":97, "nuthatch":97, "lost-wax":97, "color-treated":97, "creditcard":97, "categorised":97, "volute":97, "upper-elementary":97, "short-time":97, "vesper":97, "sidehills":97, "jewish-owned":97, "nonequivalent":97, "fanner":97, "cretinism":97, "amethysts":97, "building-supply":97, "merlots":97, "immateriality":97, "pederast":97, "multi-religious":97, "farmwork":97, "bundler":97, "biochips":97, "avant-gardes":97, "shoaling":97, "israeli/palestinian":97, "one-cup":97, "self-defence":97, "rose-petal":97, "geomorphologist":97, "geometrics":97, "emissions-control":97, "cokehead":97, "specialty-food":97, "white-meat":97, "west-east":97, "white-topped":97, "medevaced":97, "majorettes":97, "maintainability":97, "longboard":97, "red-shirted":97, "errorless":97, "hogsheads":97, "recapitulated":97, "sampans":97, "sambas":97, "uncleanliness":97, "noncomedogenic":97, "ba'athists":97, "by-pass":97, "daycares":97, "deselect":97, "flat-front":97, "subcritical":97, "wheelbases":97, "water-scarce":97, "wheel-chair":97, "describer":97, "company-specific":97, "palm-leaf":97, "holdback":97, "judgmentalism":97, "diamante":97, "dialogically":97, "rockpile":97, "pre-socratic":97, "overdubbing":97, "mechatronics":97, "conjunctival":97, "sudsing":97, "anamnesis":97, "bioweapon":97, "helmet-to-helmet":97, "raised-bed":97, "mindshare":97, "skeletally":97, "bio-engineered":97, "capybara":97, "carbon-composite":97, "mesmerism":97, "pedicabs":97, "nondegree":97, "lion-hearted":97, "aporias":97, "content-free":97, "oilskins":97, "gonadotropin":97, "unvented":97, "cytotoxicity":97, "hardtails":97, "civil-defense":97, "molecular-scale":97, "mid-victorian":97, "speedskaters":97, "spelunkers":97, "self-preoccupation":97, "ski-bum":97, "preprofessional":97, "no-strike":97, "one-thousand":97, "nanometer-scale":97, "five-cylinder":97, "expanders":97, "bloodwork":97, "unlogged":97, "use-value":97, "polyamide":97, "more-affluent":97, "camel's-hair":97, "thornbush":97, "surefootedness":97, "nonjudicial":97, "four-four":97, "dish-washing":97, "downward-facing":97, "anti-political":97, "subspecialties":97, "unpowered":97, "loss-making":97, "punkers":97, "disulfide":97, "decedents":97, "cold-rolled":97, "foulard":97, "high-sodium":97, "jarhead":97, "mudstone":97, "pro-regime":97, "postride":97, "two-toed":97, "antisatellite":97, "general-use":97, "non-aluminum":97, "bifurcations":97, "switchman":97, "semiquantitative":97, "high-potency":97, "asynchronously":97, "ultimates":97, "snuffbox":97, "single-word":97, "single-site":97, "gaullists":97, "greyness":97, "best-fit":97, "phenylpropanolamine":97, "raggy":97, "tricorn":97, "rotorcraft":97, "shoot-around":97, "oakwood":97, "principales":97, "asian-owned":97, "eight-bit":97, "tisane":97, "one-sample":97, "complementarily":97, "deweyan":97, "dual-language":97, "self-referenced":97, "self-locking":97, "talibanization":97, "mattock":97, "boycotters":97, "college-based":97, "laywomen":97, "sexologists":97, "polygrapher":97, "lexically":97, "hormone-like":97, "third-trimester":97, "bindweed":97, "cretans":97, "dendrochronology":97, "combusted":97, "topsail":97, "farmer-owned":97, "fisherwoman":97, "davits":97, "student-designed":97, "narrational":97, "malleolus":97, "poleward":97, "satellite-tv":97, "bear-proof":97, "silts":97, "chuppah":97, "ageratum":97, "dysthymia":97, "northerns":97, "pre-positioned":97, "main-belt":97, "monotheists":97, "uglies":97, "lanyards":97, "hunchbacks":97, "chinese-speaking":97, "flatwater":97, "flatworms":97, "fovea":97, "throw-up":97, "sylphs":97, "slideshows":97, "large-area":97, "jefes":97, "lowlanders":97, "noncategorical":97, "story-line":97, "mayorship":97, "olio":97, "nonrelative":97, "duns":97, "eliminators":97, "fibroblastic":97, "pre-soviet":97, "rocking-chair":97, "iron-deficient":97, "beaded-board":97, "geoscientists":97, "dinner-theater":97, "preadmission":97, "car-jacking":97, "appy":97, "amino-acid":97, "missional":97, "missiology":97, "organicism":97, "serotonergic":97, "binnacle":97, "jewelery":97, "nondeterministic":97, "panspermia":97, "somnambulism":97, "direct-injected":97, "adventure-travel":97, "peroxidation":97, "caricaturists":97, "aargh":97, "mycological":97, "servicemember":97, "magnifico":97, "guar":97, "dropdown":97, "disruptiveness":97, "jainism":97, "co-responsibility":97, "laundryman":97, "alienable":97, "activators":97, "ex-servicemen":97, "commo":97, "peapod":97, "subtidal":97, "foucaultian":97, "firestarter":97, "human-services":97, "postretirement":97, "undersheriff":97, "antipode":97, "cruller":97, "nominator":97, "primatology":97, "rejectionism":97, "fricking":97, "pro-trade":97, "remanufactured":97, "non-user":97, "human-service":97, "groundnut":97, "mark-to-market":97, "alliterations":97, "spadefoot":97, "non-humans":97, "leucocyte":97, "absolument":97, "socio-ecological":97, "pakoras":97, "drive-by-wire":97, "exilic":97, "sabots":97, "milliamps":97, "overreporting":97, "ski-school":97, "solid-surface":97, "mid-line":97, "dose-related":97, "park-based":97, "hornworms":97, "polymaths":97, "scent-free":97, "toepieces":97, "rabbets":97, "sadhus":97, "automatized":97, "refreshable":97, "narrow-body":97, "dysprosium":97, "moonwalkers":97, "grade-appropriate":97, "white-blood-cell":97, "flue-cured":97, "towboats":97, "lower-caste":97, "laparoscope":97, "haulage":97, "argent":97, "water-lily":97, "shoulderbag":97, "subdomains":97, "southernness":97, "in-stream":97, "oesophagus":97, "multiplexed":97, "post-transition":97, "fluoroscopy":97, "dogfood":97, "backsaw":97, "quilled":97, "whitecap":97, "tinware":97, "moonshiner":97, "medial-lateral":97, "red-shirt":97, "mother-father":97, "one-footed":97, "doomsters":97, "birefringence":97, "anamorphic":97, "superstrings":97, "aminotransferase":97, "systematicity":97, "self-support":97, "gravlax":97, "myelinated":97, "pre-birth":97, "spencerian":97, "smelts":97, "rarebit":97, "glycosaminoglycans":97, "cardiomegaly":97, "stoat":97, "acidified":97, "de-mining":97, "mitzvot":97, "bermudian":97, "sociospatial":97, "dragline":97, "anti-modernist":97, "intermolecular":97, "fixed-gear":97, "otoscopic":97, "pipa":97, "jape":97, "tules":97, "friary":97, "motivic":97, "menageries":97, "ovidian":97, "ergot":97, "tunafish":97, "huffer":97, "non-exercisers":97, "coal-fueled":97, "coastwide":97, "sensorially":97, "alkyl":97, "residually":97, "straw-bale":97, "all-mesh":97, "landuses":97, "penaeid":97, "oath-taking":97, "sculler":97, "prayerbook":97, "macroeconomists":97, "carioca":97, "nonpatient":97, "powerhead":97, "roboticists":97, "microsite":97, "forwarders":97, "presentness":97, "root-knot":97, "naming-rights":97, "governorate":97, "cognitive-behavior":97, "test-taker":97, "oligonucleotide":97, "chronometric":97, "curly-tailed":97, "placers":97, "synchronistic":97, "semidesert":97, "water-heating":97, "in-the-ear":97, "cobalamin":97, "cocomposting":97, "weightbearing":97, "dyscalculia":97, "pre-training":97, "restorationist":97, "narrativize":97, "low-threshold":97, "eejit":97, "scotoma":97, "hypercapnia":97, "advection":97, "cannulation":97, "da-da":97, "slaughter-house":97, "flans":97, "femininities":97, "phrenologists":97, "mealie":97, "linewidths":97, "adaptive-optics":97, "headsman":97, "trichomoniasis":97, "beta-hemolytic":97, "perforating":97, "microenterprises":97, "coagulopathy":97, "lessors":97, "hard-to-staff":97, "rilles":97, "field-workers":97, "deanery":97, "adjutants":97, "compressional":97, "non-british":97, "tradition-based":97, "rhinologic":97, "freeplay":97, "play-based":97, "enjambment":97, "tip-up":97, "deindividuation":97, "self-schema":97, "intra-observer":97, "intermediate-mass":97, "caracal":97, "oblasts":97, "scansion":97, "birdmen":97, "fin-de-sicle":97, "diffracted":97, "anagnorisis":97, "over-the-range":97, "tamperproof":97, "backscattered":97, "mobilizers":97, "subdomain":97, "tinea":97, "species-area":97, "anality":97, "meiotic":97, "low-residency":97, "american-european":97, "eclogue":97, "morphometric":97, "nanoworld":97, "behavioralists":97, "self-recording":97, "nosegays":97, "three-tone":97, "asset-building":97, "bronchoscope":97, "periphyton":97, "nonimpaired":97, "bleeper":97, "minisub":97, "tercets":97, "proactivity":97, "stoichiometry":97, "colectomy":97, "tensioners":97, "duellists":97, "monkeywrenching":97, "social-movement":97, "sawfly":97, "discharger":97, "self-represented":97, "ranchette":97, "spear-thrower":97, "subluxations":97, "penile-vaginal":97, "cocaine-exposed":97, "tetrapod":97, "chrysotile":97, "gemsbok":97, "protectee":97, "mihrab":97, "rootworms":97, "homonymy":97, "biotype":97, "cognitivism":97, "six-level":97, "little-toe":97, "goniometric":97, "eco-efficiency":97, "co-ordinates":97, "counter-tradition":97, "duplexer":97, "local-bus":97, "hybrid-drive":97, "carillons":97, "nonlabeled":97, "antidoping":97, "endovascular":97, "remineralization":97, "star-trail":97, "self-address":97, "mandir":97, "glucagon-like":97, "windigo":97, "muleta":97, "autism-spectrum":97, "mast-head":97, "no-threshold":97, "estimative":97, "post-therapy":97, "ostiomeatal":97, "metaphase":97, "entorhinal":97, "state-of-nature":97, "state-business":97, "slidewalk":97, "showplaces":98, "state-enforced":98, "unperceived":98, "desert-like":98, "disorients":98, "flatteringly":98, "flat-bottom":98, "carouse":98, "cross-hatched":98, "jelly-like":98, "goofy-looking":98, "fluorescing":98, "air-dropped":98, "pre-date":98, "quirkiest":98, "month-and-a-half":98, "heart-broken":98, "hypes":98, "testosterone-driven":98, "share-price":98, "sharpeners":98, "unbruised":98, "fifty-one-year-old":98, "bayoneted":98, "country-pop":98, "makeout":98, "long-ruling":98, "hairiest":98, "homering":98, "idiot-proof":98, "radiologically":98, "overdramatize":98, "on-ramps":98, "silver-white":98, "small-talk":98, "seven-grain":98, "warier":98, "well-mixed":98, "well-produced":98, "well-supplied":98, "wet-behind-the-ears":98, "wood-handled":98, "workarounds":98, "mother-and-child":98, "now-notorious":98, "one-ninth":98, "past-president":98, "overoptimistic":98, "innocuous-looking":98, "mind-bogglingly":98, "rose-covered":98, "poisonously":98, "bottommost":98, "beautified":98, "archrivals":98, "bear-like":98, "ancient-looking":98, "footnoted":98, "foot-stomping":98, "emoluments":98, "straitjacketed":98, "urine-soaked":98, "then-popular":98, "little-noted":98, "live-music":98, "law-breaking":98, "hyperaware":98, "goners":98, "cash-register":98, "bluish-gray":98, "abjured":98, "severe-looking":98, "unsporting":98, "unsubstantial":98, "unswervingly":98, "sumptuousness":98, "stick-up":98, "profanely":98, "nonofficial":98, "oil-burning":98, "outthrust":98, "unteachable":98, "rubber-banded":98, "shortlisted":98, "slam-dunked":98, "stanching":98, "gray-headed":98, "helpmates":98, "insect-like":98, "premium-priced":98, "nations-sponsored":98, "nutritiously":98, "mischievousness":98, "auto-related":98, "billion-dollar-a-year":98, "boomboxes":98, "eclectically":98, "dowagers":98, "fancy-free":98, "denim-clad":98, "dankness":98, "jihads":98, "first-rounders":98, "out-of-the-blue":98, "postured":98, "steel-tipped":98, "reconsiderations":98, "ten-cent":98, "trepidatious":98, "life-transforming":98, "puffier":98, "bundled-up":98, "celerity":98, "dismayingly":98, "rawer":98, "sketchiest":98, "shoddiness":98, "shit-faced":98, "too-thin":98, "treacly":98, "travel-size":98, "turned-off":98, "turnoffs":98, "ululation":98, "limns":98, "lugubriously":98, "oak-shaded":98, "prison-like":98, "readerships":98, "readdress":98, "quadrangles":98, "right-now":98, "bricklaying":98, "comrade-in-arms":98, "anti-heroes":98, "balkanize":98, "fatalistically":98, "drive-bys":98, "taped-up":98, "sculling":98, "scrunched-up":98, "spiral-shaped":98, "two-cylinder":98, "wickedest":98, "well-chilled":98, "well-chronicled":98, "v-chips":98, "vamped":98, "vectoring":98, "stage-whispered":98, "worryingly":98, "worshipfully":98, "dustier":98, "flouncing":98, "co-produce":98, "conference-room":98, "anti-women":98, "besmirching":98, "once-prosperous":98, "once-bustling":98, "over-thecounter":98, "overcompensated":98, "psychoanalyzing":98, "mordantly":98, "morale-boosting":98, "long-defunct":98, "long-absent":98, "hip-hugging":98, "inveighs":98, "mealy-mouthed":98, "no-brainers":98, "ponderings":98, "pooh-poohs":98, "one-season":98, "no-questions-asked":98, "cosseting":98, "skimpiest":98, "skimped":98, "reviles":98, "accedes":98, "black-power":98, "befalling":98, "beetling":98, "baby-sits":98, "diminuendo":98, "grumpier":98, "mad-dog":98, "intersperses":98, "husky-voiced":98, "promenading":98, "personality-driven":98, "suit-and-tie":98, "tillable":98, "minute-and-a-half":98, "loose-jointed":98, "icier":98, "infatuations":98, "pacesetters":98, "post-mortems":98, "punkish":98, "concentrically":98, "distend":98, "eighteen-month-old":98, "septuagenarians":98, "success-oriented":98, "unreeling":98, "six-passenger":98, "sheepishness":98, "socio-economically":98, "resealed":98, "twentyeight":98, "tongue-twisting":98, "often-quoted":98, "platitudinous":98, "plasticky":98, "musingly":98, "jettisons":98, "brown-black":98, "best-funded":98, "best-informed":98, "crisis-management":98, "deprecation":98, "semiretirement":98, "shrimp-like":98, "tensest":98, "traditional-style":98, "underripe":98, "two-touchdown":98, "underplays":98, "underpaying":98, "caulked":98, "already-established":98, "already-existing":98, "biennially":98, "purple-red":98, "pricetag":98, "non-believer":98, "mouldy":98, "naturopathy":98, "many-faceted":98, "ivory-handled":98, "half-indian":98, "remap":98, "realestate":98, "mucks":98, "much-quoted":98, "orotund":98, "hard-learned":98, "hard-rocking":98, "human-built":98, "ever-decreasing":98, "allays":98, "barbered":98, "shanked":98, "thick-bodied":98, "undemocratically":98, "underclothing":98, "tatter":98, "stonecutters":98, "ultra-hip":98, "body-builder":98, "addictively":98, "four-county":98, "everincreasing":98, "familiarities":98, "dis-ease":98, "metal-framed":98, "jawbreakers":98, "laser-cut":98, "gropings":98, "mud-stained":98, "mud-slinging":98, "inimitably":98, "ladderback":98, "bone-thinning":98, "debarked":98, "debauch":98, "unhinges":98, "two-prong":98, "send-ups":98, "sour-faced":98, "disemboweling":98, "economy-size":98, "ex-players":98, "fat-bellied":98, "fast-disappearing":98, "latterly":98, "how-ever":98, "four-state":98, "greyish":98, "machinelike":98, "plastic-lined":98, "plateauing":98, "pound-for-pound":98, "oughts":98, "power-assisted":98, "red-colored":98, "society-wide":98, "sheered":98, "six-run":98, "six-wheeled":98, "unreadiness":98, "slow-cooking":98, "sloppiest":98, "eight-passenger":98, "decapitates":98, "expediter":98, "concertgoer":98, "ruler-straight":98, "razored":98, "pink-tinged":98, "hollow-core":98, "set-back":98, "second-by-second":98, "tallness":98, "sulfur-containing":98, "proleptic":98, "ploughman":98, "hurricane-ravaged":98, "higher-grade":98, "mid-rise":98, "liver-colored":98, "leapers":98, "groveled":98, "pulverizes":98, "self-organize":98, "stuporous":98, "televises":98, "coteries":98, "acerbically":98, "accretes":98, "no-tax":98, "million-to-one":98, "leatherwork":98, "frame-by-frame":98, "flipflops":98, "military-issue":98, "jungly":98, "inescapability":98, "inequitably":98, "philodendrons":98, "pharmacologically":98, "predetermines":98, "political-cultural":98, "pass-catching":98, "overbright":98, "nose-first":98, "bandleaders":98, "bandwagons":98, "freckly":98, "three-wheel":98, "three-section":98, "three-pack":98, "susurration":98, "vacates":98, "well-adapted":98, "whipcord":98, "two-fingered":98, "entrylevel":98, "father-figure":98, "anti-god":98, "co-coordinator":98, "cornflower-blue":98, "right-minded":98, "orange-and-black":98, "pimped":98, "linen-covered":98, "jailbait":98, "handbell":98, "hand-rubbed":98, "too-young":98, "raw-material":98, "dragooned":98, "disinvited":98, "changelings":98, "bunted":98, "car-theft":98, "carbolic":98, "chemical-based":98, "multi-hued":98, "marbleized":98, "kettledrum":98, "immolate":98, "hostelries":98, "horserace":98, "green-striped":98, "subsaharan":98, "turmoils":98, "unadvertised":98, "record-label":98, "recontextualize":98, "production-line":98, "ritziest":98, "submicron":98, "serapes":98, "planet-sized":98, "problemsolving":98, "paper-towel":98, "networkers":98, "kitted":98, "high-heat":98, "criers":98, "family-sized":98, "discords":98, "energy-use":98, "echos":98, "bulgy":98, "capitulations":98, "boogying":98, "bass-fishing":98, "mentalhealth":98, "nature-inspired":98, "appeaser":98, "chasten":98, "creepier":98, "continuo":98, "coloristic":98, "double-checks":98, "soot-stained":98, "tax-law":98, "upbraid":98, "wackier":98, "outrider":98, "prog":98, "spicy-sweet":98, "brimful":98, "carved-wood":98, "inculcates":98, "superstructures":98, "doorposts":98, "georgian-style":98, "grapefruit-size":98, "homie":98, "half-bottles":98, "arcade-style":98, "agleam":98, "bearishness":98, "polishers":98, "room-by-room":98, "megadeal":98, "less-crowded":98, "less-restrictive":98, "longest-standing":98, "honey-brown":98, "overinvestment":98, "world-shaking":98, "workaround":98, "wing-like":98, "tableful":98, "smash-hit":98, "silver-green":98, "red-flagged":98, "grab-bag":98, "long-settled":98, "irishwoman":98, "foments":98, "fifty-plus":98, "faceplates":98, "embalm":98, "uncaps":98, "understatements":98, "unfaltering":98, "snorkeled":98, "townsman":98, "super-low":98, "mahogany-paneled":98, "left-footed":98, "pest-free":98, "curtainless":98, "kiddingly":98, "kickboxer":98, "intercoms":98, "highintensity":98, "oenophiles":98, "plainsong":98, "reinscribe":98, "reinscribed":98, "pro-defense":98, "carryalls":98, "excrescence":98, "displeases":98, "unnaturalness":98, "wimping":98, "wire-haired":98, "wisecracker":98, "semi-public":98, "ridgeback":98, "shovelling":98, "shoutout":98, "tenebrous":98, "whodunits":98, "water-rich":98, "wayfaring":98, "executive-search":98, "flat-bed":98, "re-introduction":98, "mockups":98, "large-aperture":98, "lik":98, "defanged":98, "dog-food":98, "eye-pleasing":98, "gem-like":98, "air-powered":98, "breakaways":98, "over-the-horizon":98, "heart-tugging":98, "stop-start":98, "tournedos":98, "arbitration-eligible":98, "heelers":98, "homelife":98, "red-stained":98, "ragas":98, "on-shore":98, "silver-rimmed":98, "narcs":98, "results-based":98, "phone-company":98, "bearhug":98, "anciently":98, "grappler":98, "six-fifty":98, "lay-ups":98, "head-and-shoulders":98, "spidering":98, "tailfins":98, "unsurveyed":98, "unsheltered":98, "powerbroker":98, "parings":98, "oil-eating":98, "tax-related":98, "slam-bang":98, "strip-mining":98, "surreality":98, "double-bladed":98, "contentless":98, "bombardiers":98, "biggish":98, "baseball-sized":98, "base-level":98, "public-information":98, "publicly-funded":98, "non-certified":98, "non-criminal":98, "graters":98, "fuddy-duddy":98, "network-affiliated":98, "neurophysiologist":98, "out-of-context":98, "rabbit-fur":98, "recontextualizing":98, "top-mounted":98, "greenish-gray":98, "functionless":98, "low-technology":98, "neo-stalinist":98, "mission-oriented":98, "puckishly":98, "clergyperson":98, "disintegrative":98, "dashikis":98, "tuxedo-clad":98, "hand-feed":98, "greasier":98, "hot-wire":98, "oarlocks":98, "quadrilateral":98, "private-practice":98, "anti-human":98, "algae-covered":98, "five-eighths":98, "five-stage":98, "drollery":98, "dissensions":98, "transferral":98, "spirally":98, "transmutations":98, "week-by-week":98, "walnut-sized":98, "skull-like":98, "dollar-a-year":98, "dollar-based":98, "deep-chested":98, "condemnable":98, "co-operatively":98, "phenomenons":98, "nine-room":98, "nincompoops":98, "glowy":98, "hip-high":98, "no-strings":98, "divide-and-rule":98, "extended-range":98, "complacence":98, "some-body":98, "stabilities":98, "containments":98, "contact-lens":98, "blabbermouth":98, "black-hearted":98, "gas-guzzlers":98, "high-torque":98, "highdefinition":98, "hus-band":98, "incentivized":98, "outfoxed":98, "sultriness":98, "signally":98, "stepstool":98, "secretary/treasurer":98, "repossessions":98, "video-rental":98, "iconically":98, "ice-encrusted":98, "kafir":98, "regrown":98, "revolutionizes":98, "breech-loading":98, "fleshier":98, "spackling":98, "sheeted":98, "paradigmatically":98, "potties":98, "hander":98, "fur-trading":98, "furniture-making":98, "bromance":98, "acrophobia":98, "disfigures":98, "ticktock":98, "field-level":98, "foaling":98, "extubated":98, "caucusing":98, "antiunion":98, "portugese":98, "per-game":98, "people-watch":98, "grosbeaks":98, "grossness":98, "groundbreaker":98, "evidenced-based":98, "glassless":98, "bogey-free":98, "craniums":98, "coldhearted":98, "bar-hopping":98, "non-urgent":98, "single-room-occupancy":98, "single-user":98, "rhinoscopy":98, "re-orient":98, "overstaffing":98, "antinomies":98, "biddable":98, "build-down":98, "debt-reduction":98, "ducting":98, "duckbill":98, "tenser":98, "schnozz":98, "disharmonious":98, "drag-racing":98, "anti-mexican":98, "furloughing":98, "gridwork":98, "hide-outs":98, "kinetically":98, "jet-lag":98, "paradisal":98, "listwise":98, "microfilms":98, "sixth-best":98, "rectums":98, "expert-level":98, "decencies":98, "eighty-two-year-old":98, "arraying":98, "regroups":98, "post-event":98, "non-functioning":98, "role-plays":98, "sandpapery":98, "loan-loss":98, "registrant":98, "self-preserving":98, "shiploads":98, "equilibration":98, "blackhead":98, "pompon":98, "overspecialization":98, "meanies":98, "lobed":98, "anti-wall":98, "all-glass":98, "floras":98, "three-panel":98, "three-quarter-inch":98, "toss-ups":98, "walk-away":98, "well-circumscribed":98, "win/win":98, "wittgensteinian":98, "stimulus-response":98, "exothermic":98, "exogenously":98, "acid-rain":98, "concatenations":98, "relicensing":98, "great-grandkids":98, "imbricated":98, "round-cheeked":98, "shoemaking":98, "enormities":98, "bunkmates":98, "ceanothus":98, "cedar-shingled":98, "biographic":98, "pop-punk":98, "multi-site":98, "neoplatonism":98, "low-range":98, "green-winged":98, "funeral-home":98, "hand-clapping":98, "recomposition":98, "multitouch":98, "bassists":98, "austerities":98, "bullet-resistant":98, "bullshitter":98, "economic-stimulus":98, "family-room":98, "fuehrer":98, "get-rich":98, "fuck-ups":98, "public-domain":98, "bubbler":98, "european-americans":98, "transportability":98, "upstroke":98, "uptrend":98, "muscatel":98, "muscleman":98, "tail-lights":98, "scratcher":98, "law-based":98, "mid-18th-century":98, "blues-based":98, "advanced-level":98, "atomizing":98, "frowsy":98, "food-storage":98, "e-trade":98, "ancestries":98, "consequentially":98, "precipitants":98, "on-premises":98, "province-wide":98, "pre-tested":98, "pre-position":98, "maintainable":98, "long-line":98, "arbitrageur":98, "conjugating":98, "bottle-feed":98, "coffee-growing":98, "embezzlers":98, "super-sweet":98, "sinkings":98, "indirectness":98, "beltless":98, "eye-shadow":98, "dull-eyed":98, "language-learning":98, "hawsers":98, "in-studio":98, "intercessions":98, "nonaluminum":98, "pizzicato":98, "clobbers":98, "state-specific":98, "wearables":98, "post-workout":98, "re-experiencing":98, "diamond-tipped":98, "blinis":98, "articulator":98, "backdated":98, "hailer":98, "monotheist":98, "cut-flower":98, "ampule":98, "biosocial":98, "medicine-ball":98, "protectress":98, "warmaking":98, "seven-second":98, "seventy-ninth":98, "mini-dress":98, "longlegs":98, "film-based":98, "helices":98, "soffits":98, "bluejays":98, "mid-1830s":98, "unsourced":98, "nonpreferred":98, "power-tool":98, "standards-setting":98, "double-bind":98, "emplaced":98, "adventitiously":98, "item-by-item":98, "illegibility":98, "energy-generating":98, "eco-minded":98, "australopithecine":98, "links-style":98, "groats":98, "sideburn":98, "steelmaking":98, "utopic":98, "fumigants":98, "functionalities":98, "multi-modal":98, "bioaccumulate":98, "clear-water":98, "cheesesteaks":98, "foresighted":98, "educationists":98, "drawed":98, "self-limitation":98, "square-dance":98, "luminaria":98, "hourglasses":98, "princelings":98, "drover":98, "sunblocks":98, "two-generation":98, "curbstone":98, "all-organic":98, "blow-off":98, "cotton-growing":98, "predesigned":98, "one-acts":98, "patient-care":98, "cell-surface":98, "mid-latitude":98, "incinerates":98, "outlanders":98, "black-sand":98, "boysenberry":98, "roentgen":98, "movie-like":98, "razzle":98, "memorability":98, "heavier-than-air":98, "artemisias":98, "abrogates":98, "freewheel":98, "spacesuited":98, "sea-water":98, "resections":98, "sheepfold":98, "monologist":98, "jetstream":98, "hiatal":98, "flabbergasting":98, "call-back":98, "economy-class":98, "ex-nun":98, "dark-complected":98, "subassembly":98, "two-player":98, "focally":98, "buglers":98, "nuclear-related":98, "single-volume":98, "single-wide":98, "to/from":98, "postsurgery":98, "quality-of-care":98, "limestones":98, "non-student":98, "banyans":98, "addictiveness":98, "campouts":98, "peahen":98, "motion-sensing":98, "duckies":98, "castors":98, "free-rider":98, "explicative":98, "infection-control":98, "infirmaries":98, "packaged-goods":98, "acclimatized":98, "dekes":98, "oke":98, "incapability":98, "high-use":98, "photomicrographs":98, "one-unit":98, "rufous":98, "co-player":98, "counter-strike":98, "free-electron":98, "theorizations":98, "droppers":98, "enucleation":98, "coronets":98, "greasewood":98, "serologically":98, "riverway":98, "glaciologist":98, "binge-drinking":98, "building-level":98, "downriggers":98, "owlet":98, "survivalism":98, "slaughterer":98, "union-busting":98, "transvaginal":98, "unsheathes":98, "unsponsored":98, "mid-fifteenth":98, "cashbox":98, "gasketed":98, "untrodden":98, "grannie":98, "cyber-attacks":98, "agriculture-related":98, "homologies":98, "narcotrafficking":98, "sit-coms":98, "specialism":98, "spectate":98, "white-crowned":98, "washerwomen":98, "home-rule":98, "governorates":98, "dignities":98, "geocaching":98, "pre-conditions":98, "hogans":98, "reindeers":98, "noncontributory":98, "clitoridectomy":98, "cartesianism":98, "day-labor":98, "eggless":98, "drill-and-practice":98, "wilfully":98, "wolfhounds":98, "word-by-word":98, "touchscreens":98, "state-administered":98, "reinsurers":98, "palmistry":98, "post-strike":98, "lower-mass":98, "haemodynamic":98, "inverse-square":98, "over-capacity":98, "pre-inca":98, "block-grant":98, "current-year":98, "super-soft":98, "iron-based":98, "world-views":98, "phoenixes":98, "boundedness":98, "frozen-section":98, "superscripts":98, "atomic-scale":98, "self-surrender":98, "premalignant":98, "polychaete":98, "appellants":98, "caprock":98, "gadwall":98, "griller":98, "high-earning":98, "latently":98, "repellants":98, "student-oriented":98, "raviolis":98, "autoloading":98, "hand-counted":98, "hotel-motel":98, "mixed-medium":98, "paintless":98, "tap-dance":98, "sacker":98, "two-element":98, "gangbanging":98, "co-pilots":98, "all-tackle":98, "passive-solar":98, "gunsmithing":98, "selvage":98, "millennialist":98, "child-woman":98, "ascriptions":98, "divinization":98, "drybrush":98, "comparators":98, "jointness":98, "matzah":98, "muzzleloading":98, "dose-dependent":98, "gryphon":98, "vincristine":98, "prevention-oriented":98, "backsplashes":98, "callable":98, "laundrette":98, "music-reading":98, "big-leaguers":98, "overtreatment":98, "pustule":98, "purposiveness":98, "cold-related":98, "demineralization":98, "quakerism":98, "inter-island":98, "hard-surfaced":98, "disassociative":98, "futuring":98, "bantustan":98, "gene-splicing":98, "grand-father":98, "big-load":98, "capital-gains-tax":98, "focusers":98, "monomer":98, "monopod":98, "micromachined":98, "hiddenness":98, "catabolic":98, "acrostic":98, "icefishing":98, "roily":98, "deckle":98, "shintoism":98, "rappels":98, "tearjerkers":98, "gun-rights":98, "phial":98, "counter-proposal":98, "right-dick":98, "expansionists":98, "gimbal":98, "greenskeeper":98, "neotraditional":98, "afro-portuguese":98, "vesicle":98, "interlocutory":98, "forty-niners":98, "masse":98, "forced-labor":98, "fugal":98, "polythene":98, "unit-level":98, "virological":98, "guylines":98, "foodborne-illness":98, "etheric":98, "cinchona":98, "anaphoric":98, "archetypally":98, "preapproval":98, "white-coat":98, "radiometric":98, "individualised":98, "hypnagogic":98, "nephrectomy":98, "ahimsa":98, "ricefields":98, "subject-centered":98, "unoaked":98, "water-jet":98, "woofers":98, "wastewaters":98, "egad":98, "glomerulonephritis":98, "ostium":98, "lecture-based":98, "nonthermal":98, "time-travelers":98, "sectionalism":98, "burgundians":98, "radiophone":98, "irrigator":98, "terpenes":98, "t-statistics":98, "precordial":98, "one-eared":98, "analysand":98, "geotechnical":98, "strapwork":98, "barkcloth":98, "quarterstaff":98, "peroxides":98, "forcings":98, "halons":98, "baseplate":98, "continental-scale":98, "neuroanatomy":98, "bathyscaphe":98, "ceilidh":98, "packinghouses":98, "raw-milk":98, "spyhole":98, "tee-ball":98, "hot-spot":98, "uncuffed":98, "spinous":98, "gunrunners":98, "nine-speed":98, "webpages":98, "divisibility":98, "carbos":98, "trouts":98, "prokaryotic":98, "molecular-beam":98, "hollowpoint":98, "leucine":98, "septa":98, "statelessness":98, "client-lawyer":98, "economistic":98, "exaction":98, "furosemide":98, "howdah":98, "teachers-in-training":98, "pickaninny":98, "underpaintings":98, "metal-on-metal":98, "pro-statehood":98, "kinescope":98, "doublings":98, "under-achievement":98, "sheepmen":98, "sheller":98, "holloware":98, "infilling":98, "pipefish":98, "diluent":98, "accommodationists":98, "crabber":98, "photosynthetically":98, "triduum":98, "decubitus":98, "sculpins":98, "spirituous":98, "crowfoot":98, "anti-hunters":98, "neo-realism":98, "lamplighter":98, "jam-band":98, "chamfer":98, "combi":98, "vasodilatation":98, "colorism":98, "trauma-related":98, "short-staple":98, "retractable-roof":98, "retargeting":98, "intra-african":98, "unwarned":98, "agrarianism":98, "world-ranked":98, "requester":98, "course-specific":98, "logwood":98, "plaice":98, "inter-relationships":98, "flatus":98, "osteoclastic":98, "figgy":98, "deflators":98, "axle-to-axle":98, "dioecious":98, "money-smart":98, "strophe":98, "dactyl":98, "open-range":98, "come-along":98, "planchette":98, "foreign-trained":98, "blondies":98, "co-construction":98, "non-national":98, "passcode":98, "suzerain":98, "stress-strain":98, "ratifiers":98, "patronal":98, "abatis":98, "cytopathic":98, "cablegram":98, "tachinid":98, "supporting-actor":98, "doxological":98, "antimalarials":98, "bryozoan":98, "killifish":98, "ultrafiltration":98, "ultra-distance":98, "client-patron":98, "platelet-rich":98, "self-appraisals":98, "epigenetics":98, "earworms":98, "milers":98, "jural":98, "translabyrinthine":98, "fishtank":98, "crosier":98, "autoguiding":98, "multibody":98, "sideband":98, "steampunk":98, "owner-builders":98, "mercury-containing":98, "keelboats":98, "transthoracic":98, "nonoptical":98, "spermatophores":98, "coinfection":98, "embryonal":98, "folkloristic":98, "agentry":98, "noncircular":98, "egg-bearing":98, "cross-sectoral":98, "women's-studies":98, "hypoplasia":98, "pre-class":98, "word-association":98, "heelpieces":98, "ya-yas":98, "emotivism":98, "restrictor-plate":98, "spermatophore":98, "unschooling":98, "sun-protective":98, "nonqualified":98, "intracerebral":98, "mensuration":98, "polycultural":98, "chaebols":98, "multi-activity":98, "sachems":98, "spinney":98, "long-day":98, "vaccinees":98, "uxorilocal":98, "consummatory":98, "bowerbirds":98, "knowledge-driven":98, "cable-stayed":98, "post-observation":98, "rulemakings":98, "street-food":98, "implicature":98, "alkanes":98, "glassy-winged":98, "electrocochleography":98, "frequency-specific":98, "navicular":98, "memory-resident":98, "transaction-processing":98, "drug-coated":98, "set-point":98, "thanes":98, "least-restrictive":98, "youth-only":98, "onchocerciasis":98, "hours-of-service":98, "nonplanar":98, "innervated":98, "ethnopolitical":98, "bayman":98, "whole-ecosystem":98, "semidwarf":98, "odorant":98, "pronatalist":98, "hyperspectral":98, "haemolytic":98, "monopsonistic":98, "cross-race":98, "supersessionist":98, "barcoding":98, "eulachon":98, "multi-vehicle":98, "solar-neutrino":98, "high-dimensional":98, "formal-sector":98, "goal-based":98, "slipway":98, "ballista":98, "spondaic":98, "prose-poem":98, "raceboat":98, "limited-resource":98, "postliberalism":98, "priestless":98, "djinni":98, "manualists":98, "grainland":98, "uniformitarian":98, "tiebreak":98, "construct-irrelevant":98, "cache-line":98, "conceptually-based":98, "hecatomb":98, "conatus":98, "one-vehicle":98, "magnocellular":98, "procompetitive":98, "anagogic":98, "androgenetic":98, "nonallergic":98, "lightcurve":98, "mayflowers":98, "bike-riding":98, "finger-sized":98, "dirt-floored":98, "double-murder":98, "merchandised":98, "opening-game":98, "nuthatches":98, "inscrutably":98, "ill-used":98, "fulfils":98, "tax-filing":98, "thirsts":98, "strong-smelling":98, "slatternly":98, "slaloming":98, "refiguring":98, "self-selecting":98, "waifish":98, "atrophying":98, "bright-white":98, "calculatingly":98, "head-turner":98, "masticating":98, "knobbly":98, "news-making":98, "perpetrates":98, "productiveness":98, "reawakens":98, "spiffier":98, "stick-straight":98, "still-evolving":98, "unspools":98, "snake-infested":98, "snail-like":98, "simpered":98, "scratched-up":98, "untrusting":98, "untasted":98, "off-handedly":98, "mundanely":98, "hard-backed":98, "high-born":98, "first-rank":98, "gaffers":98, "bullet-ridden":98, "book-buying":98, "billion-year-old":98, "apprising":98, "clay-colored":98, "discount-store":98, "down-market":98, "down-turned":98, "discombobulating":98, "discoloring":98, "ever-bigger":98, "steel-trap":98, "side-stepped":98, "recontextualized":98, "recompose":98, "pullbacks":98, "swathing":98, "three-deep":98, "thrashings":98, "un-air-conditioned":98, "pop-oriented":98, "jalopies":98, "hamstringing":98, "hammed":98, "boppers":98, "changeovers":98, "car-repair":98, "crooking":98, "dismays":98, "edgiest":98, "hypersexual":98, "indistinguishably":98, "prophylactically":98, "recertified":98, "eleven-year-olds":98, "blighting":98, "backlot":98, "coddles":98, "see-and-be-seen":98, "sharpshooting":98, "super-high":98, "super-easy":98, "undoable":98, "large-flowered":98, "inapposite":98, "highlighters":98, "highranking":98, "pendent":98, "ahhing":98, "arithmetically":98, "braises":98, "brained":98, "cross-currents":98, "fourth-biggest":98, "glossiness":98, "excommunicating":98, "whiteouts":98, "wolfishly":98, "water-saturated":98, "wreathing":98, "arbitrating":98, "facetiousness":98, "defoliate":98, "digressed":98, "hairsbreadth":98, "irreconcilably":98, "long-hidden":98, "make-ups":98, "moola":98, "mooching":98, "rock-like":98, "nailheads":98, "overfull":98, "yuks":98, "white-clothed":98, "white-boy":98, "terror-related":98, "silver-screen":98, "seventh-ranked":98, "superstrong":98, "then-ceo":98, "grant-funded":98, "fruit-filled":98, "coifed":98, "butterfly-shaped":98, "awardee":98, "bottlenecked":98, "arch-conservative":98, "less-stringent":98, "less-than-optimal":98, "less-fortunate":98, "less-familiar":98, "one-fifteenth":98, "now-vanished":98, "mini-empire":98, "self-deluded":98, "polemically":98, "broadbased":98, "counter-hegemonic":98, "actuate":98, "all-wise":98, "assuredness":98, "garage-sale":98, "freaked-out":98, "deemphasis":98, "ninnies":98, "not-so-hidden":98, "nostrum":98, "male-pattern":98, "military-type":98, "irascibility":98, "headier":98, "well-fortified":98, "wind-borne":98, "stress-busting":98, "semi-abstract":98, "tear-gassed":98, "unlatching":98, "formulator":98, "ghettoized":98, "five-disc":98, "egotists":98, "chocolatiers":98, "ballclubs":98, "greaseless":98, "marvellously":98, "non-literary":98, "orangy":98, "riffed":98, "scuffed-up":98, "tippling":98, "sunbather":98, "stock-price":98, "uncouple":98, "two-hundred-pound":98, "transmogrification":98, "no-decisions":98, "oniony":98, "overproduced":98, "jousts":98, "career-driven":98, "sweltered":98, "revering":98, "shin-deep":98, "tiger-striped":98, "smoke-belching":98, "mid-northern":98, "incautiously":98, "husbanded":98, "huskiness":98, "project-by-project":98, "bowl-like":98, "carnally":98, "easy-to-navigate":98, "defrosters":98, "garrisoned":98, "flash-in-the-pan":98, "heavy-handedness":98, "infelicitous":98, "infernally":98, "let-down":98, "minute-long":98, "post-merger":98, "piquing":98, "arrow-shaped":98, "arriviste":98, "fleurs-de-lis":98, "runnerup":98, "subversiveness":98, "unreasoned":98, "stateliness":98, "self-advancement":98, "sheeplike":98, "twenty-twenty":98, "trickledown":98, "triangle-shaped":98, "bamboozle":98, "calumnies":98, "downslide":98, "fastgrowing":98, "ex-model":98, "cringe-inducing":98, "laudably":98, "funner":98, "funkiness":98, "potty-training":98, "pouchy":98, "micromanaged":98, "new-and-improved":98, "brutalizes":98, "boding":98, "fames":98, "falsities":98, "firetrap":98, "disarrayed":98, "ebulliently":98, "postshow":98, "metal-working":98, "misdiagnose":98, "harder-edged":98, "tumble-down":98, "stony-faced":98, "sports-oriented":98, "single-page":98, "undemonstrative":98, "two-storied":98, "souped":98, "sleepy-looking":98, "unimaginatively":98, "underprice":98, "two-team":98, "half-off":98, "mends":98, "motion-activated":98, "piddly":98, "portioned":98, "relabeled":98, "deathlike":98, "alphabetize":98, "antiplagiarism":98, "adjudicates":98, "barnacled":98, "cany":98, "buggery":98, "extravehicular":98, "fogged-up":98, "corking":98, "prickliness":98, "low-inflation":98, "low-contrast":98, "half-inch-thick":98, "hoopsters":98, "unharnessed":98, "slave-trading":98, "two-paragraph":98, "two-masted":98, "sportiness":98, "snuffle":98, "soak-the-rich":98, "thick-set":98, "in-crowd":98, "group-think":98, "lubricity":98, "larger-than-life-size":98, "much-reduced":98, "mispronounces":98, "paned":98, "double-pane":98, "foul-tasting":98, "cold-tolerant":98, "microgram":98, "microenvironment":98, "platefuls":98, "papillon":98, "four-hole":98, "flag-raising":98, "four-shot":98, "housebreaking":98, "crisis-ridden":98, "exactingly":98, "five-team":98, "downtrend":98, "calorically":98, "chest-thumping":98, "tomblike":98, "strawlike":98, "teabags":98, "six-shot":98, "self-affirming":98, "sixteen-hour":98, "racoon":98, "stateof-the-art":98, "spaghetti-strap":98, "unpruned":98, "shuttle-bus":98, "expense-paid":98, "airsickness":98, "cube-shaped":98, "reignites":98, "pedants":98, "minuets":98, "flash-fried":98, "gas-tax":98, "dilettantism":98, "quick-growing":98, "quick-strike":98, "outgun":98, "higher-frequency":98, "higher-power":98, "incise":98, "incising":98, "second-season":98, "spectroscopist":98, "spendthrifts":98, "the-art":98, "trophy-class":98, "shingle-style":98, "skill-position":98, "solitaries":98, "zests":98, "chansons":98, "characterise":98, "anthropomorphized":98, "anti-climax":98, "compatibilities":98, "compliantly":98, "flogs":98, "oversampled":98, "no-names":98, "two-foot-wide":98, "tap-tapping":98, "tipsily":98, "riggings":98, "right-sized":98, "prison-issue":98, "readiest":98, "orange-and-white":98, "lumberman":98, "land-hungry":98, "greatcoats":98, "hand-size":98, "hand-laid":98, "jackknifes":98, "bridegrooms":98, "despatched":98, "fullsize":98, "five-o'clock":98, "torchlit":98, "torn-out":98, "three-mile-long":98, "technophile":98, "skippered":98, "whirlybird":98, "whipsaw":98, "whomp":98, "well-drilled":98, "unlimbered":98, "unmannerly":98, "mega-mergers":98, "more-traditional":98, "not-too-sweet":98, "one-block":98, "redistricted":98, "psychoanalytically":98, "deducible":98, "counter-terrorist":98, "free-lunch":98, "fervour":98, "bloviating":98, "blue-and-red":98, "blue-chippers":98, "self-diagnostic":98, "reemphasizing":98, "restyling":98, "now-common":98, "one-offs":98, "overheats":98, "honey-mustard":98, "foot-and-a-half":98, "half-convinced":98, "eagled":98, "superspeedway":98, "six-five":98, "soft-pedaling":98, "seventh-generation":98, "season-opener":98, "stepladders":98, "weightiest":98, "wonderings":98, "salivation":98, "rededicating":98, "prototyped":98, "mierda":98, "hairballs":98, "government-operated":98, "digitalized":98, "defoliated":98, "defoliant":98, "defoliants":98, "defenselessness":98, "court-supervised":98, "connived":98, "ciceronian":98, "agates":98, "wolflike":98, "whitehaired":98, "whitewall":98, "excretes":98, "fecal-oral":98, "fox-fur":98, "dreariest":98, "daybeds":98, "chin-up":98, "re-enforce":98, "pro-black":98, "nonagenarian":98, "noncoms":98, "mockumentary":98, "jazzier":98, "large-eyed":98, "lower-rated":98, "towel-dried":98, "splenetic":98, "sedulously":98, "cockamamy":98, "countermovement":98, "below-ground":98, "dichotomize":98, "repairers":98, "risings":98, "pluralization":98, "oleo":98, "individualizes":98, "midstep":98, "dreamscapes":98, "fishwife":98, "farmhouse-style":98, "fish-processing":98, "disinterred":98, "bunts":98, "cheeseheads":98, "cleated":98, "african-based":98, "prespecified":98, "pressure-filled":98, "president/general":98, "page-turning":98, "pig-headed":98, "mistranslation":98, "mistrusting":98, "mistake-prone":98, "multi-part":98, "non-person":98, "vibration-free":98, "swains":98, "self-exposure":98, "square-rigged":98, "vainglory":98, "turn-down":98, "thumpers":98, "event-planning":98, "enfilade":98, "crenellations":98, "cricketer":98, "autobiographically":98, "bullheaded":98, "bullishness":98, "bookmarked":98, "interdictions":98, "immutably":98, "modified-v":98, "mashers":98, "potholders":98, "untwisting":98, "unstretched":98, "unsparingly":98, "stiff-armed":98, "tail-wagging":98, "summer-weight":98, "power-packed":98, "perpetual-motion":98, "nonobvious":98, "oil-primed":98, "gateposts":98, "bare-knuckles":98, "about-to-be":98, "third-lowest":98, "tweener":98, "virus-free":98, "up-scale":98, "up-todate":98, "unwounded":98, "upholsterers":98, "get-ups":98, "horse-race":98, "horniness":98, "ill-educated":98, "open-ocean":98, "open-face":98, "owner-operator":98, "earlymorning":98, "dirtbags":98, "double-decked":98, "finger-like":98, "color-blindness":98, "candy-cane":98, "cannibalization":98, "buck-naked":98, "budded":98, "big-tent":98, "colophon":98, "demagogy":98, "premeditate":98, "premix":98, "nymphet":98, "for-hire":98, "vitro":98, "vitalize":98, "vogues":98, "unissued":98, "unwitnessed":98, "aluminized":98, "hayseeds":98, "murder-mystery":98, "nonmigratory":98, "plebs":98, "queerest":98, "unstoppered":98, "sex-discrimination":98, "micro-managing":98, "intermarrying":98, "high-culture":98, "book-publishing":98, "applewood-smoked":98, "comeliness":98, "firm-fleshed":98, "fanzines":98, "ten-foot-tall":98, "synergetic":98, "reconciliatory":98, "riverways":98, "round-eyed":98, "roundball":98, "turning-point":98, "non-paying":98, "neo-victorian":98, "press-ganged":98, "marble-size":98, "click-clack":98, "datelines":98, "ex-cops":98, "fitly":98, "editable":98, "enrichments":98, "health-plan":98, "over-stuffed":98, "propitiatory":98, "propane-powered":98, "pre-interview":98, "repairer":98, "backlist":98, "seedheads":98, "timed-release":98, "tangy-sweet":98, "understandability":98, "unclad":98, "undervaluing":98, "light-pollution":98, "jazzed-up":98, "in-services":98, "reinscribing":98, "cross-trained":98, "becomingly":98, "water-filtration":98, "weaker-than-expected":98, "figure-ground":98, "front-mounted":98, "rageful":98, "yaws":98, "well-populated":98, "warmed-up":98, "small-farm":98, "steepling":98, "sodality":98, "tarp-covered":98, "door-way":98, "film-makers":98, "isometrically":98, "less-polluting":98, "most-recent":98, "no-tolerance":98, "shiftings":98, "preconscious":98, "blue-footed":98, "blue-jean":98, "astringency":98, "extortions":98, "god's-eye":98, "philatelist":98, "medium-scale":98, "long-blooming":98, "irenic":98, "well-engineered":98, "sophism":98, "designators":98, "despond":98, "ego-centered":98, "choo-choo":98, "computer-like":98, "deactivates":98, "deadeye":98, "blood-flow":98, "anti-fungal":98, "anti-environment":98, "keynoter":98, "hand-finished":98, "non-musical":98, "oak-lined":98, "ready-to-serve":98, "stock-trading":98, "patinated":98, "patronization":98, "frailest":98, "game-clinching":98, "guest-starred":98, "guerrilla-style":98, "cloud-free":98, "devoutness":98, "elastically":98, "shirtwaists":98, "squeezer":98, "squeegees":98, "trailless":98, "vindicator":98, "smoke-and-mirrors":98, "secret-police":98, "midchest":98, "quick-and-easy":98, "boy-man":98, "boy/girl":98, "bowties":98, "excisions":98, "kabbalist":98, "heavy-weight":98, "re-assess":98, "coal-powered":98, "scum-sucking":98, "sociopathy":98, "triaged":98, "twirler":98, "bobbles":98, "brown-sugar":98, "anti-male":98, "anti-obesity":98, "assimilable":98, "darns":98, "grey-green":98, "handcarved":98, "furl":98, "maternal-fetal":98, "constitutively":98, "anticonvulsant":98, "fall-blooming":98, "demoralizes":98, "panelled":98, "tumblehome":98, "single-strand":98, "ticketholder":98, "sleep-overs":98, "school-district":98, "hoochie":98, "duck-hunting":98, "fifes":98, "exudate":98, "bombmaker":98, "antipiracy":98, "initialing":98, "inhering":98, "many-splendored":98, "re-writing":98, "overtopped":98, "motor-voter":98, "motorcoach":98, "two-note":98, "single-serve":98, "undercounts":98, "negress":98, "evil-doers":98, "everlastingly":98, "bogie":98, "banns":98, "micromachining":98, "hierarchs":98, "hidey-holes":98, "implementable":98, "downward-pointing":98, "brown-headed":98, "brome":98, "thistledown":98, "self-acknowledged":98, "sheerness":98, "sociodemographics":98, "resettles":98, "scumble":98, "space/time":98, "concerti":98, "breaststroker":98, "blaze-orange":98, "free-traders":98, "freed-up":98, "numbskull":98, "hollow-point":98, "inflations":98, "ice-water":98, "hardscape":98, "degreasing":98, "boy-band":98, "collinear":98, "mycotic":98, "signup":98, "typologically":98, "presbyter":98, "ratifications":98, "feminizing":98, "accountings":98, "channeler":98, "hatchings":98, "glycosylated":98, "patient-doctor":98, "transnationals":98, "uncoupling":98, "print-based":98, "post-docs":98, "ball-sized":98, "co-creation":98, "formalizes":98, "threshed":98, "tridents":98, "well-child":98, "usernames":98, "vacuum-tube":98, "waist-to-hip":98, "wait-listed":98, "inexorability":98, "male-bashing":98, "male-dominant":98, "polltaker":98, "psychoneuroimmunology":98, "durn":98, "dicking":98, "diegesis":98, "flourescent":98, "ropers":98, "fincas":98, "homilist":98, "grant-writing":98, "dinks":98, "ethnic/cultural":98, "bougainvillaea":98, "small-unit":98, "seven-week-old":98, "warmblooded":98, "well-sealed":98, "white-tail":98, "westernizers":98, "point-of-purchase":98, "ideographs":98, "long-track":98, "fifty-thousand":98, "dihydrotestosterone":98, "diffraction-limited":98, "coeditors":98, "congruently":98, "wealth-creating":98, "word-processor":98, "bedmates":98, "copulated":98, "close-order":98, "re-interview":98, "pro-industry":98, "oscilloscopes":98, "palpate":98, "inadmissibility":98, "interdicted":98, "light-heavyweight":98, "benefaction":98, "air-time":98, "cocoa-colored":98, "conformable":98, "electronic-mail":98, "doeskin":98, "fiberfill":98, "pre-opening":98, "over-reacting":98, "oligopolies":98, "petiole":98, "mained":98, "data-intensive":98, "low-security":98, "green-skinned":98, "popish":98, "peen":98, "neofascist":98, "multi-sport":98, "multi-method":98, "obliqueness":98, "threadfin":98, "ratlike":98, "rabbit-skin":98, "unbarred":98, "vasodilators":98, "energy-trading":98, "down-the-line":98, "interleaved":98, "potassium-rich":98, "remorsefully":98, "playoff-bound":98, "cake-decorating":98, "adult-contemporary":98, "thinnings":98, "routefinding":98, "yes-man":98, "zebra-print":98, "zillionth":98, "insect-eating":98, "manoeuvres":98, "rapiers":98, "faithbased":98, "direct-to-video":98, "delist":98, "amas":98, "buckler":98, "cerium":98, "big-studio":98, "bikeways":98, "ranunculus":98, "ill-assorted":98, "liberalizations":98, "fulfillments":98, "wainscot":98, "refinances":98, "twelve-tone":98, "littleneck":98, "jeweller":98, "high-dividend":98, "first-draft":98, "discoloured":98, "crew-cab":98, "bat-winged":98, "topsy":98, "scourging":98, "small-block":98, "functionalists":98, "low-traffic":98, "data-transfer":98, "derivable":98, "clickety-clack":98, "pre-competitive":98, "pre-european":98, "goonies":98, "counterdiscourse":98, "blindfolding":98, "palliation":98, "mock-heroic":98, "multilink":98, "pro-civil":98, "puzzlers":98, "carryon":98, "unoiled":98, "dominators":98, "pointlike":98, "raffling":98, "rereadings":98, "woodbox":98, "specialisation":98, "bottled-water":98, "resurvey":98, "satraps":98, "narrativization":98, "die-cut":98, "blue-and-orange":98, "psychobiology":98, "vacation-home":98, "welfarism":98, "wind-surfing":98, "stringless":98, "rotisseries":98, "designees":98, "anti-malaria":98, "non-participant":98, "sundowner":98, "patient-specific":98, "phragmites":98, "overprescribing":98, "leaseholder":98, "cloudtops":98, "culture-based":98, "deconstructivist":98, "revenant":98, "revenue-raising":98, "rubbly":98, "zero-emissions":98, "yodeled":98, "troubleshooters":98, "tilde":98, "crackhouse":98, "dosimeters":98, "flappy":98, "gynaecologists":98, "pipe-cleaner":98, "free-weight":98, "blastocysts":98, "unposed":98, "subventions":98, "reshelving":98, "downward-sloping":98, "edgeless":98, "ex-yugoslavia":98, "ex-klansman":98, "firebrick":98, "firehose":98, "family-law":98, "probated":98, "liken-type":98, "ringlike":98, "tensioned":98, "re-presenting":98, "manufacturable":98, "adjudications":98, "attitudinally":98, "debrided":98, "electrocardiographic":98, "electric-utility":98, "alpines":98, "low-orbit":98, "libero":98, "non-support":98, "double-quick":98, "ex-offender":98, "cooter":98, "officiant":98, "social-class":98, "subwoofers":98, "scuppers":98, "breakwaters":98, "coat-check":98, "priapism":98, "end-game":98, "bowhunt":98, "al-maliki":98, "mutual-aid":98, "signed-ranks":98, "prepayments":98, "prepubertal":98, "cosmogonic":98, "dewlap":98, "cell-to-cell":98, "celles":98, "photodetectors":98, "spinnerets":98, "unconfessed":98, "landscape-level":98, "anti-fascists":98, "aspirator":98, "aldermanic":98, "chocolate-hazelnut":98, "formalisms":98, "full-time-equivalent":98, "railyards":98, "leg-hold":98, "nabob":98, "associativity":98, "brochettes":98, "concurrences":98, "cycler":98, "half-degree":98, "war-room":98, "step-children":98, "terrines":98, "wingspread":98, "yaller":98, "zoomable":98, "well-salted":98, "rescissions":98, "followership":98, "connectionist":98, "wheelspin":98, "cartes":98, "braille-reading":98, "post-school":98, "language-arts":98, "lowest-energy":98, "market-determined":98, "market-like":98, "time-averaged":98, "enology":98, "mermen":98, "kerygma":98, "popemobile":98, "claudication":98, "hyper-real":98, "athletic-shoe":98, "power-up":98, "rebloom":98, "unvanquished":98, "scatterplots":98, "sonship":98, "merger-related":98, "open-mic":98, "public-lands":98, "double-lane":98, "early-twentieth":98, "early-career":98, "credit-bearing":98, "catamounts":98, "for-pay":98, "surplice":98, "self-similar":98, "short-wheelbase":98, "up-armored":98, "vocative":98, "smooth-muscle":98, "adult-like":98, "lithotripsy":98, "basketmakers":98, "side-scan":98, "reconfirmation":98, "riveter":98, "multi-institutional":98, "laminations":98, "lifestyle-related":98, "dragsters":98, "revascularization":98, "caddisfly":98, "diamond-like":98, "pre-human":98, "mythopoeic":98, "intercommunity":98, "multiflora":98, "rickrack":98, "symphysis":98, "agentive":98, "geoduck":98, "terraformed":98, "smartweed":98, "karats":98, "soft-power":98, "broad-band":98, "legalist":98, "headnotes":98, "anti-crisis":98, "privateering":98, "quadricep":98, "riflescopes":98, "spiritism":98, "frameset":98, "alanine":98, "dewlaps":98, "prescientific":98, "quicky":98, "quenelle":98, "joined-up":98, "freerider":98, "eight-pointed":98, "sick-leave":98, "tablespoon-protein":98, "microbiologically":98, "antimodern":98, "crashworthy":98, "lassies":98, "superfan":98, "payables":98, "ingrowth":98, "buggering":98, "extraocular":98, "unimplemented":98, "superhard":98, "circumnavigator":98, "other-than-human":98, "periorbital":98, "five-three":98, "ectomorph":98, "center-console":98, "tri-colored":98, "arterioles":98, "post-franco":98, "nunneries":98, "heat-moldable":98, "member-at-large":98, "perturbative":98, "mommie":98, "acceptors":98, "accelerative":98, "dosimeter":98, "earwig":98, "encephalopathies":98, "cytoskeleton":98, "pumpkinseed":98, "stuntwoman":98, "bladers":98, "flip-out":98, "gandy":98, "overprescribed":98, "quad-core":98, "aliasing":98, "exobiology":98, "free-exercise":98, "vees":98, "photo-essay":98, "e-businesses":98, "bird-of-paradise":98, "anaplastic":98, "small-space":98, "geochemists":98, "churchwide":98, "kairos":98, "multimeter":98, "large-caps":98, "dressing-gown":98, "niblick":98, "nicker":98, "gemologist":98, "anterior-posterior":98, "retsina":98, "pull-apart":98, "self-focus":98, "host-specific":98, "impermeability":98, "mass-energy":98, "gastrostomy":98, "nonpsychiatric":98, "oilseed":98, "transonic":98, "manic-depressives":98, "euro-zone":98, "unisexual":98, "nonpoint-source":98, "lycanthropy":98, "microteaching":98, "dancefloor":98, "vesicular":98, "mesomorph":98, "orientational":98, "entelechy":98, "fluorides":98, "fluconazole":98, "nonreferred":98, "propagator":98, "cross-ownership":98, "cross-links":98, "mobilities":98, "long-radius":98, "informal-sector":98, "butterbeans":98, "cohos":98, "ethnic-studies":98, "eaglets":98, "teardowns":98, "extirpations":98, "reading-related":98, "positive-negative":98, "langoustines":98, "khans":98, "hand-helds":98, "phrasebook":98, "nanodevices":98, "millimeter-wave":98, "diuresis":98, "dual-axis":98, "prescreened":98, "signes":98, "typographers":98, "non-handicapped":98, "district-leading":98, "all-at-once":98, "microliter":98, "damselfly":98, "nehruvian":98, "seeress":98, "single-session":98, "rhinoviruses":98, "fresh-grated":98, "boneset":98, "antiregulatory":98, "antirejection":98, "freshwaters":98, "mini-mills":98, "mesosphere":98, "allopatric":98, "red-cell":98, "decidable":98, "pretextual":98, "lorgnette":98, "skin-covered":98, "abbe":98, "linear-pull":98, "tapetum":98, "vegetable-oil":98, "poison-pen":98, "polarizers":98, "preceptors":98, "moonlet":98, "saltbush":98, "multicycle":98, "palmtops":98, "palfrey":98, "scintillator":98, "unpitched":98, "neo-darwinian":98, "syndicalist":98, "denarius":98, "potentiation":98, "voicebox":98, "content-neutral":98, "fugu":98, "non-cognitive":98, "polyandrous":98, "credit-hour":98, "up-regulation":98, "transplacental":98, "adult-themed":98, "miasmatic":98, "neuroplasticity":98, "creolized":98, "billabong":98, "vasoconstrictors":98, "replacement-cost":98, "pietas":98, "pressure-induced":98, "press-fit":98, "hot-rodding":98, "fitna":98, "thracians":98, "wolfskin":98, "kickboard":98, "cocaine-related":98, "textualist":98, "shareowners":98, "hegelians":98, "burgoo":98, "domestic-partner":98, "resole":98, "passphrase":98, "oak-leaf":98, "morphometry":98, "revetment":98, "zere":98, "inflators":98, "platysma":98, "fixed-base":98, "meta-narrative":98, "nonabusive":98, "postschool":98, "postern":98, "transcanal":98, "non-capitalist":98, "teosinte":98, "tradeshow":98, "underglazes":98, "single-origin":98, "postexposure":98, "orrery":98, "limewood":98, "nonmanual":98, "criterial":98, "pretexting":98, "near-luxury":98, "center-channel":98, "angiogenic":98, "despatch":98, "extinguishment":98, "floodway":98, "sutler":98, "tertiles":98, "bustards":98, "socle":98, "electrosurgical":98, "in-system":98, "moderate-fat":98, "galactose":98, "student-reported":98, "host-parasite":98, "head-count":98, "productivities":98, "daemonic":98, "demand-reduction":98, "claspers":98, "employment-at-will":98, "bilabial":98, "psychostimulant":98, "raphe":98, "halloo":98, "reflection-in-action":98, "spin-down":98, "pacted":98, "square-root":98, "down-regulation":98, "event-specific":98, "mask-making":98, "nonbaryonic":98, "dichondra":98, "code-based":98, "sediment-water":98, "split-run":98, "nociceptive":98, "year-class":98, "notarial":98, "computer-intensive":98, "civil-law":98, "personality-based":98, "maculopapular":98, "macroinvertebrate":98, "no-scalpel":98, "self-pollination":98, "holmium":98, "kabbalists":98, "plastination":98, "interoceptive":98, "rille":98, "body-piercing":98, "transcervical":98, "nulling":98, "non-anonymous":98, "many-to-many":98, "low-fit":98, "moundbuilders":98, "antlerless-only":98, "postdiction":98, "inter-club":98, "coalescent":98, "learning-styles":98, "paraphilia":98, "muzzleloader-only":98, "consumer-run":98, "anti-klan":98, "cumulating":98, "world-economy":98, "anaclitic":98, "part-whole":98, "supervisee":98, "risedronate":98, "involuntariness":98, "octreotide":98, "doweling":98, "claw-and-ball":98, "sideslip":98, "yetis":98, "polymyositis":98, "natron":98, "henges":98, "double-crested":98, "intracoronary":98, "ecolodge":98, "liposarcoma":98, "languaging":98, "hagiographer":98, "ethnic-racial":98, "diploids":98, "filioque":98, "washerman":98, "settleable":98, "no-choice":98, "sociogram":98, "triannual":98, "doulas":98, "nominalization":98, "non-aviation":98, "rhizosphere":98, "apocalyptically":99, "early-rising":99, "employee-benefits":99, "enamoured":99, "finer-grained":99, "color-blocked":99, "gray-streaked":99, "gesticulate":99, "mangles":99, "ill-effects":99, "open-collar":99, "rapaciousness":99, "waffler":99, "refile":99, "somnambulant":99, "skywards":99, "thinly-veiled":99, "trashcans":99, "upper-floor":99, "uplinks":99, "incriminated":99, "kneejerk":99, "head-scratcher":99, "money-wise":99, "aluminum-sided":99, "apathetically":99, "gastronomically":99, "gutty":99, "calf-deep":99, "blunt-spoken":99, "unsnarl":99, "smooth-faced":99, "spermicidal":99, "reboarded":99, "reassume":99, "pardonable":99, "unvaried":99, "untidily":99, "late-fall":99, "nonempirical":99, "off-handed":99, "outbidding":99, "discoursed":99, "discomfit":99, "ever-burgeoning":99, "crepe-paper":99, "comedically":99, "cremating":99, "boomeranged":99, "bulkiest":99, "slow-selling":99, "small-capitalization":99, "sluttish":99, "scoffers":99, "unaggressive":99, "ten-foot-long":99, "topdown":99, "tunesmith":99, "tree-like":99, "soi-disant":99, "retributions":99, "retrenched":99, "revamps":99, "turquoise-colored":99, "too-perfect":99, "unaccepted":99, "page-long":99, "pigeon-holed":99, "preservative-free":99, "misstate":99, "hero-worship":99, "instructively":99, "foreign-looking":99, "dream-come-true":99, "caramelization":99, "aqua-blue":99, "amortizing":99, "boozers":99, "battered-women":99, "wasp-waisted":99, "work-worn":99, "zombielike":99, "tinder-dry":99, "sugar-laden":99, "stenographic":99, "suckles":99, "smash-mouth":99, "silkiness":99, "special-forces":99, "genteelly":99, "frost-covered":99, "digitizes":99, "cut-crystal":99, "custommade":99, "agencys":99, "beachwear":99, "cofound":99, "partakers":99, "overeducated":99, "poetry-writing":99, "party-planning":99, "nipper":99, "overdramatic":99, "on-again-off-again":99, "home-town":99, "inflects":99, "homerooms":99, "media-friendly":99, "doomsaying":99, "delicate-looking":99, "hellions":99, "film-production":99, "butter-soft":99, "beaned":99, "motherlode":99, "most-populous":99, "one-millionth":99, "one-level":99, "one-family":99, "less-powerful":99, "inkwells":99, "preassembled":99, "reductively":99, "pseudonymously":99, "saucer-eyed":99, "self-deceptions":99, "self-destructs":99, "then-white":99, "healthiness":99, "hog-wild":99, "heart-thumping":99, "individualities":99, "monosyllable":99, "quirkily":99, "nice-sized":99, "mysteriousness":99, "over-eager":99, "anoraks":99, "curlicued":99, "dog-like":99, "documentable":99, "friction-free":99, "stopped-up":99, "stoutest":99, "super-charged":99, "text-message":99, "truckful":99, "toy-like":99, "sharp-looking":99, "salving":99, "splatted":99, "snooped":99, "uncleaned":99, "uncomfortable-looking":99, "light-hitting":99, "lower-tech":99, "hawk-like":99, "guilelessness":99, "pixieish":99, "re-examines":99, "federalized":99, "daydreamer":99, "buttondown":99, "buttonholing":99, "bed-ridden":99, "wooziness":99, "wrapped-up":99, "wire-to-wire":99, "wire-framed":99, "wish-fulfillment":99, "whitens":99, "whole-kernel":99, "unplayed":99, "ribaldry":99, "shotmaker":99, "sword-wielding":99, "sleepwalked":99, "sour-smelling":99, "tracksuits":99, "ticky-tacky":99, "two-ply":99, "traffic-free":99, "underpay":99, "unguent":99, "peaches-and-cream":99, "purposed":99, "low-balled":99, "duct-tape":99, "ever-tighter":99, "ever-loving":99, "glazed-over":99, "brush-choked":99, "jasmine-scented":99, "hard-living":99, "high-purity":99, "lastest":99, "like-new":99, "marked-down":99, "pithily":99, "rimed":99, "peplum":99, "pistol-packing":99, "much-larger":99, "thin-bladed":99, "tauter":99, "shamefacedly":99, "underclasses":99, "unemotionally":99, "unexcited":99, "thousand-plus":99, "sure-handed":99, "sixteen-year-olds":99, "spokeswomen":99, "sheathes":99, "raceways":99, "household-name":99, "fur-bearing":99, "handed-down":99, "potshot":99, "nongreasy":99, "newly-arrived":99, "dark-blond":99, "crimps":99, "fast-forwards":99, "ex-mother-in-law":99, "blurrier":99, "cherry-picked":99, "browbeating":99, "arrowing":99, "absented":99, "freezing-cold":99, "melees":99, "melodiously":99, "minor-key":99, "minor-leaguer":99, "home-bound":99, "near-extinction":99, "near-hysterical":99, "near-by":99, "non-french":99, "non-factor":99, "non-iraqi":99, "operationalizes":99, "pearl-white":99, "re-analysis":99, "regular-guy":99, "spadework":99, "slow-footed":99, "scythed":99, "sententious":99, "millenarianism":99, "one-sidedness":99, "pontiffs":99, "pooh-bahs":99, "indelicately":99, "gamin":99, "frame-work":99, "gamboled":99, "card-playing":99, "bush-league":99, "acerbity":99, "baggier":99, "ejaculations":99, "children's-book":99, "decollete":99, "self-medicate":99, "stabled":99, "pulped":99, "presale":99, "stupefyingly":99, "recognizability":99, "reprioritize":99, "speed-reading":99, "talent-rich":99, "tragedian":99, "boy-crazy":99, "accessibly":99, "army-backed":99, "deigning":99, "end-of-day":99, "exboyfriend":99, "gold-embossed":99, "musty-smelling":99, "nightcaps":99, "nor'easters":99, "outdrew":99, "inbuilt":99, "cure-alls":99, "doll-sized":99, "extra-heavy":99, "counter-arguments":99, "all-rookie":99, "blue-lit":99, "blue-helmeted":99, "beseeches":99, "not-yet":99, "not-to-be-missed":99, "not-so-veiled":99, "once-grand":99, "once-booming":99, "not-so-obvious":99, "overcrowd":99, "resourced":99, "hobnailed":99, "just-concluded":99, "jury-rig":99, "more-experienced":99, "nine-figure":99, "mediumsized":99, "tear-jerking":99, "three-month-long":99, "tricolored":99, "threebedroom":99, "torturously":99, "selfcontrol":99, "skinniness":99, "skittery":99, "sorry-looking":99, "vacant-eyed":99, "vacuum-cleaner":99, "unlived":99, "well-composed":99, "worried-looking":99, "woundedness":99, "ball-point":99, "ball-shaped":99, "bloodthirstiness":99, "computer-guided":99, "co-anchors":99, "bricked-up":99, "brick-walled":99, "disquietude":99, "entwines":99, "pimiento-stuffed":99, "relocked":99, "landlubber":99, "image-makers":99, "sneakier":99, "snappily":99, "shaggy-dog":99, "scriptwriting":99, "thermal-imaging":99, "stingily":99, "tip-toeing":99, "sneeringly":99, "spindle-shaped":99, "spine-chilling":99, "uncustomary":99, "house-baked":99, "greasily":99, "neaten":99, "needle-nosed":99, "five-five":99, "desolated":99, "dead-white":99, "brick-faced":99, "breviary":99, "anti-fur":99, "worthiest":99, "short-hand":99, "skinny-dip":99, "selfconsciousness":99, "trigonometric":99, "nine-piece":99, "long-billed":99, "inertness":99, "redialed":99, "raillery":99, "predetermination":99, "blotchiness":99, "broadminded":99, "ferrules":99, "diethylstilbestrol":99, "higher-pitched":99, "high-test":99, "mid-price":99, "practises":99, "quick-hit":99, "east-to-west":99, "repressiveness":99, "self-maintaining":99, "ruddiness":99, "cultivable":99, "comped":99, "drydock":99, "anti-bourgeois":99, "anthropomorphizing":99, "blade-like":99, "channel-surfing":99, "channelling":99, "flintlocks":99, "hatboxes":99, "patricide":99, "one-speed":99, "measureable":99, "millpond":99, "slope-shouldered":99, "statesman-like":99, "price-competitive":99, "ophthalmoscope":99, "non-irish":99, "non-insulin-dependent":99, "iced-tea":99, "gazers":99, "deceivingly":99, "eight-plus":99, "annulling":99, "arrogating":99, "backstreets":99, "bad-luck":99, "bleached-blond":99, "conciseness":99, "concert-hall":99, "chestnut-brown":99, "all-electronic":99, "assaying":99, "ex-prime":99, "enlistee":99, "downsizes":99, "crisp-fried":99, "cooperations":99, "commited":99, "museum-like":99, "oft-heard":99, "offworld":99, "high-alpine":99, "six-state":99, "self-advertisement":99, "unessential":99, "underbid":99, "people-friendly":99, "remolding":99, "probings":99, "larger-sized":99, "kilometer-long":99, "kilted":99, "crash-lands":99, "crash-and-burn":99, "bohemianism":99, "bankside":99, "firebombings":99, "crayoned":99, "damasks":99, "debris-strewn":99, "corned-beef":99, "fresh-smelling":99, "frenemy":99, "big-bodied":99, "re-training":99, "two-unit":99, "two-round":99, "switchbacked":99, "soul-crushing":99, "state-backed":99, "subdominant":99, "shoulder-mounted":99, "sling-back":99, "semi-dark":99, "unpiloted":99, "unpolitical":99, "wear-and-tear":99, "way-back":99, "unmowed":99, "whited":99, "woman-owned":99, "woodpiles":99, "chinked":99, "exhaustedly":99, "flatterers":99, "entomb":99, "post-thanksgiving":99, "hawkishness":99, "highly-paid":99, "inactivating":99, "splendiferous":99, "sample-size":99, "time-crunched":99, "time-table":99, "fettle":99, "airheads":99, "artisanship":99, "counterprogramming":99, "cadging":99, "break-ups":99, "break-dancing":99, "oleaginous":99, "mystifications":99, "plutocratic":99, "pre-menopausal":99, "rentable":99, "midevening":99, "monotones":99, "invigoration":99, "healthy-eating":99, "target-rich":99, "tart-sweet":99, "six-month-long":99, "soft-pedaled":99, "soft-edged":99, "self-correct":99, "longsleeved":99, "cow-calf":99, "footless":99, "frump":99, "homier":99, "dinner-time":99, "factory-like":99, "emerging-markets":99, "moodier":99, "irking":99, "home-related":99, "parti-colored":99, "rocket-powered":99, "church-affiliated":99, "conniver":99, "congenially":99, "spectres":99, "winterberry":99, "well-proven":99, "amoebae":99, "bunchgrass":99, "celebrityhood":99, "chemical-weapons":99, "cheesehead":99, "dismissiveness":99, "institution-wide":99, "insurrectionists":99, "lampblack":99, "life-blood":99, "hot-chocolate":99, "fumigated":99, "gigolos":99, "non-sexist":99, "non-politician":99, "non-professionals":99, "pressurizes":99, "pilferage":99, "piffle":99, "unaccountability":99, "ultralow":99, "teen-oriented":99, "refuels":99, "rattly":99, "shitstorm":99, "squawky":99, "vaginitis":99, "vasoactive":99, "roach-infested":99, "product-specific":99, "steepen":99, "steamier":99, "comanager":99, "plant-filled":99, "multistoried":99, "high-angle":99, "late-20th":99, "hubbies":99, "unweight":99, "outshoot":99, "outsmarts":99, "pleaders":99, "sextants":99, "unsterilized":99, "unscrambled":99, "unseaworthy":99, "stiff-upper-lip":99, "still-wet":99, "carved-out":99, "litigiousness":99, "law-firm":99, "knackered":99, "upper-story":99, "trapezes":99, "uninterpreted":99, "refigure":99, "rubber-band":99, "wagon-wheel":99, "yellow-tinted":99, "public-radio":99, "operatically":99, "mischaracterizing":99, "ill-favored":99, "horselike":99, "loudmouths":99, "double-knit":99, "double-crossing":99, "dirt-road":99, "amateurishly":99, "aerially":99, "advanced-technology":99, "bigger-is-better":99, "bike-handling":99, "canonically":99, "charlatanism":99, "chateaus":99, "bucko":99, "bikeway":99, "base-priced":99, "finiteness":99, "demand-driven":99, "daintiness":99, "liberal-left":99, "lakeshores":99, "hemisphere-wide":99, "physical-therapy":99, "polysemous":99, "sonars":99, "skyways":99, "uninterruptible":99, "upper-arm":99, "volleyballs":99, "incommunicable":99, "mid-1600s":99, "mid-1860s":99, "blueblood":99, "atriums":99, "summarises":99, "renovator":99, "nonprint":99, "late-period":99, "jewish-americans":99, "glam-rock":99, "lipstick-red":99, "lurker":99, "mash-ups":99, "evacuates":99, "bassoonist":99, "auto-racing":99, "classmen":99, "cheap-shot":99, "road-kill":99, "sacristan":99, "unbendable":99, "unbiblical":99, "squalled":99, "shoed":99, "scalds":99, "three-foot-wide":99, "non-skid":99, "obscuration":99, "derogate":99, "date-night":99, "well-motivated":99, "wideness":99, "silk-covered":99, "coffin-sized":99, "cigarette-smoking":99, "biological-weapons":99, "after-sales":99, "anaerobically":99, "estrogen-replacement":99, "overgrow":99, "overharvested":99, "on-hand":99, "homecourt":99, "film-noir":99, "film-maker":99, "food-poisoning":99, "findable":99, "butter-flavored":99, "bean-counters":99, "birchwood":99, "bearberry":99, "arcaded":99, "one-cent":99, "noisiness":99, "now-or-never":99, "one-in-three":99, "honor-roll":99, "honey-baked":99, "raja":99, "ramified":99, "six-guns":99, "theme-based":99, "pre-installed":99, "nonsecular":99, "nonrestrictive":99, "cadmiums":99, "beloveds":99, "seed-bearing":99, "undertaxed":99, "highly-publicized":99, "hatmaker":99, "reincorporated":99, "pyridoxine":99, "noncorporate":99, "oddsmaker":99, "palling":99, "multifaith":99, "disproportionally":99, "cross-media":99, "wimped":99, "totalities":99, "reinterviewed":99, "semicustom":99, "synced":99, "throne-like":99, "traffic-control":99, "hook-and-line":99, "half-interest":99, "lacings":99, "low-fi":99, "mini-skirts":99, "attention-seeking":99, "almond-flavored":99, "flyspeck":99, "fire-red":99, "cold-winter":99, "kindergartener":99, "quails":99, "muenster":99, "shanghaied":99, "tatting":99, "stolidity":99, "stomach-turning":99, "she-crab":99, "red-clad":99, "reseated":99, "tea-party":99, "house-smoked":99, "housecoats":99, "monomania":99, "microfibers":99, "liquid-filled":99, "depressants":99, "disfiguration":99, "draft-eligible":99, "cependant":99, "bobbleheads":99, "calved":99, "coalfields":99, "near-religious":99, "peanut-butter-and-jelly":99, "peckers":99, "post-operatively":99, "lockdowns":99, "onion-shaped":99, "one-year-olds":99, "patrilineally":99, "prepacked":99, "gluconate":99, "game-planning":99, "flood-related":99, "least-developed":99, "pullet":99, "ruching":99, "regresses":99, "sign-ups":99, "texturizing":99, "gold-embroidered":99, "black-led":99, "black-majority":99, "construction-related":99, "college-entrance":99, "momentousness":99, "mid-length":99, "espied":99, "deep-seeded":99, "extraconstitutional":99, "gapped":99, "counter-offensive":99, "co-writers":99, "blow-back":99, "all-league":99, "anti-technology":99, "over-the-road":99, "overabundant":99, "overate":99, "three-seat":99, "anti-imperial":99, "blood-shot":99, "benumbed":99, "co-developer":99, "destigmatize":99, "expatiate":99, "full-range":99, "five-hitter":99, "mixed-methods":99, "herstory":99, "relativizes":99, "princeling":99, "pine-needle":99, "two-dimensionality":99, "sacralizing":99, "scrunchy":99, "scrunchie":99, "scrunchies":99, "single-chip":99, "sing-a-long":99, "sunbonnet":99, "two-drink":99, "positive-sum":99, "post-concussion":99, "reactant":99, "instant-message":99, "lancets":99, "dissolutions":99, "co-ceos":99, "anti-evolution":99, "whop":99, "whimsies":99, "stretcher-bearers":99, "respire":99, "long-bearded":99, "co-principal":99, "ferruginous":99, "dickered":99, "night-lights":99, "smokable":99, "smiley-face":99, "service-delivery":99, "roids":99, "trombonists":99, "skill-related":99, "stultify":99, "behavior-modification":99, "unrecovered":99, "pinkeye":99, "non-expert":99, "losingest":99, "h-bombs":99, "heatless":99, "concho":99, "corrugations":99, "drug-war":99, "debunkers":99, "gayest":99, "freemarket":99, "fellahs":99, "bronchioles":99, "clienteles":99, "anti-microbial":99, "assist-to-turnover":99, "crime-prone":99, "mackerels":99, "microhabitat":99, "nonhostile":99, "hi-def":99, "straw-man":99, "thornbushes":99, "recourses":99, "social-insurance":99, "shape-shift":99, "single-sided":99, "stockmen":99, "stocker":99, "occultist":99, "jawbreaker":99, "jasmines":99, "intensifier":99, "intellection":99, "consistory":99, "anticommunists":99, "flyable":99, "frenulum":99, "cruets":99, "clubgoers":99, "overstocking":99, "swivelling":99, "state-like":99, "shoulderwidth":99, "bedrest":99, "cross-linked":99, "chinaware":99, "feebleminded":99, "egg-salad":99, "odium":99, "puzzle-solving":99, "metate":99, "lozenge-shaped":99, "time-and-a-half":99, "fettucine":99, "escalatory":99, "electromagnetically":99, "over-population":99, "heart-valve":99, "straight-and-narrow":99, "preceeding":99, "policy-based":99, "reefers":99, "mine-resistant":99, "cyberwarfare":99, "cowlike":99, "empaneled":99, "moonset":99, "mooed":99, "mood-enhancing":99, "maintenant":99, "ideality":99, "overdubbed":99, "nailhead":99, "phalaenopsis":99, "rockery":99, "requited":99, "pre-order":99, "pre-reading":99, "cut-back":99, "bay-area":99, "burnable":99, "appropriative":99, "battlewagon":99, "data-sharing":99, "non-related":99, "packhorses":99, "green-energy":99, "unaired":99, "sidelocks":99, "slowpoke":99, "aeronaut":99, "euthanizing":99, "massagers":99, "multistrand":99, "mumbly":99, "percipient":99, "late-sixties":99, "oilseeds":99, "nonparty":99, "outvote":99, "professional-development":99, "stigmatic":99, "alternators":99, "bluejay":99, "good-bad":99, "head-butts":99, "untrustworthiness":99, "transregional":99, "refasten":99, "nationstates":99, "fuel-tank":99, "enamelled":99, "chat-room":99, "clarifiers":99, "baseball-only":99, "base-load":99, "euphony":99, "fuel-cell-powered":99, "hornlike":99, "insectivores":99, "pomelo":99, "strongside":99, "gastropod":99, "aluminum-frame":99, "sah":99, "sex-crimes":99, "nonpermanent":99, "linocuts":99, "fortuity":99, "sidestreet":99, "speaker-designate":99, "subskills":99, "gift-tax":99, "keratinocytes":99, "pietists":99, "dauber":99, "education-reform":99, "top-earning":99, "biologies":99, "ampoule":99, "pre-tests":99, "red-eared":99, "icy-cold":99, "x-ray-emitting":99, "filter-feeding":99, "ciliated":99, "one-pieces":99, "megalopolises":99, "lepidopterist":99, "sauerbraten":99, "indoles":99, "middle-ranking":99, "parkinsonian":99, "diatomic":99, "fiancees":99, "backlands":99, "airbases":99, "christocentric":99, "confessionally":99, "true-color":99, "shareholdings":99, "sample-return":99, "pro-nuclear":99, "post-reagan":99, "moated":99, "chinchillas":99, "bedfellow":99, "woodworks":99, "peace-keepers":99, "purplish-blue":99, "hope-filled":99, "caus":99, "alpha-lipoic":99, "death-squad":99, "flys":99, "electric-only":99, "consoler":99, "demographical":99, "sportswomen":99, "ringtones":99, "unexercised":99, "self-aligning":99, "selectiveness":99, "hierarchization":99, "four-power":99, "four-in-hand":99, "internee":99, "microblogging":99, "machine-washable":99, "ass-hole":99, "coaling":99, "backstrap":99, "arsehole":99, "non-golfers":99, "pachuco":99, "acetyl":99, "chilblains":99, "complaisance":99, "introspectively":99, "fencerow":99, "gamelike":99, "gluts":99, "one-race":99, "telegrapher":99, "typographically":99, "sign-and-trade":99, "nightvision":99, "reciprocities":99, "mattocks":99, "loan-sharking":99, "leaf-cutter":99, "higher-intensity":99, "interpretively":99, "college-savings":99, "colliders":99, "contagiousness":99, "a-tall":99, "gold-brown":99, "dogtrot":99, "floor-level":99, "blue-purple":99, "headshake":99, "psychopharmacologist":99, "rainwear":99, "stacker":99, "vapours":99, "alembics":99, "co-champions":99, "co-eds":99, "primulas":99, "oat-bran":99, "ob-gyns":99, "jackdaws":99, "hotel/casino":99, "mezcal":99, "martyrology":99, "corpuscular":99, "ventilator-dependent":99, "redeemers":99, "redistributions":99, "philatelic":99, "jungians":99, "nacre":99, "medium-width":99, "goatskins":99, "gas-operated":99, "armillary":99, "consumer-based":99, "lobules":99, "fermenters":99, "post-graduation":99, "kachinas":99, "flickerings":99, "distension":99, "spaceborne":99, "bronchoalveolar":99, "ectoderm":99, "literary-historical":99, "nonindustrialized":99, "launderette":99, "racewalk":99, "tattler":99, "trans-boundary":99, "doublethink":99, "foundress":99, "four-diamond":99, "in-formation":99, "high-productivity":99, "oceanview":99, "inhomogeneity":99, "low-gain":99, "j'etais":99, "low-ability":99, "submenus":99, "exertional":99, "glomming":99, "postcontact":99, "placelessness":99, "pro-poor":99, "light-collecting":99, "kid-free":99, "time-weighted":99, "code-share":99, "middle/junior":99, "one-drop":99, "one-goal":99, "x-treme":99, "zonation":99, "water-vapor":99, "search-and-seizure":99, "t-statistic":99, "tinsmith":99, "kulaks":99, "salicylate":99, "namaste":99, "ampere":99, "avoidances":99, "biosynthetic":99, "genetic-engineering":99, "entailment":99, "appropriator":99, "autoharp":99, "amnesic":99, "amnestied":99, "popover":99, "non-pregnant":99, "multi-polar":99, "ligations":99, "synecdoches":99, "systemization":99, "small-bump":99, "autobiographic":99, "autarchic":99, "europium":99, "engine-room":99, "nonoperational":99, "musculus":99, "spicules":99, "histamines":99, "mid-coast":99, "transuranic":99, "virus-resistant":99, "oximeter":99, "creative-thinking":99, "adzes":99, "auratic":99, "bilayer":99, "boluses":99, "hempen":99, "basketwork":99, "neuroprotective":99, "mass-mediated":99, "valour":99, "misremembering":99, "afrobeat":99, "bioelectric":99, "bathymetry":99, "clerkships":99, "far-side":99, "self-gift":99, "sprue":99, "turnbuckle":99, "phantasy":99, "infringers":99, "warmness":99, "widenings":99, "nock":99, "honeydews":99, "homologue":99, "shillelagh":99, "boules":99, "cyberwar":99, "food-security":99, "supervisees":99, "ureter":99, "pre-defined":99, "post-sputnik":99, "nerve-sparing":99, "design-build":99, "carrageenan":99, "detoxifier":99, "thyroxine":99, "non-structural":99, "postnuptial":99, "inter-individual":99, "larky":99, "rectifier":99, "monohull":99, "ecumenists":99, "taboret":99, "infectiousness":99, "drypoint":99, "ejectors":99, "explosion-proof":99, "photodiode":99, "end-of-pipe":99, "lean-burn":99, "pre-capitalist":99, "noosphere":99, "dolmen":99, "broad-winged":99, "user-created":99, "drought-related":99, "martyrdoms":99, "pain-related":99, "paintable":99, "print-on-demand":99, "two-course":99, "pelleted":99, "metropolitans":99, "jackleg":99, "conative":99, "meet-ups":99, "n-dimensional":99, "fermion":99, "intratribal":99, "closed-cycle":99, "decon":99, "anthracnose":99, "infanta":99, "tablescape":99, "fast-casual":99, "anti-sandinista":99, "microfracture":99, "pepsin":99, "budworm":99, "num-ber":99, "carpoolers":99, "coppersmith":99, "flashover":99, "post-socialist":99, "ruthenium":99, "scientist-practitioner":99, "rebreather":99, "defatted":99, "tanbark":99, "sodalities":99, "e-tailer":99, "cowman":99, "agonal":99, "self-driving":99, "self-cultivation":99, "photo-quality":99, "one-carat":99, "one-price":99, "one-horned":99, "westernism":99, "waterlines":99, "gracile":99, "country-of-origin":99, "forest-management":99, "multi-drug":99, "non-specialist":99, "multiwavelength":99, "laterite":99, "aestheticized":99, "comediennes":99, "hemochromatosis":99, "creels":99, "money-transfer":99, "alt-azimuth":99, "scratchers":99, "silviculture":99, "retirement-plan":99, "hemiparesis":99, "mentalism":99, "cremains":99, "aetiological":99, "checksum":99, "velocimetry":99, "syndromic":99, "synodal":99, "spawner":99, "pressure-relief":99, "batwings":99, "autodiegetic":99, "stemwinder":99, "siliconized":99, "homogenate":99, "longtemps":99, "agnosia":99, "grapnel":99, "sockeyes":99, "toxin-producing":99, "sinusoids":99, "aryepiglottic":99, "wellbore":99, "lanugo":99, "duckboards":99, "semiwild":99, "unidimensionality":99, "pan-german":99, "in-groups":99, "double-speed":99, "microliters":99, "kinglet":99, "impliedly":99, "four-on-four":99, "hiccoughed":99, "run-stopper":99, "lab-grown":99, "leukotrienes":99, "abscissa":99, "cadastral":99, "acephalous":99, "nanocomputer":99, "knowings":99, "grown-ass":99, "armorial":99, "hypothalamic":99, "antibullying":99, "within-participant":99, "de-stalinization":99, "uncorrectable":99, "tanzanite":99, "trinitarianism":99, "co-nationals":99, "hypoxemia":99, "oncogenes":99, "macrostructural":99, "parameterization":99, "perspectivist":99, "sugarhouse":99, "learning-style":99, "hippogriff":99, "zeolite":99, "presbycusis":99, "epiphysis":99, "loquat":99, "acromion":99, "thomists":99, "bicameralism":99, "laser-induced":99, "frequentist":99, "relationship-based":99, "interclass":99, "inalienability":99, "placebo-treated":99, "nephrite":99, "efficiency-enhancing":99, "whole-food":99, "ribosome":99, "pre-departure":99, "site-built":99, "ethnohistoric":99, "ciliates":99, "inkstand":99, "isotopically":99, "waterbuck":99, "churro":99, "halachic":99, "biocultural":99, "deprogrammer":99, "vice-minister":99, "trenchless":99, "high-diversity":99, "natriuretic":99, "self-sows":99, "thiopental":99, "tokamak":99, "anxiety-inducing":99, "gastric-bypass":99, "caldarium":99, "histiocytic":99, "sextets":99, "polyculture":99, "pterygopalatine":99, "catecholamine":99, "panpipe":99, "multi-objective":99, "lemmas":99, "anaesthetist":99, "isotropy":99, "ethnic-minority":99, "hyphenation":99, "cocoas":99, "configurational":99, "gearmotors":99, "testator":99, "sublease":99, "bitstream":99, "nuchal":99, "bomblet":99, "materialities":99, "music-listening":99, "parallel-port":99, "level-two":99, "lease-purchase":99, "patient-centred":99, "carceral":99, "practice-oriented":99, "macrophyte":99, "degree-days":99, "tech-heads":99, "skipjacks":99, "alembic":99, "printheads":99, "single-bit":99, "technology-mediated":99, "wind-farm":99, "phenotypical":99, "polyamorists":99, "bandsmen":99, "proline":99, "cuirassiers":99, "closed-canopy":99, "mosaicists":99, "magmas":99, "post-implementation":99, "bacteriophage":99, "spoonerisms":99, "ocean-atmosphere":99, "coleaders":99, "fosterage":99, "metatheatrical":99, "thrombolysis":99, "fluidized-bed":99, "nonterritorial":99, "pre-famine":99, "cohousing":99, "consequentialism":99, "agnates":99, "infrasonic":99, "low-tar":99, "clawback":99, "catastrophists":99, "public-key":99, "unit-based":99, "phytic":99, "footrope":99, "reasoners":99, "caprichos":99, "bully/victim":99, "autogenics":99, "conservativeness":99, "cyclosporine":99, "glia":99, "antimicrobial-resistant":99, "ring-plane":99, "transfatty":99, "cryptograms":99, "femicide":99, "elastase":99, "choline-stabilized":99, "enucleated":99, "jackalopes":99, "single-crust":99, "nonwork-related":99, "excitonic":99, "gender-adjusted":99, "fieldbus":99, "chloracne":99, "uniformitarianism":99, "mudskipper":99, "groundling":99, "mathematics-based":99, "interparental":99, "central-western":99, "explantation":99, "opsins":99, "isobath":99, "subtribe":99, "gentoo":99, "proplyds":99, "super-earths":99, "multiple-listing":99, "in-phase":99, "africanism":99, "potentillas":99, "varicocele":99, "gate-array":99, "physician-owned":99, "double-damned":99, "early-successional":99, "bacteriologist":99, "badmouth":99, "correlatives":99, "feistier":99, "flecking":99, "gawks":99, "gaudier":99, "gauntness":99, "eight-room":99, "eighteen-hour":99, "eighth-round":99, "decent-looking":99, "home-design":99, "home-brew":99, "managment":99, "near-dead":99, "prevarications":99, "pure-bred":99, "purling":99, "tag-along":99, "unpublishable":99, "unrecognizably":99, "runnel":99, "cliff-hanging":99, "chestful":99, "acrimoniously":99, "action-hero":99, "faster-moving":99, "draggy":99, "crimsons":99, "deplaned":99, "kite-flying":99, "kitchen-sink":99, "improbabilities":99, "imprecation":99, "house-size":99, "girl-on-girl":99, "fur-covered":99, "mussing":99, "nonhistorical":99, "offical":99, "spokesmodel":99, "sixty-eight-year-old":99, "recusing":99, "rackety":99, "propounds":99, "twentyseven":99, "twentyfold":99, "groundedness":99, "ground-shaking":99, "high-shine":99, "high-roller":99, "limbed":99, "misjudges":99, "occludes":99, "nekkid":99, "ring-tailed":99, "remonstrances":99, "realigns":99, "bibulous":99, "brownish-red":99, "crash-land":99, "doubletalk":99, "douchebag":99, "endeavouring":99, "endnote":99, "dirty-looking":99, "seen-it-all":99, "single-piece":99, "sportscasts":99, "sports-minded":99, "ultrafeminine":99, "underseasoned":99, "semitrailers":99, "rutty":99, "swinish":99, "swingset":99, "two-sentence":99, "clownishly":99, "buffaloed":99, "big-mouthed":99, "big-fish":99, "barnacle-encrusted":99, "allurements":99, "administrated":99, "administrating":99, "deuces":99, "nauseate":99, "naughtily":99, "pick-me-ups":99, "reacquired":99, "reinvests":99, "re-runs":99, "re-issued":99, "posher":99, "labor-union":99, "lace-covered":99, "mini-tour":99, "mender":99, "hootenanny":99, "half-irish":99, "grandkid":99, "flame-red":99, "fearsomely":99, "grouted":99, "harmfully":99, "golden-hued":99, "gas-burning":99, "eastwest":99, "dormitory-style":99, "arms-reduction":99, "black-green":99, "befouled":99, "beelined":99, "animal-loving":99, "prams":99, "prognosticating":99, "joshed":99, "hustle-bustle":99, "highest-end":99, "hurdlers":99, "spendable":99, "roll-down":99, "sandcastles":99, "reprieves":99, "two-year-long":99, "troupers":99, "trounces":99, "vilifies":99, "dry-ice":99, "dextrous":99, "cloud-filled":99, "blandest":99, "begetter":99, "lockout-shortened":99, "onepiece":99, "oversea":99, "leather-topped":99, "inveigh":99, "hip-hopper":99, "hindquarter":99, "flimsier":99, "guesstimates":99, "skimps":99, "skin-smoothing":99, "pulverization":99, "rate-sensitive":99, "sinecures":99, "stock-taking":99, "unctuously":99, "two-decade-old":99, "two-floor":99, "hand-outs":99, "lined-up":99, "relaxations":99, "peg-legged":99, "pink-faced":99, "environmentally-friendly":99, "forswearing":99, "five-day-a-week":99, "fault-tolerant":99, "chocolate-coated":99, "co-developed":99, "deactivating":99, "dead-serious":99, "cornets":99, "benignity":99, "blood-and-guts":99, "bankrolls":99, "blue-checked":99, "counter-example":99, "dustless":99, "elusively":99, "floozies":99, "fervency":99, "pollyanna-ish":99, "once-vaunted":99, "once-common":99, "once-obscure":99, "once-beautiful":99, "not-in-my-backyard":99, "overaggressive":99, "rain-swept":99, "rain-washed":99, "headbangers":99, "more-established":99, "mile-deep":99, "long-entrenched":99, "long-departed":99, "long-festering":99, "wind-sculpted":99, "windburn":99, "whiffing":99, "well-coated":99, "well-disposed":99, "well-cooked":99, "unmarriageable":99, "wakens":99, "susurrus":99, "unlacing":99, "stagnancy":99, "protract":99, "pre-sold":99, "nail-polish":99, "nip-and-tuck":99, "north-to-south":99, "nixes":99, "once-a-decade":99, "ominous-sounding":99, "information-systems":99, "idiocies":99, "heir-apparent":99, "long-ignored":99, "lengthily":99, "long-troubled":99, "meddles":99, "fifty-seven-year-old":99, "diffrent":99, "emblazon":99, "avenges":99, "agenda-driven":99, "avoirdupois":99, "connect-the-dots":99, "well-situated":99, "white-eyed":99, "widebrimmed":99, "whitecapped":99, "wine-growing":99, "yearningly":99, "seatmates":99, "seven-bedroom":99, "timorously":99, "fadeout":99, "grapefruit-sized":99, "granite-topped":99, "fruit-bearing":99, "conservation-oriented":99, "cowriter":99, "less-invasive":99, "less-affluent":99, "maligns":99, "man-about-town":99, "one-in-five":99, "now-ubiquitous":99, "now-abandoned":99, "rales":99, "reeducated":99, "six-feet":99, "six-city":99, "sodomize":99, "then-general":99, "then-house":99, "gulled":99, "kid-sized":99, "light-bodied":99, "large-boned":99, "marmoreal":99, "metallically":99, "lower-risk":99, "lightcolored":99, "lower-calorie":99, "pensiveness":99, "pro-jobs":99, "communist-dominated":99, "cross-pollinated":99, "carports":99, "chilliness":99, "egg-yolk":99, "enthralls":99, "entranceways":99, "drear":99, "exhilaratingly":99, "glitziest":99, "thrill-seeker":99, "state-ordered":99, "subdivides":99, "souvent":99, "ribbonlike":99, "science-oriented":99, "semi-detached":99, "wildlife-rich":99, "well-trod":99, "woofing":99, "womanizers":99, "unmuffled":99, "unnavigable":99, "unpadded":99, "wrests":99, "storm-damaged":99, "time-warp":99, "time-waster":99, "splatting":99, "shark-like":99, "uncashed":99, "ungentle":99, "unflashy":99, "pre-launch":99, "oldschool":99, "pre-cooked":99, "heart-protective":99, "feudalistic":99, "goodhearted":99, "elegant-looking":99, "dog-walking":99, "cadged":99, "breach-of-contract":99, "cockily":99, "back-porch":99, "back-road":99, "backrests":99, "early-round":99, "early-1990s":99, "double-helix":99, "dirt-streaked":99, "continentwide":99, "cream-cheese":99, "chargeable":99, "clanky":99, "bigshots":99, "appeases":99, "oxygen-deprived":99, "nature-loving":99, "much-appreciated":99, "grayest":99, "grayish-brown":99, "itemizes":99, "ill-intentioned":99, "volleying":99, "shorter-lived":99, "rubberneck":99, "scarlets":99, "rousers":99, "good-humoredly":99, "brioches":99, "bluntest":99, "blunt-force":99, "abouts":99, "abjures":99, "law-making":99, "layabout":99, "rearmed":99, "quasi-government":99, "remunerated":99, "oil-dependent":99, "players-only":99, "perniciously":99, "silvery-blue":99, "snack-food":99, "stick-to-itiveness":99, "summer-school":99, "unshackle":99, "untanned":99, "unassociated":99, "slow-talking":99, "side-step":99, "ritualism":99, "mundanity":99, "lip-sync":99, "lip-service":99, "happy-looking":99, "glass-paned":99, "gristly":99, "linty":99, "impedimenta":99, "boomerang-shaped":99, "chain-store":99, "contumely":99, "contradictorily":99, "dancelike":99, "crescendoed":99, "deodorize":99, "fantasias":99, "batterypowered":99, "bootless":99, "chandeliered":99, "ex-beatle":99, "drawerful":99, "hot-and-cold":99, "forewarn":99, "fulsomely":99, "mistimed":99, "obloquy":99, "non-playoff":99, "obstruction-of-justice":99, "ultrasafe":99, "tushes":99, "too-low":99, "too-hot":99, "swashbucklers":99, "self-examinations":99, "self-importantly":99, "pull-back":99, "refrigerator-size":99, "rotten-egg":99, "student-body":99, "student-to-teacher":99, "three-dozen":99, "three-bath":99, "vibraphonist":99, "ultraviolent":99, "mission-driven":99, "neo-orthodox":99, "pilafs":99, "gilds":99, "gin-clear":99, "greenish-white":99, "low-voc":99, "lamer":99, "critically-acclaimed":99, "celebrity-studded":99, "bunker-busting":99, "clear-plastic":99, "evangelized":99, "discontentment":99, "crime-infested":99, "demythologize":99, "late-1950s":99, "jinked":99, "hangarlike":99, "forty-some":99, "neuropsychiatrist":99, "paper-covered":99, "slowmoving":99, "sluggard":99, "small-breasted":99, "still-strong":99, "sun-damaged":99, "spherically":99, "silvery-gray":99, "similar-sounding":99, "salability":99, "robin's-egg-blue":99, "nonracist":99, "outproduce":99, "newshound":99, "newswire":99, "quasi-private":99, "profaned":99, "little-kid":99, "hygienically":99, "abrasively":99, "between-meal":99, "bluebloods":99, "case-hardened":99, "yellowness":99, "yet-to-be-named":99, "rubber-chicken":99, "voluptuary":99, "third-rounder":99, "third-straight":99, "gray-and-white":99, "gratifies":99, "mires":99, "base-closing":99, "boiling-hot":99, "catgut":99, "buddying":99, "contaminations":99, "dirt-bike":99, "double-hulled":99, "double-layered":99, "earliest-known":99, "articulable":99, "conflations":99, "countermoves":99, "elementally":99, "diametric":99, "deep-woods":99, "goodnatured":99, "eyeball-to-eyeball":99, "heart-pine":99, "lectureship":99, "pesters":99, "pervious":99, "parsimoniously":99, "over-crowded":99, "undisputable":99, "unbuttered":99, "unchain":99, "unclasp":99, "salvages":99, "snow-swept":99, "testosterone-fueled":99, "tetherball":99, "split-adjusted":99, "wearier":99, "tour-bus":99, "whatnots":99, "semiautomatics":99, "show-offs":99, "schuss":99, "southwards":99, "tening":99, "flatworm":99, "dreamy-eyed":99, "effusiveness":99, "cross-tabulated":99, "cross-stitch":99, "by-play":99, "pro-marriage":99, "nonblack":99, "large-hearted":99, "kid-glove":99, "highly-regarded":99, "highest-resolution":99, "in-roads":99, "soda-pop":99, "six-gun":99, "softball-sized":99, "springiness":99, "result-oriented":99, "preciseness":99, "poker-playing":99, "narrow-shouldered":99, "mindbody":99, "longhairs":99, "longest-held":99, "honeypot":99, "coked":99, "cohabitate":99, "bottom-feeders":99, "analagous":99, "food-rich":99, "food-distribution":99, "ethnos":99, "timelier":99, "suffusion":99, "seven-digit":99, "seat-tube":99, "silk-screening":99, "smart-growth":99, "small-plane":99, "weight-room":99, "washy":99, "avowing":99, "bawdiness":99, "biostatistician":99, "age-by-age":99, "differentiator":99, "gentrify":99, "front-facing":99, "medical-supply":99, "moonlike":99, "long-scheduled":99, "grade-schooler":99, "overexpansion":99, "red-footed":99, "red-leaf":99, "stress-filled":99, "sorcerous":99, "shoptalk":99, "waitressed":99, "vegetating":99, "wherewith":99, "well-healed":99, "worst-to-first":99, "military-led":99, "military-like":99, "juridically":99, "not-so-little":99, "free-love":99, "all-points":99, "balconied":99, "aspirating":99, "concealable":99, "five-fifteen":99, "egoless":99, "dissembler":99, "pinballs":99, "paint-by-number":99, "opulently":99, "right-size":99, "nebbishy":99, "hand-selected":99, "jack-o-lanterns":99, "jackhammering":99, "sabe":99, "singalongs":99, "skimpily":99, "self-lubricating":99, "shirred":99, "self-pollinating":99, "flood-ravaged":99, "indestructibility":99, "joyousness":99, "oneroom":99, "one-upping":99, "one-stoplight":99, "photometers":99, "ash-gray":99, "center-city":99, "cloth-wrapped":99, "cosseted":99, "decompressed":99, "diachronically":99, "equatorially":99, "extendible":99, "feminize":99, "tyros":99, "tills":99, "recommence":99, "spectroscopically":99, "hunt-and-peck":99, "higher-class":99, "macroscale":99, "moldered":99, "programmability":99, "perspicuous":99, "old-boys":99, "muttonchops":99, "paranoiac":99, "beet-red":99, "black-and-gray":99, "dim-lit":99, "gold-toothed":99, "half-whispered":99, "hennaed":99, "grand-opening":99, "genealogically":99, "lacquerware":99, "libertarian-leaning":99, "purplish-red":99, "reiterations":99, "pickiest":99, "moulding":99, "detrimentally":99, "deterministically":99, "ducktail":99, "duelists":99, "duelling":99, "death-bed":99, "cruise-missile":99, "corespondent":99, "election-related":99, "gender-sensitive":99, "fresh-fruit":99, "barmy":99, "barrel-vaulted":99, "big-girl":99, "boners":99, "boo-hooing":99, "chiselers":99, "clunks":99, "two-story-high":99, "two-seaters":99, "two-ounce":99, "tiddlywinks":99, "switchblades":99, "sub-arctic":99, "ticket-taker":99, "thyroid-stimulating":99, "schoolmarmish":99, "snuffboxes":99, "single-speed":99, "snowshoed":99, "single-source":99, "ringlet":99, "four-armed":99, "crampy":99, "circuslike":99, "bezels":99, "allout":99, "non-voters":99, "misprints":99, "limitlessly":99, "lariats":99, "hardbacks":99, "ground-rule":99, "ground-beef":99, "trialing":99, "thousand-yard":99, "tonks":99, "surface-level":99, "team-teach":99, "thirty-some":99, "reshooting":99, "spookiness":99, "self-assigned":99, "pound-foolish":99, "handlebar-mounted":99, "hexes":99, "housetops":99, "interpolating":99, "crime-solving":99, "ex-white":99, "bestride":99, "clip-clopping":99, "slow-dancing":99, "unravelled":99, "stay-the-course":99, "spacewalker":99, "regurgitates":99, "post-hussein":99, "near-legendary":99, "movie-set":99, "nursery-school":99, "pinschers":99, "lesser-quality":99, "heating-oil":99, "deceitfully":99, "disunited":99, "cable-car":99, "eighteen-hole":99, "infantilize":99, "non-executive":99, "prewritten":99, "shuttlecraft":99, "bronze-medal":99, "ex-pro":99, "ex-teammates":99, "coolheaded":99, "depopulating":99, "jerkiness":99, "four-footer":99, "pericarditis":99, "nonlife":99, "muskmelon":99, "microfilmed":99, "literalistic":99, "romanticist":99, "impugns":99, "limbered":99, "lasered":99, "reappearances":99, "pitchy":99, "candidness":99, "fot":99, "seethrough":99, "schnook":99, "scholastically":99, "shuddery":99, "ticket-selling":99, "tiebreaking":99, "trackable":99, "trade-oriented":99, "unhatched":99, "underexplored":99, "bug-infested":99, "election-day":99, "eye-care":99, "non-business":99, "peak-hour":99, "re-written":99, "mini-states":99, "many-headed":99, "grand-slam":99, "excelente":99, "faux-leather":99, "degree-seeking":99, "before-tax":99, "angiotensin-converting":99, "carjack":99, "crabcakes":99, "old-house":99, "old-master":99, "maximum-likelihood":99, "knowability":99, "second-greatest":99, "village-level":99, "cotillions":99, "anti-aesthetic":99, "pontification":99, "invasively":99, "ship-building":99, "reverse-scored":99, "pulled-pork":99, "single-elimination":99, "house-building":99, "neckless":99, "oatmeal-raisin":99, "non-metallic":99, "non-mexican":99, "pin-ups":99, "disseminators":99, "five-diamond":99, "computergenerated":99, "anti-hunger":99, "baksheesh":99, "astilbe":99, "astilbes":99, "asterisms":99, "banditos":99, "co-teach":99, "broad-chested":99, "chorister":99, "gang-banging":99, "frappe":99, "goatish":99, "pollution-related":99, "pass-oriented":99, "rain-shortened":99, "psychobiological":99, "resonantly":99, "ninety-two-year-old":99, "maladministration":99, "worrywarts":99, "well-distributed":99, "well-concealed":99, "webwork":99, "whipper":99, "veridical":99, "semblable":99, "skunky":99, "stringy-haired":99, "requalify":99, "pre-printed":99, "north-western":99, "moonshot":99, "fifty-percent":99, "codefendant":99, "water-storage":99, "weightloss":99, "yearend":99, "small-plates":99, "suckering":99, "doomsayer":99, "inner-tube":99, "less-toxic":99, "longshots":99, "mineshaft":99, "mostest":99, "overlies":99, "rajah":99, "roomies":99, "situp":99, "soft-eyed":99, "then-police":99, "hightop":99, "lapdogs":99, "language-related":99, "multiplicities":99, "argentinians":99, "crosscuts":99, "flatfoot":99, "feeing":99, "throat-clearing":99, "starting-point":99, "semi-truck":99, "triple-butted":99, "touchin":99, "split-levels":99, "splinted":99, "sister-city":99, "nonspeaking":99, "pre-communist":99, "petrify":99, "pre-operative":99, "hyperpower":99, "defacto":99, "defames":99, "defect-free":99, "elephant-headed":99, "counterespionage":99, "bread-crumb":99, "backfilled":99, "air-travel":99, "earliness":99, "double-dipping":99, "non-compete":99, "opensource":99, "open-court":99, "nutshells":99, "prejudgments":99, "rankest":99, "publicly-owned":99, "halfwit":99, "tax-reform":99, "vitiates":99, "retests":99, "gashing":99, "bevels":99, "adrenaline-pumping":99, "histocompatibility":99, "head-down":99, "kneelers":99, "microscopist":99, "stil":99, "unrestored":99, "untuned":99, "tree-trunk":99, "outcoached":99, "neuropathologist":99, "glaciations":99, "fossil-fueled":99, "energyefficient":99, "energy-sapping":99, "disconfirmation":99, "fanboys":99, "kettledrums":99, "life-extension":99, "greenlit":99, "fulminate":99, "fun-to-drive":99, "hospital-style":99, "pugnaciously":99, "mistrials":99, "organic-food":99, "shocking-pink":99, "scalawag":99, "retrenchments":99, "vibration-damping":99, "non-selective":99, "peepee":99, "ham-radio":99, "heroin-addicted":99, "lift-ticket":99, "janissaries":99, "eventing":99, "fantasists":99, "disbar":99, "nonfactor":99, "mummers":99, "microanalysis":99, "top-of-the-world":99, "unauthentic":99, "unallocated":99, "replicability":99, "replenishable":99, "power-management":99, "renationalization":99, "nonmetal":99, "oil-importing":99, "playgoer":99, "live-oak":99, "guttersnipe":99, "short-radius":99, "germy":99, "ill-structured":99, "ranchlands":99, "double-elimination":99, "dirt-track":99, "fine-point":99, "context-based":99, "certifiers":99, "apocalypses":99, "cocurricular":99, "flu-related":99, "fibrillating":99, "log-rolling":99, "maidservants":99, "recapitalizing":99, "over-exposed":99, "spitters":99, "superabundant":99, "time-scale":99, "undeviating":99, "whole-school":99, "semi-rigid":99, "wreathes":99, "community-centered":99, "chipmaking":99, "butyric":99, "neroli":99, "putrescent":99, "pyracantha":99, "large-leaved":99, "precrisis":99, "emission-control":99, "year-around":99, "z-axis":99, "xenophobes":99, "winter-run":99, "wood-based":99, "wingbeat":99, "burned-down":99, "burnoose":99, "church-goers":99, "arbitrates":99, "f-stops":99, "long-leaf":99, "triers":99, "tosser":99, "walkoff":99, "leftish":99, "overbrowning":99, "extra-parliamentary":99, "festival-goers":99, "broker-dealer":99, "counter-narrative":99, "blowy":99, "anti-torture":99, "benzocaine":99, "co-create":99, "positive/negative":99, "pejoratives":99, "non-italian":99, "nebulizer":99, "jackanapes":99, "scrublands":99, "teleplay":99, "meatpacker":99, "million-year":99, "chanticleer":99, "decipherment":99, "divisor":99, "second-guessers":99, "lizardlike":99, "bowstrings":99, "general-fund":99, "re-recorded":99, "overspray":99, "extrawide":99, "electrocutions":99, "antispasmodic":99, "alpinists":99, "underexploited":99, "underresearched":99, "two-on-one":99, "sub-themes":99, "tuna-fish":99, "tumeric":99, "thick-billed":99, "citizen-based":99, "occlusions":99, "groundballs":99, "self-actualizing":99, "satanist":99, "sheikdom":99, "microenvironments":99, "periosteal":99, "playbacks":99, "fixed-term":99, "handcraftsmanship":99, "household-based":99, "cliff-hangers":99, "anti-regulation":99, "substate":99, "unquantified":99, "pureness":99, "reword":99, "non-inflationary":99, "ice-hockey":99, "heating/cooling":99, "mousseline":99, "drug-rehabilitation":99, "cabriole":99, "cubistic":99, "breathalyzers":99, "arrondissements":99, "drug-company":99, "non-institutional":99, "commodity-based":99, "ex-general":99, "perivascular":99, "neurotrophic":99, "improvidence":99, "nonaction":99, "non-tenured":99, "per-patient":99, "fire-suppression":99, "democratisation":99, "superfans":99, "under-cabinet":99, "sub-cultures":99, "school-specific":99, "sense-making":99, "extranets":99, "due-diligence":99, "nuclear-arms":99, "half-season":99, "hookworm":99, "low-fire":99, "motion-capture":99, "laburnum":99, "collision-avoidance":99, "loan-to-value":99, "mid-terms":99, "molted":99, "speed-dating":99, "tameness":99, "tightwads":99, "exploitations":99, "ashrams":99, "phototherapy":99, "patient-provider":99, "one-twenty":99, "leathern":99, "hydrogen-rich":99, "stylers":99, "yielders":99, "prequalified":99, "shake-out":99, "single-disc":99, "spinmeister":99, "two-generational":99, "jack-o-lantern":99, "image-quality":99, "post-acute":99, "non-normal":99, "bentonite":99, "five-axis":99, "fornicators":99, "dromedaries":99, "all-loving":99, "blue-cheese":99, "dogtags":99, "floorless":99, "god-king":99, "overactivity":99, "passbooks":99, "overclass":99, "phased-array":99, "psychobiography":99, "psycho-analytic":99, "walkability":99, "unmated":99, "trinidadians":99, "stressfulness":99, "moorlands":99, "mopes":99, "rock-cut":99, "embayment":99, "codependence":99, "wineskins":99, "smash-and-grab":99, "bottomline":99, "consejos":99, "preconcert":99, "photocell":99, "self-definitions":99, "task-relevant":99, "supersession":99, "palindromic":99, "brain-injury":99, "biryani":99, "crossborder":99, "dazzlers":99, "glossolalia":99, "subdisciplinary":99, "triple-x":99, "wear-resistant":99, "water-proof":99, "water-conservation":99, "unfished":99, "text-centered":99, "parkinsonism":99, "reorders":99, "maidenhood":99, "fluoroscopic":99, "curtailments":99, "counterinsurgent":99, "countertransference":99, "airglow":99, "aerodynamicists":99, "clarinetists":99, "premorbid":99, "polypeptides":99, "non-empirical":99, "mercury-free":99, "manilla":99, "retinoic":99, "viziers":99, "tollways":99, "yella":99, "carve-out":99, "caryatid":99, "lithographers":99, "lawbooks":99, "mid-irons":99, "outsourcer":99, "serial-killer":99, "unbinding":99, "paperboys":99, "denaturation":99, "combinatory":99, "boodle":99, "fumigant":99, "multicelled":99, "multi-item":99, "immune-enhancing":99, "disintermediation":99, "educrats":99, "rough-skinned":99, "eclampsia":99, "pantless":99, "mass-casualty":99, "production-sharing":99, "producible":99, "reconception":99, "plea-bargained":99, "roamers":99, "monaural":99, "literates":99, "retentions":99, "resuscitative":99, "phytoestrogen":99, "bolide":99, "fair-housing":99, "block-printed":99, "below-grade":99, "backscatter":99, "counterfactuals":99, "fetishizes":99, "mazurkas":99, "myna":99, "jujubes":99, "pre-construction":99, "sous-chefs":99, "shot-put":99, "exfoliants":99, "cross-reactivity":99, "noncapital":99, "kibbles":99, "megaparsecs":99, "homiletical":99, "yays":99, "biotechnical":99, "avocadoes":99, "phagocytosis":99, "mook":99, "sell-through":99, "rotators":99, "all-italian":99, "calyxes":99, "cholestasis":99, "non-north":99, "orchestrators":99, "hexameters":99, "uncontrollability":99, "thermodynamically":99, "regressivity":99, "gammaray":99, "career-development":99, "closed-form":99, "speleological":99, "servomotors":99, "timber-industry":99, "quick-frozen":99, "mid-water":99, "lead-poisoned":99, "high-value-added":99, "collisional":99, "college-admissions":99, "carhop":99, "baby-friendly":99, "nomenclatures":99, "deterritorialized":99, "bonefishing":99, "cause-related":99, "sub-system":99, "terabit":99, "unicity":99, "sapsucker":99, "single-unit":99, "antiliberal":99, "pangas":99, "orthoscopic":99, "in-field":99, "laser-assisted":99, "machine-learning":99, "offtrack":99, "fixed-line":99, "coordinative":99, "all-century":99, "social-support":99, "non-ionizing":99, "numismatist":99, "flight-test":99, "blasphemers":99, "triarchic":99, "assimilationists":99, "center/forward":99, "impracticability":99, "internal-affairs":99, "interpellation":99, "performance-enhancement":99, "pentimento":99, "bodiliness":99, "endothermic":99, "energizers":99, "thermoregulatory":99, "sub-state":99, "sub-disciplines":99, "tracheobronchial":99, "attenuator":99, "manufactories":99, "colliery":99, "encryptions":99, "golden-cheeked":99, "femtoseconds":99, "dual-clutch":99, "cardoon":99, "guanaco":99, "photostat":99, "skin-prick":99, "ski-related":99, "stitcher":99, "reader-oriented":99, "counter-proliferation":99, "esh":99, "prediabetes":99, "nosology":99, "juristic":99, "identificatory":99, "point-biserial":99, "wassail":99, "fruit-eating":99, "moshing":99, "root-canal":99, "haue":99, "nonclassroom":99, "nestmates":99, "babbler":99, "arianism":99, "flat-head":99, "entrapments":99, "science-policy":99, "word-recognition":99, "nibbler":99, "direccin":99, "sopes":99, "transurethral":99, "incoordination":99, "calendulas":99, "case-fatality":99, "altimeters":99, "plebiscitary":99, "sidelock":99, "modernizer":99, "binge-eating":99, "aerosolization":99, "check-in":99, "self-leveling":99, "top-loaders":99, "forest-dependent":99, "database-management":99, "biofouling":99, "peer-related":99, "paddleboard":99, "non-price":99, "cheesemaking":99, "cross-boundary":99, "ultrasonographic":99, "cleanroom":99, "grizzle":99, "subparagraph":99, "profeminist":99, "job-based":99, "law-and-economics":99, "class-bound":99, "double-crust":99, "early-maturing":99, "preoperational":99, "rebuilders":99, "kosmos":99, "curricle":99, "defenceless":99, "countermelody":99, "seed-saving":99, "submental":99, "brachytherapy":99, "nonconscious":99, "post-reformation":99, "ramjets":99, "silicone-gel":99, "digitizers":99, "botnets":99, "coffee-producing":99, "connectives":99, "hypothetico-deductive":99, "meet-up":99, "all-pros":99, "skinsuits":99, "tricorders":99, "read-alouds":99, "right-hand-drive":99, "spirochete":99, "tapeless":99, "two-gallon":99, "millisieverts":99, "millivolts":99, "game-theoretic":99, "flocculation":99, "hydrophones":99, "independent-samples":99, "decodable":99, "college-ready":99, "academic-related":99, "parataxis":99, "tambour":99, "minimizer":99, "primary-level":99, "adelgid":99, "hard-knock":99, "monopole":99, "monolayers":99, "gingival":99, "breast-conserving":99, "optimise":99, "subtasks":99, "septicaemia":99, "four-group":99, "handmaids":99, "music-teaching":99, "plasticizer":99, "dracaena":99, "radians":99, "high-road":99, "intelligent-design":99, "proabortion":99, "bias-related":99, "dirty-bomb":99, "nuclear-weapon":99, "hepatica":99, "docksiders":99, "shrubland":99, "shucker":99, "servomotor":99, "arms-for-hostage":99, "black-pepper":99, "culturalists":99, "cost-related":99, "hydrogels":99, "patient/family":99, "line-to-line":99, "landsmen":99, "anti-harassment":99, "drop-shot":99, "duplicator":99, "floozie":99, "overachievement":99, "philately":99, "court-house":99, "digastric":99, "cuticular":99, "noroviruses":99, "sugar-producing":99, "terraformers":99, "white-gas":99, "one-part":99, "heliopause":99, "ostomy":99, "inter-school":99, "community-specific":99, "woad":99, "storminess":99, "nontheist":99, "nontheists":99, "nontenured":99, "eulogist":99, "virtualized":99, "vocational/technical":99, "vocalic":99, "zazen":99, "lysozyme":99, "calfs":99, "plesiosaur":99, "taille":99, "safer-sex":99, "out-of-hospital":99, "skaldic":99, "solanine":99, "reg'lar":99, "afro-brazilians":99, "missiological":99, "pedipalps":99, "disinhibited":99, "farseeing":99, "nonenvironmental":99, "contractarian":99, "road-course":99, "reassortment":99, "intradiegetic":99, "non-clog":99, "keffiyeh":99, "hyphal":99, "health-promotion":99, "one-group":99, "six-gallon":99, "government-linked":99, "frontotemporal":99, "psychopomp":99, "i-drive":99, "waitlist":99, "vectorborne":99, "co-authorship":99, "thermogenesis":99, "flocculent":99, "acetazolamide":99, "skilled-nursing":99, "solutes":99, "craic":99, "nonveteran":99, "plosives":99, "lead-contaminated":99, "injection-related":99, "non-canadian":99, "priest-king":99, "falsifiability":99, "ophthalmoplegia":99, "freestyling":99, "expendables":99, "opponent-process":99, "post-famine":99, "side-discharge":99, "centrales":99, "neutralising":99, "handscroll":99, "allottees":99, "consignors":99, "group-centered":99, "marijuana-related":99, "seigniorage":99, "related-party":99, "mouflon":99, "chlorosis":99, "interrelational":99, "intervocalic":99, "promethazine":99, "beguine":99, "chieftaincies":99, "thermochemical":99, "sunbird":99, "uncontacted":99, "coronae":99, "drowner":99, "pyruvate":99, "sorbent":99, "gunshop":99, "redlight":99, "free-energy":99, "esker":99, "camera-phone":99, "biotas":99, "inflorescences":99, "colchicine":99, "hypochondriasis":99, "arts-centered":99, "time-reversal":99, "ricegrass":99, "ossuaries":99, "foregut":99, "native-like":99, "etidronate":99, "deliverability":99, "incudostapedial":99, "vasovagal":99, "engineering-related":99, "nones":99, "lustration":99, "multithreaded":99, "multipole":99, "posttransition":99, "affricate":99, "slum-dwellers":99, "alternative-fuels":99, "dirtside":99, "catfishes":99, "intercaste":99, "feedthrough":99, "electromigration":99, "haemorrhages":99, "pre-instruction":99, "eminent-domain":99, "identificational":99, "chunker":99, "white-pine":99, "calypsos":99, "broken-windows":99, "acetabular":99, "dual-parent":99, "macrosocial":99, "pushchair":99, "bryophytes":99, "atavisms":99, "rehospitalized":99, "pinnace":99, "ichthyosis":99, "heatshield":99, "tribal-state":99, "transfer-level":99, "minigolf":99, "attosecond":99, "school-only":99, "suiters":99, "ability-achievement":99, "anti-tb":99, "extra-pair":99, "oak-pine":99, "great-horned":99, "white-line":99, "task-involving":99, "copula":99, "birthparents":99, "in-use":99, "market-sized":99, "sovereigntists":99, "water-resources":99, "visuo-spatial":99, "serpentinite":99, "plasmacytomas":99, "pantoum":99, "multi-input":99, "neo-thomist":99, "self-helpers":99, "unaccomplished":100, "traumatically":100, "teenybopper":100, "tediousness":100, "misremembered":100, "mistily":100, "forestation":100, "entangles":100, "derivatively":100, "bootmaker":100, "batshit":100, "batlike":100, "chancellorship":100, "posturings":100, "imperatively":100, "apprehensible":100, "seriality":100, "suborned":100, "spavined":100, "recommitting":100, "rabbity":100, "unappeasable":100, "volubility":100, "stalky":100, "surfeited":100, "vouches":100, "catchiest":100, "charwoman":100, "direly":100, "faired":100, "crazy-ass":100, "misconstrues":100, "gratingly":100, "hallucinates":100, "horror-stricken":100, "ill-bred":100, "kempt":100, "intoxicatingly":100, "livening":100, "outpointed":100, "newsperson":100, "stiff-arm":100, "unrepentantly":100, "unsplit":100, "touchiest":100, "web-footed":100, "sublimates":100, "slimed":100, "inauspiciously":100, "gullets":100, "re-emphasized":100, "reincorporate":100, "bedeck":100, "caroused":100, "galoot":100, "outworks":100, "pocketable":100, "heartedly":100, "indispensably":100, "juiceless":100, "jug-eared":100, "artlessness":100, "antedates":100, "countermanded":100, "unforgotten":100, "ethologist":100, "circulators":100, "birdcall":100, "noggins":100, "megabuck":100, "malignity":100, "precook":100, "zonked":100, "tin-pot":100, "warehouselike":100, "burgs":100, "conks":100, "after-image":100, "embarrassedly":100, "heftiest":100, "moonscapes":100, "nitpicky":100, "parvenus":100, "rockslides":100, "limning":100, "linemate":100, "lingeringly":100, "obfuscations":100, "prisonlike":100, "relook":100, "drubbed":100, "exiguous":100, "co-chairing":100, "bloodlessly":100, "uncurls":100, "uncracked":100, "transmogrify":100, "transited":100, "shabbiest":100, "scrupulousness":100, "malapropism":100, "redrafted":100, "restaged":100, "restaging":100, "nosiness":100, "skirmished":100, "trilogies":100, "unlace":100, "unlikeliness":100, "whorish":100, "worthily":100, "abdicates":100, "beguiles":100, "bushier":100, "equilibrate":100, "flittering":100, "fractiousness":100, "harrying":100, "rapscallion":100, "recombines":100, "tyrannically":100, "lead-footed":100, "hussies":100, "reclusiveness":100, "prognosticate":100, "noodled":100, "flakier":100, "academicism":100, "clamminess":100, "shrimplike":100, "semirigid":100, "suavity":100, "underplaying":100, "barraging":100, "bifurcating":100, "administrate":100, "clumsiest":100, "duelist":100, "duked":100, "equivocated":100, "manyfold":100, "laced-up":100, "nauseates":100, "overstress":100, "thingness":100, "superficialities":100, "stonelike":100, "uneducable":100, "unendingly":100, "banters":100, "crankier":100, "falteringly":100, "demotes":100, "democratizes":100, "disavowals":100, "misimpressions":100, "grotesqueness":100, "quainter":100, "realest":100, "stratifications":100, "jested":100, "jet-propelled":100, "must-see":100, "monkeyed":100, "boatyards":100, "enmesh":100, "crispiness":100, "crispest":100, "deprecated":100, "infantilism":100, "inflecting":100, "rehashes":100, "pipefitter":100, "pretreat":100, "flawlessness":100, "drug-ridden":100, "devastations":100, "sequela":100, "unpressurized":100, "unreciprocated":100, "deceptiveness":100, "epicanthic":100, "reheats":100, "pedantically":100, "infantilization":100, "heathery":100, "potsherd":100, "musses":100, "impregnates":100, "implosive":100, "hibernates":100, "resistible":100, "reseeded":100, "groundstrokes":100, "anticarcinogenic":100, "undraped":100, "sanitizes":100, "re-presented":100, "primitiveness":100, "inhumanely":100, "ignobly":100, "henpecked":100, "detoxified":100, "debark":100, "underlip":100, "terephthalate":100, "termagant":100, "shrimpy":100, "starfields":100, "caressingly":100, "excepts":100, "paramedical":100, "incenses":100, "incarcerates":100, "vilely":100, "republication":100, "spendy":100, "telexes":100, "schizoaffective":100, "skilfully":100, "guardedness":100, "fragmentations":100, "overproducing":100, "millworker":100, "wedgies":100, "concretizing":100, "pass-fail":100, "redeployments":100, "hittable":100, "long-drawn":100, "spiralled":100, "thermite":100, "benzoate":100, "disqualifier":100, "drowse":100, "positiveness":100, "great-grandsons":100, "mediately":100, "lengthiest":100, "irreducibility":100, "halberds":100, "embroiders":100, "definiteness":100, "waterbased":100, "pathless":100, "overnighted":100, "aggrandizing":100, "delegitimizing":100, "tetralogy":100, "superagent":100, "invincibly":100, "pre-empts":100, "quixotically":100, "drearier":100, "cross-examiner":100, "cross-examines":100, "reinserting":100, "placeholders":100, "subleased":100, "wheeler-dealers":100, "wipeouts":100, "writedown":100, "unroofed":100, "tailormade":100, "musclemen":100, "permanganate":100, "plentitude":100, "jitteriness":100, "incontestably":100, "hyperextended":100, "adsorb":100, "unwaxed":100, "insecurely":100, "contentiously":100, "emulators":100, "bashfulness":100, "auditable":100, "stripy":100, "slanty":100, "reteach":100, "volleyed":100, "transshipped":100, "tweezed":100, "unbelievingly":100, "unblessed":100, "unbreachable":100, "thundershower":100, "chairback":100, "immured":100, "nonelected":100, "bunchy":100, "deprogram":100, "greenmail":100, "pikers":100, "solecism":100, "pressurizing":100, "bumblers":100, "availabilities":100, "forwarder":100, "bulks":100, "down-time":100, "denuclearize":100, "songcraft":100, "songsters":100, "basalts":100, "hymnody":100, "jockstraps":100, "intrafamilial":100, "monarchism":100, "mastheads":100, "quartermasters":100, "rebirths":100, "unsworn":100, "whatsit":100, "multilateralist":100, "coproduction":100, "hypersexuality":100, "monstrousness":100, "confrere":100, "dunghill":100, "diastole":100, "friskiness":100, "overlie":100, "one-nighters":100, "sating":100, "wet-weather":100, "avifauna":100, "cutover":100, "governmentwide":100, "mediatory":100, "poesy":100, "quacked":100, "drive-throughs":100, "snatchings":100, "scrimmaged":100, "uncrossable":100, "floriferous":100, "semantical":100, "sweetbread":100, "setpoint":100, "tragedians":100, "gold-bearing":100, "craftspersons":100, "craftswomen":100, "deglazing":100, "senescent":100, "duffs":100, "grainier":100, "re-routing":100, "oversteer":100, "superfluities":100, "ultraliberal":100, "anticlotting":100, "remitting":100, "ornamenting":100, "protectants":100, "spongelike":100, "handpicking":100, "househusband":100, "monkshood":100, "committal":100, "ecumenist":100, "melty":100, "pupillary":100, "expendability":100, "subtextual":100, "slobby":100, "subtropics":100, "disfigurements":100, "calisthenic":100, "macerate":100, "piscivorous":100, "nonaddictive":100, "occupancies":100, "misdirecting":100, "circumflex":100, "minimall":100, "motivationally":100, "fieldstones":100, "antipolitical":100, "deicide":100, "parboiled":100, "speedballs":100, "squinching":100, "dualie":100, "cosmography":100, "millionairess":100, "nanoparticle":100, "intrepidity":100, "weedkiller":100, "witting":100, "fertilizations":100, "decrypted":100, "oncologic":100, "entrepreneurially":100, "fully-fledged":100, "phallocentrism":100, "nitrosamines":100, "patchily":100, "overprescribe":100, "ethological":100, "butterhead":100, "agriculturist":100, "urogenital":100, "toxicologic":100, "sedimented":100, "snood":100, "dunderheads":100, "midplane":100, "hypervelocity":100, "hackwork":100, "petrification":100, "pneuma":100, "flatline":100, "nerving":100, "postapartheid":100, "wildfowl":100, "permissibly":100, "knight-errant":100, "appealable":100, "ceremonialism":100, "certifier":100, "earldom":100, "emulative":100, "thirstier":100, "recomposed":100, "scorable":100, "structureless":100, "teetotal":100, "three-decker":100, "gratins":100, "guyline":100, "nonpathological":100, "multiplexer":100, "communicatively":100, "anechoic":100, "oligotrophic":100, "quietus":100, "chromogenic":100, "brazed":100, "e-zine":100, "embolic":100, "burgundies":100, "warpage":100, "shagreen":100, "sunchoke":100, "pashminas":100, "inexplicability":100, "cotyledons":100, "ekphrasis":100, "yodels":100, "servanthood":100, "vidscreen":100, "monadic":100, "exceptionless":100, "attestations":100, "electrocardiograph":100, "hardihood":100, "seismographic":100, "septage":100, "punker":100, "gyoza":100, "broodmares":100, "musicale":100, "perinatally":100, "housemaster":100, "suppliant":100, "recode":100, "moldboard":100, "simulcasts":100, "yukata":100, "emoticon":100, "longlining":100, "precess":100, "saturations":100, "hypermarket":100, "individualistically":100, "timecard":100, "similitudes":100, "incorruption":100, "canonicity":100, "voiceprints":100, "umlaut":100, "autotrophic":100, "cheongsam":100, "immunogenic":100, "syndicalism":100, "nonflowering":100, "mashie":100, "subscapularis":100, "lawlike":100, "laydown":100, "propagators":100, "answerer":100, "fibroma":100, "noncompletion":100, "dopants":100, "embayments":100, "acinar":100, "heteroscedasticity":100, "dichroic":100, "psoriatic":100, "macrosystem":100, "perseveration":100, "hydrogel":100, "hyaline":100, "periodicities":100, "macerator":100, "bifold":100, "antiquarks":100, "chlorate":100, "onomastic":100, "rhyolite":100, "stylomastoid":100, "dampeners":100, "guanacos":100, "phrenic":100, "cufflink":100, "solitaires":100, "dehiscent":100, "tropopause":100, "sukkah":100, "cholinesterase":100, "cornhusk":100, "protoplanet":100, "kanamycin":100, "wifie":100, "siliceous":100, "arthroscope":100, "oliguria":100, "hypoactive":100, "tetroxide":100, "microporous":100, "blueshifted":100, "catalytically":100, "baselayer":100, "velar":100, "neurofibrillary":100, "dendrite":100, "cheddars":100, "miasmas":100, "utricle":100, "hereditarian":100, "organometallic":100, "hemolymph":100, "hearthstones":100, "mylohyoid":100, "neti":100, "pyriform":100, "yarrows":100, "parturient":100, "nasals":100, "princedom":100, "flagellum":100, "macrofauna":100, "antigenically":100, "chlorogenic":100, "electrofishing":100, "kinkajou":100, "catachresis":100, "antiferromagnetic":100, "mudra":100, "perseverative":100, "parasitological":100, "egoic":100, "ventromedial":100, "conscientization":100, "burbot":100, "privity":100, "noncommunal":100, "throughputs":100, "logographic":100, "petrifaction":100, "securement":100, "buckytube":100, "resuscitations":100, "paretic":100, "laminae":100, "toothfish":100, "temporariness":100, "marasmus":100, "nontemporal":100, "amphibole":100, "steles":100, "dilations":100, "notifiable":100, "antineutrino":100, "paraboloid":100, "gweilos":100, "lookups":100, "extratropical":100, "stanzaic":100, "tropology":100, "counterpressure":100, "starthistle":100, "spathe":100, "scrag":100, "ovules":100};
});
__d('yarn/app/views/browser/splitGluedTogetherWords.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var splitCharacters=['"', '.', ';', '?', ',', '”', ')', ':', '!', '“', '(', '/', '*'];

module.exports = function(textContent){
var words=textContent.split(' ');

words.forEach(function(word, index){
splitCharacters.forEach(function(character){
if(word.indexOf(character) !== -1){
var split=word.split(character);
if(split[0] && split[1]){
for(var i=0; i < split.length - 1; i++) {
split[i] = split[i] + character;}

words.splice.apply(words, [index, 1].concat(split));}}});});





words.forEach(function(word, index){

if(/[a-z]/.test(word.charAt(0)) && /[A-Z]/.test(word)){
for(var i=0; i < word.length; i++) {
if(/[A-Z]/.test(word.charAt(i))){
words.splice(index, 1, word.substring(0, i), word.substring(i, word.length));
return;}}}});





words = words.filter(function(word){
return word !== '';});


return words;};
});
__d('yarn/app/views/browser/websiteapi.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = function(){

if(window.yarnInitialised){
return;}

window.yarnInitialised = true;

window.yarnHighlight = (function(){

var SKIP_NODES=['SCRIPT', 'NOSCRIPT'];

var highlightColor='#44FF44';
var visitedWords=[];

function setHighlightColor(color){
highlightColor = color;}


function prepareWords(words){
reset();
words.forEach(prepareWord);
window.addEventListener('scroll', onPageScroll);
onPageScroll();
return visitedWords;}


function prepareWord(word){
var n;
var walker=document.createTreeWalker(document.body, NodeFilter.SHOW_TEXT, null, false);

var rx=new RegExp('\\b' + word + '\\b');

while(n = walker.nextNode()) {

if(SKIP_NODES.indexOf(n.parentNode.tagName) !== -1){
continue;}


if(rx.test(n.nodeValue)){
var node=n.parentNode;
node.innerHTML = node.innerHTML.replace(rx, 
'<mark data-yarn-highlight=\'' + word + 
'\' style=\'border-radius:3px;background-color:rgba(0,0,0,0);font-style:inherit;font-weight:inherit;\'>' + 
word + '</mark>');

return true;}}


return false;}


function highlight(word, unhighlightOthers, scrollToHighlightedWord){
if(unhighlightOthers){
unhighlight();}

if(!word.tagName){
word = getWordElByWord(word);}

if(word){
word.style.backgroundColor = highlightColor;
word.dataset.yarnHighlighted = 1;}

if(scrollToHighlightedWord){
scrollToWord(word);}}



function getWordElByWord(word){
return document.querySelector('[data-yarn-highlight=\'' + word + '\']');}


function unhighlight(word){
if(word){
if(!word.tagName){
word = getWordElByWord(word);}

if(word){
word.style.backgroundColor = 'rgba(0,0,0,0)';
delete word.dataset.yarnHighlighted;}}else 


{
[].slice.call(document.querySelectorAll('[data-yarn-highlighted=\'1\']')).forEach(function(wordEl){
unhighlight(wordEl);});}}




function scrollToWord(word){
if(!word.tagName){
word = getWordElByWord(word);}

if(word){
word.scrollIntoViewIfNeeded();}}



function highlightVisitedWords(){
var previouslyVisited=visitedWords.length;
var words=[].slice.call(document.querySelectorAll('[data-yarn-highlight]'));
for(var i=0; i < words.length; i++) {
if(isWordInView(words[i]) && !words[i].dataset.yarnHighlighted){
highlight(words[i]);
var word=words[i].dataset.yarnHighlight;
if(visitedWords.indexOf(word) === -1){
visitedWords.push(word);}}}



if(previouslyVisited != visitedWords.length){
console.log('visited words', visitedWords.length, visitedWords);
send('WORDS', visitedWords);}}




function isWordInView(wordEl){
var bbox=wordEl.getBoundingClientRect();









return bbox.bottom < window.innerHeight && bbox.right < window.innerWidth;}


function reset(){

var node;
while(node = document.querySelector('[data-yarn-highlight]')) {
var parent=node.parentNode;
var html=parent.innerHTML;
html = html.replace(/<mark.*?>/i, '');
html = html.replace('</mark>', '');
parent.innerHTML = html;}}




function onPageScroll(){
setTimeout(highlightVisitedWords, 0);}


function getVisitedWords(){
return visitedWords;}


function stopScrollTracking(){
window.removeEventListener('scroll', onPageScroll);}


reset();

return {
highlight:highlight, 
scrollToWord:scrollToWord, 
setHighlightColor:setHighlightColor, 
prepareWords:prepareWords, 
highlightVisitedWords:highlightVisitedWords, 
getVisitedWords:getVisitedWords, 
stopScrollTracking:stopScrollTracking, 
unhighlight:unhighlight};})();





var yarnBridge;
function encodeMessage(name, data){
return JSON.stringify({
name:name, 
data:data});}



function decodeMessage(msg){
return JSON.parse(msg);}


var queue=[];
function send(name, data){

if(!yarnBridge){
queue.push([name, data]);
return;}

var msg=encodeMessage(name, data);
yarnBridge.send(msg);}


function onMessage(msg){

switch(msg.name){
case 'GET_HTML':
return sendHtml();

case 'PREPARE_WORDS':
return yarnHighlight.prepareWords(msg.data);

case 'STOP_SCROLL_TRACKING':
return yarnHighlight.stopScrollTracking();

case 'HIGHLIGHT_WORD':
return yarnHighlight.highlight(msg.data, true, true);

case 'SCROLL_TO_WORD':
return yarnHighlight.scrollToWord(msg.data);

case 'UNHIGHLIGHT_WORDS':
return yarnHighlight.unhighlight();

default:
return;}}



function sendHtml(){
if(document.readyState === 'complete'){
log('sending html', document.body.innerHTML.length);
return send('WEBSITE_CONTENT', document.documentElement.outerHTML);}else 

{
log('delay sendHtml');
setTimeout(sendHtml, 250);}}



function WebViewBridgeReady(cb){
if(window.WebViewBridge){
cb(window.WebViewBridge);
return;}


function handler(){

document.removeEventListener('WebViewBridge', handler, false);

cb(window.WebViewBridge);}





document.addEventListener('WebViewBridge', handler, false);}


function bindScrollInfo(){
window.addEventListener('scroll', function(){
setTimeout(function(){
send('SCROLL', {x:window.scrollX, y:window.scrollY});}, 
1);});}



function log(){
var args=[].slice.call(arguments);
send('LOG', args);}


function wait(){

if(document.readyState == 'complete' && document.body && document.body.innerHTML.length > 100){
WebViewBridgeReady(function(WebViewBridge){

yarnBridge = WebViewBridge;
WebViewBridge.onMessage = function(msg){
var message=decodeMessage(msg);
onMessage(message);};

var msg;
while(msg = queue.shift()) {
send.apply(null, msg);}

bindScrollInfo();
send('WEBSITE_READY');});}else 


{
setTimeout(wait, 13);}}


wait();};
});
__d('yarn/app/actions/actions.js',["events/events.js","yarn/app/actions/actiontypes.js","yarn/app/helpers/getrandomwords.js","yarn/app/helpers/googletranslate.js","yarn/app/helpers/collins.js","yarn/app/logger/logger.js","yarn/app/stores/gamestatestore.js","yarn/app/stores/userprofilestore.js","yarn/words.js","react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var Events=require('events/events.js');
var bus=new Events.EventEmitter();
var actions=require('yarn/app/actions/actiontypes.js');

var getRandomWords=require('yarn/app/helpers/getrandomwords.js');
var googleTranslate=require('yarn/app/helpers/googletranslate.js');
var collins=require('yarn/app/helpers/collins.js');
var log=require('yarn/app/logger/logger.js');

var gameStateStore=require('yarn/app/stores/gamestatestore.js');
var userProfileStore=require('yarn/app/stores/userprofilestore.js');

var words=require('yarn/words.js');

var React=require('react-native/Libraries/react-native/react-native.js');var 

AsyncStorage=
React.AsyncStorage;

var GAME_STATES=gameStateStore.GAME_STATES;

Object.keys(actions).forEach(function(action){
bus[action] = actions[action];});


bus.on(actions.WORDS_PARSED, onWordsParsed);
bus.on(actions.VISITED_WORDS_CHANGED, onVisitedWordsChanged);
bus.on(actions.START_GAME, onStartGame);
bus.on(actions.SHOW_NEXT_QUESTION, onShowNextQuestion);
bus.on(actions.WORD_PRESSED, onWordPressed);
bus.on(actions.CHANGE_LANG, onChangeLang);
bus.on(actions.RESET, onReset);
bus.on(actions.CHANGE_LEVEL, onChangeLevel);

function onWordsParsed(words){
if(!words.length){
return;}


gameStateStore.pause(true);
gameStateStore.reset(true);
words = spreadWords(words, userProfileStore.get('wordsLimit'));
gameStateStore.set('pageWords', words);
gameStateStore.set('currentState', gameStateStore.GAME_STATES.NOT_STARTED);
gameStateStore.pause(false);
log({
message:'words prepared', 
words:words, 
userLevel:userProfileStore.get('level'), 
wordsRange:userProfileStore.get('range'), 
userScore:userProfileStore.get('score')});

bus.emit(actions.WORDS_READY, words);}


function spreadWords(words, limit){
var skip=Math.max(~ ~(words.length / limit), 1);
var newWords=[];
var i=0;
while(newWords.length < limit && words[i]) {
newWords.push(words[i]);
i += skip;}

return newWords;}


function onVisitedWordsChanged(words){
gameStateStore.set('visitedPageWords', words);}


function onStartGame(){
gameStateStore.pause(true);
gameStateStore.set('pageWords', gameStateStore.get('visitedPageWords'));
gameStateStore.pause(false);
bus.emit(actions.SHOW_NEXT_QUESTION);
log({
message:'start game', 
visitedWords:gameStateStore.get('visitedPageWords')});}



function onShowNextQuestion(){
var currentWordIndex=gameStateStore.get('currentWordIndex') + 1;

if(currentWordIndex === gameStateStore.get('pageWords').length){
gameStateStore.set('finished', true);
return;}


var currentWord=gameStateStore.get('pageWords')[currentWordIndex];
var wordsToTranslate=getRandomWords(gameStateStore.get('randomWordsCount'));
wordsToTranslate.unshift(currentWord);

var definition;
var question;

Promise.all([
collins.getDefinition(currentWord).
then(function(resp){

definition = {
entryLabel:resp.entryLabel, 
entryContent:resp.entryContent};}).


catch(function(ex){

console.error('Can not translate words:', ex);}), 


googleTranslate.translateWords(wordsToTranslate, 'en', userProfileStore.get('language')).
then(function(translatedWords){

question = translatedWords.data.translations.map(function(translatedWord, index){
return {
text:wordsToTranslate[index], 
definition:translatedWord.translatedText};});



question[0].target = true;}).

catch(function(ex){

console.error('Can not translate words:', ex);})]).


then(function(){


gameStateStore.pause(true);
question[0].def = definition;
gameStateStore.set('currentWord', question[0]);


question.sort(function(){return Math.random() < 0.5?1:-1;});


var round=Math.floor(Math.random() * question.length);
var start=question.splice(0, round);
question = question.concat(start);

gameStateStore.set('currentQuestion', question);
gameStateStore.set('currentWordIndex', currentWordIndex);
gameStateStore.set('currentState', GAME_STATES.WAITING_FOR_ANSWER);
gameStateStore.pause(false);});}




function onWordPressed(word){

if(gameStateStore.get('currentState') !== GAME_STATES.WAITING_FOR_ANSWER){
return;}


gameStateStore.pause(true);

var levelOfCurrentWord=words[gameStateStore.get('currentWord').text];

gameStateStore.set('chosenAnswer', word);
if(word === gameStateStore.get('currentWord').definition){
gameStateStore.set('correct', gameStateStore.get('correct') + 1);
gameStateStore.set('currentState', GAME_STATES.CORRECT_ANSWER_CHOSEN);
userProfileStore.updateLevelStats(levelOfCurrentWord, true);
console.log('correct + 1', gameStateStore.get('correct'));}else 

{
console.log('wrong + 1');
gameStateStore.set('wrong', gameStateStore.get('wrong') + 1);
gameStateStore.set('currentState', GAME_STATES.WRONG_ANSWER_CHOSEN);
userProfileStore.updateLevelStats(levelOfCurrentWord, false);
console.log('wrong + 1', gameStateStore.get('wrong'));}


var question=gameStateStore.get('currentQuestion');

question.forEach(function(wordDef){
if(wordDef.definition === word){
wordDef.chosen = true;}});



gameStateStore.pause(false);}


function onChangeLang(lang){
if(lang === userProfileStore.get('language')){
return;}


userProfileStore.set('language', lang);
bus.emit(actions.RESET);}


function onChangeLevel(level){
if(level === userProfileStore.get('language')){
return;}

userProfileStore.setUserLevel(level);
bus.emit(actions.RESET);}


function onReset(){
console.log('game reset');
gameStateStore.reset();}


module.exports = bus;
});
__d('yarn/app/actions/actiontypes.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {
WORDS_PARSED:'WORDS_PARSED', 
VISITED_WORDS_CHANGED:'VISITED_WORDS_CHANGED', 
START_GAME:'START_GAME', 
SHOW_NEXT_QUESTION:'SHOW_NEXT_QUESTION', 
WORD_PRESSED:'WORD_PRESSED', 
CHANGE_LANG:'CHANGE_LANG', 
WORDS_READY:'WORDS_READY', 
RESET:'RESET', 
CHANGE_LEVEL:'CHANGE_LEVEL', 

HOME_BUTTON_PRESSED:'HOME_BUTTON_PRESSED', 
QUIZ_BUTTON_PRESSED:'QUIZ_BUTTON_PRESSED', 
SETTINGS_BUTTON_PRESSED:'SETTINGS_BUTTON_PRESSED'};
});
__d('yarn/app/helpers/getrandomwords.js',["yarn/words.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var words=Object.keys(require('yarn/words.js'));

module.exports = function(amount){
amount || (amount = 5);
var results=[];

while(--amount) {
var index=Math.round(Math.random() * words.length);
results.push(words[index]);}


return results;};
});
__d('yarn/app/helpers/googletranslate.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var API_KEY='AIzaSyDAjHprVDfX_6z2fAs6Vf03g2sOfEiTogs';
var BASE_URL='https://www.googleapis.com/language/translate/v2?key=' + API_KEY;

function translateWords(words, fromLang, toLang, callback){
if(!Array.isArray(words)){
words = [words];}


return fetch(createUrl(words, fromLang, toLang)).
then(function(response){
return response.text();}).

then(function(responseText){
return JSON.parse(responseText);});}



function createUrl(words, fromLang, toLang){
return BASE_URL + 
'&source=' + fromLang + 
'&target=' + toLang + 

words.reduce(function(prev, current){
return prev + '&q=' + current;}, 
'');}


module.exports = {
translateWords:translateWords};
});
__d('yarn/app/helpers/collins.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var API_KEY='wOaKqhkqXIuKKIIRkVRyAy7jNB5dVDeaNZoIpzIMEmxkK4eiZEQDGTFNG3TnlG18';
var BASE_URL='https://api.collinsdictionary.com/api/v1/dictionaries/english-learner/search/first/?format=html&q=';

function getDefinition(word){

return fetch(BASE_URL + encodeURIComponent(word), {
headers:{
accessKey:API_KEY}}).


then(function(response){
return response.text();}).

then(function(responseText){
var json=JSON.parse(responseText);
if(json.entryContent){
json.entryContent = '<style type="text/css">h1, .pron, audio, .inline, .gramGrp {display:none;}</style>' + json.entryContent;}

return json;});}






module.exports = {
getDefinition:getDefinition};
});
__d('yarn/app/stores/userprofilestore.js',["events/events.js","yarn/app/logger/logger.js","react-native/Libraries/react-native/react-native.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var Events=require('events/events.js');
var eventEmitter=new Events.EventEmitter();
var CHANGE_EVENT='store:changed';
var log=require('yarn/app/logger/logger.js');

var React=require('react-native/Libraries/react-native/react-native.js');var 

AsyncStorage=
React.AsyncStorage;

var data={
wordsLimit:10, 
level:0, 
range:40, 
score:0, 
language:'pl', 
correctAnswers:0, 
wrongAnswers:0, 
levelStats:[], 
historyLevelValues:[]};


var PERSISTENCE_KEY='@yarn:userProfileStore';

init();

function init(){
initLevelStats();



loadData();}


function initLevelStats(){
for(var i=0; i < 100; i++) {
data.levelStats[i] = {
correct:0, 
wrong:0};}}




function set(key, d){
data[key] = d;
emitChange();}


function get(key){
return data[key];}


function emitChange(){
eventEmitter.emit(CHANGE_EVENT);}


function addChangeListener(listener){
eventEmitter.on(CHANGE_EVENT, listener);}


function updateLevelStats(level, correct){
if(correct){
data.levelStats[level].correct++;
data.correctAnswers++;
data.score = data.correctAnswers * 10;}else 
{
data.levelStats[level].wrong++;
data.wrongAnswers++;}


updateUserLevel();
saveData();
emitChange();}


function updateUserLevel(){
var totalAnswers=data.correctAnswers + data.wrongAnswers;

if(totalAnswers < 20){
console.log('Cannot compute user level yet');
return;}


var sum=0;
var max=0;

for(var i=0, len=data.levelStats.length; i < len; i++) {

var lvl=data.levelStats[i];
var weight=(100 - i) * 0.9;

if(lvl.correct || lvl.wrong){
sum += (i + 1) * lvl.correct / (lvl.correct + lvl.wrong) * weight;
max += (i + 1) * weight;}}



data.level = parseInt(sum / max * 100);
console.log('New user level:', data.level);


if(totalAnswers > 20 && data.range == 40){
data.range = 30;}else 

if(totalAnswers > 40 && data.range == 30){
data.range = 20;}else 

if(totalAnswers > 60 && data.range == 20){
data.range = 15;}


data.historyLevelValues.push(data.level);}


function saveData(){
console.log('saving userProfileStore:', data);

AsyncStorage.
setItem(PERSISTENCE_KEY, JSON.stringify(data)).
done();}


function loadData(key){
AsyncStorage.
getItem(PERSISTENCE_KEY).
then(function(stats){
var parsedData=JSON.parse(stats);
if(parsedData){
data = parsedData;}

migrate1();

log({
message:'user profile loaded', 
userProfileData:data});


emitChange();}).

done();}







function setUserLevel(level){
if(level === data.level){
return;}


log({
message:'Setting user level', 
level:level});

data.correctAnswers = 0;
data.wrongAnswers = 0;
data.level = level;
data.range = 40;
data.levelStats = [];
data.historyLevelValues = [];
initLevelStats();
saveData();
emitChange();}


function migrate1(){
if(!data.wordsLimit){
data.wordsLimit = 10;
saveData();}}



module.exports = {
addChangeListener:addChangeListener, 
get:get, 
set:set, 
updateLevelStats:updateLevelStats, 
setUserLevel:setUserLevel};
});
__d('yarn/app/views/popup/popup.js',["image!horizontal-gradient","Dimensions","react-native/Libraries/react-native/react-native.js","yarn/app/uiconfig.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=





React.StyleSheet;var View=React.View;var Text=React.Text;var WebView=React.WebView;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;var Image=React.Image;

var Dimensions=require('Dimensions');var _Dimensions$get=
Dimensions.get('window');var width=_Dimensions$get.width;var height=_Dimensions$get.height;

var uiConfig=require('yarn/app/uiconfig.js');
var COLORS=uiConfig.COLORS;

var POPUP_TYPE={
INFO:'INFO', 
ANSWER:'ANSWER'};




var POPUP_MARGIN=10;

var ARROW_EDGE_WIDTH=10;
var ARROW_WIDTH=ARROW_EDGE_WIDTH * Math.sqrt(2);
var ARROW_MIN_LEFT=POPUP_MARGIN + 3;

var Popup=React.createClass({displayName:'Popup', 

getDefaultProps:function(){
return {
type:POPUP_TYPE.ANSWER, 
arrowRect:{x:0, y:0, width:0, height:0}};}, 



render:function(){
if(!this.props.visible){
return React.createElement(View, null);}


var content;

switch(this.props.type){
case POPUP_TYPE.INFO:
content = this.renderInfoPopup();
break;

case POPUP_TYPE.ANSWER:
default:
content = this.renderAnswerPopup();
break;}


return (
React.createElement(TouchableWithoutFeedback, {onPress:this.props.onClose}, 
React.createElement(View, {style:styles.overlay}, 
content)));}, 





renderInfoPopup:function(){
var popupWidth=180;
var extraStyle={
width:popupWidth, 
left:POPUP_MARGIN, 
height:60};

var arrowLeft=this.computeArrowPosition();

return (
React.createElement(View, {style:[styles.popup, extraStyle]}, 
React.createElement(TouchableWithoutFeedback, {onPress:this.props.cancelPress}, 
React.createElement(View, {style:[styles.contentWrap, styles.row]}, 
React.createElement(View, null, 
React.createElement(Text, null, 'Tap the best'), 
React.createElement(Text, null, 'translation...')), 

React.createElement(View, null, 
React.createElement(TouchableWithoutFeedback, {onPress:this.props.onSubmit}, 
React.createElement(View, {style:styles.confirmButton}, 
React.createElement(Text, {style:styles.confirmButtonText}, 'OK')))))), 





React.createElement(View, {style:[styles.arrow, {left:arrowLeft}]})));}, 





renderAnswerPopup:function(){
var popupWidth=width - 2 * POPUP_MARGIN;
var extraStyle={
width:popupWidth, 
left:POPUP_MARGIN};

var arrowLeft=this.computeArrowPosition();

return (
React.createElement(View, {style:[styles.popup, extraStyle]}, 
React.createElement(TouchableWithoutFeedback, {onPress:this.props.cancelPress}, 
React.createElement(View, {style:styles.contentWrap}, 
React.createElement(Text, {style:styles.header}, this.props.title), 


React.createElement(WebView, {html:this.props.content, style:styles.webView}), 
React.createElement(View, {style:styles.gradient}, 
React.createElement(Image, {source:require('image!horizontal-gradient'), style:styles.gradientImage})), 


React.createElement(View, {style:styles.footer}, 
React.createElement(TouchableWithoutFeedback, {onPress:this.props.onShowDictionary}, 
React.createElement(View, {style:styles.dictionary}, 
React.createElement(Text, {style:styles.dictionaryText}, 'Show native dictionary'))), 


React.createElement(TouchableWithoutFeedback, {onPress:this.props.onSubmit}, 
React.createElement(View, {style:styles.nextButton}, 
React.createElement(View, {style:styles.nextButtonArrow})))))), 







React.createElement(View, {style:[styles.arrow, {left:arrowLeft}]})));}, 





computeArrowPosition:function(){
return Math.max(this.props.arrowRect.x + this.props.arrowRect.width / 2 - ARROW_WIDTH, ARROW_MIN_LEFT);}, 


cancelPress:function(ev){
ev.preventDefault();
ev.stopPropagation();}});





var styles=StyleSheet.create({

overlay:{
position:'absolute', 
top:0, 
left:0, 
bottom:0, 
right:0, 
backgroundColor:'rgba(0,0,0,0)', 
flex:1}, 


contentWrap:{
position:'absolute', 
top:10, 
left:10, 
bottom:10, 
right:10}, 


webView:{
borderWidth:0, 
marginBottom:5}, 


popup:{
position:'absolute', 
left:10, 
bottom:uiConfig.TOOLBAR_HEIGHT + ARROW_WIDTH / 2, 
flex:1, 
backgroundColor:'#FFFFFF', 
borderRadius:3, 
height:200, 
paddingBottom:0, 
shadowColor:'#000000', 
shadowOffset:{
width:0, 
height:2}, 

shadowOpacity:0.5, 
shadowRadius:3}, 


header:{
fontWeight:'700'}, 


footer:{
height:30, 
position:'absolute', 
left:0, 
right:0, 
bottom:0, 
backgroundColor:'#FFFFFF'}, 


nextButton:{
position:'absolute', 
right:0, 
top:0, 
width:30, 
height:30, 
backgroundColor:COLORS.BLUE, 
borderRadius:15}, 


nextButtonArrow:{
borderColor:'rgba(0,0,0,0)', 
borderWidth:8, 
borderRightWidth:0, 
borderLeftColor:'#FFFFFF', 
position:'absolute', 
top:8, 
left:12}, 

arrow:{
position:'absolute', 
bottom:-5, 
left:20, 
width:ARROW_EDGE_WIDTH, 
height:ARROW_EDGE_WIDTH, 
backgroundColor:'#FFFFFF', 
transform:[
{
rotate:'45deg'}]}, 




row:{
flexDirection:'row'}, 


confirmButton:{
backgroundColor:COLORS.GREEN, 
paddingTop:5, 
paddingBottom:5, 
paddingLeft:15, 
paddingRight:15, 
marginTop:7, 
marginLeft:20, 
borderRadius:3}, 


confirmButtonText:{
color:'#FFFFFF'}, 


gradientImage:{
height:20}, 


gradient:{
height:20, 
backgroundColor:'transparent', 
position:'absolute', 
bottom:20, 
left:0, 
right:0, 
overflow:'hidden'}, 


dictionary:{
borderWidth:1, 
borderRadius:4, 
backgroundColor:uiConfig.COLORS.GREEN, 
position:'absolute', 
padding:5, 
top:0, 
left:0, 

height:30}, 


dictionaryText:{
color:'#FFFFFF'}});





Popup.POPUP_TYPE = POPUP_TYPE;

module.exports = Popup;
});
__d('image!horizontal-gradient',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/mateusz/workspace/weaverdigital/yarn/iOS/Images.xcassets/horizontal-gradient.imageset/horizontal-gradient.png","uri":"horizontal-gradient","width":600,"height":30,"deprecated":true};
});
__d('yarn/app/views/statusbar/statusbar.js',["react-native/Libraries/react-native/react-native.js","yarn/app/views/statusbar/navbarlabel.js","yarn/app/views/statusbar/navbarbutton.js","yarn/app/uiconfig.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=



React.StyleSheet;var View=React.View;var Text=React.Text;var Animated=React.Animated;

var NavBarLabel=require('yarn/app/views/statusbar/navbarlabel.js');
var NavBarButton=require('yarn/app/views/statusbar/navbarbutton.js');
var uiConfig=require('yarn/app/uiconfig.js');

var StatusBar=React.createClass({displayName:'StatusBar', 

getDefaultProps:function(){
return {
totalWords:0, 
correctWords:0, 
score:0, 
level:0, 
nextText:'Onwards >', 
showWordsCount:false, 
wordsCount:0, 
startHidden:false, 
onNextPress:function(){}};}, 



getInitialState:function(){
return {
height:uiConfig.TOOLBAR_HEIGHT, 
opacityValue:new Animated.Value(this.props.startHidden?0:1), 
marginTopValue:new Animated.Value(this.props.startHidden?uiConfig.TOOLBAR_ANIMATION_OFFSET:0)};}, 



render:function(){
var items=this.props.showWordsCount?this.renderWordsCount():this.renderStats();

return (
React.createElement(Animated.View, {style:[styles.wrap, {
transform:[
{translateY:this.state.marginTopValue}], 

opacity:this.state.opacityValue}]}, 

items, 
React.createElement(NavBarLabel, {
onPress:this.props.onNextPress, 
texts:[{text:this.props.nextText, color:'#FFFFFF'}], 
backgroundColor:uiConfig.COLORS.BLUE, 
style:styles.nextButton})));}, 





renderWordsCount:function(){
var texts=[{
text:this.props.wordsCount, 
color:uiConfig.COLORS.ORANGE}, 
{
text:' ' + (this.props.wordsCount === 1?'word':'words') + '...', 
color:uiConfig.COLORS.MID_GREY}];


return (
React.createElement(View, {style:styles.contentWrap}, 
React.createElement(View, {style:styles.wordsCountCenterH}, 
React.createElement(View, {style:styles.wordsCountCenterV}, 
React.createElement(NavBarLabel, {
texts:texts, 
specialFont:true, 
isFirst:true})))));}, 







renderStats:function(){
var progress=this.props.correctWords / this.props.totalWords * 100;

return (
React.createElement(View, {style:styles.contentWrap}, 
React.createElement(View, {style:styles.progressBox}, 
React.createElement(View, {style:styles.progressTextWrap}, 
React.createElement(View, {style:styles.progressTextWrapVertical}, 
React.createElement(Text, {style:styles.text}, this.props.correctWords), 
React.createElement(Text, {style:styles.textTotal}, '/', this.props.totalWords, ' correct'))), 


React.createElement(ProgressBar, {progress:progress})), 

React.createElement(NavBarLabel, {
texts:[{text:this.props.score, color:uiConfig.COLORS.ORANGE}], 
style:styles.score, 
specialFont:true}), 

React.createElement(NavBarLabel, {
texts:[{text:this.props.level, color:uiConfig.COLORS.RED}], 
color:uiConfig.COLORS.RED, 
style:styles.level, 
specialFont:true})));}, 





animateIn:function(){
Animated.parallel([
Animated.timing(
this.state.opacityValue, 
{toValue:1}), 

Animated.timing(
this.state.marginTopValue, 
{toValue:0})]).

start();}, 


animateOut:function(){
Animated.parallel([
Animated.timing(
this.state.opacityValue, 
{toValue:0}), 

Animated.timing(
this.state.marginTopValue, 
{toValue:uiConfig.TOOLBAR_ANIMATION_OFFSET})]).

start();}});



var ProgressBar=React.createClass({displayName:'ProgressBar', 
getDefaultProps:function(){
return {
progress:0};}, 



render:function(){

var progressStyle={
flex:this.props.progress};

var endStyle={
flex:100 - this.props.progress};


return (
React.createElement(View, {style:styles.progressBarWrap}, 
React.createElement(View, {style:[styles.progressBar, progressStyle]}), 
React.createElement(View, {style:[styles.progressBarEnd, endStyle]})));}});






var styles=StyleSheet.create({

wrap:{
borderTopWidth:1, 
borderTopColor:uiConfig.COLORS.MID_GREY, 
height:uiConfig.TOOLBAR_HEIGHT - uiConfig.PROGRESSBAR_HEIGHT + 1, 
flexDirection:'row', 
alignItems:'stretch'}, 


contentWrap:{
flex:1, 
flexDirection:'row', 
alignItems:'stretch'}, 


progressTextWrap:{
flex:1, 
alignItems:'center'}, 


progressTextWrapVertical:{
flex:1, 
flexDirection:'row', 
alignItems:'center'}, 


text:{
textAlign:'right', 
color:uiConfig.COLORS.TEXT, 
fontSize:uiConfig.PROGRESSBAR_FONT_SIZE, 
fontWeight:'700'}, 


textTotal:{
textAlign:'left', 
color:uiConfig.COLORS.TEXT, 
fontSize:uiConfig.PROGRESSBAR_FONT_SIZE}, 


progressBarWrap:{
flexDirection:'row', 
height:2}, 


progressBar:{
backgroundColor:uiConfig.COLORS.GREEN, 
height:uiConfig.PROGRESSBAR_HEIGHT}, 


progressBarEnd:{
backgroundColor:uiConfig.COLORS.MID_GREY, 
height:uiConfig.PROGRESSBAR_HEIGHT}, 


progressBox:{
flex:2}, 


score:{
flex:2}, 


level:{
flex:1}, 


nextButton:{}, 


wordsCountCenterH:{
flex:1, 
flexDirection:'column', 
alignItems:'center', 
backgroundColor:'#FFFFFF'}, 


wordsCountCenterV:{
flex:1, 
flexDirection:'row', 
alignItems:'center'}});





module.exports = StatusBar;
});
__d('yarn/app/views/statusbar/navbarlabel.js',["react-native/Libraries/react-native/react-native.js","yarn/app/uiconfig.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=



React.StyleSheet;var View=React.View;var Text=React.Text;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;

var uiConfig=require('yarn/app/uiconfig.js');

var NavBarLabel=React.createClass({displayName:'NavBarLabel', 

getDefaultProps:function(){
return {
color:uiConfig.COLORS.MID_GREY, 
backgroundColor:'#FFFFFF', 
texts:[], 
isFirst:false, 
onPress:function(){}};}, 



getInitialState:function(){
return {
height:uiConfig.TOOLBAR_HEIGHT};}, 



render:function(){
var texts=[];
for(var i=0; i < this.props.texts.length; i++) {
texts.push(this.renderTextItem(this.props.texts[i], i, this.props.specialFont));}


return (
React.createElement(TouchableWithoutFeedback, {onPress:this.props.onPress}, 
React.createElement(View, {style:[styles.wrap, {
backgroundColor:this.props.backgroundColor, 
borderLeftWidth:this.props.isFirst?0:1}]}, 

React.createElement(View, {style:styles.textWrap}, 
texts))));}, 






renderTextItem:function(cfg, key, useSpecialFont){
var extraStyle={};
if(useSpecialFont){
extraStyle.fontFamily = 'Bauhaus 93';
extraStyle.fontSize = 24;
extraStyle.lineHeight = 25;
extraStyle.height = 24;}

if(cfg.color){
extraStyle.color = cfg.color;}


return (
React.createElement(Text, {key:'text-' + key, style:[styles.text, extraStyle]}, cfg.text));}});




var styles=StyleSheet.create({
wrap:{
borderLeftWidth:1, 
borderLeftColor:uiConfig.COLORS.MID_GREY, 
alignItems:'center', 
paddingLeft:10, 
paddingRight:10}, 

textWrap:{
flex:1, 
alignItems:'center', 
flexDirection:'row'}, 

text:{}});




module.exports = NavBarLabel;
});
__d('yarn/app/views/settings/settings.js',["react-native/Libraries/react-native/react-native.js","yarn/app/actions/actions.js","yarn/app/views/settings/googlelanguages.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=





React.StyleSheet;var View=React.View;var Text=React.Text;var PickerIOS=React.PickerIOS;var PickerItemIOS=React.PickerItemIOS;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;

var actions=require('yarn/app/actions/actions.js');
var languages=require('yarn/app/views/settings/googlelanguages.js');
















var Settings=React.createClass({displayName:'Settings', 

getDefaultProps:function(){
return {
onClose:function(){}};}, 



getInitialState:function(){
return {
lang:this.props.initialLang, 
level:this.props.initialLevel};}, 



render:function(){
return (
React.createElement(View, {style:styles.overlay}, 
React.createElement(View, {style:styles.content}, 
React.createElement(Text, null, 'Language:'), 
React.createElement(PickerIOS, {
selectedValue:this.state.lang, 
onValueChange:this.onLanguageChange}, 

this.renderLangs()), 


React.createElement(View, {style:styles.level}, 
React.createElement(Text, {style:styles.levelLabel}, 'User level:'), 
React.createElement(Text, {style:styles.levelValue}, 
this.state.level), 

React.createElement(TouchableWithoutFeedback, {onPress:this.incrementLevel}, 
React.createElement(Text, {style:styles.levelChangeButton}, ' + ')), 

React.createElement(TouchableWithoutFeedback, {onPress:this.decrementLevel}, 
React.createElement(Text, {style:styles.levelChangeButton}, ' - '))), 



React.createElement(TouchableWithoutFeedback, {onPress:this.onClose}, 
React.createElement(Text, null, 'Tap here to close')))));}, 






onLanguageChange:function(lang){
console.log('Chosen lang: ', lang);
this.setState({
lang:lang});}, 



incrementLevel:function(){
this.setState({
level:Math.min(this.state.level + 1, 100)});}, 


decrementLevel:function(){
this.setState({
level:Math.max(this.state.level - 1, 1)});}, 



renderLangs:function(){
var items=languages.map(function(lang){
var langName=lang.name;
var langCode=lang.language;
return (
React.createElement(PickerItemIOS, {
type:1, 
key:langCode, 
value:langCode, 
label:langName}));});



return items;}, 


onClose:function(){
if(this.props.initialLang !== this.state.lang){
actions.emit(actions.CHANGE_LANG, this.state.lang);}

if(this.props.initialLevel !== this.state.level){
actions.emit(actions.CHANGE_LEVEL, this.state.level);}

this.props.onClose();}});



var styles=StyleSheet.create({

overlay:{
position:'absolute', 
top:0, 
left:0, 
bottom:0, 
right:0, 
backgroundColor:'rgba(0,0,0,0.75)', 
flex:1}, 


content:{
backgroundColor:'#FFFFFF', 
margin:10, 
padding:10, 
borderRadius:3}, 


level:{
flex:1, 
flexDirection:'row'}, 


levelLabel:{
flex:4}, 


levelValue:{
flex:3}, 


levelChangeButton:{
flex:1, 
fontSize:20, 
textAlign:'center'}});





module.exports = Settings;
});
__d('yarn/app/views/settings/googlelanguages.js',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";




var languagesData={
"data":{
"languages":[
{
"language":"af", 
"name":"Afrikaans"}, 

{
"language":"sq", 
"name":"Albanian"}, 

{
"language":"ar", 
"name":"Arabic"}, 

{
"language":"hy", 
"name":"Armenian"}, 

{
"language":"az", 
"name":"Azerbaijani"}, 

{
"language":"eu", 
"name":"Basque"}, 

{
"language":"be", 
"name":"Belarusian"}, 

{
"language":"bn", 
"name":"Bengali"}, 

{
"language":"bs", 
"name":"Bosnian"}, 

{
"language":"bg", 
"name":"Bulgarian"}, 

{
"language":"ca", 
"name":"Catalan"}, 

{
"language":"ceb", 
"name":"Cebuano"}, 

{
"language":"ny", 
"name":"Chichewa"}, 

{
"language":"zh", 
"name":"Chinese (Simplified)"}, 

{
"language":"zh-TW", 
"name":"Chinese (Traditional)"}, 

{
"language":"hr", 
"name":"Croatian"}, 

{
"language":"cs", 
"name":"Czech"}, 

{
"language":"da", 
"name":"Danish"}, 

{
"language":"nl", 
"name":"Dutch"}, 

{
"language":"en", 
"name":"English"}, 

{
"language":"eo", 
"name":"Esperanto"}, 

{
"language":"et", 
"name":"Estonian"}, 

{
"language":"tl", 
"name":"Filipino"}, 

{
"language":"fi", 
"name":"Finnish"}, 

{
"language":"fr", 
"name":"French"}, 

{
"language":"gl", 
"name":"Galician"}, 

{
"language":"ka", 
"name":"Georgian"}, 

{
"language":"de", 
"name":"German"}, 

{
"language":"el", 
"name":"Greek"}, 

{
"language":"gu", 
"name":"Gujarati"}, 

{
"language":"ht", 
"name":"Haitian Creole"}, 

{
"language":"ha", 
"name":"Hausa"}, 

{
"language":"iw", 
"name":"Hebrew"}, 

{
"language":"hi", 
"name":"Hindi"}, 

{
"language":"hmn", 
"name":"Hmong"}, 

{
"language":"hu", 
"name":"Hungarian"}, 

{
"language":"is", 
"name":"Icelandic"}, 

{
"language":"ig", 
"name":"Igbo"}, 

{
"language":"id", 
"name":"Indonesian"}, 

{
"language":"ga", 
"name":"Irish"}, 

{
"language":"it", 
"name":"Italian"}, 

{
"language":"ja", 
"name":"Japanese"}, 

{
"language":"jw", 
"name":"Javanese"}, 

{
"language":"kn", 
"name":"Kannada"}, 

{
"language":"kk", 
"name":"Kazakh"}, 

{
"language":"km", 
"name":"Khmer"}, 

{
"language":"ko", 
"name":"Korean"}, 

{
"language":"lo", 
"name":"Lao"}, 

{
"language":"la", 
"name":"Latin"}, 

{
"language":"lv", 
"name":"Latvian"}, 

{
"language":"lt", 
"name":"Lithuanian"}, 

{
"language":"mk", 
"name":"Macedonian"}, 

{
"language":"mg", 
"name":"Malagasy"}, 

{
"language":"ms", 
"name":"Malay"}, 

{
"language":"ml", 
"name":"Malayalam"}, 

{
"language":"mt", 
"name":"Maltese"}, 

{
"language":"mi", 
"name":"Maori"}, 

{
"language":"mr", 
"name":"Marathi"}, 

{
"language":"mn", 
"name":"Mongolian"}, 

{
"language":"my", 
"name":"Myanmar (Burmese)"}, 

{
"language":"ne", 
"name":"Nepali"}, 

{
"language":"no", 
"name":"Norwegian"}, 

{
"language":"fa", 
"name":"Persian"}, 

{
"language":"pl", 
"name":"Polish"}, 

{
"language":"pt", 
"name":"Portuguese"}, 

{
"language":"pa", 
"name":"Punjabi"}, 

{
"language":"ro", 
"name":"Romanian"}, 

{
"language":"ru", 
"name":"Russian"}, 

{
"language":"sr", 
"name":"Serbian"}, 

{
"language":"st", 
"name":"Sesotho"}, 

{
"language":"si", 
"name":"Sinhala"}, 

{
"language":"sk", 
"name":"Slovak"}, 

{
"language":"sl", 
"name":"Slovenian"}, 

{
"language":"so", 
"name":"Somali"}, 

{
"language":"es", 
"name":"Spanish"}, 

{
"language":"su", 
"name":"Sundanese"}, 

{
"language":"sw", 
"name":"Swahili"}, 

{
"language":"sv", 
"name":"Swedish"}, 

{
"language":"tg", 
"name":"Tajik"}, 

{
"language":"ta", 
"name":"Tamil"}, 

{
"language":"te", 
"name":"Telugu"}, 

{
"language":"th", 
"name":"Thai"}, 

{
"language":"tr", 
"name":"Turkish"}, 

{
"language":"uk", 
"name":"Ukrainian"}, 

{
"language":"ur", 
"name":"Urdu"}, 

{
"language":"uz", 
"name":"Uzbek"}, 

{
"language":"vi", 
"name":"Vietnamese"}, 

{
"language":"cy", 
"name":"Welsh"}, 

{
"language":"yi", 
"name":"Yiddish"}, 

{
"language":"yo", 
"name":"Yoruba"}, 

{
"language":"zu", 
"name":"Zulu"}]}};





module.exports = languagesData.data.languages;
});
__d('yarn/app/views/mainbar/mainbar.js',["image!home-icon","image!yarn-icon","image!settings-icon","Dimensions","react-native/Libraries/react-native/react-native.js","yarn/app/actions/actions.js","yarn/app/uiconfig.js"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=





React.StyleSheet;var View=React.View;var Text=React.Text;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;var Image=React.Image;var Animated=React.Animated;

var Dimensions=require('Dimensions');var _Dimensions$get=
Dimensions.get('window');var width=_Dimensions$get.width;var height=_Dimensions$get.height;

var actions=require('yarn/app/actions/actions.js');
var uiConfig=require('yarn/app/uiconfig.js');

var MainBar=React.createClass({displayName:'MainBar', 

getInitialState:function(){
return {
opacityValue:new Animated.Value(0), 
marginTopValue:new Animated.Value(uiConfig.TOOLBAR_ANIMATION_OFFSET)};}, 



render:function(){
return (
React.createElement(Animated.View, {style:[styles.wrap, {
transform:[
{translateY:this.state.marginTopValue}], 

opacity:this.state.opacityValue}]}, 

React.createElement(View, {style:styles.buttonWrap}, 
React.createElement(TouchableWithoutFeedback, {onPress:this.onHomePressed}, 
React.createElement(Image, {source:require('image!home-icon'), style:styles.icon}))), 


React.createElement(View, {style:styles.buttonWrap}, 
React.createElement(TouchableWithoutFeedback, {onPress:this.onQuizPressed}, 
React.createElement(Image, {source:require('image!yarn-icon'), style:styles.iconCentral}))), 


React.createElement(View, {style:styles.buttonWrap}, 
React.createElement(TouchableWithoutFeedback, {onPress:this.onSettingsPressed}, 
React.createElement(Image, {source:require('image!settings-icon'), style:styles.icon})))));}, 






componentDidMount:function(){
this.animateIn();}, 


animateIn:function(){
Animated.parallel([
Animated.timing(
this.state.opacityValue, 
{toValue:1}), 

Animated.timing(
this.state.marginTopValue, 
{toValue:0})]).

start();}, 


animateOut:function(){
Animated.parallel([
Animated.timing(
this.state.opacityValue, 
{toValue:0}), 

Animated.timing(
this.state.marginTopValue, 
{toValue:uiConfig.TOOLBAR_ANIMATION_OFFSET})]).

start();}, 


onHomePressed:function(){
actions.emit(actions.HOME_BUTTON_PRESSED);}, 

onQuizPressed:function(){
actions.emit(actions.QUIZ_BUTTON_PRESSED);}, 

onSettingsPressed:function(){
actions.emit(actions.SETTINGS_BUTTON_PRESSED);}});



var styles=StyleSheet.create({

wrap:{
flexDirection:'row', 
height:uiConfig.TOOLBAR_HEIGHT, 
position:'absolute', 
bottom:0, 
width:width, 
borderTopWidth:1, 
borderTopColor:uiConfig.COLORS.MID_GREY}, 


buttonWrap:{
flex:1, 
alignItems:'center', 
justifyContent:'center'}, 


icon:{
width:uiConfig.TOOLBAR_ICON_SIZE, 
height:uiConfig.TOOLBAR_ICON_SIZE}, 


iconCentral:{
width:uiConfig.TOOLBAR_ICON_SIZE + 6, 
height:uiConfig.TOOLBAR_ICON_SIZE + 6}});



module.exports = MainBar;
});
__d('image!home-icon',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/mateusz/workspace/weaverdigital/yarn/iOS/Images.xcassets/home-icon.imageset/home-icon.png","uri":"home-icon","width":44,"height":44,"deprecated":true};
});
__d('image!yarn-icon',[],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/mateusz/workspace/weaverdigital/yarn/iOS/Images.xcassets/yarn-icon.imageset/yarn-icon.png","uri":"yarn-icon","width":50,"height":50,"deprecated":true};
});
;require("yarn/index.ios.js");
//@ sourceMappingURL=/index.ios.map