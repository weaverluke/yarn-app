__DEV__ = 
false;


__BUNDLE_START_TIME__ = Date.now();
(
function(global){


if(global.require){
return;}


var __DEV__=global.__DEV__;

var toString=Object.prototype.toString;













var modulesMap={},






dependencyMap={},



predefinedRefCounts={},

_counter=0,

REQUIRE_WHEN_READY=1,
USED_AS_TRANSPORT=2,

hop=Object.prototype.hasOwnProperty;

function _debugUnresolvedDependencies(names){
var unresolved=Array.prototype.slice.call(names);
var visited={};
var ii,name,module,dependency;

while(unresolved.length) {
name = unresolved.shift();
if(visited[name]){
continue;}

visited[name] = true;

module = modulesMap[name];
if(!module || !module.waiting){
continue;}


for(ii = 0;ii < module.dependencies.length;ii++) {
dependency = module.dependencies[ii];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolved.push(dependency);}}}




for(name in visited) if(hop.call(visited,name)){
unresolved.push(name);}


var messages=[];
for(ii = 0;ii < unresolved.length;ii++) {
name = unresolved[ii];
var message=name;
module = modulesMap[name];
if(!module){
message += ' is not defined';}else 
if(!module.waiting){
message += ' is ready';}else 
{
var unresolvedDependencies=[];
for(var jj=0;jj < module.dependencies.length;jj++) {
dependency = module.dependencies[jj];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolvedDependencies.push(dependency);}}


message += ' is waiting for ' + unresolvedDependencies.join(', ');}

messages.push(message);}

return messages.join('\n');}





function ModuleError(msg){
this.name = 'ModuleError';
this.message = msg;
this.stack = Error(msg).stack;
this.framesToPop = 2;}

ModuleError.prototype = Object.create(Error.prototype);
ModuleError.prototype.constructor = ModuleError;

var _performance=
global.performance || 
global.msPerformance || 
global.webkitPerformance || {};

if(!_performance.now){
_performance = global.Date;}


var _now=_performance?
_performance.now.bind(_performance):function(){return 0;};

var _factoryStackCount=0;
var _factoryTime=0;
var _totalFactories=0;
var _inGuard=false;
























































function require(id){
var module=modulesMap[id],dep,i,msg;
if(module && module.exports){


if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}

if(global.ErrorUtils && !_inGuard){
_inGuard = true;
try{
var ret=require.apply(this,arguments);}
catch(e) {
global.ErrorUtils.reportFatalError(e);}

_inGuard = false;
return ret;}


if(!module){
msg = 'Requiring unknown module "' + id + '"';
if(__DEV__){
msg += '. If you are sure the module is there, try restarting the packager.';}

throw new ModuleError(msg);}


if(module.hasError){
throw new ModuleError(
'Requiring module "' + id + '" which threw an exception');}



if(module.waiting){
throw new ModuleError(
'Requiring module "' + id + '" with unresolved dependencies: ' + 
_debugUnresolvedDependencies([id]));}



var exports=module.exports = {};
var factory=module.factory;
if(toString.call(factory) === '[object Function]'){
var args=[],
dependencies=module.dependencies,
length=dependencies.length,
ret;
if(module.special & USED_AS_TRANSPORT){
length = Math.min(length,factory.length);}

try{
for(i = 0;args.length < length;i++) {
dep = dependencies[i];
if(!module.inlineRequires[dep]){
args.push(dep === 'module'?module:
dep === 'exports'?exports:
require.call(null,dep));}}



++_totalFactories;
if(_factoryStackCount++ === 0){
_factoryTime -= _now();}

try{
ret = factory.apply(module.context || global,args);}
catch(e) {
if(modulesMap.ex && modulesMap.erx){


var ex=require.call(null,'ex');
var erx=require.call(null,'erx');
var messageWithParams=erx(e.message);
if(messageWithParams[0].indexOf(' from module "%s"') < 0){
messageWithParams[0] += ' from module "%s"';
messageWithParams[messageWithParams.length] = id;}

e.message = ex.apply(null,messageWithParams);}

throw e;}finally 
{
if(--_factoryStackCount === 0){
_factoryTime += _now();}}}


catch(e) {
module.hasError = true;
module.exports = null;
throw e;}

if(ret){
if(__DEV__){
if(typeof ret != 'object' && typeof ret != 'function'){
throw new ModuleError(
'Factory for module "' + id + '" returned ' + 
'an invalid value "' + ret + '". ' + 
'Returned value should be either a function or an object.');}}



module.exports = ret;}}else 

{
module.exports = factory;}




if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}


require.__getFactoryTime = function(){
return (_factoryStackCount?_now():0) + _factoryTime;};


require.__getTotalFactories = function(){
return _totalFactories;};










require.ensure = function(dependencies,callback){
throw '`require.ensure` is still not supported';};

























































function define(id,dependencies,factory,
_special,_context,_refCount,_inlineRequires){
if(dependencies === undefined){
dependencies = [];
factory = id;
id = _uid();}else 
if(factory === undefined){
factory = dependencies;
if(toString.call(id) === '[object Array]'){
dependencies = id;
id = _uid();}else 
{
dependencies = [];}}





var canceler={cancel:_undefine.bind(this,id)};

var record=modulesMap[id];






if(record){
if(_refCount){
record.refcount += _refCount;}


return canceler;}else 
if(!dependencies && !factory && _refCount){


predefinedRefCounts[id] = (predefinedRefCounts[id] || 0) + _refCount;
return canceler;}else 
{

record = {id:id};
record.refcount = (predefinedRefCounts[id] || 0) + (_refCount || 0);
delete predefinedRefCounts[id];}


if(__DEV__){
if(
!factory || 
typeof factory != 'object' && typeof factory != 'function' && 
typeof factory != 'string'){
throw new ModuleError(
'Invalid factory "' + factory + '" for module "' + id + '". ' + 
'Factory should be either a function or an object.');}



if(toString.call(dependencies) !== '[object Array]'){
throw new ModuleError(
'Invalid dependencies for module "' + id + '". ' + 
'Dependencies must be passed as an array.');}}




record.factory = factory;
record.dependencies = dependencies;
record.context = _context;
record.special = _special;
record.inlineRequires = _inlineRequires || {};
record.waitingMap = {};
record.waiting = 0;
record.hasError = false;
modulesMap[id] = record;
_initDependencies(id);

return canceler;}


function _undefine(id){
if(!modulesMap[id]){
return;}


var module=modulesMap[id];
delete modulesMap[id];

for(var dep in module.waitingMap) {
if(module.waitingMap[dep]){
delete dependencyMap[dep][id];}}



for(var ii=0;ii < module.dependencies.length;ii++) {
dep = module.dependencies[ii];
if(modulesMap[dep]){
if(modulesMap[dep].refcount-- === 1){
_undefine(dep);}}else 

if(predefinedRefCounts[dep]){
predefinedRefCounts[dep]--;}}}






function _uid(){
return '__mod__' + _counter++;}


function _addDependency(module,dep){

if(!module.waitingMap[dep] && module.id !== dep){
module.waiting++;
module.waitingMap[dep] = 1;
dependencyMap[dep] || (dependencyMap[dep] = {});
dependencyMap[dep][module.id] = 1;}}



function _initDependencies(id){
var modulesToRequire=[];
var module=modulesMap[id];
var dep,i,subdep;


for(i = 0;i < module.dependencies.length;i++) {
dep = module.dependencies[i];
if(!modulesMap[dep]){
_addDependency(module,dep);}else 
if(modulesMap[dep].waiting){
for(subdep in modulesMap[dep].waitingMap) {
if(modulesMap[dep].waitingMap[subdep]){
_addDependency(module,subdep);}}}}




if(module.waiting === 0 && module.special & REQUIRE_WHEN_READY){
modulesToRequire.push(id);}



if(dependencyMap[id]){
var deps=dependencyMap[id];
var submodule;
dependencyMap[id] = undefined;
for(dep in deps) {
submodule = modulesMap[dep];


for(subdep in module.waitingMap) {
if(module.waitingMap[subdep]){
_addDependency(submodule,subdep);}}



if(submodule.waitingMap[id]){
submodule.waitingMap[id] = undefined;
submodule.waiting--;}

if(submodule.waiting === 0 && 
submodule.special & REQUIRE_WHEN_READY){
modulesToRequire.push(dep);}}}





for(i = 0;i < modulesToRequire.length;i++) {
require.call(null,modulesToRequire[i]);}}



function _register(id,exports){
var module=modulesMap[id] = {id:id};
module.exports = exports;
module.refcount = 0;}




_register('module',0);
_register('exports',0);

_register('global',global);
_register('require',require);

global.require = require;

require.__debug = {
modules:modulesMap,
deps:dependencyMap,
printDependencyInfo:function(){
if(!global.console){
return;}

var names=Object.keys(require.__debug.deps);
global.console.log(_debugUnresolvedDependencies(names));}};









global.__d = function(id,deps,factory,_special,_inlineRequires){
var defaultDeps=['global','require','module','exports'];
define(id,defaultDeps.concat(deps),factory,_special || USED_AS_TRANSPORT,
null,null,_inlineRequires);};})(


this);
Object.

















assign = function(target,sources){
if(__DEV__){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}

if(typeof target !== 'object' && typeof target !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}




for(var nextIndex=1;nextIndex < arguments.length;nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


if(__DEV__){
if(typeof nextSource !== 'object' && 
typeof nextSource !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}








for(var key in nextSource) {
if(__DEV__){
var hasOwnProperty=Object.prototype.hasOwnProperty;
if(!hasOwnProperty.call(nextSource,key)){
throw new TypeError(
'One of the sources to assign has an enumerable key on the ' + 
'prototype chain. This is an edge case that we do not support. ' + 
'This error is a performance optimization and not spec compliant.');}}



target[key] = nextSource[key];}}



return target;};
(















function(global){
'use strict';

var inspect=(function(){























function inspect(obj,opts){
var ctx={
seen:[],
stylize:stylizeNoColor};

return formatValue(ctx,obj,opts.depth);}


function stylizeNoColor(str,styleType){
return str;}


function arrayToHash(array){
var hash={};

array.forEach(function(val,idx){
hash[val] = true;});


return hash;}



function formatValue(ctx,value,recurseTimes){

var primitive=formatPrimitive(ctx,value);
if(primitive){
return primitive;}



var keys=Object.keys(value);
var visibleKeys=arrayToHash(keys);



if(isError(value) && (
keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)){
return formatError(value);}



if(keys.length === 0){
if(isFunction(value)){
var name=value.name?': ' + value.name:'';
return ctx.stylize('[Function' + name + ']','special');}

if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}

if(isDate(value)){
return ctx.stylize(Date.prototype.toString.call(value),'date');}

if(isError(value)){
return formatError(value);}}



var base='',array=false,braces=['{','}'];


if(isArray(value)){
array = true;
braces = ['[',']'];}



if(isFunction(value)){
var n=value.name?': ' + value.name:'';
base = ' [Function' + n + ']';}



if(isRegExp(value)){
base = ' ' + RegExp.prototype.toString.call(value);}



if(isDate(value)){
base = ' ' + Date.prototype.toUTCString.call(value);}



if(isError(value)){
base = ' ' + formatError(value);}


if(keys.length === 0 && (!array || value.length == 0)){
return braces[0] + base + braces[1];}


if(recurseTimes < 0){
if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}else 
{
return ctx.stylize('[Object]','special');}}



ctx.seen.push(value);

var output;
if(array){
output = formatArray(ctx,value,recurseTimes,visibleKeys,keys);}else 
{
output = keys.map(function(key){
return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array);});}



ctx.seen.pop();

return reduceToSingleString(output,base,braces);}



function formatPrimitive(ctx,value){
if(isUndefined(value))
return ctx.stylize('undefined','undefined');
if(isString(value)){
var simple='\'' + JSON.stringify(value).replace(/^"|"$/g,'').
replace(/'/g,"\\'").
replace(/\\"/g,'"') + '\'';
return ctx.stylize(simple,'string');}

if(isNumber(value))
return ctx.stylize('' + value,'number');
if(isBoolean(value))
return ctx.stylize('' + value,'boolean');

if(isNull(value))
return ctx.stylize('null','null');}



function formatError(value){
return '[' + Error.prototype.toString.call(value) + ']';}



function formatArray(ctx,value,recurseTimes,visibleKeys,keys){
var output=[];
for(var i=0,l=value.length;i < l;++i) {
if(hasOwnProperty(value,String(i))){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
String(i),true));}else 
{
output.push('');}}


keys.forEach(function(key){
if(!key.match(/^\d+$/)){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
key,true));}});


return output;}



function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){
var name,str,desc;
desc = Object.getOwnPropertyDescriptor(value,key) || {value:value[key]};
if(desc.get){
if(desc.set){
str = ctx.stylize('[Getter/Setter]','special');}else 
{
str = ctx.stylize('[Getter]','special');}}else 

{
if(desc.set){
str = ctx.stylize('[Setter]','special');}}


if(!hasOwnProperty(visibleKeys,key)){
name = '[' + key + ']';}

if(!str){
if(ctx.seen.indexOf(desc.value) < 0){
if(isNull(recurseTimes)){
str = formatValue(ctx,desc.value,null);}else 
{
str = formatValue(ctx,desc.value,recurseTimes - 1);}

if(str.indexOf('\n') > -1){
if(array){
str = str.split('\n').map(function(line){
return '  ' + line;}).
join('\n').substr(2);}else 
{
str = '\n' + str.split('\n').map(function(line){
return '   ' + line;}).
join('\n');}}}else 


{
str = ctx.stylize('[Circular]','special');}}


if(isUndefined(name)){
if(array && key.match(/^\d+$/)){
return str;}

name = JSON.stringify('' + key);
if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){
name = name.substr(1,name.length - 2);
name = ctx.stylize(name,'name');}else 
{
name = name.replace(/'/g,"\\'").
replace(/\\"/g,'"').
replace(/(^"|"$)/g,"'");
name = ctx.stylize(name,'string');}}



return name + ': ' + str;}



function reduceToSingleString(output,base,braces){
var numLinesEst=0;
var length=output.reduce(function(prev,cur){
numLinesEst++;
if(cur.indexOf('\n') >= 0)numLinesEst++;
return prev + cur.replace(/\u001b\[\d\d?m/g,'').length + 1;},
0);

if(length > 60){
return braces[0] + (
base === ''?'':base + '\n ') + 
' ' + 
output.join(',\n  ') + 
' ' + 
braces[1];}


return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];}





function isArray(ar){
return Array.isArray(ar);}


function isBoolean(arg){
return typeof arg === 'boolean';}


function isNull(arg){
return arg === null;}


function isNullOrUndefined(arg){
return arg == null;}


function isNumber(arg){
return typeof arg === 'number';}


function isString(arg){
return typeof arg === 'string';}


function isSymbol(arg){
return typeof arg === 'symbol';}


function isUndefined(arg){
return arg === void 0;}


function isRegExp(re){
return isObject(re) && objectToString(re) === '[object RegExp]';}


function isObject(arg){
return typeof arg === 'object' && arg !== null;}


function isDate(d){
return isObject(d) && objectToString(d) === '[object Date]';}


function isError(e){
return isObject(e) && (
objectToString(e) === '[object Error]' || e instanceof Error);}


function isFunction(arg){
return typeof arg === 'function';}


function isPrimitive(arg){
return arg === null || 
typeof arg === 'boolean' || 
typeof arg === 'number' || 
typeof arg === 'string' || 
typeof arg === 'symbol' || 
typeof arg === 'undefined';}


function objectToString(o){
return Object.prototype.toString.call(o);}


function hasOwnProperty(obj,prop){
return Object.prototype.hasOwnProperty.call(obj,prop);}


return inspect;})();



var OBJECT_COLUMN_NAME='(index)';
var LOG_LEVELS={
trace:0,
log:1,
info:2,
warn:3,
error:4};


function setupConsole(global){
if(!global.nativeLoggingHook){
return;}


function getNativeLogFunction(level){
return function(){
var str=Array.prototype.map.call(arguments,function(arg){
return inspect(arg,{depth:10});}).
join(', ');
if(str.slice(0,10) === "'Warning: " && level >= LOG_LEVELS.error){



level = LOG_LEVELS.warn;}

global.nativeLoggingHook(str,level);};}



var repeat=function(element,n){
return Array.apply(null,Array(n)).map(function(){return element;});};


function consoleTablePolyfill(rows){

if(!Array.isArray(rows)){
var data=rows;
rows = [];
for(var key in data) {
if(data.hasOwnProperty(key)){
var row=data[key];
row[OBJECT_COLUMN_NAME] = key;
rows.push(row);}}}



if(rows.length === 0){
global.nativeLoggingHook('',LOG_LEVELS.log);
return;}


var columns=Object.keys(rows[0]).sort();
var stringRows=[];
var columnWidths=[];



columns.forEach(function(k,i){
columnWidths[i] = k.length;
for(var j=0;j < rows.length;j++) {
var cellStr=rows[j][k].toString();
stringRows[j] = stringRows[j] || [];
stringRows[j][i] = cellStr;
columnWidths[i] = Math.max(columnWidths[i],cellStr.length);}});





var joinRow=function(row,space){
var cells=row.map(function(cell,i){
var extraSpaces=repeat(' ',columnWidths[i] - cell.length).join('');
return cell + extraSpaces;});

space = space || ' ';
return cells.join(space + '|' + space);};


var separators=columnWidths.map(function(columnWidth){
return repeat('-',columnWidth).join('');});

var separatorRow=joinRow(separators,'-');
var header=joinRow(columns);
var table=[header,separatorRow];

for(var i=0;i < rows.length;i++) {
table.push(joinRow(stringRows[i]));}






global.nativeLoggingHook('\n' + table.join('\n'),LOG_LEVELS.log);}


global.console = {
error:getNativeLogFunction(LOG_LEVELS.error),
info:getNativeLogFunction(LOG_LEVELS.info),
log:getNativeLogFunction(LOG_LEVELS.log),
warn:getNativeLogFunction(LOG_LEVELS.warn),
trace:getNativeLogFunction(LOG_LEVELS.trace),
table:consoleTablePolyfill};}




if(typeof module !== 'undefined'){
module.exports = setupConsole;}else 
{
setupConsole(global);}})(


this);
(















function(global){
var ErrorUtils={
_inGuard:0,
_globalHandler:null,
setGlobalHandler:function(fun){
ErrorUtils._globalHandler = fun;},

reportError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error);},

reportFatalError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error,true);},

applyWithGuard:function(fun,context,args){
try{
ErrorUtils._inGuard++;
return fun.apply(context,args);}
catch(e) {
ErrorUtils.reportError(e);}finally 
{
ErrorUtils._inGuard--;}},


applyWithGuardIfNeeded:function(fun,context,args){
if(ErrorUtils.inGuard()){
return fun.apply(context,args);}else 
{
ErrorUtils.applyWithGuard(fun,context,args);}},


inGuard:function(){
return ErrorUtils._inGuard;},

guard:function(fun,name,context){
if(typeof fun !== 'function'){
console.warn('A function must be passed to ErrorUtils.guard, got ',fun);
return null;}

name = name || fun.name || '<generated guard>';
function guarded(){
return (
ErrorUtils.applyWithGuard(
fun,
context || this,
arguments,
null,
name));}




return guarded;}};


global.ErrorUtils = ErrorUtils;





function setupErrorGuard(){
var onError=function(e){
global.console.error(
'Error: ' + 
'\n stack: ' + e.stack + 
'\n line: ' + e.line + 
'\n message: ' + e.message,
e);};


global.ErrorUtils.setGlobalHandler(onError);}


setupErrorGuard();})(
this);
if(











!String.prototype.startsWith){
String.prototype.startsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
var start=Math.min(Math.max(pos,0),string.length);
return string.indexOf(String(search),pos) === start;};}



if(!String.prototype.endsWith){
String.prototype.endsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var stringLength=string.length;
var searchString=String(search);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:stringLength;
var end=Math.min(Math.max(pos,0),stringLength);
var start=end - searchString.length;
if(start < 0){
return false;}

return string.lastIndexOf(searchString,start) === start;};}



if(!String.prototype.contains){
String.prototype.contains = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
return string.indexOf(String(search),pos) !== -1;};}



if(!String.prototype.repeat){
String.prototype.repeat = function(count){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
count = Number(count) || 0;
if(count < 0 || count === Infinity){
throw RangeError();}

if(count === 1){
return string;}

var result='';
while(count) {
if(count & 1){
result += string;}

if(count >>= 1){
string += string;}}


return result;};}
(









function(undefined){

function findIndex(predicate,context){
if(this == null){
throw new TypeError(
'Array.prototype.findIndex called on null or undefined');}


if(typeof predicate !== 'function'){
throw new TypeError('predicate must be a function');}

var list=Object(this);
var length=list.length >>> 0;
for(var i=0;i < length;i++) {
if(predicate.call(context,list[i],i,list)){
return i;}}


return -1;}


if(!Array.prototype.findIndex){
Object.defineProperty(Array.prototype,'findIndex',{
enumerable:false,
writable:true,
configurable:true,
value:findIndex});}




if(!Array.prototype.find){
Object.defineProperty(Array.prototype,'find',{
enumerable:false,
writable:true,
configurable:true,
value:function(predicate,context){
if(this == null){
throw new TypeError(
'Array.prototype.find called on null or undefined');}


var index=findIndex.call(this,predicate,context);
return index === -1?undefined:this[index];}});}})();
__d('yarn/index.ios.js',["react-native/Libraries/react-native/react-native.js","yarn/app/views/browser/browser.js","yarn/app/views/popup/popup.js","yarn/app/views/statusbar/statusbar.js","yarn/app/views/settings/settings.js","yarn/app/views/mainbar/mainbar.js","yarn/app/views/toast/toast.js","yarn/app/views/toast/wordscounttoastcontent.js","yarn/app/views/searching/searching.js","yarn/app/views/quiz/quizstatusbar.js","yarn/app/views/quiz/question.js","yarn/app/views/quiz/result.js","yarn/app/stores/gamestatestore.js","yarn/app/stores/userprofilestore.js","yarn/app/actions/actions.js","yarn/app/logger/logger.js","yarn/app/whitelist.js","Dimensions","NativeModules"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');

var Browser=require('yarn/app/views/browser/browser.js');
var Popup=require('yarn/app/views/popup/popup.js');
var StatusBar=require('yarn/app/views/statusbar/statusbar.js');
var Settings=require('yarn/app/views/settings/settings.js');
var MainBar=require('yarn/app/views/mainbar/mainbar.js');
var Toast=require('yarn/app/views/toast/toast.js');
var ToastContent=require('yarn/app/views/toast/wordscounttoastcontent.js');
var SearchingView=require('yarn/app/views/searching/searching.js');

var QuizStatusBar=require('yarn/app/views/quiz/quizstatusbar.js');
var QuestionView=require('yarn/app/views/quiz/question.js');
var ResultView=require('yarn/app/views/quiz/result.js');

var gameStateStore=require('yarn/app/stores/gamestatestore.js');
var userProfileStore=require('yarn/app/stores/userprofilestore.js');
var actions=require('yarn/app/actions/actions.js');
var log=require('yarn/app/logger/logger.js');

var WHITELIST=require('yarn/app/whitelist.js');

var QUESTION_RESULT_TIMEOUT=5000;

var Dimensions=require('Dimensions');var _Dimensions$get=
Dimensions.get('window');var width=_Dimensions$get.width;var height=_Dimensions$get.height;
console.log('DIM',width,height);var 


AppRegistry=








React.AppRegistry;var StyleSheet=React.StyleSheet;var Text=React.Text;var TextInput=React.TextInput;var TouchableOpacity=React.TouchableOpacity;var View=React.View;var WebView=React.WebView;var LayoutAnimation=React.LayoutAnimation;var NativeAppEventEmitter=React.NativeAppEventEmitter;

var subscription=NativeAppEventEmitter.addListener(
'DictionaryHidden',
function(){
console.log('Dictionary hidden!');});var _require=





require('NativeModules');var DictionaryProxy=_require.DictionaryProxy;

var HEADER='#F9FAFB';

var GAME_STATES=gameStateStore.GAME_STATES;

var BROWSER_REF='browser';
var DEFAULT_URL='http://www.theguardian.com/uk';


var yarn=React.createClass({

getInitialState:function(){
return {
url:DEFAULT_URL,
popupVisible:false,
question:[],
buttonRect:{},
firstButtonRect:{},
initialPopupVisible:false,
settingsViewVisible:false,
bottomBar:'',
wordsCountVisible:false,
toastShown:false,
introToastShown:false,
gameState:gameStateStore.GAME_STATES.NOT_STARTED,
buyUrlFeaturePopupVisible:false,
browseOnToastVisible:false};},



nextQuestionTimeout:0,
showSearchingTimeout:0,

render:function(){
console.log('render',this.state);
var bottomBar=this.renderBottomBar();

return (
React.createElement(View,{style:[styles.container]},
React.createElement(Browser,{
ref:BROWSER_REF,
url:this.state.url,
userLevel:userProfileStore.get('level'),
userRange:userProfileStore.get('range'),
onUrlChange:this.onUrlChange,
onScroll:this.onBrowserScroll}),

React.createElement(View,{style:styles.bottomBarWrap},
this.renderMainBar(),
bottomBar),

React.createElement(Popup,{
visible:this.state.popupVisible,
onClose:this.onPopupSubmit,
onSubmit:this.onPopupSubmit,
title:this.state.popupTitle,
content:this.state.popupContent,
arrowRect:this.state.buttonRect,
onShowDictionary:this.onShowDictionary}),

React.createElement(Popup,{
visible:this.state.initialPopupVisible,
onClose:this.closeInitialPopup,
onSubmit:this.closeInitialPopup,
type:Popup.POPUP_TYPE.INFO,
arrowRect:this.state.firstButtonRect}),

React.createElement(Popup,{
visible:this.state.buyUrlFeaturePopupVisible,
onClose:this.closeUrlFeaturePopup,
onSubmit:this.buyUrlFeaturePressed,
type:Popup.POPUP_TYPE.BUY_URL_FEATURE}),

this.renderSettings(),
this.renderQuizStatusBar(),
this.renderSearchingState(),
this.renderToast(),
this.renderBrowseOnToast(),
this.renderIntroToast(),
this.renderResultView()));},




onShowDictionary:function(text){
clearTimeout(this.nextQuestionTimeout);
this.refs.wordstrip.stopTimeoutAnimation();
DictionaryProxy.showDefinition(text);},


renderQuizStatusBar:function(){
if(this.state.bottomBar !== 'wordstrip'){
return React.createElement(View,null);}


var text='Word ' + (gameStateStore.get('currentWordIndex') + 1) + 
' of ' + gameStateStore.get('pageWords').length;

return (
React.createElement(QuizStatusBar,{
text:text,
onCancelClick:this.stopQuiz}));},




stopQuiz:function(){
this.resetGame();
this.refs['mainbar'].animateIn();},


renderBottomBar:function(){
switch(this.state.bottomBar){
case 'wordscount':
return this.renderInfoBar();
case 'wordstrip':
return this.renderWordStrip();



case 'mainbar':
return this.renderMainBar();
default:
return React.createElement(View,null);}},



renderResultView:function(){
if(this.state.bottomBar !== 'result'){
return React.createElement(View,null);}


return (
React.createElement(ResultView,{
correctWords:gameStateStore.get('correct'),
totalWords:gameStateStore.get('pageWords').length,
level:userProfileStore.get('level'),
score:userProfileStore.get('score'),
onDonePressed:this.closeResultView,
onRandomPressed:this.onRandomPagePressed}));},




renderInfoBar:function(){
console.log('render info bar, visited words:',gameStateStore.get('visitedPageWords').length);
return (
React.createElement(StatusBar,{
ref:'wordscountbar',
nextText:'Test me!',
onNextPress:actions.emit.bind(actions,actions.START_GAME),
showWordsCount:true,
wordsCount:gameStateStore.get('visitedPageWords').length,
startHidden:true}));},




renderWordStrip:function(){
return (
React.createElement(QuestionView,{
ref:'wordstrip',
disabled:this.state.wordStripDisabled,
onAction:this.onWordPressed,
onNextPress:this.showNextQuestion,
onShowDictionary:this.onShowDictionary,
words:this.state.question,
onAnimateInEnd:this.highlightCurrentWord}));},




highlightCurrentWord:function(){
this.refs[BROWSER_REF].highlightWord(gameStateStore.get('currentWord').text);},


renderMainBar:function(){
return React.createElement(MainBar,{ref:'mainbar'});},


renderSettings:function(){
if(!this.state.settingsViewVisible){
return React.createElement(View,null);}


return (
React.createElement(Settings,{
onClose:this.closeSettingsView,
initialLevel:userProfileStore.get('level'),
initialLang:userProfileStore.get('language')}));},




renderToast:function(){
if(!this.state.toastShown && this.state.gameState === GAME_STATES.WORDS_FOUND){
var toastContent=React.createElement(ToastContent,{count:gameStateStore.get('pageWords').length});
return (
React.createElement(Toast,{
fadeInTimeout:600,
content:toastContent,
onClose:this.hideToast,
timeout:2000}));}



return React.createElement(View,null);},


renderIntroToast:function(){
if(!this.state.introToastShown){
return (
React.createElement(Toast,{
content:'Choose a page...',
onClose:this.hideIntroToast}));}



return React.createElement(View,null);},


renderBrowseOnToast:function(){
if(this.state.browseOnToastVisible){
return (
React.createElement(Toast,{
content:'Browse on...',
onClose:this.hideBrowseOnToast}));}



return React.createElement(View,null);},



renderSearchingState:function(){
return React.createElement(SearchingView,{ref:'searching',active:this.state.gameState === GAME_STATES.LOOKING_FOR_WORDS});},


hideToast:function(){
this.setState({
toastShown:true});},



hideIntroToast:function(){
this.setState({
introToastShown:true});},



onUrlChange:function(url){
actions.emit(actions.RESET);
this.setState({
wordsCountVisible:false,
toastShown:false});

this.refs['mainbar'].animateIn();


if(WHITELIST.doesMatch(url)){
this.showSearchingTimeout = setTimeout(function(){
actions.emit(actions.LOOKING_FOR_WORDS);},
1500);}},





onBrowserScroll:function(data){
console.log('browser scroll',data);
if(this.state.bottomBar === 'wordscount'){
if(!this.state.wordsCountVisible && data.y > 10){
console.log('show wordscount bar');
this.setState({
wordsCountVisible:true});

this.refs['mainbar'].animateOut();
this.refs['wordscountbar'].animateIn();}else 

if(this.state.wordsCountVisible && data.y < 10){
console.log('hide wordscount bar');
this.setState({
wordsCountVisible:false});

this.refs['mainbar'].animateIn();
this.refs['wordscountbar'].animateOut();}}},




closeResultView:function(suppressBrowseOnToast){
this.setState({
bottomBar:'',
wordsCountVisible:false});

this.refs['mainbar'].animateIn();

if(suppressBrowseOnToast !== true){
setTimeout(this.showBrowseOnToast,300);}},



showBrowseOnToast:function(){
this.setState({
browseOnToastVisible:true});},



hideBrowseOnToast:function(){
this.setState({
browseOnToastVisible:false});},



onRandomPagePressed:function(){
this.closeResultView(true);
this.refs[BROWSER_REF].goToRandomUrl();},


showSettings:function(){
this.setState({
settingsViewVisible:true});},



closeSettingsView:function(){
this.setState({
settingsViewVisible:false});},



showNextQuestion:function(){
clearTimeout(this.nextQuestionTimeout);
this.setState({
bottomBar:'wordstrip'});

actions.emit(actions.SHOW_NEXT_QUESTION);},


componentDidMount:function(){
this.lang = userProfileStore.get('language');

gameStateStore.addChangeListener(this.onGameStateChanged);
userProfileStore.addChangeListener(this.onUserProfileChanged);
actions.on(actions.START_GAME,this.hideBottomBar);
actions.on(actions.CHANGE_LEVEL,this.onForceChangeLevel);
actions.on(actions.SETTINGS_BUTTON_PRESSED,this.showSettings);
actions.on(actions.URL_FEATURE_REQUESTED,this.showUrlFeaturePopup);
this.onUrlChange(this.state.url);},


showUrlFeaturePopup:function(){
this.setState({
buyUrlFeaturePopupVisible:true});},



closeUrlFeaturePopup:function(){
this.setState({
buyUrlFeaturePopupVisible:false});},



buyUrlFeaturePressed:function(){
console.log('BUY URL FEATURE');},



_componentDidMount:function(){

this.setState({
bottomBar:'result'});},



hideBottomBar:function(){
this.setState({
bottomBar:''});},



onPopupSubmit:function(){
this.setState({
popupVisible:false});

this.showNextQuestion();},


onGameStateChanged:function(){
if(this.state.gameState !== gameStateStore.get('currentState')){
console.log('---------------------------------');
console.log('----',gameStateStore.get('currentState'),'----');
console.log('---------------------------------');}


if(gameStateStore.get('finished')){
this.finishGame();
return;}


var currentGameState=gameStateStore.get('currentState');

var bottomBar='';
var wordStripDisabled=false;

if(currentGameState === GAME_STATES.WORDS_FOUND && gameStateStore.get('pageWords').length){
bottomBar = 'wordscount';}else 


if(currentGameState === GAME_STATES.WORDS_FOUND && !gameStateStore.get('pageWords').length){
bottomBar = '';}else 

if(
currentGameState === GAME_STATES.WAITING_FOR_ANSWER || 
currentGameState === GAME_STATES.WRONG_ANSWER_CHOSEN || 
currentGameState === GAME_STATES.CORRECT_ANSWER_CHOSEN){
bottomBar = 'wordstrip';}


if(bottomBar === 'wordstrip'){
wordStripDisabled = currentGameState !== GAME_STATES.WAITING_FOR_ANSWER;}


if(currentGameState === GAME_STATES.WAITING_FOR_ANSWER){
setTimeout((function(){
this.refs[BROWSER_REF].highlightWord(gameStateStore.get('currentWord').text);}).
bind(this,200));}


if(currentGameState === GAME_STATES.CORRECT_ANSWER_CHOSEN || currentGameState == GAME_STATES.WRONG_ANSWER_CHOSEN){
this.nextQuestionTimeout = setTimeout(this.showNextQuestion,QUESTION_RESULT_TIMEOUT);}




var popupVisible=false;

var popupTitle=popupVisible?
currentGameState == GAME_STATES.CORRECT_ANSWER_CHOSEN?'That\'s right!':'Oops...':'';

var definition;
(gameStateStore.get('currentQuestion') || []).forEach(function(question){
if(question.def){
definition = question.def.entryContent;}});





var initialPopupVisible=false;

this.setState({
question:gameStateStore.get('currentQuestion'),
gameState:currentGameState,
wordStripDisabled:wordStripDisabled,
bottomBar:bottomBar,
popupVisible:popupVisible,
popupTitle:popupTitle,
popupContent:definition,
initialPopupVisible:initialPopupVisible});




if(initialPopupVisible){
setTimeout((function(){
this.refs['wordstrip'].getButtonRect(0,(function(rect){
this.setState({
firstButtonRect:rect});}).

bind(this));}).
bind(this),300);}},



finishGame:function(){
this.refs[BROWSER_REF].unhighlightWords();
this.setState({
bottomBar:!!gameStateStore.get('pageWords').length?'result':'',
popupVisible:false,
infoBarVisible:false,
wordstripVisible:false});

log({
message:'game finished',
correctWords:gameStateStore.get('correct'),
totalWords:gameStateStore.get('pageWords').length,
level:userProfileStore.get('level'),
score:userProfileStore.get('score')});},



onWordPressed:function(word,index){

if(index === 0){
this.refs[BROWSER_REF].scrollToWord(word);
return;}


actions.emit(actions.WORD_PRESSED,word);},


closeInitialPopup:function(){
this.setState({
initialPopupVisible:false});},



onUserProfileChanged:function(){
if(this.lang !== userProfileStore.get('language')){
this.lang = userProfileStore.get('language');
this.resetGame();
this.reloadBrowser();}},



resetGame:function(){
this.refs[BROWSER_REF].unhighlightWords();

clearTimeout(this.showSearchingTimeout);
clearTimeout(this.showSearchingTimeout);

this.setState({
question:[],
bottomBar:'',
toastShown:false});},



onForceChangeLevel:function(){
this.resetGame();
this.reloadBrowser();},


reloadBrowser:function(){
this.refs[BROWSER_REF].resetLastParsedContent();
this.refs[BROWSER_REF].reload();}});




var styles=StyleSheet.create({
container:{
flex:1,
backgroundColor:HEADER},


bottomBarWrap:{}});





AppRegistry.registerComponent('yarn',function(){return yarn;});
});
__d('react-native/Libraries/react-native/react-native.js',["React","ActivityIndicatorIOS","DatePickerIOS","DrawerLayoutAndroid","Image","ListView","MapView","Modal","Navigator","NavigatorIOS","PickerIOS","ProgressBarAndroid","ProgressViewIOS","ScrollView","SegmentedControlIOS","SliderIOS","SwitchAndroid","SwitchIOS","TabBarIOS","Text","TextInput","ToastAndroid","ToolbarAndroid","TouchableHighlight","TouchableNativeFeedback","TouchableOpacity","TouchableWithoutFeedback","View","WebView","ActionSheetIOS","AdSupportIOS","AlertIOS","Animated","AppRegistry","AppStateIOS","AsyncStorage","BackAndroid","CameraRoll","Dimensions","Easing","ImagePickerIOS","InteractionManager","LayoutAnimation","LinkingIOS","NetInfo","PanResponder","PixelRatio","PushNotificationIOS","Settings","StatusBarIOS","StyleSheet","VibrationIOS","RCTDeviceEventEmitter","RCTNativeAppEventEmitter","NativeModules","Platform","requireNativeComponent","EdgeInsetsPropType","PointPropType","LinkedStateMixin","ReactComponentWithPureRenderMixin","NativeModules","ReactUpdates","cloneWithProps","ReactFragment","update","ReactDefaultPerf","ReactTestUtils"],function(global, require, module, exports) {  'use strict';


















var ReactNative=Object.assign(Object.create(require('React')),{

ActivityIndicatorIOS:require('ActivityIndicatorIOS'),
DatePickerIOS:require('DatePickerIOS'),
DrawerLayoutAndroid:require('DrawerLayoutAndroid'),
Image:require('Image'),
ListView:require('ListView'),
MapView:require('MapView'),
Modal:require('Modal'),
Navigator:require('Navigator'),
NavigatorIOS:require('NavigatorIOS'),
PickerIOS:require('PickerIOS'),
ProgressBarAndroid:require('ProgressBarAndroid'),
ProgressViewIOS:require('ProgressViewIOS'),
ScrollView:require('ScrollView'),
SegmentedControlIOS:require('SegmentedControlIOS'),
SliderIOS:require('SliderIOS'),
SwitchAndroid:require('SwitchAndroid'),
SwitchIOS:require('SwitchIOS'),
TabBarIOS:require('TabBarIOS'),
Text:require('Text'),
TextInput:require('TextInput'),
ToastAndroid:require('ToastAndroid'),
ToolbarAndroid:require('ToolbarAndroid'),
TouchableHighlight:require('TouchableHighlight'),
TouchableNativeFeedback:require('TouchableNativeFeedback'),
TouchableOpacity:require('TouchableOpacity'),
TouchableWithoutFeedback:require('TouchableWithoutFeedback'),
View:require('View'),
WebView:require('WebView'),


ActionSheetIOS:require('ActionSheetIOS'),
AdSupportIOS:require('AdSupportIOS'),
AlertIOS:require('AlertIOS'),
Animated:require('Animated'),
AppRegistry:require('AppRegistry'),
AppStateIOS:require('AppStateIOS'),
AsyncStorage:require('AsyncStorage'),
BackAndroid:require('BackAndroid'),
CameraRoll:require('CameraRoll'),
Dimensions:require('Dimensions'),
Easing:require('Easing'),
ImagePickerIOS:require('ImagePickerIOS'),
InteractionManager:require('InteractionManager'),
LayoutAnimation:require('LayoutAnimation'),
LinkingIOS:require('LinkingIOS'),
NetInfo:require('NetInfo'),
PanResponder:require('PanResponder'),
PixelRatio:require('PixelRatio'),
PushNotificationIOS:require('PushNotificationIOS'),
Settings:require('Settings'),
StatusBarIOS:require('StatusBarIOS'),
StyleSheet:require('StyleSheet'),
VibrationIOS:require('VibrationIOS'),


DeviceEventEmitter:require('RCTDeviceEventEmitter'),
NativeAppEventEmitter:require('RCTNativeAppEventEmitter'),
NativeModules:require('NativeModules'),
Platform:require('Platform'),
requireNativeComponent:require('requireNativeComponent'),


EdgeInsetsPropType:require('EdgeInsetsPropType'),
PointPropType:require('PointPropType'),

addons:{
LinkedStateMixin:require('LinkedStateMixin'),
Perf:undefined,
PureRenderMixin:require('ReactComponentWithPureRenderMixin'),
TestModule:require('NativeModules').TestModule,
TestUtils:undefined,
batchedUpdates:require('ReactUpdates').batchedUpdates,
cloneWithProps:require('cloneWithProps'),
createFragment:require('ReactFragment').create,
update:require('update')}});



if(__DEV__){
ReactNative.addons.Perf = require('ReactDefaultPerf');
ReactNative.addons.TestUtils = require('ReactTestUtils');}


module.exports = ReactNative;
});
__d('React',["ReactNative"],function(global, require, module, exports) {  'use strict';












module.exports = require('ReactNative');
});
__d('ReactNative',["ReactChildren","ReactClass","ReactComponent","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactInstanceHandles","ReactNativeDefaultInjection","ReactNativeMount","ReactPropTypes","ReactUpdates","deprecated","findNodeHandle","invariant","onlyChild","warning","ReactReconciler","ReactNativeTextComponent"],function(global, require, module, exports) {  'use strict';












var ReactChildren=require('ReactChildren');
var ReactClass=require('ReactClass');
var ReactComponent=require('ReactComponent');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeDefaultInjection=require('ReactNativeDefaultInjection');
var ReactNativeMount=require('ReactNativeMount');
var ReactPropTypes=require('ReactPropTypes');
var ReactUpdates=require('ReactUpdates');

var deprecated=require('deprecated');
var findNodeHandle=require('findNodeHandle');
var invariant=require('invariant');
var onlyChild=require('onlyChild');
var warning=require('warning');

ReactNativeDefaultInjection.inject();

var createElement=ReactElement.createElement;
var createFactory=ReactElement.createFactory;
var cloneElement=ReactElement.cloneElement;

if(__DEV__){
createElement = ReactElementValidator.createElement;
createFactory = ReactElementValidator.createFactory;
cloneElement = ReactElementValidator.cloneElement;}


var resolveDefaultProps=function(element){

var defaultProps=element.type.defaultProps;
var props=element.props;
for(var propName in defaultProps) {
if(props[propName] === undefined){
props[propName] = defaultProps[propName];}}};





var augmentElement=function(element){
if(__DEV__){
invariant(
false,
'This optimized path should never be used in DEV mode because ' + 
'it does not provide validation. Check your JSX transform.');}


element._owner = ReactCurrentOwner.current;
if(element.type.defaultProps){
resolveDefaultProps(element);}

return element;};


var render=function(
element,
mountInto,
callback)
{
return ReactNativeMount.renderComponent(element,mountInto,callback);};


var ReactNative={
hasReactNativeInitialized:false,
Children:{
map:ReactChildren.map,
forEach:ReactChildren.forEach,
count:ReactChildren.count,
only:onlyChild},

Component:ReactComponent,
PropTypes:ReactPropTypes,
createClass:ReactClass.createClass,
createElement:createElement,
createFactory:createFactory,
cloneElement:cloneElement,
_augmentElement:augmentElement,
findNodeHandle:findNodeHandle,
render:render,
unmountComponentAtNode:ReactNativeMount.unmountComponentAtNode,


unstable_batchedUpdates:ReactUpdates.batchedUpdates,



__spread:Object.assign,

unmountComponentAtNodeAndRemoveContainer:ReactNativeMount.unmountComponentAtNodeAndRemoveContainer,
isValidClass:ReactElement.isValidFactory,
isValidElement:ReactElement.isValidElement,


renderComponent:function(
element,
mountInto,
callback)
{
warning('Use React.render instead of React.renderComponent');
return ReactNative.render(element,mountInto,callback);}};






if(
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && 
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function'){
__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:ReactCurrentOwner,
InstanceHandles:ReactInstanceHandles,
Mount:ReactNativeMount,
Reconciler:require('ReactReconciler'),
TextComponent:require('ReactNativeTextComponent')});}



module.exports = ReactNative;
});
__d('ReactChildren',["PooledClass","ReactFragment","traverseAllChildren","warning"],function(global, require, module, exports) {  'use strict';












var PooledClass=require('PooledClass');
var ReactFragment=require('ReactFragment');

var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');

var twoArgumentPooler=PooledClass.twoArgumentPooler;
var threeArgumentPooler=PooledClass.threeArgumentPooler;









function ForEachBookKeeping(forEachFunction,forEachContext){
this.func = forEachFunction;
this.context = forEachContext;
this.count = 0;}

PooledClass.addPoolingTo(ForEachBookKeeping,twoArgumentPooler);

function forEachSingleChild(traverseContext,child,name){
var bookKeeping=traverseContext;
bookKeeping.func.call(bookKeeping.context,child,bookKeeping.count++);}












function forEachChildren(children,forEachFunc,forEachContext){
if(children == null){
return children;}


var traverseContext=
ForEachBookKeeping.getPooled(forEachFunc,forEachContext);
traverseAllChildren(children,forEachSingleChild,traverseContext);
ForEachBookKeeping.release(traverseContext);}











function MapBookKeeping(mapResult,mapFunction,mapContext){
this.result = mapResult;
this.func = mapFunction;
this.context = mapContext;
this.count = 0;}

PooledClass.addPoolingTo(MapBookKeeping,threeArgumentPooler);

function mapSingleChildIntoContext(traverseContext,child,name){
var bookKeeping=traverseContext;
var mapResult=bookKeeping.result;

var keyUnique=mapResult[name] === undefined;
if(__DEV__){
warning(
keyUnique,
'ReactChildren.map(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.',
name);}



if(keyUnique){
var mappedChild=
bookKeeping.func.call(bookKeeping.context,child,bookKeeping.count++);
mapResult[name] = mappedChild;}}

















function mapChildren(children,func,context){
if(children == null){
return children;}


var mapResult={};
var traverseContext=MapBookKeeping.getPooled(mapResult,func,context);
traverseAllChildren(children,mapSingleChildIntoContext,traverseContext);
MapBookKeeping.release(traverseContext);
return ReactFragment.create(mapResult);}


function forEachSingleChildDummy(traverseContext,child,name){
return null;}









function countChildren(children,context){
return traverseAllChildren(children,forEachSingleChildDummy,null);}


var ReactChildren={
forEach:forEachChildren,
map:mapChildren,
count:countChildren};


module.exports = ReactChildren;
});
__d('PooledClass',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');








var oneArgumentPooler=function(copyFieldsFrom){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,copyFieldsFrom);
return instance;}else 
{
return new Klass(copyFieldsFrom);}};



var twoArgumentPooler=function(a1,a2){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2);
return instance;}else 
{
return new Klass(a1,a2);}};



var threeArgumentPooler=function(a1,a2,a3){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3);
return instance;}else 
{
return new Klass(a1,a2,a3);}};



var fourArgumentPooler=function(a1,a2,a3,a4){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3,a4);
return instance;}else 
{
return new Klass(a1,a2,a3,a4);}};



var fiveArgumentPooler=function(a1,a2,a3,a4,a5){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3,a4,a5);
return instance;}else 
{
return new Klass(a1,a2,a3,a4,a5);}};



var standardReleaser=function(instance){
var Klass=this;
invariant(
instance instanceof Klass,
'Trying to release an instance into a pool of a different type.');

if(instance.destructor){
instance.destructor();}

if(Klass.instancePool.length < Klass.poolSize){
Klass.instancePool.push(instance);}};



var DEFAULT_POOL_SIZE=10;
var DEFAULT_POOLER=oneArgumentPooler;










var addPoolingTo=function(CopyConstructor,pooler){
var NewKlass=CopyConstructor;
NewKlass.instancePool = [];
NewKlass.getPooled = pooler || DEFAULT_POOLER;
if(!NewKlass.poolSize){
NewKlass.poolSize = DEFAULT_POOL_SIZE;}

NewKlass.release = standardReleaser;
return NewKlass;};


var PooledClass={
addPoolingTo:addPoolingTo,
oneArgumentPooler:oneArgumentPooler,
twoArgumentPooler:twoArgumentPooler,
threeArgumentPooler:threeArgumentPooler,
fourArgumentPooler:fourArgumentPooler,
fiveArgumentPooler:fiveArgumentPooler};


module.exports = PooledClass;
});
__d('invariant',[],function(global, require, module, exports) {  "use strict";























var invariant=function(condition,format,a,b,c,d,e,f){
if(__DEV__){
if(format === undefined){
throw new Error('invariant requires an error message argument');}}



if(!condition){
var error;
if(format === undefined){
error = new Error(
'Minified exception occurred; use the non-minified dev environment ' + 
'for the full error message and additional helpful warnings.');}else 

{
var args=[a,b,c,d,e,f];
var argIndex=0;
error = new Error(
'Invariant Violation: ' + 
format.replace(/%s/g,function(){return args[argIndex++];}));}



error.framesToPop = 1;
throw error;}};



module.exports = invariant;
});
__d('ReactFragment',["ReactElement","warning"],function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');

var warning=require('warning');









var fragmentKey;
var didWarnKey;
var canWarnForReactFragment;

if(__DEV__){
fragmentKey = '_reactFragment';
didWarnKey = '_reactDidWarn';

try{



var dummy=function(){
return 1;};


Object.defineProperty(
{},
fragmentKey,
{enumerable:false,value:true});


Object.defineProperty(
{},
'key',
{enumerable:true,get:dummy});


canWarnForReactFragment = true;}
catch(x) {
canWarnForReactFragment = false;}


var proxyPropertyAccessWithWarning=function(obj,key){
Object.defineProperty(obj,key,{
enumerable:true,
get:function(){
warning(
this[didWarnKey],
'A ReactFragment is an opaque type. Accessing any of its ' + 
'properties is deprecated. Pass it to one of the React.Children ' + 
'helpers.');

this[didWarnKey] = true;
return this[fragmentKey][key];},

set:function(value){
warning(
this[didWarnKey],
'A ReactFragment is an immutable opaque type. Mutating its ' + 
'properties is deprecated.');

this[didWarnKey] = true;
this[fragmentKey][key] = value;}});};




var issuedWarnings={};

var didWarnForFragment=function(fragment){


var fragmentCacheKey='';
for(var key in fragment) {
fragmentCacheKey += key + ':' + typeof fragment[key] + ',';}

var alreadyWarnedOnce=!!issuedWarnings[fragmentCacheKey];
issuedWarnings[fragmentCacheKey] = true;
return alreadyWarnedOnce;};}



var ReactFragment={


create:function(object){
if(__DEV__){
if(typeof object !== 'object' || !object || Array.isArray(object)){
warning(
false,
'React.addons.createFragment only accepts a single object. Got: %s',
object);

return object;}

if(ReactElement.isValidElement(object)){
warning(
false,
'React.addons.createFragment does not accept a ReactElement ' + 
'without a wrapper object.');

return object;}

if(canWarnForReactFragment){
var proxy={};
Object.defineProperty(proxy,fragmentKey,{
enumerable:false,
value:object});

Object.defineProperty(proxy,didWarnKey,{
writable:true,
enumerable:false,
value:false});

for(var key in object) {
proxyPropertyAccessWithWarning(proxy,key);}

Object.preventExtensions(proxy);
return proxy;}}


return object;},



extract:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){
if(!fragment[fragmentKey]){
warning(
didWarnForFragment(fragment),
'Any use of a keyed object should be wrapped in ' + 
'React.addons.createFragment(object) before being passed as a ' + 
'child.');

return fragment;}

return fragment[fragmentKey];}}


return fragment;},




extractIfFragment:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){

if(fragment[fragmentKey]){
return fragment[fragmentKey];}




for(var key in fragment) {
if(fragment.hasOwnProperty(key) && 
ReactElement.isValidElement(fragment[key])){


return ReactFragment.extract(fragment);}}}}




return fragment;}};



module.exports = ReactFragment;
});
__d('ReactElement',["ReactCurrentOwner","Object.assign"],function(global, require, module, exports) {  'use strict';












var ReactCurrentOwner=require('ReactCurrentOwner');

var assign=require('Object.assign');

var RESERVED_PROPS={
key:true,
ref:true};













var ReactElement=function(type,key,ref,owner,props){

this.type = type;
this.key = key;
this.ref = ref;


this._owner = owner;

this.props = props;

if(__DEV__){




this._store = {};





try{
Object.defineProperty(this._store,'validated',{
configurable:false,
enumerable:false,
writable:true,
value:false});}

catch(x) {
this._store.validated = false;}

Object.freeze(this.props);
Object.freeze(this);}};





ReactElement.prototype = {
_isReactElement:true};


ReactElement.createElement = function(type,config,children){
var propName;


var props={};

var key=null;
var ref=null;

if(config != null){
ref = config.ref === undefined?null:config.ref;
key = config.key === undefined?null:'' + config.key;

for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0;i < childrenLength;i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}



if(type && type.defaultProps){
var defaultProps=type.defaultProps;
for(propName in defaultProps) {
if(typeof props[propName] === 'undefined'){
props[propName] = defaultProps[propName];}}}




return new ReactElement(
type,
key,
ref,
ReactCurrentOwner.current,
props);};



ReactElement.createFactory = function(type){
var factory=ReactElement.createElement.bind(null,type);





factory.type = type;
return factory;};


ReactElement.cloneAndReplaceProps = function(oldElement,newProps){
var newElement=new ReactElement(
oldElement.type,
oldElement.key,
oldElement.ref,
oldElement._owner,
newProps);


if(__DEV__){

newElement._store.validated = oldElement._store.validated;}


return newElement;};


ReactElement.cloneElement = function(element,config,children){
var propName;


var props=assign({},element.props);


var key=element.key;
var ref=element.ref;


var owner=element._owner;

if(config != null){
if(config.ref !== undefined){

ref = config.ref;
owner = ReactCurrentOwner.current;}

if(config.key !== undefined){
key = '' + config.key;}


for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0;i < childrenLength;i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}


return new ReactElement(
element.type,
key,
ref,
owner,
props);};








ReactElement.isValidElement = function(object){




var isElement=!!(object && object._isReactElement);





return isElement;};


module.exports = ReactElement;
});
__d('ReactCurrentOwner',[],function(global, require, module, exports) {  'use strict';


















var ReactCurrentOwner={





current:null};



module.exports = ReactCurrentOwner;
});
__d('Object.assign',[],function(global, require, module, exports) {  'use strict';














function assign(target,sources){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}


var to=Object(target);
var hasOwnProperty=Object.prototype.hasOwnProperty;

for(var nextIndex=1;nextIndex < arguments.length;nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


var from=Object(nextSource);






for(var key in from) {
if(hasOwnProperty.call(from,key)){
to[key] = from[key];}}}




return to;}


module.exports = assign;
});
__d('warning',["emptyFunction"],function(global, require, module, exports) {  "use strict";












var emptyFunction=require('emptyFunction');








var warning=emptyFunction;

if(__DEV__){
warning = function(condition,format){for(var _len=arguments.length,args=Array(_len > 2?_len - 2:0),_key=2;_key < _len;_key++) {args[_key - 2] = arguments[_key];}
if(format === undefined){
throw new Error(
'`warning(condition, format, ...args)` requires a warning ' + 
'message argument');}



if(format.indexOf('Failed Composite propType: ') === 0){
return;}


if(!condition){
var argIndex=0;
var message='Warning: ' + format.replace(/%s/g,function(){return args[argIndex++];});
if(typeof console !== 'undefined'){
console.error(message);}

try{



throw new Error(message);}
catch(x) {}}};}




module.exports = warning;
});
__d('emptyFunction',[],function(global, require, module, exports) {  function 










makeEmptyFunction(arg){
return function(){
return arg;};}








function emptyFunction(){}

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function(){return this;};
emptyFunction.thatReturnsArgument = function(arg){return arg;};

module.exports = emptyFunction;
});
__d('traverseAllChildren',["ReactElement","ReactFragment","ReactInstanceHandles","getIteratorFn","invariant","warning"],function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactInstanceHandles=require('ReactInstanceHandles');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;
var SUBSEPARATOR=':';






var userProvidedKeyEscaperLookup={
'=':'=0',
'.':'=1',
':':'=2'};


var userProvidedKeyEscapeRegex=/[=.:]/g;

var didWarnAboutMaps=false;

function userProvidedKeyEscaper(match){
return userProvidedKeyEscaperLookup[match];}









function getComponentKey(component,index){
if(component && component.key != null){

return wrapUserProvidedKey(component.key);}


return index.toString(36);}








function escapeUserProvidedKey(text){
return ('' + text).replace(
userProvidedKeyEscapeRegex,
userProvidedKeyEscaper);}










function wrapUserProvidedKey(key){
return '$' + escapeUserProvidedKey(key);}










function traverseAllChildrenImpl(
children,
nameSoFar,
callback,
traverseContext)
{
var type=typeof children;

if(type === 'undefined' || type === 'boolean'){

children = null;}


if(children === null || 
type === 'string' || 
type === 'number' || 
ReactElement.isValidElement(children)){
callback(
traverseContext,
children,


nameSoFar === ''?SEPARATOR + getComponentKey(children,0):nameSoFar);

return 1;}


var child;
var nextName;
var subtreeCount=0;

if(Array.isArray(children)){
for(var i=0;i < children.length;i++) {
child = children[i];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child,i);

subtreeCount += traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}else 


{
var iteratorFn=getIteratorFn(children);
if(iteratorFn){
var iterator=iteratorFn.call(children);
var step;
if(iteratorFn !== children.entries){
var ii=0;
while(!(step = iterator.next()).done) {
child = step.value;
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child,ii++);

subtreeCount += traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}else 


{
if(__DEV__){
warning(
didWarnAboutMaps,
'Using Maps as children is not yet fully supported. It is an ' + 
'experimental feature that might be removed. Convert it to a ' + 
'sequence / iterable of keyed ReactElements instead.');

didWarnAboutMaps = true;}


while(!(step = iterator.next()).done) {
var entry=step.value;
if(entry){
child = entry[1];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + 
getComponentKey(child,0);

subtreeCount += traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}}}else 




if(type === 'object'){
invariant(
children.nodeType !== 1,
'traverseAllChildren(...): Encountered an invalid child; DOM ' + 
'elements are not valid children of React components.');

var fragment=ReactFragment.extract(children);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
child = fragment[key];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(key) + SUBSEPARATOR + 
getComponentKey(child,0);

subtreeCount += traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}}}






return subtreeCount;}


















function traverseAllChildren(children,callback,traverseContext){
if(children == null){
return 0;}


return traverseAllChildrenImpl(children,'',callback,traverseContext);}


module.exports = traverseAllChildren;
});
__d('ReactInstanceHandles',["ReactRootIndex","invariant"],function(global, require, module, exports) {  'use strict';













var ReactRootIndex=require('ReactRootIndex');

var invariant=require('invariant');

var SEPARATOR='.';
var SEPARATOR_LENGTH=SEPARATOR.length;




var MAX_TREE_DEPTH=10000;








function getReactRootIDString(index){
return SEPARATOR + index.toString(36);}










function isBoundary(id,index){
return id.charAt(index) === SEPARATOR || index === id.length;}









function isValidID(id){
return id === '' || 
id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;}











function isAncestorIDOf(ancestorID,descendantID){
return (
descendantID.indexOf(ancestorID) === 0 && 
isBoundary(descendantID,ancestorID.length));}










function getParentID(id){
return id?id.substr(0,id.lastIndexOf(SEPARATOR)):'';}











function getNextDescendantID(ancestorID,destinationID){
invariant(
isValidID(ancestorID) && isValidID(destinationID),
'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
ancestorID,
destinationID);

invariant(
isAncestorIDOf(ancestorID,destinationID),
'getNextDescendantID(...): React has made an invalid assumption about ' + 
'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
ancestorID,
destinationID);

if(ancestorID === destinationID){
return ancestorID;}



var start=ancestorID.length + SEPARATOR_LENGTH;
var i;
for(i = start;i < destinationID.length;i++) {
if(isBoundary(destinationID,i)){
break;}}


return destinationID.substr(0,i);}













function getFirstCommonAncestorID(oneID,twoID){
var minLength=Math.min(oneID.length,twoID.length);
if(minLength === 0){
return '';}

var lastCommonMarkerIndex=0;

for(var i=0;i <= minLength;i++) {
if(isBoundary(oneID,i) && isBoundary(twoID,i)){
lastCommonMarkerIndex = i;}else 
if(oneID.charAt(i) !== twoID.charAt(i)){
break;}}


var longestCommonID=oneID.substr(0,lastCommonMarkerIndex);
invariant(
isValidID(longestCommonID),
'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
oneID,
twoID,
longestCommonID);

return longestCommonID;}















function traverseParentPath(start,stop,cb,arg,skipFirst,skipLast){
start = start || '';
stop = stop || '';
invariant(
start !== stop,
'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
start);

var traverseUp=isAncestorIDOf(stop,start);
invariant(
traverseUp || isAncestorIDOf(start,stop),
'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 
'not have a parent path.',
start,
stop);


var depth=0;
var traverse=traverseUp?getParentID:getNextDescendantID;
for(var id=start;;id = traverse(id,stop)) {
var ret;
if((!skipFirst || id !== start) && (!skipLast || id !== stop)){
ret = cb(id,traverseUp,arg);}

if(ret === false || id === stop){

break;}

invariant(
depth++ < MAX_TREE_DEPTH,
'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 
'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
start,stop,id);}}











var ReactInstanceHandles={





createReactRootID:function(){
return getReactRootIDString(ReactRootIndex.createReactRootIndex());},










createReactID:function(rootID,name){
return rootID + name;},










getReactRootIDFromNodeID:function(id){
if(id && id.charAt(0) === SEPARATOR && id.length > 1){
var index=id.indexOf(SEPARATOR,1);
return index > -1?id.substr(0,index):id;}

return null;},
















traverseEnterLeave:function(leaveID,enterID,cb,upArg,downArg){
var ancestorID=getFirstCommonAncestorID(leaveID,enterID);
if(ancestorID !== leaveID){
traverseParentPath(leaveID,ancestorID,cb,upArg,false,true);}

if(ancestorID !== enterID){
traverseParentPath(ancestorID,enterID,cb,downArg,true,false);}},













traverseTwoPhase:function(targetID,cb,arg){
if(targetID){
traverseParentPath('',targetID,cb,arg,true,false);
traverseParentPath(targetID,'',cb,arg,false,true);}},






traverseTwoPhaseSkipTarget:function(targetID,cb,arg){
if(targetID){
traverseParentPath('',targetID,cb,arg,true,true);
traverseParentPath(targetID,'',cb,arg,true,true);}},















traverseAncestors:function(targetID,cb,arg){
traverseParentPath('',targetID,cb,arg,true,false);},


getFirstCommonAncestorID:getFirstCommonAncestorID,





_getNextDescendantID:getNextDescendantID,

isAncestorIDOf:isAncestorIDOf,

SEPARATOR:SEPARATOR};



module.exports = ReactInstanceHandles;
});
__d('ReactRootIndex',[],function(global, require, module, exports) {  'use strict';













var ReactRootIndexInjection={



injectCreateReactRootIndex:function(_createReactRootIndex){
ReactRootIndex.createReactRootIndex = _createReactRootIndex;}};



var ReactRootIndex={
createReactRootIndex:null,
injection:ReactRootIndexInjection};


module.exports = ReactRootIndex;
});
__d('getIteratorFn',[],function(global, require, module, exports) {  'use strict';














var ITERATOR_SYMBOL=typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';















function getIteratorFn(maybeIterable){
var iteratorFn=maybeIterable && (
ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || 
maybeIterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn === 'function'){
return iteratorFn;}}



module.exports = getIteratorFn;
});
__d('ReactClass',["ReactComponent","ReactElement","ReactErrorUtils","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactNoopUpdateQueue","Object.assign","emptyObject","invariant","keyMirror","keyOf","warning"],function(global, require, module, exports) {  'use strict';












var ReactComponent=require('ReactComponent');
var ReactElement=require('ReactElement');
var ReactErrorUtils=require('ReactErrorUtils');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactNoopUpdateQueue=require('ReactNoopUpdateQueue');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var keyMirror=require('keyMirror');
var keyOf=require('keyOf');
var warning=require('warning');

var MIXINS_KEY=keyOf({mixins:null});




var SpecPolicy=keyMirror({



DEFINE_ONCE:null,




DEFINE_MANY:null,



OVERRIDE_BASE:null,





DEFINE_MANY_MERGED:null});



var injectedMixins=[];

var warnedSetProps=false;
function warnSetProps(){
if(!warnedSetProps){
warnedSetProps = true;
warning(
false,
'setProps(...) and replaceProps(...) are deprecated. ' + 
'Instead, call React.render again at the top level.');}}


























var ReactClassInterface={







mixins:SpecPolicy.DEFINE_MANY,








statics:SpecPolicy.DEFINE_MANY,







propTypes:SpecPolicy.DEFINE_MANY,







contextTypes:SpecPolicy.DEFINE_MANY,







childContextTypes:SpecPolicy.DEFINE_MANY,













getDefaultProps:SpecPolicy.DEFINE_MANY_MERGED,















getInitialState:SpecPolicy.DEFINE_MANY_MERGED,





getChildContext:SpecPolicy.DEFINE_MANY_MERGED,

















render:SpecPolicy.DEFINE_ONCE,












componentWillMount:SpecPolicy.DEFINE_MANY,











componentDidMount:SpecPolicy.DEFINE_MANY,




















componentWillReceiveProps:SpecPolicy.DEFINE_MANY,





















shouldComponentUpdate:SpecPolicy.DEFINE_ONCE,
















componentWillUpdate:SpecPolicy.DEFINE_MANY,













componentDidUpdate:SpecPolicy.DEFINE_MANY,












componentWillUnmount:SpecPolicy.DEFINE_MANY,















updateComponent:SpecPolicy.OVERRIDE_BASE};












var RESERVED_SPEC_KEYS={
displayName:function(Constructor,displayName){
Constructor.displayName = displayName;},

mixins:function(Constructor,mixins){
if(mixins){
for(var i=0;i < mixins.length;i++) {
mixSpecIntoComponent(Constructor,mixins[i]);}}},



childContextTypes:function(Constructor,childContextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
childContextTypes,
ReactPropTypeLocations.childContext);}


Constructor.childContextTypes = assign(
{},
Constructor.childContextTypes,
childContextTypes);},


contextTypes:function(Constructor,contextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
contextTypes,
ReactPropTypeLocations.context);}


Constructor.contextTypes = assign(
{},
Constructor.contextTypes,
contextTypes);},






getDefaultProps:function(Constructor,getDefaultProps){
if(Constructor.getDefaultProps){
Constructor.getDefaultProps = createMergedResultFunction(
Constructor.getDefaultProps,
getDefaultProps);}else 

{
Constructor.getDefaultProps = getDefaultProps;}},


propTypes:function(Constructor,propTypes){
if(__DEV__){
validateTypeDef(
Constructor,
propTypes,
ReactPropTypeLocations.prop);}


Constructor.propTypes = assign(
{},
Constructor.propTypes,
propTypes);},


statics:function(Constructor,statics){
mixStaticSpecIntoComponent(Constructor,statics);}};



function validateTypeDef(Constructor,typeDef,location){
for(var propName in typeDef) {
if(typeDef.hasOwnProperty(propName)){


warning(
typeof typeDef[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.',
Constructor.displayName || 'ReactClass',
ReactPropTypeLocationNames[location],
propName);}}}





function validateMethodOverride(proto,name){
var specPolicy=ReactClassInterface.hasOwnProperty(name)?
ReactClassInterface[name]:
null;


if(ReactClassMixin.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.OVERRIDE_BASE,
'ReactClassInterface: You are attempting to override ' + 
'`%s` from your class specification. Ensure that your method names ' + 
'do not overlap with React methods.',
name);}




if(proto.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.DEFINE_MANY || 
specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
'ReactClassInterface: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be due ' + 
'to a mixin.',
name);}}








function mixSpecIntoComponent(Constructor,spec){
if(!spec){
return;}


invariant(
typeof spec !== 'function',
'ReactClass: You\'re attempting to ' + 
'use a component class as a mixin. Instead, just use a regular object.');

invariant(
!ReactElement.isValidElement(spec),
'ReactClass: You\'re attempting to ' + 
'use a component as a mixin. Instead, just use a regular object.');


var proto=Constructor.prototype;




if(spec.hasOwnProperty(MIXINS_KEY)){
RESERVED_SPEC_KEYS.mixins(Constructor,spec.mixins);}


for(var name in spec) {
if(!spec.hasOwnProperty(name)){
continue;}


if(name === MIXINS_KEY){

continue;}


var property=spec[name];
validateMethodOverride(proto,name);

if(RESERVED_SPEC_KEYS.hasOwnProperty(name)){
RESERVED_SPEC_KEYS[name](Constructor,property);}else 
{




var isReactClassMethod=
ReactClassInterface.hasOwnProperty(name);
var isAlreadyDefined=proto.hasOwnProperty(name);
var isFunction=typeof property === 'function';
var shouldAutoBind=
isFunction && 
!isReactClassMethod && 
!isAlreadyDefined;

if(shouldAutoBind){
if(!proto.__reactAutoBindMap){
proto.__reactAutoBindMap = {};}

proto.__reactAutoBindMap[name] = property;
proto[name] = property;}else 
{
if(isAlreadyDefined){
var specPolicy=ReactClassInterface[name];


invariant(
isReactClassMethod && (
specPolicy === SpecPolicy.DEFINE_MANY_MERGED || 
specPolicy === SpecPolicy.DEFINE_MANY),

'ReactClass: Unexpected spec policy %s for key %s ' + 
'when mixing in component specs.',
specPolicy,
name);




if(specPolicy === SpecPolicy.DEFINE_MANY_MERGED){
proto[name] = createMergedResultFunction(proto[name],property);}else 
if(specPolicy === SpecPolicy.DEFINE_MANY){
proto[name] = createChainedFunction(proto[name],property);}}else 

{
proto[name] = property;
if(__DEV__){


if(typeof property === 'function' && spec.displayName){
proto[name].displayName = spec.displayName + '_' + name;}}}}}}}








function mixStaticSpecIntoComponent(Constructor,statics){
if(!statics){
return;}

for(var name in statics) {
var property=statics[name];
if(!statics.hasOwnProperty(name)){
continue;}


var isReserved=(name in RESERVED_SPEC_KEYS);
invariant(
!isReserved,
'ReactClass: You are attempting to define a reserved ' + 
'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 
'as an instance property instead; it will still be accessible on the ' + 
'constructor.',
name);


var isInherited=(name in Constructor);
invariant(
!isInherited,
'ReactClass: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be ' + 
'due to a mixin.',
name);

Constructor[name] = property;}}










function mergeIntoWithNoDuplicateKeys(one,two){
invariant(
one && two && typeof one === 'object' && typeof two === 'object',
'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');


for(var key in two) {
if(two.hasOwnProperty(key)){
invariant(
one[key] === undefined,
'mergeIntoWithNoDuplicateKeys(): ' + 
'Tried to merge two objects with the same key: `%s`. This conflict ' + 
'may be due to a mixin; in particular, this may be caused by two ' + 
'getInitialState() or getDefaultProps() methods returning objects ' + 
'with clashing keys.',
key);

one[key] = two[key];}}


return one;}










function createMergedResultFunction(one,two){
return function mergedResult(){
var a=one.apply(this,arguments);
var b=two.apply(this,arguments);
if(a == null){
return b;}else 
if(b == null){
return a;}

var c={};
mergeIntoWithNoDuplicateKeys(c,a);
mergeIntoWithNoDuplicateKeys(c,b);
return c;};}











function createChainedFunction(one,two){
return function chainedFunction(){
one.apply(this,arguments);
two.apply(this,arguments);};}










function bindAutoBindMethod(component,method){
var boundMethod=method.bind(component);
if(__DEV__){
boundMethod.__reactBoundContext = component;
boundMethod.__reactBoundMethod = method;
boundMethod.__reactBoundArguments = null;
var componentName=component.constructor.displayName;
var _bind=boundMethod.bind;

boundMethod.bind = function(newThis){for(var _len=arguments.length,args=Array(_len > 1?_len - 1:0),_key=1;_key < _len;_key++) {args[_key - 1] = arguments[_key];}



if(newThis !== component && newThis !== null){
warning(
false,
'bind(): React component methods may only be bound to the ' + 
'component instance. See %s',
componentName);}else 

if(!args.length){
warning(
false,
'bind(): You are binding a component method to the component. ' + 
'React does this for you automatically in a high-performance ' + 
'way, so you can safely remove this call. See %s',
componentName);

return boundMethod;}

var reboundMethod=_bind.apply(boundMethod,arguments);
reboundMethod.__reactBoundContext = component;
reboundMethod.__reactBoundMethod = method;
reboundMethod.__reactBoundArguments = args;
return reboundMethod;};}



return boundMethod;}







function bindAutoBindMethods(component){
for(var autoBindKey in component.__reactAutoBindMap) {
if(component.__reactAutoBindMap.hasOwnProperty(autoBindKey)){
var method=component.__reactAutoBindMap[autoBindKey];
component[autoBindKey] = bindAutoBindMethod(
component,
ReactErrorUtils.guard(
method,
component.constructor.displayName + '.' + autoBindKey));}}}










var ReactClassMixin={





replaceState:function(newState,callback){
this.updater.enqueueReplaceState(this,newState);
if(callback){
this.updater.enqueueCallback(this,callback);}},









isMounted:function(){
return this.updater.isMounted(this);},











setProps:function(partialProps,callback){
if(__DEV__){
warnSetProps();}

this.updater.enqueueSetProps(this,partialProps);
if(callback){
this.updater.enqueueCallback(this,callback);}},












replaceProps:function(newProps,callback){
if(__DEV__){
warnSetProps();}

this.updater.enqueueReplaceProps(this,newProps);
if(callback){
this.updater.enqueueCallback(this,callback);}}};




var ReactClassComponent=function(){};
assign(
ReactClassComponent.prototype,
ReactComponent.prototype,
ReactClassMixin);







var ReactClass={








createClass:function(spec){
var Constructor=function(props,context,updater){



if(__DEV__){
warning(
this instanceof Constructor,
'Something is calling a React component directly. Use a factory or ' + 
'JSX instead. See: https://fb.me/react-legacyfactory');}




if(this.__reactAutoBindMap){
bindAutoBindMethods(this);}


this.props = props;
this.context = context;
this.refs = emptyObject;
this.updater = updater || ReactNoopUpdateQueue;

this.state = null;




var initialState=this.getInitialState?this.getInitialState():null;
if(__DEV__){

if(typeof initialState === 'undefined' && 
this.getInitialState._isMockFunction){


initialState = null;}}


invariant(
typeof initialState === 'object' && !Array.isArray(initialState),
'%s.getInitialState(): must return an object or null',
Constructor.displayName || 'ReactCompositeComponent');


this.state = initialState;};

Constructor.prototype = new ReactClassComponent();
Constructor.prototype.constructor = Constructor;

injectedMixins.forEach(
mixSpecIntoComponent.bind(null,Constructor));


mixSpecIntoComponent(Constructor,spec);


if(Constructor.getDefaultProps){
Constructor.defaultProps = Constructor.getDefaultProps();}


if(__DEV__){




if(Constructor.getDefaultProps){
Constructor.getDefaultProps.isReactClassApproved = {};}

if(Constructor.prototype.getInitialState){
Constructor.prototype.getInitialState.isReactClassApproved = {};}}



invariant(
Constructor.prototype.render,
'createClass(...): Class specification must implement a `render` method.');


if(__DEV__){
warning(
!Constructor.prototype.componentShouldUpdate,
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.',
spec.displayName || 'A component');

warning(
!Constructor.prototype.componentWillRecieveProps,
'%s has a method called ' + 
'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
spec.displayName || 'A component');}




for(var methodName in ReactClassInterface) {
if(!Constructor.prototype[methodName]){
Constructor.prototype[methodName] = null;}}



return Constructor;},


injection:{
injectMixin:function(mixin){
injectedMixins.push(mixin);}}};





module.exports = ReactClass;
});
__d('ReactComponent',["ReactNoopUpdateQueue","emptyObject","invariant","warning"],function(global, require, module, exports) {  'use strict';












var ReactNoopUpdateQueue=require('ReactNoopUpdateQueue');

var emptyObject=require('emptyObject');
var invariant=require('invariant');
var warning=require('warning');




function ReactComponent(props,context,updater){
this.props = props;
this.context = context;
this.refs = emptyObject;


this.updater = updater || ReactNoopUpdateQueue;}



























ReactComponent.prototype.setState = function(partialState,callback){
invariant(
typeof partialState === 'object' || 
typeof partialState === 'function' || 
partialState == null,
'setState(...): takes an object of state variables to update or a ' + 
'function which returns an object of state variables.');

if(__DEV__){
warning(
partialState != null,
'setState(...): You passed an undefined or null state object; ' + 
'instead, use forceUpdate().');}


this.updater.enqueueSetState(this,partialState);
if(callback){
this.updater.enqueueCallback(this,callback);}};

















ReactComponent.prototype.forceUpdate = function(callback){
this.updater.enqueueForceUpdate(this);
if(callback){
this.updater.enqueueCallback(this,callback);}};








if(__DEV__){
var deprecatedAPIs={
getDOMNode:[
'getDOMNode',
'Use React.findDOMNode(component) instead.'],

isMounted:[
'isMounted',
'Instead, make sure to clean up subscriptions and pending requests in ' + 
'componentWillUnmount to prevent memory leaks.'],

replaceProps:[
'replaceProps',
'Instead, call React.render again at the top level.'],

replaceState:[
'replaceState',
'Refactor your code to use setState instead (see ' + 
'https://github.com/facebook/react/issues/3236).'],

setProps:[
'setProps',
'Instead, call React.render again at the top level.']};


var defineDeprecationWarning=function(methodName,info){
try{
Object.defineProperty(ReactComponent.prototype,methodName,{
get:function(){
warning(
false,
'%s(...) is deprecated in plain JavaScript React classes. %s',
info[0],
info[1]);

return undefined;}});}


catch(x) {}};



for(var fnName in deprecatedAPIs) {
if(deprecatedAPIs.hasOwnProperty(fnName)){
defineDeprecationWarning(fnName,deprecatedAPIs[fnName]);}}}




module.exports = ReactComponent;
});
__d('ReactNoopUpdateQueue',["warning"],function(global, require, module, exports) {  'use strict';












var warning=require('warning');

function warnTDZ(publicInstance,callerName){
if(__DEV__){
warning(
false,
'%s(...): Can only update a mounted or mounting component. ' + 
'This usually means you called %s() on an unmounted component. ' + 
'This is a no-op. Please check the code for the %s component.',
callerName,
callerName,
publicInstance.constructor && publicInstance.constructor.displayName || '');}}







var ReactNoopUpdateQueue={








isMounted:function(publicInstance){
return false;},










enqueueCallback:function(publicInstance,callback){},














enqueueForceUpdate:function(publicInstance){
warnTDZ(publicInstance,'forceUpdate');},













enqueueReplaceState:function(publicInstance,completeState){
warnTDZ(publicInstance,'replaceState');},












enqueueSetState:function(publicInstance,partialState){
warnTDZ(publicInstance,'setState');},









enqueueSetProps:function(publicInstance,partialProps){
warnTDZ(publicInstance,'setProps');},









enqueueReplaceProps:function(publicInstance,props){
warnTDZ(publicInstance,'replaceProps');}};




module.exports = ReactNoopUpdateQueue;
});
__d('emptyObject',[],function(global, require, module, exports) {  "use strict";












var emptyObject={};

if(__DEV__){
Object.freeze(emptyObject);}


module.exports = emptyObject;
});
__d('ReactErrorUtils',[],function(global, require, module, exports) {  'use strict';













var ReactErrorUtils={









guard:function(func,name){
return func;}};



module.exports = ReactErrorUtils;
});
__d('ReactPropTypeLocations',["keyMirror"],function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var ReactPropTypeLocations=keyMirror({
prop:null,
context:null,
childContext:null});


module.exports = ReactPropTypeLocations;
});
__d('keyMirror',["invariant"],function(global, require, module, exports) {  'use strict';













var invariant=require('invariant');



















var keyMirror=function(obj){
var ret={};
var key;
invariant(
obj instanceof Object && !Array.isArray(obj),
'keyMirror(...): Argument must be an object.');

for(key in obj) {
if(!obj.hasOwnProperty(key)){
continue;}

ret[key] = key;}

return ret;};


module.exports = keyMirror;
});
__d('ReactPropTypeLocationNames',[],function(global, require, module, exports) {  'use strict';












var ReactPropTypeLocationNames={};

if(__DEV__){
ReactPropTypeLocationNames = {
prop:'prop',
context:'context',
childContext:'child context'};}



module.exports = ReactPropTypeLocationNames;
});
__d('keyOf',[],function(global, require, module, exports) {  var 




















keyOf=function(oneKeyObj){
var key;
for(key in oneKeyObj) {
if(!oneKeyObj.hasOwnProperty(key)){
continue;}

return key;}

return null;};



module.exports = keyOf;
});
__d('ReactElementValidator',["ReactElement","ReactFragment","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactCurrentOwner","getIteratorFn","invariant","warning"],function(global, require, module, exports) {  'use strict';



















var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactCurrentOwner=require('ReactCurrentOwner');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

function getDeclarationErrorAddendum(){
if(ReactCurrentOwner.current){
var name=ReactCurrentOwner.current.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}







var ownerHasKeyUseWarning={};

var loggedTypeFailures={};

var NUMERIC_PROPERTY_REGEX=/^\d+$/;







function getName(instance){
var publicInstance=instance && instance.getPublicInstance();
if(!publicInstance){
return undefined;}

var constructor=publicInstance.constructor;
if(!constructor){
return undefined;}

return constructor.displayName || constructor.name || undefined;}








function getCurrentOwnerDisplayName(){
var current=ReactCurrentOwner.current;
return (
current && getName(current) || undefined);}













function validateExplicitKey(element,parentType){
if(element._store.validated || element.key != null){
return;}

element._store.validated = true;

var addenda=getAddendaForKeyUse('uniqueKey',element,parentType);
if(addenda === null){

return;}

warning(
false,
'Each child in an array or iterator should have a unique "key" prop.' + 
'%s%s%s',
addenda.parentOrOwner || '',
addenda.childOwner || '',
addenda.url || '');}












function validatePropertyKey(name,element,parentType){
if(!NUMERIC_PROPERTY_REGEX.test(name)){
return;}

var addenda=getAddendaForKeyUse('numericKeys',element,parentType);
if(addenda === null){

return;}

warning(
false,
'Child objects should have non-numeric keys so ordering is preserved.' + 
'%s%s%s',
addenda.parentOrOwner || '',
addenda.childOwner || '',
addenda.url || '');}













function getAddendaForKeyUse(messageType,element,parentType){
var ownerName=getCurrentOwnerDisplayName();
var parentName=typeof parentType === 'string'?
parentType:parentType.displayName || parentType.name;

var useName=ownerName || parentName;
var memoizer=ownerHasKeyUseWarning[messageType] || (
ownerHasKeyUseWarning[messageType] = {});

if(memoizer[useName]){
return null;}

memoizer[useName] = true;

var addenda={
parentOrOwner:
ownerName?' Check the render method of ' + ownerName + '.':
parentName?' Check the React.render call using <' + parentName + '>.':
null,
url:' See https://fb.me/react-warning-keys for more information.',
childOwner:null};





if(element && 
element._owner && 
element._owner !== ReactCurrentOwner.current){

addenda.childOwner = ' It was passed a child from ' + 
getName(element._owner) + '.';}


return addenda;}











function validateChildKeys(node,parentType){
if(Array.isArray(node)){
for(var i=0;i < node.length;i++) {
var child=node[i];
if(ReactElement.isValidElement(child)){
validateExplicitKey(child,parentType);}}}else 


if(ReactElement.isValidElement(node)){

node._store.validated = true;}else 
if(node){
var iteratorFn=getIteratorFn(node);

if(iteratorFn){
if(iteratorFn !== node.entries){
var iterator=iteratorFn.call(node);
var step;
while(!(step = iterator.next()).done) {
if(ReactElement.isValidElement(step.value)){
validateExplicitKey(step.value,parentType);}}}}else 



if(typeof node === 'object'){
var fragment=ReactFragment.extractIfFragment(node);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
validatePropertyKey(key,fragment[key],parentType);}}}}}















function checkPropTypes(componentName,propTypes,props,location){
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;



try{


invariant(
typeof propTypes[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.',
componentName || 'React class',
ReactPropTypeLocationNames[location],
propName);

error = propTypes[propName](props,propName,componentName,location);}
catch(ex) {
error = ex;}

warning(
!error || error instanceof Error,
'%s: type specification of %s `%s` is invalid; the type checker ' + 
'function must return `null` or an `Error` but returned a %s. ' + 
'You may have forgotten to pass an argument to the type checker ' + 
'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 
'shape all require an argument).',
componentName || 'React class',
ReactPropTypeLocationNames[location],
propName,
typeof error);

if(error instanceof Error && !(error.message in loggedTypeFailures)){


loggedTypeFailures[error.message] = true;

var addendum=getDeclarationErrorAddendum();
warning(false,'Failed propType: %s%s',error.message,addendum);}}}}











function validatePropTypes(element){
var componentClass=element.type;
if(typeof componentClass !== 'function'){
return;}

var name=componentClass.displayName || componentClass.name;
if(componentClass.propTypes){
checkPropTypes(
name,
componentClass.propTypes,
element.props,
ReactPropTypeLocations.prop);}


if(typeof componentClass.getDefaultProps === 'function'){
warning(
componentClass.getDefaultProps.isReactClassApproved,
'getDefaultProps is only used on classic React.createClass ' + 
'definitions. Use a static property named `defaultProps` instead.');}}




var ReactElementValidator={

createElement:function(type,props,children){


warning(typeof type === 'string' || typeof type === 'function',
'React.createElement: type should not be null, undefined, boolean, or ' + 
'number. It should be a string (for DOM elements) or a ReactClass ' + 
'(for composite components).%s',
getDeclarationErrorAddendum());


var element=ReactElement.createElement.apply(this,arguments);



if(element == null){
return element;}


for(var i=2;i < arguments.length;i++) {
validateChildKeys(arguments[i],type);}


validatePropTypes(element);

return element;},


createFactory:function(type){
var validatedFactory=ReactElementValidator.createElement.bind(
null,
type);


validatedFactory.type = type;

if(__DEV__){
try{
Object.defineProperty(
validatedFactory,
'type',
{
enumerable:false,
get:function(){
warning(
false,
'Factory.type is deprecated. Access the class directly ' + 
'before passing it to createFactory.');

Object.defineProperty(this,'type',{
value:type});

return type;}});}



catch(x) {}}





return validatedFactory;},


cloneElement:function(element,props,children){
var newElement=ReactElement.cloneElement.apply(this,arguments);
for(var i=2;i < arguments.length;i++) {
validateChildKeys(arguments[i],newElement.type);}

validatePropTypes(newElement);
return newElement;}};




module.exports = ReactElementValidator;
});
__d('ReactNativeDefaultInjection',["InitializeJavaScriptAppEngine","EventPluginHub","EventPluginUtils","IOSDefaultEventPluginOrder","IOSNativeBridgeEventPlugin","NodeHandle","ReactComponentEnvironment","ReactDefaultBatchingStrategy","ReactEmptyComponent","ReactInstanceHandles","ReactNativeComponentEnvironment","ReactNativeGlobalInteractionHandler","ReactNativeGlobalResponderHandler","ReactNativeMount","ReactNativeTextComponent","ReactNativeComponent","ReactUpdates","ResponderEventPlugin","UniversalWorkerNodeHandle","createReactNativeComponentClass","invariant","RCTEventEmitter","RCTLog","JSTimersExecution"],function(global, require, module, exports) {  'use strict';















require('InitializeJavaScriptAppEngine');
var EventPluginHub=require('EventPluginHub');
var EventPluginUtils=require('EventPluginUtils');
var IOSDefaultEventPluginOrder=require('IOSDefaultEventPluginOrder');
var IOSNativeBridgeEventPlugin=require('IOSNativeBridgeEventPlugin');
var NodeHandle=require('NodeHandle');
var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactDefaultBatchingStrategy=require('ReactDefaultBatchingStrategy');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeComponentEnvironment=require('ReactNativeComponentEnvironment');
var ReactNativeGlobalInteractionHandler=require('ReactNativeGlobalInteractionHandler');
var ReactNativeGlobalResponderHandler=require('ReactNativeGlobalResponderHandler');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTextComponent=require('ReactNativeTextComponent');
var ReactNativeComponent=require('ReactNativeComponent');
var ReactUpdates=require('ReactUpdates');
var ResponderEventPlugin=require('ResponderEventPlugin');
var UniversalWorkerNodeHandle=require('UniversalWorkerNodeHandle');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var invariant=require('invariant');


require('RCTEventEmitter');
require('RCTLog');
require('JSTimersExecution');

function inject(){



EventPluginHub.injection.injectEventPluginOrder(IOSDefaultEventPluginOrder);
EventPluginHub.injection.injectInstanceHandle(ReactInstanceHandles);

ResponderEventPlugin.injection.injectGlobalResponderHandler(
ReactNativeGlobalResponderHandler);


ResponderEventPlugin.injection.injectGlobalInteractionHandler(
ReactNativeGlobalInteractionHandler);






EventPluginHub.injection.injectEventPluginsByName({
'ResponderEventPlugin':ResponderEventPlugin,
'IOSNativeBridgeEventPlugin':IOSNativeBridgeEventPlugin});


ReactUpdates.injection.injectReconcileTransaction(
ReactNativeComponentEnvironment.ReactReconcileTransaction);


ReactUpdates.injection.injectBatchingStrategy(
ReactDefaultBatchingStrategy);


ReactComponentEnvironment.injection.injectEnvironment(
ReactNativeComponentEnvironment);



var RCTView=createReactNativeComponentClass({
validAttributes:{},
uiViewClassName:'RCTView'});

ReactEmptyComponent.injection.injectEmptyComponent(RCTView);

EventPluginUtils.injection.injectMount(ReactNativeMount);

ReactNativeComponent.injection.injectTextComponentClass(
ReactNativeTextComponent);

ReactNativeComponent.injection.injectGenericComponentClass(function(tag){

var info='';
if(typeof tag === 'string' && /^[a-z]/.test(tag)){
info += ' Each component name should start with an uppercase letter.';}

invariant(false,'Expected a component class, got %s.%s',tag,info);});


NodeHandle.injection.injectImplementation(UniversalWorkerNodeHandle);}


module.exports = {
inject:inject};
});
__d('InitializeJavaScriptAppEngine',["RCTDebugComponentOwnership","RCTDeviceEventEmitter","PerformanceLogger","regenerator/runtime.js","ExceptionsManager","ErrorUtils","ExceptionsManager","Platform","checkFlowAtRuntime","JSTimers","NativeModules","Promise","XMLHttpRequest","FormData","fetch","Geolocation","WebSocket","BridgeProfiling"],function(global, require, module, exports) {  require(
























'RCTDebugComponentOwnership');
require('RCTDeviceEventEmitter');
require('PerformanceLogger');
require('regenerator/runtime.js');

if(typeof GLOBAL === 'undefined'){
GLOBAL = this;}


if(typeof window === 'undefined'){
window = GLOBAL;}


function handleError(e,isFatal){
try{
require('ExceptionsManager').handleException(e,isFatal);}
catch(ee) {
console.log('Failed to print error: ',ee.message);}}



function setUpRedBoxErrorHandler(){
var ErrorUtils=require('ErrorUtils');
ErrorUtils.setGlobalHandler(handleError);}


function setUpRedBoxConsoleErrorHandler(){

var ExceptionsManager=require('ExceptionsManager');
var Platform=require('Platform');

if(__DEV__ && Platform.OS === 'ios'){
ExceptionsManager.installConsoleErrorReporter();}}



function setupFlowChecker(){
if(__DEV__){
var checkFlowAtRuntime=require('checkFlowAtRuntime');
checkFlowAtRuntime();}}










function setUpTimers(){
var JSTimers=require('JSTimers');
GLOBAL.setTimeout = JSTimers.setTimeout;
GLOBAL.setInterval = JSTimers.setInterval;
GLOBAL.setImmediate = JSTimers.setImmediate;
GLOBAL.clearTimeout = JSTimers.clearTimeout;
GLOBAL.clearInterval = JSTimers.clearInterval;
GLOBAL.clearImmediate = JSTimers.clearImmediate;
GLOBAL.cancelAnimationFrame = JSTimers.clearInterval;
GLOBAL.requestAnimationFrame = function(cb){

return JSTimers.requestAnimationFrame(cb);};}



function setUpAlert(){
var RCTAlertManager=require('NativeModules').AlertManager;
if(!GLOBAL.alert){
GLOBAL.alert = function(text){
var alertOpts={
title:'Alert',
message:'' + text,
buttons:[{'cancel':'OK'}]};

RCTAlertManager.alertWithArgs(alertOpts,function(){});};}}




function setUpPromise(){


GLOBAL.Promise = require('Promise');}


function setUpXHR(){


GLOBAL.XMLHttpRequest = require('XMLHttpRequest');
GLOBAL.FormData = require('FormData');

var fetchPolyfill=require('fetch');
GLOBAL.fetch = fetchPolyfill.fetch;
GLOBAL.Headers = fetchPolyfill.Headers;
GLOBAL.Request = fetchPolyfill.Request;
GLOBAL.Response = fetchPolyfill.Response;}


function setUpGeolocation(){
GLOBAL.navigator = GLOBAL.navigator || {};
GLOBAL.navigator.geolocation = require('Geolocation');}


function setUpWebSockets(){
GLOBAL.WebSocket = require('WebSocket');}


function setupProfile(){
console.profile = console.profile || GLOBAL.nativeTraceBeginSection || function(){};
console.profileEnd = console.profileEnd || GLOBAL.nativeTraceEndSection || function(){};
require('BridgeProfiling').swizzleReactPerf();}


function setUpProcessEnv(){
GLOBAL.process = GLOBAL.process || {};
GLOBAL.process.env = {NODE_ENV:__DEV__?'development':'production'};}


setUpRedBoxErrorHandler();
setUpTimers();
setUpAlert();
setUpPromise();
setUpXHR();
setUpRedBoxConsoleErrorHandler();
setUpGeolocation();
setUpWebSockets();
setupProfile();
setUpProcessEnv();
setupFlowChecker();
});
__d('RCTDebugComponentOwnership',["NativeModules","InspectorUtils","ReactNativeTagHandles"],function(global, require, module, exports) {  'use strict';
















var DebugComponentOwnershipModule=require('NativeModules').DebugComponentOwnershipModule;
var InspectorUtils=require('InspectorUtils');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function componentToString(component){
return component.getName?component.getName():'Unknown';}


function getRootTagForTag(tag){
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
if(!rootNodeID){
return null;}

var rootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootNodeID);
if(!rootID){
return null;}

return ReactNativeTagHandles.rootNodeIDToTag[rootID];}


module.exports = {








getOwnerHierarchy:function(requestID,tag){
var rootTag=getRootTagForTag(tag);
var instance=InspectorUtils.findInstanceByNativeTag(rootTag,tag);
var ownerHierarchy=instance?
InspectorUtils.getOwnerHierarchy(instance).map(componentToString):
null;
DebugComponentOwnershipModule.receiveOwnershipHierarchy(requestID,tag,ownerHierarchy);}};
});
__d('NativeModules',["BatchedBridge","nativeModulePrefixNormalizer"],function(global, require, module, exports) {  'use strict';












var NativeModules=require('BatchedBridge').RemoteModules;

var nativeModulePrefixNormalizer=require('nativeModulePrefixNormalizer');

nativeModulePrefixNormalizer(NativeModules);

module.exports = NativeModules;
});
__d('BatchedBridge',["MessageQueue"],function(global, require, module, exports) {  'use strict';











var MessageQueue=require('MessageQueue');

var BatchedBridge=new MessageQueue(
__fbBatchedBridgeConfig.remoteModuleConfig,
__fbBatchedBridgeConfig.localModulesConfig);


module.exports = BatchedBridge;
});
__d('MessageQueue',["BridgeProfiling","ErrorUtils","JSTimersExecution","ReactUpdates","invariant","keyMirror","stringifySafe"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}














var BridgeProfiling=require('BridgeProfiling');
var ErrorUtils=require('ErrorUtils');
var JSTimersExecution=require('JSTimersExecution');
var ReactUpdates=require('ReactUpdates');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var stringifySafe=require('stringifySafe');

var MODULE_IDS=0;
var METHOD_IDS=1;
var PARAMS=2;

var SPY_MODE=false;

var MethodTypes=keyMirror({
local:null,
remote:null,
remoteAsync:null});


var guard=function(fn){
try{
fn();}
catch(error) {
ErrorUtils.reportFatalError(error);}};var 



MessageQueue=(function(){

function MessageQueue(remoteModules,localModules,customRequire){var _this=this;_classCallCheck(this,MessageQueue);
this.RemoteModules = {};

this._require = customRequire || require;
this._queue = [[],[],[]];
this._moduleTable = {};
this._methodTable = {};
this._callbacks = [];
this._callbackID = 0;

[
'processBatch',
'invokeCallbackAndReturnFlushedQueue',
'callFunctionReturnFlushedQueue',
'flushedQueue'].
forEach(function(fn){return _this[fn] = _this[fn].bind(_this);});

this._genModules(remoteModules);
localModules && this._genLookupTables(
localModules,this._moduleTable,this._methodTable);

if(__DEV__){
this._debugInfo = {};
this._remoteModuleTable = {};
this._remoteMethodTable = {};
this._genLookupTables(
remoteModules,this._remoteModuleTable,this._remoteMethodTable);}}_createClass(MessageQueue,[{key:'processBatch',value:






function processBatch(batch){var _this2=this;
guard(function(){
ReactUpdates.batchedUpdates(function(){
batch.forEach(function(call){
var method=call.method === 'callFunctionReturnFlushedQueue'?
'__callFunction':'__invokeCallback';
guard(function(){return _this2[method].apply(_this2,call.args);});});

BridgeProfiling.profile('ReactUpdates.batchedUpdates()');});

BridgeProfiling.profileEnd();});

return this.flushedQueue();}},{key:'callFunctionReturnFlushedQueue',value:


function callFunctionReturnFlushedQueue(module,method,args){var _this3=this;
guard(function(){return _this3.__callFunction(module,method,args);});
return this.flushedQueue();}},{key:'invokeCallbackAndReturnFlushedQueue',value:


function invokeCallbackAndReturnFlushedQueue(cbID,args){var _this4=this;
guard(function(){return _this4.__invokeCallback(cbID,args);});
return this.flushedQueue();}},{key:'flushedQueue',value:


function flushedQueue(){
BridgeProfiling.profile('JSTimersExecution.callImmediates()');
guard(function(){return JSTimersExecution.callImmediates();});
BridgeProfiling.profileEnd();
var queue=this._queue;
this._queue = [[],[],[]];
return queue[0].length?queue:null;}},{key:'__nativeCall',value:





function __nativeCall(module,method,params,onFail,onSucc){
if(onFail || onSucc){
if(__DEV__){

this._callbackID > 1 << 5 && (
this._debugInfo[this._callbackID >> 5] = null);

this._debugInfo[this._callbackID >> 1] = [module,method];}

onFail && params.push(this._callbackID);






this._callbacks[this._callbackID++] = onFail;




onSucc && params.push(this._callbackID);
this._callbacks[this._callbackID++] = onSucc;}


this._queue[MODULE_IDS].push(module);
this._queue[METHOD_IDS].push(method);
this._queue[PARAMS].push(params);
if(__DEV__ && SPY_MODE && isFinite(module)){
console.log('JS->N : ' + this._remoteModuleTable[module] + '.' + 
this._remoteMethodTable[module][method] + '(' + JSON.stringify(params) + ')');}}},{key:'__callFunction',value:



function __callFunction(module,method,args){
BridgeProfiling.profile(function(){return module + '.' + method + '(' + stringifySafe(args) + ')';});
if(isFinite(module)){
method = this._methodTable[module][method];
module = this._moduleTable[module];}

if(__DEV__ && SPY_MODE){
console.log('N->JS : ' + module + '.' + method + '(' + JSON.stringify(args) + ')');}

module = this._require(module);
module[method].apply(module,args);
BridgeProfiling.profileEnd();}},{key:'__invokeCallback',value:


function __invokeCallback(cbID,args){
BridgeProfiling.profile(
function(){return 'MessageQueue.invokeCallback(' + cbID + ', ' + stringifySafe(args) + ')';});
var callback=this._callbacks[cbID];
if(__DEV__){
var debug=this._debugInfo[cbID >> 1];
var _module=debug && this._remoteModuleTable[debug[0]];
var method=debug && this._remoteMethodTable[debug[0]][debug[1]];
if(!callback){
console.log('N->JS : <callback (not found) for ' + _module + '.' + method + '>(' + JSON.stringify(args) + ')');
console.error('Callback with id ' + cbID + ': ' + _module + '.' + method + '() not found');}else 
if(SPY_MODE){
console.log('N->JS : <callback for ' + _module + '.' + method + '>(' + JSON.stringify(args) + ')');}}


this._callbacks[cbID & ~1] = null;
this._callbacks[cbID | 1] = null;
callback && callback.apply && callback.apply(null,args);
BridgeProfiling.profileEnd();}},{key:'_genLookupTables',value:





function _genLookupTables(localModules,moduleTable,methodTable){
var moduleNames=Object.keys(localModules);
for(var i=0,l=moduleNames.length;i < l;i++) {
var moduleName=moduleNames[i];
var methods=localModules[moduleName].methods;
var moduleID=localModules[moduleName].moduleID;
moduleTable[moduleID] = moduleName;
methodTable[moduleID] = {};

var methodNames=Object.keys(methods);
for(var j=0,k=methodNames.length;j < k;j++) {
var methodName=methodNames[j];
var methodConfig=methods[methodName];
methodTable[moduleID][methodConfig.methodID] = methodName;}}}},{key:'_genModules',value:




function _genModules(remoteModules){
var moduleNames=Object.keys(remoteModules);
for(var i=0,l=moduleNames.length;i < l;i++) {
var moduleName=moduleNames[i];
var moduleConfig=remoteModules[moduleName];
this.RemoteModules[moduleName] = this._genModule({},moduleConfig);}}},{key:'_genModule',value:



function _genModule(module,moduleConfig){
var methodNames=Object.keys(moduleConfig.methods);
for(var i=0,l=methodNames.length;i < l;i++) {
var methodName=methodNames[i];
var methodConfig=moduleConfig.methods[methodName];
module[methodName] = this._genMethod(
moduleConfig.moduleID,methodConfig.methodID,methodConfig.type);}

Object.assign(module,moduleConfig.constants);
return module;}},{key:'_genMethod',value:


function _genMethod(module,method,type){
if(type === MethodTypes.local){
return null;}


var fn=null;
var self=this;
if(type === MethodTypes.remoteAsync){
fn = function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}
return new Promise(function(resolve,reject){
self.__nativeCall(module,method,args,resolve,function(errorData){
var error=createErrorFromErrorData(errorData);
reject(error);});});};}else 



{
fn = function(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2 < _len2;_key2++) {args[_key2] = arguments[_key2];}
var lastArg=args.length > 0?args[args.length - 1]:null;
var secondLastArg=args.length > 1?args[args.length - 2]:null;
var hasSuccCB=typeof lastArg === 'function';
var hasErrorCB=typeof secondLastArg === 'function';
hasErrorCB && invariant(
hasSuccCB,
'Cannot have a non-function arg after a function arg.');

var numCBs=hasSuccCB + hasErrorCB;
var onSucc=hasSuccCB?lastArg:null;
var onFail=hasErrorCB?secondLastArg:null;
args = args.slice(0,args.length - numCBs);
return self.__nativeCall(module,method,args,onFail,onSucc);};}


fn.type = type;
return fn;}}]);return MessageQueue;})();




function createErrorFromErrorData(errorData){var 

message=

errorData.message;var extraErrorInfo=_objectWithoutProperties(errorData,['message']);
var error=new Error(message);
error.framesToPop = 1;
return Object.assign(error,extraErrorInfo);}


module.exports = MessageQueue;
});
__d('BridgeProfiling',["ReactPerf"],function(global, require, module, exports) {  'use strict';












var GLOBAL=GLOBAL || this;
var TRACE_TAG_REACT_APPS=1 << 17;

var BridgeProfiling={
profile:function(profileName){
if(GLOBAL.__BridgeProfilingIsProfiling){
profileName = typeof profileName === 'function'?
profileName():profileName;
console.profile(TRACE_TAG_REACT_APPS,profileName);}},



profileEnd:function(){
if(GLOBAL.__BridgeProfilingIsProfiling){
console.profileEnd(TRACE_TAG_REACT_APPS);}},



swizzleReactPerf:function(){
var ReactPerf=require('ReactPerf');
var originalMeasure=ReactPerf.measure;
ReactPerf.measure = function(objName,fnName,func){
func = originalMeasure.apply(ReactPerf,arguments);
return function(component){
if(GLOBAL.__BridgeProfilingIsProfiling){
var name=this._instance && this._instance.constructor && (
this._instance.constructor.displayName || 
this._instance.constructor.name);
BridgeProfiling.profile(objName + '.' + fnName + '(' + name + ')');}

var ret=func.apply(this,arguments);
BridgeProfiling.profileEnd();
return ret;};};}};





module.exports = BridgeProfiling;
});
__d('ReactPerf',[],function(global, require, module, exports) {  'use strict';

















var ReactPerf={




enableMeasure:false,





storedMeasure:_noMeasure,






measureMethods:function(object,objectName,methodNames){
if(__DEV__){
for(var key in methodNames) {
if(!methodNames.hasOwnProperty(key)){
continue;}

object[key] = ReactPerf.measure(
objectName,
methodNames[key],
object[key]);}}},













measure:function(objName,fnName,func){
if(__DEV__){
var measuredFunc=null;
var wrapper=function(){
if(ReactPerf.enableMeasure){
if(!measuredFunc){
measuredFunc = ReactPerf.storedMeasure(objName,fnName,func);}

return measuredFunc.apply(this,arguments);}

return func.apply(this,arguments);};

wrapper.displayName = objName + '_' + fnName;
return wrapper;}

return func;},


injection:{



injectMeasure:function(measure){
ReactPerf.storedMeasure = measure;}}};












function _noMeasure(objName,fnName,func){
return func;}


module.exports = ReactPerf;
});
__d('ErrorUtils',[],function(global, require, module, exports) {  var 











GLOBAL=this;













module.exports = GLOBAL.ErrorUtils;
});
__d('JSTimersExecution',["invariant","keyMirror","performanceNow","warning","JSTimers","JSTimers"],function(global, require, module, exports) {  'use strict';











var invariant=require('invariant');
var keyMirror=require('keyMirror');
var performanceNow=require('performanceNow');
var warning=require('warning');






var JSTimersExecution={
GUID:1,
Type:keyMirror({
setTimeout:null,
setInterval:null,
requestAnimationFrame:null,
setImmediate:null}),



callbacks:[],
types:[],
timerIDs:[],
immediates:[],






callTimer:function(timerID){
warning(timerID <= JSTimersExecution.GUID,'Tried to call timer with ID ' + timerID + ' but no such timer exists');
var timerIndex=JSTimersExecution.timerIDs.indexOf(timerID);





if(timerIndex === -1){
return;}

var type=JSTimersExecution.types[timerIndex];
var callback=JSTimersExecution.callbacks[timerIndex];


if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setImmediate || 
type === JSTimersExecution.Type.requestAnimationFrame){
JSTimersExecution._clearIndex(timerIndex);}


try{
if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setInterval || 
type === JSTimersExecution.Type.setImmediate){
callback();}else 
if(type === JSTimersExecution.Type.requestAnimationFrame){
var currentTime=performanceNow();
callback(currentTime);}else 
{
console.error('Tried to call a callback with invalid type: ' + type);
return;}}

catch(e) {

JSTimersExecution.errors = JSTimersExecution.errors || [];
JSTimersExecution.errors.push(e);}},







callTimers:function(timerIDs){
invariant(timerIDs.length !== 0,'Probably shouldn\'t call "callTimers" with no timerIDs');

JSTimersExecution.errors = null;
timerIDs.forEach(JSTimersExecution.callTimer);

var errors=JSTimersExecution.errors;
if(errors){
var errorCount=errors.length;
if(errorCount > 1){


for(var ii=1;ii < errorCount;ii++) {
require('JSTimers').setTimeout(
(function(error){throw error;}).bind(null,errors[ii]),
0);}}



throw errors[0];}},







callImmediates:function(){
JSTimersExecution.errors = null;
while(JSTimersExecution.immediates.length !== 0) {
JSTimersExecution.callTimer(JSTimersExecution.immediates.shift());}

if(JSTimersExecution.errors){
JSTimersExecution.errors.forEach(function(error){return (
require('JSTimers').setTimeout(function(){throw error;},0));});}},




_clearIndex:function(i){
JSTimersExecution.timerIDs[i] = null;
JSTimersExecution.callbacks[i] = null;
JSTimersExecution.types[i] = null;}};



module.exports = JSTimersExecution;
});
__d('performanceNow',["performance"],function(global, require, module, exports) {  var 











performance=require('performance');






if(!performance || !performance.now){
performance = Date;}


var performanceNow=performance.now.bind(performance);

module.exports = performanceNow;
});
__d('performance',["ExecutionEnvironment"],function(global, require, module, exports) {  "use strict";













var ExecutionEnvironment=require('ExecutionEnvironment');

var performance;

if(ExecutionEnvironment.canUseDOM){
performance = 
window.performance || 
window.msPerformance || 
window.webkitPerformance;}


module.exports = performance || {};
});
__d('ExecutionEnvironment',[],function(global, require, module, exports) {  "use strict";























var canUseDOM=false;







var ExecutionEnvironment={

canUseDOM:canUseDOM,

canUseWorkers:typeof Worker !== 'undefined',

canUseEventListeners:
canUseDOM && !!(window.addEventListener || window.attachEvent),

canUseViewport:canUseDOM && !!window.screen,

isInWorker:!canUseDOM};



module.exports = ExecutionEnvironment;
});
__d('JSTimers',["NativeModules","JSTimersExecution"],function(global, require, module, exports) {  'use strict';













var RCTTiming=require('NativeModules').Timing;
var JSTimersExecution=require('JSTimersExecution');






var JSTimers={
Types:JSTimersExecution.Types,





_getFreeIndex:function(){
var freeIndex=JSTimersExecution.timerIDs.indexOf(null);
if(freeIndex === -1){
freeIndex = JSTimersExecution.timerIDs.length;}

return freeIndex;},






setTimeout:function(func,duration){for(var _len=arguments.length,args=Array(_len > 2?_len - 2:0),_key=2;_key < _len;_key++) {args[_key - 2] = arguments[_key];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setTimeout;
RCTTiming.createTimer(newID,duration || 0,Date.now(),false);
return newID;},






setInterval:function(func,duration){for(var _len2=arguments.length,args=Array(_len2 > 2?_len2 - 2:0),_key2=2;_key2 < _len2;_key2++) {args[_key2 - 2] = arguments[_key2];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setInterval;
RCTTiming.createTimer(newID,duration || 0,Date.now(),true);
return newID;},






setImmediate:function(func){for(var _len3=arguments.length,args=Array(_len3 > 1?_len3 - 1:0),_key3=1;_key3 < _len3;_key3++) {args[_key3 - 1] = arguments[_key3];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setImmediate;
JSTimersExecution.immediates.push(newID);
return newID;},





requestAnimationFrame:function(func){
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = func;
JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.requestAnimationFrame;
RCTTiming.createTimer(newID,1,Date.now(),false);
return newID;},


clearTimeout:function(timerID){
JSTimers._clearTimerID(timerID);},


clearInterval:function(timerID){
JSTimers._clearTimerID(timerID);},


clearImmediate:function(timerID){
JSTimers._clearTimerID(timerID);
JSTimersExecution.immediates.splice(
JSTimersExecution.immediates.indexOf(timerID),
1);},



cancelAnimationFrame:function(timerID){
JSTimers._clearTimerID(timerID);},


_clearTimerID:function(timerID){


if(timerID == null){
return;}


var index=JSTimersExecution.timerIDs.indexOf(timerID);

if(index !== -1){
JSTimersExecution._clearIndex(index);
if(JSTimersExecution.types[index] !== JSTimersExecution.Type.setImmediate){
RCTTiming.deleteTimer(timerID);}}}};





module.exports = JSTimers;
});
__d('ReactUpdates',["CallbackQueue","PooledClass","ReactPerf","ReactReconciler","Transaction","Object.assign","invariant"],function(global, require, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var invariant=require('invariant');

var dirtyComponents=[];
var asapCallbackQueue=CallbackQueue.getPooled();
var asapEnqueued=false;

var batchingStrategy=null;

function ensureInjected(){
invariant(
ReactUpdates.ReactReconcileTransaction && batchingStrategy,
'ReactUpdates: must inject a reconcile transaction class and batching ' + 
'strategy');}



var NESTED_UPDATES={
initialize:function(){
this.dirtyComponentsLength = dirtyComponents.length;},

close:function(){
if(this.dirtyComponentsLength !== dirtyComponents.length){





dirtyComponents.splice(0,this.dirtyComponentsLength);
flushBatchedUpdates();}else 
{
dirtyComponents.length = 0;}}};




var UPDATE_QUEUEING={
initialize:function(){
this.callbackQueue.reset();},

close:function(){
this.callbackQueue.notifyAll();}};



var TRANSACTION_WRAPPERS=[NESTED_UPDATES,UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction(){
this.reinitializeTransaction();
this.dirtyComponentsLength = null;
this.callbackQueue = CallbackQueue.getPooled();
this.reconcileTransaction = 
ReactUpdates.ReactReconcileTransaction.getPooled();}


assign(
ReactUpdatesFlushTransaction.prototype,
Transaction.Mixin,{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},


destructor:function(){
this.dirtyComponentsLength = null;
CallbackQueue.release(this.callbackQueue);
this.callbackQueue = null;
ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
this.reconcileTransaction = null;},


perform:function(method,scope,a){


return Transaction.Mixin.perform.call(
this,
this.reconcileTransaction.perform,
this.reconcileTransaction,
method,
scope,
a);}});




PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback,a,b,c,d,e){
ensureInjected();
batchingStrategy.batchedUpdates(callback,a,b,c,d,e);}









function mountOrderComparator(c1,c2){
return c1._mountOrder - c2._mountOrder;}


function runBatchedUpdates(transaction){
var len=transaction.dirtyComponentsLength;
invariant(
len === dirtyComponents.length,
'Expected flush transaction\'s stored dirty-components length (%s) to ' + 
'match dirty-components array length (%s).',
len,
dirtyComponents.length);





dirtyComponents.sort(mountOrderComparator);

for(var i=0;i < len;i++) {



var component=dirtyComponents[i];




var callbacks=component._pendingCallbacks;
component._pendingCallbacks = null;

ReactReconciler.performUpdateIfNecessary(
component,
transaction.reconcileTransaction);


if(callbacks){
for(var j=0;j < callbacks.length;j++) {
transaction.callbackQueue.enqueue(
callbacks[j],
component.getPublicInstance());}}}}






var flushBatchedUpdates=function(){




while(dirtyComponents.length || asapEnqueued) {
if(dirtyComponents.length){
var transaction=ReactUpdatesFlushTransaction.getPooled();
transaction.perform(runBatchedUpdates,null,transaction);
ReactUpdatesFlushTransaction.release(transaction);}


if(asapEnqueued){
asapEnqueued = false;
var queue=asapCallbackQueue;
asapCallbackQueue = CallbackQueue.getPooled();
queue.notifyAll();
CallbackQueue.release(queue);}}};



flushBatchedUpdates = ReactPerf.measure(
'ReactUpdates',
'flushBatchedUpdates',
flushBatchedUpdates);






function enqueueUpdate(component){
ensureInjected();







if(!batchingStrategy.isBatchingUpdates){
batchingStrategy.batchedUpdates(enqueueUpdate,component);
return;}


dirtyComponents.push(component);}






function asap(callback,context){
invariant(
batchingStrategy.isBatchingUpdates,
'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 
'updates are not being batched.');

asapCallbackQueue.enqueue(callback,context);
asapEnqueued = true;}


var ReactUpdatesInjection={
injectReconcileTransaction:function(ReconcileTransaction){
invariant(
ReconcileTransaction,
'ReactUpdates: must provide a reconcile transaction class');

ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;},


injectBatchingStrategy:function(_batchingStrategy){
invariant(
_batchingStrategy,
'ReactUpdates: must provide a batching strategy');

invariant(
typeof _batchingStrategy.batchedUpdates === 'function',
'ReactUpdates: must provide a batchedUpdates() function');

invariant(
typeof _batchingStrategy.isBatchingUpdates === 'boolean',
'ReactUpdates: must provide an isBatchingUpdates boolean attribute');

batchingStrategy = _batchingStrategy;}};



var ReactUpdates={






ReactReconcileTransaction:null,

batchedUpdates:batchedUpdates,
enqueueUpdate:enqueueUpdate,
flushBatchedUpdates:flushBatchedUpdates,
injection:ReactUpdatesInjection,
asap:asap};


module.exports = ReactUpdates;
});
__d('CallbackQueue',["PooledClass","Object.assign","invariant"],function(global, require, module, exports) {  'use strict';












var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var invariant=require('invariant');












function CallbackQueue(){
this._callbacks = null;
this._contexts = null;}


assign(CallbackQueue.prototype,{








enqueue:function(callback,context){
this._callbacks = this._callbacks || [];
this._contexts = this._contexts || [];
this._callbacks.push(callback);
this._contexts.push(context);},








notifyAll:function(){
var callbacks=this._callbacks;
var contexts=this._contexts;
if(callbacks){
invariant(
callbacks.length === contexts.length,
'Mismatched list of contexts in callback queue');

this._callbacks = null;
this._contexts = null;
for(var i=0;i < callbacks.length;i++) {
callbacks[i].call(contexts[i]);}

callbacks.length = 0;
contexts.length = 0;}},








reset:function(){
this._callbacks = null;
this._contexts = null;},





destructor:function(){
this.reset();}});




PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;
});
__d('ReactReconciler',["ReactRef"],function(global, require, module, exports) {  'use strict';












var ReactRef=require('ReactRef');





function attachRefs(){
ReactRef.attachRefs(this,this._currentElement);}


var ReactReconciler={











mountComponent:function(internalInstance,rootID,transaction,context){
var markup=internalInstance.mountComponent(rootID,transaction,context);
if(internalInstance._currentElement.ref != null){
transaction.getReactMountReady().enqueue(attachRefs,internalInstance);}

return markup;},








unmountComponent:function(internalInstance){
ReactRef.detachRefs(internalInstance,internalInstance._currentElement);
internalInstance.unmountComponent();},











receiveComponent:function(
internalInstance,nextElement,transaction,context)
{
var prevElement=internalInstance._currentElement;
if(nextElement === prevElement && 
nextElement._owner != null)

{










return;}


var refsChanged=ReactRef.shouldUpdateRefs(
prevElement,
nextElement);


if(refsChanged){
ReactRef.detachRefs(internalInstance,prevElement);}


internalInstance.receiveComponent(nextElement,transaction,context);

if(refsChanged){
transaction.getReactMountReady().enqueue(attachRefs,internalInstance);}},










performUpdateIfNecessary:function(
internalInstance,
transaction)
{
internalInstance.performUpdateIfNecessary(transaction);}};




module.exports = ReactReconciler;
});
__d('ReactRef',["ReactOwner"],function(global, require, module, exports) {  'use strict';












var ReactOwner=require('ReactOwner');

var ReactRef={};

function attachRef(ref,component,owner){
if(typeof ref === 'function'){
ref(component.getPublicInstance());}else 
{

ReactOwner.addComponentAsRefTo(component,ref,owner);}}



function detachRef(ref,component,owner){
if(typeof ref === 'function'){
ref(null);}else 
{

ReactOwner.removeComponentAsRefFrom(component,ref,owner);}}



ReactRef.attachRefs = function(instance,element){
var ref=element.ref;
if(ref != null){
attachRef(ref,instance,element._owner);}};



ReactRef.shouldUpdateRefs = function(prevElement,nextElement){












return (
nextElement._owner !== prevElement._owner || 
nextElement.ref !== prevElement.ref);};



ReactRef.detachRefs = function(instance,element){
var ref=element.ref;
if(ref != null){
detachRef(ref,instance,element._owner);}};



module.exports = ReactRef;
});
__d('ReactOwner',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');































var ReactOwner={






isValidOwner:function(object){
return !!(
object && 
typeof object.attachRef === 'function' && 
typeof object.detachRef === 'function');},












addComponentAsRefTo:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to add a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');

owner.attachRef(ref,component);},











removeComponentAsRefFrom:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to remove a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');



if(owner.getPublicInstance().refs[ref] === component.getPublicInstance()){
owner.detachRef(ref);}}};





module.exports = ReactOwner;
});
__d('Transaction',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');






























































var Mixin={







reinitializeTransaction:function(){
this.transactionWrappers = this.getTransactionWrappers();
if(!this.wrapperInitData){
this.wrapperInitData = [];}else 
{
this.wrapperInitData.length = 0;}

this._isInTransaction = false;},


_isInTransaction:false,





getTransactionWrappers:null,

isInTransaction:function(){
return !!this._isInTransaction;},



















perform:function(method,scope,a,b,c,d,e,f){
invariant(
!this.isInTransaction(),
'Transaction.perform(...): Cannot initialize a transaction when there ' + 
'is already an outstanding transaction.');

var errorThrown;
var ret;
try{
this._isInTransaction = true;




errorThrown = true;
this.initializeAll(0);
ret = method.call(scope,a,b,c,d,e,f);
errorThrown = false;}finally 
{
try{
if(errorThrown){


try{
this.closeAll(0);}
catch(err) {}}else 

{


this.closeAll(0);}}finally 

{
this._isInTransaction = false;}}


return ret;},


initializeAll:function(startIndex){
var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i < transactionWrappers.length;i++) {
var wrapper=transactionWrappers[i];
try{




this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
this.wrapperInitData[i] = wrapper.initialize?
wrapper.initialize.call(this):
null;}finally 
{
if(this.wrapperInitData[i] === Transaction.OBSERVED_ERROR){



try{
this.initializeAll(i + 1);}
catch(err) {}}}}},












closeAll:function(startIndex){
invariant(
this.isInTransaction(),
'Transaction.closeAll(): Cannot close transaction when none are open.');

var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i < transactionWrappers.length;i++) {
var wrapper=transactionWrappers[i];
var initData=this.wrapperInitData[i];
var errorThrown;
try{




errorThrown = true;
if(initData !== Transaction.OBSERVED_ERROR && wrapper.close){
wrapper.close.call(this,initData);}

errorThrown = false;}finally 
{
if(errorThrown){



try{
this.closeAll(i + 1);}
catch(e) {}}}}




this.wrapperInitData.length = 0;}};



var Transaction={

Mixin:Mixin,




OBSERVED_ERROR:{}};



module.exports = Transaction;
});
__d('stringifySafe',[],function(global, require, module, exports) {  'use strict';
















function stringifySafe(arg){
var ret;
var type=typeof arg;
if(arg === undefined){
ret = 'undefined';}else 
if(arg === null){
ret = 'null';}else 
if(type === 'string'){
ret = '"' + arg + '"';}else 
if(type === 'function'){
try{
ret = arg.toString();}
catch(e) {
ret = '[function unknown]';}}else 

{


try{
ret = JSON.stringify(arg);}
catch(e) {
if(typeof arg.toString === 'function'){
try{
ret = arg.toString();}
catch(E) {}}}}



return ret || '["' + type + '" failed to stringify]';}


module.exports = stringifySafe;
});
__d('nativeModulePrefixNormalizer',[],function(global, require, module, exports) {  'use strict';













function nativeModulePrefixNormalizer(
modules)
{
Object.keys(modules).forEach(function(moduleName){
var strippedName=moduleName.replace(/^(RCT|RK)/,'');
if(modules['RCT' + strippedName] && modules['RK' + strippedName]){
throw new Error(
'Module cannot be registered as both RCT and RK: ' + moduleName);}


if(strippedName !== moduleName){
modules[strippedName] = modules[moduleName];
delete modules[moduleName];}});}




module.exports = nativeModulePrefixNormalizer;
});
__d('InspectorUtils',["ReactInstanceHandles","ReactInstanceMap","ReactNativeMount","ReactNativeTagHandles"],function(global, require, module, exports) {  'use strict';











var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function traverseOwnerTreeUp(hierarchy,instance){
if(instance){
hierarchy.unshift(instance);
traverseOwnerTreeUp(hierarchy,instance._currentElement._owner);}}



function findInstance(component,targetID){
if(targetID === findRootNodeID(component)){
return component;}

if(component._renderedComponent){
return findInstance(component._renderedComponent,targetID);}else 
{
for(var key in component._renderedChildren) {
var child=component._renderedChildren[key];
if(ReactInstanceHandles.isAncestorIDOf(findRootNodeID(child),targetID)){
var instance=findInstance(child,targetID);
if(instance){
return instance;}}}}}






function findRootNodeID(component){
var internalInstance=ReactInstanceMap.get(component);
return internalInstance?internalInstance._rootNodeID:component._rootNodeID;}


function findInstanceByNativeTag(rootTag,nativeTag){
var containerID=ReactNativeTagHandles.tagToRootNodeID[rootTag];
var rootInstance=ReactNativeMount._instancesByContainerID[containerID];
var targetID=ReactNativeTagHandles.tagToRootNodeID[nativeTag];
if(!targetID){
return undefined;}

return findInstance(rootInstance,targetID);}


function getOwnerHierarchy(instance){
var hierarchy=[];
traverseOwnerTreeUp(hierarchy,instance);
return hierarchy;}


module.exports = {findInstanceByNativeTag:findInstanceByNativeTag,getOwnerHierarchy:getOwnerHierarchy};
});
__d('ReactInstanceMap',[],function(global, require, module, exports) {  'use strict';




















var ReactInstanceMap={






remove:function(key){
key._reactInternalInstance = undefined;},


get:function(key){
return key._reactInternalInstance;},


has:function(key){
return key._reactInternalInstance !== undefined;},


set:function(key,value){
key._reactInternalInstance = value;}};




module.exports = ReactInstanceMap;
});
__d('ReactNativeMount',["NativeModules","ReactElement","ReactNativeTagHandles","ReactPerf","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","instantiateReactComponent","shouldUpdateReactComponent","findNodeHandle"],function(global, require, module, exports) {  'use strict';












var RCTUIManager=require('NativeModules').UIManager;

var ReactElement=require('ReactElement');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var emptyObject=require('emptyObject');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');

function instanceNumberToChildRootID(rootNodeID,instanceNumber){
return rootNodeID + '[' + instanceNumber + ']';}







var TopLevelWrapper=function(){};
TopLevelWrapper.prototype.render = function(){

return this.props;};










function mountComponentIntoNode(
componentInstance,
rootID,
container,
transaction){
var markup=ReactReconciler.mountComponent(
componentInstance,rootID,transaction,emptyObject);

componentInstance._renderedComponent._topLevelWrapper = componentInstance;
ReactNativeMount._mountImageIntoNode(markup,container);}









function batchedMountComponentIntoNode(
componentInstance,
rootID,
container){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode,
null,
componentInstance,
rootID,
container,
transaction);

ReactUpdates.ReactReconcileTransaction.release(transaction);}






var ReactNativeMount={
instanceCount:0,

_instancesByContainerID:{},


findNodeHandle:require('findNodeHandle'),
nativeTagToRootNodeID:function(nativeTag){
return ReactNativeTagHandles.tagToRootNodeID[nativeTag];},






renderComponent:function(
nextElement,
containerTag,
callback)
{
var nextWrappedElement=new ReactElement(
TopLevelWrapper,
null,
null,
null,
nextElement);


var topRootNodeID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
if(topRootNodeID){
var prevComponent=ReactNativeMount._instancesByContainerID[topRootNodeID];
if(prevComponent){
var prevWrappedElement=prevComponent._currentElement;
var prevElement=prevWrappedElement.props;
if(shouldUpdateReactComponent(prevElement,nextElement)){
ReactUpdateQueue.enqueueElementInternal(prevComponent,nextWrappedElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent,callback);}

return prevComponent;}else 
{
ReactNativeMount.unmountComponentAtNode(containerTag);}}}




if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return;}


var topRootNodeID=ReactNativeTagHandles.allocateRootNodeIDForTag(containerTag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
topRootNodeID,
containerTag);


var instance=instantiateReactComponent(nextWrappedElement);
ReactNativeMount._instancesByContainerID[topRootNodeID] = instance;

var childRootNodeID=instanceNumberToChildRootID(
topRootNodeID,
ReactNativeMount.instanceCount++);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode,
instance,
childRootNodeID,
topRootNodeID);

var component=instance.getPublicInstance();
if(callback){
callback.call(component);}

return component;},






_mountImageIntoNode:ReactPerf.measure(

'ReactComponentBrowserEnvironment',
'mountImageIntoNode',
function(mountImage,containerID){


ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
mountImage.rootNodeID,
mountImage.tag);

var addChildTags=[mountImage.tag];
var addAtIndices=[0];
RCTUIManager.manageChildren(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID),
null,
null,
addChildTags,
addAtIndices,
null);}),












unmountComponentAtNodeAndRemoveContainer:function(
containerTag)
{
ReactNativeMount.unmountComponentAtNode(containerTag);

RCTUIManager.removeRootView(containerTag);},







unmountComponentAtNode:function(containerTag){
if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return false;}


var containerID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
var instance=ReactNativeMount._instancesByContainerID[containerID];
if(!instance){
return false;}

ReactNativeMount.unmountComponentFromNode(instance,containerID);
delete ReactNativeMount._instancesByContainerID[containerID];
return true;},











unmountComponentFromNode:function(
instance,
containerID)
{

ReactReconciler.unmountComponent(instance);
var containerTag=
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID);
RCTUIManager.removeSubviewsFromContainerWithID(containerTag);},


getNode:function(rootNodeID){
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];},


getID:function(nativeTag){
return ReactNativeTagHandles.tagToRootNodeID[nativeTag];}};



ReactNativeMount.renderComponent = ReactPerf.measure(
'ReactMount',
'_renderNewRootComponent',
ReactNativeMount.renderComponent);


module.exports = ReactNativeMount;
});
__d('ReactNativeTagHandles',["invariant","warning"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');
var warning=require('warning');














var INITIAL_TAG_COUNT=1;
var NATIVE_TOP_ROOT_ID_SEPARATOR='{TOP_LEVEL}';
var ReactNativeTagHandles={
tagsStartAt:INITIAL_TAG_COUNT,
tagCount:INITIAL_TAG_COUNT,

allocateTag:function(){

while(this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount)) {
ReactNativeTagHandles.tagCount++;}

var tag=ReactNativeTagHandles.tagCount;
ReactNativeTagHandles.tagCount++;
return tag;},











associateRootNodeIDWithMountedNodeHandle:function(
rootNodeID,
tag)
{
warning(rootNodeID && tag,'Root node or tag is null when associating');
if(rootNodeID && tag){
ReactNativeTagHandles.tagToRootNodeID[tag] = rootNodeID;
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID] = tag;}},



allocateRootNodeIDForTag:function(tag){
invariant(
this.reactTagIsNativeTopRootID(tag),
'Expect a native root tag, instead got ',tag);

return '.r[' + tag + ']' + NATIVE_TOP_ROOT_ID_SEPARATOR;},


reactTagIsNativeTopRootID:function(reactTag){

return reactTag % 10 === 1;},


getNativeTopRootIDFromNodeID:function(nodeID){
if(!nodeID){
return null;}

var index=nodeID.indexOf(NATIVE_TOP_ROOT_ID_SEPARATOR);
if(index === -1){
return null;}

return nodeID.substr(0,index + NATIVE_TOP_ROOT_ID_SEPARATOR.length);},














mostRecentMountedNodeHandleForRootNodeID:function(
rootNodeID)
{
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];},


tagToRootNodeID:[],

rootNodeIDToTag:{}};


module.exports = ReactNativeTagHandles;
});
__d('ReactUpdateQueue',["ReactCurrentOwner","ReactElement","ReactInstanceMap","ReactUpdates","Object.assign","invariant","warning"],function(global, require, module, exports) {  'use strict';












var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');

function enqueueUpdate(internalInstance){
ReactUpdates.enqueueUpdate(internalInstance);}


function getInternalInstanceReadyForUpdate(publicInstance,callerName){
if(__DEV__){
warning(
ReactCurrentOwner.current == null,
'%s(...): Cannot update during an existing state transition ' + 
'(such as within `render`). Render methods should be a pure function ' + 
'of props and state.',
callerName);}



var internalInstance=ReactInstanceMap.get(publicInstance);
if(!internalInstance){
if(__DEV__){



warning(
!callerName,
'%s(...): Can only update a mounted or mounting component. ' + 
'This usually means you called %s() on an unmounted component. ' + 
'This is a no-op. Please check the code for the %s component.',
callerName,
callerName,
publicInstance.constructor.displayName);}


return null;}


return internalInstance;}






var ReactUpdateQueue={








isMounted:function(publicInstance){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing isMounted inside its render() function. ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


var internalInstance=ReactInstanceMap.get(publicInstance);
if(internalInstance){



return !!internalInstance._renderedComponent;}else 
{
return false;}},











enqueueCallback:function(publicInstance,callback){
invariant(
typeof callback === 'function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

var internalInstance=getInternalInstanceReadyForUpdate(publicInstance);






if(!internalInstance){
return null;}


if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}





enqueueUpdate(internalInstance);},


enqueueCallbackInternal:function(internalInstance,callback){
invariant(
typeof callback === 'function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}

enqueueUpdate(internalInstance);},















enqueueForceUpdate:function(publicInstance){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'forceUpdate');


if(!internalInstance){
return;}


internalInstance._pendingForceUpdate = true;

enqueueUpdate(internalInstance);},













enqueueReplaceState:function(publicInstance,completeState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceState');


if(!internalInstance){
return;}


internalInstance._pendingStateQueue = [completeState];
internalInstance._pendingReplaceState = true;

enqueueUpdate(internalInstance);},












enqueueSetState:function(publicInstance,partialState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setState');


if(!internalInstance){
return;}


var queue=
internalInstance._pendingStateQueue || (
internalInstance._pendingStateQueue = []);
queue.push(partialState);

enqueueUpdate(internalInstance);},









enqueueSetProps:function(publicInstance,partialProps){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setProps');

if(!internalInstance){
return;}

ReactUpdateQueue.enqueueSetPropsInternal(internalInstance,partialProps);},


enqueueSetPropsInternal:function(internalInstance,partialProps){
var topLevelWrapper=internalInstance._topLevelWrapper;
invariant(
topLevelWrapper,
'setProps(...): You called `setProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var wrapElement=topLevelWrapper._pendingElement || 
topLevelWrapper._currentElement;
var element=wrapElement.props;
var props=assign({},element.props,partialProps);
topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(
wrapElement,
ReactElement.cloneAndReplaceProps(element,props));


enqueueUpdate(topLevelWrapper);},









enqueueReplaceProps:function(publicInstance,props){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceProps');

if(!internalInstance){
return;}

ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance,props);},


enqueueReplacePropsInternal:function(internalInstance,props){
var topLevelWrapper=internalInstance._topLevelWrapper;
invariant(
topLevelWrapper,
'replaceProps(...): You called `replaceProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var wrapElement=topLevelWrapper._pendingElement || 
topLevelWrapper._currentElement;
var element=wrapElement.props;
topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(
wrapElement,
ReactElement.cloneAndReplaceProps(element,props));


enqueueUpdate(topLevelWrapper);},


enqueueElementInternal:function(internalInstance,newElement){
internalInstance._pendingElement = newElement;
enqueueUpdate(internalInstance);}};




module.exports = ReactUpdateQueue;
});
__d('instantiateReactComponent',["ReactCompositeComponent","ReactEmptyComponent","ReactNativeComponent","Object.assign","invariant","warning"],function(global, require, module, exports) {  'use strict';













var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactNativeComponent=require('ReactNativeComponent');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');


var ReactCompositeComponentWrapper=function(){};
assign(
ReactCompositeComponentWrapper.prototype,
ReactCompositeComponent.Mixin,
{
_instantiateReactComponent:instantiateReactComponent});



function getDeclarationErrorAddendum(owner){
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}









function isInternalComponentType(type){
return (
typeof type === 'function' && 
typeof type.prototype !== 'undefined' && 
typeof type.prototype.mountComponent === 'function' && 
typeof type.prototype.receiveComponent === 'function');}










function instantiateReactComponent(node){
var instance;

if(node === null || node === false){
node = ReactEmptyComponent.emptyElement;}


if(typeof node === 'object'){
var element=node;
invariant(
element && (typeof element.type === 'function' || 
typeof element.type === 'string'),
'Element type is invalid: expected a string (for built-in components) ' + 
'or a class/function (for composite components) but got: %s.%s',
element.type == null?element.type:typeof element.type,
getDeclarationErrorAddendum(element._owner));



if(typeof element.type === 'string'){
instance = ReactNativeComponent.createInternalComponent(element);}else 
if(isInternalComponentType(element.type)){



instance = new element.type(element);}else 
{
instance = new ReactCompositeComponentWrapper();}}else 

if(typeof node === 'string' || typeof node === 'number'){
instance = ReactNativeComponent.createInstanceForText(node);}else 
{
invariant(
false,
'Encountered invalid React node of type %s',
typeof node);}



if(__DEV__){
warning(
typeof instance.construct === 'function' && 
typeof instance.mountComponent === 'function' && 
typeof instance.receiveComponent === 'function' && 
typeof instance.unmountComponent === 'function',
'Only React Components can be mounted.');}




instance.construct(node);




instance._mountIndex = 0;
instance._mountImage = null;

if(__DEV__){
instance._isOwnerNecessary = false;
instance._warnedAboutRefsInRender = false;}




if(__DEV__){
if(Object.preventExtensions){
Object.preventExtensions(instance);}}



return instance;}


module.exports = instantiateReactComponent;
});
__d('ReactCompositeComponent',["ReactComponentEnvironment","ReactCurrentOwner","ReactElement","ReactInstanceMap","ReactPerf","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactReconciler","ReactUpdateQueue","Object.assign","emptyObject","invariant","shouldUpdateReactComponent","warning"],function(global, require, module, exports) {  'use strict';












var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactPerf=require('ReactPerf');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var warning=require('warning');

function getDeclarationErrorAddendum(component){
var owner=component._currentElement._owner || null;
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}



































var nextMountID=1;




var ReactCompositeComponentMixin={








construct:function(element){
this._currentElement = element;
this._rootNodeID = null;
this._instance = null;


this._pendingElement = null;
this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

this._renderedComponent = null;

this._context = null;
this._mountOrder = 0;
this._topLevelWrapper = null;


this._pendingCallbacks = null;},











mountComponent:function(rootID,transaction,context){
this._context = context;
this._mountOrder = nextMountID++;
this._rootNodeID = rootID;

var publicProps=this._processProps(this._currentElement.props);
var publicContext=this._processContext(context);

var Component=this._currentElement.type;


var inst=new Component(publicProps,publicContext,ReactUpdateQueue);

if(__DEV__){


warning(
inst.render != null,
'%s(...): No `render` method found on the returned component ' + 
'instance: you may have forgotten to define `render` in your ' + 
'component or you may have accidentally tried to render an element ' + 
'whose type is a function that isn\'t a React component.',
Component.displayName || Component.name || 'Component');}





inst.props = publicProps;
inst.context = publicContext;
inst.refs = emptyObject;
inst.updater = ReactUpdateQueue;

this._instance = inst;


ReactInstanceMap.set(inst,this);

if(__DEV__){



warning(
!inst.getInitialState || 
inst.getInitialState.isReactClassApproved,
'getInitialState was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Did you mean to define a state property instead?',
this.getName() || 'a component');

warning(
!inst.getDefaultProps || 
inst.getDefaultProps.isReactClassApproved,
'getDefaultProps was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Use a static property to define defaultProps instead.',
this.getName() || 'a component');

warning(
!inst.propTypes,
'propTypes was defined as an instance property on %s. Use a static ' + 
'property to define propTypes instead.',
this.getName() || 'a component');

warning(
!inst.contextTypes,
'contextTypes was defined as an instance property on %s. Use a ' + 
'static property to define contextTypes instead.',
this.getName() || 'a component');

warning(
typeof inst.componentShouldUpdate !== 'function',
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.',
this.getName() || 'A component');

warning(
typeof inst.componentDidUnmount !== 'function',
'%s has a method called ' + 
'componentDidUnmount(). But there is no such lifecycle method. ' + 
'Did you mean componentWillUnmount()?',
this.getName() || 'A component');

warning(
typeof inst.componentWillRecieveProps !== 'function',
'%s has a method called ' + 
'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
this.getName() || 'A component');}



var initialState=inst.state;
if(initialState === undefined){
inst.state = initialState = null;}

invariant(
typeof initialState === 'object' && !Array.isArray(initialState),
'%s.state: must be set to an object or null',
this.getName() || 'ReactCompositeComponent');


this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

if(inst.componentWillMount){
inst.componentWillMount();


if(this._pendingStateQueue){
inst.state = this._processPendingState(inst.props,inst.context);}}



var renderedElement=this._renderValidatedComponent();

this._renderedComponent = this._instantiateReactComponent(
renderedElement);


var markup=ReactReconciler.mountComponent(
this._renderedComponent,
rootID,
transaction,
this._processChildContext(context));

if(inst.componentDidMount){
transaction.getReactMountReady().enqueue(inst.componentDidMount,inst);}


return markup;},








unmountComponent:function(){
var inst=this._instance;

if(inst.componentWillUnmount){
inst.componentWillUnmount();}


ReactReconciler.unmountComponent(this._renderedComponent);
this._renderedComponent = null;




this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;
this._pendingCallbacks = null;
this._pendingElement = null;



this._context = null;
this._rootNodeID = null;
this._topLevelWrapper = null;




ReactInstanceMap.remove(inst);},
















_maskContext:function(context){
var maskedContext=null;
var Component=this._currentElement.type;
var contextTypes=Component.contextTypes;
if(!contextTypes){
return emptyObject;}

maskedContext = {};
for(var contextName in contextTypes) {
maskedContext[contextName] = context[contextName];}

return maskedContext;},










_processContext:function(context){
var maskedContext=this._maskContext(context);
if(__DEV__){
var Component=this._currentElement.type;
if(Component.contextTypes){
this._checkPropTypes(
Component.contextTypes,
maskedContext,
ReactPropTypeLocations.context);}}



return maskedContext;},







_processChildContext:function(currentContext){
var Component=this._currentElement.type;
var inst=this._instance;
var childContext=inst.getChildContext && inst.getChildContext();
if(childContext){
invariant(
typeof Component.childContextTypes === 'object',
'%s.getChildContext(): childContextTypes must be defined in order to ' + 
'use getChildContext().',
this.getName() || 'ReactCompositeComponent');

if(__DEV__){
this._checkPropTypes(
Component.childContextTypes,
childContext,
ReactPropTypeLocations.childContext);}


for(var name in childContext) {
invariant(
name in Component.childContextTypes,
'%s.getChildContext(): key "%s" is not defined in childContextTypes.',
this.getName() || 'ReactCompositeComponent',
name);}


return assign({},currentContext,childContext);}

return currentContext;},











_processProps:function(newProps){
if(__DEV__){
var Component=this._currentElement.type;
if(Component.propTypes){
this._checkPropTypes(
Component.propTypes,
newProps,
ReactPropTypeLocations.prop);}}



return newProps;},










_checkPropTypes:function(propTypes,props,location){


var componentName=this.getName();
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;
try{


invariant(
typeof propTypes[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually ' + 
'from React.PropTypes.',
componentName || 'React class',
ReactPropTypeLocationNames[location],
propName);

error = propTypes[propName](props,propName,componentName,location);}
catch(ex) {
error = ex;}

if(error instanceof Error){



var addendum=getDeclarationErrorAddendum(this);

if(location === ReactPropTypeLocations.prop){

warning(
false,
'Failed Composite propType: %s%s',
error.message,
addendum);}else 

{
warning(
false,
'Failed Context Types: %s%s',
error.message,
addendum);}}}}},







receiveComponent:function(nextElement,transaction,nextContext){
var prevElement=this._currentElement;
var prevContext=this._context;

this._pendingElement = null;

this.updateComponent(
transaction,
prevElement,
nextElement,
prevContext,
nextContext);},










performUpdateIfNecessary:function(transaction){
if(this._pendingElement != null){
ReactReconciler.receiveComponent(
this,
this._pendingElement || this._currentElement,
transaction,
this._context);}



if(this._pendingStateQueue !== null || this._pendingForceUpdate){
this.updateComponent(
transaction,
this._currentElement,
this._currentElement,
this._context,
this._context);}},



















updateComponent:function(
transaction,
prevParentElement,
nextParentElement,
prevUnmaskedContext,
nextUnmaskedContext)
{
var inst=this._instance;

var nextContext=this._context === nextUnmaskedContext?
inst.context:
this._processContext(nextUnmaskedContext);
var nextProps;


if(prevParentElement === nextParentElement){


nextProps = nextParentElement.props;}else 
{
nextProps = this._processProps(nextParentElement.props);




if(inst.componentWillReceiveProps){
inst.componentWillReceiveProps(nextProps,nextContext);}}



var nextState=this._processPendingState(nextProps,nextContext);

var shouldUpdate=
this._pendingForceUpdate || 
!inst.shouldComponentUpdate || 
inst.shouldComponentUpdate(nextProps,nextState,nextContext);

if(__DEV__){
warning(
typeof shouldUpdate !== 'undefined',
'%s.shouldComponentUpdate(): Returned undefined instead of a ' + 
'boolean value. Make sure to return true or false.',
this.getName() || 'ReactCompositeComponent');}



if(shouldUpdate){
this._pendingForceUpdate = false;

this._performComponentUpdate(
nextParentElement,
nextProps,
nextState,
nextContext,
transaction,
nextUnmaskedContext);}else 

{


this._currentElement = nextParentElement;
this._context = nextUnmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;}},



_processPendingState:function(props,context){
var inst=this._instance;
var queue=this._pendingStateQueue;
var replace=this._pendingReplaceState;
this._pendingReplaceState = false;
this._pendingStateQueue = null;

if(!queue){
return inst.state;}


if(replace && queue.length === 1){
return queue[0];}


var nextState=assign({},replace?queue[0]:inst.state);
for(var i=replace?1:0;i < queue.length;i++) {
var partial=queue[i];
assign(
nextState,
typeof partial === 'function'?
partial.call(inst,nextState,props,context):
partial);}



return nextState;},














_performComponentUpdate:function(
nextElement,
nextProps,
nextState,
nextContext,
transaction,
unmaskedContext)
{
var inst=this._instance;

var hasComponentDidUpdate=Boolean(inst.componentDidUpdate);
var prevProps;
var prevState;
var prevContext;
if(hasComponentDidUpdate){
prevProps = inst.props;
prevState = inst.state;
prevContext = inst.context;}


if(inst.componentWillUpdate){
inst.componentWillUpdate(nextProps,nextState,nextContext);}


this._currentElement = nextElement;
this._context = unmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;

this._updateRenderedComponent(transaction,unmaskedContext);

if(hasComponentDidUpdate){
transaction.getReactMountReady().enqueue(
inst.componentDidUpdate.bind(inst,prevProps,prevState,prevContext),
inst);}},










_updateRenderedComponent:function(transaction,context){
var prevComponentInstance=this._renderedComponent;
var prevRenderedElement=prevComponentInstance._currentElement;
var nextRenderedElement=this._renderValidatedComponent();
if(shouldUpdateReactComponent(prevRenderedElement,nextRenderedElement)){
ReactReconciler.receiveComponent(
prevComponentInstance,
nextRenderedElement,
transaction,
this._processChildContext(context));}else 

{

var thisID=this._rootNodeID;
var prevComponentID=prevComponentInstance._rootNodeID;
ReactReconciler.unmountComponent(prevComponentInstance);

this._renderedComponent = this._instantiateReactComponent(
nextRenderedElement);

var nextMarkup=ReactReconciler.mountComponent(
this._renderedComponent,
thisID,
transaction,
this._processChildContext(context));

this._replaceNodeWithMarkupByID(prevComponentID,nextMarkup);}},






_replaceNodeWithMarkupByID:function(prevComponentID,nextMarkup){
ReactComponentEnvironment.replaceNodeWithMarkupByID(
prevComponentID,
nextMarkup);},






_renderValidatedComponentWithoutOwnerOrContext:function(){
var inst=this._instance;
var renderedComponent=inst.render();
if(__DEV__){

if(typeof renderedComponent === 'undefined' && 
inst.render._isMockFunction){


renderedComponent = null;}}



return renderedComponent;},





_renderValidatedComponent:function(){
var renderedComponent;
ReactCurrentOwner.current = this;
try{
renderedComponent = 
this._renderValidatedComponentWithoutOwnerOrContext();}finally 
{
ReactCurrentOwner.current = null;}

invariant(

renderedComponent === null || renderedComponent === false || 
ReactElement.isValidElement(renderedComponent),
'%s.render(): A valid ReactComponent must be returned. You may have ' + 
'returned undefined, an array or some other invalid object.',
this.getName() || 'ReactCompositeComponent');

return renderedComponent;},










attachRef:function(ref,component){
var inst=this.getPublicInstance();
var refs=inst.refs === emptyObject?inst.refs = {}:inst.refs;
refs[ref] = component.getPublicInstance();},









detachRef:function(ref){
var refs=this.getPublicInstance().refs;
delete refs[ref];},








getName:function(){
var type=this._currentElement.type;
var constructor=this._instance && this._instance.constructor;
return (
type.displayName || constructor && constructor.displayName || 
type.name || constructor && constructor.name || 
null);},











getPublicInstance:function(){
return this._instance;},



_instantiateReactComponent:null};



ReactPerf.measureMethods(
ReactCompositeComponentMixin,
'ReactCompositeComponent',
{
mountComponent:'mountComponent',
updateComponent:'updateComponent',
_renderValidatedComponent:'_renderValidatedComponent'});



var ReactCompositeComponent={

Mixin:ReactCompositeComponentMixin};



module.exports = ReactCompositeComponent;
});
__d('ReactComponentEnvironment',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');

var injected=false;

var ReactComponentEnvironment={






unmountIDFromEnvironment:null,





replaceNodeWithMarkupByID:null,





processChildrenUpdates:null,

injection:{
injectEnvironment:function(environment){
invariant(
!injected,
'ReactCompositeComponent: injectEnvironment() can only be called once.');

ReactComponentEnvironment.unmountIDFromEnvironment = 
environment.unmountIDFromEnvironment;
ReactComponentEnvironment.replaceNodeWithMarkupByID = 
environment.replaceNodeWithMarkupByID;
ReactComponentEnvironment.processChildrenUpdates = 
environment.processChildrenUpdates;
injected = true;}}};





module.exports = ReactComponentEnvironment;
});
__d('shouldUpdateReactComponent',[],function(global, require, module, exports) {  'use strict';
























function shouldUpdateReactComponent(prevElement,nextElement){
if(prevElement != null && nextElement != null){
var prevType=typeof prevElement;
var nextType=typeof nextElement;
if(prevType === 'string' || prevType === 'number'){
return nextType === 'string' || nextType === 'number';}else 
{
return (
nextType === 'object' && 
prevElement.type === nextElement.type && 
prevElement.key === nextElement.key);}}



return false;}


module.exports = shouldUpdateReactComponent;
});
__d('ReactEmptyComponent',["ReactElement","ReactInstanceMap","invariant"],function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');

var invariant=require('invariant');

var component;


var nullComponentIDsRegistry={};

var ReactEmptyComponentInjection={
injectEmptyComponent:function(emptyComponent){
component = ReactElement.createFactory(emptyComponent);}};



var ReactEmptyComponentType=function(){};
ReactEmptyComponentType.prototype.componentDidMount = function(){
var internalInstance=ReactInstanceMap.get(this);




if(!internalInstance){
return;}

registerNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.componentWillUnmount = function(){
var internalInstance=ReactInstanceMap.get(this);

if(!internalInstance){
return;}

deregisterNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.render = function(){
invariant(
component,
'Trying to return null from a render, but no null placeholder component ' + 
'was injected.');

return component();};


var emptyElement=ReactElement.createElement(ReactEmptyComponentType);





function registerNullComponentID(id){
nullComponentIDsRegistry[id] = true;}






function deregisterNullComponentID(id){
delete nullComponentIDsRegistry[id];}






function isNullComponentID(id){
return !!nullComponentIDsRegistry[id];}


var ReactEmptyComponent={
emptyElement:emptyElement,
injection:ReactEmptyComponentInjection,
isNullComponentID:isNullComponentID};


module.exports = ReactEmptyComponent;
});
__d('ReactNativeComponent',["Object.assign","invariant"],function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var invariant=require('invariant');

var autoGenerateWrapperClass=null;
var genericComponentClass=null;

var tagToComponentClass={};
var textComponentClass=null;

var ReactNativeComponentInjection={


injectGenericComponentClass:function(componentClass){
genericComponentClass = componentClass;},



injectTextComponentClass:function(componentClass){
textComponentClass = componentClass;},



injectComponentClasses:function(componentClasses){
assign(tagToComponentClass,componentClasses);}};









function getComponentClassForElement(element){
if(typeof element.type === 'function'){
return element.type;}

var tag=element.type;
var componentClass=tagToComponentClass[tag];
if(componentClass == null){
tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);}

return componentClass;}








function createInternalComponent(element){
invariant(
genericComponentClass,
'There is no registered component for the tag %s',
element.type);

return new genericComponentClass(element.type,element.props);}






function createInstanceForText(text){
return new textComponentClass(text);}






function isTextComponent(component){
return component instanceof textComponentClass;}


var ReactNativeComponent={
getComponentClassForElement:getComponentClassForElement,
createInternalComponent:createInternalComponent,
createInstanceForText:createInstanceForText,
isTextComponent:isTextComponent,
injection:ReactNativeComponentInjection};


module.exports = ReactNativeComponent;
});
__d('findNodeHandle',["ReactCurrentOwner","ReactInstanceMap","ReactNativeTagHandles","invariant","warning"],function(global, require, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');
var warning=require('warning');































function findNodeHandle(componentOrHandle){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing findNodeHandle inside its render(). ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


if(componentOrHandle == null){
return null;}

if(typeof componentOrHandle === 'number'){

return componentOrHandle;}


var component=componentOrHandle;



var internalInstance=ReactInstanceMap.get(component);
if(internalInstance){
return ReactNativeTagHandles.rootNodeIDToTag[internalInstance._rootNodeID];}else 
{
var rootNodeID=component._rootNodeID;
if(rootNodeID){
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];}else 
{
invariant(


typeof component === 'object' && 
'_rootNodeID' in component || 


component.render != null && 
typeof component.render === 'function',

'findNodeHandle(...): Argument is not a component ' + 
'(type: %s, keys: %s)',
typeof component,
Object.keys(component));

invariant(
false,
'findNodeHandle(...): Unable to find node handle for unmounted ' + 
'component.');}}}





module.exports = findNodeHandle;
});
__d('RCTDeviceEventEmitter',["EventEmitter"],function(global, require, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTDeviceEventEmitter=new EventEmitter();

module.exports = RCTDeviceEventEmitter;
});
__d('EventEmitter',["EmitterSubscription","ErrorUtils","EventSubscriptionVendor","emptyFunction","invariant"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var EmitterSubscription=require('EmitterSubscription');
var ErrorUtils=require('ErrorUtils');
var EventSubscriptionVendor=require('EventSubscriptionVendor');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 














EventEmitter=(function(){



function EventEmitter(){_classCallCheck(this,EventEmitter);
this._subscriber = new EventSubscriptionVendor();}_createClass(EventEmitter,[{key:'addListener',value:
















function addListener(
eventType,listener,context){
return this._subscriber.addSubscription(
eventType,
new EmitterSubscription(this._subscriber,listener,context));}},{key:'once',value:












function once(eventType,listener,context){
var emitter=this;
return this.addListener(eventType,function(){
emitter.removeCurrentListener();
listener.apply(context,arguments);});}},{key:'removeAllListeners',value:










function removeAllListeners(eventType){
this._subscriber.removeAllSubscriptions(eventType);}},{key:'removeCurrentListener',value:























function removeCurrentListener(){
invariant(
!!this._currentSubscription,
'Not in an emitting cycle; there is no current subscription');

this._subscriber.removeSubscription(this._currentSubscription);}},{key:'listeners',value:









function listeners(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
return subscriptions?
subscriptions.filter(emptyFunction.thatReturnsTrue).map(
function(subscription){
return subscription.listener;}):

[];}},{key:'emit',value:
















function emit(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
if(subscriptions){
var keys=Object.keys(subscriptions);
for(var ii=0;ii < keys.length;ii++) {
var key=keys[ii];
var subscription=subscriptions[key];


if(subscription){
this._currentSubscription = subscription;

ErrorUtils.applyWithGuard(
subscription.listener,
subscription.context,
Array.prototype.slice.call(arguments,1),
null,
'EventEmitter:' + eventType);}}



this._currentSubscription = null;}}}]);return EventEmitter;})();




module.exports = EventEmitter;
});
__d('EmitterSubscription',["EventSubscription"],function(global, require, module, exports) {  'use strict';var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}


















var EventSubscription=require('EventSubscription');var 




EmitterSubscription=(function(_EventSubscription){_inherits(EmitterSubscription,_EventSubscription);









function EmitterSubscription(subscriber,listener,context){_classCallCheck(this,EmitterSubscription);
_get(Object.getPrototypeOf(EmitterSubscription.prototype),'constructor',this).call(this,subscriber);
this.listener = listener;
this.context = context;}return EmitterSubscription;})(EventSubscription);



module.exports = EmitterSubscription;
});
__d('EventSubscription',[],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






















EventSubscription=(function(){





function EventSubscription(subscriber){_classCallCheck(this,EventSubscription);
this.subscriber = subscriber;}_createClass(EventSubscription,[{key:'remove',value:





function remove(){
this.subscriber.removeSubscription(this);}}]);return EventSubscription;})();



module.exports = EventSubscription;
});
__d('EventSubscriptionVendor',["invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 





EventSubscriptionVendor=(function(){

function EventSubscriptionVendor(){_classCallCheck(this,EventSubscriptionVendor);
this._subscriptionsForType = {};
this._currentSubscription = null;}_createClass(EventSubscriptionVendor,[{key:'addSubscription',value:








function addSubscription(
eventType,subscription){
invariant(
subscription.subscriber === this,
'The subscriber of the subscription is incorrectly set.');
if(!this._subscriptionsForType[eventType]){
this._subscriptionsForType[eventType] = [];}

var key=this._subscriptionsForType[eventType].length;
this._subscriptionsForType[eventType].push(subscription);
subscription.eventType = eventType;
subscription.key = key;
return subscription;}},{key:'removeAllSubscriptions',value:








function removeAllSubscriptions(eventType){
if(eventType === undefined){
this._subscriptionsForType = {};}else 
{
delete this._subscriptionsForType[eventType];}}},{key:'removeSubscription',value:









function removeSubscription(subscription){
var eventType=subscription.eventType;
var key=subscription.key;

var subscriptionsForType=this._subscriptionsForType[eventType];
if(subscriptionsForType){
delete subscriptionsForType[key];}}},{key:'getSubscriptionsForType',value:















function getSubscriptionsForType(eventType){
return this._subscriptionsForType[eventType];}}]);return EventSubscriptionVendor;})();



module.exports = EventSubscriptionVendor;
});
__d('PerformanceLogger',["performanceNow"],function(global, require, module, exports) {  'use strict';












var performanceNow=require('performanceNow');

var timespans={};





var PerformanceLogger={
addTimespan:function(key,lengthInMs,description){
if(timespans[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to add a timespan that already exists ',
key);}


return;}


timespans[key] = {
description:description,
totalTime:lengthInMs};},



startTimespan:function(key,description){
if(timespans[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to start a timespan that already exists ',
key);}


return;}


timespans[key] = {
description:description,
startTime:performanceNow()};},



stopTimespan:function(key){
if(!timespans[key] || !timespans[key].startTime){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to end a timespan that has not started ',
key);}


return;}


timespans[key].endTime = performanceNow();
timespans[key].totalTime = 
timespans[key].endTime - timespans[key].startTime;},


clearTimespans:function(){
timespans = {};},


getTimespans:function(){
return timespans;},


hasTimespan:function(key){
return !!timespans[key];},


logTimespans:function(){
for(var key in timespans) {
if(timespans[key].totalTime){
console.log(key + ': ' + timespans[key].totalTime + 'ms');}}},




addTimespans:function(newTimespans,labels){
for(var i=0,l=newTimespans.length;i < l;i += 2) {
var label=labels[i / 2];
PerformanceLogger.addTimespan(
label,
newTimespans[i + 1] - newTimespans[i],
label);}}};





module.exports = PerformanceLogger;
});
__d('regenerator/runtime.js',[],function(global, require, module, exports) {  !









(function(global){
"use strict";

var hasOwn=Object.prototype.hasOwnProperty;
var undefined;
var iteratorSymbol=
typeof Symbol === "function" && Symbol.iterator || "@@iterator";

var inModule=typeof module === "object";
var runtime=global.regeneratorRuntime;
if(runtime){
if(inModule){


module.exports = runtime;}



return;}




runtime = global.regeneratorRuntime = inModule?module.exports:{};

function wrap(innerFn,outerFn,self,tryLocsList){

var generator=Object.create((outerFn || Generator).prototype);

generator._invoke = makeInvokeMethod(
innerFn,self || null,
new Context(tryLocsList || []));


return generator;}

runtime.wrap = wrap;











function tryCatch(fn,obj,arg){
try{
return {type:"normal",arg:fn.call(obj,arg)};}
catch(err) {
return {type:"throw",arg:err};}}



var GenStateSuspendedStart="suspendedStart";
var GenStateSuspendedYield="suspendedYield";
var GenStateExecuting="executing";
var GenStateCompleted="completed";



var ContinueSentinel={};





function Generator(){}
function GeneratorFunction(){}
function GeneratorFunctionPrototype(){}

var Gp=GeneratorFunctionPrototype.prototype = Generator.prototype;
GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
GeneratorFunctionPrototype.constructor = GeneratorFunction;
GeneratorFunction.displayName = "GeneratorFunction";



function defineIteratorMethods(prototype){
["next","throw","return"].forEach(function(method){
prototype[method] = function(arg){
return this._invoke(method,arg);};});}




runtime.isGeneratorFunction = function(genFun){
var ctor=typeof genFun === "function" && genFun.constructor;
return ctor?
ctor === GeneratorFunction || 


(ctor.displayName || ctor.name) === "GeneratorFunction":
false;};


runtime.mark = function(genFun){
genFun.__proto__ = GeneratorFunctionPrototype;
genFun.prototype = Object.create(Gp);
return genFun;};







runtime.awrap = function(arg){
return new AwaitArgument(arg);};


function AwaitArgument(arg){
this.arg = arg;}


function AsyncIterator(generator){


function invoke(method,arg){
var result=generator[method](arg);
var value=result.value;
return value instanceof AwaitArgument?
Promise.resolve(value.arg).then(invokeNext,invokeThrow):
Promise.resolve(value).then(function(unwrapped){















result.value = unwrapped;
return result;});}



if(typeof process === "object" && process.domain){
invoke = process.domain.bind(invoke);}


var invokeNext=invoke.bind(generator,"next");
var invokeThrow=invoke.bind(generator,"throw");
var invokeReturn=invoke.bind(generator,"return");
var previousPromise;

function enqueue(method,arg){
var enqueueResult=












previousPromise?previousPromise.then(function(){
return invoke(method,arg);}):
new Promise(function(resolve){
resolve(invoke(method,arg));});




previousPromise = enqueueResult["catch"](function(ignored){});

return enqueueResult;}




this._invoke = enqueue;}


defineIteratorMethods(AsyncIterator.prototype);




runtime.async = function(innerFn,outerFn,self,tryLocsList){
var iter=new AsyncIterator(
wrap(innerFn,outerFn,self,tryLocsList));


return runtime.isGeneratorFunction(outerFn)?
iter:
iter.next().then(function(result){
return result.done?result.value:iter.next();});};



function makeInvokeMethod(innerFn,self,context){
var state=GenStateSuspendedStart;

return function invoke(method,arg){
if(state === GenStateExecuting){
throw new Error("Generator is already running");}


if(state === GenStateCompleted){
if(method === "throw"){
throw arg;}




return doneResult();}


while(true) {
var delegate=context.delegate;
if(delegate){
if(method === "return" || 
method === "throw" && delegate.iterator[method] === undefined){


context.delegate = null;



var returnMethod=delegate.iterator["return"];
if(returnMethod){
var record=tryCatch(returnMethod,delegate.iterator,arg);
if(record.type === "throw"){


method = "throw";
arg = record.arg;
continue;}}



if(method === "return"){


continue;}}



var record=tryCatch(
delegate.iterator[method],
delegate.iterator,
arg);


if(record.type === "throw"){
context.delegate = null;



method = "throw";
arg = record.arg;
continue;}





method = "next";
arg = undefined;

var info=record.arg;
if(info.done){
context[delegate.resultName] = info.value;
context.next = delegate.nextLoc;}else 
{
state = GenStateSuspendedYield;
return info;}


context.delegate = null;}


if(method === "next"){
if(state === GenStateSuspendedYield){
context.sent = arg;}else 
{
context.sent = undefined;}}else 


if(method === "throw"){
if(state === GenStateSuspendedStart){
state = GenStateCompleted;
throw arg;}


if(context.dispatchException(arg)){


method = "next";
arg = undefined;}}else 


if(method === "return"){
context.abrupt("return",arg);}


state = GenStateExecuting;

var record=tryCatch(innerFn,self,context);
if(record.type === "normal"){


state = context.done?
GenStateCompleted:
GenStateSuspendedYield;

var info={
value:record.arg,
done:context.done};


if(record.arg === ContinueSentinel){
if(context.delegate && method === "next"){


arg = undefined;}}else 

{
return info;}}else 


if(record.type === "throw"){
state = GenStateCompleted;


method = "throw";
arg = record.arg;}}};}







defineIteratorMethods(Gp);

Gp[iteratorSymbol] = function(){
return this;};


Gp.toString = function(){
return "[object Generator]";};


function pushTryEntry(locs){
var entry={tryLoc:locs[0]};

if(1 in locs){
entry.catchLoc = locs[1];}


if(2 in locs){
entry.finallyLoc = locs[2];
entry.afterLoc = locs[3];}


this.tryEntries.push(entry);}


function resetTryEntry(entry){
var record=entry.completion || {};
record.type = "normal";
delete record.arg;
entry.completion = record;}


function Context(tryLocsList){



this.tryEntries = [{tryLoc:"root"}];
tryLocsList.forEach(pushTryEntry,this);
this.reset(true);}


runtime.keys = function(object){
var keys=[];
for(var key in object) {
keys.push(key);}

keys.reverse();



return function next(){
while(keys.length) {
var key=keys.pop();
if(key in object){
next.value = key;
next.done = false;
return next;}}






next.done = true;
return next;};};



function values(iterable){
if(iterable){
var iteratorMethod=iterable[iteratorSymbol];
if(iteratorMethod){
return iteratorMethod.call(iterable);}


if(typeof iterable.next === "function"){
return iterable;}


if(!isNaN(iterable.length)){
var i=-1,next=function next(){
while(++i < iterable.length) {
if(hasOwn.call(iterable,i)){
next.value = iterable[i];
next.done = false;
return next;}}



next.value = undefined;
next.done = true;

return next;};


return next.next = next;}}




return {next:doneResult};}

runtime.values = values;

function doneResult(){
return {value:undefined,done:true};}


Context.prototype = {
constructor:Context,

reset:function(skipTempReset){
this.prev = 0;
this.next = 0;
this.sent = undefined;
this.done = false;
this.delegate = null;

this.tryEntries.forEach(resetTryEntry);

if(!skipTempReset){
for(var name in this) {

if(name.charAt(0) === "t" && 
hasOwn.call(this,name) && 
!isNaN(+name.slice(1))){
this[name] = undefined;}}}},





stop:function(){
this.done = true;

var rootEntry=this.tryEntries[0];
var rootRecord=rootEntry.completion;
if(rootRecord.type === "throw"){
throw rootRecord.arg;}


return this.rval;},


dispatchException:function(exception){
if(this.done){
throw exception;}


var context=this;
function handle(loc,caught){
record.type = "throw";
record.arg = exception;
context.next = loc;
return !!caught;}


for(var i=this.tryEntries.length - 1;i >= 0;--i) {
var entry=this.tryEntries[i];
var record=entry.completion;

if(entry.tryLoc === "root"){



return handle("end");}


if(entry.tryLoc <= this.prev){
var hasCatch=hasOwn.call(entry,"catchLoc");
var hasFinally=hasOwn.call(entry,"finallyLoc");

if(hasCatch && hasFinally){
if(this.prev < entry.catchLoc){
return handle(entry.catchLoc,true);}else 
if(this.prev < entry.finallyLoc){
return handle(entry.finallyLoc);}}else 


if(hasCatch){
if(this.prev < entry.catchLoc){
return handle(entry.catchLoc,true);}}else 


if(hasFinally){
if(this.prev < entry.finallyLoc){
return handle(entry.finallyLoc);}}else 


{
throw new Error("try statement without catch or finally");}}}},





abrupt:function(type,arg){
for(var i=this.tryEntries.length - 1;i >= 0;--i) {
var entry=this.tryEntries[i];
if(entry.tryLoc <= this.prev && 
hasOwn.call(entry,"finallyLoc") && 
this.prev < entry.finallyLoc){
var finallyEntry=entry;
break;}}



if(finallyEntry && (
type === "break" || 
type === "continue") && 
finallyEntry.tryLoc <= arg && 
arg <= finallyEntry.finallyLoc){


finallyEntry = null;}


var record=finallyEntry?finallyEntry.completion:{};
record.type = type;
record.arg = arg;

if(finallyEntry){
this.next = finallyEntry.finallyLoc;}else 
{
this.complete(record);}


return ContinueSentinel;},


complete:function(record,afterLoc){
if(record.type === "throw"){
throw record.arg;}


if(record.type === "break" || 
record.type === "continue"){
this.next = record.arg;}else 
if(record.type === "return"){
this.rval = record.arg;
this.next = "end";}else 
if(record.type === "normal" && afterLoc){
this.next = afterLoc;}},



finish:function(finallyLoc){
for(var i=this.tryEntries.length - 1;i >= 0;--i) {
var entry=this.tryEntries[i];
if(entry.finallyLoc === finallyLoc){
this.complete(entry.completion,entry.afterLoc);
resetTryEntry(entry);
return ContinueSentinel;}}},




"catch":function(tryLoc){
for(var i=this.tryEntries.length - 1;i >= 0;--i) {
var entry=this.tryEntries[i];
if(entry.tryLoc === tryLoc){
var record=entry.completion;
if(record.type === "throw"){
var thrown=record.arg;
resetTryEntry(entry);}

return thrown;}}





throw new Error("illegal catch attempt");},


delegateYield:function(iterable,resultName,nextLoc){
this.delegate = {
iterator:values(iterable),
resultName:resultName,
nextLoc:nextLoc};


return ContinueSentinel;}};})(






typeof global === "object"?global:
typeof window === "object"?window:
typeof self === "object"?self:this);
});
__d('ExceptionsManager',["NativeModules","loadSourceMap","parseErrorStack","stringifySafe"],function(global, require, module, exports) {  'use strict';












var RCTExceptionsManager=require('NativeModules').ExceptionsManager;

var loadSourceMap=require('loadSourceMap');
var parseErrorStack=require('parseErrorStack');
var stringifySafe=require('stringifySafe');

var sourceMapPromise;







var exceptionID=0;

function reportException(e,isFatal,stack){
var currentExceptionID=++exceptionID;
if(RCTExceptionsManager){
if(!stack){
stack = parseErrorStack(e);}

if(isFatal){
RCTExceptionsManager.reportFatalException(e.message,stack,currentExceptionID);}else 
{
RCTExceptionsManager.reportSoftException(e.message,stack);}

if(__DEV__){
(sourceMapPromise = sourceMapPromise || loadSourceMap()).
then(function(map){
var prettyStack=parseErrorStack(e,map);
RCTExceptionsManager.updateExceptionMessage(e.message,prettyStack,currentExceptionID);}).

catch(function(error){


console.warn('Unable to load source map: ' + error.message);});}}}





function handleException(e,isFatal){
var stack=parseErrorStack(e);
var msg=
'Error: ' + e.message + 
'\n stack: \n' + stackToString(stack) + 
'\n URL: ' + e.sourceURL + 
'\n line: ' + e.line + 
'\n message: ' + e.message;
if(console.errorOriginal){
console.errorOriginal(msg);}else 
{
console.error(msg);}

reportException(e,isFatal,stack);}






function installConsoleErrorReporter(){
if(console.reportException){
return;}

console.reportException = reportException;
console.errorOriginal = console.error.bind(console);
console.error = function reactConsoleError(){



console.errorOriginal.apply(null,arguments);
if(!console.reportErrorsAsExceptions){
return;}

var str=Array.prototype.map.call(arguments,stringifySafe).join(', ');
if(str.slice(0,10) === '"Warning: '){



return;}

var error=new Error('console.error: ' + str);
error.framesToPop = 1;
reportException(error,false);};

if(console.reportErrorsAsExceptions === undefined){
console.reportErrorsAsExceptions = true;}}



function stackToString(stack){
var maxLength=Math.max.apply(null,stack.map(function(frame){return frame.methodName.length;}));
return stack.map(function(frame){return stackFrameToString(frame,maxLength);}).join('\n');}


function stackFrameToString(stackFrame,maxLength){
var fileNameParts=stackFrame.file.split('/');
var fileName=fileNameParts[fileNameParts.length - 1];

if(fileName.length > 18){
fileName = fileName.substr(0,17) + '\u2026';}


var spaces=fillSpaces(maxLength - stackFrame.methodName.length);
return '  ' + stackFrame.methodName + spaces + '  ' + fileName + ':' + stackFrame.lineNumber;}


function fillSpaces(n){
return new Array(n + 1).join(' ');}


module.exports = {handleException:handleException,installConsoleErrorReporter:installConsoleErrorReporter};
});
__d('loadSourceMap',["Promise","NativeModules","SourceMap","react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js"],function(global, require, module, exports) {  'use strict';













var Promise=require('Promise');
var NativeModules=require('NativeModules');
var SourceMapConsumer=require('SourceMap').SourceMapConsumer;
var SourceMapURL=require('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js');

var RCTSourceCode=NativeModules.SourceCode;
var RCTNetworking=NativeModules.Networking;

function loadSourceMap(){
return fetchSourceMap().
then(function(map){return new SourceMapConsumer(map);});}


function fetchSourceMap(){
if(global.RAW_SOURCE_MAP){
return Promise.resolve(global.RAW_SOURCE_MAP);}


if(!RCTSourceCode){
return Promise.reject(new Error('RCTSourceCode module is not available'));}


if(!RCTNetworking){

return Promise.reject(new Error('RCTNetworking module is not available'));}


return new Promise(RCTSourceCode.getScriptText).
then(extractSourceMapURL).
then(function(url){
if(url === null){
return Promise.reject(new Error('No source map URL found. May be running from bundled file.'));}

return Promise.resolve(url);}).

then(fetch).
then(function(response){return response.text();});}


function extractSourceMapURL(_ref){var url=_ref.url;var text=_ref.text;var fullSourceMappingURL=_ref.fullSourceMappingURL;
if(fullSourceMappingURL){
return fullSourceMappingURL;}

var mapURL=SourceMapURL.getFrom(text);
if(!mapURL){
return null;}

var baseURL=url.match(/(.+:\/\/.*?)\//)[1];
return baseURL + mapURL;}


module.exports = loadSourceMap;
});
__d('Promise',["setImmediate","promise/setimmediate/es6-extensions.js","promise/setimmediate/done.js"],function(global, require, module, exports) {  'use strict';























global.setImmediate = require('setImmediate');
var Promise=require('promise/setimmediate/es6-extensions.js');
require('promise/setimmediate/done.js');




Promise.prototype.finally = function(onSettled){
return this.then(onSettled,onSettled);};



module.exports = Promise;
});
__d('setImmediate',["ImmediateImplementation"],function(global, require, module, exports) {  module.
















exports = global.setImmediate || 
require('ImmediateImplementation').setImmediate;
});
__d('ImmediateImplementation',[],function(global, require, module, exports) {  /**
 * @generated SignedSource<<57d0446bbd1186485d372efe6b323dca>>
 *
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * !! This file is a check-in of a static_upstream project!      !!
 * !!                                                            !!
 * !! You should not modify this file directly. Instead:         !!
 * !! 1) Use `fjs use-upstream` to temporarily replace this with !!
 * !!    the latest version from upstream.                       !!
 * !! 2) Make your changes, test them, etc.                      !!
 * !! 3) Use `fjs push-upstream` to copy your changes back to    !!
 * !!    static_upstream.                                        !!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 *
 * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic
 * Denicola
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @preserve-header
 * @providesModule ImmediateImplementation
 */

(function(global,undefined){
"use strict";

var nextHandle=1;
var tasksByHandle={};
var queueHead={};
var queueTail=queueHead;
var currentlyRunningATask=false;
var doc=global.document;
var setImmediate;

function addFromSetImmediateArguments(args){
var handler=args[0];
args = Array.prototype.slice.call(args,1);
tasksByHandle[nextHandle] = function(){
handler.apply(undefined,args);};

queueTail = queueTail.next = {handle:nextHandle++};
return queueTail.handle;}


function flushQueue(){
var next,task;
while(!currentlyRunningATask && (next = queueHead.next)) {
queueHead = next;
if(task = tasksByHandle[next.handle]){
currentlyRunningATask = true;
try{
task();
currentlyRunningATask = false;}finally 
{
clearImmediate(next.handle);
if(currentlyRunningATask){
currentlyRunningATask = false;






if(queueHead.next){
setImmediate(flushQueue);}}}}}}







function clearImmediate(handle){
delete tasksByHandle[handle];}


function canUsePostMessage(){


if(global.postMessage && !global.importScripts){
var postMessageIsAsynchronous=true;

var onMessage=function(){
postMessageIsAsynchronous = false;
if(global.removeEventListener){
global.removeEventListener("message",onMessage,false);}else 
{
global.detachEvent("onmessage",onMessage);}};



if(global.addEventListener){
global.addEventListener("message",onMessage,false);}else 
if(global.attachEvent){
global.attachEvent("onmessage",onMessage);}else 
{
return false;}


global.postMessage("","*");
return postMessageIsAsynchronous;}}



function installPostMessageImplementation(){


var messagePrefix="setImmediate$" + Math.random() + "$";
var onGlobalMessage=function(event){
if(event.source === global && 
typeof event.data === "string" && 
event.data.indexOf(messagePrefix) === 0){
flushQueue();}};



if(global.addEventListener){
global.addEventListener("message",onGlobalMessage,false);}else 
{
global.attachEvent("onmessage",onGlobalMessage);}


setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
global.postMessage(messagePrefix + handle,"*");
return handle;};}



function installMessageChannelImplementation(){
var channel=new MessageChannel();
channel.port1.onmessage = flushQueue;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
channel.port2.postMessage(handle);
return handle;};}



function installReadyStateChangeImplementation(){
var html=doc.documentElement;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);


var script=doc.createElement("script");
script.onreadystatechange = function(){
script.onreadystatechange = null;
html.removeChild(script);
script = null;
flushQueue();};

html.appendChild(script);
return handle;};}



function installSetTimeoutImplementation(){
setImmediate = function(){
setTimeout(flushQueue,0);
return addFromSetImmediateArguments(arguments);};}



if(canUsePostMessage()){

installPostMessageImplementation();}else 

if(global.MessageChannel){

installMessageChannelImplementation();}else 

if(doc && "onreadystatechange" in doc.createElement("script")){

installReadyStateChangeImplementation();}else 

{

installSetTimeoutImplementation();}


exports.setImmediate = setImmediate;
exports.clearImmediate = clearImmediate;})(
Function("return this")());
});
__d('promise/setimmediate/es6-extensions.js',["promise/setimmediate/core.js"],function(global, require, module, exports) {  'use strict';



var Promise=require('promise/setimmediate/core.js');

module.exports = Promise;



var TRUE=valuePromise(true);
var FALSE=valuePromise(false);
var NULL=valuePromise(null);
var UNDEFINED=valuePromise(undefined);
var ZERO=valuePromise(0);
var EMPTYSTRING=valuePromise('');

function valuePromise(value){
var p=new Promise(Promise._99);
p._37 = 1;
p._12 = value;
return p;}

Promise.resolve = function(value){
if(value instanceof Promise)return value;

if(value === null)return NULL;
if(value === undefined)return UNDEFINED;
if(value === true)return TRUE;
if(value === false)return FALSE;
if(value === 0)return ZERO;
if(value === '')return EMPTYSTRING;

if(typeof value === 'object' || typeof value === 'function'){
try{
var then=value.then;
if(typeof then === 'function'){
return new Promise(then.bind(value));}}

catch(ex) {
return new Promise(function(resolve,reject){
reject(ex);});}}



return valuePromise(value);};


Promise.all = function(arr){
var args=Array.prototype.slice.call(arr);

return new Promise(function(resolve,reject){
if(args.length === 0)return resolve([]);
var remaining=args.length;
function res(i,val){
if(val && (typeof val === 'object' || typeof val === 'function')){
if(val instanceof Promise && val.then === Promise.prototype.then){
while(val._37 === 3) {
val = val._12;}

if(val._37 === 1)return res(i,val._12);
if(val._37 === 2)reject(val._12);
val.then(function(val){
res(i,val);},
reject);
return;}else 
{
var then=val.then;
if(typeof then === 'function'){
var p=new Promise(then.bind(val));
p.then(function(val){
res(i,val);},
reject);
return;}}}



args[i] = val;
if(--remaining === 0){
resolve(args);}}


for(var i=0;i < args.length;i++) {
res(i,args[i]);}});};




Promise.reject = function(value){
return new Promise(function(resolve,reject){
reject(value);});};



Promise.race = function(values){
return new Promise(function(resolve,reject){
values.forEach(function(value){
Promise.resolve(value).then(resolve,reject);});});};






Promise.prototype['catch'] = function(onRejected){
return this.then(null,onRejected);};
});
__d('promise/setimmediate/core.js',[],function(global, require, module, exports) {  'use strict';



function noop(){}


















var LAST_ERROR=null;
var IS_ERROR={};
function getThen(obj){
try{
return obj.then;}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}



function tryCallOne(fn,a){
try{
return fn(a);}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}


function tryCallTwo(fn,a,b){
try{
fn(a,b);}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}



module.exports = Promise;

function Promise(fn){
if(typeof this !== 'object'){
throw new TypeError('Promises must be constructed via new');}

if(typeof fn !== 'function'){
throw new TypeError('not a function');}

this._37 = 0;
this._12 = null;
this._59 = [];
if(fn === noop)return;
doResolve(fn,this);}

Promise._99 = noop;

Promise.prototype.then = function(onFulfilled,onRejected){
if(this.constructor !== Promise){
return safeThen(this,onFulfilled,onRejected);}

var res=new Promise(noop);
handle(this,new Handler(onFulfilled,onRejected,res));
return res;};


function safeThen(self,onFulfilled,onRejected){
return new self.constructor(function(resolve,reject){
var res=new Promise(noop);
res.then(resolve,reject);
handle(self,new Handler(onFulfilled,onRejected,res));});}

;
function handle(self,deferred){
while(self._37 === 3) {
self = self._12;}

if(self._37 === 0){
self._59.push(deferred);
return;}

setImmediate(function(){
var cb=self._37 === 1?deferred.onFulfilled:deferred.onRejected;
if(cb === null){
if(self._37 === 1){
resolve(deferred.promise,self._12);}else 
{
reject(deferred.promise,self._12);}

return;}

var ret=tryCallOne(cb,self._12);
if(ret === IS_ERROR){
reject(deferred.promise,LAST_ERROR);}else 
{
resolve(deferred.promise,ret);}});}



function resolve(self,newValue){

if(newValue === self){
return reject(
self,
new TypeError('A promise cannot be resolved with itself.'));}


if(
newValue && (
typeof newValue === 'object' || typeof newValue === 'function'))
{
var then=getThen(newValue);
if(then === IS_ERROR){
return reject(self,LAST_ERROR);}

if(
then === self.then && 
newValue instanceof Promise)
{
self._37 = 3;
self._12 = newValue;
finale(self);
return;}else 
if(typeof then === 'function'){
doResolve(then.bind(newValue),self);
return;}}


self._37 = 1;
self._12 = newValue;
finale(self);}


function reject(self,newValue){
self._37 = 2;
self._12 = newValue;
finale(self);}

function finale(self){
for(var i=0;i < self._59.length;i++) {
handle(self,self._59[i]);}

self._59 = null;}


function Handler(onFulfilled,onRejected,promise){
this.onFulfilled = typeof onFulfilled === 'function'?onFulfilled:null;
this.onRejected = typeof onRejected === 'function'?onRejected:null;
this.promise = promise;}








function doResolve(fn,promise){
var done=false;
var res=tryCallTwo(fn,function(value){
if(done)return;
done = true;
resolve(promise,value);},
function(reason){
if(done)return;
done = true;
reject(promise,reason);});

if(!done && res === IS_ERROR){
done = true;
reject(promise,LAST_ERROR);}}
});
__d('promise/setimmediate/done.js',["promise/setimmediate/core.js"],function(global, require, module, exports) {  'use strict';

var Promise=require('promise/setimmediate/core.js');

module.exports = Promise;
Promise.prototype.done = function(onFulfilled,onRejected){
var self=arguments.length?this.then.apply(this,arguments):this;
self.then(null,function(err){
setTimeout(function(){
throw err;},
0);});};
});
__d('SourceMap',[],function(global, require, module, exports) {  var 























scope={};
wrapper.call(scope);

module.exports = scope.sourceMap;

function wrapper(){














function define(moduleName,deps,payload){
if(typeof moduleName != "string"){
throw new TypeError('Expected string, got: ' + moduleName);}


if(arguments.length == 2){
payload = deps;}


if(moduleName in define.modules){
throw new Error("Module already defined: " + moduleName);}

define.modules[moduleName] = payload;}
;




define.modules = {};










function Domain(){
this.modules = {};
this._currentModule = null;}


(function(){
















Domain.prototype.require = function(deps,callback){
if(Array.isArray(deps)){
var params=deps.map(function(dep){
return this.lookup(dep);},
this);
if(callback){
callback.apply(null,params);}

return undefined;}else 

{
return this.lookup(deps);}};



function normalize(path){
var bits=path.split('/');
var i=1;
while(i < bits.length) {
if(bits[i] === '..'){
bits.splice(i - 1,1);}else 
if(bits[i] === '.'){
bits.splice(i,1);}else 
{
i++;}}


return bits.join('/');}


function join(a,b){
a = a.trim();
b = b.trim();
if(/^\//.test(b)){
return b;}else 
{
return a.replace(/\/*$/,'/') + b;}}



function dirname(path){
var bits=path.split('/');
bits.pop();
return bits.join('/');}








Domain.prototype.lookup = function(moduleName){
if(/^\./.test(moduleName)){
moduleName = normalize(join(dirname(this._currentModule),moduleName));}


if(moduleName in this.modules){
var module=this.modules[moduleName];
return module;}


if(!(moduleName in define.modules)){
throw new Error("Module not defined: " + moduleName);}


var module=define.modules[moduleName];

if(typeof module == "function"){
var exports={};
var previousModule=this._currentModule;
this._currentModule = moduleName;
module(this.require.bind(this),exports,{id:moduleName,uri:""});
this._currentModule = previousModule;
module = exports;}



this.modules[moduleName] = module;

return module;};})();




define.Domain = Domain;
define.globalDomain = new Domain();
var require=define.globalDomain.require.bind(define.globalDomain);






define('source-map/source-map-generator',['require','exports','module','source-map/base64-vlq','source-map/util','source-map/array-set'],function(require,exports,module){

var base64VLQ=require('./base64-vlq');
var util=require('./util');
var ArraySet=require('./array-set').ArraySet;









function SourceMapGenerator(aArgs){
this._file = util.getArg(aArgs,'file');
this._sourceRoot = util.getArg(aArgs,'sourceRoot',null);
this._sources = new ArraySet();
this._names = new ArraySet();
this._mappings = [];
this._sourcesContents = null;}


SourceMapGenerator.prototype._version = 3;






SourceMapGenerator.fromSourceMap = 
function SourceMapGenerator_fromSourceMap(aSourceMapConsumer){
var sourceRoot=aSourceMapConsumer.sourceRoot;
var generator=new SourceMapGenerator({
file:aSourceMapConsumer.file,
sourceRoot:sourceRoot});

aSourceMapConsumer.eachMapping(function(mapping){
var newMapping={
generated:{
line:mapping.generatedLine,
column:mapping.generatedColumn}};



if(mapping.source){
newMapping.source = mapping.source;
if(sourceRoot){
newMapping.source = util.relative(sourceRoot,newMapping.source);}


newMapping.original = {
line:mapping.originalLine,
column:mapping.originalColumn};


if(mapping.name){
newMapping.name = mapping.name;}}



generator.addMapping(newMapping);});

aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
generator.setSourceContent(sourceFile,content);}});


return generator;};












SourceMapGenerator.prototype.addMapping = 
function SourceMapGenerator_addMapping(aArgs){
var generated=util.getArg(aArgs,'generated');
var original=util.getArg(aArgs,'original',null);
var source=util.getArg(aArgs,'source',null);
var name=util.getArg(aArgs,'name',null);

this._validateMapping(generated,original,source,name);

if(source && !this._sources.has(source)){
this._sources.add(source);}


if(name && !this._names.has(name)){
this._names.add(name);}


this._mappings.push({
generatedLine:generated.line,
generatedColumn:generated.column,
originalLine:original != null && original.line,
originalColumn:original != null && original.column,
source:source,
name:name});};






SourceMapGenerator.prototype.setSourceContent = 
function SourceMapGenerator_setSourceContent(aSourceFile,aSourceContent){
var source=aSourceFile;
if(this._sourceRoot){
source = util.relative(this._sourceRoot,source);}


if(aSourceContent !== null){


if(!this._sourcesContents){
this._sourcesContents = {};}

this._sourcesContents[util.toSetString(source)] = aSourceContent;}else 
{


delete this._sourcesContents[util.toSetString(source)];
if(Object.keys(this._sourcesContents).length === 0){
this._sourcesContents = null;}}};














SourceMapGenerator.prototype.applySourceMap = 
function SourceMapGenerator_applySourceMap(aSourceMapConsumer,aSourceFile){

if(!aSourceFile){
aSourceFile = aSourceMapConsumer.file;}

var sourceRoot=this._sourceRoot;

if(sourceRoot){
aSourceFile = util.relative(sourceRoot,aSourceFile);}



var newSources=new ArraySet();
var newNames=new ArraySet();


this._mappings.forEach(function(mapping){
if(mapping.source === aSourceFile && mapping.originalLine){

var original=aSourceMapConsumer.originalPositionFor({
line:mapping.originalLine,
column:mapping.originalColumn});

if(original.source !== null){

if(sourceRoot){
mapping.source = util.relative(sourceRoot,original.source);}else 
{
mapping.source = original.source;}

mapping.originalLine = original.line;
mapping.originalColumn = original.column;
if(original.name !== null && mapping.name !== null){


mapping.name = original.name;}}}




var source=mapping.source;
if(source && !newSources.has(source)){
newSources.add(source);}


var name=mapping.name;
if(name && !newNames.has(name)){
newNames.add(name);}},


this);
this._sources = newSources;
this._names = newNames;


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
if(sourceRoot){
sourceFile = util.relative(sourceRoot,sourceFile);}

this.setSourceContent(sourceFile,content);}},

this);};













SourceMapGenerator.prototype._validateMapping = 
function SourceMapGenerator_validateMapping(aGenerated,aOriginal,aSource,
aName){
if(aGenerated && 'line' in aGenerated && 'column' in aGenerated && 
aGenerated.line > 0 && aGenerated.column >= 0 && 
!aOriginal && !aSource && !aName){

return;}else 

if(aGenerated && 'line' in aGenerated && 'column' in aGenerated && 
aOriginal && 'line' in aOriginal && 'column' in aOriginal && 
aGenerated.line > 0 && aGenerated.column >= 0 && 
aOriginal.line > 0 && aOriginal.column >= 0 && 
aSource){

return;}else 

{
throw new Error('Invalid mapping: ' + JSON.stringify({
generated:aGenerated,
source:aSource,
orginal:aOriginal,
name:aName}));}};








SourceMapGenerator.prototype._serializeMappings = 
function SourceMapGenerator_serializeMappings(){
var previousGeneratedColumn=0;
var previousGeneratedLine=1;
var previousOriginalColumn=0;
var previousOriginalLine=0;
var previousName=0;
var previousSource=0;
var result='';
var mapping;






this._mappings.sort(util.compareByGeneratedPositions);

for(var i=0,len=this._mappings.length;i < len;i++) {
mapping = this._mappings[i];

if(mapping.generatedLine !== previousGeneratedLine){
previousGeneratedColumn = 0;
while(mapping.generatedLine !== previousGeneratedLine) {
result += ';';
previousGeneratedLine++;}}else 


{
if(i > 0){
if(!util.compareByGeneratedPositions(mapping,this._mappings[i - 1])){
continue;}

result += ',';}}



result += base64VLQ.encode(mapping.generatedColumn - 
previousGeneratedColumn);
previousGeneratedColumn = mapping.generatedColumn;

if(mapping.source){
result += base64VLQ.encode(this._sources.indexOf(mapping.source) - 
previousSource);
previousSource = this._sources.indexOf(mapping.source);


result += base64VLQ.encode(mapping.originalLine - 1 - 
previousOriginalLine);
previousOriginalLine = mapping.originalLine - 1;

result += base64VLQ.encode(mapping.originalColumn - 
previousOriginalColumn);
previousOriginalColumn = mapping.originalColumn;

if(mapping.name){
result += base64VLQ.encode(this._names.indexOf(mapping.name) - 
previousName);
previousName = this._names.indexOf(mapping.name);}}}




return result;};


SourceMapGenerator.prototype._generateSourcesContent = 
function SourceMapGenerator_generateSourcesContent(aSources,aSourceRoot){
return aSources.map(function(source){
if(!this._sourcesContents){
return null;}

if(aSourceRoot){
source = util.relative(aSourceRoot,source);}

var key=util.toSetString(source);
return Object.prototype.hasOwnProperty.call(this._sourcesContents,
key)?
this._sourcesContents[key]:
null;},
this);};





SourceMapGenerator.prototype.toJSON = 
function SourceMapGenerator_toJSON(){
var map={
version:this._version,
file:this._file,
sources:this._sources.toArray(),
names:this._names.toArray(),
mappings:this._serializeMappings()};

if(this._sourceRoot){
map.sourceRoot = this._sourceRoot;}

if(this._sourcesContents){
map.sourcesContent = this._generateSourcesContent(map.sources,map.sourceRoot);}


return map;};





SourceMapGenerator.prototype.toString = 
function SourceMapGenerator_toString(){
return JSON.stringify(this);};


exports.SourceMapGenerator = SourceMapGenerator;});






































define('source-map/base64-vlq',['require','exports','module','source-map/base64'],function(require,exports,module){

var base64=require('./base64');













var VLQ_BASE_SHIFT=5;


var VLQ_BASE=1 << VLQ_BASE_SHIFT;


var VLQ_BASE_MASK=VLQ_BASE - 1;


var VLQ_CONTINUATION_BIT=VLQ_BASE;







function toVLQSigned(aValue){
return aValue < 0?
(-aValue << 1) + 1:
(aValue << 1) + 0;}








function fromVLQSigned(aValue){
var isNegative=(aValue & 1) === 1;
var shifted=aValue >> 1;
return isNegative?
-shifted:
shifted;}





exports.encode = function base64VLQ_encode(aValue){
var encoded="";
var digit;

var vlq=toVLQSigned(aValue);

do {
digit = vlq & VLQ_BASE_MASK;
vlq >>>= VLQ_BASE_SHIFT;
if(vlq > 0){


digit |= VLQ_CONTINUATION_BIT;}

encoded += base64.encode(digit);}while(
vlq > 0);

return encoded;};






exports.decode = function base64VLQ_decode(aStr){
var i=0;
var strLen=aStr.length;
var result=0;
var shift=0;
var continuation,digit;

do {
if(i >= strLen){
throw new Error("Expected more digits in base 64 VLQ value.");}

digit = base64.decode(aStr.charAt(i++));
continuation = !!(digit & VLQ_CONTINUATION_BIT);
digit &= VLQ_BASE_MASK;
result = result + (digit << shift);
shift += VLQ_BASE_SHIFT;}while(
continuation);

return {
value:fromVLQSigned(result),
rest:aStr.slice(i)};};});










define('source-map/base64',['require','exports','module'],function(require,exports,module){

var charToIntMap={};
var intToCharMap={};

'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.
split('').
forEach(function(ch,index){
charToIntMap[ch] = index;
intToCharMap[index] = ch;});





exports.encode = function base64_encode(aNumber){
if(aNumber in intToCharMap){
return intToCharMap[aNumber];}

throw new TypeError("Must be between 0 and 63: " + aNumber);};





exports.decode = function base64_decode(aChar){
if(aChar in charToIntMap){
return charToIntMap[aChar];}

throw new TypeError("Not a valid base 64 digit: " + aChar);};});









define('source-map/util',['require','exports','module'],function(require,exports,module){











function getArg(aArgs,aName,aDefaultValue){
if(aName in aArgs){
return aArgs[aName];}else 
if(arguments.length === 3){
return aDefaultValue;}else 
{
throw new Error('"' + aName + '" is a required argument.');}}


exports.getArg = getArg;

var urlRegexp=/([\w+\-.]+):\/\/((\w+:\w+)@)?([\w.]+)?(:(\d+))?(\S+)?/;
var dataUrlRegexp=/^data:.+\,.+/;

function urlParse(aUrl){
var match=aUrl.match(urlRegexp);
if(!match){
return null;}

return {
scheme:match[1],
auth:match[3],
host:match[4],
port:match[6],
path:match[7]};}


exports.urlParse = urlParse;

function urlGenerate(aParsedUrl){
var url=aParsedUrl.scheme + "://";
if(aParsedUrl.auth){
url += aParsedUrl.auth + "@";}

if(aParsedUrl.host){
url += aParsedUrl.host;}

if(aParsedUrl.port){
url += ":" + aParsedUrl.port;}

if(aParsedUrl.path){
url += aParsedUrl.path;}

return url;}

exports.urlGenerate = urlGenerate;

function join(aRoot,aPath){
var url;

if(aPath.match(urlRegexp) || aPath.match(dataUrlRegexp)){
return aPath;}


if(aPath.charAt(0) === '/' && (url = urlParse(aRoot))){
url.path = aPath;
return urlGenerate(url);}


return aRoot.replace(/\/$/,'') + '/' + aPath;}

exports.join = join;










function toSetString(aStr){
return '$' + aStr;}

exports.toSetString = toSetString;

function fromSetString(aStr){
return aStr.substr(1);}

exports.fromSetString = fromSetString;

function relative(aRoot,aPath){
aRoot = aRoot.replace(/\/$/,'');

var url=urlParse(aRoot);
if(aPath.charAt(0) == "/" && url && url.path == "/"){
return aPath.slice(1);}


return aPath.indexOf(aRoot + '/') === 0?
aPath.substr(aRoot.length + 1):
aPath;}

exports.relative = relative;

function strcmp(aStr1,aStr2){
var s1=aStr1 || "";
var s2=aStr2 || "";
return (s1 > s2) - (s1 < s2);}










function compareByOriginalPositions(mappingA,mappingB,onlyCompareOriginal){
var cmp;

cmp = strcmp(mappingA.source,mappingB.source);
if(cmp){
return cmp;}


cmp = mappingA.originalLine - mappingB.originalLine;
if(cmp){
return cmp;}


cmp = mappingA.originalColumn - mappingB.originalColumn;
if(cmp || onlyCompareOriginal){
return cmp;}


cmp = strcmp(mappingA.name,mappingB.name);
if(cmp){
return cmp;}


cmp = mappingA.generatedLine - mappingB.generatedLine;
if(cmp){
return cmp;}


return mappingA.generatedColumn - mappingB.generatedColumn;}
;
exports.compareByOriginalPositions = compareByOriginalPositions;










function compareByGeneratedPositions(mappingA,mappingB,onlyCompareGenerated){
var cmp;

cmp = mappingA.generatedLine - mappingB.generatedLine;
if(cmp){
return cmp;}


cmp = mappingA.generatedColumn - mappingB.generatedColumn;
if(cmp || onlyCompareGenerated){
return cmp;}


cmp = strcmp(mappingA.source,mappingB.source);
if(cmp){
return cmp;}


cmp = mappingA.originalLine - mappingB.originalLine;
if(cmp){
return cmp;}


cmp = mappingA.originalColumn - mappingB.originalColumn;
if(cmp){
return cmp;}


return strcmp(mappingA.name,mappingB.name);}
;
exports.compareByGeneratedPositions = compareByGeneratedPositions;});








define('source-map/array-set',['require','exports','module','source-map/util'],function(require,exports,module){

var util=require('./util');







function ArraySet(){
this._array = [];
this._set = {};}





ArraySet.fromArray = function ArraySet_fromArray(aArray,aAllowDuplicates){
var set=new ArraySet();
for(var i=0,len=aArray.length;i < len;i++) {
set.add(aArray[i],aAllowDuplicates);}

return set;};







ArraySet.prototype.add = function ArraySet_add(aStr,aAllowDuplicates){
var isDuplicate=this.has(aStr);
var idx=this._array.length;
if(!isDuplicate || aAllowDuplicates){
this._array.push(aStr);}

if(!isDuplicate){
this._set[util.toSetString(aStr)] = idx;}};








ArraySet.prototype.has = function ArraySet_has(aStr){
return Object.prototype.hasOwnProperty.call(this._set,
util.toSetString(aStr));};







ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr){
if(this.has(aStr)){
return this._set[util.toSetString(aStr)];}

throw new Error('"' + aStr + '" is not in the set.');};







ArraySet.prototype.at = function ArraySet_at(aIdx){
if(aIdx >= 0 && aIdx < this._array.length){
return this._array[aIdx];}

throw new Error('No element indexed by ' + aIdx);};







ArraySet.prototype.toArray = function ArraySet_toArray(){
return this._array.slice();};


exports.ArraySet = ArraySet;});








define('source-map/source-map-consumer',['require','exports','module','source-map/util','source-map/binary-search','source-map/array-set','source-map/base64-vlq'],function(require,exports,module){

var util=require('./util');
var binarySearch=require('./binary-search');
var ArraySet=require('./array-set').ArraySet;
var base64VLQ=require('./base64-vlq');































function SourceMapConsumer(aSourceMap){
var sourceMap=aSourceMap;
if(typeof aSourceMap === 'string'){
sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/,''));}


var version=util.getArg(sourceMap,'version');
var sources=util.getArg(sourceMap,'sources');


var names=util.getArg(sourceMap,'names',[]);
var sourceRoot=util.getArg(sourceMap,'sourceRoot',null);
var sourcesContent=util.getArg(sourceMap,'sourcesContent',null);
var mappings=util.getArg(sourceMap,'mappings');
var file=util.getArg(sourceMap,'file',null);



if(version != this._version){
throw new Error('Unsupported version: ' + version);}






this._names = ArraySet.fromArray(names,true);
this._sources = ArraySet.fromArray(sources,true);

this.sourceRoot = sourceRoot;
this.sourcesContent = sourcesContent;
this._mappings = mappings;
this.file = file;}









SourceMapConsumer.fromSourceMap = 
function SourceMapConsumer_fromSourceMap(aSourceMap){
var smc=Object.create(SourceMapConsumer.prototype);

smc._names = ArraySet.fromArray(aSourceMap._names.toArray(),true);
smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(),true);
smc.sourceRoot = aSourceMap._sourceRoot;
smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),
smc.sourceRoot);
smc.file = aSourceMap._file;

smc.__generatedMappings = aSourceMap._mappings.slice().
sort(util.compareByGeneratedPositions);
smc.__originalMappings = aSourceMap._mappings.slice().
sort(util.compareByOriginalPositions);

return smc;};





SourceMapConsumer.prototype._version = 3;




Object.defineProperty(SourceMapConsumer.prototype,'sources',{
get:function(){
return this._sources.toArray().map(function(s){
return this.sourceRoot?util.join(this.sourceRoot,s):s;},
this);}});

































SourceMapConsumer.prototype.__generatedMappings = null;
Object.defineProperty(SourceMapConsumer.prototype,'_generatedMappings',{
get:function(){
if(!this.__generatedMappings){
this.__generatedMappings = [];
this.__originalMappings = [];
this._parseMappings(this._mappings,this.sourceRoot);}


return this.__generatedMappings;}});



SourceMapConsumer.prototype.__originalMappings = null;
Object.defineProperty(SourceMapConsumer.prototype,'_originalMappings',{
get:function(){
if(!this.__originalMappings){
this.__generatedMappings = [];
this.__originalMappings = [];
this._parseMappings(this._mappings,this.sourceRoot);}


return this.__originalMappings;}});








SourceMapConsumer.prototype._parseMappings = 
function SourceMapConsumer_parseMappings(aStr,aSourceRoot){
var generatedLine=1;
var previousGeneratedColumn=0;
var previousOriginalLine=0;
var previousOriginalColumn=0;
var previousSource=0;
var previousName=0;
var mappingSeparator=/^[,;]/;
var str=aStr;
var mapping;
var temp;

while(str.length > 0) {
if(str.charAt(0) === ';'){
generatedLine++;
str = str.slice(1);
previousGeneratedColumn = 0;}else 

if(str.charAt(0) === ','){
str = str.slice(1);}else 

{
mapping = {};
mapping.generatedLine = generatedLine;


temp = base64VLQ.decode(str);
mapping.generatedColumn = previousGeneratedColumn + temp.value;
previousGeneratedColumn = mapping.generatedColumn;
str = temp.rest;

if(str.length > 0 && !mappingSeparator.test(str.charAt(0))){

temp = base64VLQ.decode(str);
mapping.source = this._sources.at(previousSource + temp.value);
previousSource += temp.value;
str = temp.rest;
if(str.length === 0 || mappingSeparator.test(str.charAt(0))){
throw new Error('Found a source, but no line and column');}



temp = base64VLQ.decode(str);
mapping.originalLine = previousOriginalLine + temp.value;
previousOriginalLine = mapping.originalLine;

mapping.originalLine += 1;
str = temp.rest;
if(str.length === 0 || mappingSeparator.test(str.charAt(0))){
throw new Error('Found a source and line, but no column');}



temp = base64VLQ.decode(str);
mapping.originalColumn = previousOriginalColumn + temp.value;
previousOriginalColumn = mapping.originalColumn;
str = temp.rest;

if(str.length > 0 && !mappingSeparator.test(str.charAt(0))){

temp = base64VLQ.decode(str);
mapping.name = this._names.at(previousName + temp.value);
previousName += temp.value;
str = temp.rest;}}



this.__generatedMappings.push(mapping);
if(typeof mapping.originalLine === 'number'){
this.__originalMappings.push(mapping);}}}




this.__originalMappings.sort(util.compareByOriginalPositions);};






SourceMapConsumer.prototype._findMapping = 
function SourceMapConsumer_findMapping(aNeedle,aMappings,aLineName,
aColumnName,aComparator){





if(aNeedle[aLineName] <= 0){
throw new TypeError('Line must be greater than or equal to 1, got ' + 
aNeedle[aLineName]);}

if(aNeedle[aColumnName] < 0){
throw new TypeError('Column must be greater than or equal to 0, got ' + 
aNeedle[aColumnName]);}


return binarySearch.search(aNeedle,aMappings,aComparator);};

















SourceMapConsumer.prototype.originalPositionFor = 
function SourceMapConsumer_originalPositionFor(aArgs){
var needle={
generatedLine:util.getArg(aArgs,'line'),
generatedColumn:util.getArg(aArgs,'column')};


var mapping=this._findMapping(needle,
this._generatedMappings,
"generatedLine",
"generatedColumn",
util.compareByGeneratedPositions);

if(mapping){
var source=util.getArg(mapping,'source',null);
if(source && this.sourceRoot){
source = util.join(this.sourceRoot,source);}

return {
source:source,
line:util.getArg(mapping,'originalLine',null),
column:util.getArg(mapping,'originalColumn',null),
name:util.getArg(mapping,'name',null)};}



return {
source:null,
line:null,
column:null,
name:null};};








SourceMapConsumer.prototype.sourceContentFor = 
function SourceMapConsumer_sourceContentFor(aSource){
if(!this.sourcesContent){
return null;}


if(this.sourceRoot){
aSource = util.relative(this.sourceRoot,aSource);}


if(this._sources.has(aSource)){
return this.sourcesContent[this._sources.indexOf(aSource)];}


var url;
if(this.sourceRoot && (
url = util.urlParse(this.sourceRoot))){




var fileUriAbsPath=aSource.replace(/^file:\/\//,"");
if(url.scheme == "file" && 
this._sources.has(fileUriAbsPath)){
return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];}


if((!url.path || url.path == "/") && 
this._sources.has("/" + aSource)){
return this.sourcesContent[this._sources.indexOf("/" + aSource)];}}



throw new Error('"' + aSource + '" is not in the SourceMap.');};
















SourceMapConsumer.prototype.generatedPositionFor = 
function SourceMapConsumer_generatedPositionFor(aArgs){
var needle={
source:util.getArg(aArgs,'source'),
originalLine:util.getArg(aArgs,'line'),
originalColumn:util.getArg(aArgs,'column')};


if(this.sourceRoot){
needle.source = util.relative(this.sourceRoot,needle.source);}


var mapping=this._findMapping(needle,
this._originalMappings,
"originalLine",
"originalColumn",
util.compareByOriginalPositions);

if(mapping){
return {
line:util.getArg(mapping,'generatedLine',null),
column:util.getArg(mapping,'generatedColumn',null)};}



return {
line:null,
column:null};};



SourceMapConsumer.GENERATED_ORDER = 1;
SourceMapConsumer.ORIGINAL_ORDER = 2;

















SourceMapConsumer.prototype.eachMapping = 
function SourceMapConsumer_eachMapping(aCallback,aContext,aOrder){
var context=aContext || null;
var order=aOrder || SourceMapConsumer.GENERATED_ORDER;

var mappings;
switch(order){
case SourceMapConsumer.GENERATED_ORDER:
mappings = this._generatedMappings;
break;
case SourceMapConsumer.ORIGINAL_ORDER:
mappings = this._originalMappings;
break;
default:
throw new Error("Unknown order of iteration.");}


var sourceRoot=this.sourceRoot;
mappings.map(function(mapping){
var source=mapping.source;
if(source && sourceRoot){
source = util.join(sourceRoot,source);}

return {
source:source,
generatedLine:mapping.generatedLine,
generatedColumn:mapping.generatedColumn,
originalLine:mapping.originalLine,
originalColumn:mapping.originalColumn,
name:mapping.name};}).

forEach(aCallback,context);};


exports.SourceMapConsumer = SourceMapConsumer;});








define('source-map/binary-search',['require','exports','module'],function(require,exports,module){










function recursiveSearch(aLow,aHigh,aNeedle,aHaystack,aCompare){










var mid=Math.floor((aHigh - aLow) / 2) + aLow;
var cmp=aCompare(aNeedle,aHaystack[mid],true);
if(cmp === 0){

return aHaystack[mid];}else 

if(cmp > 0){

if(aHigh - mid > 1){

return recursiveSearch(mid,aHigh,aNeedle,aHaystack,aCompare);}



return aHaystack[mid];}else 

{

if(mid - aLow > 1){

return recursiveSearch(aLow,mid,aNeedle,aHaystack,aCompare);}



return aLow < 0?
null:
aHaystack[aLow];}}
















exports.search = function search(aNeedle,aHaystack,aCompare){
return aHaystack.length > 0?
recursiveSearch(-1,aHaystack.length,aNeedle,aHaystack,aCompare):
null;};});









define('source-map/source-node',['require','exports','module','source-map/source-map-generator','source-map/util'],function(require,exports,module){

var SourceMapGenerator=require('./source-map-generator').SourceMapGenerator;
var util=require('./util');













function SourceNode(aLine,aColumn,aSource,aChunks,aName){
this.children = [];
this.sourceContents = {};
this.line = aLine === undefined?null:aLine;
this.column = aColumn === undefined?null:aColumn;
this.source = aSource === undefined?null:aSource;
this.name = aName === undefined?null:aName;
if(aChunks != null)this.add(aChunks);}








SourceNode.fromStringWithSourceMap = 
function SourceNode_fromStringWithSourceMap(aGeneratedCode,aSourceMapConsumer){


var node=new SourceNode();



var remainingLines=aGeneratedCode.split('\n');


var lastGeneratedLine=1,lastGeneratedColumn=0;




var lastMapping=null;

aSourceMapConsumer.eachMapping(function(mapping){
if(lastMapping === null){



while(lastGeneratedLine < mapping.generatedLine) {
node.add(remainingLines.shift() + "\n");
lastGeneratedLine++;}

if(lastGeneratedColumn < mapping.generatedColumn){
var nextLine=remainingLines[0];
node.add(nextLine.substr(0,mapping.generatedColumn));
remainingLines[0] = nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn = mapping.generatedColumn;}}else 

{


if(lastGeneratedLine < mapping.generatedLine){
var code="";

do {
code += remainingLines.shift() + "\n";
lastGeneratedLine++;
lastGeneratedColumn = 0;}while(
lastGeneratedLine < mapping.generatedLine);


if(lastGeneratedColumn < mapping.generatedColumn){
var nextLine=remainingLines[0];
code += nextLine.substr(0,mapping.generatedColumn);
remainingLines[0] = nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn = mapping.generatedColumn;}


addMappingWithCode(lastMapping,code);}else 
{



var nextLine=remainingLines[0];
var code=nextLine.substr(0,mapping.generatedColumn - 
lastGeneratedColumn);
remainingLines[0] = nextLine.substr(mapping.generatedColumn - 
lastGeneratedColumn);
lastGeneratedColumn = mapping.generatedColumn;
addMappingWithCode(lastMapping,code);}}


lastMapping = mapping;},
this);



addMappingWithCode(lastMapping,remainingLines.join("\n"));


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
node.setSourceContent(sourceFile,content);}});



return node;

function addMappingWithCode(mapping,code){
if(mapping === null || mapping.source === undefined){
node.add(code);}else 
{
node.add(new SourceNode(mapping.originalLine,
mapping.originalColumn,
mapping.source,
code,
mapping.name));}}};










SourceNode.prototype.add = function SourceNode_add(aChunk){
if(Array.isArray(aChunk)){
aChunk.forEach(function(chunk){
this.add(chunk);},
this);}else 

if(aChunk instanceof SourceNode || typeof aChunk === "string"){
if(aChunk){
this.children.push(aChunk);}}else 


{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk);}


return this;};








SourceNode.prototype.prepend = function SourceNode_prepend(aChunk){
if(Array.isArray(aChunk)){
for(var i=aChunk.length - 1;i >= 0;i--) {
this.prepend(aChunk[i]);}}else 


if(aChunk instanceof SourceNode || typeof aChunk === "string"){
this.children.unshift(aChunk);}else 

{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk);}


return this;};









SourceNode.prototype.walk = function SourceNode_walk(aFn){
var chunk;
for(var i=0,len=this.children.length;i < len;i++) {
chunk = this.children[i];
if(chunk instanceof SourceNode){
chunk.walk(aFn);}else 

{
if(chunk !== ''){
aFn(chunk,{source:this.source,
line:this.line,
column:this.column,
name:this.name});}}}};











SourceNode.prototype.join = function SourceNode_join(aSep){
var newChildren;
var i;
var len=this.children.length;
if(len > 0){
newChildren = [];
for(i = 0;i < len - 1;i++) {
newChildren.push(this.children[i]);
newChildren.push(aSep);}

newChildren.push(this.children[i]);
this.children = newChildren;}

return this;};









SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern,aReplacement){
var lastChild=this.children[this.children.length - 1];
if(lastChild instanceof SourceNode){
lastChild.replaceRight(aPattern,aReplacement);}else 

if(typeof lastChild === 'string'){
this.children[this.children.length - 1] = lastChild.replace(aPattern,aReplacement);}else 

{
this.children.push(''.replace(aPattern,aReplacement));}

return this;};









SourceNode.prototype.setSourceContent = 
function SourceNode_setSourceContent(aSourceFile,aSourceContent){
this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;};








SourceNode.prototype.walkSourceContents = 
function SourceNode_walkSourceContents(aFn){
for(var i=0,len=this.children.length;i < len;i++) {
if(this.children[i] instanceof SourceNode){
this.children[i].walkSourceContents(aFn);}}



var sources=Object.keys(this.sourceContents);
for(var i=0,len=sources.length;i < len;i++) {
aFn(util.fromSetString(sources[i]),this.sourceContents[sources[i]]);}};







SourceNode.prototype.toString = function SourceNode_toString(){
var str="";
this.walk(function(chunk){
str += chunk;});

return str;};






SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs){
var generated={
code:"",
line:1,
column:0};

var map=new SourceMapGenerator(aArgs);
var sourceMappingActive=false;
var lastOriginalSource=null;
var lastOriginalLine=null;
var lastOriginalColumn=null;
var lastOriginalName=null;
this.walk(function(chunk,original){
generated.code += chunk;
if(original.source !== null && 
original.line !== null && 
original.column !== null){
if(lastOriginalSource !== original.source || 
lastOriginalLine !== original.line || 
lastOriginalColumn !== original.column || 
lastOriginalName !== original.name){
map.addMapping({
source:original.source,
original:{
line:original.line,
column:original.column},

generated:{
line:generated.line,
column:generated.column},

name:original.name});}


lastOriginalSource = original.source;
lastOriginalLine = original.line;
lastOriginalColumn = original.column;
lastOriginalName = original.name;
sourceMappingActive = true;}else 
if(sourceMappingActive){
map.addMapping({
generated:{
line:generated.line,
column:generated.column}});


lastOriginalSource = null;
sourceMappingActive = false;}

chunk.split('').forEach(function(ch){
if(ch === '\n'){
generated.line++;
generated.column = 0;}else 
{
generated.column++;}});});



this.walkSourceContents(function(sourceFile,sourceContent){
map.setSourceContent(sourceFile,sourceContent);});


return {code:generated.code,map:map};};


exports.SourceNode = SourceNode;});





this.sourceMap = {
SourceMapConsumer:require('source-map/source-map-consumer').SourceMapConsumer,
SourceMapGenerator:require('source-map/source-map-generator').SourceMapGenerator,
SourceNode:require('source-map/source-node').SourceNode};}
});
__d('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js',[],function(global, require, module, exports) {  (














function(){
var define=null;




void (function(root,factory){
if(typeof define === "function" && define.amd){
define(factory);}else 
if(typeof exports === "object"){
module.exports = factory();}else 
{
root.sourceMappingURL = factory();}})(

this,function(){

var innerRegex=/[#@] sourceMappingURL=([^\s'"]*)/;

var regex=RegExp(
"(?:" + 
"/\\*" + 
"(?:\\s*\r?\n(?://)?)?" + 
"(?:" + innerRegex.source + ")" + 
"\\s*" + 
"\\*/" + 
"|" + 
"//(?:" + innerRegex.source + ")" + 
")" + 
"\\s*$");


return {

regex:regex,
_innerRegex:innerRegex,

getFrom:function(code){
var match=code.match(regex);
return match?match[1] || match[2] || "":null;},


existsIn:function(code){
return regex.test(code);},


removeFrom:function(code){
return code.replace(regex,"");},


insertBefore:function(code,string){
var match=code.match(regex);
if(match){
return code.slice(0,match.index) + string + code.slice(match.index);}else 
{
return code + string;}}};});})();
});
__d('parseErrorStack',["stacktrace-parser/index.js"],function(global, require, module, exports) {  'use strict';











var stacktraceParser=require('stacktrace-parser/index.js');

function resolveSourceMaps(sourceMapInstance,stackFrame){
try{
var orig=sourceMapInstance.originalPositionFor({
line:stackFrame.lineNumber,
column:stackFrame.column});

if(orig){
stackFrame.file = orig.source;
stackFrame.lineNumber = orig.line;
stackFrame.column = orig.column;}}

catch(innerEx) {}}



function parseErrorStack(e,sourceMapInstance){
if(!e || !e.stack){
return [];}


var stack=Array.isArray(e.stack)?e.stack:stacktraceParser.parse(e.stack);

var framesToPop=e.framesToPop || 0;
while(framesToPop--) {
stack.shift();}


if(sourceMapInstance){
stack.forEach(resolveSourceMaps.bind(null,sourceMapInstance));}


return stack;}


module.exports = parseErrorStack;
});
__d('stacktrace-parser/index.js',["stacktrace-parser/lib/stacktrace-parser.js"],function(global, require, module, exports) {  module.exports = require('stacktrace-parser/lib/stacktrace-parser.js');
});
__d('stacktrace-parser/lib/stacktrace-parser.js',[],function(global, require, module, exports) {  var 

UNKNOWN_FUNCTION='<unknown>';

var StackTraceParser={




parse:function(stackString){
var chrome=/^\s*at (?:(?:(?:Anonymous function)?|((?:\[object object\])?\S+(?: \[as \S+\])?)) )?\(?((?:file|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
gecko=/^(?:\s*(\S*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i,
node=/^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i,
lines=stackString.split('\n'),
stack=[],
parts,
element;

for(var i=0,j=lines.length;i < j;++i) {
if(parts = gecko.exec(lines[i])){
element = {
'file':parts[3],
'methodName':parts[1] || UNKNOWN_FUNCTION,
'lineNumber':+parts[4],
'column':parts[5]?+parts[5]:null};}else 

if(parts = chrome.exec(lines[i])){
element = {
'file':parts[2],
'methodName':parts[1] || UNKNOWN_FUNCTION,
'lineNumber':+parts[3],
'column':parts[4]?+parts[4]:null};}else 

if(parts = node.exec(lines[i])){
element = {
'file':parts[2],
'methodName':parts[1] || UNKNOWN_FUNCTION,
'lineNumber':+parts[3],
'column':parts[4]?+parts[4]:null};}else 

{
continue;}


stack.push(element);}


return stack;}};




module.exports = StackTraceParser;
});
__d('Platform',[],function(global, require, module, exports) {  'use strict';













var Platform={
OS:'ios'};


module.exports = Platform;
});
__d('checkFlowAtRuntime',["NativeModules"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












function checkFlowAtRuntime(){
var url=getPackagerURL();
if(!url){
return;}

fetch(url + 'flow/').
then(function(response){return response.json();}).
then(function(response){
if(response.silentError){
return;}

throw {
message:response.message,
stack:response.errors.map(function(err){
return _extends({},
err,{
methodName:err.description,
file:err.filename});})};},




function(){}).


done();}


function getPackagerURL(){
var NativeModules=require('NativeModules');
var scriptURL=NativeModules && 
NativeModules.SourceCode && 
NativeModules.SourceCode.scriptURL || 
'';




return getFirstOrNull(scriptURL.match(/^https?:\/\/[^/]+\//));}


function getFirstOrNull(ar){
return ar?ar[0]:null;}


module.exports = checkFlowAtRuntime;
});
__d('XMLHttpRequest',["FormData","NativeModules","RCTDeviceEventEmitter","XMLHttpRequestBase"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var FormData=require('FormData');
var RCTNetworking=require('NativeModules').Networking;
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');

var XMLHttpRequestBase=require('XMLHttpRequestBase');var 

XMLHttpRequest=(function(_XMLHttpRequestBase){_inherits(XMLHttpRequest,_XMLHttpRequestBase);







function XMLHttpRequest(){_classCallCheck(this,XMLHttpRequest);
_get(Object.getPrototypeOf(XMLHttpRequest.prototype),'constructor',this).call(this);
this._requestId = null;
this._subscriptions = [];
this.upload = {};}_createClass(XMLHttpRequest,[{key:'_didCreateRequest',value:


function _didCreateRequest(requestId){var _this=this;
this._requestId = requestId;
this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didSendNetworkData',
function(args){return _this._didUploadProgress.call(_this,args[0],args[1],args[2]);}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didReceiveNetworkResponse',
function(args){return _this._didReceiveResponse.call(_this,args[0],args[1],args[2]);}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didReceiveNetworkData',
function(args){return _this._didReceiveData.call(_this,args[0],args[1]);}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didCompleteNetworkResponse',
function(args){return _this._didCompleteResponse.call(_this,args[0],args[1]);}));}},{key:'_didUploadProgress',value:



function _didUploadProgress(requestId,progress,total){
if(requestId === this._requestId && this.upload.onprogress){
var event={
lengthComputable:true,
loaded:progress,
total:total};

this.upload.onprogress(event);}}},{key:'_didReceiveResponse',value:



function _didReceiveResponse(requestId,status,responseHeaders){
if(requestId === this._requestId){
this.status = status;
this.setResponseHeaders(responseHeaders);
this.setReadyState(this.HEADERS_RECEIVED);}}},{key:'_didReceiveData',value:



function _didReceiveData(requestId,responseText){
if(requestId === this._requestId){
if(!this.responseText){
this.responseText = responseText;}else 
{
this.responseText += responseText;}

this.setReadyState(this.LOADING);}}},{key:'_didCompleteResponse',value:



function _didCompleteResponse(requestId,error){
if(requestId === this._requestId){
if(error){
this.responseText = error;}

this._clearSubscriptions();
this._requestId = null;
this.setReadyState(this.DONE);}}},{key:'_clearSubscriptions',value:



function _clearSubscriptions(){
for(var i=0;i < this._subscriptions.length;i++) {
var sub=this._subscriptions[i];
sub.remove();}

this._subscriptions = [];}},{key:'sendImpl',value:


function sendImpl(method,url,headers,data){
if(typeof data === 'string'){
data = {string:data};}else 
if(data instanceof FormData){
data = {formData:data.getParts()};}

RCTNetworking.sendRequest(
{
method:method,
url:url,
data:data,
headers:headers,
incrementalUpdates:this.onreadystatechange?true:false},

this._didCreateRequest.bind(this));}},{key:'abortImpl',value:



function abortImpl(){
if(this._requestId){
RCTNetworking.cancelRequest(this._requestId);
this._clearSubscriptions();
this._requestId = null;}}}]);return XMLHttpRequest;})(XMLHttpRequestBase);




module.exports = XMLHttpRequest;
});
__d('FormData',[],function(global, require, module, exports) {  'use strict';var _slicedToArray=(function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n = (_s = _i.next()).done);_n = true) {_arr.push(_s.value);if(i && _arr.length === i)break;}}catch(err) {_d = true;_e = err;}finally {try{if(!_n && _i['return'])_i['return']();}finally {if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else {throw new TypeError('Invalid attempt to destructure non-iterable instance');}};})();var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 














































FormData=(function(){



function FormData(){_classCallCheck(this,FormData);
this._parts = [];
this._partsByKey = {};}_createClass(FormData,[{key:'append',value:


function append(key,value){
var parts=this._partsByKey[key];
if(parts){




parts[1] = value;
return;}

parts = [key,value];
this._parts.push(parts);
this._partsByKey[key] = parts;}},{key:'getParts',value:


function getParts(){
return this._parts.map(function(_ref){var _ref2=_slicedToArray(_ref,2);var name=_ref2[0];var value=_ref2[1];
var contentDisposition='form-data; name="' + name + '"';
var headers={'content-disposition':contentDisposition};
if(typeof value === 'string'){
return {string:value,headers:headers,fieldName:name};}






if(typeof value.name === 'string'){
headers['content-disposition'] += '; filename="' + value.name + '"';}

if(typeof value.type === 'string'){
headers['content-type'] = value.type;}

return _extends({},value,{headers:headers,fieldName:name});});}}]);return FormData;})();




module.exports = FormData;
});
__d('XMLHttpRequestBase',[],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 















XMLHttpRequestBase=(function(){






















function XMLHttpRequestBase(){_classCallCheck(this,XMLHttpRequestBase);
this.UNSENT = 0;
this.OPENED = 1;
this.HEADERS_RECEIVED = 2;
this.LOADING = 3;
this.DONE = 4;

this.onreadystatechange = null;
this.onload = null;
this.upload = undefined;

this._reset();
this._method = null;
this._url = null;
this._aborted = false;}_createClass(XMLHttpRequestBase,[{key:'_reset',value:


function _reset(){
this.readyState = this.UNSENT;
this.responseHeaders = undefined;
this.responseText = '';
this.status = 0;

this._headers = {};
this._sent = false;
this._lowerCaseResponseHeaders = {};}},{key:'getAllResponseHeaders',value:


function getAllResponseHeaders(){
if(!this.responseHeaders){

return null;}

var headers=this.responseHeaders || {};
return Object.keys(headers).map(function(headerName){
return headerName + ': ' + headers[headerName];}).
join('\n');}},{key:'getResponseHeader',value:


function getResponseHeader(header){
var value=this._lowerCaseResponseHeaders[header.toLowerCase()];
return value !== undefined?value:null;}},{key:'setRequestHeader',value:


function setRequestHeader(header,value){
if(this.readyState !== this.OPENED){
throw new Error('Request has not been opened');}

this._headers[header.toLowerCase()] = value;}},{key:'open',value:


function open(method,url,async){

if(this.readyState !== this.UNSENT){
throw new Error('Cannot open, already sending');}

if(async !== undefined && !async){

throw new Error('Synchronous http requests are not supported');}

this._reset();
this._method = method;
this._url = url;
this._aborted = false;
this.setReadyState(this.OPENED);}},{key:'sendImpl',value:


function sendImpl(method,url,headers,data){
throw new Error('Subclass must define sendImpl method');}},{key:'abortImpl',value:


function abortImpl(){
throw new Error('Subclass must define abortImpl method');}},{key:'send',value:


function send(data){
if(this.readyState !== this.OPENED){
throw new Error('Request has not been opened');}

if(this._sent){
throw new Error('Request has already been sent');}

this._sent = true;
this.sendImpl(this._method,this._url,this._headers,data);}},{key:'abort',value:


function abort(){
this._aborted = true;
this.abortImpl();


if(!(this.readyState === this.UNSENT || 
this.readyState === this.OPENED && !this._sent || 
this.readyState === this.DONE)){
this._reset();
this.setReadyState(this.DONE);}


this._reset();}},{key:'callback',value:


function callback(status,responseHeaders,responseText){
if(this._aborted){
return;}

this.status = status;
this.setResponseHeaders(responseHeaders || {});
this.responseText = responseText;
this.setReadyState(this.DONE);}},{key:'setResponseHeaders',value:


function setResponseHeaders(responseHeaders){
this.responseHeaders = responseHeaders || null;
var headers=responseHeaders || {};
this._lowerCaseResponseHeaders = 
Object.keys(headers).reduce(function(lcaseHeaders,headerName){
lcaseHeaders[headerName.toLowerCase()] = headers[headerName];
return lcaseHeaders;},
{});}},{key:'setReadyState',value:


function setReadyState(newState){
this.readyState = newState;

var onreadystatechange=this.onreadystatechange;
if(onreadystatechange){


onreadystatechange(null);}

if(newState === this.DONE && !this._aborted){
this._sendLoad();}}},{key:'_sendLoad',value:



function _sendLoad(){

var onload=this.onload;
if(onload){


onload(null);}}}]);return XMLHttpRequestBase;})();




module.exports = XMLHttpRequestBase;
});
__d('fetch',[],function(global, require, module, exports) {  'use strict';
















var self={};

/**
 * Copyright (c) 2014 GitHub, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @preserve-header
 */
(function(){
'use strict';

if(self.fetch){
return;}


function normalizeName(name){
if(typeof name !== 'string'){
name = name.toString();}

if(/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)){
throw new TypeError('Invalid character in header field name');}

return name.toLowerCase();}


function normalizeValue(value){
if(typeof value !== 'string'){
value = value.toString();}

return value;}


function Headers(headers){
this.map = {};

var self=this;
if(headers instanceof Headers){
headers.forEach(function(name,values){
values.forEach(function(value){
self.append(name,value);});});}else 



if(headers){
Object.getOwnPropertyNames(headers).forEach(function(name){
self.append(name,headers[name]);});}}




Headers.prototype.append = function(name,value){
name = normalizeName(name);
value = normalizeValue(value);
var list=this.map[name];
if(!list){
list = [];
this.map[name] = list;}

list.push(value);};


Headers.prototype['delete'] = function(name){
delete this.map[normalizeName(name)];};


Headers.prototype.get = function(name){
var values=this.map[normalizeName(name)];
return values?values[0]:null;};


Headers.prototype.getAll = function(name){
return this.map[normalizeName(name)] || [];};


Headers.prototype.has = function(name){
return this.map.hasOwnProperty(normalizeName(name));};


Headers.prototype.set = function(name,value){
this.map[normalizeName(name)] = [normalizeValue(value)];};



Headers.prototype.forEach = function(callback){
var self=this;
Object.getOwnPropertyNames(this.map).forEach(function(name){
callback(name,self.map[name]);});};



function consumed(body){
if(body.bodyUsed){
return Promise.reject(new TypeError('Already read'));}

body.bodyUsed = true;}


function fileReaderReady(reader){
return new Promise(function(resolve,reject){
reader.onload = function(){
resolve(reader.result);};

reader.onerror = function(){
reject(reader.error);};});}




function readBlobAsArrayBuffer(blob){
var reader=new FileReader();
reader.readAsArrayBuffer(blob);
return fileReaderReady(reader);}


function readBlobAsText(blob){
var reader=new FileReader();
reader.readAsText(blob);
return fileReaderReady(reader);}


var support={
blob:'FileReader' in self && 'Blob' in self && (function(){
try{
new Blob();
return true;}
catch(e) {
return false;}})(),


formData:'FormData' in self};


function Body(){
this.bodyUsed = false;


this._initBody = function(body){
this._bodyInit = body;
if(typeof body === 'string'){
this._bodyText = body;}else 
if(support.blob && Blob.prototype.isPrototypeOf(body)){
this._bodyBlob = body;}else 
if(support.formData && FormData.prototype.isPrototypeOf(body)){
this._bodyFormData = body;}else 
if(!body){
this._bodyText = '';}else 
{
throw new Error('unsupported BodyInit type');}};



if(support.blob){
this.blob = function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return Promise.resolve(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as blob');}else 
{
return Promise.resolve(new Blob([this._bodyText]));}};



this.arrayBuffer = function(){
return this.blob().then(readBlobAsArrayBuffer);};


this.text = function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return readBlobAsText(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as text');}else 
{
return Promise.resolve(this._bodyText);}};}else 


{
this.text = function(){
var rejected=consumed(this);
return rejected?rejected:Promise.resolve(this._bodyText);};}



if(support.formData){
this.formData = function(){
return this.text().then(decode);};}



this.json = function(){
return this.text().then(JSON.parse);};


return this;}



var methods=['DELETE','GET','HEAD','OPTIONS','POST','PUT'];

function normalizeMethod(method){
var upcased=method.toUpperCase();
return methods.indexOf(upcased) > -1?upcased:method;}


function Request(url,options){
options = options || {};
this.url = url;

this.credentials = options.credentials || 'omit';
this.headers = new Headers(options.headers);
this.method = normalizeMethod(options.method || 'GET');
this.mode = options.mode || null;
this.referrer = null;

if((this.method === 'GET' || this.method === 'HEAD') && options.body){
throw new TypeError('Body not allowed for GET or HEAD requests');}

this._initBody(options.body);}


function decode(body){
var form=new FormData();
body.trim().split('&').forEach(function(bytes){
if(bytes){
var split=bytes.split('=');
var name=split.shift().replace(/\+/g,' ');
var value=split.join('=').replace(/\+/g,' ');
form.append(decodeURIComponent(name),decodeURIComponent(value));}});


return form;}


function headers(xhr){
var head=new Headers();
var pairs=xhr.getAllResponseHeaders().trim().split('\n');
pairs.forEach(function(header){
var split=header.trim().split(':');
var key=split.shift().trim();
var value=split.join(':').trim();
head.append(key,value);});

return head;}


Body.call(Request.prototype);

function Response(bodyInit,options){
if(!options){
options = {};}


this._initBody(bodyInit);
this.type = 'default';
this.url = null;
this.status = options.status;
this.ok = this.status >= 200 && this.status < 300;
this.statusText = options.statusText;
this.headers = options.headers instanceof Headers?options.headers:new Headers(options.headers);
this.url = options.url || '';}


Body.call(Response.prototype);

self.Headers = Headers;
self.Request = Request;
self.Response = Response;

self.fetch = function(input,init){

var request;
if(Request.prototype.isPrototypeOf(input) && !init){
request = input;}else 
{
request = new Request(input,init);}


return new Promise(function(resolve,reject){
var xhr=new XMLHttpRequest();
if(request.credentials === 'cors'){
xhr.withCredentials = true;}


function responseURL(){
if('responseURL' in xhr){
return xhr.responseURL;}



if(/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())){
return xhr.getResponseHeader('X-Request-URL');}


return;}


xhr.onload = function(){
var status=xhr.status === 1223?204:xhr.status;
if(status < 100 || status > 599){
reject(new TypeError('Network request failed'));
return;}

var options={
status:status,
statusText:xhr.statusText,
headers:headers(xhr),
url:responseURL()};

var body='response' in xhr?xhr.response:xhr.responseText;
resolve(new Response(body,options));};


xhr.onerror = function(){
reject(new TypeError('Network request failed'));};


xhr.open(request.method,request.url,true);

if('responseType' in xhr && support.blob){
xhr.responseType = 'blob';}


request.headers.forEach(function(name,values){
values.forEach(function(value){
xhr.setRequestHeader(name,value);});});



xhr.send(typeof request._bodyInit === 'undefined'?null:request._bodyInit);});};


self.fetch.polyfill = true;})();




module.exports = self;
});
__d('Geolocation',["RCTDeviceEventEmitter","NativeModules","invariant","logError","warning"],function(global, require, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLocationObserver=require('NativeModules').LocationObserver;

var invariant=require('invariant');
var logError=require('logError');
var warning=require('warning');

var subscriptions=[];

var updatesEnabled=false;















var Geolocation={





getCurrentPosition:function(
geo_success,
geo_error,
geo_options)
{
invariant(
typeof geo_success === 'function',
'Must provide a valid geo_success callback.');

RCTLocationObserver.getCurrentPosition(
geo_options || {},
geo_success,
geo_error || logError);},







watchPosition:function(success,error,options){
if(!updatesEnabled){
RCTLocationObserver.startObserving(options || {});
updatesEnabled = true;}

var watchID=subscriptions.length;
subscriptions.push([
RCTDeviceEventEmitter.addListener(
'geolocationDidChange',
success),

error?RCTDeviceEventEmitter.addListener(
'geolocationError',
error):
null]);

return watchID;},


clearWatch:function(watchID){
var sub=subscriptions[watchID];
if(!sub){


return;}


sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();
subscriptions[watchID] = undefined;
var noWatchers=true;
for(var ii=0;ii < subscriptions.length;ii++) {
if(subscriptions[ii]){
noWatchers = false;}}


if(noWatchers){
Geolocation.stopObserving();}},



stopObserving:function(){
if(updatesEnabled){
RCTLocationObserver.stopObserving();
updatesEnabled = false;
for(var ii=0;ii < subscriptions.length;ii++) {
var sub=subscriptions[ii];
if(sub){
warning('Called stopObserving with existing subscriptions.');
sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();}}


subscriptions = [];}}};




module.exports = Geolocation;
});
__d('logError',[],function(global, require, module, exports) {  'use strict';

















var logError=function(){
if(arguments.length === 1 && arguments[0] instanceof Error){
var err=arguments[0];
console.error('Error: "' + err.message + '".  Stack:\n' + err.stack);}else 
{
console.error.apply(console,arguments);}};



module.exports = logError;
});
__d('WebSocket',["RCTDeviceEventEmitter","NativeModules","WebSocketBase"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTWebSocketManager=require('NativeModules').WebSocketManager;

var WebSocketBase=require('WebSocketBase');

var WebSocketId=0;var 

WebSocket=(function(_WebSocketBase){_inherits(WebSocket,_WebSocketBase);function WebSocket(){_classCallCheck(this,WebSocket);_get(Object.getPrototypeOf(WebSocket.prototype),'constructor',this).apply(this,arguments);}_createClass(WebSocket,[{key:'connectToSocketImpl',value:



function connectToSocketImpl(url){
this._socketId = WebSocketId++;
RCTWebSocketManager.connect(url,this._socketId);
this._registerEvents(this._socketId);}},{key:'closeConnectionImpl',value:


function closeConnectionImpl(){
RCTWebSocketManager.close(this._socketId);}},{key:'cancelConnectionImpl',value:


function cancelConnectionImpl(){
RCTWebSocketManager.close(this._socketId);}},{key:'sendStringImpl',value:


function sendStringImpl(message){
RCTWebSocketManager.send(message,this._socketId);}},{key:'sendArrayBufferImpl',value:


function sendArrayBufferImpl(){

console.warn('Sending ArrayBuffers is not yet supported');}},{key:'_unregisterEvents',value:


function _unregisterEvents(){
this._subs.forEach(function(e){return e.remove();});
this._subs = [];}},{key:'_registerEvents',value:


function _registerEvents(id){
this._subs = [
RCTDeviceEventEmitter.addListener(
'websocketMessage',
(function(ev){
if(ev.id !== id){
return;}

this.onmessage && this.onmessage({
data:ev.data});}).

bind(this)),

RCTDeviceEventEmitter.addListener(
'websocketOpen',
(function(ev){
if(ev.id !== id){
return;}

this.readyState = this.OPEN;
this.onopen && this.onopen();}).
bind(this)),

RCTDeviceEventEmitter.addListener(
'websocketClosed',
(function(ev){
if(ev.id !== id){
return;}

this.readyState = this.CLOSED;
this.onclose && this.onclose(ev);
this._unregisterEvents();
RCTWebSocketManager.close(id);}).
bind(this)),

RCTDeviceEventEmitter.addListener(
'websocketFailed',
(function(ev){
if(ev.id !== id){
return;}

this.onerror && this.onerror(new Error(ev.message));
this._unregisterEvents();
RCTWebSocketManager.close(id);}).
bind(this))];}}]);return WebSocket;})(WebSocketBase);






module.exports = WebSocket;
});
__d('WebSocketBase',[],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 















WebSocketBase=(function(){

















function WebSocketBase(url,protocols){_classCallCheck(this,WebSocketBase);
this.CONNECTING = 0;
this.OPEN = 1;
this.CLOSING = 2;
this.CLOSED = 3;

if(!protocols){
protocols = [];}


this.connectToSocketImpl(url);}_createClass(WebSocketBase,[{key:'close',value:


function close(){
if(this.readyState === WebSocketBase.CLOSING || 
this.readyState === WebSocketBase.CLOSED){
return;}


if(this.readyState === WebSocketBase.CONNECTING){
this.cancelConnectionImpl();}


this.closeConnectionImpl();}},{key:'send',value:


function send(data){
if(this.readyState === WebSocketBase.CONNECTING){
throw new Error('INVALID_STATE_ERR');}


if(typeof data === 'string'){
this.sendStringImpl(data);}else 
if(data instanceof ArrayBuffer){
this.sendArrayBufferImpl(data);}else 
{
throw new Error('Not supported data type');}}},{key:'closeConnectionImpl',value:



function closeConnectionImpl(){
throw new Error('Subclass must define closeConnectionImpl method');}},{key:'connectToSocketImpl',value:


function connectToSocketImpl(){
throw new Error('Subclass must define connectToSocketImpl method');}},{key:'cancelConnectionImpl',value:


function cancelConnectionImpl(){
throw new Error('Subclass must define cancelConnectionImpl method');}},{key:'sendStringImpl',value:


function sendStringImpl(){
throw new Error('Subclass must define sendStringImpl method');}},{key:'sendArrayBufferImpl',value:


function sendArrayBufferImpl(){
throw new Error('Subclass must define sendArrayBufferImpl method');}}]);return WebSocketBase;})();




module.exports = WebSocketBase;
});
__d('EventPluginHub',["EventPluginRegistry","EventPluginUtils","accumulateInto","forEachAccumulated","invariant","warning"],function(global, require, module, exports) {  'use strict';












var EventPluginRegistry=require('EventPluginRegistry');
var EventPluginUtils=require('EventPluginUtils');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');
var invariant=require('invariant');
var warning=require('warning');




var listenerBank={};





var eventQueue=null;







var executeDispatchesAndRelease=function(event){
if(event){
var executeDispatch=EventPluginUtils.executeDispatch;

var PluginModule=EventPluginRegistry.getPluginModuleForEvent(event);
if(PluginModule && PluginModule.executeDispatch){
executeDispatch = PluginModule.executeDispatch;}

EventPluginUtils.executeDispatchesInOrder(event,executeDispatch);

if(!event.isPersistent()){
event.constructor.release(event);}}};








var InstanceHandle=null;

function validateInstanceHandle(){
var valid=
InstanceHandle && 
InstanceHandle.traverseTwoPhase && 
InstanceHandle.traverseEnterLeave;
warning(
valid,
'InstanceHandle not injected before use!');}

























var EventPluginHub={




injection:{





injectMount:EventPluginUtils.injection.injectMount,





injectInstanceHandle:function(InjectedInstanceHandle){
InstanceHandle = InjectedInstanceHandle;
if(__DEV__){
validateInstanceHandle();}},



getInstanceHandle:function(){
if(__DEV__){
validateInstanceHandle();}

return InstanceHandle;},






injectEventPluginOrder:EventPluginRegistry.injectEventPluginOrder,




injectEventPluginsByName:EventPluginRegistry.injectEventPluginsByName},



eventNameDispatchConfigs:EventPluginRegistry.eventNameDispatchConfigs,

registrationNameModules:EventPluginRegistry.registrationNameModules,








putListener:function(id,registrationName,listener){
invariant(
typeof listener === 'function',
'Expected %s listener to be a function, instead got type %s',
registrationName,typeof listener);


var bankForRegistrationName=
listenerBank[registrationName] || (listenerBank[registrationName] = {});
bankForRegistrationName[id] = listener;

var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule && PluginModule.didPutListener){
PluginModule.didPutListener(id,registrationName,listener);}},








getListener:function(id,registrationName){
var bankForRegistrationName=listenerBank[registrationName];
return bankForRegistrationName && bankForRegistrationName[id];},








deleteListener:function(id,registrationName){
var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule && PluginModule.willDeleteListener){
PluginModule.willDeleteListener(id,registrationName);}


var bankForRegistrationName=listenerBank[registrationName];

if(bankForRegistrationName){
delete bankForRegistrationName[id];}},








deleteAllListeners:function(id){
for(var registrationName in listenerBank) {
if(!listenerBank[registrationName][id]){
continue;}


var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule && PluginModule.willDeleteListener){
PluginModule.willDeleteListener(id,registrationName);}


delete listenerBank[registrationName][id];}},














extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
var events;
var plugins=EventPluginRegistry.plugins;
for(var i=0;i < plugins.length;i++) {

var possiblePlugin=plugins[i];
if(possiblePlugin){
var extractedEvents=possiblePlugin.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget);

if(extractedEvents){
events = accumulateInto(events,extractedEvents);}}}



return events;},









enqueueEvents:function(events){
if(events){
eventQueue = accumulateInto(eventQueue,events);}},








processEventQueue:function(){


var processingEventQueue=eventQueue;
eventQueue = null;
forEachAccumulated(processingEventQueue,executeDispatchesAndRelease);
invariant(
!eventQueue,
'processEventQueue(): Additional events were enqueued while processing ' + 
'an event queue. Support for this has not yet been implemented.');},






__purge:function(){
listenerBank = {};},


__getListenerBank:function(){
return listenerBank;}};




module.exports = EventPluginHub;
});
__d('EventPluginRegistry',["invariant"],function(global, require, module, exports) {  'use strict';













var invariant=require('invariant');




var EventPluginOrder=null;




var namesToPlugins={};






function recomputePluginOrdering(){
if(!EventPluginOrder){

return;}

for(var pluginName in namesToPlugins) {
var PluginModule=namesToPlugins[pluginName];
var pluginIndex=EventPluginOrder.indexOf(pluginName);
invariant(
pluginIndex > -1,
'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 
'the plugin ordering, `%s`.',
pluginName);

if(EventPluginRegistry.plugins[pluginIndex]){
continue;}

invariant(
PluginModule.extractEvents,
'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 
'method, but `%s` does not.',
pluginName);

EventPluginRegistry.plugins[pluginIndex] = PluginModule;
var publishedEvents=PluginModule.eventTypes;
for(var eventName in publishedEvents) {
invariant(
publishEventForPlugin(
publishedEvents[eventName],
PluginModule,
eventName),

'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
eventName,
pluginName);}}}













function publishEventForPlugin(dispatchConfig,PluginModule,eventName){
invariant(
!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'event name, `%s`.',
eventName);

EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

var phasedRegistrationNames=dispatchConfig.phasedRegistrationNames;
if(phasedRegistrationNames){
for(var phaseName in phasedRegistrationNames) {
if(phasedRegistrationNames.hasOwnProperty(phaseName)){
var phasedRegistrationName=phasedRegistrationNames[phaseName];
publishRegistrationName(
phasedRegistrationName,
PluginModule,
eventName);}}



return true;}else 
if(dispatchConfig.registrationName){
publishRegistrationName(
dispatchConfig.registrationName,
PluginModule,
eventName);

return true;}

return false;}










function publishRegistrationName(registrationName,PluginModule,eventName){
invariant(
!EventPluginRegistry.registrationNameModules[registrationName],
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'registration name, `%s`.',
registrationName);

EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
EventPluginRegistry.registrationNameDependencies[registrationName] = 
PluginModule.eventTypes[eventName].dependencies;}







var EventPluginRegistry={




plugins:[],




eventNameDispatchConfigs:{},




registrationNameModules:{},




registrationNameDependencies:{},










injectEventPluginOrder:function(InjectedEventPluginOrder){
invariant(
!EventPluginOrder,
'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 
'once. You are likely trying to load more than one copy of React.');


EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
recomputePluginOrdering();},












injectEventPluginsByName:function(injectedNamesToPlugins){
var isOrderingDirty=false;
for(var pluginName in injectedNamesToPlugins) {
if(!injectedNamesToPlugins.hasOwnProperty(pluginName)){
continue;}

var PluginModule=injectedNamesToPlugins[pluginName];
if(!namesToPlugins.hasOwnProperty(pluginName) || 
namesToPlugins[pluginName] !== PluginModule){
invariant(
!namesToPlugins[pluginName],
'EventPluginRegistry: Cannot inject two different event plugins ' + 
'using the same name, `%s`.',
pluginName);

namesToPlugins[pluginName] = PluginModule;
isOrderingDirty = true;}}


if(isOrderingDirty){
recomputePluginOrdering();}},










getPluginModuleForEvent:function(event){
var dispatchConfig=event.dispatchConfig;
if(dispatchConfig.registrationName){
return EventPluginRegistry.registrationNameModules[
dispatchConfig.registrationName] || 
null;}

for(var phase in dispatchConfig.phasedRegistrationNames) {
if(!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)){
continue;}

var PluginModule=EventPluginRegistry.registrationNameModules[
dispatchConfig.phasedRegistrationNames[phase]];

if(PluginModule){
return PluginModule;}}


return null;},






_resetEventPlugins:function(){
EventPluginOrder = null;
for(var pluginName in namesToPlugins) {
if(namesToPlugins.hasOwnProperty(pluginName)){
delete namesToPlugins[pluginName];}}


EventPluginRegistry.plugins.length = 0;

var eventNameDispatchConfigs=EventPluginRegistry.eventNameDispatchConfigs;
for(var eventName in eventNameDispatchConfigs) {
if(eventNameDispatchConfigs.hasOwnProperty(eventName)){
delete eventNameDispatchConfigs[eventName];}}



var registrationNameModules=EventPluginRegistry.registrationNameModules;
for(var registrationName in registrationNameModules) {
if(registrationNameModules.hasOwnProperty(registrationName)){
delete registrationNameModules[registrationName];}}}};






module.exports = EventPluginRegistry;
});
__d('EventPluginUtils',["EventConstants","invariant","warning"],function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');

var invariant=require('invariant');
var warning=require('warning');









var injection={
Mount:null,
injectMount:function(InjectedMount){
injection.Mount = InjectedMount;
if(__DEV__){
warning(
InjectedMount && InjectedMount.getNode && InjectedMount.getID,
'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 
'module is missing getNode or getID.');}}};





var topLevelTypes=EventConstants.topLevelTypes;

function isEndish(topLevelType){
return topLevelType === topLevelTypes.topMouseUp || 
topLevelType === topLevelTypes.topTouchEnd || 
topLevelType === topLevelTypes.topTouchCancel;}


function isMoveish(topLevelType){
return topLevelType === topLevelTypes.topMouseMove || 
topLevelType === topLevelTypes.topTouchMove;}

function isStartish(topLevelType){
return topLevelType === topLevelTypes.topMouseDown || 
topLevelType === topLevelTypes.topTouchStart;}



var validateEventDispatches;
if(__DEV__){
validateEventDispatches = function(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;

var listenersIsArr=Array.isArray(dispatchListeners);
var idsIsArr=Array.isArray(dispatchIDs);
var IDsLen=idsIsArr?dispatchIDs.length:dispatchIDs?1:0;
var listenersLen=listenersIsArr?
dispatchListeners.length:
dispatchListeners?1:0;

warning(
idsIsArr === listenersIsArr && IDsLen === listenersLen,
'EventPluginUtils: Invalid `event`.');};}









function forEachEventDispatch(event,cb){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i < dispatchListeners.length;i++) {
if(event.isPropagationStopped()){
break;}


cb(event,dispatchListeners[i],dispatchIDs[i]);}}else 

if(dispatchListeners){
cb(event,dispatchListeners,dispatchIDs);}}









function executeDispatch(event,listener,domID){
event.currentTarget = injection.Mount.getNode(domID);
var returnValue=listener(event,domID);
event.currentTarget = null;
return returnValue;}





function executeDispatchesInOrder(event,cb){
forEachEventDispatch(event,cb);
event._dispatchListeners = null;
event._dispatchIDs = null;}









function executeDispatchesInOrderStopAtTrueImpl(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i < dispatchListeners.length;i++) {
if(event.isPropagationStopped()){
break;}


if(dispatchListeners[i](event,dispatchIDs[i])){
return dispatchIDs[i];}}}else 


if(dispatchListeners){
if(dispatchListeners(event,dispatchIDs)){
return dispatchIDs;}}


return null;}





function executeDispatchesInOrderStopAtTrue(event){
var ret=executeDispatchesInOrderStopAtTrueImpl(event);
event._dispatchIDs = null;
event._dispatchListeners = null;
return ret;}











function executeDirectDispatch(event){
if(__DEV__){
validateEventDispatches(event);}

var dispatchListener=event._dispatchListeners;
var dispatchID=event._dispatchIDs;
invariant(
!Array.isArray(dispatchListener),
'executeDirectDispatch(...): Invalid `event`.');

var res=dispatchListener?
dispatchListener(event,dispatchID):
null;
event._dispatchListeners = null;
event._dispatchIDs = null;
return res;}






function hasDispatches(event){
return !!event._dispatchListeners;}





var EventPluginUtils={
isEndish:isEndish,
isMoveish:isMoveish,
isStartish:isStartish,

executeDirectDispatch:executeDirectDispatch,
executeDispatch:executeDispatch,
executeDispatchesInOrder:executeDispatchesInOrder,
executeDispatchesInOrderStopAtTrue:executeDispatchesInOrderStopAtTrue,
hasDispatches:hasDispatches,

getNode:function(id){
return injection.Mount.getNode(id);},

getID:function(node){
return injection.Mount.getID(node);},


injection:injection};


module.exports = EventPluginUtils;
});
__d('EventConstants',["keyMirror"],function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var PropagationPhases=keyMirror({bubbled:null,captured:null});




var topLevelTypes=keyMirror({
topBlur:null,
topChange:null,
topClick:null,
topCompositionEnd:null,
topCompositionStart:null,
topCompositionUpdate:null,
topContextMenu:null,
topCopy:null,
topCut:null,
topDoubleClick:null,
topDrag:null,
topDragEnd:null,
topDragEnter:null,
topDragExit:null,
topDragLeave:null,
topDragOver:null,
topDragStart:null,
topDrop:null,
topError:null,
topFocus:null,
topInput:null,
topKeyDown:null,
topKeyPress:null,
topKeyUp:null,
topLoad:null,
topMouseDown:null,
topMouseMove:null,
topMouseOut:null,
topMouseOver:null,
topMouseUp:null,
topPaste:null,
topReset:null,
topScroll:null,
topSelectionChange:null,
topSubmit:null,
topTextInput:null,
topTouchCancel:null,
topTouchEnd:null,
topTouchMove:null,
topTouchStart:null,
topWheel:null});


var EventConstants={
topLevelTypes:topLevelTypes,
PropagationPhases:PropagationPhases};


module.exports = EventConstants;
});
__d('accumulateInto',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');















function accumulateInto(current,next){
invariant(
next != null,
'accumulateInto(...): Accumulated items must not be null or undefined.');

if(current == null){
return next;}




var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);

if(currentIsArray && nextIsArray){
current.push.apply(current,next);
return current;}


if(currentIsArray){
current.push(next);
return current;}


if(nextIsArray){

return [current].concat(next);}


return [current,next];}


module.exports = accumulateInto;
});
__d('forEachAccumulated',[],function(global, require, module, exports) {  'use strict';



















var forEachAccumulated=function(arr,cb,scope){
if(Array.isArray(arr)){
arr.forEach(cb,scope);}else 
if(arr){
cb.call(scope,arr);}};



module.exports = forEachAccumulated;
});
__d('IOSDefaultEventPluginOrder',[],function(global, require, module, exports) {  'use strict';












var IOSDefaultEventPluginOrder=[
'ResponderEventPlugin',
'IOSNativeBridgeEventPlugin'];


module.exports = IOSDefaultEventPluginOrder;
});
__d('IOSNativeBridgeEventPlugin',["EventPropagators","NativeModules","SyntheticEvent","merge","warning"],function(global, require, module, exports) {  'use strict';












var EventPropagators=require('EventPropagators');
var NativeModules=require('NativeModules');
var SyntheticEvent=require('SyntheticEvent');

var merge=require('merge');
var warning=require('warning');

var RCTUIManager=NativeModules.UIManager;

var customBubblingEventTypes=RCTUIManager.customBubblingEventTypes;
var customDirectEventTypes=RCTUIManager.customDirectEventTypes;

var allTypesByEventName={};

for(var bubblingTypeName in customBubblingEventTypes) {
allTypesByEventName[bubblingTypeName] = customBubblingEventTypes[bubblingTypeName];}


for(var directTypeName in customDirectEventTypes) {
warning(
!customBubblingEventTypes[directTypeName],
'Event cannot be both direct and bubbling: %s',
directTypeName);

allTypesByEventName[directTypeName] = customDirectEventTypes[directTypeName];}


var IOSNativeBridgeEventPlugin={

eventTypes:merge(customBubblingEventTypes,customDirectEventTypes),









extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent)
{
var bubbleDispatchConfig=customBubblingEventTypes[topLevelType];
var directDispatchConfig=customDirectEventTypes[topLevelType];
var event=SyntheticEvent.getPooled(
bubbleDispatchConfig || directDispatchConfig,
topLevelTargetID,
nativeEvent);

if(bubbleDispatchConfig){
EventPropagators.accumulateTwoPhaseDispatches(event);}else 
if(directDispatchConfig){
EventPropagators.accumulateDirectDispatches(event);}else 
{
return null;}

return event;}};



module.exports = IOSNativeBridgeEventPlugin;
});
__d('EventPropagators',["EventConstants","EventPluginHub","accumulateInto","forEachAccumulated"],function(global, require, module, exports) {  "use strict";



















var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');

var PropagationPhases=EventConstants.PropagationPhases;
var getListener=EventPluginHub.getListener;





function listenerAtPhase(id,event,propagationPhase){
var registrationName=
event.dispatchConfig.phasedRegistrationNames[propagationPhase];
return getListener(id,registrationName);}








function accumulateDirectionalDispatches(domID,upwards,event){
if(__DEV__){
if(!domID){
throw new Error('Dispatching id must not be null');}}


var phase=upwards?PropagationPhases.bubbled:PropagationPhases.captured;
var listener=listenerAtPhase(domID,event,phase);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs,domID);}}










function accumulateTwoPhaseDispatchesSingle(event){
if(event && event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
event.dispatchMarker,
accumulateDirectionalDispatches,
event);}}







function accumulateTwoPhaseDispatchesSingleSkipTarget(event){
if(event && event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(
event.dispatchMarker,
accumulateDirectionalDispatches,
event);}}










function accumulateDispatches(id,ignoredDirection,event){
if(event && event.dispatchConfig.registrationName){
var registrationName=event.dispatchConfig.registrationName;
var listener=getListener(id,registrationName);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs,id);}}}









function accumulateDirectDispatchesSingle(event){
if(event && event.dispatchConfig.registrationName){
accumulateDispatches(event.dispatchMarker,null,event);}}



function accumulateTwoPhaseDispatches(events){
forEachAccumulated(events,accumulateTwoPhaseDispatchesSingle);}


function accumulateTwoPhaseDispatchesSkipTarget(events){
forEachAccumulated(events,accumulateTwoPhaseDispatchesSingleSkipTarget);}


function accumulateEnterLeaveDispatches(leave,enter,fromID,toID){
EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
fromID,
toID,
accumulateDispatches,
leave,
enter);}




function accumulateDirectDispatches(events){
forEachAccumulated(events,accumulateDirectDispatchesSingle);}















var EventPropagators={
accumulateTwoPhaseDispatches:accumulateTwoPhaseDispatches,
accumulateTwoPhaseDispatchesSkipTarget:accumulateTwoPhaseDispatchesSkipTarget,
accumulateDirectDispatches:accumulateDirectDispatches,
accumulateEnterLeaveDispatches:accumulateEnterLeaveDispatches};


module.exports = EventPropagators;
});
__d('SyntheticEvent',["PooledClass","Object.assign","emptyFunction"],function(global, require, module, exports) {  'use strict';













var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');





var EventInterface={
path:null,
type:null,

currentTarget:emptyFunction.thatReturnsNull,
eventPhase:null,
bubbles:null,
cancelable:null,
timeStamp:function(event){
return event.timeStamp || Date.now();},

defaultPrevented:null,
isTrusted:null};



















function SyntheticEvent(dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget){
this.dispatchConfig = dispatchConfig;
this.dispatchMarker = dispatchMarker;
this.nativeEvent = nativeEvent;
this.target = nativeEventTarget;
this.currentTarget = nativeEventTarget;

var Interface=this.constructor.Interface;
for(var propName in Interface) {
if(!Interface.hasOwnProperty(propName)){
continue;}

var normalize=Interface[propName];
if(normalize){
this[propName] = normalize(nativeEvent);}else 
{
this[propName] = nativeEvent[propName];}}



var defaultPrevented=nativeEvent.defaultPrevented != null?
nativeEvent.defaultPrevented:
nativeEvent.returnValue === false;
if(defaultPrevented){
this.isDefaultPrevented = emptyFunction.thatReturnsTrue;}else 
{
this.isDefaultPrevented = emptyFunction.thatReturnsFalse;}

this.isPropagationStopped = emptyFunction.thatReturnsFalse;}


assign(SyntheticEvent.prototype,{

preventDefault:function(){
this.defaultPrevented = true;
var event=this.nativeEvent;
if(event.preventDefault){
event.preventDefault();}else 
{
event.returnValue = false;}

this.isDefaultPrevented = emptyFunction.thatReturnsTrue;},


stopPropagation:function(){
var event=this.nativeEvent;
if(event.stopPropagation){
event.stopPropagation();}else 
{
event.cancelBubble = true;}

this.isPropagationStopped = emptyFunction.thatReturnsTrue;},







persist:function(){
this.isPersistent = emptyFunction.thatReturnsTrue;},







isPersistent:emptyFunction.thatReturnsFalse,




destructor:function(){
var Interface=this.constructor.Interface;
for(var propName in Interface) {
this[propName] = null;}

this.dispatchConfig = null;
this.dispatchMarker = null;
this.nativeEvent = null;}});




SyntheticEvent.Interface = EventInterface;







SyntheticEvent.augmentClass = function(Class,Interface){
var Super=this;

var prototype=Object.create(Super.prototype);
assign(prototype,Class.prototype);
Class.prototype = prototype;
Class.prototype.constructor = Class;

Class.Interface = assign({},Super.Interface,Interface);
Class.augmentClass = Super.augmentClass;

PooledClass.addPoolingTo(Class,PooledClass.fourArgumentPooler);};


PooledClass.addPoolingTo(SyntheticEvent,PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;
});
__d('merge',["mergeInto"],function(global, require, module, exports) {  "use strict";
































var mergeInto=require('mergeInto');








var merge=function(one,two){
var result={};
mergeInto(result,one);
mergeInto(result,two);
return result;};


module.exports = merge;
});
__d('mergeInto',["mergeHelpers"],function(global, require, module, exports) {  "use strict";

































var mergeHelpers=require('mergeHelpers');

var checkMergeObjectArg=mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg=mergeHelpers.checkMergeIntoObjectArg;







function mergeInto(one,two){
checkMergeIntoObjectArg(one);
if(two != null){
checkMergeObjectArg(two);
for(var key in two) {
if(!two.hasOwnProperty(key)){
continue;}

one[key] = two[key];}}}




module.exports = mergeInto;
});
__d('mergeHelpers',["invariant","keyMirror"],function(global, require, module, exports) {  "use strict";


































var invariant=require('invariant');
var keyMirror=require('keyMirror');





var MAX_MERGE_DEPTH=36;







var isTerminal=function(o){
return typeof o !== 'object' || o === null;};


var mergeHelpers={

MAX_MERGE_DEPTH:MAX_MERGE_DEPTH,

isTerminal:isTerminal,







normalizeMergeArg:function(arg){
return arg === undefined || arg === null?{}:arg;},










checkMergeArrayArgs:function(one,two){
invariant(
Array.isArray(one) && Array.isArray(two),
'Tried to merge arrays, instead got %s and %s.',
one,
two);},







checkMergeObjectArgs:function(one,two){
mergeHelpers.checkMergeObjectArg(one);
mergeHelpers.checkMergeObjectArg(two);},





checkMergeObjectArg:function(arg){
invariant(
!isTerminal(arg) && !Array.isArray(arg),
'Tried to merge an object, instead got %s.',
arg);},






checkMergeIntoObjectArg:function(arg){
invariant(
(!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg),
'Tried to merge into an object, instead got %s.',
arg);},









checkMergeLevel:function(level){
invariant(
level < MAX_MERGE_DEPTH,
'Maximum deep merge depth exceeded. You may be attempting to merge ' + 
'circular structures in an unsupported way.');},








checkArrayStrategy:function(strategy){
invariant(
strategy === undefined || strategy in mergeHelpers.ArrayStrategies,
'You must provide an array strategy to deep merge functions to ' + 
'instruct the deep merge how to resolve merging two arrays.');},










ArrayStrategies:keyMirror({
Clobber:true,
IndexByIndex:true})};




module.exports = mergeHelpers;
});
__d('NodeHandle',[],function(global, require, module, exports) {  var 




























































NodeHandle={



injection:{
injectImplementation:function(Impl){
NodeHandle._Implementation = Impl;}},



_Implementation:null,





getRootNodeID:function(nodeHandle){
return NodeHandle._Implementation.getRootNodeID(nodeHandle);}};



module.exports = NodeHandle;
});
__d('ReactDefaultBatchingStrategy',["ReactUpdates","Transaction","Object.assign","emptyFunction"],function(global, require, module, exports) {  'use strict';












var ReactUpdates=require('ReactUpdates');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');

var RESET_BATCHED_UPDATES={
initialize:emptyFunction,
close:function(){
ReactDefaultBatchingStrategy.isBatchingUpdates = false;}};



var FLUSH_BATCHED_UPDATES={
initialize:emptyFunction,
close:ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)};


var TRANSACTION_WRAPPERS=[FLUSH_BATCHED_UPDATES,RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction(){
this.reinitializeTransaction();}


assign(
ReactDefaultBatchingStrategyTransaction.prototype,
Transaction.Mixin,
{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;}});




var transaction=new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy={
isBatchingUpdates:false,





batchedUpdates:function(callback,a,b,c,d,e){
var alreadyBatchingUpdates=ReactDefaultBatchingStrategy.isBatchingUpdates;

ReactDefaultBatchingStrategy.isBatchingUpdates = true;


if(alreadyBatchingUpdates){
callback(a,b,c,d,e);}else 
{
transaction.perform(callback,null,a,b,c,d,e);}}};




module.exports = ReactDefaultBatchingStrategy;
});
__d('ReactNativeComponentEnvironment',["ReactNativeDOMIDOperations","ReactNativeReconcileTransaction"],function(global, require, module, exports) {  'use strict';












var ReactNativeDOMIDOperations=require('ReactNativeDOMIDOperations');
var ReactNativeReconcileTransaction=require('ReactNativeReconcileTransaction');

var ReactNativeComponentEnvironment={

processChildrenUpdates:ReactNativeDOMIDOperations.dangerouslyProcessChildrenUpdates,

replaceNodeWithMarkupByID:ReactNativeDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,






unmountIDFromEnvironment:function(){},






clearNode:function(){},



ReactReconcileTransaction:ReactNativeReconcileTransaction};


module.exports = ReactNativeComponentEnvironment;
});
__d('ReactNativeDOMIDOperations',["ReactNativeTagHandles","ReactMultiChildUpdateTypes","NativeModules","ReactPerf"],function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');
var RCTUIManager=require('NativeModules').UIManager;
var ReactPerf=require('ReactPerf');













var dangerouslyProcessChildrenUpdates=function(childrenUpdates,markupList){
if(!childrenUpdates.length){
return;}

var byContainerTag={};


for(var i=0;i < childrenUpdates.length;i++) {
var update=childrenUpdates[i];
var containerTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(update.parentID);
var updates=byContainerTag[containerTag] || (byContainerTag[containerTag] = {});
if(update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING){
(updates.moveFromIndices || (updates.moveFromIndices = [])).push(update.fromIndex);
(updates.moveToIndices || (updates.moveToIndices = [])).push(update.toIndex);}else 
if(update.type === ReactMultiChildUpdateTypes.REMOVE_NODE){
(updates.removeAtIndices || (updates.removeAtIndices = [])).push(update.fromIndex);}else 
if(update.type === ReactMultiChildUpdateTypes.INSERT_MARKUP){
var mountImage=markupList[update.markupIndex];
var tag=mountImage.tag;
var rootNodeID=mountImage.rootNodeID;
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(rootNodeID,tag);
(updates.addAtIndices || (updates.addAtIndices = [])).push(update.toIndex);
(updates.addChildTags || (updates.addChildTags = [])).push(tag);}}





for(var updateParentTagString in byContainerTag) {
var updateParentTagNumber=+updateParentTagString;
var childUpdatesToSend=byContainerTag[updateParentTagNumber];
RCTUIManager.manageChildren(
updateParentTagNumber,
childUpdatesToSend.moveFromIndices,
childUpdatesToSend.moveToIndices,
childUpdatesToSend.addChildTags,
childUpdatesToSend.addAtIndices,
childUpdatesToSend.removeAtIndices);}};








var ReactNativeDOMIDOperations={
dangerouslyProcessChildrenUpdates:ReactPerf.measure(

'ReactDOMIDOperations',
'dangerouslyProcessChildrenUpdates',
dangerouslyProcessChildrenUpdates),








dangerouslyReplaceNodeWithMarkupByID:ReactPerf.measure(
'ReactDOMIDOperations',
'dangerouslyReplaceNodeWithMarkupByID',
function(id,mountImage){
var oldTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(id);
RCTUIManager.replaceExistingNonRootView(oldTag,mountImage.tag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(id,mountImage.tag);})};




module.exports = ReactNativeDOMIDOperations;
});
__d('ReactMultiChildUpdateTypes',["keyMirror"],function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');









var ReactMultiChildUpdateTypes=keyMirror({
INSERT_MARKUP:null,
MOVE_EXISTING:null,
REMOVE_NODE:null,
TEXT_CONTENT:null});


module.exports = ReactMultiChildUpdateTypes;
});
__d('ReactNativeReconcileTransaction',["CallbackQueue","PooledClass","Transaction"],function(global, require, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var Transaction=require('Transaction');





var ON_DOM_READY_QUEUEING={



initialize:function(){
this.reactMountReady.reset();},





close:function(){
this.reactMountReady.notifyAll();}};








var TRANSACTION_WRAPPERS=[ON_DOM_READY_QUEUEING];















function ReactNativeReconcileTransaction(){
this.reinitializeTransaction();
this.reactMountReady = CallbackQueue.getPooled(null);}


var Mixin={







getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},






getReactMountReady:function(){
return this.reactMountReady;},






destructor:function(){
CallbackQueue.release(this.reactMountReady);
this.reactMountReady = null;}};



Object.assign(
ReactNativeReconcileTransaction.prototype,
Transaction.Mixin,
ReactNativeReconcileTransaction,
Mixin);


PooledClass.addPoolingTo(ReactNativeReconcileTransaction);

module.exports = ReactNativeReconcileTransaction;
});
__d('ReactNativeGlobalInteractionHandler',["InteractionManager"],function(global, require, module, exports) {  'use strict';












var InteractionManager=require('InteractionManager');



var interactionHandle=null;

var ReactNativeGlobalInteractionHandler={
onChange:function(numberActiveTouches){
if(numberActiveTouches === 0){
if(interactionHandle){
InteractionManager.clearInteractionHandle(interactionHandle);
interactionHandle = null;}}else 

if(!interactionHandle){
interactionHandle = InteractionManager.createInteractionHandle();}}};




module.exports = ReactNativeGlobalInteractionHandler;
});
__d('InteractionManager',["ErrorUtils","EventEmitter","Set","invariant","keyMirror","setImmediate"],function(global, require, module, exports) {  'use strict';












var ErrorUtils=require('ErrorUtils');
var EventEmitter=require('EventEmitter');
var Set=require('Set');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var setImmediate=require('setImmediate');



var _emitter=new EventEmitter();
var _interactionSet=new Set();
var _addInteractionSet=new Set();
var _deleteInteractionSet=new Set();
var _nextUpdateHandle=null;
var _queue=[];
var _inc=0;




































var InteractionManager={
Events:keyMirror({
interactionStart:true,
interactionComplete:true}),





runAfterInteractions:function(callback){
invariant(
typeof callback === 'function',
'Must specify a function to schedule.');

scheduleUpdate();
_queue.push(callback);},





createInteractionHandle:function(){
scheduleUpdate();
var handle=++_inc;
_addInteractionSet.add(handle);
return handle;},





clearInteractionHandle:function(handle){
invariant(
!!handle,
'Must provide a handle to clear.');

scheduleUpdate();
_addInteractionSet.delete(handle);
_deleteInteractionSet.add(handle);},


addListener:_emitter.addListener.bind(_emitter)};





function scheduleUpdate(){
if(!_nextUpdateHandle){
_nextUpdateHandle = setImmediate(processUpdate);}}






function processUpdate(){
_nextUpdateHandle = null;

var interactionCount=_interactionSet.size;
_addInteractionSet.forEach(function(handle){return (
_interactionSet.add(handle));});

_deleteInteractionSet.forEach(function(handle){return (
_interactionSet.delete(handle));});

var nextInteractionCount=_interactionSet.size;

if(interactionCount !== 0 && nextInteractionCount === 0){

_emitter.emit(InteractionManager.Events.interactionComplete);}else 
if(interactionCount === 0 && nextInteractionCount !== 0){

_emitter.emit(InteractionManager.Events.interactionStart);}



if(nextInteractionCount === 0){
var queue=_queue;
_queue = [];
queue.forEach(function(callback){
ErrorUtils.applyWithGuard(callback);});}



_addInteractionSet.clear();
_deleteInteractionSet.clear();}


module.exports = InteractionManager;
});
__d('Set',["Map","toIterator","_shouldPolyfillES6Collection"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var Map=require('Map');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global,undefined){





if(!_shouldPolyfillES6Collection('Set')){
return global.Set;}var 











































Set=(function(){










function Set(iterable){_classCallCheck(this,Set);
if(this == null || 
typeof this !== 'object' && typeof this !== 'function'){
throw new TypeError('Wrong set object type.');}


initSet(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
this.add(next.value);}}}_createClass(Set,[{key:'add',value:












function add(value){
this._map.set(value,value);
this.size = this._map.size;
return this;}},{key:'clear',value:







function clear(){
initSet(this);}},{key:'delete',value:











function _delete(value){
var ret=this._map.delete(value);
this.size = this._map.size;
return ret;}},{key:'entries',value:







function entries(){
return this._map.entries();}},{key:'forEach',value:









function forEach(callback){
var thisArg=arguments[1];
var it=this._map.keys();
var next;
while(!(next = it.next()).done) {
callback.call(thisArg,next.value,next.value,this);}}},{key:'has',value:











function has(value){
return this._map.has(value);}},{key:'values',value:







function values(){
return this._map.values();}}]);return Set;})();




Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;


Set.prototype.keys = Set.prototype.values;

function initSet(set){
set._map = new Map();
set.size = set._map.size;}


return Set;})(
Function('return this')());
});
__d('Map',["guid","isNode","toIterator","_shouldPolyfillES6Collection"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var guid=require('guid');
var isNode=require('isNode');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global,undefined){




if(!_shouldPolyfillES6Collection('Map')){
return global.Map;}

























































var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VALUE='key+value';



var KEY_PREFIX='$map_';



var SECRET_SIZE_PROP;
if(__DEV__){
SECRET_SIZE_PROP = '$size' + guid();}



var OLD_IE_HASH_PREFIX='IE_HASH_';var 

Map=(function(){










function Map(iterable){_classCallCheck(this,Map);
if(!isObject(this)){
throw new TypeError('Wrong map object type.');}


initMap(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
if(!isObject(next.value)){
throw new TypeError('Expected iterable items to be pair objects.');}

this.set(next.value[0],next.value[1]);}}}_createClass(Map,[{key:'clear',value:








function clear(){
initMap(this);}},{key:'has',value:









function has(key){
var index=getIndex(this,key);
return !!(index != null && this._mapData[index]);}},{key:'set',value:










function set(key,value){
var index=getIndex(this,key);

if(index != null && this._mapData[index]){
this._mapData[index][1] = value;}else 
{
index = this._mapData.push([
key,
value]) - 
1;
setIndex(this,key,index);
if(__DEV__){
this[SECRET_SIZE_PROP] += 1;}else 
{
this.size += 1;}}



return this;}},{key:'get',value:









function get(key){
var index=getIndex(this,key);
if(index == null){
return undefined;}else 
{
return this._mapData[index][1];}}},{key:'delete',value:











function _delete(key){
var index=getIndex(this,key);
if(index != null && this._mapData[index]){
setIndex(this,key,undefined);
this._mapData[index] = undefined;
if(__DEV__){
this[SECRET_SIZE_PROP] -= 1;}else 
{
this.size -= 1;}

return true;}else 
{
return false;}}},{key:'entries',value:










function entries(){
return new MapIterator(this,KIND_KEY_VALUE);}},{key:'keys',value:








function keys(){
return new MapIterator(this,KIND_KEY);}},{key:'values',value:








function values(){
return new MapIterator(this,KIND_VALUE);}},{key:'forEach',value:











function forEach(callback,thisArg){
if(typeof callback !== 'function'){
throw new TypeError('Callback must be callable.');}


var boundCallback=callback.bind(thisArg || undefined);
var mapData=this._mapData;




for(var i=0;i < mapData.length;i++) {
var entry=mapData[i];
if(entry != null){
boundCallback(entry[1],entry[0],this);}}}}]);return Map;})();






Map.prototype[toIterator.ITERATOR_SYMBOL] = Map.prototype.entries;var 

MapIterator=(function(){









function MapIterator(map,kind){_classCallCheck(this,MapIterator);
if(!(isObject(map) && map['_mapData'])){
throw new TypeError('Object is not a map.');}


if([KIND_KEY,KIND_KEY_VALUE,KIND_VALUE].indexOf(kind) === -1){
throw new Error('Invalid iteration kind.');}


this._map = map;
this._nextIndex = 0;
this._kind = kind;}_createClass(MapIterator,[{key:'next',value:








function next(){
if(!this instanceof Map){
throw new TypeError('Expected to be called on a MapIterator.');}


var map=this._map;
var index=this._nextIndex;
var kind=this._kind;

if(map == null){
return createIterResultObject(undefined,true);}


var entries=map['_mapData'];

while(index < entries.length) {
var record=entries[index];

index += 1;
this._nextIndex = index;

if(record){
if(kind === KIND_KEY){
return createIterResultObject(record[0],false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(record[1],false);}else 
if(kind){
return createIterResultObject(record,false);}}}




this._map = undefined;

return createIterResultObject(undefined,true);}}]);return MapIterator;})();






MapIterator.prototype[toIterator.ITERATOR_SYMBOL] = function(){
return this;};













function getIndex(map,key){
if(isObject(key)){
var hash=getHash(key);
return map._objectIndex[hash];}else 
{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
return map._stringIndex[prefixedKey];}else 
{
return map._otherIndex[prefixedKey];}}}










function setIndex(map,key,index){
var shouldDelete=index == null;

if(isObject(key)){
var hash=getHash(key);
if(shouldDelete){
delete map._objectIndex[hash];}else 
{
map._objectIndex[hash] = index;}}else 

{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
if(shouldDelete){
delete map._stringIndex[prefixedKey];}else 
{
map._stringIndex[prefixedKey] = index;}}else 

{
if(shouldDelete){
delete map._otherIndex[prefixedKey];}else 
{
map._otherIndex[prefixedKey] = index;}}}}










function initMap(map){






map._mapData = [];







map._objectIndex = {};


map._stringIndex = {};


map._otherIndex = {};







if(__DEV__){
if(isES5){



if(map.hasOwnProperty(SECRET_SIZE_PROP)){
map[SECRET_SIZE_PROP] = 0;}else 
{
Object.defineProperty(map,SECRET_SIZE_PROP,{
value:0,
writable:true});

Object.defineProperty(map,'size',{
set:function(v){
console.error(
'PLEASE FIX ME: You are changing the map size property which ' + 
'should not be writable and will break in production.');

throw new Error('The map size property is not writable.');},

get:function(){return map[SECRET_SIZE_PROP];}});}




return;}}





map.size = 0;}








function isObject(o){
return o != null && (typeof o === 'object' || typeof o === 'function');}









function createIterResultObject(value,done){
return {value:value,done:done};}



var isES5=(function(){
try{
Object.defineProperty({},'x',{});
return true;}
catch(e) {
return false;}})();









function isExtensible(o){
if(!isES5){
return true;}else 
{
return Object.isExtensible(o);}}











function getIENodeHash(node){
var uniqueID;
switch(node.nodeType){
case 1:
uniqueID = node.uniqueID;
break;
case 9:
uniqueID = node.documentElement.uniqueID;
break;
default:
return null;}


if(uniqueID){
return OLD_IE_HASH_PREFIX + uniqueID;}else 
{
return null;}}



var getHash=(function(){
var propIsEnumerable=Object.prototype.propertyIsEnumerable;
var hashProperty=guid();
var hashCounter=0;







return function getHash(o){
if(o[hashProperty]){
return o[hashProperty];}else 
if(!isES5 && 
o.propertyIsEnumerable && 
o.propertyIsEnumerable[hashProperty]){
return o.propertyIsEnumerable[hashProperty];}else 
if(!isES5 && 
isNode(o) && 
getIENodeHash(o)){
return getIENodeHash(o);}else 
if(!isES5 && o[hashProperty]){
return o[hashProperty];}


if(isExtensible(o)){
hashCounter += 1;
if(isES5){
Object.defineProperty(o,hashProperty,{
enumerable:false,
writable:false,
configurable:false,
value:hashCounter});}else 

if(o.propertyIsEnumerable){




o.propertyIsEnumerable = function(){
return propIsEnumerable.apply(this,arguments);};

o.propertyIsEnumerable[hashProperty] = hashCounter;}else 
if(isNode(o)){




o[hashProperty] = hashCounter;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}

return hashCounter;}else 
{
throw new Error('Non-extensible objects are not allowed as keys.');}};})();




return Map;})(
Function('return this')());
});
__d('guid',[],function(global, require, module, exports) {  function 

























guid(){
return 'f' + (Math.random() * (1 << 30)).toString(16).replace('.','');}


module.exports = guid;
});
__d('isNode',[],function(global, require, module, exports) {  function 















isNode(object){
return !!(object && (
typeof Node === 'function'?object instanceof Node:
typeof object === 'object' && 
typeof object.nodeType === 'number' && 
typeof object.nodeName === 'string'));}



module.exports = isNode;
});
__d('toIterator',[],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}






























var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VAL='key+value';

var ITERATOR_SYMBOL=typeof Symbol === 'function'?
Symbol.iterator:
'@@iterator';

var toIterator=(function(){
if(!(Array.prototype[ITERATOR_SYMBOL] && 
String.prototype[ITERATOR_SYMBOL])){

return (function(){var 
ArrayIterator=(function(){

function ArrayIterator(array,kind){_classCallCheck(this,ArrayIterator);
if(!Array.isArray(array)){
throw new TypeError('Object is not an Array');}

this._iteratedObject = array;
this._kind = kind;
this._nextIndex = 0;}_createClass(ArrayIterator,[{key:'next',value:



function next(){
if(!this instanceof ArrayIterator){
throw new TypeError('Object is not an ArrayIterator');}


if(this._iteratedObject == null){
return createIterResultObject(undefined,true);}


var array=this._iteratedObject;
var len=this._iteratedObject.length;
var index=this._nextIndex;
var kind=this._kind;

if(index >= len){
this._iteratedObject = undefined;
return createIterResultObject(undefined,true);}


this._nextIndex = index + 1;

if(kind === KIND_KEY){
return createIterResultObject(index,false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(array[index],false);}else 
if(kind === KIND_KEY_VAL){
return createIterResultObject([index,array[index]],false);}}},{key:




'@@iterator',value:function iterator(){
return this;}}]);return ArrayIterator;})();var 



StringIterator=(function(){

function StringIterator(string){_classCallCheck(this,StringIterator);
if(typeof string !== 'string'){
throw new TypeError('Object is not a string');}

this._iteratedString = string;
this._nextIndex = 0;}_createClass(StringIterator,[{key:'next',value:



function next(){
if(!this instanceof StringIterator){
throw new TypeError('Object is not a StringIterator');}


if(this._iteratedString == null){
return createIterResultObject(undefined,true);}


var index=this._nextIndex;
var s=this._iteratedString;
var len=s.length;

if(index >= len){
this._iteratedString = undefined;
return createIterResultObject(undefined,true);}


var ret;
var first=s.charCodeAt(index);

if(first < 0xD800 || first > 0xDBFF || index + 1 === len){
ret = s[index];}else 
{
var second=s.charCodeAt(index + 1);
if(second < 0xDC00 || second > 0xDFFF){
ret = s[index];}else 
{
ret = s[index] + s[index + 1];}}



this._nextIndex = index + ret.length;

return createIterResultObject(ret,false);}},{key:



'@@iterator',value:function iterator(){
return this;}}]);return StringIterator;})();




function createIterResultObject(value,done){
return {value:value,done:done};}


return function(object,kind){
if(typeof object === 'string'){
return new StringIterator(object);}else 
if(Array.isArray(object)){
return new ArrayIterator(object,kind || KIND_VALUE);}else 
{
return object[ITERATOR_SYMBOL]();}};})();}else 



{
return function(object){
return object[ITERATOR_SYMBOL]();};}})();








Object.assign(toIterator,{
KIND_KEY:KIND_KEY,
KIND_VALUE:KIND_VALUE,
KIND_KEY_VAL:KIND_KEY_VAL,
ITERATOR_SYMBOL:ITERATOR_SYMBOL});


module.exports = toIterator;
});
__d('_shouldPolyfillES6Collection',[],function(global, require, module, exports) {  var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

























function shouldPolyfillES6Collection(collectionName){
var Collection=global[collectionName];
if(Collection == null){
return true;}


var proto=Collection.prototype;


return Collection == null || 
typeof Collection !== 'function' || 
typeof proto.clear !== 'function' || 
new Collection().size !== 0 || 
typeof proto.keys !== 'function' || 
typeof proto.forEach !== 'function' || 
isCallableWithoutNew(Collection) || 
!supportsSubclassing(Collection);}







function supportsSubclassing(Collection){var 
SubCollection=(function(_Collection){_inherits(SubCollection,_Collection);function SubCollection(){_classCallCheck(this,SubCollection);_get(Object.getPrototypeOf(SubCollection.prototype),'constructor',this).apply(this,arguments);}return SubCollection;})(Collection);
try{
var s=new SubCollection([]);


s.size;
return s instanceof Collection;}
catch(e) {
return false;}}








function isCallableWithoutNew(Collection){
try{
Collection();}
catch(e) {
return false;}

return true;}


module.exports = shouldPolyfillES6Collection;
});
__d('ReactNativeGlobalResponderHandler',["NativeModules","ReactNativeTagHandles"],function(global, require, module, exports) {  'use strict';












var RCTUIManager=require('NativeModules').UIManager;
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var ReactNativeGlobalResponderHandler={
onChange:function(from,to,blockNativeResponder){
if(to !== null){
RCTUIManager.setJSResponder(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(to),
blockNativeResponder);}else 

{
RCTUIManager.clearJSResponder();}}};




module.exports = ReactNativeGlobalResponderHandler;
});
__d('ReactNativeTextComponent',["ReactNativeTagHandles","NativeModules","Object.assign"],function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var RCTUIManager=require('NativeModules').UIManager;

var assign=require('Object.assign');

var ReactNativeTextComponent=function(props){};



assign(ReactNativeTextComponent.prototype,{

construct:function(text){

this._currentElement = text;
this._stringText = '' + text;
this._rootNodeID = null;},


mountComponent:function(rootID,transaction,context){
this._rootNodeID = rootID;
var tag=ReactNativeTagHandles.allocateTag();
var nativeTopRootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootID);
RCTUIManager.createView(
tag,
'RCTRawText',
nativeTopRootID?ReactNativeTagHandles.rootNodeIDToTag[nativeTopRootID]:null,
{text:this._stringText});

return {
rootNodeID:rootID,
tag:tag};},



receiveComponent:function(nextText,transaction,context){
if(nextText !== this._currentElement){
this._currentElement = nextText;
var nextStringText='' + nextText;
if(nextStringText !== this._stringText){
this._stringText = nextStringText;
RCTUIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(
this._rootNodeID),

'RCTRawText',
{text:this._stringText});}}},





unmountComponent:function(){
this._currentElement = null;
this._stringText = null;
this._rootNodeID = null;}});




module.exports = ReactNativeTextComponent;
});
__d('ResponderEventPlugin',["EventConstants","EventPluginUtils","EventPropagators","ReactInstanceHandles","ResponderSyntheticEvent","ResponderTouchHistoryStore","accumulate","invariant","keyOf"],function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginUtils=require('EventPluginUtils');
var EventPropagators=require('EventPropagators');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ResponderSyntheticEvent=require('ResponderSyntheticEvent');
var ResponderTouchHistoryStore=require('ResponderTouchHistoryStore');

var accumulate=require('accumulate');
var invariant=require('invariant');
var keyOf=require('keyOf');

var isStartish=EventPluginUtils.isStartish;
var isMoveish=EventPluginUtils.isMoveish;
var isEndish=EventPluginUtils.isEndish;
var executeDirectDispatch=EventPluginUtils.executeDirectDispatch;
var hasDispatches=EventPluginUtils.hasDispatches;
var executeDispatchesInOrderStopAtTrue=
EventPluginUtils.executeDispatchesInOrderStopAtTrue;





var responderID=null;





var trackedTouchCount=0;




var previousActiveTouches=0;

var changeResponder=function(nextResponderID,blockNativeResponder){
var oldResponderID=responderID;
responderID = nextResponderID;
if(ResponderEventPlugin.GlobalResponderHandler !== null){
ResponderEventPlugin.GlobalResponderHandler.onChange(
oldResponderID,
nextResponderID,
blockNativeResponder);}};




var eventTypes={




startShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onStartShouldSetResponder:null}),
captured:keyOf({onStartShouldSetResponderCapture:null})}},












scrollShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onScrollShouldSetResponder:null}),
captured:keyOf({onScrollShouldSetResponderCapture:null})}},










selectionChangeShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onSelectionChangeShouldSetResponder:null}),
captured:keyOf({onSelectionChangeShouldSetResponderCapture:null})}},







moveShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onMoveShouldSetResponder:null}),
captured:keyOf({onMoveShouldSetResponderCapture:null})}},






responderStart:{registrationName:keyOf({onResponderStart:null})},
responderMove:{registrationName:keyOf({onResponderMove:null})},
responderEnd:{registrationName:keyOf({onResponderEnd:null})},
responderRelease:{registrationName:keyOf({onResponderRelease:null})},
responderTerminationRequest:{
registrationName:keyOf({onResponderTerminationRequest:null})},

responderGrant:{registrationName:keyOf({onResponderGrant:null})},
responderReject:{registrationName:keyOf({onResponderReject:null})},
responderTerminate:{registrationName:keyOf({onResponderTerminate:null})}};






































































































































































































function setResponderAndExtractTransfer(
topLevelType,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
var shouldSetEventType=
isStartish(topLevelType)?eventTypes.startShouldSetResponder:
isMoveish(topLevelType)?eventTypes.moveShouldSetResponder:
topLevelType === EventConstants.topLevelTypes.topSelectionChange?
eventTypes.selectionChangeShouldSetResponder:
eventTypes.scrollShouldSetResponder;


var bubbleShouldSetFrom=!responderID?
topLevelTargetID:
ReactInstanceHandles.getFirstCommonAncestorID(responderID,topLevelTargetID);





var skipOverBubbleShouldSetFrom=bubbleShouldSetFrom === responderID;
var shouldSetEvent=ResponderSyntheticEvent.getPooled(
shouldSetEventType,
bubbleShouldSetFrom,
nativeEvent,
nativeEventTarget);

shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
if(skipOverBubbleShouldSetFrom){
EventPropagators.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);}else 
{
EventPropagators.accumulateTwoPhaseDispatches(shouldSetEvent);}

var wantsResponderID=executeDispatchesInOrderStopAtTrue(shouldSetEvent);
if(!shouldSetEvent.isPersistent()){
shouldSetEvent.constructor.release(shouldSetEvent);}


if(!wantsResponderID || wantsResponderID === responderID){
return null;}

var extracted;
var grantEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderGrant,
wantsResponderID,
nativeEvent,
nativeEventTarget);

grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;

EventPropagators.accumulateDirectDispatches(grantEvent);
var blockNativeResponder=executeDirectDispatch(grantEvent) === true;
if(responderID){

var terminationRequestEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderTerminationRequest,
responderID,
nativeEvent,
nativeEventTarget);

terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminationRequestEvent);
var shouldSwitch=!hasDispatches(terminationRequestEvent) || 
executeDirectDispatch(terminationRequestEvent);
if(!terminationRequestEvent.isPersistent()){
terminationRequestEvent.constructor.release(terminationRequestEvent);}


if(shouldSwitch){
var terminateType=eventTypes.responderTerminate;
var terminateEvent=ResponderSyntheticEvent.getPooled(
terminateType,
responderID,
nativeEvent,
nativeEventTarget);

terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminateEvent);
extracted = accumulate(extracted,[grantEvent,terminateEvent]);
changeResponder(wantsResponderID,blockNativeResponder);}else 
{
var rejectEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderReject,
wantsResponderID,
nativeEvent,
nativeEventTarget);

rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(rejectEvent);
extracted = accumulate(extracted,rejectEvent);}}else 

{
extracted = accumulate(extracted,grantEvent);
changeResponder(wantsResponderID,blockNativeResponder);}

return extracted;}










function canTriggerTransfer(topLevelType,topLevelTargetID,nativeEvent){
return topLevelTargetID && (



topLevelType === EventConstants.topLevelTypes.topScroll && 
!nativeEvent.responderIgnoreScroll || 
trackedTouchCount > 0 && 
topLevelType === EventConstants.topLevelTypes.topSelectionChange || 
isStartish(topLevelType) || 
isMoveish(topLevelType));}










function noResponderTouches(nativeEvent){
var touches=nativeEvent.touches;
if(!touches || touches.length === 0){
return true;}

for(var i=0;i < touches.length;i++) {
var activeTouch=touches[i];
var target=activeTouch.target;
if(target !== null && target !== undefined && target !== 0){

var isAncestor=
ReactInstanceHandles.isAncestorIDOf(
responderID,
EventPluginUtils.getID(target));

if(isAncestor){
return false;}}}



return true;}



var ResponderEventPlugin={

getResponderID:function(){
return responderID;},


eventTypes:eventTypes,













extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
if(isStartish(topLevelType)){
trackedTouchCount += 1;}else 
if(isEndish(topLevelType)){
trackedTouchCount -= 1;
invariant(
trackedTouchCount >= 0,
'Ended a touch event which was not counted in trackedTouchCount.');}



ResponderTouchHistoryStore.recordTouchTrack(topLevelType,nativeEvent,nativeEventTarget);

var extracted=canTriggerTransfer(topLevelType,topLevelTargetID,nativeEvent)?
setResponderAndExtractTransfer(
topLevelType,
topLevelTargetID,
nativeEvent,
nativeEventTarget):
null;










var isResponderTouchStart=responderID && isStartish(topLevelType);
var isResponderTouchMove=responderID && isMoveish(topLevelType);
var isResponderTouchEnd=responderID && isEndish(topLevelType);
var incrementalTouch=
isResponderTouchStart?eventTypes.responderStart:
isResponderTouchMove?eventTypes.responderMove:
isResponderTouchEnd?eventTypes.responderEnd:
null;

if(incrementalTouch){
var gesture=
ResponderSyntheticEvent.getPooled(
incrementalTouch,
responderID,
nativeEvent,
nativeEventTarget);

gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(gesture);
extracted = accumulate(extracted,gesture);}


var isResponderTerminate=
responderID && 
topLevelType === EventConstants.topLevelTypes.topTouchCancel;
var isResponderRelease=
responderID && 
!isResponderTerminate && 
isEndish(topLevelType) && 
noResponderTouches(nativeEvent);
var finalTouch=
isResponderTerminate?eventTypes.responderTerminate:
isResponderRelease?eventTypes.responderRelease:
null;
if(finalTouch){
var finalEvent=
ResponderSyntheticEvent.getPooled(finalTouch,responderID,nativeEvent,nativeEventTarget);
finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(finalEvent);
extracted = accumulate(extracted,finalEvent);
changeResponder(null);}


var numberActiveTouches=
ResponderTouchHistoryStore.touchHistory.numberActiveTouches;
if(ResponderEventPlugin.GlobalInteractionHandler && 
numberActiveTouches !== previousActiveTouches){
ResponderEventPlugin.GlobalInteractionHandler.onChange(
numberActiveTouches);}


previousActiveTouches = numberActiveTouches;

return extracted;},


GlobalResponderHandler:null,
GlobalInteractionHandler:null,

injection:{





injectGlobalResponderHandler:function(GlobalResponderHandler){
ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;},






injectGlobalInteractionHandler:function(GlobalInteractionHandler){
ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;}}};




module.exports = ResponderEventPlugin;
});
__d('ResponderSyntheticEvent',["SyntheticEvent"],function(global, require, module, exports) {  'use strict';













var SyntheticEvent=require('SyntheticEvent');






var ResponderEventInterface={
touchHistory:function(nativeEvent){
return null;}};









function ResponderSyntheticEvent(dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget){
SyntheticEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget);}


SyntheticEvent.augmentClass(ResponderSyntheticEvent,ResponderEventInterface);

module.exports = ResponderSyntheticEvent;
});
__d('ResponderTouchHistoryStore',["EventPluginUtils","invariant"],function(global, require, module, exports) {  'use strict';












var EventPluginUtils=require('EventPluginUtils');

var invariant=require('invariant');

var isMoveish=EventPluginUtils.isMoveish;
var isStartish=EventPluginUtils.isStartish;
var isEndish=EventPluginUtils.isEndish;

var MAX_TOUCH_BANK=20;
















var touchHistory={
touchBank:[],
numberActiveTouches:0,



indexOfSingleActiveTouch:-1,
mostRecentTimeStamp:0};


var timestampForTouch=function(touch){



return touch.timeStamp || touch.timestamp;};







var initializeTouchData=function(touch){
return {
touchActive:true,
startTimeStamp:timestampForTouch(touch),
startPageX:touch.pageX,
startPageY:touch.pageY,
currentPageX:touch.pageX,
currentPageY:touch.pageY,
currentTimeStamp:timestampForTouch(touch),
previousPageX:touch.pageX,
previousPageY:touch.pageY,
previousTimeStamp:timestampForTouch(touch)};};



var reinitializeTouchTrack=function(touchTrack,touch){
touchTrack.touchActive = true;
touchTrack.startTimeStamp = timestampForTouch(touch);
touchTrack.startPageX = touch.pageX;
touchTrack.startPageY = touch.pageY;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchTrack.previousPageX = touch.pageX;
touchTrack.previousPageY = touch.pageY;
touchTrack.previousTimeStamp = timestampForTouch(touch);};


var validateTouch=function(touch){
var identifier=touch.identifier;
invariant(identifier != null,'Touch object is missing identifier');
if(identifier > MAX_TOUCH_BANK){
console.warn(
'Touch identifier ' + identifier + ' is greater than maximum ' + 
'supported ' + MAX_TOUCH_BANK + ' which causes performance issues ' + 
'backfilling array locations for all of the indices.');}};




var recordStartTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var identifier=touch.identifier;
var touchTrack=touchBank[identifier];
if(__DEV__){
validateTouch(touch);}

if(!touchTrack){
touchBank[touch.identifier] = initializeTouchData(touch);}else 
{
reinitializeTouchTrack(touchTrack,touch);}

touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var recordMoveTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack,'Touch data should have been recorded on start');}

touchTrack.touchActive = true;
touchTrack.previousPageX = touchTrack.currentPageX;
touchTrack.previousPageY = touchTrack.currentPageY;
touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var recordEndTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack,'Touch data should have been recorded on start');}

touchTrack.previousPageX = touchTrack.currentPageX;
touchTrack.previousPageY = touchTrack.currentPageY;
touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchTrack.touchActive = false;
touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var ResponderTouchHistoryStore={
recordTouchTrack:function(topLevelType,nativeEvent){
var touchBank=touchHistory.touchBank;
if(isMoveish(topLevelType)){
nativeEvent.changedTouches.forEach(recordMoveTouchData);}else 
if(isStartish(topLevelType)){
nativeEvent.changedTouches.forEach(recordStartTouchData);
touchHistory.numberActiveTouches = nativeEvent.touches.length;
if(touchHistory.numberActiveTouches === 1){
touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;}}else 

if(isEndish(topLevelType)){
nativeEvent.changedTouches.forEach(recordEndTouchData);
touchHistory.numberActiveTouches = nativeEvent.touches.length;
if(touchHistory.numberActiveTouches === 1){
for(var i=0;i < touchBank.length;i++) {
var touchTrackToCheck=touchBank[i];
if(touchTrackToCheck != null && touchTrackToCheck.touchActive){
touchHistory.indexOfSingleActiveTouch = i;
break;}}


if(__DEV__){
var activeTouchData=touchBank[touchHistory.indexOfSingleActiveTouch];
var foundActive=activeTouchData != null && !!activeTouchData.touchActive;
invariant(foundActive,'Cannot find single active touch');}}}},





touchHistory:touchHistory};



module.exports = ResponderTouchHistoryStore;
});
__d('accumulate',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');








function accumulate(current,next){
invariant(
next != null,
'accumulate(...): Accumulated items must be not be null or undefined.');

if(current == null){
return next;}else 
{


var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);
if(currentIsArray){
return current.concat(next);}else 
{
if(nextIsArray){
return [current].concat(next);}else 
{
return [current,next];}}}}





module.exports = accumulate;
});
__d('UniversalWorkerNodeHandle',["ReactNativeTagHandles","invariant"],function(global, require, module, exports) {  var 



ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');

var UniversalWorkerNodeHandle={
getRootNodeID:function(nodeHandle){
invariant(
nodeHandle !== undefined && nodeHandle !== null && nodeHandle !== 0,
'No node handle defined');

return ReactNativeTagHandles.tagToRootNodeID[nodeHandle];}};



module.exports = UniversalWorkerNodeHandle;
});
__d('createReactNativeComponentClass',["ReactNativeBaseComponent"],function(global, require, module, exports) {  'use strict';













var ReactNativeBaseComponent=require('ReactNativeBaseComponent');












var createReactNativeComponentClass=function(
viewConfig)
{
var Constructor=function(element){
this._currentElement = element;

this._rootNodeID = null;
this._renderedChildren = null;
this.previousFlattenedStyle = null;};

Constructor.displayName = viewConfig.uiViewClassName;
Constructor.viewConfig = viewConfig;
Constructor.propTypes = viewConfig.propTypes;
Constructor.prototype = new ReactNativeBaseComponent(viewConfig);
Constructor.prototype.constructor = Constructor;

return Constructor;};


module.exports = createReactNativeComponentClass;
});
__d('ReactNativeBaseComponent',["NativeMethodsMixin","ReactNativeEventEmitter","ReactNativeStyleAttributes","ReactNativeTagHandles","ReactMultiChild","NativeModules","styleDiffer","deepFreezeAndThrowOnMutationInDev","diffRawProperties","flattenStyle","precomputeStyle","warning"],function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var ReactNativeEventEmitter=require('ReactNativeEventEmitter');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChild=require('ReactMultiChild');
var RCTUIManager=require('NativeModules').UIManager;

var styleDiffer=require('styleDiffer');
var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var diffRawProperties=require('diffRawProperties');
var flattenStyle=require('flattenStyle');
var precomputeStyle=require('precomputeStyle');
var warning=require('warning');

var registrationNames=ReactNativeEventEmitter.registrationNames;
var putListener=ReactNativeEventEmitter.putListener;
var deleteListener=ReactNativeEventEmitter.deleteListener;
var deleteAllListeners=ReactNativeEventEmitter.deleteAllListeners;












var ReactNativeBaseComponent=function(
viewConfig)
{
this.viewConfig = viewConfig;};












var cachedIndexArray=function(size){
var cachedResult=cachedIndexArray._cache[size];
if(!cachedResult){
var arr=[];
for(var i=0;i < size;i++) {
arr[i] = i;}

cachedIndexArray._cache[size] = arr;
return arr;}else 
{
return cachedResult;}};


cachedIndexArray._cache = {};





ReactNativeBaseComponent.Mixin = {
getPublicInstance:function(){

return this;},


construct:function(element){
this._currentElement = element;},


unmountComponent:function(){
deleteAllListeners(this._rootNodeID);
this.unmountChildren();
this._rootNodeID = null;},










initializeChildren:function(children,containerTag,transaction,context){
var mountImages=this.mountChildren(children,transaction,context);



if(mountImages.length){
var indexes=cachedIndexArray(mountImages.length);


var createdTags=[];
for(var i=0;i < mountImages.length;i++) {
var mountImage=mountImages[i];
var childTag=mountImage.tag;
var childID=mountImage.rootNodeID;
warning(
mountImage && mountImage.rootNodeID && mountImage.tag,
'Mount image returned does not have required data');

ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
childID,
childTag);

createdTags[i] = mountImage.tag;}

RCTUIManager.
manageChildren(containerTag,null,null,createdTags,indexes,null);}},












computeUpdatedProperties:function(prevProps,nextProps,validAttributes){
if(__DEV__){
for(var key in nextProps) {
if(nextProps.hasOwnProperty(key) && 
nextProps[key] && 
validAttributes[key]){
deepFreezeAndThrowOnMutationInDev(nextProps[key]);}}}




var updatePayload=diffRawProperties(
null,
prevProps,
nextProps,
validAttributes);







if(styleDiffer(nextProps.style,prevProps.style)){
var nextFlattenedStyle=precomputeStyle(flattenStyle(nextProps.style));
updatePayload = diffRawProperties(
updatePayload,
this.previousFlattenedStyle,
nextFlattenedStyle,
ReactNativeStyleAttributes);

this.previousFlattenedStyle = nextFlattenedStyle;}


return updatePayload;},











receiveComponent:function(nextElement,transaction,context){
var prevElement=this._currentElement;
this._currentElement = nextElement;

var updatePayload=this.computeUpdatedProperties(
prevElement.props,
nextElement.props,
this.viewConfig.validAttributes);


if(updatePayload){
RCTUIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(this._rootNodeID),
this.viewConfig.uiViewClassName,
updatePayload);}



this._reconcileListenersUponUpdate(
prevElement.props,
nextElement.props);

this.updateChildren(nextElement.props.children,transaction,context);},





_registerListenersUponCreation:function(initialProps){
for(var key in initialProps) {


if(registrationNames[key] && initialProps[key]){
var listener=initialProps[key];
putListener(this._rootNodeID,key,listener);}}},









_reconcileListenersUponUpdate:function(prevProps,nextProps){
for(var key in nextProps) {
if(registrationNames[key] && nextProps[key] !== prevProps[key]){
if(nextProps[key]){
putListener(this._rootNodeID,key,nextProps[key]);}else 
{
deleteListener(this._rootNodeID,key);}}}},










mountComponent:function(rootID,transaction,context){
this._rootNodeID = rootID;

var tag=ReactNativeTagHandles.allocateTag();

this.previousFlattenedStyle = {};
var updatePayload=this.computeUpdatedProperties(
{},
this._currentElement.props,
this.viewConfig.validAttributes);


var nativeTopRootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootID);
RCTUIManager.createView(
tag,
this.viewConfig.uiViewClassName,
nativeTopRootID?ReactNativeTagHandles.rootNodeIDToTag[nativeTopRootID]:null,
updatePayload);


this._registerListenersUponCreation(this._currentElement.props);
this.initializeChildren(
this._currentElement.props.children,
tag,
transaction,
context);

return {
rootNodeID:rootID,
tag:tag};}};








Object.assign(
ReactNativeBaseComponent.prototype,
ReactMultiChild.Mixin,
ReactNativeBaseComponent.Mixin,
NativeMethodsMixin);


module.exports = ReactNativeBaseComponent;
});
__d('NativeMethodsMixin',["NativeModules","TextInputState","findNodeHandle","flattenStyle","invariant","mergeFast","precomputeStyle"],function(global, require, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTUIManager=NativeModules.UIManager;
var TextInputState=require('TextInputState');

var findNodeHandle=require('findNodeHandle');
var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var mergeFast=require('mergeFast');
var precomputeStyle=require('precomputeStyle');


















var NativeMethodsMixin={
measure:function(callback){
RCTUIManager.measure(
findNodeHandle(this),
mountSafeCallback(this,callback));},



measureLayout:function(
relativeToNativeNode,
onSuccess,
onFail)
{
RCTUIManager.measureLayout(
findNodeHandle(this),
relativeToNativeNode,
mountSafeCallback(this,onFail),
mountSafeCallback(this,onSuccess));},








setNativeProps:function(nativeProps){





var hasOnlyStyle=true;
for(var key in nativeProps) {
if(key !== 'style'){
hasOnlyStyle = false;
break;}}


var style=precomputeStyle(flattenStyle(nativeProps.style));

var props=null;
if(hasOnlyStyle){
props = style;}else 
if(!style){
props = nativeProps;}else 
{
props = mergeFast(nativeProps,style);}


RCTUIManager.updateView(
findNodeHandle(this),
this.viewConfig.uiViewClassName,
props);},



focus:function(){
TextInputState.focusTextInput(findNodeHandle(this));},


blur:function(){
TextInputState.blurTextInput(findNodeHandle(this));}};



function throwOnStylesProp(component,props){
if(props.styles !== undefined){
var owner=component._owner || null;
var name=component.constructor.displayName;
var msg='`styles` is not a supported property of `' + name + '`, did ' + 
'you mean `style` (singular)?';
if(owner && owner.constructor && owner.constructor.displayName){
msg += '\n\nCheck the `' + owner.constructor.displayName + '` parent ' + 
' component.';}

throw new Error(msg);}}


if(__DEV__){



var NativeMethodsMixin_DEV=NativeMethodsMixin;
invariant(
!NativeMethodsMixin_DEV.componentWillMount && 
!NativeMethodsMixin_DEV.componentWillReceiveProps,
'Do not override existing functions.');

NativeMethodsMixin_DEV.componentWillMount = function(){
throwOnStylesProp(this,this.props);};

NativeMethodsMixin_DEV.componentWillReceiveProps = function(newProps){
throwOnStylesProp(this,newProps);};}







var mountSafeCallback=function(context,callback){
return function(){
if(!callback || context.isMounted && !context.isMounted()){
return;}

return callback.apply(context,arguments);};};



module.exports = NativeMethodsMixin;
});
__d('TextInputState',["Platform","NativeModules"],function(global, require, module, exports) {  'use strict';
















var Platform=require('Platform');
var RCTUIManager=require('NativeModules').UIManager;

var TextInputState={



_currentlyFocusedID:null,





currentlyFocusedField:function(){
return this._currentlyFocusedID;},







focusTextInput:function(textFieldID){
if(this._currentlyFocusedID !== textFieldID && textFieldID !== null){
this._currentlyFocusedID = textFieldID;
if(Platform.OS === 'ios'){
RCTUIManager.focus(textFieldID);}else 
if(Platform.OS === 'android'){
RCTUIManager.dispatchViewManagerCommand(
textFieldID,
RCTUIManager.AndroidTextInput.Commands.focusTextInput,
null);}}},










blurTextInput:function(textFieldID){
if(this._currentlyFocusedID === textFieldID && textFieldID !== null){
this._currentlyFocusedID = null;
if(Platform.OS === 'ios'){
RCTUIManager.blur(textFieldID);}else 
if(Platform.OS === 'android'){
RCTUIManager.dispatchViewManagerCommand(
textFieldID,
RCTUIManager.AndroidTextInput.Commands.blurTextInput,
null);}}}};






module.exports = TextInputState;
});
__d('flattenStyle',["StyleSheetRegistry","invariant"],function(global, require, module, exports) {  'use strict';












var StyleSheetRegistry=require('StyleSheetRegistry');
var invariant=require('invariant');




function getStyle(style){
if(typeof style === 'number'){
return StyleSheetRegistry.getStyleByID(style);}

return style;}


function flattenStyle(style){
if(!style){
return undefined;}

invariant(style !== true,'style may be false but not true');

if(!Array.isArray(style)){
return getStyle(style);}


var result={};
for(var i=0;i < style.length;++i) {
var computedStyle=flattenStyle(style[i]);
if(computedStyle){
for(var key in computedStyle) {
result[key] = computedStyle[key];

if(__DEV__){
var value=computedStyle[key];}}}}




return result;}


module.exports = flattenStyle;
});
__d('StyleSheetRegistry',[],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var styles={};
var uniqueID=1;
var emptyStyle={};var 

StyleSheetRegistry=(function(){function StyleSheetRegistry(){_classCallCheck(this,StyleSheetRegistry);}_createClass(StyleSheetRegistry,null,[{key:'registerStyle',value:
function registerStyle(style){
var id=++uniqueID;
if(__DEV__){
Object.freeze(style);}

styles[id] = style;
return id;}},{key:'getStyleByID',value:


function getStyleByID(id){
if(!id){


return emptyStyle;}


var style=styles[id];
if(!style){
console.warn('Invalid style with id `' + id + '`. Skipping ...');
return emptyStyle;}

return style;}}]);return StyleSheetRegistry;})();



module.exports = StyleSheetRegistry;
});
__d('mergeFast',[],function(global, require, module, exports) {  'use strict';





















var mergeFast=function(one,two){
var ret={};
for(var keyOne in one) {
ret[keyOne] = one[keyOne];}

for(var keyTwo in two) {
ret[keyTwo] = two[keyTwo];}

return ret;};


module.exports = mergeFast;
});
__d('precomputeStyle',["MatrixMath","Platform","deepFreezeAndThrowOnMutationInDev","invariant","stringifySafe"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var MatrixMath=require('MatrixMath');
var Platform=require('Platform');

var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');
var stringifySafe=require('stringifySafe');





function precomputeStyle(style){
if(!style || !style.transform){
return style;}

invariant(
!style.transformMatrix,
'transformMatrix and transform styles cannot be used on the same component');

var newStyle=_precomputeTransforms(_extends({},style));
deepFreezeAndThrowOnMutationInDev(newStyle);
return newStyle;}










function _precomputeTransforms(style){var 
transform=style.transform;
var result=MatrixMath.createIdentityMatrix();

transform.forEach(function(transformation){
var key=Object.keys(transformation)[0];
var value=transformation[key];
if(__DEV__){
_validateTransform(key,value,transformation);}


switch(key){
case 'matrix':
MatrixMath.multiplyInto(result,result,value);
break;
case 'perspective':
_multiplyTransform(result,MatrixMath.reusePerspectiveCommand,[value]);
break;
case 'rotateX':
_multiplyTransform(result,MatrixMath.reuseRotateXCommand,[_convertToRadians(value)]);
break;
case 'rotateY':
_multiplyTransform(result,MatrixMath.reuseRotateYCommand,[_convertToRadians(value)]);
break;
case 'rotate':
case 'rotateZ':
_multiplyTransform(result,MatrixMath.reuseRotateZCommand,[_convertToRadians(value)]);
break;
case 'scale':
_multiplyTransform(result,MatrixMath.reuseScaleCommand,[value]);
break;
case 'scaleX':
_multiplyTransform(result,MatrixMath.reuseScaleXCommand,[value]);
break;
case 'scaleY':
_multiplyTransform(result,MatrixMath.reuseScaleYCommand,[value]);
break;
case 'translate':
_multiplyTransform(result,MatrixMath.reuseTranslate3dCommand,[value[0],value[1],value[2] || 0]);
break;
case 'translateX':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[value,0]);
break;
case 'translateY':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[0,value]);
break;
default:
throw new Error('Invalid transform name: ' + key);}});







if(Platform.OS === 'android'){
return _extends({},
style,{
transformMatrix:result,
decomposedMatrix:MatrixMath.decomposeMatrix(result)});}


return _extends({},
style,{
transformMatrix:result});}






function _multiplyTransform(
result,
matrixMathFunction,
args)
{
var matrixToApply=MatrixMath.createIdentityMatrix();
var argsWithIdentity=[matrixToApply].concat(args);
matrixMathFunction.apply(this,argsWithIdentity);
MatrixMath.multiplyInto(result,result,matrixToApply);}






function _convertToRadians(value){
var floatValue=parseFloat(value,10);
return value.indexOf('rad') > -1?floatValue:floatValue * Math.PI / 180;}


function _validateTransform(key,value,transformation){
invariant(
!value.getValue,
'You passed an Animated.Value to a normal component. ' + 
'You need to wrap that component in an Animated. For example, ' + 
'replace <View /> by <Animated.View />.');


var multivalueTransforms=[
'matrix',
'translate'];

if(multivalueTransforms.indexOf(key) !== -1){
invariant(
Array.isArray(value),
'Transform with key of %s must have an array as the value: %s',
key,
stringifySafe(transformation));}


switch(key){
case 'matrix':
invariant(
value.length === 9 || value.length === 16,
'Matrix transform must have a length of 9 (2d) or 16 (3d). ' + 
'Provided matrix has a length of %s: %s',
value.length,
stringifySafe(transformation));

break;
case 'translate':
break;
case 'rotateX':
case 'rotateY':
case 'rotateZ':
case 'rotate':
invariant(
typeof value === 'string',
'Transform with key of "%s" must be a string: %s',
key,
stringifySafe(transformation));

invariant(
value.indexOf('deg') > -1 || value.indexOf('rad') > -1,
'Rotate transform must be expressed in degrees (deg) or radians ' + 
'(rad): %s',
stringifySafe(transformation));

break;
default:
invariant(
typeof value === 'number',
'Transform with key of "%s" must be a number: %s',
key,
stringifySafe(transformation));}}




module.exports = precomputeStyle;
});
__d('MatrixMath',["invariant"],function(global, require, module, exports) {  'use strict';







var invariant=require('invariant');





var MatrixMath={
createIdentityMatrix:function(){
return [
1,0,0,0,
0,1,0,0,
0,0,1,0,
0,0,0,1];},



createCopy:function(m){
return [
m[0],m[1],m[2],m[3],
m[4],m[5],m[6],m[7],
m[8],m[9],m[10],m[11],
m[12],m[13],m[14],m[15]];},



createOrthographic:function(left,right,bottom,top,near,far){
var a=2 / (right - left);
var b=2 / (top - bottom);
var c=-2 / (far - near);

var tx=-(right + left) / (right - left);
var ty=-(top + bottom) / (top - bottom);
var tz=-(far + near) / (far - near);

return [
a,0,0,0,
0,b,0,0,
0,0,c,0,
tx,ty,tz,1];},



createFrustum:function(left,right,bottom,top,near,far){
var r_width=1 / (right - left);
var r_height=1 / (top - bottom);
var r_depth=1 / (near - far);
var x=2 * (near * r_width);
var y=2 * (near * r_height);
var A=(right + left) * r_width;
var B=(top + bottom) * r_height;
var C=(far + near) * r_depth;
var D=2 * (far * near * r_depth);
return [
x,0,0,0,
0,y,0,0,
A,B,C,-1,
0,0,D,0];},



createPerspective:function(fovInRadians,aspect,near,far){
var h=1 / Math.tan(fovInRadians);
var r_depth=1 / (near - far);
var C=(far + near) * r_depth;
var D=2 * (far * near * r_depth);
return [
h / aspect,0,0,0,
0,h,0,0,
0,0,C,-1,
0,0,D,0];},



createTranslate2d:function(x,y){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseTranslate2dCommand(mat,x,y);
return mat;},


reuseTranslate2dCommand:function(matrixCommand,x,y){
matrixCommand[12] = x;
matrixCommand[13] = y;},


reuseTranslate3dCommand:function(matrixCommand,x,y,z){
matrixCommand[12] = x;
matrixCommand[13] = y;
matrixCommand[14] = z;},


createScale:function(factor){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseScaleCommand(mat,factor);
return mat;},


reuseScaleCommand:function(matrixCommand,factor){
matrixCommand[0] = factor;
matrixCommand[5] = factor;},


reuseScale3dCommand:function(matrixCommand,x,y,z){
matrixCommand[0] = x;
matrixCommand[5] = y;
matrixCommand[10] = z;},


reusePerspectiveCommand:function(matrixCommand,p){
matrixCommand[11] = -1 / p;},


reuseScaleXCommand:function(matrixCommand,factor){
matrixCommand[0] = factor;},


reuseScaleYCommand:function(matrixCommand,factor){
matrixCommand[5] = factor;},


reuseScaleZCommand:function(matrixCommand,factor){
matrixCommand[10] = factor;},


reuseRotateXCommand:function(matrixCommand,radians){
matrixCommand[5] = Math.cos(radians);
matrixCommand[6] = Math.sin(radians);
matrixCommand[9] = -Math.sin(radians);
matrixCommand[10] = Math.cos(radians);},


reuseRotateYCommand:function(matrixCommand,amount){
matrixCommand[0] = Math.cos(amount);
matrixCommand[2] = -Math.sin(amount);
matrixCommand[8] = Math.sin(amount);
matrixCommand[10] = Math.cos(amount);},



reuseRotateZCommand:function(matrixCommand,radians){
matrixCommand[0] = Math.cos(radians);
matrixCommand[1] = Math.sin(radians);
matrixCommand[4] = -Math.sin(radians);
matrixCommand[5] = Math.cos(radians);},


createRotateZ:function(radians){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseRotateZCommand(mat,radians);
return mat;},


multiplyInto:function(out,a,b){
var a00=a[0],a01=a[1],a02=a[2],a03=a[3],
a10=a[4],a11=a[5],a12=a[6],a13=a[7],
a20=a[8],a21=a[9],a22=a[10],a23=a[11],
a30=a[12],a31=a[13],a32=a[14],a33=a[15];

var b0=b[0],b1=b[1],b2=b[2],b3=b[3];
out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];
out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];
out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];
out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;},


determinant:function(matrix){var 

m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return (
m03 * m12 * m21 * m30 - m02 * m13 * m21 * m30 - 
m03 * m11 * m22 * m30 + m01 * m13 * m22 * m30 + 
m02 * m11 * m23 * m30 - m01 * m12 * m23 * m30 - 
m03 * m12 * m20 * m31 + m02 * m13 * m20 * m31 + 
m03 * m10 * m22 * m31 - m00 * m13 * m22 * m31 - 
m02 * m10 * m23 * m31 + m00 * m12 * m23 * m31 + 
m03 * m11 * m20 * m32 - m01 * m13 * m20 * m32 - 
m03 * m10 * m21 * m32 + m00 * m13 * m21 * m32 + 
m01 * m10 * m23 * m32 - m00 * m11 * m23 * m32 - 
m02 * m11 * m20 * m33 + m01 * m12 * m20 * m33 + 
m02 * m10 * m21 * m33 - m00 * m12 * m21 * m33 - 
m01 * m10 * m22 * m33 + m00 * m11 * m22 * m33);},










inverse:function(matrix){
var det=MatrixMath.determinant(matrix);
if(!det){
return matrix;}var 


m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return [
(m12 * m23 * m31 - m13 * m22 * m31 + m13 * m21 * m32 - m11 * m23 * m32 - m12 * m21 * m33 + m11 * m22 * m33) / det,
(m03 * m22 * m31 - m02 * m23 * m31 - m03 * m21 * m32 + m01 * m23 * m32 + m02 * m21 * m33 - m01 * m22 * m33) / det,
(m02 * m13 * m31 - m03 * m12 * m31 + m03 * m11 * m32 - m01 * m13 * m32 - m02 * m11 * m33 + m01 * m12 * m33) / det,
(m03 * m12 * m21 - m02 * m13 * m21 - m03 * m11 * m22 + m01 * m13 * m22 + m02 * m11 * m23 - m01 * m12 * m23) / det,
(m13 * m22 * m30 - m12 * m23 * m30 - m13 * m20 * m32 + m10 * m23 * m32 + m12 * m20 * m33 - m10 * m22 * m33) / det,
(m02 * m23 * m30 - m03 * m22 * m30 + m03 * m20 * m32 - m00 * m23 * m32 - m02 * m20 * m33 + m00 * m22 * m33) / det,
(m03 * m12 * m30 - m02 * m13 * m30 - m03 * m10 * m32 + m00 * m13 * m32 + m02 * m10 * m33 - m00 * m12 * m33) / det,
(m02 * m13 * m20 - m03 * m12 * m20 + m03 * m10 * m22 - m00 * m13 * m22 - m02 * m10 * m23 + m00 * m12 * m23) / det,
(m11 * m23 * m30 - m13 * m21 * m30 + m13 * m20 * m31 - m10 * m23 * m31 - m11 * m20 * m33 + m10 * m21 * m33) / det,
(m03 * m21 * m30 - m01 * m23 * m30 - m03 * m20 * m31 + m00 * m23 * m31 + m01 * m20 * m33 - m00 * m21 * m33) / det,
(m01 * m13 * m30 - m03 * m11 * m30 + m03 * m10 * m31 - m00 * m13 * m31 - m01 * m10 * m33 + m00 * m11 * m33) / det,
(m03 * m11 * m20 - m01 * m13 * m20 - m03 * m10 * m21 + m00 * m13 * m21 + m01 * m10 * m23 - m00 * m11 * m23) / det,
(m12 * m21 * m30 - m11 * m22 * m30 - m12 * m20 * m31 + m10 * m22 * m31 + m11 * m20 * m32 - m10 * m21 * m32) / det,
(m01 * m22 * m30 - m02 * m21 * m30 + m02 * m20 * m31 - m00 * m22 * m31 - m01 * m20 * m32 + m00 * m21 * m32) / det,
(m02 * m11 * m30 - m01 * m12 * m30 - m02 * m10 * m31 + m00 * m12 * m31 + m01 * m10 * m32 - m00 * m11 * m32) / det,
(m01 * m12 * m20 - m02 * m11 * m20 + m02 * m10 * m21 - m00 * m12 * m21 - m01 * m10 * m22 + m00 * m11 * m22) / det];},






transpose:function(m){
return [
m[0],m[4],m[8],m[12],
m[1],m[5],m[9],m[13],
m[2],m[6],m[10],m[14],
m[3],m[7],m[11],m[15]];},






multiplyVectorByMatrix:function(
v,
m)
{var 
vx=v[0];var vy=v[1];var vz=v[2];var vw=v[3];
return [
vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12],
vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13],
vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14],
vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]];},






v3Length:function(a){
return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);},





v3Normalize:function(
vector,
v3Length)
{
var im=1 / (v3Length || MatrixMath.v3Length(vector));
return [
vector[0] * im,
vector[1] * im,
vector[2] * im];},







v3Dot:function(a,b){
return a[0] * b[0] + 
a[1] * b[1] + 
a[2] * b[2];},






v3Combine:function(
a,
b,
aScale,
bScale)
{
return [
aScale * a[0] + bScale * b[0],
aScale * a[1] + bScale * b[1],
aScale * a[2] + bScale * b[2]];},







v3Cross:function(a,b){
return [
a[1] * b[2] - a[2] * b[1],
a[2] * b[0] - a[0] * b[2],
a[0] * b[1] - a[1] * b[0]];},



















quaternionToDegreesXYZ:function(q,matrix,row){var 
qx=q[0];var qy=q[1];var qz=q[2];var qw=q[3];
var qw2=qw * qw;
var qx2=qx * qx;
var qy2=qy * qy;
var qz2=qz * qz;
var test=qx * qy + qz * qw;
var unit=qw2 + qx2 + qy2 + qz2;
var conv=180 / Math.PI;

if(test > 0.49999 * unit){
return [0,2 * Math.atan2(qx,qw) * conv,90];}

if(test < -0.49999 * unit){
return [0,-2 * Math.atan2(qx,qw) * conv,-90];}


return [
MatrixMath.roundTo3Places(
Math.atan2(2 * qx * qw - 2 * qy * qz,1 - 2 * qx2 - 2 * qz2) * conv),

MatrixMath.roundTo3Places(
Math.atan2(2 * qy * qw - 2 * qx * qz,1 - 2 * qy2 - 2 * qz2) * conv),

MatrixMath.roundTo3Places(
Math.asin(2 * qx * qy + 2 * qz * qw) * conv)];},








roundTo3Places:function(n){
var arr=n.toString().split('e');
return Math.round(arr[0] + 'e' + (arr[1]?+arr[1] - 3:3)) * 0.001;},













decomposeMatrix:function(transformMatrix){

invariant(
transformMatrix.length === 16,
'Matrix decomposition needs a list of 3d matrix values, received %s',
transformMatrix);



var perspective=[];
var quaternion=[];
var scale=[];
var skew=[];
var translation=[];



if(!transformMatrix[15]){
return;}

var matrix=[];
var perspectiveMatrix=[];
for(var i=0;i < 4;i++) {
matrix.push([]);
for(var j=0;j < 4;j++) {
var value=transformMatrix[i * 4 + j] / transformMatrix[15];
matrix[i].push(value);
perspectiveMatrix.push(j === 3?0:value);}}


perspectiveMatrix[15] = 1;


if(!MatrixMath.determinant(perspectiveMatrix)){
return;}



if(matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0){


var rightHandSide=[
matrix[0][3],
matrix[1][3],
matrix[2][3],
matrix[3][3]];




var inversePerspectiveMatrix=MatrixMath.inverse3x3(
perspectiveMatrix);

var transposedInversePerspectiveMatrix=MatrixMath.transpose4x4(
inversePerspectiveMatrix);

var perspective=MatrixMath.multiplyVectorByMatrix(
rightHandSide,
transposedInversePerspectiveMatrix);}else 

{

perspective[0] = perspective[1] = perspective[2] = 0;
perspective[3] = 1;}



for(var i=0;i < 3;i++) {
translation[i] = matrix[3][i];}




var row=[];
for(i = 0;i < 3;i++) {
row[i] = [
matrix[i][0],
matrix[i][1],
matrix[i][2]];}




scale[0] = MatrixMath.v3Length(row[0]);
row[0] = MatrixMath.v3Normalize(row[0],scale[0]);


skew[0] = MatrixMath.v3Dot(row[0],row[1]);
row[1] = MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


skew[0] = MatrixMath.v3Dot(row[0],row[1]);
row[1] = MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


scale[1] = MatrixMath.v3Length(row[1]);
row[1] = MatrixMath.v3Normalize(row[1],scale[1]);
skew[0] /= scale[1];


skew[1] = MatrixMath.v3Dot(row[0],row[2]);
row[2] = MatrixMath.v3Combine(row[2],row[0],1.0,-skew[1]);
skew[2] = MatrixMath.v3Dot(row[1],row[2]);
row[2] = MatrixMath.v3Combine(row[2],row[1],1.0,-skew[2]);


scale[2] = MatrixMath.v3Length(row[2]);
row[2] = MatrixMath.v3Normalize(row[2],scale[2]);
skew[1] /= scale[2];
skew[2] /= scale[2];




var pdum3=MatrixMath.v3Cross(row[1],row[2]);
if(MatrixMath.v3Dot(row[0],pdum3) < 0){
for(i = 0;i < 3;i++) {
scale[i] *= -1;
row[i][0] *= -1;
row[i][1] *= -1;
row[i][2] *= -1;}}




quaternion[0] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2],0));
quaternion[1] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2],0));
quaternion[2] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2],0));
quaternion[3] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2],0));

if(row[2][1] > row[1][2]){
quaternion[0] = -quaternion[0];}

if(row[0][2] > row[2][0]){
quaternion[1] = -quaternion[1];}

if(row[1][0] > row[0][1]){
quaternion[2] = -quaternion[2];}



var rotationDegrees;
if(
quaternion[0] < 0.001 && quaternion[0] >= 0 && 
quaternion[1] < 0.001 && quaternion[1] >= 0)
{

rotationDegrees = [0,0,MatrixMath.roundTo3Places(
Math.atan2(row[0][1],row[0][0]) * 180 / Math.PI)];}else 

{
rotationDegrees = MatrixMath.quaternionToDegreesXYZ(quaternion,matrix,row);}



return {
rotationDegrees:rotationDegrees,
perspective:perspective,
quaternion:quaternion,
scale:scale,
skew:skew,
translation:translation,

rotate:rotationDegrees[2],
scaleX:scale[0],
scaleY:scale[1],
translateX:translation[0],
translateY:translation[1]};}};





module.exports = MatrixMath;
});
__d('deepFreezeAndThrowOnMutationInDev',[],function(global, require, module, exports) {  'use strict';






























function deepFreezeAndThrowOnMutationInDev(object){
if(__DEV__){
if(typeof object !== 'object' || 
object === null || 
Object.isFrozen(object) || 
Object.isSealed(object)){
return;}


for(var key in object) {
if(object.hasOwnProperty(key)){
object.__defineGetter__(key,identity.bind(null,object[key]));
object.__defineSetter__(key,throwOnImmutableMutation.bind(null,key));
deepFreezeAndThrowOnMutationInDev(object[key]);}}


Object.freeze(object);
Object.seal(object);}}



function throwOnImmutableMutation(key,value){
throw Error(
'You attempted to set the key `' + key + '` with the value `' + 
JSON.stringify(value) + '` on an object that is meant to be immutable ' + 
'and has been frozen.');}



function identity(value){
return value;}


module.exports = deepFreezeAndThrowOnMutationInDev;
});
__d('ReactNativeEventEmitter',["EventPluginHub","ReactEventEmitterMixin","ReactNativeTagHandles","NodeHandle","EventConstants","merge","warning"],function(global, require, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var NodeHandle=require('NodeHandle');
var EventConstants=require('EventConstants');

var merge=require('merge');
var warning=require('warning');

var topLevelTypes=EventConstants.topLevelTypes;







var EMPTY_NATIVE_EVENT={};








var touchSubsequence=function(touches,indices){
var ret=[];
for(var i=0;i < indices.length;i++) {
ret.push(touches[indices[i]]);}

return ret;};













var removeTouchesAtIndices=function(
touches,
indices)
{
var rippedOut=[];


var temp=touches;
for(var i=0;i < indices.length;i++) {
var index=indices[i];
rippedOut.push(touches[index]);
temp[index] = null;}

var fillAt=0;
for(var j=0;j < temp.length;j++) {
var cur=temp[j];
if(cur !== null){
temp[fillAt++] = cur;}}


temp.length = fillAt;
return rippedOut;};











var ReactNativeEventEmitter=merge(ReactEventEmitterMixin,{

registrationNames:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners,











_receiveRootNodeIDEvent:function(
rootNodeID,
topLevelType,
nativeEventParam)
{
var nativeEvent=nativeEventParam || EMPTY_NATIVE_EVENT;
ReactNativeEventEmitter.handleTopLevel(
topLevelType,
rootNodeID,
rootNodeID,
nativeEvent,
nativeEvent.target);},










receiveEvent:function(
tag,
topLevelType,
nativeEventParam)
{
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
topLevelType,
nativeEventParam);},



























receiveTouches:function(
eventTopLevelType,
touches,
changedIndices)
{
var changedTouches=
eventTopLevelType === topLevelTypes.topTouchEnd || 
eventTopLevelType === topLevelTypes.topTouchCancel?
removeTouchesAtIndices(touches,changedIndices):
touchSubsequence(touches,changedIndices);

for(var jj=0;jj < changedTouches.length;jj++) {
var touch=changedTouches[jj];


touch.changedTouches = changedTouches;
touch.touches = touches;
var nativeEvent=touch;
var rootNodeID=null;
var target=nativeEvent.target;
if(target !== null && target !== undefined){
if(target < ReactNativeTagHandles.tagsStartAt){
if(__DEV__){
warning(
false,
'A view is reporting that a touch occured on tag zero.');}}else 


{
rootNodeID = NodeHandle.getRootNodeID(target);}}


ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
eventTopLevelType,
nativeEvent);}}});





module.exports = ReactNativeEventEmitter;
});
__d('ReactEventEmitterMixin',["EventPluginHub"],function(global, require, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');

function runEventQueueInBatch(events){
EventPluginHub.enqueueEvents(events);
EventPluginHub.processEventQueue();}


var ReactEventEmitterMixin={










handleTopLevel:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
var events=EventPluginHub.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget);

runEventQueueInBatch(events);}};



module.exports = ReactEventEmitterMixin;
});
__d('ReactNativeStyleAttributes',["ImageStylePropTypes","TextStylePropTypes","ViewStylePropTypes","keyMirror","matricesDiffer","sizesDiffer"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var ImageStylePropTypes=require('ImageStylePropTypes');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var keyMirror=require('keyMirror');
var matricesDiffer=require('matricesDiffer');
var sizesDiffer=require('sizesDiffer');

var ReactNativeStyleAttributes=_extends({},
keyMirror(ViewStylePropTypes),
keyMirror(TextStylePropTypes),
keyMirror(ImageStylePropTypes));


ReactNativeStyleAttributes.transformMatrix = {diff:matricesDiffer};
ReactNativeStyleAttributes.shadowOffset = {diff:sizesDiffer};


ReactNativeStyleAttributes.decomposedMatrix = 'decomposedMatrix';

module.exports = ReactNativeStyleAttributes;
});
__d('ImageStylePropTypes',["ImageResizeMode","LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var ImageResizeMode=require('ImageResizeMode');
var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');

var ImageStylePropTypes=_extends({},
LayoutPropTypes,
TransformPropTypes,{
resizeMode:ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderWidth:ReactPropTypes.number,
borderRadius:ReactPropTypes.number,
overflow:ReactPropTypes.oneOf(['visible','hidden']),



tintColor:ReactPropTypes.string,
opacity:ReactPropTypes.number});


module.exports = ImageStylePropTypes;
});
__d('ImageResizeMode',["keyMirror"],function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');





var ImageResizeMode=keyMirror({




contain:null,




cover:null,





stretch:null});


module.exports = ImageResizeMode;
});
__d('LayoutPropTypes',["ReactPropTypes"],function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');






var LayoutPropTypes={
width:ReactPropTypes.number,
height:ReactPropTypes.number,
top:ReactPropTypes.number,
left:ReactPropTypes.number,
right:ReactPropTypes.number,
bottom:ReactPropTypes.number,
margin:ReactPropTypes.number,
marginVertical:ReactPropTypes.number,
marginHorizontal:ReactPropTypes.number,
marginTop:ReactPropTypes.number,
marginBottom:ReactPropTypes.number,
marginLeft:ReactPropTypes.number,
marginRight:ReactPropTypes.number,
padding:ReactPropTypes.number,
paddingVertical:ReactPropTypes.number,
paddingHorizontal:ReactPropTypes.number,
paddingTop:ReactPropTypes.number,
paddingBottom:ReactPropTypes.number,
paddingLeft:ReactPropTypes.number,
paddingRight:ReactPropTypes.number,
borderWidth:ReactPropTypes.number,
borderTopWidth:ReactPropTypes.number,
borderRightWidth:ReactPropTypes.number,
borderBottomWidth:ReactPropTypes.number,
borderLeftWidth:ReactPropTypes.number,

position:ReactPropTypes.oneOf([
'absolute',
'relative']),



flexDirection:ReactPropTypes.oneOf([
'row',
'column']),



flexWrap:ReactPropTypes.oneOf([
'wrap',
'nowrap']),




justifyContent:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'space-between',
'space-around']),




alignItems:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'stretch']),




alignSelf:ReactPropTypes.oneOf([
'auto',
'flex-start',
'flex-end',
'center',
'stretch']),



flex:ReactPropTypes.number};


module.exports = LayoutPropTypes;
});
__d('ReactPropTypes',["ReactElement","ReactFragment","ReactPropTypeLocationNames","emptyFunction"],function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var emptyFunction=require('emptyFunction');
















































var ANONYMOUS='<<anonymous>>';

var ReactPropTypes={
array:createPrimitiveTypeChecker('array'),
bool:createPrimitiveTypeChecker('boolean'),
func:createPrimitiveTypeChecker('function'),
number:createPrimitiveTypeChecker('number'),
object:createPrimitiveTypeChecker('object'),
string:createPrimitiveTypeChecker('string'),

any:createAnyTypeChecker(),
arrayOf:createArrayOfTypeChecker,
element:createElementTypeChecker(),
instanceOf:createInstanceTypeChecker,
node:createNodeChecker(),
objectOf:createObjectOfTypeChecker,
oneOf:createEnumTypeChecker,
oneOfType:createUnionTypeChecker,
shape:createShapeTypeChecker};


function createChainableTypeChecker(validate){
function checkType(
isRequired,
props,
propName,
componentName,
location,
propFullName)
{
componentName = componentName || ANONYMOUS;
propFullName = propFullName || propName;
if(props[propName] == null){
var locationName=ReactPropTypeLocationNames[location];
if(isRequired){
return new Error(
'Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return null;}else 
{
return validate(props,propName,componentName,location,propFullName);}}



var chainedCheckType=checkType.bind(null,false);
chainedCheckType.isRequired = checkType.bind(null,true);

return chainedCheckType;}


function createPrimitiveTypeChecker(expectedType){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== expectedType){
var locationName=ReactPropTypeLocationNames[location];



var preciseType=getPreciseType(propValue);

return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + 
preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + 
expectedType + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createAnyTypeChecker(){
return createChainableTypeChecker(emptyFunction.thatReturns(null));}


function createArrayOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
if(!Array.isArray(propValue)){
var locationName=ReactPropTypeLocationNames[location];
var propType=getPropType(propValue);
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an array.'));}


for(var i=0;i < propValue.length;i++) {
var error=typeChecker(
propValue,
i,
componentName,
location,
propFullName + '[' + i + ']');

if(error instanceof Error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function createElementTypeChecker(){
function validate(props,propName,componentName,location,propFullName){
if(!ReactElement.isValidElement(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`, expected a single ReactElement.'));}


return null;}

return createChainableTypeChecker(validate);}


function createInstanceTypeChecker(expectedClass){
function validate(props,propName,componentName,location,propFullName){
if(!(props[propName] instanceof expectedClass)){
var locationName=ReactPropTypeLocationNames[location];
var expectedClassName=expectedClass.name || ANONYMOUS;
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`, expected instance of `' + expectedClassName + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createEnumTypeChecker(expectedValues){
if(!Array.isArray(expectedValues)){
return createChainableTypeChecker(function(){
return new Error('Invalid argument supplied to oneOf, expected an instance of array.');});}





function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
for(var i=0;i < expectedValues.length;i++) {
if(propValue === expectedValues[i]){
return null;}}



var locationName=ReactPropTypeLocationNames[location];
var valuesString=JSON.stringify(expectedValues);
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + 
componentName + '`, expected one of ' + valuesString + '.'));}


return createChainableTypeChecker(validate);}


function createObjectOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an object.'));}


for(var key in propValue) {
if(propValue.hasOwnProperty(key)){
var error=typeChecker(
propValue,
key,
componentName,
location,
propFullName + '.' + key);

if(error instanceof Error){
return error;}}}



return null;}

return createChainableTypeChecker(validate);}


function createUnionTypeChecker(arrayOfTypeCheckers){
if(!Array.isArray(arrayOfTypeCheckers)){
return createChainableTypeChecker(function(){
return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');});}





function validate(props,propName,componentName,location,propFullName){
for(var i=0;i < arrayOfTypeCheckers.length;i++) {
var checker=arrayOfTypeCheckers[i];
if(
checker(props,propName,componentName,location,propFullName) == null)
{
return null;}}



var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`.'));}


return createChainableTypeChecker(validate);}


function createNodeChecker(){
function validate(props,propName,componentName,location,propFullName){
if(!isNode(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`, expected a ReactNode.'));}


return null;}

return createChainableTypeChecker(validate);}


function createShapeTypeChecker(shapeTypes){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}


for(var key in shapeTypes) {
var checker=shapeTypes[key];
if(!checker){
continue;}

var error=checker(
propValue,
key,
componentName,
location,
propFullName + '.' + key);

if(error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function isNode(propValue){
switch(typeof propValue){
case 'number':
case 'string':
case 'undefined':
return true;
case 'boolean':
return !propValue;
case 'object':
if(Array.isArray(propValue)){
return propValue.every(isNode);}

if(propValue === null || ReactElement.isValidElement(propValue)){
return true;}

propValue = ReactFragment.extractIfFragment(propValue);
for(var k in propValue) {
if(!isNode(propValue[k])){
return false;}}


return true;
default:
return false;}}




function getPropType(propValue){
var propType=typeof propValue;
if(Array.isArray(propValue)){
return 'array';}

if(propValue instanceof RegExp){



return 'object';}

return propType;}




function getPreciseType(propValue){
var propType=getPropType(propValue);
if(propType === 'object'){
if(propValue instanceof Date){
return 'date';}else 
if(propValue instanceof RegExp){
return 'regexp';}}


return propType;}


module.exports = ReactPropTypes;
});
__d('TransformPropTypes',["ReactPropTypes"],function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');

var TransformPropTypes={
transform:ReactPropTypes.arrayOf(
ReactPropTypes.oneOfType([
ReactPropTypes.shape({perspective:ReactPropTypes.number}),
ReactPropTypes.shape({rotate:ReactPropTypes.string}),
ReactPropTypes.shape({rotateX:ReactPropTypes.string}),
ReactPropTypes.shape({rotateY:ReactPropTypes.string}),
ReactPropTypes.shape({rotateZ:ReactPropTypes.string}),
ReactPropTypes.shape({scale:ReactPropTypes.number}),
ReactPropTypes.shape({scaleX:ReactPropTypes.number}),
ReactPropTypes.shape({scaleY:ReactPropTypes.number}),
ReactPropTypes.shape({translateX:ReactPropTypes.number}),
ReactPropTypes.shape({translateY:ReactPropTypes.number})])),








transformMatrix:ReactPropTypes.arrayOf(ReactPropTypes.number),


rotation:ReactPropTypes.number,
scaleX:ReactPropTypes.number,
scaleY:ReactPropTypes.number,
translateX:ReactPropTypes.number,
translateY:ReactPropTypes.number};


module.exports = TransformPropTypes;
});
__d('TextStylePropTypes',["ReactPropTypes","ViewStylePropTypes"],function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');


var TextStylePropTypes=Object.assign(Object.create(ViewStylePropTypes),{
color:ReactPropTypes.string,
fontFamily:ReactPropTypes.string,
fontSize:ReactPropTypes.number,
fontStyle:ReactPropTypes.oneOf(['normal','italic']),





fontWeight:ReactPropTypes.oneOf(
['normal','bold',
'100','200','300','400','500','600','700','800','900']),




letterSpacing:ReactPropTypes.number,
lineHeight:ReactPropTypes.number,



textAlign:ReactPropTypes.oneOf(
['auto','left','right','center','justify']),




textDecorationLine:ReactPropTypes.oneOf(
['none','underline','line-through','underline line-through']),




textDecorationStyle:ReactPropTypes.oneOf(
['solid','double','dotted','dashed']),




textDecorationColor:ReactPropTypes.string,



writingDirection:ReactPropTypes.oneOf(
['auto','ltr','rtl'])});




var unsupportedProps=Object.keys({
padding:null,
paddingTop:null,
paddingLeft:null,
paddingRight:null,
paddingBottom:null,
paddingVertical:null,
paddingHorizontal:null});


for(var ii=0;ii < unsupportedProps.length;ii++) {
delete TextStylePropTypes[unsupportedProps[ii]];}


module.exports = TextStylePropTypes;
});
__d('ViewStylePropTypes',["LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');




var ViewStylePropTypes=_extends({},
LayoutPropTypes,
TransformPropTypes,{
backfaceVisibility:ReactPropTypes.oneOf(['visible','hidden']),
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderTopColor:ReactPropTypes.string,
borderRightColor:ReactPropTypes.string,
borderBottomColor:ReactPropTypes.string,
borderLeftColor:ReactPropTypes.string,
borderRadius:ReactPropTypes.number,
borderTopLeftRadius:ReactPropTypes.number,
borderTopRightRadius:ReactPropTypes.number,
borderBottomLeftRadius:ReactPropTypes.number,
borderBottomRightRadius:ReactPropTypes.number,
borderStyle:ReactPropTypes.oneOf(['solid','dotted','dashed']),
opacity:ReactPropTypes.number,
overflow:ReactPropTypes.oneOf(['visible','hidden']),
shadowColor:ReactPropTypes.string,
shadowOffset:ReactPropTypes.shape(
{width:ReactPropTypes.number,height:ReactPropTypes.number}),

shadowOpacity:ReactPropTypes.number,
shadowRadius:ReactPropTypes.number});


module.exports = ViewStylePropTypes;
});
__d('matricesDiffer',[],function(global, require, module, exports) {  'use strict';




















var matricesDiffer=function(one,two){
if(one === two){
return false;}

return !one || !two || 
one[12] !== two[12] || 
one[13] !== two[13] || 
one[14] !== two[14] || 
one[5] !== two[5] || 
one[10] !== two[10] || 
one[1] !== two[1] || 
one[2] !== two[2] || 
one[3] !== two[3] || 
one[4] !== two[4] || 
one[6] !== two[6] || 
one[7] !== two[7] || 
one[8] !== two[8] || 
one[9] !== two[9] || 
one[11] !== two[11] || 
one[15] !== two[15];};


module.exports = matricesDiffer;
});
__d('sizesDiffer',[],function(global, require, module, exports) {  'use strict';






var dummySize={width:undefined,height:undefined};

var sizesDiffer=function(one,two){
one = one || dummySize;
two = two || dummySize;
return one !== two && (
one.width !== two.width || 
one.height !== two.height);};



module.exports = sizesDiffer;
});
__d('ReactMultiChild',["ReactComponentEnvironment","ReactMultiChildUpdateTypes","ReactReconciler","ReactChildReconciler"],function(global, require, module, exports) {  'use strict';













var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');

var ReactReconciler=require('ReactReconciler');
var ReactChildReconciler=require('ReactChildReconciler');








var updateDepth=0;









var updateQueue=[];







var markupQueue=[];









function enqueueMarkup(parentID,markup,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.INSERT_MARKUP,
markupIndex:markupQueue.push(markup) - 1,
textContent:null,
fromIndex:null,
toIndex:toIndex});}











function enqueueMove(parentID,fromIndex,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.MOVE_EXISTING,
markupIndex:null,
textContent:null,
fromIndex:fromIndex,
toIndex:toIndex});}










function enqueueRemove(parentID,fromIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.REMOVE_NODE,
markupIndex:null,
textContent:null,
fromIndex:fromIndex,
toIndex:null});}










function enqueueTextContent(parentID,textContent){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.TEXT_CONTENT,
markupIndex:null,
textContent:textContent,
fromIndex:null,
toIndex:null});}








function processQueue(){
if(updateQueue.length){
ReactComponentEnvironment.processChildrenUpdates(
updateQueue,
markupQueue);

clearQueue();}}








function clearQueue(){
updateQueue.length = 0;
markupQueue.length = 0;}








var ReactMultiChild={








Mixin:{









mountChildren:function(nestedChildren,transaction,context){
var children=ReactChildReconciler.instantiateChildren(
nestedChildren,transaction,context);

this._renderedChildren = children;
var mountImages=[];
var index=0;
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex = index;
mountImages.push(mountImage);
index++;}}


return mountImages;},








updateTextContent:function(nextContent){
updateDepth++;
var errorThrown=true;
try{
var prevChildren=this._renderedChildren;

ReactChildReconciler.unmountChildren(prevChildren);

for(var name in prevChildren) {
if(prevChildren.hasOwnProperty(name)){
this._unmountChildByName(prevChildren[name],name);}}



this.setTextContent(nextContent);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},












updateChildren:function(nextNestedChildren,transaction,context){
updateDepth++;
var errorThrown=true;
try{
this._updateChildren(nextNestedChildren,transaction,context);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},















_updateChildren:function(nextNestedChildren,transaction,context){
var prevChildren=this._renderedChildren;
var nextChildren=ReactChildReconciler.updateChildren(
prevChildren,nextNestedChildren,transaction,context);

this._renderedChildren = nextChildren;
if(!nextChildren && !prevChildren){
return;}

var name;


var lastIndex=0;
var nextIndex=0;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var nextChild=nextChildren[name];
if(prevChild === nextChild){
this.moveChild(prevChild,nextIndex,lastIndex);
lastIndex = Math.max(prevChild._mountIndex,lastIndex);
prevChild._mountIndex = nextIndex;}else 
{
if(prevChild){

lastIndex = Math.max(prevChild._mountIndex,lastIndex);
this._unmountChildByName(prevChild,name);}


this._mountChildByNameAtIndex(
nextChild,name,nextIndex,transaction,context);}


nextIndex++;}


for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
this._unmountChildByName(prevChildren[name],name);}}},










unmountChildren:function(){
var renderedChildren=this._renderedChildren;
ReactChildReconciler.unmountChildren(renderedChildren);
this._renderedChildren = null;},










moveChild:function(child,toIndex,lastIndex){



if(child._mountIndex < lastIndex){
enqueueMove(this._rootNodeID,child._mountIndex,toIndex);}},










createChild:function(child,mountImage){
enqueueMarkup(this._rootNodeID,mountImage,child._mountIndex);},








removeChild:function(child){
enqueueRemove(this._rootNodeID,child._mountIndex);},








setTextContent:function(textContent){
enqueueTextContent(this._rootNodeID,textContent);},













_mountChildByNameAtIndex:function(
child,
name,
index,
transaction,
context){

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex = index;
this.createChild(child,mountImage);},











_unmountChildByName:function(child,name){
this.removeChild(child);
child._mountIndex = null;}}};






module.exports = ReactMultiChild;
});
__d('ReactChildReconciler',["ReactReconciler","flattenChildren","instantiateReactComponent","shouldUpdateReactComponent"],function(global, require, module, exports) {  'use strict';













var ReactReconciler=require('ReactReconciler');

var flattenChildren=require('flattenChildren');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');






var ReactChildReconciler={









instantiateChildren:function(nestedChildNodes,transaction,context){
var children=flattenChildren(nestedChildNodes);
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];


var childInstance=instantiateReactComponent(child,null);
children[name] = childInstance;}}


return children;},












updateChildren:function(
prevChildren,
nextNestedChildNodes,
transaction,
context){





var nextChildren=flattenChildren(nextNestedChildNodes);
if(!nextChildren && !prevChildren){
return null;}

var name;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var prevElement=prevChild && prevChild._currentElement;
var nextElement=nextChildren[name];
if(shouldUpdateReactComponent(prevElement,nextElement)){
ReactReconciler.receiveComponent(
prevChild,nextElement,transaction,context);

nextChildren[name] = prevChild;}else 
{
if(prevChild){
ReactReconciler.unmountComponent(prevChild,name);}


var nextChildInstance=instantiateReactComponent(
nextElement,
null);

nextChildren[name] = nextChildInstance;}}



for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
ReactReconciler.unmountComponent(prevChildren[name]);}}


return nextChildren;},









unmountChildren:function(renderedChildren){
for(var name in renderedChildren) {
if(renderedChildren.hasOwnProperty(name)){
var renderedChild=renderedChildren[name];
ReactReconciler.unmountComponent(renderedChild);}}}};






module.exports = ReactChildReconciler;
});
__d('flattenChildren',["traverseAllChildren","warning"],function(global, require, module, exports) {  'use strict';












var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');






function flattenSingleChildIntoContext(traverseContext,child,name){

var result=traverseContext;
var keyUnique=result[name] === undefined;
if(__DEV__){
warning(
keyUnique,
'flattenChildren(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.',
name);}


if(keyUnique && child != null){
result[name] = child;}}








function flattenChildren(children){
if(children == null){
return children;}

var result={};
traverseAllChildren(children,flattenSingleChildIntoContext,result);
return result;}


module.exports = flattenChildren;
});
__d('styleDiffer',["deepDiffer"],function(global, require, module, exports) {  'use strict';












var deepDiffer=require('deepDiffer');

function styleDiffer(a,b){
return !styleEqual(a,b);}


function styleEqual(a,b){
if(!a){
return !b;}

if(!b){
return !a;}

if(typeof a !== typeof b){
return false;}

if(typeof a === 'number'){
return a === b;}


if(Array.isArray(a)){
if(!Array.isArray(b) || a.length !== b.length){
return false;}

for(var i=0;i < a.length;++i) {
if(!styleEqual(a[i],b[i])){
return false;}}


return true;}


for(var key in a) {
if(deepDiffer(a[key],b[key])){
return false;}}



for(var key in b) {
if(!a.hasOwnProperty(key)){
return false;}}



return true;}


module.exports = styleDiffer;
});
__d('deepDiffer',[],function(global, require, module, exports) {  'use strict';















var deepDiffer=function(one,two){
if(one === two){

return false;}

if(typeof one === 'function' && typeof two === 'function'){

return false;}

if(typeof one !== 'object' || one === null){

return one !== two;}

if(typeof two !== 'object' || two === null){


return true;}

if(one.constructor !== two.constructor){
return true;}

if(Array.isArray(one)){

var len=one.length;
if(two.length !== len){
return true;}

for(var ii=0;ii < len;ii++) {
if(deepDiffer(one[ii],two[ii])){
return true;}}}else 


{
for(var key in one) {
if(deepDiffer(one[key],two[key])){
return true;}}


for(var twoKey in two) {


if(one[twoKey] === undefined && two[twoKey] !== undefined){
return true;}}}



return false;};


module.exports = deepDiffer;
});
__d('diffRawProperties',["deepDiffer"],function(global, require, module, exports) {  'use strict';












var deepDiffer=require('deepDiffer');












function diffRawProperties(
updatePayload,
prevProps,
nextProps,
validAttributes)
{
var validAttributeConfig;
var nextProp;
var prevProp;
var isScalar;
var shouldUpdate;
var differ;

if(nextProps){
for(var propKey in nextProps) {
validAttributeConfig = validAttributes[propKey];
if(!validAttributeConfig){
continue;}

prevProp = prevProps && prevProps[propKey];
nextProp = nextProps[propKey];



if(typeof prevProp === 'function'){
prevProp = true;}

if(typeof nextProp === 'function'){
nextProp = true;}


if(prevProp !== nextProp){


differ = validAttributeConfig.diff || deepDiffer;
isScalar = typeof nextProp !== 'object' || nextProp === null;
shouldUpdate = isScalar || !prevProp || differ(prevProp,nextProp);
if(shouldUpdate){
updatePayload = updatePayload || {};
updatePayload[propKey] = nextProp;}}}}








if(prevProps){
for(var propKey in prevProps) {
validAttributeConfig = validAttributes[propKey];
if(!validAttributeConfig){
continue;}

if(updatePayload && updatePayload[propKey] !== undefined){
continue;}

prevProp = prevProps[propKey];
nextProp = nextProps && nextProps[propKey];



if(typeof prevProp === 'function'){
prevProp = true;}

if(typeof nextProp === 'function'){
nextProp = true;}


if(prevProp !== nextProp){
if(nextProp === undefined){
nextProp = null;}



differ = validAttributeConfig.diff || deepDiffer;
isScalar = typeof nextProp !== 'object' || nextProp === null;
shouldUpdate = 
isScalar && 
prevProp !== nextProp || 
differ(prevProp,nextProp);
if(shouldUpdate){
updatePayload = updatePayload || {};
updatePayload[propKey] = nextProp;}}}}




return updatePayload;}


module.exports = diffRawProperties;
});
__d('RCTEventEmitter',["ReactNativeEventEmitter"],function(global, require, module, exports) {  'use strict';












var ReactNativeEventEmitter=require('ReactNativeEventEmitter');


module.exports = ReactNativeEventEmitter;
});
__d('RCTLog',["invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var invariant=require('invariant');

var levelsMap={
log:'log',
info:'info',
warn:'warn',
error:'error',
mustfix:'error'};var 


RCTLog=(function(){function RCTLog(){_classCallCheck(this,RCTLog);}_createClass(RCTLog,null,[{key:'logIfNoNativeHook',value:

function logIfNoNativeHook(){
var args=Array.prototype.slice.call(arguments);
var level=args.shift();
var logFn=levelsMap[level];
invariant(
logFn,
'Level "' + level + '" not one of ' + Object.keys(levelsMap));

if(typeof global.nativeLoggingHook === 'undefined'){

console[logFn].apply(console,args);}

return true;}}]);return RCTLog;})();



module.exports = RCTLog;
});
__d('deprecated',["Object.assign","warning"],function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var warning=require('warning');











function deprecated(fnName,newModule,ctx,fn){
var warned=false;
if(__DEV__){
var newFn=function(){
warning(
warned,



'`require' + '("react").%s` is deprecated. Please use `require' + '("%s").%s` ' + 
'instead.',
fnName,
newModule,
fnName);

warned = true;
return fn.apply(ctx,arguments);};



return assign(newFn,fn);}


return fn;}


module.exports = deprecated;
});
__d('onlyChild',["ReactElement","invariant"],function(global, require, module, exports) {  'use strict';











var ReactElement=require('ReactElement');

var invariant=require('invariant');












function onlyChild(children){
invariant(
ReactElement.isValidElement(children),
'onlyChild must be passed a children with exactly one child.');

return children;}


module.exports = onlyChild;
});
__d('ActivityIndicatorIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var GRAY='#999999';








var ActivityIndicatorIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{



animating:PropTypes.bool,



color:PropTypes.string,



hidesWhenStopped:PropTypes.bool,



size:PropTypes.oneOf([
'small',
'large']),






onLayout:PropTypes.func},


getDefaultProps:function(){
return {
animating:true,
color:GRAY,
hidesWhenStopped:true,
size:'small'};},



render:function(){var _props=
this.props;var onLayout=_props.onLayout;var style=_props.style;var props=_objectWithoutProperties(_props,['onLayout','style']);
var sizeStyle=this.props.size === 'large'?styles.sizeLarge:styles.sizeSmall;
return (
React.createElement(View,{
onLayout:onLayout,
style:[styles.container,sizeStyle,style]},
React.createElement(RCTActivityIndicatorView,props)));}});





var styles=StyleSheet.create({
container:{
alignItems:'center',
justifyContent:'center'},

sizeSmall:{
width:20,
height:20},

sizeLarge:{
width:36,
height:36}});



var RCTActivityIndicatorView=requireNativeComponent(
'RCTActivityIndicatorView',
ActivityIndicatorIOS,
{nativeOnly:{activityIndicatorViewStyle:true}});


module.exports = ActivityIndicatorIOS;
});
__d('StyleSheet',["StyleSheetRegistry","StyleSheetValidation"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var StyleSheetRegistry=require('StyleSheetRegistry');
var StyleSheetValidation=require('StyleSheetValidation');var 













































StyleSheet=(function(){function StyleSheet(){_classCallCheck(this,StyleSheet);}_createClass(StyleSheet,null,[{key:'create',value:
function create(obj){
var result={};
for(var key in obj) {
StyleSheetValidation.validateStyle(key,obj);
result[key] = StyleSheetRegistry.registerStyle(obj[key]);}

return result;}}]);return StyleSheet;})();



module.exports = StyleSheet;
});
__d('StyleSheetValidation',["ImageStylePropTypes","ReactPropTypeLocations","TextStylePropTypes","ViewStylePropTypes","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ImageStylePropTypes=require('ImageStylePropTypes');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var invariant=require('invariant');var 

StyleSheetValidation=(function(){function StyleSheetValidation(){_classCallCheck(this,StyleSheetValidation);}_createClass(StyleSheetValidation,null,[{key:'validateStyleProp',value:
function validateStyleProp(prop,style,caller){
if(!__DEV__){
return;}

if(allStylePropTypes[prop] === undefined){
var message1='"' + prop + '" is not a valid style property.';
var message2='\nValid style props: ' + 
JSON.stringify(Object.keys(allStylePropTypes).sort(),null,'  ');
styleError(message1,style,caller,message2);}

var error=allStylePropTypes[prop](
style,
prop,
caller,
ReactPropTypeLocations.prop);

if(error){
styleError(error.message,style,caller);}}},{key:'validateStyle',value:



function validateStyle(name,styles){
if(!__DEV__){
return;}

for(var prop in styles[name]) {
StyleSheetValidation.validateStyleProp(prop,styles[name],'StyleSheet ' + name);}}},{key:'addValidStylePropTypes',value:



function addValidStylePropTypes(stylePropTypes){
for(var key in stylePropTypes) {
allStylePropTypes[key] = stylePropTypes[key];}}}]);return StyleSheetValidation;})();




var styleError=function(message1,style,caller,message2){
invariant(
false,
message1 + '\n' + (caller || '<<unknown>>') + ': ' + 
JSON.stringify(style,null,'  ') + (message2 || ''));};



var allStylePropTypes={};

StyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);

module.exports = StyleSheetValidation;
});
__d('View',["NativeMethodsMixin","ReactPropTypes","NativeModules","React","ReactNativeStyleAttributes","ReactNativeViewAttributes","StyleSheetPropType","ViewStylePropTypes","createReactNativeComponentClass"],function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;
var React=require('React');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');

var stylePropType=StyleSheetPropType(ViewStylePropTypes);

var AccessibilityTraits=[
'none',
'button',
'link',
'header',
'search',
'image',
'selected',
'plays',
'key',
'text',
'summary',
'disabled',
'frequentUpdates',
'startsMedia',
'adjustable',
'allowsDirectInteraction',
'pageTurn'];






















var View=React.createClass({
mixins:[NativeMethodsMixin],





viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},


propTypes:{




accessible:PropTypes.bool,






accessibilityLabel:PropTypes.string,






accessibilityComponentType:PropTypes.oneOf([
'none',
'button',
'radiobutton_checked',
'radiobutton_unchecked']),









accessibilityLiveRegion:PropTypes.oneOf([
'none',
'polite',
'assertive']),


















importantForAccessibility:PropTypes.oneOf([
'auto',
'yes',
'no',
'no-hide-descendants']),







accessibilityTraits:PropTypes.oneOfType([
PropTypes.oneOf(AccessibilityTraits),
PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),






onAcccessibilityTap:PropTypes.func,





onMagicTap:PropTypes.func,





testID:PropTypes.string,






onMoveShouldSetResponder:PropTypes.func,
onResponderGrant:PropTypes.func,
onResponderMove:PropTypes.func,
onResponderReject:PropTypes.func,
onResponderRelease:PropTypes.func,
onResponderTerminate:PropTypes.func,
onResponderTerminationRequest:PropTypes.func,
onStartShouldSetResponder:PropTypes.func,
onStartShouldSetResponderCapture:PropTypes.func,






onLayout:PropTypes.func,































pointerEvents:PropTypes.oneOf([
'box-none',
'none',
'box-only',
'auto']),

style:stylePropType,









removeClippedSubviews:PropTypes.bool,














renderToHardwareTextureAndroid:PropTypes.bool,














shouldRasterizeIOS:PropTypes.bool,








collapsable:PropTypes.bool},


render:function(){
return React.createElement(RCTView,this.props);}});



var RCTView=createReactNativeComponentClass({
validAttributes:ReactNativeViewAttributes.RCTView,
uiViewClassName:'RCTView'});

RCTView.propTypes = View.propTypes;
if(__DEV__){
var viewConfig=RCTUIManager.viewConfigs && RCTUIManager.viewConfigs.RCTView || {};
for(var prop in viewConfig.nativeProps) {
var viewAny=View;
if(!viewAny.propTypes[prop] && !ReactNativeStyleAttributes[prop]){
throw new Error(
'View is missing propType for native prop `' + prop + '`');}}}





var ViewToExport=RCTView;
if(__DEV__){
ViewToExport = View;}


module.exports = ViewToExport;
});
__d('ReactNativeViewAttributes',["merge"],function(global, require, module, exports) {  'use strict';












var merge=require('merge');

var ReactNativeViewAttributes={};

ReactNativeViewAttributes.UIView = {
pointerEvents:true,
accessible:true,
accessibilityLabel:true,
accessibilityComponentType:true,
accessibilityLiveRegion:true,
accessibilityTraits:true,
importantForAccessibility:true,
testID:true,
renderToHardwareTextureAndroid:true,
shouldRasterizeIOS:true,
onLayout:true,
onAccessibilityTap:true,
onMagicTap:true,
collapsable:true};


ReactNativeViewAttributes.RCTView = merge(
ReactNativeViewAttributes.UIView,{






removeClippedSubviews:true});


module.exports = ReactNativeViewAttributes;
});
__d('StyleSheetPropType',["createStrictShapeTypeChecker","flattenStyle"],function(global, require, module, exports) {  'use strict';












var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var flattenStyle=require('flattenStyle');

function StyleSheetPropType(
shape)
{
var shapePropType=createStrictShapeTypeChecker(shape);
return function(props,propName,componentName,location){
var newProps=props;
if(props[propName]){

newProps = {};
newProps[propName] = flattenStyle(props[propName]);}

return shapePropType(newProps,propName,componentName,location);};}



module.exports = StyleSheetPropType;
});
__d('createStrictShapeTypeChecker',["ReactPropTypeLocationNames","invariant","merge"],function(global, require, module, exports) {  'use strict';












var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var invariant=require('invariant');
var merge=require('merge');

function createStrictShapeTypeChecker(
shapeTypes)
{
function checkType(isRequired,props,propName,componentName,location){
if(!props[propName]){
if(isRequired){
invariant(
false,
'Required object `' + propName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return;}

var propValue=props[propName];
var propType=typeof propValue;
var locationName=
location && ReactPropTypeLocationNames[location] || '(unknown)';
if(propType !== 'object'){
invariant(
false,
'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}




var allKeys=merge(props[propName],shapeTypes);
for(var key in allKeys) {
var checker=shapeTypes[key];
if(!checker){
invariant(
false,
'Invalid props.' + propName + ' key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + 
JSON.stringify(props[propName],null,'  ') + '\nValid keys: ' + 
JSON.stringify(Object.keys(shapeTypes),null,'  '));}


var error=checker(propValue,key,componentName,location);
if(error){
invariant(
false,
error.message + '\nBad object: ' + 
JSON.stringify(props[propName],null,'  '));}}}




function chainedCheckType(
props,
propName,
componentName,
location)
{
return checkType(false,props,propName,componentName,location);}

chainedCheckType.isRequired = checkType.bind(null,true);
return chainedCheckType;}


module.exports = createStrictShapeTypeChecker;
});
__d('requireNativeComponent',["verifyPropTypes","NativeModules","UnimplementedView","createReactNativeComponentClass","insetsDiffer","pointsDiffer","matricesDiffer","sizesDiffer","verifyPropTypes","warning"],function(global, require, module, exports) {  var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};










'use strict';

var RCTUIManager=require('NativeModules').UIManager;
var UnimplementedView=require('UnimplementedView');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var insetsDiffer=require('insetsDiffer');
var pointsDiffer=require('pointsDiffer');
var matricesDiffer=require('matricesDiffer');
var sizesDiffer=require('sizesDiffer');
var verifyPropTypes=require('verifyPropTypes');
var warning=require('warning');


















function requireNativeComponent(
viewName,
componentInterface,
extraConfig)
{
var viewConfig=RCTUIManager[viewName];
if(!viewConfig || !viewConfig.NativeProps){
warning(false,'Native component for "%s" does not exist',viewName);
return UnimplementedView;}

var nativeProps=_extends({},
RCTUIManager.RCTView.NativeProps,
viewConfig.NativeProps);

viewConfig.uiViewClassName = viewName;
viewConfig.validAttributes = {};
viewConfig.propTypes = componentInterface && componentInterface.propTypes;
for(var key in nativeProps) {
var differ=TypeToDifferMap[nativeProps[key]];
viewConfig.validAttributes[key] = differ?{diff:differ}:true;}

if(__DEV__){
componentInterface && verifyPropTypes(
componentInterface,
viewConfig,
extraConfig && extraConfig.nativeOnly);}


return createReactNativeComponentClass(viewConfig);}


var TypeToDifferMap={

CATransform3D:matricesDiffer,
CGPoint:pointsDiffer,
CGSize:sizesDiffer,
UIEdgeInsets:insetsDiffer};




module.exports = requireNativeComponent;
});
__d('verifyPropTypes',["ReactNativeStyleAttributes","View"],function(global, require, module, exports) {  'use strict';












var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var View=require('View');







function verifyPropTypes(
componentInterface,
viewConfig,
nativePropsToIgnore)
{
if(!viewConfig){
return;}

var componentName=componentInterface.name || 
componentInterface.displayName || 
'unknown';
if(!componentInterface.propTypes){
throw new Error(
'`' + componentName + '` has no propTypes defined`');}



var nativeProps=viewConfig.NativeProps;
for(var prop in nativeProps) {
if(!componentInterface.propTypes[prop] && 
!View.propTypes[prop] && 
!ReactNativeStyleAttributes[prop] && (
!nativePropsToIgnore || !nativePropsToIgnore[prop])){
throw new Error(
'`' + componentName + '` has no propType for native prop `' + 
viewConfig.uiViewClassName + '.' + prop + '` of native type `' + 
nativeProps[prop] + '`');}}}





module.exports = verifyPropTypes;
});
__d('UnimplementedView',["React","StyleSheet","View"],function(global, require, module, exports) {  'use strict';








var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var UnimplementedView=React.createClass({
setNativeProps:function(){},




render:function(){
return (
React.createElement(View,{style:[styles.unimplementedView,this.props.style]},
this.props.children));}});





var styles=StyleSheet.create({
unimplementedView:{
borderWidth:1,
borderColor:'red',
alignSelf:'flex-start'}});



module.exports = UnimplementedView;
});
__d('insetsDiffer',[],function(global, require, module, exports) {  'use strict';



















var dummyInsets={
top:undefined,
left:undefined,
right:undefined,
bottom:undefined};


var insetsDiffer=function(
one,
two)
{
one = one || dummyInsets;
two = two || dummyInsets;
return one !== two && (
one.top !== two.top || 
one.left !== two.left || 
one.right !== two.right || 
one.bottom !== two.bottom);};



module.exports = insetsDiffer;
});
__d('pointsDiffer',[],function(global, require, module, exports) {  'use strict';

















var dummyPoint={x:undefined,y:undefined};

var pointsDiffer=function(one,two){
one = one || dummyPoint;
two = two || dummyPoint;
return one !== two && (
one.x !== two.x || 
one.y !== two.y);};



module.exports = pointsDiffer;
});
__d('DatePickerIOS',["NativeMethodsMixin","ReactPropTypes","React","NativeModules","StyleSheet","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var RCTDatePickerIOSConsts=require('NativeModules').UIManager.RCTDatePicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var DATEPICKER='datepicker';














var DatePickerIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{



date:PropTypes.instanceOf(Date).isRequired,








onDateChange:PropTypes.func.isRequired,






maximumDate:PropTypes.instanceOf(Date),






minimumDate:PropTypes.instanceOf(Date),




mode:PropTypes.oneOf(['date','time','datetime']),




minuteInterval:PropTypes.oneOf([1,2,3,4,5,6,10,12,15,20,30]),








timeZoneOffsetInMinutes:PropTypes.number},


getDefaultProps:function(){
return {
mode:'datetime'};},



_onChange:function(event){
var nativeTimeStamp=event.nativeEvent.timestamp;
this.props.onDateChange && this.props.onDateChange(
new Date(nativeTimeStamp));

this.props.onChange && this.props.onChange(event);





var propsTimeStamp=this.props.date.getTime();
if(nativeTimeStamp !== propsTimeStamp){
this.refs[DATEPICKER].setNativeProps({
date:propsTimeStamp});}},




render:function(){
var props=this.props;
return (
React.createElement(View,{style:props.style},
React.createElement(RCTDatePickerIOS,{
ref:DATEPICKER,
style:styles.datePickerIOS,
date:props.date.getTime(),
maximumDate:
props.maximumDate?props.maximumDate.getTime():undefined,

minimumDate:
props.minimumDate?props.minimumDate.getTime():undefined,

mode:props.mode,
minuteInterval:props.minuteInterval,
timeZoneOffsetInMinutes:props.timeZoneOffsetInMinutes,
onChange:this._onChange})));}});






var styles=StyleSheet.create({
datePickerIOS:{
height:RCTDatePickerIOSConsts.ComponentHeight,
width:RCTDatePickerIOSConsts.ComponentWidth}});



var RCTDatePickerIOS=requireNativeComponent('RCTDatePicker',DatePickerIOS);

module.exports = DatePickerIOS;
});
__d('DrawerLayoutAndroid',["UnimplementedView"],function(global, require, module, exports) {  'use strict';











module.exports = require('UnimplementedView');
});
__d('Image',["EdgeInsetsPropType","ImageResizeMode","ImageStylePropTypes","NativeMethodsMixin","NativeModules","ReactPropTypes","React","ReactNativeViewAttributes","StyleSheet","StyleSheetPropType","flattenStyle","invariant","requireNativeComponent","resolveAssetSource","warning"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var ImageResizeMode=require('ImageResizeMode');
var ImageStylePropTypes=require('ImageStylePropTypes');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');

var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var requireNativeComponent=require('requireNativeComponent');
var resolveAssetSource=require('resolveAssetSource');
var warning=require('warning');

























var Image=React.createClass({
propTypes:{
style:StyleSheetPropType(ImageStylePropTypes),





source:PropTypes.oneOfType([
PropTypes.shape({
uri:PropTypes.string}),


PropTypes.number]),






defaultSource:PropTypes.shape({
uri:PropTypes.string}),





accessible:PropTypes.bool,





accessibilityLabel:PropTypes.string,








capInsets:EdgeInsetsPropType,




resizeMode:PropTypes.oneOf(['cover','contain','stretch']),




testID:PropTypes.string,




onLayout:PropTypes.func,




onLoadStart:PropTypes.func,




onProgress:PropTypes.func,




onError:PropTypes.func,




onLoad:PropTypes.func,




onLoadEnd:PropTypes.func},


statics:{
resizeMode:ImageResizeMode},


mixins:[NativeMethodsMixin],





viewConfig:{
uiViewClassName:'UIView',
validAttributes:ReactNativeViewAttributes.UIView},


render:function(){
for(var prop in cfg.nativeOnly) {
if(this.props[prop] !== undefined){
console.warn('Prop `' + prop + ' = ' + this.props[prop] + '` should ' + 
'not be set directly on Image.');}}


var source=resolveAssetSource(this.props.source) || {};
var defaultSource=this.props.defaultSource && resolveAssetSource(this.props.defaultSource) || {};var 

width=source.width;var height=source.height;
var style=flattenStyle([{width:width,height:height},styles.base,this.props.style]) || {};

var isNetwork=source.uri && source.uri.match(/^https?:/);
var RawImage=isNetwork?RCTNetworkImageView:RCTImageView;
var resizeMode=this.props.resizeMode || (style || {}).resizeMode || 'cover';
var tintColor=(style || {}).tintColor;

return (
React.createElement(RawImage,_extends({},
this.props,{
style:style,
resizeMode:resizeMode,
tintColor:tintColor,
src:source.uri,
defaultImageSrc:defaultSource.uri})));}});





var styles=StyleSheet.create({
base:{
overflow:'hidden'}});



var cfg={
nativeOnly:{
src:true,
defaultImageSrc:true,
imageTag:true,
progressHandlerRegistered:true}};


var RCTImageView=requireNativeComponent('RCTImageView',Image,cfg);
var RCTNetworkImageView=NativeModules.NetworkImageViewManager?requireNativeComponent('RCTNetworkImageView',Image,cfg):RCTImageView;

module.exports = Image;
});
__d('EdgeInsetsPropType',["ReactPropTypes","createStrictShapeTypeChecker"],function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var EdgeInsetsPropType=createStrictShapeTypeChecker({
top:PropTypes.number,
left:PropTypes.number,
bottom:PropTypes.number,
right:PropTypes.number});


module.exports = EdgeInsetsPropType;
});
__d('resolveAssetSource',["AssetRegistry","PixelRatio","Platform","NativeModules"],function(global, require, module, exports) {  'use strict';













var AssetRegistry=require('AssetRegistry');
var PixelRatio=require('PixelRatio');
var Platform=require('Platform');
var SourceCode=require('NativeModules').SourceCode;

var _serverURL;

function getDevServerURL(){
if(!__DEV__){

return null;}

if(_serverURL === undefined){
var scriptURL=SourceCode.scriptURL;
var match=scriptURL && scriptURL.match(/^https?:\/\/.*?\//);
if(match){

_serverURL = match[0];}else 
{

_serverURL = null;}}



return _serverURL;}





function getPathInArchive(asset){
if(Platform.OS === 'android'){
var assetDir=getBasePath(asset);


return (assetDir + '/' + asset.name).
toLowerCase().
replace(/\//g,'_').
replace(/([^a-z0-9_])/g,'').
replace(/^assets_/,'');}else 
{

return getScaledAssetPath(asset);}}







function getPathOnDevserver(devServerUrl,asset){
return devServerUrl + getScaledAssetPath(asset) + '?hash=' + asset.hash;}





function getBasePath(asset){


var path=asset.httpServerLocation;
if(path[0] === '/'){
path = path.substr(1);}

return path;}





function getScaledAssetPath(asset){
var scale=pickScale(asset.scales,PixelRatio.get());
var scaleSuffix=scale === 1?'':'@' + scale + 'x';
var assetDir=getBasePath(asset);
return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;}


function pickScale(scales,deviceScale){

for(var i=0;i < scales.length;i++) {
if(scales[i] >= deviceScale){
return scales[i];}}






return scales[scales.length - 1] || 1;}


function resolveAssetSource(source){
if(typeof source === 'object'){
return source;}


var asset=AssetRegistry.getAssetByID(source);
if(asset){
return assetToImageSource(asset);}


return null;}


function assetToImageSource(asset){
var devServerURL=getDevServerURL();
if(devServerURL){
return {
width:asset.width,
height:asset.height,
uri:getPathOnDevserver(devServerURL,asset),
isStatic:false};}else 

{
return {
width:asset.width,
height:asset.height,
uri:getPathInArchive(asset),
isStatic:true};}}




module.exports = resolveAssetSource;
module.exports.pickScale = pickScale;
});
__d('AssetRegistry',[],function(global, require, module, exports) {  'use strict';






var assets=[];

function registerAsset(asset){


return assets.push(asset);}


function getAssetByID(assetId){
return assets[assetId - 1];}


module.exports = {registerAsset:registerAsset,getAssetByID:getAssetByID};
});
__d('PixelRatio',["Dimensions"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var Dimensions=require('Dimensions');var 
































PixelRatio=(function(){function PixelRatio(){_classCallCheck(this,PixelRatio);}_createClass(PixelRatio,null,[{key:'get',value:


















function get(){
return Dimensions.get('window').scale;}},{key:'getFontScale',value:













function getFontScale(){
return Dimensions.get('window').fontScale || PixelRatio.get();}},{key:'getPixelSizeForLayoutSize',value:







function getPixelSizeForLayoutSize(layoutSize){
return Math.round(layoutSize * PixelRatio.get());}},{key:'startDetecting',value:



function startDetecting(){}}]);return PixelRatio;})();


module.exports = PixelRatio;
});
__d('Dimensions',["NativeModules","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var NativeModules=require('NativeModules');

var invariant=require('invariant');

var dimensions=NativeModules.UIManager.Dimensions;




if(dimensions && dimensions.windowPhysicalPixels){

dimensions = JSON.parse(JSON.stringify(dimensions));

var windowPhysicalPixels=dimensions.windowPhysicalPixels;
dimensions.window = {
width:windowPhysicalPixels.width / windowPhysicalPixels.scale,
height:windowPhysicalPixels.height / windowPhysicalPixels.scale,
scale:windowPhysicalPixels.scale,
fontScale:windowPhysicalPixels.fontScale};



delete dimensions.windowPhysicalPixels;}var 


Dimensions=(function(){function Dimensions(){_classCallCheck(this,Dimensions);}_createClass(Dimensions,null,[{key:'set',value:





function set(dims){
Object.assign(dimensions,dims);
return true;}},{key:'get',value:















function get(dim){
invariant(dimensions[dim],'No dimension set for key ' + dim);
return dimensions[dim];}}]);return Dimensions;})();



module.exports = Dimensions;
});
__d('ListView',["ListViewDataSource","React","NativeModules","NativeModules","ScrollView","ScrollResponder","StaticRenderer","react-timer-mixin/TimerMixin.js","isEmpty","logError","merge"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}



























var ListViewDataSource=require('ListViewDataSource');
var React=require('React');
var RCTUIManager=require('NativeModules').UIManager;
var RCTScrollViewManager=require('NativeModules').ScrollViewManager;
var ScrollView=require('ScrollView');
var ScrollResponder=require('ScrollResponder');
var StaticRenderer=require('StaticRenderer');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');

var isEmpty=require('isEmpty');
var logError=require('logError');
var merge=require('merge');

var PropTypes=React.PropTypes;

var DEFAULT_PAGE_SIZE=1;
var DEFAULT_INITIAL_ROWS=10;
var DEFAULT_SCROLL_RENDER_AHEAD=1000;
var DEFAULT_END_REACHED_THRESHOLD=1000;
var DEFAULT_SCROLL_CALLBACK_THROTTLE=50;
var SCROLLVIEW_REF='listviewscroll';


















































var ListView=React.createClass({
mixins:[ScrollResponder.Mixin,TimerMixin],

statics:{
DataSource:ListViewDataSource},









propTypes:_extends({},
ScrollView.propTypes,{

dataSource:PropTypes.instanceOf(ListViewDataSource).isRequired,







renderSeparator:PropTypes.func,










renderRow:PropTypes.func.isRequired,





initialListSize:PropTypes.number,





onEndReached:PropTypes.func,



onEndReachedThreshold:PropTypes.number,



pageSize:PropTypes.number,








renderFooter:PropTypes.func,
renderHeader:PropTypes.func,









renderSectionHeader:PropTypes.func,






renderScrollComponent:React.PropTypes.func.isRequired,




scrollRenderAheadDistance:React.PropTypes.number,









onChangeVisibleRows:React.PropTypes.func,





removeClippedSubviews:React.PropTypes.bool}),





getMetrics:function(){
return {
contentLength:this.scrollProperties.contentLength,
totalRows:this.props.dataSource.getRowCount(),
renderedRows:this.state.curRenderedRowsCount,
visibleRows:Object.keys(this._visibleRows).length};},







getScrollResponder:function(){
return this.refs[SCROLLVIEW_REF] && 
this.refs[SCROLLVIEW_REF].getScrollResponder && 
this.refs[SCROLLVIEW_REF].getScrollResponder();},


setNativeProps:function(props){
this.refs[SCROLLVIEW_REF].setNativeProps(props);},






getDefaultProps:function(){
return {
initialListSize:DEFAULT_INITIAL_ROWS,
pageSize:DEFAULT_PAGE_SIZE,
renderScrollComponent:function(props){return React.createElement(ScrollView,props);},
scrollRenderAheadDistance:DEFAULT_SCROLL_RENDER_AHEAD,
onEndReachedThreshold:DEFAULT_END_REACHED_THRESHOLD};},



getInitialState:function(){
return {
curRenderedRowsCount:this.props.initialListSize,
prevRenderedRowsCount:0,
highlightedRow:{}};},



getInnerViewNode:function(){
return this.refs[SCROLLVIEW_REF].getInnerViewNode();},


componentWillMount:function(){

this.scrollProperties = {
visibleLength:null,
contentLength:null,
offset:0};

this._childFrames = [];
this._visibleRows = {};},


componentDidMount:function(){var _this=this;


this.requestAnimationFrame(function(){
_this._measureAndUpdateScrollProps();});},



componentWillReceiveProps:function(nextProps){
if(this.props.dataSource !== nextProps.dataSource){
this.setState(function(state,props){
var rowsToRender=Math.min(
state.curRenderedRowsCount + props.pageSize,
props.dataSource.getRowCount());

return {
prevRenderedRowsCount:0,
curRenderedRowsCount:rowsToRender};});}},





componentDidUpdate:function(){var _this2=this;
this.requestAnimationFrame(function(){
_this2._measureAndUpdateScrollProps();});},



onRowHighlighted:function(sectionID,rowID){
this.setState({highlightedRow:{sectionID:sectionID,rowID:rowID}});},


render:function(){
var bodyComponents=[];

var dataSource=this.props.dataSource;
var allRowIDs=dataSource.rowIdentities;
var rowCount=0;
var sectionHeaderIndices=[];

var header=this.props.renderHeader && this.props.renderHeader();
var footer=this.props.renderFooter && this.props.renderFooter();
var totalIndex=header?1:0;

for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var sectionID=dataSource.sectionIdentities[sectionIdx];
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}


if(this.props.renderSectionHeader){
var shouldUpdateHeader=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.sectionHeaderShouldUpdate(sectionIdx);
bodyComponents.push(
React.createElement(StaticRenderer,{
key:'s_' + sectionID,
shouldUpdate:!!shouldUpdateHeader,
render:this.props.renderSectionHeader.bind(
null,
dataSource.getSectionHeaderData(sectionIdx),
sectionID)}));



sectionHeaderIndices.push(totalIndex++);}


for(var rowIdx=0;rowIdx < rowIDs.length;rowIdx++) {
var rowID=rowIDs[rowIdx];
var comboID=sectionID + rowID;
var shouldUpdateRow=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.rowShouldUpdate(sectionIdx,rowIdx);
var row=
React.createElement(StaticRenderer,{
key:'r_' + comboID,
shouldUpdate:!!shouldUpdateRow,
render:this.props.renderRow.bind(
null,
dataSource.getRowData(sectionIdx,rowIdx),
sectionID,
rowID,
this.onRowHighlighted)});


bodyComponents.push(row);
totalIndex++;

if(this.props.renderSeparator && (
rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)){
var adjacentRowHighlighted=
this.state.highlightedRow.sectionID === sectionID && (
this.state.highlightedRow.rowID === rowID || 
this.state.highlightedRow.rowID === rowIDs[rowIdx + 1]);

var separator=this.props.renderSeparator(
sectionID,
rowID,
adjacentRowHighlighted);

bodyComponents.push(separator);
totalIndex++;}

if(++rowCount === this.state.curRenderedRowsCount){
break;}}


if(rowCount >= this.state.curRenderedRowsCount){
break;}}var _props=






this.props;var renderScrollComponent=_props.renderScrollComponent;var props=_objectWithoutProperties(_props,['renderScrollComponent']);
if(!props.scrollEventThrottle){
props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;}

Object.assign(props,{
onScroll:this._onScroll,
stickyHeaderIndices:sectionHeaderIndices,



onKeyboardWillShow:undefined,
onKeyboardWillHide:undefined,
onKeyboardDidShow:undefined,
onKeyboardDidHide:undefined});




return React.cloneElement(renderScrollComponent(props),{
ref:SCROLLVIEW_REF},
header,bodyComponents,footer);},






_measureAndUpdateScrollProps:function(){
var scrollComponent=this.getScrollResponder();
if(!scrollComponent || !scrollComponent.getInnerViewNode){
return;}

RCTUIManager.measureLayout(
scrollComponent.getInnerViewNode(),
React.findNodeHandle(scrollComponent),
logError,
this._setScrollContentLength);

RCTUIManager.measureLayoutRelativeToParent(
React.findNodeHandle(scrollComponent),
logError,
this._setScrollVisibleLength);




RCTScrollViewManager && RCTScrollViewManager.calculateChildFrames && 
RCTScrollViewManager.calculateChildFrames(
React.findNodeHandle(scrollComponent),
this._updateChildFrames);},



_setScrollContentLength:function(left,top,width,height){
this.scrollProperties.contentLength = !this.props.horizontal?
height:width;},


_setScrollVisibleLength:function(left,top,width,height){
this.scrollProperties.visibleLength = !this.props.horizontal?
height:width;
this._updateVisibleRows();
this._renderMoreRowsIfNeeded();},


_updateChildFrames:function(childFrames){
this._updateVisibleRows(childFrames);},


_renderMoreRowsIfNeeded:function(){
if(this.scrollProperties.contentLength === null || 
this.scrollProperties.visibleLength === null || 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
return;}


var distanceFromEnd=this._getDistanceFromEnd(this.scrollProperties);
if(distanceFromEnd < this.props.scrollRenderAheadDistance){
this._pageInNewRows();}},



_pageInNewRows:function(){var _this3=this;
this.setState(function(state,props){
var rowsToRender=Math.min(
state.curRenderedRowsCount + props.pageSize,
props.dataSource.getRowCount());

return {
prevRenderedRowsCount:state.curRenderedRowsCount,
curRenderedRowsCount:rowsToRender};},

function(){
_this3._measureAndUpdateScrollProps();
_this3.setState(function(state){return {
prevRenderedRowsCount:state.curRenderedRowsCount};});});},




_getDistanceFromEnd:function(scrollProperties){
return scrollProperties.contentLength - 
scrollProperties.visibleLength - 
scrollProperties.offset;},


_updateVisibleRows:function(updatedFrames){var _this4=this;
if(!this.props.onChangeVisibleRows){
return;}

if(updatedFrames){
updatedFrames.forEach(function(newFrame){
_this4._childFrames[newFrame.index] = merge(newFrame);});}


var isVertical=!this.props.horizontal;
var dataSource=this.props.dataSource;
var visibleMin=this.scrollProperties.offset;
var visibleMax=visibleMin + this.scrollProperties.visibleLength;
var allRowIDs=dataSource.rowIdentities;

var header=this.props.renderHeader && this.props.renderHeader();
var totalIndex=header?1:0;
var visibilityChanged=false;
var changedRows={};
for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}

var sectionID=dataSource.sectionIdentities[sectionIdx];
if(this.props.renderSectionHeader){
totalIndex++;}

var visibleSection=this._visibleRows[sectionID];
if(!visibleSection){
visibleSection = {};}

for(var rowIdx=0;rowIdx < rowIDs.length;rowIdx++) {
var rowID=rowIDs[rowIdx];
var frame=this._childFrames[totalIndex];
totalIndex++;
if(!frame){
break;}

var rowVisible=visibleSection[rowID];
var min=isVertical?frame.y:frame.x;
var max=min + (isVertical?frame.height:frame.width);
if(min > visibleMax || max < visibleMin){
if(rowVisible){
visibilityChanged = true;
delete visibleSection[rowID];
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = false;}}else 

if(!rowVisible){
visibilityChanged = true;
visibleSection[rowID] = true;
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = true;}}


if(!isEmpty(visibleSection)){
this._visibleRows[sectionID] = visibleSection;}else 
if(this._visibleRows[sectionID]){
delete this._visibleRows[sectionID];}}


visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows,changedRows);},


_onScroll:function(e){
var isVertical=!this.props.horizontal;
this.scrollProperties.visibleLength = e.nativeEvent.layoutMeasurement[
isVertical?'height':'width'];

this.scrollProperties.contentLength = e.nativeEvent.contentSize[
isVertical?'height':'width'];

this.scrollProperties.offset = e.nativeEvent.contentOffset[
isVertical?'y':'x'];

this._updateVisibleRows(e.nativeEvent.updatedChildFrames);
var nearEnd=this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold;
if(nearEnd && 
this.props.onEndReached && 
this.scrollProperties.contentLength !== this._sentEndForContentLength && 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
this._sentEndForContentLength = this.scrollProperties.contentLength;
this.props.onEndReached(e);}else 
{
this._renderMoreRowsIfNeeded();}


this.props.onScroll && this.props.onScroll(e);}});



module.exports = ListView;
});
__d('ListViewDataSource',["invariant","isEmpty","warning"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}





























var invariant=require('invariant');
var isEmpty=require('isEmpty');
var warning=require('warning');

function defaultGetRowData(
dataBlob,
sectionID,
rowID)
{
return dataBlob[sectionID][rowID];}


function defaultGetSectionHeaderData(
dataBlob,
sectionID)
{
return dataBlob[sectionID];}var 













































ListViewDataSource=(function(){


























function ListViewDataSource(params){_classCallCheck(this,ListViewDataSource);
invariant(
params && typeof params.rowHasChanged === 'function',
'Must provide a rowHasChanged function.');

this._rowHasChanged = params.rowHasChanged;
this._getRowData = params.getRowData || defaultGetRowData;
this._sectionHeaderHasChanged = params.sectionHeaderHasChanged;
this._getSectionHeaderData = 
params.getSectionHeaderData || defaultGetSectionHeaderData;

this._dataBlob = null;
this._dirtyRows = [];
this._dirtySections = [];
this._cachedRowCount = 0;



this.rowIdentities = [];
this.sectionIdentities = [];}_createClass(ListViewDataSource,[{key:'cloneWithRows',value:


















function cloneWithRows(
dataBlob,
rowIdentities)
{
var rowIds=rowIdentities?[rowIdentities]:null;
if(!this._sectionHeaderHasChanged){
this._sectionHeaderHasChanged = function(){return false;};}

return this.cloneWithRowsAndSections({s1:dataBlob},['s1'],rowIds);}},{key:'cloneWithRowsAndSections',value:













function cloneWithRowsAndSections(
dataBlob,
sectionIdentities,
rowIdentities)
{
invariant(
typeof this._sectionHeaderHasChanged === 'function',
'Must provide a sectionHeaderHasChanged function with section data.');

var newSource=new ListViewDataSource({
getRowData:this._getRowData,
getSectionHeaderData:this._getSectionHeaderData,
rowHasChanged:this._rowHasChanged,
sectionHeaderHasChanged:this._sectionHeaderHasChanged});

newSource._dataBlob = dataBlob;
if(sectionIdentities){
newSource.sectionIdentities = sectionIdentities;}else 
{
newSource.sectionIdentities = Object.keys(dataBlob);}

if(rowIdentities){
newSource.rowIdentities = rowIdentities;}else 
{
newSource.rowIdentities = [];
newSource.sectionIdentities.forEach(function(sectionID){
newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));});}


newSource._cachedRowCount = countRows(newSource.rowIdentities);

newSource._calculateDirtyArrays(
this._dataBlob,
this.sectionIdentities,
this.rowIdentities);


return newSource;}},{key:'getRowCount',value:


function getRowCount(){
return this._cachedRowCount;}},{key:'rowShouldUpdate',value:





function rowShouldUpdate(sectionIndex,rowIndex){
var needsUpdate=this._dirtyRows[sectionIndex][rowIndex];
warning(needsUpdate !== undefined,
'missing dirtyBit for section, row: ' + sectionIndex + ', ' + rowIndex);
return needsUpdate;}},{key:'getRowData',value:





function getRowData(sectionIndex,rowIndex){
var sectionID=this.sectionIdentities[sectionIndex];
var rowID=this.rowIdentities[sectionIndex][rowIndex];
warning(
sectionID !== undefined && rowID !== undefined,
'rendering invalid section, row: ' + sectionIndex + ', ' + rowIndex);

return this._getRowData(this._dataBlob,sectionID,rowID);}},{key:'getRowIDForFlatIndex',value:






function getRowIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.rowIdentities[ii][accessIndex];}}


return null;}},{key:'getSectionIDForFlatIndex',value:






function getSectionIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.sectionIdentities[ii];}}


return null;}},{key:'getSectionLengths',value:





function getSectionLengths(){
var results=[];
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
results.push(this.rowIdentities[ii].length);}

return results;}},{key:'sectionHeaderShouldUpdate',value:





function sectionHeaderShouldUpdate(sectionIndex){
var needsUpdate=this._dirtySections[sectionIndex];
warning(needsUpdate !== undefined,
'missing dirtyBit for section: ' + sectionIndex);
return needsUpdate;}},{key:'getSectionHeaderData',value:





function getSectionHeaderData(sectionIndex){
if(!this._getSectionHeaderData){
return null;}

var sectionID=this.sectionIdentities[sectionIndex];
warning(sectionID !== undefined,
'renderSection called on invalid section: ' + sectionIndex);
return this._getSectionHeaderData(this._dataBlob,sectionID);}},{key:'_calculateDirtyArrays',value:





















function _calculateDirtyArrays(
prevDataBlob,
prevSectionIDs,
prevRowIDs)
{

var prevSectionsHash=keyedDictionaryFromArray(prevSectionIDs);
var prevRowsHash={};
for(var ii=0;ii < prevRowIDs.length;ii++) {
var sectionID=prevSectionIDs[ii];
warning(
!prevRowsHash[sectionID],
'SectionID appears more than once: ' + sectionID);

prevRowsHash[sectionID] = keyedDictionaryFromArray(prevRowIDs[ii]);}



this._dirtySections = [];
this._dirtyRows = [];

var dirty;
for(var sIndex=0;sIndex < this.sectionIdentities.length;sIndex++) {
var sectionID=this.sectionIdentities[sIndex];

dirty = !prevSectionsHash[sectionID];
var sectionHeaderHasChanged=this._sectionHeaderHasChanged;
if(!dirty && sectionHeaderHasChanged){
dirty = sectionHeaderHasChanged(
this._getSectionHeaderData(prevDataBlob,sectionID),
this._getSectionHeaderData(this._dataBlob,sectionID));}


this._dirtySections.push(!!dirty);

this._dirtyRows[sIndex] = [];
for(var rIndex=0;rIndex < this.rowIdentities[sIndex].length;rIndex++) {
var rowID=this.rowIdentities[sIndex][rIndex];

dirty = 
!prevSectionsHash[sectionID] || 
!prevRowsHash[sectionID][rowID] || 
this._rowHasChanged(
this._getRowData(prevDataBlob,sectionID,rowID),
this._getRowData(this._dataBlob,sectionID,rowID));

this._dirtyRows[sIndex].push(!!dirty);}}}}]);return ListViewDataSource;})();





function countRows(allRowIDs){
var totalRows=0;
for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
totalRows += rowIDs.length;}

return totalRows;}


function keyedDictionaryFromArray(arr){
if(isEmpty(arr)){
return {};}

var result={};
for(var ii=0;ii < arr.length;ii++) {
var key=arr[ii];
warning(!result[key],'Value appears more than once in array: ' + key);
result[key] = true;}

return result;}



module.exports = ListViewDataSource;
});
__d('isEmpty',[],function(global, require, module, exports) {  function 



















isEmpty(obj){
if(Array.isArray(obj)){
return obj.length === 0;}else 
if(typeof obj === 'object'){
for(var i in obj) {
return false;}

return true;}else 
{
return !obj;}}



module.exports = isEmpty;
});
__d('ScrollView',["EdgeInsetsPropType","Platform","PointPropType","NativeModules","React","ReactNativeViewAttributes","NativeModules","ScrollResponder","StyleSheet","StyleSheetPropType","View","ViewStylePropTypes","createReactNativeComponentClass","deepDiffer","dismissKeyboard","flattenStyle","insetsDiffer","invariant","pointsDiffer","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var Platform=require('Platform');
var PointPropType=require('PointPropType');
var RCTScrollView=require('NativeModules').UIManager.RCTScrollView;
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTUIManager=require('NativeModules').UIManager;
var ScrollResponder=require('ScrollResponder');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');
var View=require('View');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var dismissKeyboard=require('dismissKeyboard');
var flattenStyle=require('flattenStyle');
var insetsDiffer=require('insetsDiffer');
var invariant=require('invariant');
var pointsDiffer=require('pointsDiffer');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;

var SCROLLVIEW='ScrollView';
var INNERVIEW='InnerScrollView';
















var ScrollView=React.createClass({
propTypes:{






automaticallyAdjustContentInsets:PropTypes.bool,





contentInset:EdgeInsetsPropType,





contentOffset:PointPropType,







bounces:PropTypes.bool,






bouncesZoom:PropTypes.bool,






alwaysBounceHorizontal:PropTypes.bool,






alwaysBounceVertical:PropTypes.bool,







centerContent:PropTypes.bool,















contentContainerStyle:StyleSheetPropType(ViewStylePropTypes),







decelerationRate:PropTypes.number,




horizontal:PropTypes.bool,





directionalLockEnabled:PropTypes.bool,





canCancelContentTouches:PropTypes.bool,








keyboardDismissMode:PropTypes.oneOf([
'none',
'interactive',
'on-drag']),







keyboardShouldPersistTaps:PropTypes.bool,




maximumZoomScale:PropTypes.number,




minimumZoomScale:PropTypes.number,




onScroll:PropTypes.func,




onScrollAnimationEnd:PropTypes.func,






pagingEnabled:PropTypes.bool,





scrollEnabled:PropTypes.bool,









scrollEventThrottle:PropTypes.number,






scrollIndicatorInsets:EdgeInsetsPropType,





scrollsToTop:PropTypes.bool,



showsHorizontalScrollIndicator:PropTypes.bool,



showsVerticalScrollIndicator:PropTypes.bool,








stickyHeaderIndices:PropTypes.arrayOf(PropTypes.number),
style:StyleSheetPropType(ViewStylePropTypes),






removeClippedSubviews:PropTypes.bool,




zoomScale:PropTypes.number},


mixins:[ScrollResponder.Mixin],

getInitialState:function(){
return this.scrollResponderMixinGetInitialState();},


setNativeProps:function(props){
this.refs[SCROLLVIEW].setNativeProps(props);},








getScrollResponder:function(){
return this;},


getInnerViewNode:function(){
return React.findNodeHandle(this.refs[INNERVIEW]);},


scrollTo:function(destY,destX){

this.getScrollResponder().scrollResponderScrollTo(destX || 0,destY || 0);},


scrollWithoutAnimationTo:function(destY,destX){
RCTUIManager.scrollWithoutAnimationTo(
React.findNodeHandle(this),
destX || 0,
destY || 0);},



handleScroll:function(e){
if(__DEV__){
if(this.props.onScroll && !this.props.scrollEventThrottle){
console.log(
'You specified `onScroll` on a <ScrollView> but not ' + 
'`scrollEventThrottle`. You will only receive one event. ' + 
'Using `16` you get all the events but be aware that it may ' + 
'cause frame drops, use a bigger number if you don\'t need as ' + 
'much precision.');}}



if(Platform.OS === 'android'){
if(this.props.keyboardDismissMode === 'on-drag'){
dismissKeyboard();}}


this.scrollResponderHandleScroll(e);},


render:function(){
var contentContainerStyle=[
this.props.horizontal && styles.contentContainerHorizontal,
this.props.contentContainerStyle];

if(__DEV__ && this.props.style){
var style=flattenStyle(this.props.style);
var childLayoutProps=['alignItems','justifyContent'].
filter(function(prop){return style && style[prop] !== undefined;});
invariant(
childLayoutProps.length === 0,
'ScrollView child layout (' + JSON.stringify(childLayoutProps) + 
') must by applied through the contentContainerStyle prop.');}



var contentContainer=
React.createElement(View,{
ref:INNERVIEW,
style:contentContainerStyle,
removeClippedSubviews:this.props.removeClippedSubviews,
collapsable:false},
this.props.children);


var alwaysBounceHorizontal=
this.props.alwaysBounceHorizontal !== undefined?
this.props.alwaysBounceHorizontal:
this.props.horizontal;

var alwaysBounceVertical=
this.props.alwaysBounceVertical !== undefined?
this.props.alwaysBounceVertical:
!this.props.horizontal;

var props=_extends({},
this.props,{
alwaysBounceHorizontal:alwaysBounceHorizontal,
alwaysBounceVertical:alwaysBounceVertical,
style:[styles.base,this.props.style],
onTouchStart:this.scrollResponderHandleTouchStart,
onTouchMove:this.scrollResponderHandleTouchMove,
onTouchEnd:this.scrollResponderHandleTouchEnd,
onScrollBeginDrag:this.scrollResponderHandleScrollBeginDrag,
onScrollEndDrag:this.scrollResponderHandleScrollEndDrag,
onMomentumScrollBegin:this.scrollResponderHandleMomentumScrollBegin,
onMomentumScrollEnd:this.scrollResponderHandleMomentumScrollEnd,
onStartShouldSetResponder:this.scrollResponderHandleStartShouldSetResponder,
onStartShouldSetResponderCapture:this.scrollResponderHandleStartShouldSetResponderCapture,
onScrollShouldSetResponder:this.scrollResponderHandleScrollShouldSetResponder,
onScroll:this.handleScroll,
onResponderGrant:this.scrollResponderHandleResponderGrant,
onResponderTerminationRequest:this.scrollResponderHandleTerminationRequest,
onResponderTerminate:this.scrollResponderHandleTerminate,
onResponderRelease:this.scrollResponderHandleResponderRelease,
onResponderReject:this.scrollResponderHandleResponderReject});


var ScrollViewClass;
if(Platform.OS === 'ios'){
ScrollViewClass = RCTScrollView;}else 
if(Platform.OS === 'android'){
if(this.props.horizontal){
ScrollViewClass = AndroidHorizontalScrollView;}else 
{
ScrollViewClass = AndroidScrollView;}}


invariant(
ScrollViewClass !== undefined,
'ScrollViewClass must not be undefined');


return (
React.createElement(ScrollViewClass,_extends({},props,{ref:SCROLLVIEW}),
contentContainer));}});





var styles=StyleSheet.create({
base:{
flex:1},

contentContainerHorizontal:{
alignSelf:'flex-start',
flexDirection:'row'}});



var validAttributes=_extends({},
ReactNativeViewAttributes.UIView,{
alwaysBounceHorizontal:true,
alwaysBounceVertical:true,
automaticallyAdjustContentInsets:true,
bounces:true,
centerContent:true,
contentInset:{diff:insetsDiffer},
contentOffset:{diff:pointsDiffer},
decelerationRate:true,
horizontal:true,
keyboardDismissMode:true,
keyboardShouldPersistTaps:true,
maximumZoomScale:true,
minimumZoomScale:true,
pagingEnabled:true,
removeClippedSubviews:true,
scrollEnabled:true,
scrollIndicatorInsets:{diff:insetsDiffer},
scrollsToTop:true,
showsHorizontalScrollIndicator:true,
showsVerticalScrollIndicator:true,
stickyHeaderIndices:{diff:deepDiffer},
scrollEventThrottle:true,
zoomScale:true});


if(Platform.OS === 'android'){
var AndroidScrollView=createReactNativeComponentClass({
validAttributes:validAttributes,
uiViewClassName:'RCTScrollView'});

var AndroidHorizontalScrollView=createReactNativeComponentClass({
validAttributes:validAttributes,
uiViewClassName:'AndroidHorizontalScrollView'});}else 

if(Platform.OS === 'ios'){
var RCTScrollView=requireNativeComponent('RCTScrollView',ScrollView);}


module.exports = ScrollView;
});
__d('PointPropType',["ReactPropTypes","createStrictShapeTypeChecker"],function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var PointPropType=createStrictShapeTypeChecker({
x:PropTypes.number,
y:PropTypes.number});


module.exports = PointPropType;
});
__d('ScrollResponder',["NativeModules","Platform","RCTDeviceEventEmitter","React","Subscribable","TextInputState","warning"],function(global, require, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var Platform=require('Platform');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var Subscribable=require('Subscribable');
var TextInputState=require('TextInputState');

var RCTUIManager=NativeModules.UIManager;
var RCTScrollViewConsts=RCTUIManager.RCTScrollView.Constants;

var warning=require('warning');















































































var IS_ANIMATING_TOUCH_START_THRESHOLD_MS=16;










var ScrollResponderMixin={
mixins:[Subscribable.Mixin],
statics:RCTScrollViewConsts,
scrollResponderMixinGetInitialState:function(){
return {
isTouching:false,
lastMomentumScrollBeginTime:0,
lastMomentumScrollEndTime:0,






observedScrollSinceBecomingResponder:false,
becameResponderWhileAnimating:false};},






scrollResponderHandleScrollShouldSetResponder:function(){
return this.state.isTouching;},



























scrollResponderHandleStartShouldSetResponder:function(){
return false;},













scrollResponderHandleStartShouldSetResponderCapture:function(e){

var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(this.props.keyboardShouldPersistTaps === false && 
currentlyFocusedTextInput != null && 
e.target !== currentlyFocusedTextInput){
return true;}

return this.scrollResponderIsAnimating();},












scrollResponderHandleResponderReject:function(){
warning(false,"ScrollView doesn't take rejection well - scrolls anyway");},

















scrollResponderHandleTerminationRequest:function(){
return !this.state.observedScrollSinceBecomingResponder;},







scrollResponderHandleTouchEnd:function(e){
var nativeEvent=e.nativeEvent;
this.state.isTouching = nativeEvent.touches.length !== 0;
this.props.onTouchEnd && this.props.onTouchEnd(e);},





scrollResponderHandleResponderRelease:function(e){
this.props.onResponderRelease && this.props.onResponderRelease(e);



var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(this.props.keyboardShouldPersistTaps === false && 
currentlyFocusedTextInput != null && 
e.target !== currentlyFocusedTextInput && 
!this.state.observedScrollSinceBecomingResponder && 
!this.state.becameResponderWhileAnimating){
this.props.onScrollResponderKeyboardDismissed && 
this.props.onScrollResponderKeyboardDismissed(e);
TextInputState.blurTextInput(currentlyFocusedTextInput);}},



scrollResponderHandleScroll:function(e){
this.state.observedScrollSinceBecomingResponder = true;
this.props.onScroll && this.props.onScroll(e);},





scrollResponderHandleResponderGrant:function(e){
this.state.observedScrollSinceBecomingResponder = false;
this.props.onResponderGrant && this.props.onResponderGrant(e);
this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();},









scrollResponderHandleScrollBeginDrag:function(e){
this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);},





scrollResponderHandleScrollEndDrag:function(e){
this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);},





scrollResponderHandleMomentumScrollBegin:function(e){
this.state.lastMomentumScrollBeginTime = Date.now();
this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);},





scrollResponderHandleMomentumScrollEnd:function(e){
this.state.lastMomentumScrollEndTime = Date.now();
this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);},













scrollResponderHandleTouchStart:function(e){
this.state.isTouching = true;
this.props.onTouchStart && this.props.onTouchStart(e);},













scrollResponderHandleTouchMove:function(e){
this.props.onTouchMove && this.props.onTouchMove(e);},







scrollResponderIsAnimating:function(){
var now=Date.now();
var timeSinceLastMomentumScrollEnd=now - this.state.lastMomentumScrollEndTime;
var isAnimating=timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || 
this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;
return isAnimating;},







scrollResponderScrollTo:function(offsetX,offsetY){
if(Platform.OS === 'android'){
RCTUIManager.dispatchViewManagerCommand(
React.findNodeHandle(this),
RCTUIManager.RCTScrollView.Commands.scrollTo,
[offsetX,offsetY]);}else 

{
RCTUIManager.scrollTo(
React.findNodeHandle(this),
offsetX,
offsetY);}},








scrollResponderZoomTo:function(rect){
RCTUIManager.zoomToRect(React.findNodeHandle(this),rect);},












scrollResponderScrollNativeHandleToKeyboard:function(nodeHandle,additionalOffset,preventNegativeScrollOffset){
this.additionalScrollOffset = additionalOffset || 0;
this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;
RCTUIManager.measureLayout(
nodeHandle,
React.findNodeHandle(this.getInnerViewNode()),
this.scrollResponderTextInputFocusError,
this.scrollResponderInputMeasureAndScrollToKeyboard);},













scrollResponderInputMeasureAndScrollToKeyboard:function(left,top,width,height){
if(this.keyboardWillOpenTo){
var scrollOffsetY=
top - this.keyboardWillOpenTo.endCoordinates.screenY + height + 
this.additionalScrollOffset;





if(this.preventNegativeScrollOffset){
scrollOffsetY = Math.max(0,scrollOffsetY);}

this.scrollResponderScrollTo(0,scrollOffsetY);}

this.additionalOffset = 0;
this.preventNegativeScrollOffset = false;},


scrollResponderTextInputFocusError:function(e){
console.error('Error measuring text field: ',e);},








componentWillMount:function(){
this.keyboardWillOpenTo = null;
this.additionalScrollOffset = 0;
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillShow',this.scrollResponderKeyboardWillShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillHide',this.scrollResponderKeyboardWillHide);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidShow',this.scrollResponderKeyboardDidShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidHide',this.scrollResponderKeyboardDidHide);
warning(this.getInnerViewNode,'You need to implement getInnerViewNode in ' + 
this.constructor.displayName + ' to get full' + 
'functionality from ScrollResponder mixin. See example of ListView and' + 
' ScrollView.');},






























scrollResponderKeyboardWillShow:function(e){
this.keyboardWillOpenTo = e;
this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);},


scrollResponderKeyboardWillHide:function(e){
this.keyboardWillOpenTo = null;
this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);},


scrollResponderKeyboardDidShow:function(e){


if(e){
this.keyboardWillOpenTo = e;}

this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);},


scrollResponderKeyboardDidHide:function(){
this.keyboardWillOpenTo = null;
this.props.onKeyboardDidHide && this.props.onKeyboardDidHide();}};




var ScrollResponder={
Mixin:ScrollResponderMixin};


module.exports = ScrollResponder;
});
__d('Subscribable',["EventEmitter"],function(global, require, module, exports) {  'use strict';






















var Subscribable={};

Subscribable.Mixin = {

componentWillMount:function(){
this._subscribableSubscriptions = [];},


componentWillUnmount:function(){
this._subscribableSubscriptions.forEach(
function(subscription){return subscription.remove();});

this._subscribableSubscriptions = null;},















addListenerOn:function(
eventEmitter,
eventType,
listener,
context)
{
this._subscribableSubscriptions.push(
eventEmitter.addListener(eventType,listener,context));}};




module.exports = Subscribable;
});
__d('dismissKeyboard',["TextInputState"],function(global, require, module, exports) {  'use strict';








var TextInputState=require('TextInputState');

function dismissKeyboard(){
TextInputState.blurTextInput(TextInputState.currentlyFocusedField());}


module.exports = dismissKeyboard;
});
__d('StaticRenderer',["React"],function(global, require, module, exports) {  'use strict';












var React=require('React');

var StaticRenderer=React.createClass({
propTypes:{
shouldUpdate:React.PropTypes.bool.isRequired,
render:React.PropTypes.func.isRequired},


shouldComponentUpdate:function(nextProps){
return nextProps.shouldUpdate;},


render:function(){
return this.props.render();}});



module.exports = StaticRenderer;
});
__d('react-timer-mixin/TimerMixin.js',[],function(global, require, module, exports) {  'use strict';










var GLOBAL=typeof window === 'undefined'?global:window;

var setter=function(_setter,_clearer,array){
return function(callback,delta){
var id=_setter((function(){
_clearer.call(this,id);
callback.apply(this,arguments);}).
bind(this),delta);

if(!this[array]){
this[array] = [id];}else 
{
this[array].push(id);}

return id;};};



var clearer=function(_clearer,array){
return function(id){
if(this[array]){
var index=this[array].indexOf(id);
if(index !== -1){
this[array].splice(index,1);}}


_clearer(id);};};



var _timeouts='TimerMixin_timeouts';
var _clearTimeout=clearer(GLOBAL.clearTimeout,_timeouts);
var _setTimeout=setter(GLOBAL.setTimeout,_clearTimeout,_timeouts);

var _intervals='TimerMixin_intervals';
var _clearInterval=clearer(GLOBAL.clearInterval,_intervals);
var _setInterval=setter(GLOBAL.setInterval,function(){},_intervals);

var _immediates='TimerMixin_immediates';
var _clearImmediate=clearer(GLOBAL.clearImmediate,_immediates);
var _setImmediate=setter(GLOBAL.setImmediate,_clearImmediate,_immediates);

var _rafs='TimerMixin_rafs';
var _cancelAnimationFrame=clearer(GLOBAL.cancelAnimationFrame,_rafs);
var _requestAnimationFrame=setter(GLOBAL.requestAnimationFrame,_cancelAnimationFrame,_rafs);

var TimerMixin={
componentWillUnmount:function(){
this[_timeouts] && this[_timeouts].forEach(function(id){
GLOBAL.clearTimeout(id);});

this[_timeouts] = null;
this[_intervals] && this[_intervals].forEach(function(id){
GLOBAL.clearInterval(id);});

this[_intervals] = null;
this[_immediates] && this[_immediates].forEach(function(id){
GLOBAL.clearImmediate(id);});

this[_immediates] = null;
this[_rafs] && this[_rafs].forEach(function(id){
GLOBAL.cancelAnimationFrame(id);});

this[_rafs] = null;},


setTimeout:_setTimeout,
clearTimeout:_clearTimeout,

setInterval:_setInterval,
clearInterval:_clearInterval,

setImmediate:_setImmediate,
clearImmediate:_clearImmediate,

requestAnimationFrame:_requestAnimationFrame,
cancelAnimationFrame:_cancelAnimationFrame};


module.exports = TimerMixin;
});
__d('MapView',["EdgeInsetsPropType","NativeMethodsMixin","Platform","React","ReactNativeViewAttributes","View","createReactNativeComponentClass","deepDiffer","insetsDiffer","merge","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var View=require('View');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var insetsDiffer=require('insetsDiffer');
var merge=require('merge');
var requireNativeComponent=require('requireNativeComponent');









var MapView=React.createClass({
mixins:[NativeMethodsMixin],

checkAnnotationIds:function(annotations){

var newAnnotations=annotations.map(function(annotation){
if(!annotation.id){

annotation.id = encodeURIComponent(JSON.stringify(annotation));}


return annotation;});


this.setState({
annotations:newAnnotations});},



componentWillMount:function(){
if(this.props.annotations){
this.checkAnnotationIds(this.props.annotations);}},



componentWillReceiveProps:function(nextProps){
if(nextProps.annotations){
this.checkAnnotationIds(nextProps.annotations);}},



propTypes:{




style:View.propTypes.style,









showsUserLocation:React.PropTypes.bool,





zoomEnabled:React.PropTypes.bool,








rotateEnabled:React.PropTypes.bool,








pitchEnabled:React.PropTypes.bool,





scrollEnabled:React.PropTypes.bool,








mapType:React.PropTypes.oneOf([
'standard',
'satellite',
'hybrid']),








region:React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,





latitudeDelta:React.PropTypes.number.isRequired,
longitudeDelta:React.PropTypes.number.isRequired}),





annotations:React.PropTypes.arrayOf(React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,




animateDrop:React.PropTypes.bool,




title:React.PropTypes.string,
subtitle:React.PropTypes.string,




hasLeftCallout:React.PropTypes.bool,
hasRightCallout:React.PropTypes.bool,




onLeftCalloutPress:React.PropTypes.func,
onRightCalloutPress:React.PropTypes.func,




id:React.PropTypes.string})),






maxDelta:React.PropTypes.number,




minDelta:React.PropTypes.number,





legalLabelInsets:EdgeInsetsPropType,




onRegionChange:React.PropTypes.func,




onRegionChangeComplete:React.PropTypes.func,




onAnnotationPress:React.PropTypes.func},


_onChange:function(event){
if(event.nativeEvent.continuous){
this.props.onRegionChange && 
this.props.onRegionChange(event.nativeEvent.region);}else 
{
this.props.onRegionChangeComplete && 
this.props.onRegionChangeComplete(event.nativeEvent.region);}},



_onPress:function(event){
if(event.nativeEvent.action === 'annotation-click'){
this.props.onAnnotationPress && this.props.onAnnotationPress(event.nativeEvent.annotation);}


if(event.nativeEvent.action === 'callout-click'){
if(!this.props.annotations){
return;}



for(var i=0;i < this.props.annotations.length;i++) {
var annotation=this.props.annotations[i];
if(annotation.id === event.nativeEvent.annotationId){

if(event.nativeEvent.side === 'left'){
annotation.onLeftCalloutPress && annotation.onLeftCalloutPress(event.nativeEvent);}else 
if(event.nativeEvent.side === 'right'){
annotation.onRightCalloutPress && annotation.onRightCalloutPress(event.nativeEvent);}}}}},







render:function(){
return React.createElement(RCTMap,_extends({},this.props,{onPress:this._onPress,onChange:this._onChange}));}});



if(Platform.OS === 'android'){
var RCTMap=createReactNativeComponentClass({
validAttributes:merge(
ReactNativeViewAttributes.UIView,{
active:true,
showsUserLocation:true,
zoomEnabled:true,
rotateEnabled:true,
pitchEnabled:true,
scrollEnabled:true,
region:{diff:deepDiffer},
annotations:{diff:deepDiffer},
maxDelta:true,
minDelta:true,
legalLabelInsets:{diff:insetsDiffer}}),


uiViewClassName:'RCTMap'});}else 

{
var RCTMap=requireNativeComponent('RCTMap',MapView);}


module.exports = MapView;
});
__d('Modal',["ReactPropTypes","React","StyleSheet","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var RCTModalHostView=requireNativeComponent('RCTModalHostView',null);var 

Modal=(function(_React$Component){_inherits(Modal,_React$Component);function Modal(){_classCallCheck(this,Modal);_get(Object.getPrototypeOf(Modal.prototype),'constructor',this).apply(this,arguments);}_createClass(Modal,[{key:'render',value:
function render(){
if(this.props.visible === false){
return null;}


if(this.props.transparent){
var containerBackgroundColor={backgroundColor:'transparent'};}


return (
React.createElement(RCTModalHostView,{
animated:this.props.animated,
transparent:this.props.transparent,
style:styles.modal},
React.createElement(View,{style:[styles.container,containerBackgroundColor]},
this.props.children)));}}]);return Modal;})(React.Component);






Modal.propTypes = {
animated:PropTypes.bool,
transparent:PropTypes.bool};


var styles=StyleSheet.create({
modal:{
position:'absolute'},

container:{
left:0,
position:'absolute',
top:0}});



module.exports = Modal;
});
__d('Navigator',["NativeModules","Dimensions","InteractionMixin","Map","NavigationContext","NavigatorBreadcrumbNavigationBar","NavigatorNavigationBar","NavigatorSceneConfigs","PanResponder","React","StaticContainer.react","StyleSheet","Subscribable","react-timer-mixin/TimerMixin.js","View","clamp","flattenStyle","invariant","rebound/rebound.js"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};




























var AnimationsDebugModule=require('NativeModules').AnimationsDebugModule;
var Dimensions=require('Dimensions');
var InteractionMixin=require('InteractionMixin');
var Map=require('Map');
var NavigationContext=require('NavigationContext');
var NavigatorBreadcrumbNavigationBar=require('NavigatorBreadcrumbNavigationBar');
var NavigatorNavigationBar=require('NavigatorNavigationBar');
var NavigatorSceneConfigs=require('NavigatorSceneConfigs');
var PanResponder=require('PanResponder');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var View=require('View');

var clamp=require('clamp');
var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var rebound=require('rebound/rebound.js');

var PropTypes=React.PropTypes;




var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;
var SCENE_DISABLED_NATIVE_PROPS={
pointerEvents:'none',
style:{
top:SCREEN_HEIGHT,
bottom:-SCREEN_HEIGHT,
opacity:0}};



var __uid=0;
function getuid(){
return __uid++;}


function getRouteID(route){
if(route === null || typeof route !== 'object'){
return String(route);}


var key='__navigatorRouteID';

if(!route.hasOwnProperty(key)){
Object.defineProperty(route,key,{
enumerable:false,
configurable:false,
writable:false,
value:getuid()});}


return route[key];}



var styles=StyleSheet.create({
container:{
flex:1,
overflow:'hidden'},

defaultSceneStyle:{
position:'absolute',
left:0,
right:0,
bottom:0,
top:0},

baseScene:{
position:'absolute',
overflow:'hidden',
left:0,
right:0,
bottom:0,
top:0},

disabledScene:{
top:SCREEN_HEIGHT,
bottom:-SCREEN_HEIGHT},

transitioner:{
flex:1,
backgroundColor:'transparent',
overflow:'hidden'}});



var GESTURE_ACTIONS=[
'pop',
'jumpBack',
'jumpForward'];





























































var Navigator=React.createClass({

propTypes:{









configureScene:PropTypes.func,










renderScene:PropTypes.func.isRequired,







initialRoute:PropTypes.object,






initialRouteStack:PropTypes.arrayOf(PropTypes.object),







onWillFocus:PropTypes.func,








onDidFocus:PropTypes.func,





navigationBar:PropTypes.node,




navigator:PropTypes.object,




sceneStyle:View.propTypes.style},


statics:{
BreadcrumbNavigationBar:NavigatorBreadcrumbNavigationBar,
NavigationBar:NavigatorNavigationBar,
SceneConfigs:NavigatorSceneConfigs},


mixins:[TimerMixin,InteractionMixin,Subscribable.Mixin],

getDefaultProps:function(){
return {
configureScene:function(){return NavigatorSceneConfigs.PushFromRight;},
sceneStyle:styles.defaultSceneStyle};},



getInitialState:function(){var _this=this;
this._renderedSceneMap = new Map();

var routeStack=this.props.initialRouteStack || [this.props.initialRoute];
invariant(
routeStack.length >= 1,
'Navigator requires props.initialRoute or props.initialRouteStack.');

var initialRouteIndex=routeStack.length - 1;
if(this.props.initialRoute){
initialRouteIndex = routeStack.indexOf(this.props.initialRoute);
invariant(
initialRouteIndex !== -1,
'initialRoute is not in initialRouteStack.');}


return {
sceneConfigStack:routeStack.map(
function(route){return _this.props.configureScene(route);}),

routeStack:routeStack,
presentedIndex:initialRouteIndex,
transitionFromIndex:null,
activeGesture:null,
pendingGestureProgress:null,
transitionQueue:[]};},



componentWillMount:function(){var _this2=this;

this.__defineGetter__('navigationContext',this._getNavigationContext);

this._subRouteFocus = [];
this.parentNavigator = this.props.navigator;
this._handlers = {};
this.springSystem = new rebound.SpringSystem();
this.spring = this.springSystem.createSpring();
this.spring.setRestSpeedThreshold(0.05);
this.spring.setCurrentValue(0).setAtRest();
this.spring.addListener({
onSpringEndStateChange:function(){
if(!_this2._interactionHandle){
_this2._interactionHandle = _this2.createInteractionHandle();}},


onSpringUpdate:function(){
_this2._handleSpringUpdate();},

onSpringAtRest:function(){
_this2._completeTransition();}});


this.panGesture = PanResponder.create({
onMoveShouldSetPanResponder:this._handleMoveShouldSetPanResponder,
onPanResponderGrant:this._handlePanResponderGrant,
onPanResponderRelease:this._handlePanResponderRelease,
onPanResponderMove:this._handlePanResponderMove,
onPanResponderTerminate:this._handlePanResponderTerminate});

this._interactionHandle = null;
this._emitWillFocus(this.state.routeStack[this.state.presentedIndex]);},


componentDidMount:function(){
this._handleSpringUpdate();
this._emitDidFocus(this.state.routeStack[this.state.presentedIndex]);},


componentWillUnmount:function(){
if(this._navigationContext){
this._navigationContext.dispose();
this._navigationContext = null;}},










immediatelyResetRouteStack:function(nextRouteStack){var _this3=this;
var destIndex=nextRouteStack.length - 1;
this.setState({
routeStack:nextRouteStack,
sceneConfigStack:nextRouteStack.map(
this.props.configureScene),

presentedIndex:destIndex,
activeGesture:null,
transitionFromIndex:null,
transitionQueue:[]},
function(){
_this3._handleSpringUpdate();});},



_transitionTo:function(destIndex,velocity,jumpSpringTo,cb){
if(destIndex === this.state.presentedIndex){
return;}

if(this.state.transitionFromIndex !== null){
this.state.transitionQueue.push({
destIndex:destIndex,
velocity:velocity,
cb:cb});

return;}

this.state.transitionFromIndex = this.state.presentedIndex;
this.state.presentedIndex = destIndex;
this.state.transitionCb = cb;
this._onAnimationStart();
if(AnimationsDebugModule){
AnimationsDebugModule.startRecordingFps();}

var sceneConfig=this.state.sceneConfigStack[this.state.transitionFromIndex] || 
this.state.sceneConfigStack[this.state.presentedIndex];
invariant(
sceneConfig,
'Cannot configure scene at index ' + this.state.transitionFromIndex);

if(jumpSpringTo != null){
this.spring.setCurrentValue(jumpSpringTo);}

this.spring.setOvershootClampingEnabled(true);
this.spring.getSpringConfig().friction = sceneConfig.springFriction;
this.spring.getSpringConfig().tension = sceneConfig.springTension;
this.spring.setVelocity(velocity || sceneConfig.defaultTransitionVelocity);
this.spring.setEndValue(1);},






_handleSpringUpdate:function(){

if(this.state.transitionFromIndex != null){
this._transitionBetween(
this.state.transitionFromIndex,
this.state.presentedIndex,
this.spring.getCurrentValue());}else 

if(this.state.activeGesture != null){
var presentedToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(
this.state.presentedIndex,
presentedToIndex,
this.spring.getCurrentValue());}},







_completeTransition:function(){
if(this.spring.getCurrentValue() !== 1 && this.spring.getCurrentValue() !== 0){


if(this.state.pendingGestureProgress){
this.state.pendingGestureProgress = null;}

return;}

this._onAnimationEnd();
var presentedIndex=this.state.presentedIndex;
var didFocusRoute=this._subRouteFocus[presentedIndex] || this.state.routeStack[presentedIndex];
this._emitDidFocus(didFocusRoute);
if(AnimationsDebugModule){
AnimationsDebugModule.stopRecordingFps(Date.now());}

this.state.transitionFromIndex = null;
this.spring.setCurrentValue(0).setAtRest();
this._hideScenes();
if(this.state.transitionCb){
this.state.transitionCb();
this.state.transitionCb = null;}

if(this._interactionHandle){
this.clearInteractionHandle(this._interactionHandle);
this._interactionHandle = null;}

if(this.state.pendingGestureProgress){


var gestureToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gestureToIndex);
this.spring.setEndValue(this.state.pendingGestureProgress);
return;}

if(this.state.transitionQueue.length){
var queuedTransition=this.state.transitionQueue.shift();
this._enableScene(queuedTransition.destIndex);
this._emitWillFocus(this.state.routeStack[queuedTransition.destIndex]);
this._transitionTo(
queuedTransition.destIndex,
queuedTransition.velocity,
null,
queuedTransition.cb);}},




_emitDidFocus:function(route){
this.navigationContext.emit('didfocus',{route:route});

if(this.props.onDidFocus){
this.props.onDidFocus(route);}},



_emitWillFocus:function(route){
this.navigationContext.emit('willfocus',{route:route});

var navBar=this._navBar;
if(navBar && navBar.handleWillFocus){
navBar.handleWillFocus(route);}

if(this.props.onWillFocus){
this.props.onWillFocus(route);}},






_hideScenes:function(){
var gesturingToIndex=null;
if(this.state.activeGesture){
gesturingToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

for(var i=0;i < this.state.routeStack.length;i++) {
if(i === this.state.presentedIndex || 
i === this.state.transitionFromIndex || 
i === gesturingToIndex){
continue;}

this._disableScene(i);}},






_disableScene:function(sceneIndex){
this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(SCENE_DISABLED_NATIVE_PROPS);},





_enableScene:function(sceneIndex){

var sceneStyle=flattenStyle([styles.baseScene,this.props.sceneStyle]);

var enabledSceneNativeProps={
pointerEvents:'auto',
style:{
top:sceneStyle.top,
bottom:sceneStyle.bottom}};


if(sceneIndex !== this.state.transitionFromIndex && 
sceneIndex !== this.state.presentedIndex){


enabledSceneNativeProps.style.opacity = 0;}

this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(enabledSceneNativeProps);},


_onAnimationStart:function(){
var fromIndex=this.state.presentedIndex;
var toIndex=this.state.presentedIndex;
if(this.state.transitionFromIndex != null){
fromIndex = this.state.transitionFromIndex;}else 
if(this.state.activeGesture){
toIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

this._setRenderSceneToHarwareTextureAndroid(fromIndex,true);
this._setRenderSceneToHarwareTextureAndroid(toIndex,true);
var navBar=this._navBar;
if(navBar && navBar.onAnimationStart){
navBar.onAnimationStart(fromIndex,toIndex);}},



_onAnimationEnd:function(){
var max=this.state.routeStack.length - 1;
for(var index=0;index <= max;index++) {
this._setRenderSceneToHarwareTextureAndroid(index,false);}


var navBar=this._navBar;
if(navBar && navBar.onAnimationEnd){
navBar.onAnimationEnd();}},



_setRenderSceneToHarwareTextureAndroid:function(sceneIndex,shouldRenderToHardwareTexture){
var viewAtIndex=this.refs['scene_' + sceneIndex];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}

viewAtIndex.setNativeProps({renderToHardwareTextureAndroid:shouldRenderToHardwareTexture});},


_handleTouchStart:function(){
this._eligibleGestures = GESTURE_ACTIONS;},


_handleMoveShouldSetPanResponder:function(e,gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
this._expectingGestureGrant = this._matchGestureAction(this._eligibleGestures,sceneConfig.gestures,gestureState);
return !!this._expectingGestureGrant;},


_doesGestureOverswipe:function(gestureName){
var wouldOverswipeBack=this.state.presentedIndex <= 0 && (
gestureName === 'pop' || gestureName === 'jumpBack');
var wouldOverswipeForward=this.state.presentedIndex >= this.state.routeStack.length - 1 && 
gestureName === 'jumpForward';
return wouldOverswipeForward || wouldOverswipeBack;},


_handlePanResponderGrant:function(e,gestureState){
invariant(
this._expectingGestureGrant,
'Responder granted unexpectedly.');

this._attachGesture(this._expectingGestureGrant);
this._onAnimationStart();
this._expectingGestureGrant = null;},


_deltaForGestureAction:function(gestureAction){
switch(gestureAction){
case 'pop':
case 'jumpBack':
return -1;
case 'jumpForward':
return 1;
default:
invariant(false,'Unsupported gesture action ' + gestureAction);
return;}},



_handlePanResponderRelease:function(e,gestureState){var _this4=this;
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
var releaseGestureAction=this.state.activeGesture;
if(!releaseGestureAction){

return;}

var releaseGesture=sceneConfig.gestures[releaseGestureAction];
var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
if(this.spring.getCurrentValue() === 0){

this.spring.setCurrentValue(0).setAtRest();
this._completeTransition();
return;}

var isTravelVertical=releaseGesture.direction === 'top-to-bottom' || releaseGesture.direction === 'bottom-to-top';
var isTravelInverted=releaseGesture.direction === 'right-to-left' || releaseGesture.direction === 'bottom-to-top';
var velocity,gestureDistance;
if(isTravelVertical){
velocity = isTravelInverted?-gestureState.vy:gestureState.vy;
gestureDistance = isTravelInverted?-gestureState.dy:gestureState.dy;}else 
{
velocity = isTravelInverted?-gestureState.vx:gestureState.vx;
gestureDistance = isTravelInverted?-gestureState.dx:gestureState.dx;}

var transitionVelocity=clamp(-10,velocity,10);
if(Math.abs(velocity) < releaseGesture.notMoving){

var hasGesturedEnoughToComplete=gestureDistance > releaseGesture.fullDistance * releaseGesture.stillCompletionRatio;
transitionVelocity = hasGesturedEnoughToComplete?releaseGesture.snapVelocity:-releaseGesture.snapVelocity;}

if(transitionVelocity < 0 || this._doesGestureOverswipe(releaseGestureAction)){


if(this.state.transitionFromIndex == null){

var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
-transitionVelocity,
1 - this.spring.getCurrentValue());}}else 


{

this._emitWillFocus(this.state.routeStack[destIndex]);
this._transitionTo(
destIndex,
transitionVelocity,
null,
function(){
if(releaseGestureAction === 'pop'){
_this4._cleanScenesPastIndex(destIndex);}});}




this._detachGesture();},


_handlePanResponderTerminate:function(e,gestureState){
var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._detachGesture();
var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
null,
1 - this.spring.getCurrentValue());},



_attachGesture:function(gestureId){
this.state.activeGesture = gestureId;
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gesturingToIndex);},


_detachGesture:function(){
this.state.activeGesture = null;
this.state.pendingGestureProgress = null;
this._hideScenes();},


_handlePanResponderMove:function(e,gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
if(this.state.activeGesture){
var gesture=sceneConfig.gestures[this.state.activeGesture];
return this._moveAttachedGesture(gesture,gestureState);}

var matchedGesture=this._matchGestureAction(GESTURE_ACTIONS,sceneConfig.gestures,gestureState);
if(matchedGesture){
this._attachGesture(matchedGesture);}},



_moveAttachedGesture:function(gesture,gestureState){
var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var distance=isTravelVertical?gestureState.dy:gestureState.dx;
distance = isTravelInverted?-distance:distance;
var gestureDetectMovement=gesture.gestureDetectMovement;
var nextProgress=(distance - gestureDetectMovement) / (
gesture.fullDistance - gestureDetectMovement);
if(nextProgress < 0 && gesture.isDetachable){
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(this.state.presentedIndex,gesturingToIndex,0);
this._detachGesture();
if(this.state.pendingGestureProgress != null){
this.spring.setCurrentValue(0);}

return;}

if(this._doesGestureOverswipe(this.state.activeGesture)){
var frictionConstant=gesture.overswipe.frictionConstant;
var frictionByDistance=gesture.overswipe.frictionByDistance;
var frictionRatio=1 / (frictionConstant + Math.abs(nextProgress) * frictionByDistance);
nextProgress *= frictionRatio;}

nextProgress = clamp(0,nextProgress,1);
if(this.state.transitionFromIndex != null){
this.state.pendingGestureProgress = nextProgress;}else 
if(this.state.pendingGestureProgress){
this.spring.setEndValue(nextProgress);}else 
{
this.spring.setCurrentValue(nextProgress);}},



_matchGestureAction:function(eligibleGestures,gestures,gestureState){var _this5=this;
if(!gestures){
return null;}

var matchedGesture=null;
eligibleGestures.some(function(gestureName,gestureIndex){
var gesture=gestures[gestureName];
if(!gesture){
return;}

if(gesture.overswipe == null && _this5._doesGestureOverswipe(gestureName)){

return false;}

var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var currentLoc=isTravelVertical?gestureState.moveY:gestureState.moveX;
var travelDist=isTravelVertical?gestureState.dy:gestureState.dx;
var oppositeAxisTravelDist=
isTravelVertical?gestureState.dx:gestureState.dy;
var edgeHitWidth=gesture.edgeHitWidth;
if(isTravelInverted){
currentLoc = -currentLoc;
travelDist = -travelDist;
oppositeAxisTravelDist = -oppositeAxisTravelDist;
edgeHitWidth = isTravelVertical?
-(SCREEN_HEIGHT - edgeHitWidth):
-(SCREEN_WIDTH - edgeHitWidth);}

var moveStartedInRegion=gesture.edgeHitWidth == null || 
currentLoc < edgeHitWidth;
if(!moveStartedInRegion){
return false;}

var moveTravelledFarEnough=travelDist >= gesture.gestureDetectMovement;
if(!moveTravelledFarEnough){
return false;}

var directionIsCorrect=Math.abs(travelDist) > Math.abs(oppositeAxisTravelDist) * gesture.directionRatio;
if(directionIsCorrect){
matchedGesture = gestureName;
return true;}else 
{
_this5._eligibleGestures = _this5._eligibleGestures.slice().splice(gestureIndex,1);}});


return matchedGesture;},


_transitionSceneStyle:function(fromIndex,toIndex,progress,index){
var viewAtIndex=this.refs['scene_' + index];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}


var sceneConfigIndex=fromIndex < toIndex?toIndex:fromIndex;
var sceneConfig=this.state.sceneConfigStack[sceneConfigIndex];

if(!sceneConfig){
sceneConfig = this.state.sceneConfigStack[sceneConfigIndex - 1];}

var styleToUse={};
var useFn=index < fromIndex || index < toIndex?
sceneConfig.animationInterpolators.out:
sceneConfig.animationInterpolators.into;
var directionAdjustedProgress=fromIndex < toIndex?progress:1 - progress;
var didChange=useFn(styleToUse,directionAdjustedProgress);
if(didChange){
viewAtIndex.setNativeProps({style:styleToUse});}},



_transitionBetween:function(fromIndex,toIndex,progress){
this._transitionSceneStyle(fromIndex,toIndex,progress,fromIndex);
this._transitionSceneStyle(fromIndex,toIndex,progress,toIndex);
var navBar=this._navBar;
if(navBar && navBar.updateProgress && toIndex >= 0 && fromIndex >= 0){
navBar.updateProgress(progress,fromIndex,toIndex);}},



_handleResponderTerminationRequest:function(){
return false;},


_getDestIndexWithinBounds:function(n){
var currentIndex=this.state.presentedIndex;
var destIndex=currentIndex + n;
invariant(
destIndex >= 0,
'Cannot jump before the first route.');

var maxIndex=this.state.routeStack.length - 1;
invariant(
maxIndex >= destIndex,
'Cannot jump past the last route.');

return destIndex;},


_jumpN:function(n){
var destIndex=this._getDestIndexWithinBounds(n);
this._enableScene(destIndex);
this._emitWillFocus(this.state.routeStack[destIndex]);
this._transitionTo(destIndex);},


jumpTo:function(route){
var destIndex=this.state.routeStack.indexOf(route);
invariant(
destIndex !== -1,
'Cannot jump to route that is not in the route stack');

this._jumpN(destIndex - this.state.presentedIndex);},


jumpForward:function(){
this._jumpN(1);},


jumpBack:function(){
this._jumpN(-1);},


push:function(route){var _this6=this;
invariant(!!route,'Must supply route to push');
var activeLength=this.state.presentedIndex + 1;
var activeStack=this.state.routeStack.slice(0,activeLength);
var activeAnimationConfigStack=this.state.sceneConfigStack.slice(0,activeLength);
var nextStack=activeStack.concat([route]);
var destIndex=nextStack.length - 1;
var nextAnimationConfigStack=activeAnimationConfigStack.concat([
this.props.configureScene(route)]);

this._emitWillFocus(nextStack[destIndex]);
this.setState({
routeStack:nextStack,
sceneConfigStack:nextAnimationConfigStack},
function(){
_this6._enableScene(destIndex);
_this6._transitionTo(destIndex);});},



_popN:function(n){var _this7=this;
if(n === 0){
return;}

invariant(
this.state.presentedIndex - n >= 0,
'Cannot pop below zero');

var popIndex=this.state.presentedIndex - n;
this._enableScene(popIndex);
this._emitWillFocus(this.state.routeStack[popIndex]);
this._transitionTo(
popIndex,
null,
null,
function(){
_this7._cleanScenesPastIndex(popIndex);});},




pop:function(){
if(this.state.transitionQueue.length){






return;}


if(this.state.presentedIndex > 0){
this._popN(1);}},









replaceAtIndex:function(route,index,cb){var _this8=this;
invariant(!!route,'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}


var nextRouteStack=this.state.routeStack.slice();
var nextAnimationModeStack=this.state.sceneConfigStack.slice();
nextRouteStack[index] = route;
nextAnimationModeStack[index] = this.props.configureScene(route);

if(index === this.state.presentedIndex){
this._emitWillFocus(route);}

this.setState({
routeStack:nextRouteStack,
sceneConfigStack:nextAnimationModeStack},
function(){
if(index === _this8.state.presentedIndex){
_this8._emitDidFocus(route);}

cb && cb();});},






replace:function(route){
this.replaceAtIndex(route,this.state.presentedIndex);},





replacePrevious:function(route){
this.replaceAtIndex(route,this.state.presentedIndex - 1);},


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);},


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1,
'Calling popToRoute for a route that doesn\'t exist!');

var numToPop=this.state.presentedIndex - indexOfRoute;
this._popN(numToPop);},


replacePreviousAndPop:function(route){
if(this.state.routeStack.length < 2){
return;}

this.replacePrevious(route);
this.pop();},


resetTo:function(route){var _this9=this;
invariant(!!route,'Must supply route to push');
this.replaceAtIndex(route,0,function(){


if(_this9.state.presentedIndex > 0){
_this9._popN(_this9.state.presentedIndex);}});},




getCurrentRoutes:function(){

return this.state.routeStack.slice();},


_cleanScenesPastIndex:function(index){
var newStackLength=index + 1;

if(newStackLength < this.state.routeStack.length){
this.setState({
sceneConfigStack:this.state.sceneConfigStack.slice(0,newStackLength),
routeStack:this.state.routeStack.slice(0,newStackLength)});}},




_renderScene:function(route,i){var _this10=this;
var disabledSceneStyle=null;
var disabledScenePointerEvents='auto';
if(i !== this.state.presentedIndex){
disabledSceneStyle = styles.disabledScene;
disabledScenePointerEvents = 'none';}

return (
React.createElement(View,{
key:'scene_' + getRouteID(route),
ref:'scene_' + i,
onStartShouldSetResponderCapture:function(){
return _this10.state.transitionFromIndex != null || _this10.state.transitionFromIndex != null;},

pointerEvents:disabledScenePointerEvents,
style:[styles.baseScene,this.props.sceneStyle,disabledSceneStyle]},
this.props.renderScene(
route,
this)));},





_renderNavigationBar:function(){var _this11=this;
if(!this.props.navigationBar){
return null;}

return React.cloneElement(this.props.navigationBar,{
ref:function(navBar){_this11._navBar = navBar;},
navigator:this,
navState:this.state});},



render:function(){var _this12=this;
var newRenderedSceneMap=new Map();
var scenes=this.state.routeStack.map(function(route,index){
var renderedScene;
if(_this12._renderedSceneMap.has(route) && 
index !== _this12.state.presentedIndex){
renderedScene = _this12._renderedSceneMap.get(route);}else 
{
renderedScene = _this12._renderScene(route,index);}

newRenderedSceneMap.set(route,renderedScene);
return renderedScene;});

this._renderedSceneMap = newRenderedSceneMap;
return (
React.createElement(View,{style:[styles.container,this.props.style]},
React.createElement(View,_extends({
style:styles.transitioner},
this.panGesture.panHandlers,{
onTouchStart:this._handleTouchStart,
onResponderTerminationRequest:
this._handleResponderTerminationRequest}),

scenes),

this._renderNavigationBar()));},




_getNavigationContext:function(){
if(!this._navigationContext){
this._navigationContext = new NavigationContext();}

return this._navigationContext;}});



module.exports = Navigator;
});
__d('InteractionMixin',["InteractionManager"],function(global, require, module, exports) {  'use strict';







var InteractionManager=require('InteractionManager');






var InteractionMixin={
componentWillUnmount:function(){
while(this._interactionMixinHandles.length) {
InteractionManager.clearInteractionHandle(
this._interactionMixinHandles.pop());}},




_interactionMixinHandles:[],

createInteractionHandle:function(){
var handle=InteractionManager.createInteractionHandle();
this._interactionMixinHandles.push(handle);
return handle;},


clearInteractionHandle:function(clearHandle){
InteractionManager.clearInteractionHandle(clearHandle);
this._interactionMixinHandles = this._interactionMixinHandles.filter(
function(handle){return handle !== clearHandle;});},








runAfterInteractions:function(callback){
InteractionManager.runAfterInteractions(callback);}};



module.exports = InteractionMixin;
});
__d('NavigationContext',["NavigationEvent","EventSubscription","NavigationEventEmitter","emptyFunction","invariant"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

























'use strict';

var NavigationEventEmitter=require('NavigationEventEmitter');

var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 







NavigationContext=(function(){



function NavigationContext(){_classCallCheck(this,NavigationContext);
this._eventEmitter = new NavigationEventEmitter(this);
this._currentRoute = null;
this.addListener('willfocus',this._onFocus,this);
this.addListener('didfocus',this._onFocus,this);}_createClass(NavigationContext,[{key:'addListener',value:








function addListener(
eventType,
listener,
context)
{
var emitter=this._eventEmitter;
if(emitter){
return emitter.addListener(eventType,listener,context);}else 
{
return {remove:emptyFunction};}}},{key:'emit',value:



function emit(eventType,data,didEmitCallback){
var emitter=this._eventEmitter;
if(emitter){
emitter.emit(eventType,data,didEmitCallback);}}},{key:'dispose',value:



function dispose(){
var emitter=this._eventEmitter;
if(emitter){

emitter.removeAllListeners();
this._eventEmitter = null;
this._currentRoute = null;}}},{key:'_onFocus',value:



function _onFocus(event){
invariant(
event.data && event.data.hasOwnProperty('route'),
'didfocus event should provide route');

this._currentRoute = event.data.route;}},{key:'currentRoute',get:function(){return this._currentRoute;}}]);return NavigationContext;})();



module.exports = NavigationContext;
});
__d('NavigationEvent',["invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}




























var invariant=require('invariant');var 

NavigationEventPool=(function(){


function NavigationEventPool(){_classCallCheck(this,NavigationEventPool);
this._list = [];}_createClass(NavigationEventPool,[{key:'get',value:


function get(type,target,data){
var event;
if(this._list.length > 0){
event = this._list.pop();
event.constructor.call(event,type,target,data);}else 
{
event = new NavigationEvent(type,target,data);}

return event;}},{key:'put',value:


function put(event){
this._list.push(event);}}]);return NavigationEventPool;})();



var _navigationEventPool=new NavigationEventPool();var 

NavigationEvent=(function(){_createClass(NavigationEvent,null,[{key:'pool',value:






function pool(type,target,data){
return _navigationEventPool.get(type,target,data);}}]);


function NavigationEvent(type,target,data){_classCallCheck(this,NavigationEvent);
this._type = type;
this._target = target;
this._data = data;
this._defaultPrevented = false;
this._disposed = false;}_createClass(NavigationEvent,[{key:'preventDefault',value:






















function preventDefault(){
this._defaultPrevented = true;}},{key:'dispose',value:







function dispose(){
invariant(!this._disposed,'NavigationEvent is already disposed');
this._disposed = true;


this._type = null;
this._target = null;
this._data = null;
this._defaultPrevented = false;


_navigationEventPool.put(this);}},{key:'type',get:function(){return this._type;}},{key:'target',get:function(){return this._target;}},{key:'data',get:function(){return this._data;}},{key:'defaultPrevented',get:function(){return this._defaultPrevented;}}]);return NavigationEvent;})();



module.exports = NavigationEvent;
});
__d('NavigationEventEmitter',["EventEmitter","NavigationEvent"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}




























var EventEmitter=require('EventEmitter');
var NavigationEvent=require('NavigationEvent');var 







NavigationEventEmitter=(function(_EventEmitter){_inherits(NavigationEventEmitter,_EventEmitter);




function NavigationEventEmitter(target){_classCallCheck(this,NavigationEventEmitter);
_get(Object.getPrototypeOf(NavigationEventEmitter.prototype),'constructor',this).call(this);
this._emitting = false;
this._emitQueue = [];
this._target = target;}_createClass(NavigationEventEmitter,[{key:'emit',value:


function emit(
eventType,
data,
didEmitCallback)
{
if(this._emitting){


this._emitQueue.push({eventType:eventType,data:data,didEmitCallback:didEmitCallback});
return;}


this._emitting = true;

var event=new NavigationEvent(eventType,this._target,data);



_get(Object.getPrototypeOf(NavigationEventEmitter.prototype),'emit',this).call(this,String(eventType),event);

if(typeof didEmitCallback === 'function'){
didEmitCallback.call(this._target,event);}

event.dispose();

this._emitting = false;

while(this._emitQueue.length) {
var arg=this._emitQueue.shift();
this.emit(arg.eventType,arg.data,arg.didEmitCallback);}}}]);return NavigationEventEmitter;})(EventEmitter);




module.exports = NavigationEventEmitter;
});
__d('NavigatorBreadcrumbNavigationBar',["NavigatorBreadcrumbNavigationBarStyles","NavigatorNavigationBarStyles","React","StaticContainer.react","StyleSheet","View","immutable/dist/immutable.js","invariant"],function(global, require, module, exports) {  'use strict';



























var NavigatorBreadcrumbNavigationBarStyles=require('NavigatorBreadcrumbNavigationBarStyles');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');var _require=

require('immutable/dist/immutable.js');var Map=_require.Map;

var invariant=require('invariant');

var Interpolators=NavigatorBreadcrumbNavigationBarStyles.Interpolators;
var PropTypes=React.PropTypes;




var CRUMB_PROPS=Interpolators.map(function(){return {style:{}};});
var ICON_PROPS=Interpolators.map(function(){return {style:{}};});
var SEPARATOR_PROPS=Interpolators.map(function(){return {style:{}};});
var TITLE_PROPS=Interpolators.map(function(){return {style:{}};});
var RIGHT_BUTTON_PROPS=Interpolators.map(function(){return {style:{}};});


var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};










var initStyle=function(index,presentedIndex){
return index === presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Center[index]:
index < presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Left[index]:
NavigatorBreadcrumbNavigationBarStyles.Right[index];};


var NavigatorBreadcrumbNavigationBar=React.createClass({
propTypes:{
navigator:PropTypes.shape({
push:PropTypes.func,
pop:PropTypes.func,
replace:PropTypes.func,
popToRoute:PropTypes.func,
popToTop:PropTypes.func}),

routeMapper:PropTypes.shape({
rightContentForRoute:PropTypes.func,
titleContentForRoute:PropTypes.func,
iconForRoute:PropTypes.func}),

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
presentedIndex:React.PropTypes.number}),

style:View.propTypes.style},


statics:{
Styles:NavigatorBreadcrumbNavigationBarStyles},


_updateIndexProgress:function(progress,index,fromIndex,toIndex){
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
invariant(
Interpolators[index],
'Cannot find breadcrumb interpolators for ' + index);

if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = Interpolators[index].RightToCenter;}else 
{
interpolate = Interpolators[index].RightToLeft;}


if(interpolate.Crumb(CRUMB_PROPS[index].style,amount)){
this._setPropsIfExists('crumb_' + index,CRUMB_PROPS[index]);}

if(interpolate.Icon(ICON_PROPS[index].style,amount)){
this._setPropsIfExists('icon_' + index,ICON_PROPS[index]);}

if(interpolate.Separator(SEPARATOR_PROPS[index].style,amount)){
this._setPropsIfExists('separator_' + index,SEPARATOR_PROPS[index]);}

if(interpolate.Title(TITLE_PROPS[index].style,amount)){
this._setPropsIfExists('title_' + index,TITLE_PROPS[index]);}

var right=this.refs['right_' + index];
if(right && 
interpolate.RightItem(RIGHT_BUTTON_PROPS[index].style,amount)){
right.setNativeProps(RIGHT_BUTTON_PROPS[index]);}},



updateProgress:function(progress,fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



onAnimationStart:function(fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._setRenderViewsToHardwareTextureAndroid(index,true);}},



onAnimationEnd:function(){
var max=this.props.navState.routeStack.length - 1;
for(var index=0;index <= max;index++) {
this._setRenderViewsToHardwareTextureAndroid(index,false);}},



_setRenderViewsToHardwareTextureAndroid:function(index,renderToHardwareTexture){
var props={
renderToHardwareTextureAndroid:renderToHardwareTexture};


this._setPropsIfExists('icon_' + index,props);
this._setPropsIfExists('separator_' + index,props);
this._setPropsIfExists('title_' + index,props);
this._setPropsIfExists('right_' + index,props);},


componentWillMount:function(){
this._descriptors = {
crumb:new Map(),
title:new Map(),
right:new Map()};},



render:function(){
var navState=this.props.navState;
var icons=navState && navState.routeStack.map(this._getBreadcrumb);
var titles=navState.routeStack.map(this._getTitle);
var buttons=navState.routeStack.map(this._getRightButton);
return (
React.createElement(View,{style:[styles.breadCrumbContainer,this.props.style]},
titles,
icons,
buttons));},




_getBreadcrumb:function(route,index){
if(this._descriptors.crumb.has(route)){
return this._descriptors.crumb.get(route);}


var navBarRouteMapper=this.props.routeMapper;
var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));

var breadcrumbDescriptor=
React.createElement(View,{ref:'crumb_' + index,style:firstStyles.Crumb},
React.createElement(View,{ref:'icon_' + index,style:firstStyles.Icon},
navBarRouteMapper.iconForRoute(route,this.props.navigator)),

React.createElement(View,{ref:'separator_' + index,style:firstStyles.Separator},
navBarRouteMapper.separatorForRoute(route,this.props.navigator)));




this._descriptors.crumb = this._descriptors.crumb.set(route,breadcrumbDescriptor);
return breadcrumbDescriptor;},


_getTitle:function(route,index){
if(this._descriptors.title.has(route)){
return this._descriptors.title.get(route);}


var titleContent=this.props.routeMapper.titleContentForRoute(
this.props.navState.routeStack[index],
this.props.navigator);

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));

var titleDescriptor=
React.createElement(View,{ref:'title_' + index,style:firstStyles.Title},
titleContent);


this._descriptors.title = this._descriptors.title.set(route,titleDescriptor);
return titleDescriptor;},


_getRightButton:function(route,index){
if(this._descriptors.right.has(route)){
return this._descriptors.right.get(route);}

var rightContent=this.props.routeMapper.rightContentForRoute(
this.props.navState.routeStack[index],
this.props.navigator);

if(!rightContent){
this._descriptors.right = this._descriptors.right.set(route,null);
return null;}

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));
var rightButtonDescriptor=
React.createElement(View,{ref:'right_' + index,style:firstStyles.RightItem},
rightContent);


this._descriptors.right = this._descriptors.right.set(route,rightButtonDescriptor);
return rightButtonDescriptor;},


_setPropsIfExists:function(ref,props){
var ref=this.refs[ref];
ref && ref.setNativeProps(props);}});



var styles=StyleSheet.create({
breadCrumbContainer:{
overflow:'hidden',
position:'absolute',
height:NavigatorNavigationBarStyles.General.TotalNavHeight,
top:0,
left:0,
right:0}});



module.exports = NavigatorBreadcrumbNavigationBar;
});
__d('NavigatorBreadcrumbNavigationBarStyles',["Dimensions","NavigatorNavigationBarStyles","buildStyleInterpolator","merge"],function(global, require, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var STATUS_BAR_HEIGHT=NavigatorNavigationBarStyles.General.StatusBarHeight;
var NAV_BAR_HEIGHT=NavigatorNavigationBarStyles.General.NavBarHeight;

var SPACING=4;
var ICON_WIDTH=40;
var SEPARATOR_WIDTH=9;
var CRUMB_WIDTH=ICON_WIDTH + SEPARATOR_WIDTH;

var OPACITY_RATIO=100;
var ICON_INACTIVE_OPACITY=0.6;
var MAX_BREADCRUMBS=10;

var CRUMB_BASE={
position:'absolute',
flexDirection:'row',
top:STATUS_BAR_HEIGHT,
width:CRUMB_WIDTH,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};


var ICON_BASE={
width:ICON_WIDTH,
height:NAV_BAR_HEIGHT};


var SEPARATOR_BASE={
width:SEPARATOR_WIDTH,
height:NAV_BAR_HEIGHT};


var TITLE_BASE={
position:'absolute',
top:STATUS_BAR_HEIGHT,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};



var FIRST_TITLE_BASE=merge(TITLE_BASE,{
left:0,
right:0,
alignItems:'center',
height:NAV_BAR_HEIGHT});


var RIGHT_BUTTON_BASE={
position:'absolute',
top:STATUS_BAR_HEIGHT,
right:SPACING,
overflow:'hidden',
opacity:1,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};






var LEFT=[];
var CENTER=[];
var RIGHT=[];
for(var i=0;i < MAX_BREADCRUMBS;i++) {
var crumbLeft=CRUMB_WIDTH * i + SPACING;
LEFT[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:ICON_INACTIVE_OPACITY}),
Separator:merge(SEPARATOR_BASE,{opacity:1}),
Title:merge(TITLE_BASE,{left:crumbLeft,opacity:0}),
RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};

CENTER[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:1}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbLeft + ICON_WIDTH,
opacity:1}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:1})};

var crumbRight=SCREEN_WIDTH - 100;
RIGHT[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbRight}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbRight + ICON_WIDTH,
opacity:0}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};}




CENTER[0] = {
Crumb:merge(CRUMB_BASE,{left:SCREEN_WIDTH / 4}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(FIRST_TITLE_BASE,{opacity:1}),
RightItem:CENTER[0].RightItem};

LEFT[0].Title = merge(FIRST_TITLE_BASE,{left:-SCREEN_WIDTH / 4,opacity:0});
RIGHT[0].Title = merge(FIRST_TITLE_BASE,{opacity:0});


var buildIndexSceneInterpolator=function(startStyles,endStyles){
return {
Crumb:buildStyleInterpolator({
left:{
type:'linear',
from:startStyles.Crumb.left,
to:endStyles.Crumb.left,
min:0,
max:1,
extrapolate:true}}),


Icon:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Icon.opacity,
to:endStyles.Icon.opacity,
min:0,
max:1}}),


Separator:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Separator.opacity,
to:endStyles.Separator.opacity,
min:0,
max:1}}),


Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


RightItem:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightItem.opacity,
to:endStyles.RightItem.opacity,
min:0,
max:1,
round:OPACITY_RATIO}})};};





var Interpolators=CENTER.map(function(_,ii){
return {

RightToCenter:buildIndexSceneInterpolator(RIGHT[ii],CENTER[ii]),

CenterToLeft:buildIndexSceneInterpolator(CENTER[ii],LEFT[ii]),

RightToLeft:buildIndexSceneInterpolator(RIGHT[ii],LEFT[ii])};});







module.exports = {
Interpolators:Interpolators,
Left:LEFT,
Center:CENTER,
Right:RIGHT,
IconWidth:ICON_WIDTH,
IconHeight:NAV_BAR_HEIGHT,
SeparatorWidth:SEPARATOR_WIDTH,
SeparatorHeight:NAV_BAR_HEIGHT};
});
__d('NavigatorNavigationBarStyles',["Dimensions","buildStyleInterpolator","merge"],function(global, require, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var NAV_BAR_HEIGHT=44;
var STATUS_BAR_HEIGHT=20;
var NAV_HEIGHT=NAV_BAR_HEIGHT + STATUS_BAR_HEIGHT;

var BASE_STYLES={
Title:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
alignItems:'center',
width:SCREEN_WIDTH,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

LeftButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
overflow:'hidden',
opacity:1,
width:SCREEN_WIDTH / 3,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

RightButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:2 * SCREEN_WIDTH / 3,
overflow:'hidden',
opacity:1,
alignItems:'flex-end',
width:SCREEN_WIDTH / 3,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'}};










var Stages={
Left:{
Title:merge(BASE_STYLES.Title,{left:-SCREEN_WIDTH / 2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:-SCREEN_WIDTH / 3,opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH / 3,opacity:0})},

Center:{
Title:merge(BASE_STYLES.Title,{left:0,opacity:1}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{left:2 * SCREEN_WIDTH / 3 - 0,opacity:1})},

Right:{
Title:merge(BASE_STYLES.Title,{left:SCREEN_WIDTH / 2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH,opacity:0})}};




var opacityRatio=100;

function buildSceneInterpolators(startStyles,endStyles){
return {
Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


LeftButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.LeftButton.opacity,
to:endStyles.LeftButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.LeftButton.left,
to:endStyles.LeftButton.left,
min:0,
max:1}}),


RightButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightButton.opacity,
to:endStyles.RightButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.RightButton.left,
to:endStyles.RightButton.left,
min:0,
max:1,
extrapolate:true}})};}





var Interpolators={

RightToCenter:buildSceneInterpolators(Stages.Right,Stages.Center),

CenterToLeft:buildSceneInterpolators(Stages.Center,Stages.Left),

RightToLeft:buildSceneInterpolators(Stages.Right,Stages.Left)};



module.exports = {
General:{
NavBarHeight:NAV_BAR_HEIGHT,
StatusBarHeight:STATUS_BAR_HEIGHT,
TotalNavHeight:NAV_HEIGHT},

Interpolators:Interpolators,
Stages:Stages};
});
__d('buildStyleInterpolator',["keyOf"],function(global, require, module, exports) {  var 










keyOf=require('keyOf');

var X_DIM=keyOf({x:null});
var Y_DIM=keyOf({y:null});
var Z_DIM=keyOf({z:null});
var W_DIM=keyOf({w:null});

var TRANSFORM_ROTATE_NAME=keyOf({transformRotateRadians:null});

var ShouldAllocateReusableOperationVars={
transformRotateRadians:true,
transformScale:true,
transformTranslate:true};


var InitialOperationField={
transformRotateRadians:[0,0,0,1],
transformTranslate:[0,0,0],
transformScale:[1,1,1]};



























































var ARGUMENT_NAMES_RE=/([^\s,]+)/g;



















var inline=function(func,replaceWithArgs){
var fnStr=func.toString();
var parameterNames=fnStr.slice(fnStr.indexOf('(') + 1,fnStr.indexOf(')')).
match(ARGUMENT_NAMES_RE) || 
[];
var replaceRegexStr=parameterNames.map(function(paramName){
return '\\b' + paramName + '\\b';}).
join('|');
var replaceRegex=new RegExp(replaceRegexStr,'g');
var fnBody=fnStr.substring(fnStr.indexOf('{') + 1,fnStr.lastIndexOf('}'));
var newFnBody=fnBody.replace(replaceRegex,function(parameterName){
var indexInParameterNames=parameterNames.indexOf(parameterName);
var replacementName=replaceWithArgs[indexInParameterNames];
return replacementName;});

return newFnBody.split('\n');};






var MatrixOps={
unroll:function(matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
m0 = matVar[0];
m1 = matVar[1];
m2 = matVar[2];
m3 = matVar[3];
m4 = matVar[4];
m5 = matVar[5];
m6 = matVar[6];
m7 = matVar[7];
m8 = matVar[8];
m9 = matVar[9];
m10 = matVar[10];
m11 = matVar[11];
m12 = matVar[12];
m13 = matVar[13];
m14 = matVar[14];
m15 = matVar[15];},


matrixDiffers:function(retVar,matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
retVar = retVar || 
m0 !== matVar[0] || 
m1 !== matVar[1] || 
m2 !== matVar[2] || 
m3 !== matVar[3] || 
m4 !== matVar[4] || 
m5 !== matVar[5] || 
m6 !== matVar[6] || 
m7 !== matVar[7] || 
m8 !== matVar[8] || 
m9 !== matVar[9] || 
m10 !== matVar[10] || 
m11 !== matVar[11] || 
m12 !== matVar[12] || 
m13 !== matVar[13] || 
m14 !== matVar[14] || 
m15 !== matVar[15];},


transformScale:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[0] = matVar[0] * x;
matVar[1] = matVar[1] * x;
matVar[2] = matVar[2] * x;
matVar[3] = matVar[3] * x;
matVar[4] = matVar[4] * y;
matVar[5] = matVar[5] * y;
matVar[6] = matVar[6] * y;
matVar[7] = matVar[7] * y;
matVar[8] = matVar[8] * z;
matVar[9] = matVar[9] * z;
matVar[10] = matVar[10] * z;
matVar[11] = matVar[11] * z;
matVar[12] = matVar[12];
matVar[13] = matVar[13];
matVar[14] = matVar[14];
matVar[15] = matVar[15];},






transformTranslate:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[12] = matVar[0] * x + matVar[4] * y + matVar[8] * z + matVar[12];
matVar[13] = matVar[1] * x + matVar[5] * y + matVar[9] * z + matVar[13];
matVar[14] = matVar[2] * x + matVar[6] * y + matVar[10] * z + matVar[14];
matVar[15] = matVar[3] * x + matVar[7] * y + matVar[11] * z + matVar[15];},






transformRotateRadians:function(matVar,q){

var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var a00=matVar[0];
var a01=matVar[1];
var a02=matVar[2];
var a03=matVar[3];
var a10=matVar[4];
var a11=matVar[5];
var a12=matVar[6];
var a13=matVar[7];
var a20=matVar[8];
var a21=matVar[9];
var a22=matVar[10];
var a23=matVar[11];

var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[1] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[2] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[3] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[5] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[6] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[7] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[9] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[10] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[11] = b0 * a03 + b1 * a13 + b2 * a23;}};





var MatrixOpsInitial={
transformScale:function(matVar,opVar){

matVar[0] = opVar[0];
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = opVar[1];
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = opVar[2];
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;},


transformTranslate:function(matVar,opVar){

matVar[0] = 1;
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = 1;
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = 1;
matVar[11] = 0;
matVar[12] = opVar[0];
matVar[13] = opVar[1];
matVar[14] = opVar[2];
matVar[15] = 1;},







transformRotateRadians:function(matVar,q){


var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0] = b0;
matVar[1] = b1;
matVar[2] = b2;
matVar[3] = 0;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0;
matVar[5] = b1;
matVar[6] = b2;
matVar[7] = 0;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0;
matVar[9] = b1;
matVar[10] = b2;
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;}};




var setNextValAndDetectChange=function(name,tmpVarName){
return (
'  if (!didChange) {\n' + 
'    var prevVal = result.' + name + ';\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'    didChange = didChange  || (' + tmpVarName + ' !== prevVal);\n' + 
'  } else {\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'  }\n');};



var computeNextValLinear=function(anim,from,to,tmpVarName){
var hasRoundRatio=('round' in anim);
var roundRatio=anim.round;
var fn='  ratio = (value - ' + anim.min + ') / ' + (anim.max - anim.min) + ';\n';
if(!anim.extrapolate){
fn += '  ratio = ratio > 1 ? 1 : (ratio < 0 ? 0 : ratio);\n';}


var roundOpen=hasRoundRatio?'Math.round(' + roundRatio + ' * ':'';
var roundClose=hasRoundRatio?') / ' + roundRatio:'';
fn += 
'  ' + tmpVarName + ' = ' + 
roundOpen + 
'(' + from + ' * (1 - ratio) + ' + to + ' * ratio)' + 
roundClose + ';\n';
return fn;};


var computeNextValLinearScalar=function(anim){
return computeNextValLinear(anim,anim.from,anim.to,'nextScalarVal');};


var computeNextValConstant=function(anim){
var constantExpression=JSON.stringify(anim.value);
return '  nextScalarVal = ' + constantExpression + ';\n';};


var computeNextValStep=function(anim){
return (
'  nextScalarVal = value >= ' + (
anim.threshold + ' ? ' + anim.to + ' : ' + anim.from) + ';\n');};



var computeNextValIdentity=function(anim){
return '  nextScalarVal = value;\n';};


var operationVar=function(name){
return name + 'ReuseOp';};


var createReusableOperationVars=function(anims){
var ret='';
for(var name in anims) {
if(ShouldAllocateReusableOperationVars[name]){
ret += 'var ' + operationVar(name) + ' = [];\n';}}


return ret;};


var newlines=function(statements){
return '\n' + statements.join('\n') + '\n';};








var computeNextMatrixOperationField=function(anim,name,dimension,index){
var fieldAccess=operationVar(name) + '[' + index + ']';
if(anim.from[dimension] !== undefined && anim.to[dimension] !== undefined){
return '  ' + anim.from[dimension] !== anim.to[dimension]?
computeNextValLinear(anim,anim.from[dimension],anim.to[dimension],fieldAccess):
fieldAccess + ' = ' + anim.from[dimension] + ';';}else 
{
return '  ' + fieldAccess + ' = ' + InitialOperationField[name][index] + ';';}};



var unrolledVars=[];
for(var varIndex=0;varIndex < 16;varIndex++) {
unrolledVars.push('m' + varIndex);}

var setNextMatrixAndDetectChange=function(orderedMatrixOperations){
var fn=[
'  var transformMatrix = result.transformMatrix !== undefined ? ' + 
'result.transformMatrix : (result.transformMatrix = []);'];

fn.push.apply(
fn,
inline(MatrixOps.unroll,['transformMatrix'].concat(unrolledVars)));

for(var i=0;i < orderedMatrixOperations.length;i++) {
var opName=orderedMatrixOperations[i];
if(i === 0){
fn.push.apply(
fn,
inline(MatrixOpsInitial[opName],['transformMatrix',operationVar(opName)]));}else 

{
fn.push.apply(
fn,
inline(MatrixOps[opName],['transformMatrix',operationVar(opName)]));}}



fn.push.apply(
fn,
inline(MatrixOps.matrixDiffers,['didChange','transformMatrix'].concat(unrolledVars)));

return fn;};


var InterpolateMatrix={
transformTranslate:true,
transformRotateRadians:true,
transformScale:true};


var createFunctionString=function(anims){


var orderedMatrixOperations=[];



var fn='return (function() {\n';
fn += createReusableOperationVars(anims);
fn += 'return function(result, value) {\n';
fn += '  var didChange = false;\n';
fn += '  var nextScalarVal;\n';
fn += '  var ratio;\n';

for(var name in anims) {
var anim=anims[name];
if(anim.type === 'linear'){
if(InterpolateMatrix[name]){
orderedMatrixOperations.push(name);
var setOperations=[
computeNextMatrixOperationField(anim,name,X_DIM,0),
computeNextMatrixOperationField(anim,name,Y_DIM,1),
computeNextMatrixOperationField(anim,name,Z_DIM,2)];

if(name === TRANSFORM_ROTATE_NAME){
setOperations.push(computeNextMatrixOperationField(anim,name,W_DIM,3));}

fn += newlines(setOperations);}else 
{
fn += computeNextValLinearScalar(anim,'nextScalarVal');
fn += setNextValAndDetectChange(name,'nextScalarVal');}}else 

if(anim.type === 'constant'){
fn += computeNextValConstant(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type === 'step'){
fn += computeNextValStep(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type === 'identity'){
fn += computeNextValIdentity(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}}


if(orderedMatrixOperations.length){
fn += newlines(setNextMatrixAndDetectChange(orderedMatrixOperations));}

fn += '  return didChange;\n';
fn += '};\n';
fn += '})()';
return fn;};







var buildStyleInterpolator=function(anims){
return Function(createFunctionString(anims))();};



module.exports = buildStyleInterpolator;
});
__d('StaticContainer.react',["React","onlyChild"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}




















var React=require('React');

var onlyChild=require('onlyChild');var 
















StaticContainer=(function(_React$Component){_inherits(StaticContainer,_React$Component);function StaticContainer(){_classCallCheck(this,StaticContainer);_get(Object.getPrototypeOf(StaticContainer.prototype),'constructor',this).apply(this,arguments);}_createClass(StaticContainer,[{key:'shouldComponentUpdate',value:

function shouldComponentUpdate(nextProps){
return !!nextProps.shouldUpdate;}},{key:'render',value:


function render(){
var child=this.props.children;
return child === null || child === false?null:onlyChild(child);}}]);return StaticContainer;})(React.Component);




module.exports = StaticContainer;
});
__d('immutable/dist/immutable.js',[],function(global, require, module, exports) {  (







function(global,factory){
typeof exports === 'object' && typeof module !== 'undefined'?module.exports = factory():
typeof define === 'function' && define.amd?define(factory):
global.Immutable = factory();})(
this,function(){'use strict';var SLICE$0=Array.prototype.slice;

function createClass(ctor,superClass){
if(superClass){
ctor.prototype = Object.create(superClass.prototype);}

ctor.prototype.constructor = ctor;}



var DELETE='delete';


var SHIFT=5;
var SIZE=1 << SHIFT;
var MASK=SIZE - 1;



var NOT_SET={};


var CHANGE_LENGTH={value:false};
var DID_ALTER={value:false};

function MakeRef(ref){
ref.value = false;
return ref;}


function SetRef(ref){
ref && (ref.value = true);}





function OwnerID(){}


function arrCopy(arr,offset){
offset = offset || 0;
var len=Math.max(0,arr.length - offset);
var newArr=new Array(len);
for(var ii=0;ii < len;ii++) {
newArr[ii] = arr[ii + offset];}

return newArr;}


function ensureSize(iter){
if(iter.size === undefined){
iter.size = iter.__iterate(returnTrue);}

return iter.size;}


function wrapIndex(iter,index){







if(typeof index !== 'number'){
var numIndex=+index;
if('' + numIndex !== index){
return NaN;}

index = numIndex;}

return index < 0?ensureSize(iter) + index:index;}


function returnTrue(){
return true;}


function wholeSlice(begin,end,size){
return (begin === 0 || size !== undefined && begin <= -size) && (
end === undefined || size !== undefined && end >= size);}


function resolveBegin(begin,size){
return resolveIndex(begin,size,0);}


function resolveEnd(end,size){
return resolveIndex(end,size,size);}


function resolveIndex(index,size,defaultIndex){
return index === undefined?
defaultIndex:
index < 0?
Math.max(0,size + index):
size === undefined?
index:
Math.min(size,index);}


function Iterable(value){
return isIterable(value)?value:Seq(value);}



createClass(KeyedIterable,Iterable);
function KeyedIterable(value){
return isKeyed(value)?value:KeyedSeq(value);}



createClass(IndexedIterable,Iterable);
function IndexedIterable(value){
return isIndexed(value)?value:IndexedSeq(value);}



createClass(SetIterable,Iterable);
function SetIterable(value){
return isIterable(value) && !isAssociative(value)?value:SetSeq(value);}




function isIterable(maybeIterable){
return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);}


function isKeyed(maybeKeyed){
return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);}


function isIndexed(maybeIndexed){
return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);}


function isAssociative(maybeAssociative){
return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);}


function isOrdered(maybeOrdered){
return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);}


Iterable.isIterable = isIterable;
Iterable.isKeyed = isKeyed;
Iterable.isIndexed = isIndexed;
Iterable.isAssociative = isAssociative;
Iterable.isOrdered = isOrdered;

Iterable.Keyed = KeyedIterable;
Iterable.Indexed = IndexedIterable;
Iterable.Set = SetIterable;


var IS_ITERABLE_SENTINEL='@@__IMMUTABLE_ITERABLE__@@';
var IS_KEYED_SENTINEL='@@__IMMUTABLE_KEYED__@@';
var IS_INDEXED_SENTINEL='@@__IMMUTABLE_INDEXED__@@';
var IS_ORDERED_SENTINEL='@@__IMMUTABLE_ORDERED__@@';



var ITERATE_KEYS=0;
var ITERATE_VALUES=1;
var ITERATE_ENTRIES=2;

var REAL_ITERATOR_SYMBOL=typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';

var ITERATOR_SYMBOL=REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;


function src_Iterator__Iterator(next){
this.next = next;}


src_Iterator__Iterator.prototype.toString = function(){
return '[Iterator]';};



src_Iterator__Iterator.KEYS = ITERATE_KEYS;
src_Iterator__Iterator.VALUES = ITERATE_VALUES;
src_Iterator__Iterator.ENTRIES = ITERATE_ENTRIES;

src_Iterator__Iterator.prototype.inspect = 
src_Iterator__Iterator.prototype.toSource = function(){return this.toString();};
src_Iterator__Iterator.prototype[ITERATOR_SYMBOL] = function(){
return this;};



function iteratorValue(type,k,v,iteratorResult){
var value=type === 0?k:type === 1?v:[k,v];
iteratorResult?iteratorResult.value = value:iteratorResult = {
value:value,done:false};

return iteratorResult;}


function iteratorDone(){
return {value:undefined,done:true};}


function hasIterator(maybeIterable){
return !!getIteratorFn(maybeIterable);}


function isIterator(maybeIterator){
return maybeIterator && typeof maybeIterator.next === 'function';}


function getIterator(iterable){
var iteratorFn=getIteratorFn(iterable);
return iteratorFn && iteratorFn.call(iterable);}


function getIteratorFn(iterable){
var iteratorFn=iterable && (
REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || 
iterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn === 'function'){
return iteratorFn;}}



function isArrayLike(value){
return value && typeof value.length === 'number';}


createClass(Seq,Iterable);
function Seq(value){
return value === null || value === undefined?emptySequence():
isIterable(value)?value.toSeq():seqFromValue(value);}


Seq.of = function(){
return Seq(arguments);};


Seq.prototype.toSeq = function(){
return this;};


Seq.prototype.toString = function(){
return this.__toString('Seq {','}');};


Seq.prototype.cacheResult = function(){
if(!this._cache && this.__iterateUncached){
this._cache = this.entrySeq().toArray();
this.size = this._cache.length;}

return this;};




Seq.prototype.__iterate = function(fn,reverse){
return seqIterate(this,fn,reverse,true);};




Seq.prototype.__iterator = function(type,reverse){
return seqIterator(this,type,reverse,true);};




createClass(KeyedSeq,Seq);
function KeyedSeq(value){
return value === null || value === undefined?
emptySequence().toKeyedSeq():
isIterable(value)?
isKeyed(value)?value.toSeq():value.fromEntrySeq():
keyedSeqFromValue(value);}


KeyedSeq.prototype.toKeyedSeq = function(){
return this;};




createClass(IndexedSeq,Seq);
function IndexedSeq(value){
return value === null || value === undefined?emptySequence():
!isIterable(value)?indexedSeqFromValue(value):
isKeyed(value)?value.entrySeq():value.toIndexedSeq();}


IndexedSeq.of = function(){
return IndexedSeq(arguments);};


IndexedSeq.prototype.toIndexedSeq = function(){
return this;};


IndexedSeq.prototype.toString = function(){
return this.__toString('Seq [',']');};


IndexedSeq.prototype.__iterate = function(fn,reverse){
return seqIterate(this,fn,reverse,false);};


IndexedSeq.prototype.__iterator = function(type,reverse){
return seqIterator(this,type,reverse,false);};




createClass(SetSeq,Seq);
function SetSeq(value){
return (
value === null || value === undefined?emptySequence():
!isIterable(value)?indexedSeqFromValue(value):
isKeyed(value)?value.entrySeq():value).
toSetSeq();}


SetSeq.of = function(){
return SetSeq(arguments);};


SetSeq.prototype.toSetSeq = function(){
return this;};




Seq.isSeq = isSeq;
Seq.Keyed = KeyedSeq;
Seq.Set = SetSeq;
Seq.Indexed = IndexedSeq;

var IS_SEQ_SENTINEL='@@__IMMUTABLE_SEQ__@@';

Seq.prototype[IS_SEQ_SENTINEL] = true;





createClass(ArraySeq,IndexedSeq);
function ArraySeq(array){
this._array = array;
this.size = array.length;}


ArraySeq.prototype.get = function(index,notSetValue){
return this.has(index)?this._array[wrapIndex(this,index)]:notSetValue;};


ArraySeq.prototype.__iterate = function(fn,reverse){
var array=this._array;
var maxIndex=array.length - 1;
for(var ii=0;ii <= maxIndex;ii++) {
if(fn(array[reverse?maxIndex - ii:ii],ii,this) === false){
return ii + 1;}}


return ii;};


ArraySeq.prototype.__iterator = function(type,reverse){
var array=this._array;
var maxIndex=array.length - 1;
var ii=0;
return new src_Iterator__Iterator(function()
{return ii > maxIndex?
iteratorDone():
iteratorValue(type,ii,array[reverse?maxIndex - ii++:ii++]);});};





createClass(ObjectSeq,KeyedSeq);
function ObjectSeq(object){
var keys=Object.keys(object);
this._object = object;
this._keys = keys;
this.size = keys.length;}


ObjectSeq.prototype.get = function(key,notSetValue){
if(notSetValue !== undefined && !this.has(key)){
return notSetValue;}

return this._object[key];};


ObjectSeq.prototype.has = function(key){
return this._object.hasOwnProperty(key);};


ObjectSeq.prototype.__iterate = function(fn,reverse){
var object=this._object;
var keys=this._keys;
var maxIndex=keys.length - 1;
for(var ii=0;ii <= maxIndex;ii++) {
var key=keys[reverse?maxIndex - ii:ii];
if(fn(object[key],key,this) === false){
return ii + 1;}}


return ii;};


ObjectSeq.prototype.__iterator = function(type,reverse){
var object=this._object;
var keys=this._keys;
var maxIndex=keys.length - 1;
var ii=0;
return new src_Iterator__Iterator(function(){
var key=keys[reverse?maxIndex - ii:ii];
return ii++ > maxIndex?
iteratorDone():
iteratorValue(type,key,object[key]);});};



ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;


createClass(IterableSeq,IndexedSeq);
function IterableSeq(iterable){
this._iterable = iterable;
this.size = iterable.length || iterable.size;}


IterableSeq.prototype.__iterateUncached = function(fn,reverse){
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterable=this._iterable;
var iterator=getIterator(iterable);
var iterations=0;
if(isIterator(iterator)){
var step;
while(!(step = iterator.next()).done) {
if(fn(step.value,iterations++,this) === false){
break;}}}



return iterations;};


IterableSeq.prototype.__iteratorUncached = function(type,reverse){
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterable=this._iterable;
var iterator=getIterator(iterable);
if(!isIterator(iterator)){
return new src_Iterator__Iterator(iteratorDone);}

var iterations=0;
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:iteratorValue(type,iterations++,step.value);});};





createClass(IteratorSeq,IndexedSeq);
function IteratorSeq(iterator){
this._iterator = iterator;
this._iteratorCache = [];}


IteratorSeq.prototype.__iterateUncached = function(fn,reverse){
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterator=this._iterator;
var cache=this._iteratorCache;
var iterations=0;
while(iterations < cache.length) {
if(fn(cache[iterations],iterations++,this) === false){
return iterations;}}


var step;
while(!(step = iterator.next()).done) {
var val=step.value;
cache[iterations] = val;
if(fn(val,iterations++,this) === false){
break;}}


return iterations;};


IteratorSeq.prototype.__iteratorUncached = function(type,reverse){
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=this._iterator;
var cache=this._iteratorCache;
var iterations=0;
return new src_Iterator__Iterator(function(){
if(iterations >= cache.length){
var step=iterator.next();
if(step.done){
return step;}

cache[iterations] = step.value;}

return iteratorValue(type,iterations,cache[iterations++]);});};








function isSeq(maybeSeq){
return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);}


var EMPTY_SEQ;

function emptySequence(){
return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));}


function keyedSeqFromValue(value){
var seq=
Array.isArray(value)?new ArraySeq(value).fromEntrySeq():
isIterator(value)?new IteratorSeq(value).fromEntrySeq():
hasIterator(value)?new IterableSeq(value).fromEntrySeq():
typeof value === 'object'?new ObjectSeq(value):
undefined;
if(!seq){
throw new TypeError(
'Expected Array or iterable object of [k, v] entries, ' + 
'or keyed object: ' + value);}


return seq;}


function indexedSeqFromValue(value){
var seq=maybeIndexedSeqFromValue(value);
if(!seq){
throw new TypeError(
'Expected Array or iterable object of values: ' + value);}


return seq;}


function seqFromValue(value){
var seq=maybeIndexedSeqFromValue(value) || 
typeof value === 'object' && new ObjectSeq(value);
if(!seq){
throw new TypeError(
'Expected Array or iterable object of values, or keyed object: ' + value);}


return seq;}


function maybeIndexedSeqFromValue(value){
return (
isArrayLike(value)?new ArraySeq(value):
isIterator(value)?new IteratorSeq(value):
hasIterator(value)?new IterableSeq(value):
undefined);}



function seqIterate(seq,fn,reverse,useKeys){
var cache=seq._cache;
if(cache){
var maxIndex=cache.length - 1;
for(var ii=0;ii <= maxIndex;ii++) {
var entry=cache[reverse?maxIndex - ii:ii];
if(fn(entry[1],useKeys?entry[0]:ii,seq) === false){
return ii + 1;}}


return ii;}

return seq.__iterateUncached(fn,reverse);}


function seqIterator(seq,type,reverse,useKeys){
var cache=seq._cache;
if(cache){
var maxIndex=cache.length - 1;
var ii=0;
return new src_Iterator__Iterator(function(){
var entry=cache[reverse?maxIndex - ii:ii];
return ii++ > maxIndex?
iteratorDone():
iteratorValue(type,useKeys?entry[0]:ii - 1,entry[1]);});}


return seq.__iteratorUncached(type,reverse);}


createClass(Collection,Iterable);
function Collection(){
throw TypeError('Abstract');}



createClass(KeyedCollection,Collection);function KeyedCollection(){}

createClass(IndexedCollection,Collection);function IndexedCollection(){}

createClass(SetCollection,Collection);function SetCollection(){}


Collection.Keyed = KeyedCollection;
Collection.Indexed = IndexedCollection;
Collection.Set = SetCollection;























































function is(valueA,valueB){
if(valueA === valueB || valueA !== valueA && valueB !== valueB){
return true;}

if(!valueA || !valueB){
return false;}

if(typeof valueA.valueOf === 'function' && 
typeof valueB.valueOf === 'function'){
valueA = valueA.valueOf();
valueB = valueB.valueOf();
if(valueA === valueB || valueA !== valueA && valueB !== valueB){
return true;}

if(!valueA || !valueB){
return false;}}


if(typeof valueA.equals === 'function' && 
typeof valueB.equals === 'function' && 
valueA.equals(valueB)){
return true;}

return false;}


function fromJS(json,converter){
return converter?
fromJSWith(converter,json,'',{'':json}):
fromJSDefault(json);}


function fromJSWith(converter,json,key,parentJSON){
if(Array.isArray(json)){
return converter.call(parentJSON,key,IndexedSeq(json).map(function(v,k){return fromJSWith(converter,v,k,json);}));}

if(isPlainObj(json)){
return converter.call(parentJSON,key,KeyedSeq(json).map(function(v,k){return fromJSWith(converter,v,k,json);}));}

return json;}


function fromJSDefault(json){
if(Array.isArray(json)){
return IndexedSeq(json).map(fromJSDefault).toList();}

if(isPlainObj(json)){
return KeyedSeq(json).map(fromJSDefault).toMap();}

return json;}


function isPlainObj(value){
return value && (value.constructor === Object || value.constructor === undefined);}


var src_Math__imul=
typeof Math.imul === 'function' && Math.imul(0xffffffff,2) === -2?
Math.imul:
function imul(a,b){
a = a | 0;
b = b | 0;
var c=a & 0xffff;
var d=b & 0xffff;

return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0;};






function smi(i32){
return i32 >>> 1 & 0x40000000 | i32 & 0xBFFFFFFF;}


function hash(o){
if(o === false || o === null || o === undefined){
return 0;}

if(typeof o.valueOf === 'function'){
o = o.valueOf();
if(o === false || o === null || o === undefined){
return 0;}}


if(o === true){
return 1;}

var type=typeof o;
if(type === 'number'){
var h=o | 0;
if(h !== o){
h ^= o * 0xFFFFFFFF;}

while(o > 0xFFFFFFFF) {
o /= 0xFFFFFFFF;
h ^= o;}

return smi(h);}

if(type === 'string'){
return o.length > STRING_HASH_CACHE_MIN_STRLEN?cachedHashString(o):hashString(o);}

if(typeof o.hashCode === 'function'){
return o.hashCode();}

return hashJSObj(o);}


function cachedHashString(string){
var hash=stringHashCache[string];
if(hash === undefined){
hash = hashString(string);
if(STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE){
STRING_HASH_CACHE_SIZE = 0;
stringHashCache = {};}

STRING_HASH_CACHE_SIZE++;
stringHashCache[string] = hash;}

return hash;}



function hashString(string){






var hash=0;
for(var ii=0;ii < string.length;ii++) {
hash = 31 * hash + string.charCodeAt(ii) | 0;}

return smi(hash);}


function hashJSObj(obj){
var hash;
if(usingWeakMap){
hash = weakMap.get(obj);
if(hash !== undefined){
return hash;}}



hash = obj[UID_HASH_KEY];
if(hash !== undefined){
return hash;}


if(!canDefineProperty){
hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
if(hash !== undefined){
return hash;}


hash = getIENodeHash(obj);
if(hash !== undefined){
return hash;}}



hash = ++objHashUID;
if(objHashUID & 0x40000000){
objHashUID = 0;}


if(usingWeakMap){
weakMap.set(obj,hash);}else 
if(isExtensible !== undefined && isExtensible(obj) === false){
throw new Error('Non-extensible objects are not allowed as keys.');}else 
if(canDefineProperty){
Object.defineProperty(obj,UID_HASH_KEY,{
'enumerable':false,
'configurable':false,
'writable':false,
'value':hash});}else 

if(obj.propertyIsEnumerable !== undefined && 
obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable){




obj.propertyIsEnumerable = function(){
return this.constructor.prototype.propertyIsEnumerable.apply(this,arguments);};

obj.propertyIsEnumerable[UID_HASH_KEY] = hash;}else 
if(obj.nodeType !== undefined){




obj[UID_HASH_KEY] = hash;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}


return hash;}



var isExtensible=Object.isExtensible;


var canDefineProperty=(function(){
try{
Object.defineProperty({},'@',{});
return true;}
catch(e) {
return false;}})();





function getIENodeHash(node){
if(node && node.nodeType > 0){
switch(node.nodeType){
case 1:
return node.uniqueID;
case 9:
return node.documentElement && node.documentElement.uniqueID;}}}





var usingWeakMap=typeof WeakMap === 'function';
var weakMap;
if(usingWeakMap){
weakMap = new WeakMap();}


var objHashUID=0;

var UID_HASH_KEY='__immutablehash__';
if(typeof Symbol === 'function'){
UID_HASH_KEY = Symbol(UID_HASH_KEY);}


var STRING_HASH_CACHE_MIN_STRLEN=16;
var STRING_HASH_CACHE_MAX_SIZE=255;
var STRING_HASH_CACHE_SIZE=0;
var stringHashCache={};

function invariant(condition,error){
if(!condition)throw new Error(error);}


function assertNotInfinite(size){
invariant(
size !== Infinity,
'Cannot perform this action with an infinite size.');}



createClass(ToKeyedSequence,KeyedSeq);
function ToKeyedSequence(indexed,useKeys){
this._iter = indexed;
this._useKeys = useKeys;
this.size = indexed.size;}


ToKeyedSequence.prototype.get = function(key,notSetValue){
return this._iter.get(key,notSetValue);};


ToKeyedSequence.prototype.has = function(key){
return this._iter.has(key);};


ToKeyedSequence.prototype.valueSeq = function(){
return this._iter.valueSeq();};


ToKeyedSequence.prototype.reverse = function(){var this$0=this;
var reversedSequence=reverseFactory(this,true);
if(!this._useKeys){
reversedSequence.valueSeq = function(){return this$0._iter.toSeq().reverse();};}

return reversedSequence;};


ToKeyedSequence.prototype.map = function(mapper,context){var this$0=this;
var mappedSequence=mapFactory(this,mapper,context);
if(!this._useKeys){
mappedSequence.valueSeq = function(){return this$0._iter.toSeq().map(mapper,context);};}

return mappedSequence;};


ToKeyedSequence.prototype.__iterate = function(fn,reverse){var this$0=this;
var ii;
return this._iter.__iterate(
this._useKeys?
function(v,k){return fn(v,k,this$0);}:(
ii = reverse?resolveSize(this):0,
function(v){return fn(v,reverse?--ii:ii++,this$0);}),
reverse);};



ToKeyedSequence.prototype.__iterator = function(type,reverse){
if(this._useKeys){
return this._iter.__iterator(type,reverse);}

var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
var ii=reverse?resolveSize(this):0;
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,reverse?--ii:ii++,step.value,step);});};



ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;


createClass(ToIndexedSequence,IndexedSeq);
function ToIndexedSequence(iter){
this._iter = iter;
this.size = iter.size;}


ToIndexedSequence.prototype.includes = function(value){
return this._iter.includes(value);};


ToIndexedSequence.prototype.__iterate = function(fn,reverse){var this$0=this;
var iterations=0;
return this._iter.__iterate(function(v){return fn(v,iterations++,this$0);},reverse);};


ToIndexedSequence.prototype.__iterator = function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
var iterations=0;
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,iterations++,step.value,step);});};





createClass(ToSetSequence,SetSeq);
function ToSetSequence(iter){
this._iter = iter;
this.size = iter.size;}


ToSetSequence.prototype.has = function(key){
return this._iter.includes(key);};


ToSetSequence.prototype.__iterate = function(fn,reverse){var this$0=this;
return this._iter.__iterate(function(v){return fn(v,v,this$0);},reverse);};


ToSetSequence.prototype.__iterator = function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,step.value,step.value,step);});};





createClass(FromEntriesSequence,KeyedSeq);
function FromEntriesSequence(entries){
this._iter = entries;
this.size = entries.size;}


FromEntriesSequence.prototype.entrySeq = function(){
return this._iter.toSeq();};


FromEntriesSequence.prototype.__iterate = function(fn,reverse){var this$0=this;
return this._iter.__iterate(function(entry){


if(entry){
validateEntry(entry);
var indexedIterable=isIterable(entry);
return fn(
indexedIterable?entry.get(1):entry[1],
indexedIterable?entry.get(0):entry[0],
this$0);}},


reverse);};


FromEntriesSequence.prototype.__iterator = function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
return new src_Iterator__Iterator(function(){
while(true) {
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;


if(entry){
validateEntry(entry);
var indexedIterable=isIterable(entry);
return iteratorValue(
type,
indexedIterable?entry.get(0):entry[0],
indexedIterable?entry.get(1):entry[1],
step);}}});};







ToIndexedSequence.prototype.cacheResult = 
ToKeyedSequence.prototype.cacheResult = 
ToSetSequence.prototype.cacheResult = 
FromEntriesSequence.prototype.cacheResult = 
cacheResultThrough;


function flipFactory(iterable){
var flipSequence=makeSequence(iterable);
flipSequence._iter = iterable;
flipSequence.size = iterable.size;
flipSequence.flip = function(){return iterable;};
flipSequence.reverse = function(){
var reversedSequence=iterable.reverse.apply(this);
reversedSequence.flip = function(){return iterable.reverse();};
return reversedSequence;};

flipSequence.has = function(key){return iterable.includes(key);};
flipSequence.includes = function(key){return iterable.has(key);};
flipSequence.cacheResult = cacheResultThrough;
flipSequence.__iterateUncached = function(fn,reverse){var this$0=this;
return iterable.__iterate(function(v,k){return fn(k,v,this$0) !== false;},reverse);};

flipSequence.__iteratorUncached = function(type,reverse){
if(type === ITERATE_ENTRIES){
var iterator=iterable.__iterator(type,reverse);
return new src_Iterator__Iterator(function(){
var step=iterator.next();
if(!step.done){
var k=step.value[0];
step.value[0] = step.value[1];
step.value[1] = k;}

return step;});}


return iterable.__iterator(
type === ITERATE_VALUES?ITERATE_KEYS:ITERATE_VALUES,
reverse);};


return flipSequence;}



function mapFactory(iterable,mapper,context){
var mappedSequence=makeSequence(iterable);
mappedSequence.size = iterable.size;
mappedSequence.has = function(key){return iterable.has(key);};
mappedSequence.get = function(key,notSetValue){
var v=iterable.get(key,NOT_SET);
return v === NOT_SET?
notSetValue:
mapper.call(context,v,key,iterable);};

mappedSequence.__iterateUncached = function(fn,reverse){var this$0=this;
return iterable.__iterate(
function(v,k,c){return fn(mapper.call(context,v,k,c),k,this$0) !== false;},
reverse);};


mappedSequence.__iteratorUncached = function(type,reverse){
var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
return new src_Iterator__Iterator(function(){
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var key=entry[0];
return iteratorValue(
type,
key,
mapper.call(context,entry[1],key,iterable),
step);});};



return mappedSequence;}



function reverseFactory(iterable,useKeys){
var reversedSequence=makeSequence(iterable);
reversedSequence._iter = iterable;
reversedSequence.size = iterable.size;
reversedSequence.reverse = function(){return iterable;};
if(iterable.flip){
reversedSequence.flip = function(){
var flipSequence=flipFactory(iterable);
flipSequence.reverse = function(){return iterable.flip();};
return flipSequence;};}


reversedSequence.get = function(key,notSetValue)
{return iterable.get(useKeys?key:-1 - key,notSetValue);};
reversedSequence.has = function(key)
{return iterable.has(useKeys?key:-1 - key);};
reversedSequence.includes = function(value){return iterable.includes(value);};
reversedSequence.cacheResult = cacheResultThrough;
reversedSequence.__iterate = function(fn,reverse){var this$0=this;
return iterable.__iterate(function(v,k){return fn(v,k,this$0);},!reverse);};

reversedSequence.__iterator = 
function(type,reverse){return iterable.__iterator(type,!reverse);};
return reversedSequence;}



function filterFactory(iterable,predicate,context,useKeys){
var filterSequence=makeSequence(iterable);
if(useKeys){
filterSequence.has = function(key){
var v=iterable.get(key,NOT_SET);
return v !== NOT_SET && !!predicate.call(context,v,key,iterable);};

filterSequence.get = function(key,notSetValue){
var v=iterable.get(key,NOT_SET);
return v !== NOT_SET && predicate.call(context,v,key,iterable)?
v:notSetValue;};}


filterSequence.__iterateUncached = function(fn,reverse){var this$0=this;
var iterations=0;
iterable.__iterate(function(v,k,c){
if(predicate.call(context,v,k,c)){
iterations++;
return fn(v,useKeys?k:iterations - 1,this$0);}},

reverse);
return iterations;};

filterSequence.__iteratorUncached = function(type,reverse){
var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var iterations=0;
return new src_Iterator__Iterator(function(){
while(true) {
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var key=entry[0];
var value=entry[1];
if(predicate.call(context,value,key,iterable)){
return iteratorValue(type,useKeys?key:iterations++,value,step);}}});};




return filterSequence;}



function countByFactory(iterable,grouper,context){
var groups=src_Map__Map().asMutable();
iterable.__iterate(function(v,k){
groups.update(
grouper.call(context,v,k,iterable),
0,
function(a){return a + 1;});});


return groups.asImmutable();}



function groupByFactory(iterable,grouper,context){
var isKeyedIter=isKeyed(iterable);
var groups=(isOrdered(iterable)?OrderedMap():src_Map__Map()).asMutable();
iterable.__iterate(function(v,k){
groups.update(
grouper.call(context,v,k,iterable),
function(a){return (a = a || [],a.push(isKeyedIter?[k,v]:v),a);});});


var coerce=iterableClass(iterable);
return groups.map(function(arr){return reify(iterable,coerce(arr));});}



function sliceFactory(iterable,begin,end,useKeys){
var originalSize=iterable.size;



if(begin !== undefined){
begin = begin | 0;}

if(end !== undefined){
end = end | 0;}


if(wholeSlice(begin,end,originalSize)){
return iterable;}


var resolvedBegin=resolveBegin(begin,originalSize);
var resolvedEnd=resolveEnd(end,originalSize);




if(resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd){
return sliceFactory(iterable.toSeq().cacheResult(),begin,end,useKeys);}






var resolvedSize=resolvedEnd - resolvedBegin;
var sliceSize;
if(resolvedSize === resolvedSize){
sliceSize = resolvedSize < 0?0:resolvedSize;}


var sliceSeq=makeSequence(iterable);



sliceSeq.size = sliceSize === 0?sliceSize:iterable.size && sliceSize || undefined;

if(!useKeys && isSeq(iterable) && sliceSize >= 0){
sliceSeq.get = function(index,notSetValue){
index = wrapIndex(this,index);
return index >= 0 && index < sliceSize?
iterable.get(index + resolvedBegin,notSetValue):
notSetValue;};}



sliceSeq.__iterateUncached = function(fn,reverse){var this$0=this;
if(sliceSize === 0){
return 0;}

if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var skipped=0;
var isSkipping=true;
var iterations=0;
iterable.__iterate(function(v,k){
if(!(isSkipping && (isSkipping = skipped++ < resolvedBegin))){
iterations++;
return fn(v,useKeys?k:iterations - 1,this$0) !== false && 
iterations !== sliceSize;}});


return iterations;};


sliceSeq.__iteratorUncached = function(type,reverse){
if(sliceSize !== 0 && reverse){
return this.cacheResult().__iterator(type,reverse);}


var iterator=sliceSize !== 0 && iterable.__iterator(type,reverse);
var skipped=0;
var iterations=0;
return new src_Iterator__Iterator(function(){
while(skipped++ < resolvedBegin) {
iterator.next();}

if(++iterations > sliceSize){
return iteratorDone();}

var step=iterator.next();
if(useKeys || type === ITERATE_VALUES){
return step;}else 
if(type === ITERATE_KEYS){
return iteratorValue(type,iterations - 1,undefined,step);}else 
{
return iteratorValue(type,iterations - 1,step.value[1],step);}});};




return sliceSeq;}



function takeWhileFactory(iterable,predicate,context){
var takeSequence=makeSequence(iterable);
takeSequence.__iterateUncached = function(fn,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterations=0;
iterable.__iterate(function(v,k,c)
{return predicate.call(context,v,k,c) && ++iterations && fn(v,k,this$0);});

return iterations;};

takeSequence.__iteratorUncached = function(type,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var iterating=true;
return new src_Iterator__Iterator(function(){
if(!iterating){
return iteratorDone();}

var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var k=entry[0];
var v=entry[1];
if(!predicate.call(context,v,k,this$0)){
iterating = false;
return iteratorDone();}

return type === ITERATE_ENTRIES?step:
iteratorValue(type,k,v,step);});};


return takeSequence;}



function skipWhileFactory(iterable,predicate,context,useKeys){
var skipSequence=makeSequence(iterable);
skipSequence.__iterateUncached = function(fn,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var isSkipping=true;
var iterations=0;
iterable.__iterate(function(v,k,c){
if(!(isSkipping && (isSkipping = predicate.call(context,v,k,c)))){
iterations++;
return fn(v,useKeys?k:iterations - 1,this$0);}});


return iterations;};

skipSequence.__iteratorUncached = function(type,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var skipping=true;
var iterations=0;
return new src_Iterator__Iterator(function(){
var step,k,v;
do {
step = iterator.next();
if(step.done){
if(useKeys || type === ITERATE_VALUES){
return step;}else 
if(type === ITERATE_KEYS){
return iteratorValue(type,iterations++,undefined,step);}else 
{
return iteratorValue(type,iterations++,step.value[1],step);}}


var entry=step.value;
k = entry[0];
v = entry[1];
skipping && (skipping = predicate.call(context,v,k,this$0));}while(
skipping);
return type === ITERATE_ENTRIES?step:
iteratorValue(type,k,v,step);});};


return skipSequence;}



function concatFactory(iterable,values){
var isKeyedIterable=isKeyed(iterable);
var iters=[iterable].concat(values).map(function(v){
if(!isIterable(v)){
v = isKeyedIterable?
keyedSeqFromValue(v):
indexedSeqFromValue(Array.isArray(v)?v:[v]);}else 
if(isKeyedIterable){
v = KeyedIterable(v);}

return v;}).
filter(function(v){return v.size !== 0;});

if(iters.length === 0){
return iterable;}


if(iters.length === 1){
var singleton=iters[0];
if(singleton === iterable || 
isKeyedIterable && isKeyed(singleton) || 
isIndexed(iterable) && isIndexed(singleton)){
return singleton;}}



var concatSeq=new ArraySeq(iters);
if(isKeyedIterable){
concatSeq = concatSeq.toKeyedSeq();}else 
if(!isIndexed(iterable)){
concatSeq = concatSeq.toSetSeq();}

concatSeq = concatSeq.flatten(true);
concatSeq.size = iters.reduce(
function(sum,seq){
if(sum !== undefined){
var size=seq.size;
if(size !== undefined){
return sum + size;}}},



0);

return concatSeq;}



function flattenFactory(iterable,depth,useKeys){
var flatSequence=makeSequence(iterable);
flatSequence.__iterateUncached = function(fn,reverse){
var iterations=0;
var stopped=false;
function flatDeep(iter,currentDepth){var this$0=this;
iter.__iterate(function(v,k){
if((!depth || currentDepth < depth) && isIterable(v)){
flatDeep(v,currentDepth + 1);}else 
if(fn(v,useKeys?k:iterations++,this$0) === false){
stopped = true;}

return !stopped;},
reverse);}

flatDeep(iterable,0);
return iterations;};

flatSequence.__iteratorUncached = function(type,reverse){
var iterator=iterable.__iterator(type,reverse);
var stack=[];
var iterations=0;
return new src_Iterator__Iterator(function(){
while(iterator) {
var step=iterator.next();
if(step.done !== false){
iterator = stack.pop();
continue;}

var v=step.value;
if(type === ITERATE_ENTRIES){
v = v[1];}

if((!depth || stack.length < depth) && isIterable(v)){
stack.push(iterator);
iterator = v.__iterator(type,reverse);}else 
{
return useKeys?step:iteratorValue(type,iterations++,v,step);}}


return iteratorDone();});};


return flatSequence;}



function flatMapFactory(iterable,mapper,context){
var coerce=iterableClass(iterable);
return iterable.toSeq().map(
function(v,k){return coerce(mapper.call(context,v,k,iterable));}).
flatten(true);}



function interposeFactory(iterable,separator){
var interposedSequence=makeSequence(iterable);
interposedSequence.size = iterable.size && iterable.size * 2 - 1;
interposedSequence.__iterateUncached = function(fn,reverse){var this$0=this;
var iterations=0;
iterable.__iterate(function(v,k)
{return (!iterations || fn(separator,iterations++,this$0) !== false) && 
fn(v,iterations++,this$0) !== false;},
reverse);

return iterations;};

interposedSequence.__iteratorUncached = function(type,reverse){
var iterator=iterable.__iterator(ITERATE_VALUES,reverse);
var iterations=0;
var step;
return new src_Iterator__Iterator(function(){
if(!step || iterations % 2){
step = iterator.next();
if(step.done){
return step;}}


return iterations % 2?
iteratorValue(type,iterations++,separator):
iteratorValue(type,iterations++,step.value,step);});};


return interposedSequence;}



function sortFactory(iterable,comparator,mapper){
if(!comparator){
comparator = defaultComparator;}

var isKeyedIterable=isKeyed(iterable);
var index=0;
var entries=iterable.toSeq().map(
function(v,k){return [k,v,index++,mapper?mapper(v,k,iterable):v];}).
toArray();
entries.sort(function(a,b){return comparator(a[3],b[3]) || a[2] - b[2];}).forEach(
isKeyedIterable?
function(v,i){entries[i].length = 2;}:
function(v,i){entries[i] = v[1];});

return isKeyedIterable?KeyedSeq(entries):
isIndexed(iterable)?IndexedSeq(entries):
SetSeq(entries);}



function maxFactory(iterable,comparator,mapper){
if(!comparator){
comparator = defaultComparator;}

if(mapper){
var entry=iterable.toSeq().
map(function(v,k){return [v,mapper(v,k,iterable)];}).
reduce(function(a,b){return maxCompare(comparator,a[1],b[1])?b:a;});
return entry && entry[0];}else 
{
return iterable.reduce(function(a,b){return maxCompare(comparator,a,b)?b:a;});}}



function maxCompare(comparator,a,b){
var comp=comparator(b,a);


return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;}



function zipWithFactory(keyIter,zipper,iters){
var zipSequence=makeSequence(keyIter);
zipSequence.size = new ArraySeq(iters).map(function(i){return i.size;}).min();


zipSequence.__iterate = function(fn,reverse){













var iterator=this.__iterator(ITERATE_VALUES,reverse);
var step;
var iterations=0;
while(!(step = iterator.next()).done) {
if(fn(step.value,iterations++,this) === false){
break;}}


return iterations;};

zipSequence.__iteratorUncached = function(type,reverse){
var iterators=iters.map(function(i)
{return (i = Iterable(i),getIterator(reverse?i.reverse():i));});

var iterations=0;
var isDone=false;
return new src_Iterator__Iterator(function(){
var steps;
if(!isDone){
steps = iterators.map(function(i){return i.next();});
isDone = steps.some(function(s){return s.done;});}

if(isDone){
return iteratorDone();}

return iteratorValue(
type,
iterations++,
zipper.apply(null,steps.map(function(s){return s.value;})));});};



return zipSequence;}





function reify(iter,seq){
return isSeq(iter)?seq:iter.constructor(seq);}


function validateEntry(entry){
if(entry !== Object(entry)){
throw new TypeError('Expected [K, V] tuple: ' + entry);}}



function resolveSize(iter){
assertNotInfinite(iter.size);
return ensureSize(iter);}


function iterableClass(iterable){
return isKeyed(iterable)?KeyedIterable:
isIndexed(iterable)?IndexedIterable:
SetIterable;}


function makeSequence(iterable){
return Object.create(
(
isKeyed(iterable)?KeyedSeq:
isIndexed(iterable)?IndexedSeq:
SetSeq).
prototype);}



function cacheResultThrough(){
if(this._iter.cacheResult){
this._iter.cacheResult();
this.size = this._iter.size;
return this;}else 
{
return Seq.prototype.cacheResult.call(this);}}



function defaultComparator(a,b){
return a > b?1:a < b?-1:0;}


function forceIterator(keyPath){
var iter=getIterator(keyPath);
if(!iter){


if(!isArrayLike(keyPath)){
throw new TypeError('Expected iterable or array-like: ' + keyPath);}

iter = getIterator(Iterable(keyPath));}

return iter;}


createClass(src_Map__Map,KeyedCollection);



function src_Map__Map(value){
return value === null || value === undefined?emptyMap():
isMap(value) && !isOrdered(value)?value:
emptyMap().withMutations(function(map){
var iter=KeyedIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v,k){return map.set(k,v);});});}



src_Map__Map.prototype.toString = function(){
return this.__toString('Map {','}');};




src_Map__Map.prototype.get = function(k,notSetValue){
return this._root?
this._root.get(0,undefined,k,notSetValue):
notSetValue;};




src_Map__Map.prototype.set = function(k,v){
return updateMap(this,k,v);};


src_Map__Map.prototype.setIn = function(keyPath,v){
return this.updateIn(keyPath,NOT_SET,function(){return v;});};


src_Map__Map.prototype.remove = function(k){
return updateMap(this,k,NOT_SET);};


src_Map__Map.prototype.deleteIn = function(keyPath){
return this.updateIn(keyPath,function(){return NOT_SET;});};


src_Map__Map.prototype.update = function(k,notSetValue,updater){
return arguments.length === 1?
k(this):
this.updateIn([k],notSetValue,updater);};


src_Map__Map.prototype.updateIn = function(keyPath,notSetValue,updater){
if(!updater){
updater = notSetValue;
notSetValue = undefined;}

var updatedValue=updateInDeepMap(
this,
forceIterator(keyPath),
notSetValue,
updater);

return updatedValue === NOT_SET?undefined:updatedValue;};


src_Map__Map.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = 0;
this._root = null;
this.__hash = undefined;
this.__altered = true;
return this;}

return emptyMap();};




src_Map__Map.prototype.merge = function(){
return mergeIntoMapWith(this,undefined,arguments);};


src_Map__Map.prototype.mergeWith = function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoMapWith(this,merger,iters);};


src_Map__Map.prototype.mergeIn = function(keyPath){var iters=SLICE$0.call(arguments,1);
return this.updateIn(
keyPath,
emptyMap(),
function(m){return typeof m.merge === 'function'?
m.merge.apply(m,iters):
iters[iters.length - 1];});};



src_Map__Map.prototype.mergeDeep = function(){
return mergeIntoMapWith(this,deepMerger(undefined),arguments);};


src_Map__Map.prototype.mergeDeepWith = function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoMapWith(this,deepMerger(merger),iters);};


src_Map__Map.prototype.mergeDeepIn = function(keyPath){var iters=SLICE$0.call(arguments,1);
return this.updateIn(
keyPath,
emptyMap(),
function(m){return typeof m.mergeDeep === 'function'?
m.mergeDeep.apply(m,iters):
iters[iters.length - 1];});};



src_Map__Map.prototype.sort = function(comparator){

return OrderedMap(sortFactory(this,comparator));};


src_Map__Map.prototype.sortBy = function(mapper,comparator){

return OrderedMap(sortFactory(this,comparator,mapper));};




src_Map__Map.prototype.withMutations = function(fn){
var mutable=this.asMutable();
fn(mutable);
return mutable.wasAltered()?mutable.__ensureOwner(this.__ownerID):this;};


src_Map__Map.prototype.asMutable = function(){
return this.__ownerID?this:this.__ensureOwner(new OwnerID());};


src_Map__Map.prototype.asImmutable = function(){
return this.__ensureOwner();};


src_Map__Map.prototype.wasAltered = function(){
return this.__altered;};


src_Map__Map.prototype.__iterator = function(type,reverse){
return new MapIterator(this,type,reverse);};


src_Map__Map.prototype.__iterate = function(fn,reverse){var this$0=this;
var iterations=0;
this._root && this._root.iterate(function(entry){
iterations++;
return fn(entry[1],entry[0],this$0);},
reverse);
return iterations;};


src_Map__Map.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID = ownerID;
this.__altered = false;
return this;}

return makeMap(this.size,this._root,ownerID,this.__hash);};



function isMap(maybeMap){
return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);}


src_Map__Map.isMap = isMap;

var IS_MAP_SENTINEL='@@__IMMUTABLE_MAP__@@';

var MapPrototype=src_Map__Map.prototype;
MapPrototype[IS_MAP_SENTINEL] = true;
MapPrototype[DELETE] = MapPrototype.remove;
MapPrototype.removeIn = MapPrototype.deleteIn;






function ArrayMapNode(ownerID,entries){
this.ownerID = ownerID;
this.entries = entries;}


ArrayMapNode.prototype.get = function(shift,keyHash,key,notSetValue){
var entries=this.entries;
for(var ii=0,len=entries.length;ii < len;ii++) {
if(is(key,entries[ii][0])){
return entries[ii][1];}}


return notSetValue;};


ArrayMapNode.prototype.update = function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
var removed=value === NOT_SET;

var entries=this.entries;
var idx=0;
for(var len=entries.length;idx < len;idx++) {
if(is(key,entries[idx][0])){
break;}}


var exists=idx < len;

if(exists?entries[idx][1] === value:removed){
return this;}


SetRef(didAlter);
(removed || !exists) && SetRef(didChangeSize);

if(removed && entries.length === 1){
return;}


if(!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE){
return createNodes(ownerID,entries,key,value);}


var isEditable=ownerID && ownerID === this.ownerID;
var newEntries=isEditable?entries:arrCopy(entries);

if(exists){
if(removed){
idx === len - 1?newEntries.pop():newEntries[idx] = newEntries.pop();}else 
{
newEntries[idx] = [key,value];}}else 

{
newEntries.push([key,value]);}


if(isEditable){
this.entries = newEntries;
return this;}


return new ArrayMapNode(ownerID,newEntries);};





function BitmapIndexedNode(ownerID,bitmap,nodes){
this.ownerID = ownerID;
this.bitmap = bitmap;
this.nodes = nodes;}


BitmapIndexedNode.prototype.get = function(shift,keyHash,key,notSetValue){
if(keyHash === undefined){
keyHash = hash(key);}

var bit=1 << ((shift === 0?keyHash:keyHash >>> shift) & MASK);
var bitmap=this.bitmap;
return (bitmap & bit) === 0?notSetValue:
this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT,keyHash,key,notSetValue);};


BitmapIndexedNode.prototype.update = function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash === undefined){
keyHash = hash(key);}

var keyHashFrag=(shift === 0?keyHash:keyHash >>> shift) & MASK;
var bit=1 << keyHashFrag;
var bitmap=this.bitmap;
var exists=(bitmap & bit) !== 0;

if(!exists && value === NOT_SET){
return this;}


var idx=popCount(bitmap & bit - 1);
var nodes=this.nodes;
var node=exists?nodes[idx]:undefined;
var newNode=updateNode(node,ownerID,shift + SHIFT,keyHash,key,value,didChangeSize,didAlter);

if(newNode === node){
return this;}


if(!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE){
return expandNodes(ownerID,nodes,bitmap,keyHashFrag,newNode);}


if(exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])){
return nodes[idx ^ 1];}


if(exists && newNode && nodes.length === 1 && isLeafNode(newNode)){
return newNode;}


var isEditable=ownerID && ownerID === this.ownerID;
var newBitmap=exists?newNode?bitmap:bitmap ^ bit:bitmap | bit;
var newNodes=exists?newNode?
setIn(nodes,idx,newNode,isEditable):
spliceOut(nodes,idx,isEditable):
spliceIn(nodes,idx,newNode,isEditable);

if(isEditable){
this.bitmap = newBitmap;
this.nodes = newNodes;
return this;}


return new BitmapIndexedNode(ownerID,newBitmap,newNodes);};





function HashArrayMapNode(ownerID,count,nodes){
this.ownerID = ownerID;
this.count = count;
this.nodes = nodes;}


HashArrayMapNode.prototype.get = function(shift,keyHash,key,notSetValue){
if(keyHash === undefined){
keyHash = hash(key);}

var idx=(shift === 0?keyHash:keyHash >>> shift) & MASK;
var node=this.nodes[idx];
return node?node.get(shift + SHIFT,keyHash,key,notSetValue):notSetValue;};


HashArrayMapNode.prototype.update = function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash === undefined){
keyHash = hash(key);}

var idx=(shift === 0?keyHash:keyHash >>> shift) & MASK;
var removed=value === NOT_SET;
var nodes=this.nodes;
var node=nodes[idx];

if(removed && !node){
return this;}


var newNode=updateNode(node,ownerID,shift + SHIFT,keyHash,key,value,didChangeSize,didAlter);
if(newNode === node){
return this;}


var newCount=this.count;
if(!node){
newCount++;}else 
if(!newNode){
newCount--;
if(newCount < MIN_HASH_ARRAY_MAP_SIZE){
return packNodes(ownerID,nodes,newCount,idx);}}



var isEditable=ownerID && ownerID === this.ownerID;
var newNodes=setIn(nodes,idx,newNode,isEditable);

if(isEditable){
this.count = newCount;
this.nodes = newNodes;
return this;}


return new HashArrayMapNode(ownerID,newCount,newNodes);};





function HashCollisionNode(ownerID,keyHash,entries){
this.ownerID = ownerID;
this.keyHash = keyHash;
this.entries = entries;}


HashCollisionNode.prototype.get = function(shift,keyHash,key,notSetValue){
var entries=this.entries;
for(var ii=0,len=entries.length;ii < len;ii++) {
if(is(key,entries[ii][0])){
return entries[ii][1];}}


return notSetValue;};


HashCollisionNode.prototype.update = function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash === undefined){
keyHash = hash(key);}


var removed=value === NOT_SET;

if(keyHash !== this.keyHash){
if(removed){
return this;}

SetRef(didAlter);
SetRef(didChangeSize);
return mergeIntoNode(this,ownerID,shift,keyHash,[key,value]);}


var entries=this.entries;
var idx=0;
for(var len=entries.length;idx < len;idx++) {
if(is(key,entries[idx][0])){
break;}}


var exists=idx < len;

if(exists?entries[idx][1] === value:removed){
return this;}


SetRef(didAlter);
(removed || !exists) && SetRef(didChangeSize);

if(removed && len === 2){
return new ValueNode(ownerID,this.keyHash,entries[idx ^ 1]);}


var isEditable=ownerID && ownerID === this.ownerID;
var newEntries=isEditable?entries:arrCopy(entries);

if(exists){
if(removed){
idx === len - 1?newEntries.pop():newEntries[idx] = newEntries.pop();}else 
{
newEntries[idx] = [key,value];}}else 

{
newEntries.push([key,value]);}


if(isEditable){
this.entries = newEntries;
return this;}


return new HashCollisionNode(ownerID,this.keyHash,newEntries);};





function ValueNode(ownerID,keyHash,entry){
this.ownerID = ownerID;
this.keyHash = keyHash;
this.entry = entry;}


ValueNode.prototype.get = function(shift,keyHash,key,notSetValue){
return is(key,this.entry[0])?this.entry[1]:notSetValue;};


ValueNode.prototype.update = function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
var removed=value === NOT_SET;
var keyMatch=is(key,this.entry[0]);
if(keyMatch?value === this.entry[1]:removed){
return this;}


SetRef(didAlter);

if(removed){
SetRef(didChangeSize);
return;}


if(keyMatch){
if(ownerID && ownerID === this.ownerID){
this.entry[1] = value;
return this;}

return new ValueNode(ownerID,this.keyHash,[key,value]);}


SetRef(didChangeSize);
return mergeIntoNode(this,ownerID,shift,hash(key),[key,value]);};






ArrayMapNode.prototype.iterate = 
HashCollisionNode.prototype.iterate = function(fn,reverse){
var entries=this.entries;
for(var ii=0,maxIndex=entries.length - 1;ii <= maxIndex;ii++) {
if(fn(entries[reverse?maxIndex - ii:ii]) === false){
return false;}}};




BitmapIndexedNode.prototype.iterate = 
HashArrayMapNode.prototype.iterate = function(fn,reverse){
var nodes=this.nodes;
for(var ii=0,maxIndex=nodes.length - 1;ii <= maxIndex;ii++) {
var node=nodes[reverse?maxIndex - ii:ii];
if(node && node.iterate(fn,reverse) === false){
return false;}}};




ValueNode.prototype.iterate = function(fn,reverse){
return fn(this.entry);};


createClass(MapIterator,src_Iterator__Iterator);

function MapIterator(map,type,reverse){
this._type = type;
this._reverse = reverse;
this._stack = map._root && mapIteratorFrame(map._root);}


MapIterator.prototype.next = function(){
var type=this._type;
var stack=this._stack;
while(stack) {
var node=stack.node;
var index=stack.index++;
var maxIndex;
if(node.entry){
if(index === 0){
return mapIteratorValue(type,node.entry);}}else 

if(node.entries){
maxIndex = node.entries.length - 1;
if(index <= maxIndex){
return mapIteratorValue(type,node.entries[this._reverse?maxIndex - index:index]);}}else 

{
maxIndex = node.nodes.length - 1;
if(index <= maxIndex){
var subNode=node.nodes[this._reverse?maxIndex - index:index];
if(subNode){
if(subNode.entry){
return mapIteratorValue(type,subNode.entry);}

stack = this._stack = mapIteratorFrame(subNode,stack);}

continue;}}


stack = this._stack = this._stack.__prev;}

return iteratorDone();};



function mapIteratorValue(type,entry){
return iteratorValue(type,entry[0],entry[1]);}


function mapIteratorFrame(node,prev){
return {
node:node,
index:0,
__prev:prev};}



function makeMap(size,root,ownerID,hash){
var map=Object.create(MapPrototype);
map.size = size;
map._root = root;
map.__ownerID = ownerID;
map.__hash = hash;
map.__altered = false;
return map;}


var EMPTY_MAP;
function emptyMap(){
return EMPTY_MAP || (EMPTY_MAP = makeMap(0));}


function updateMap(map,k,v){
var newRoot;
var newSize;
if(!map._root){
if(v === NOT_SET){
return map;}

newSize = 1;
newRoot = new ArrayMapNode(map.__ownerID,[[k,v]]);}else 
{
var didChangeSize=MakeRef(CHANGE_LENGTH);
var didAlter=MakeRef(DID_ALTER);
newRoot = updateNode(map._root,map.__ownerID,0,undefined,k,v,didChangeSize,didAlter);
if(!didAlter.value){
return map;}

newSize = map.size + (didChangeSize.value?v === NOT_SET?-1:1:0);}

if(map.__ownerID){
map.size = newSize;
map._root = newRoot;
map.__hash = undefined;
map.__altered = true;
return map;}

return newRoot?makeMap(newSize,newRoot):emptyMap();}


function updateNode(node,ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(!node){
if(value === NOT_SET){
return node;}

SetRef(didAlter);
SetRef(didChangeSize);
return new ValueNode(ownerID,keyHash,[key,value]);}

return node.update(ownerID,shift,keyHash,key,value,didChangeSize,didAlter);}


function isLeafNode(node){
return node.constructor === ValueNode || node.constructor === HashCollisionNode;}


function mergeIntoNode(node,ownerID,shift,keyHash,entry){
if(node.keyHash === keyHash){
return new HashCollisionNode(ownerID,keyHash,[node.entry,entry]);}


var idx1=(shift === 0?node.keyHash:node.keyHash >>> shift) & MASK;
var idx2=(shift === 0?keyHash:keyHash >>> shift) & MASK;

var newNode;
var nodes=idx1 === idx2?
[mergeIntoNode(node,ownerID,shift + SHIFT,keyHash,entry)]:(
newNode = new ValueNode(ownerID,keyHash,entry),idx1 < idx2?[node,newNode]:[newNode,node]);

return new BitmapIndexedNode(ownerID,1 << idx1 | 1 << idx2,nodes);}


function createNodes(ownerID,entries,key,value){
if(!ownerID){
ownerID = new OwnerID();}

var node=new ValueNode(ownerID,hash(key),[key,value]);
for(var ii=0;ii < entries.length;ii++) {
var entry=entries[ii];
node = node.update(ownerID,0,undefined,entry[0],entry[1]);}

return node;}


function packNodes(ownerID,nodes,count,excluding){
var bitmap=0;
var packedII=0;
var packedNodes=new Array(count);
for(var ii=0,bit=1,len=nodes.length;ii < len;ii++,bit <<= 1) {
var node=nodes[ii];
if(node !== undefined && ii !== excluding){
bitmap |= bit;
packedNodes[packedII++] = node;}}


return new BitmapIndexedNode(ownerID,bitmap,packedNodes);}


function expandNodes(ownerID,nodes,bitmap,including,node){
var count=0;
var expandedNodes=new Array(SIZE);
for(var ii=0;bitmap !== 0;ii++,bitmap >>>= 1) {
expandedNodes[ii] = bitmap & 1?nodes[count++]:undefined;}

expandedNodes[including] = node;
return new HashArrayMapNode(ownerID,count + 1,expandedNodes);}


function mergeIntoMapWith(map,merger,iterables){
var iters=[];
for(var ii=0;ii < iterables.length;ii++) {
var value=iterables[ii];
var iter=KeyedIterable(value);
if(!isIterable(value)){
iter = iter.map(function(v){return fromJS(v);});}

iters.push(iter);}

return mergeIntoCollectionWith(map,merger,iters);}


function deepMerger(merger){
return function(existing,value,key)
{return existing && existing.mergeDeepWith && isIterable(value)?
existing.mergeDeepWith(merger,value):
merger?merger(existing,value,key):value;};}


function mergeIntoCollectionWith(collection,merger,iters){
iters = iters.filter(function(x){return x.size !== 0;});
if(iters.length === 0){
return collection;}

if(collection.size === 0 && !collection.__ownerID && iters.length === 1){
return collection.constructor(iters[0]);}

return collection.withMutations(function(collection){
var mergeIntoMap=merger?
function(value,key){
collection.update(key,NOT_SET,function(existing)
{return existing === NOT_SET?value:merger(existing,value,key);});}:


function(value,key){
collection.set(key,value);};

for(var ii=0;ii < iters.length;ii++) {
iters[ii].forEach(mergeIntoMap);}});}




function updateInDeepMap(existing,keyPathIter,notSetValue,updater){
var isNotSet=existing === NOT_SET;
var step=keyPathIter.next();
if(step.done){
var existingValue=isNotSet?notSetValue:existing;
var newValue=updater(existingValue);
return newValue === existingValue?existing:newValue;}

invariant(
isNotSet || existing && existing.set,
'invalid keyPath');

var key=step.value;
var nextExisting=isNotSet?NOT_SET:existing.get(key,NOT_SET);
var nextUpdated=updateInDeepMap(
nextExisting,
keyPathIter,
notSetValue,
updater);

return nextUpdated === nextExisting?existing:
nextUpdated === NOT_SET?existing.remove(key):
(isNotSet?emptyMap():existing).set(key,nextUpdated);}


function popCount(x){
x = x - (x >> 1 & 0x55555555);
x = (x & 0x33333333) + (x >> 2 & 0x33333333);
x = x + (x >> 4) & 0x0f0f0f0f;
x = x + (x >> 8);
x = x + (x >> 16);
return x & 0x7f;}


function setIn(array,idx,val,canEdit){
var newArray=canEdit?array:arrCopy(array);
newArray[idx] = val;
return newArray;}


function spliceIn(array,idx,val,canEdit){
var newLen=array.length + 1;
if(canEdit && idx + 1 === newLen){
array[idx] = val;
return array;}

var newArray=new Array(newLen);
var after=0;
for(var ii=0;ii < newLen;ii++) {
if(ii === idx){
newArray[ii] = val;
after = -1;}else 
{
newArray[ii] = array[ii + after];}}


return newArray;}


function spliceOut(array,idx,canEdit){
var newLen=array.length - 1;
if(canEdit && idx === newLen){
array.pop();
return array;}

var newArray=new Array(newLen);
var after=0;
for(var ii=0;ii < newLen;ii++) {
if(ii === idx){
after = 1;}

newArray[ii] = array[ii + after];}

return newArray;}


var MAX_ARRAY_MAP_SIZE=SIZE / 4;
var MAX_BITMAP_INDEXED_SIZE=SIZE / 2;
var MIN_HASH_ARRAY_MAP_SIZE=SIZE / 4;

createClass(List,IndexedCollection);



function List(value){
var empty=emptyList();
if(value === null || value === undefined){
return empty;}

if(isList(value)){
return value;}

var iter=IndexedIterable(value);
var size=iter.size;
if(size === 0){
return empty;}

assertNotInfinite(size);
if(size > 0 && size < SIZE){
return makeList(0,size,SHIFT,null,new VNode(iter.toArray()));}

return empty.withMutations(function(list){
list.setSize(size);
iter.forEach(function(v,i){return list.set(i,v);});});}



List.of = function(){
return this(arguments);};


List.prototype.toString = function(){
return this.__toString('List [',']');};




List.prototype.get = function(index,notSetValue){
index = wrapIndex(this,index);
if(index >= 0 && index < this.size){
index += this._origin;
var node=listNodeFor(this,index);
return node && node.array[index & MASK];}

return notSetValue;};




List.prototype.set = function(index,value){
return updateList(this,index,value);};


List.prototype.remove = function(index){
return !this.has(index)?this:
index === 0?this.shift():
index === this.size - 1?this.pop():
this.splice(index,1);};


List.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = this._origin = this._capacity = 0;
this._level = SHIFT;
this._root = this._tail = null;
this.__hash = undefined;
this.__altered = true;
return this;}

return emptyList();};


List.prototype.push = function(){
var values=arguments;
var oldSize=this.size;
return this.withMutations(function(list){
setListBounds(list,0,oldSize + values.length);
for(var ii=0;ii < values.length;ii++) {
list.set(oldSize + ii,values[ii]);}});};




List.prototype.pop = function(){
return setListBounds(this,0,-1);};


List.prototype.unshift = function(){
var values=arguments;
return this.withMutations(function(list){
setListBounds(list,-values.length);
for(var ii=0;ii < values.length;ii++) {
list.set(ii,values[ii]);}});};




List.prototype.shift = function(){
return setListBounds(this,1);};




List.prototype.merge = function(){
return mergeIntoListWith(this,undefined,arguments);};


List.prototype.mergeWith = function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoListWith(this,merger,iters);};


List.prototype.mergeDeep = function(){
return mergeIntoListWith(this,deepMerger(undefined),arguments);};


List.prototype.mergeDeepWith = function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoListWith(this,deepMerger(merger),iters);};


List.prototype.setSize = function(size){
return setListBounds(this,0,size);};




List.prototype.slice = function(begin,end){
var size=this.size;
if(wholeSlice(begin,end,size)){
return this;}

return setListBounds(
this,
resolveBegin(begin,size),
resolveEnd(end,size));};



List.prototype.__iterator = function(type,reverse){
var index=0;
var values=iterateList(this,reverse);
return new src_Iterator__Iterator(function(){
var value=values();
return value === DONE?
iteratorDone():
iteratorValue(type,index++,value);});};



List.prototype.__iterate = function(fn,reverse){
var index=0;
var values=iterateList(this,reverse);
var value;
while((value = values()) !== DONE) {
if(fn(value,index++,this) === false){
break;}}


return index;};


List.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID = ownerID;
return this;}

return makeList(this._origin,this._capacity,this._level,this._root,this._tail,ownerID,this.__hash);};



function isList(maybeList){
return !!(maybeList && maybeList[IS_LIST_SENTINEL]);}


List.isList = isList;

var IS_LIST_SENTINEL='@@__IMMUTABLE_LIST__@@';

var ListPrototype=List.prototype;
ListPrototype[IS_LIST_SENTINEL] = true;
ListPrototype[DELETE] = ListPrototype.remove;
ListPrototype.setIn = MapPrototype.setIn;
ListPrototype.deleteIn = 
ListPrototype.removeIn = MapPrototype.removeIn;
ListPrototype.update = MapPrototype.update;
ListPrototype.updateIn = MapPrototype.updateIn;
ListPrototype.mergeIn = MapPrototype.mergeIn;
ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
ListPrototype.withMutations = MapPrototype.withMutations;
ListPrototype.asMutable = MapPrototype.asMutable;
ListPrototype.asImmutable = MapPrototype.asImmutable;
ListPrototype.wasAltered = MapPrototype.wasAltered;



function VNode(array,ownerID){
this.array = array;
this.ownerID = ownerID;}




VNode.prototype.removeBefore = function(ownerID,level,index){
if(index === level?1 << level:0 || this.array.length === 0){
return this;}

var originIndex=index >>> level & MASK;
if(originIndex >= this.array.length){
return new VNode([],ownerID);}

var removingFirst=originIndex === 0;
var newChild;
if(level > 0){
var oldChild=this.array[originIndex];
newChild = oldChild && oldChild.removeBefore(ownerID,level - SHIFT,index);
if(newChild === oldChild && removingFirst){
return this;}}


if(removingFirst && !newChild){
return this;}

var editable=editableVNode(this,ownerID);
if(!removingFirst){
for(var ii=0;ii < originIndex;ii++) {
editable.array[ii] = undefined;}}


if(newChild){
editable.array[originIndex] = newChild;}

return editable;};


VNode.prototype.removeAfter = function(ownerID,level,index){
if(index === (level?1 << level:0) || this.array.length === 0){
return this;}

var sizeIndex=index - 1 >>> level & MASK;
if(sizeIndex >= this.array.length){
return this;}


var newChild;
if(level > 0){
var oldChild=this.array[sizeIndex];
newChild = oldChild && oldChild.removeAfter(ownerID,level - SHIFT,index);
if(newChild === oldChild && sizeIndex === this.array.length - 1){
return this;}}



var editable=editableVNode(this,ownerID);
editable.array.splice(sizeIndex + 1);
if(newChild){
editable.array[sizeIndex] = newChild;}

return editable;};




var DONE={};

function iterateList(list,reverse){
var left=list._origin;
var right=list._capacity;
var tailPos=getTailOffset(right);
var tail=list._tail;

return iterateNodeOrLeaf(list._root,list._level,0);

function iterateNodeOrLeaf(node,level,offset){
return level === 0?
iterateLeaf(node,offset):
iterateNode(node,level,offset);}


function iterateLeaf(node,offset){
var array=offset === tailPos?tail && tail.array:node && node.array;
var from=offset > left?0:left - offset;
var to=right - offset;
if(to > SIZE){
to = SIZE;}

return function(){
if(from === to){
return DONE;}

var idx=reverse?--to:from++;
return array && array[idx];};}



function iterateNode(node,level,offset){
var values;
var array=node && node.array;
var from=offset > left?0:left - offset >> level;
var to=(right - offset >> level) + 1;
if(to > SIZE){
to = SIZE;}

return function(){
do {
if(values){
var value=values();
if(value !== DONE){
return value;}

values = null;}

if(from === to){
return DONE;}

var idx=reverse?--to:from++;
values = iterateNodeOrLeaf(
array && array[idx],level - SHIFT,offset + (idx << level));}while(

true);};}}




function makeList(origin,capacity,level,root,tail,ownerID,hash){
var list=Object.create(ListPrototype);
list.size = capacity - origin;
list._origin = origin;
list._capacity = capacity;
list._level = level;
list._root = root;
list._tail = tail;
list.__ownerID = ownerID;
list.__hash = hash;
list.__altered = false;
return list;}


var EMPTY_LIST;
function emptyList(){
return EMPTY_LIST || (EMPTY_LIST = makeList(0,0,SHIFT));}


function updateList(list,index,value){
index = wrapIndex(list,index);

if(index !== index){
return list;}


if(index >= list.size || index < 0){
return list.withMutations(function(list){
index < 0?
setListBounds(list,index).set(0,value):
setListBounds(list,0,index + 1).set(index,value);});}



index += list._origin;

var newTail=list._tail;
var newRoot=list._root;
var didAlter=MakeRef(DID_ALTER);
if(index >= getTailOffset(list._capacity)){
newTail = updateVNode(newTail,list.__ownerID,0,index,value,didAlter);}else 
{
newRoot = updateVNode(newRoot,list.__ownerID,list._level,index,value,didAlter);}


if(!didAlter.value){
return list;}


if(list.__ownerID){
list._root = newRoot;
list._tail = newTail;
list.__hash = undefined;
list.__altered = true;
return list;}

return makeList(list._origin,list._capacity,list._level,newRoot,newTail);}


function updateVNode(node,ownerID,level,index,value,didAlter){
var idx=index >>> level & MASK;
var nodeHas=node && idx < node.array.length;
if(!nodeHas && value === undefined){
return node;}


var newNode;

if(level > 0){
var lowerNode=node && node.array[idx];
var newLowerNode=updateVNode(lowerNode,ownerID,level - SHIFT,index,value,didAlter);
if(newLowerNode === lowerNode){
return node;}

newNode = editableVNode(node,ownerID);
newNode.array[idx] = newLowerNode;
return newNode;}


if(nodeHas && node.array[idx] === value){
return node;}


SetRef(didAlter);

newNode = editableVNode(node,ownerID);
if(value === undefined && idx === newNode.array.length - 1){
newNode.array.pop();}else 
{
newNode.array[idx] = value;}

return newNode;}


function editableVNode(node,ownerID){
if(ownerID && node && ownerID === node.ownerID){
return node;}

return new VNode(node?node.array.slice():[],ownerID);}


function listNodeFor(list,rawIndex){
if(rawIndex >= getTailOffset(list._capacity)){
return list._tail;}

if(rawIndex < 1 << list._level + SHIFT){
var node=list._root;
var level=list._level;
while(node && level > 0) {
node = node.array[rawIndex >>> level & MASK];
level -= SHIFT;}

return node;}}



function setListBounds(list,begin,end){


if(begin !== undefined){
begin = begin | 0;}

if(end !== undefined){
end = end | 0;}

var owner=list.__ownerID || new OwnerID();
var oldOrigin=list._origin;
var oldCapacity=list._capacity;
var newOrigin=oldOrigin + begin;
var newCapacity=end === undefined?oldCapacity:end < 0?oldCapacity + end:oldOrigin + end;
if(newOrigin === oldOrigin && newCapacity === oldCapacity){
return list;}



if(newOrigin >= newCapacity){
return list.clear();}


var newLevel=list._level;
var newRoot=list._root;


var offsetShift=0;
while(newOrigin + offsetShift < 0) {
newRoot = new VNode(newRoot && newRoot.array.length?[undefined,newRoot]:[],owner);
newLevel += SHIFT;
offsetShift += 1 << newLevel;}

if(offsetShift){
newOrigin += offsetShift;
oldOrigin += offsetShift;
newCapacity += offsetShift;
oldCapacity += offsetShift;}


var oldTailOffset=getTailOffset(oldCapacity);
var newTailOffset=getTailOffset(newCapacity);


while(newTailOffset >= 1 << newLevel + SHIFT) {
newRoot = new VNode(newRoot && newRoot.array.length?[newRoot]:[],owner);
newLevel += SHIFT;}



var oldTail=list._tail;
var newTail=newTailOffset < oldTailOffset?
listNodeFor(list,newCapacity - 1):
newTailOffset > oldTailOffset?new VNode([],owner):oldTail;


if(oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length){
newRoot = editableVNode(newRoot,owner);
var node=newRoot;
for(var level=newLevel;level > SHIFT;level -= SHIFT) {
var idx=oldTailOffset >>> level & MASK;
node = node.array[idx] = editableVNode(node.array[idx],owner);}

node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;}



if(newCapacity < oldCapacity){
newTail = newTail && newTail.removeAfter(owner,0,newCapacity);}



if(newOrigin >= newTailOffset){
newOrigin -= newTailOffset;
newCapacity -= newTailOffset;
newLevel = SHIFT;
newRoot = null;
newTail = newTail && newTail.removeBefore(owner,0,newOrigin);}else 


if(newOrigin > oldOrigin || newTailOffset < oldTailOffset){
offsetShift = 0;


while(newRoot) {
var beginIndex=newOrigin >>> newLevel & MASK;
if(beginIndex !== newTailOffset >>> newLevel & MASK){
break;}

if(beginIndex){
offsetShift += (1 << newLevel) * beginIndex;}

newLevel -= SHIFT;
newRoot = newRoot.array[beginIndex];}



if(newRoot && newOrigin > oldOrigin){
newRoot = newRoot.removeBefore(owner,newLevel,newOrigin - offsetShift);}

if(newRoot && newTailOffset < oldTailOffset){
newRoot = newRoot.removeAfter(owner,newLevel,newTailOffset - offsetShift);}

if(offsetShift){
newOrigin -= offsetShift;
newCapacity -= offsetShift;}}



if(list.__ownerID){
list.size = newCapacity - newOrigin;
list._origin = newOrigin;
list._capacity = newCapacity;
list._level = newLevel;
list._root = newRoot;
list._tail = newTail;
list.__hash = undefined;
list.__altered = true;
return list;}

return makeList(newOrigin,newCapacity,newLevel,newRoot,newTail);}


function mergeIntoListWith(list,merger,iterables){
var iters=[];
var maxSize=0;
for(var ii=0;ii < iterables.length;ii++) {
var value=iterables[ii];
var iter=IndexedIterable(value);
if(iter.size > maxSize){
maxSize = iter.size;}

if(!isIterable(value)){
iter = iter.map(function(v){return fromJS(v);});}

iters.push(iter);}

if(maxSize > list.size){
list = list.setSize(maxSize);}

return mergeIntoCollectionWith(list,merger,iters);}


function getTailOffset(size){
return size < SIZE?0:size - 1 >>> SHIFT << SHIFT;}


createClass(OrderedMap,src_Map__Map);



function OrderedMap(value){
return value === null || value === undefined?emptyOrderedMap():
isOrderedMap(value)?value:
emptyOrderedMap().withMutations(function(map){
var iter=KeyedIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v,k){return map.set(k,v);});});}



OrderedMap.of = function(){
return this(arguments);};


OrderedMap.prototype.toString = function(){
return this.__toString('OrderedMap {','}');};




OrderedMap.prototype.get = function(k,notSetValue){
var index=this._map.get(k);
return index !== undefined?this._list.get(index)[1]:notSetValue;};




OrderedMap.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = 0;
this._map.clear();
this._list.clear();
return this;}

return emptyOrderedMap();};


OrderedMap.prototype.set = function(k,v){
return updateOrderedMap(this,k,v);};


OrderedMap.prototype.remove = function(k){
return updateOrderedMap(this,k,NOT_SET);};


OrderedMap.prototype.wasAltered = function(){
return this._map.wasAltered() || this._list.wasAltered();};


OrderedMap.prototype.__iterate = function(fn,reverse){var this$0=this;
return this._list.__iterate(
function(entry){return entry && fn(entry[1],entry[0],this$0);},
reverse);};



OrderedMap.prototype.__iterator = function(type,reverse){
return this._list.fromEntrySeq().__iterator(type,reverse);};


OrderedMap.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

var newMap=this._map.__ensureOwner(ownerID);
var newList=this._list.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID = ownerID;
this._map = newMap;
this._list = newList;
return this;}

return makeOrderedMap(newMap,newList,ownerID,this.__hash);};



function isOrderedMap(maybeOrderedMap){
return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);}


OrderedMap.isOrderedMap = isOrderedMap;

OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;



function makeOrderedMap(map,list,ownerID,hash){
var omap=Object.create(OrderedMap.prototype);
omap.size = map?map.size:0;
omap._map = map;
omap._list = list;
omap.__ownerID = ownerID;
omap.__hash = hash;
return omap;}


var EMPTY_ORDERED_MAP;
function emptyOrderedMap(){
return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(),emptyList()));}


function updateOrderedMap(omap,k,v){
var map=omap._map;
var list=omap._list;
var i=map.get(k);
var has=i !== undefined;
var newMap;
var newList;
if(v === NOT_SET){
if(!has){
return omap;}

if(list.size >= SIZE && list.size >= map.size * 2){
newList = list.filter(function(entry,idx){return entry !== undefined && i !== idx;});
newMap = newList.toKeyedSeq().map(function(entry){return entry[0];}).flip().toMap();
if(omap.__ownerID){
newMap.__ownerID = newList.__ownerID = omap.__ownerID;}}else 

{
newMap = map.remove(k);
newList = i === list.size - 1?list.pop():list.set(i,undefined);}}else 

{
if(has){
if(v === list.get(i)[1]){
return omap;}

newMap = map;
newList = list.set(i,[k,v]);}else 
{
newMap = map.set(k,list.size);
newList = list.set(list.size,[k,v]);}}


if(omap.__ownerID){
omap.size = newMap.size;
omap._map = newMap;
omap._list = newList;
omap.__hash = undefined;
return omap;}

return makeOrderedMap(newMap,newList);}


createClass(Stack,IndexedCollection);



function Stack(value){
return value === null || value === undefined?emptyStack():
isStack(value)?value:
emptyStack().unshiftAll(value);}


Stack.of = function(){
return this(arguments);};


Stack.prototype.toString = function(){
return this.__toString('Stack [',']');};




Stack.prototype.get = function(index,notSetValue){
var head=this._head;
index = wrapIndex(this,index);
while(head && index--) {
head = head.next;}

return head?head.value:notSetValue;};


Stack.prototype.peek = function(){
return this._head && this._head.value;};




Stack.prototype.push = function(){
if(arguments.length === 0){
return this;}

var newSize=this.size + arguments.length;
var head=this._head;
for(var ii=arguments.length - 1;ii >= 0;ii--) {
head = {
value:arguments[ii],
next:head};}


if(this.__ownerID){
this.size = newSize;
this._head = head;
this.__hash = undefined;
this.__altered = true;
return this;}

return makeStack(newSize,head);};


Stack.prototype.pushAll = function(iter){
iter = IndexedIterable(iter);
if(iter.size === 0){
return this;}

assertNotInfinite(iter.size);
var newSize=this.size;
var head=this._head;
iter.reverse().forEach(function(value){
newSize++;
head = {
value:value,
next:head};});


if(this.__ownerID){
this.size = newSize;
this._head = head;
this.__hash = undefined;
this.__altered = true;
return this;}

return makeStack(newSize,head);};


Stack.prototype.pop = function(){
return this.slice(1);};


Stack.prototype.unshift = function(){
return this.push.apply(this,arguments);};


Stack.prototype.unshiftAll = function(iter){
return this.pushAll(iter);};


Stack.prototype.shift = function(){
return this.pop.apply(this,arguments);};


Stack.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = 0;
this._head = undefined;
this.__hash = undefined;
this.__altered = true;
return this;}

return emptyStack();};


Stack.prototype.slice = function(begin,end){
if(wholeSlice(begin,end,this.size)){
return this;}

var resolvedBegin=resolveBegin(begin,this.size);
var resolvedEnd=resolveEnd(end,this.size);
if(resolvedEnd !== this.size){

return IndexedCollection.prototype.slice.call(this,begin,end);}

var newSize=this.size - resolvedBegin;
var head=this._head;
while(resolvedBegin--) {
head = head.next;}

if(this.__ownerID){
this.size = newSize;
this._head = head;
this.__hash = undefined;
this.__altered = true;
return this;}

return makeStack(newSize,head);};




Stack.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID = ownerID;
this.__altered = false;
return this;}

return makeStack(this.size,this._head,ownerID,this.__hash);};




Stack.prototype.__iterate = function(fn,reverse){
if(reverse){
return this.reverse().__iterate(fn);}

var iterations=0;
var node=this._head;
while(node) {
if(fn(node.value,iterations++,this) === false){
break;}

node = node.next;}

return iterations;};


Stack.prototype.__iterator = function(type,reverse){
if(reverse){
return this.reverse().__iterator(type);}

var iterations=0;
var node=this._head;
return new src_Iterator__Iterator(function(){
if(node){
var value=node.value;
node = node.next;
return iteratorValue(type,iterations++,value);}

return iteratorDone();});};




function isStack(maybeStack){
return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);}


Stack.isStack = isStack;

var IS_STACK_SENTINEL='@@__IMMUTABLE_STACK__@@';

var StackPrototype=Stack.prototype;
StackPrototype[IS_STACK_SENTINEL] = true;
StackPrototype.withMutations = MapPrototype.withMutations;
StackPrototype.asMutable = MapPrototype.asMutable;
StackPrototype.asImmutable = MapPrototype.asImmutable;
StackPrototype.wasAltered = MapPrototype.wasAltered;


function makeStack(size,head,ownerID,hash){
var map=Object.create(StackPrototype);
map.size = size;
map._head = head;
map.__ownerID = ownerID;
map.__hash = hash;
map.__altered = false;
return map;}


var EMPTY_STACK;
function emptyStack(){
return EMPTY_STACK || (EMPTY_STACK = makeStack(0));}


createClass(src_Set__Set,SetCollection);



function src_Set__Set(value){
return value === null || value === undefined?emptySet():
isSet(value) && !isOrdered(value)?value:
emptySet().withMutations(function(set){
var iter=SetIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v){return set.add(v);});});}



src_Set__Set.of = function(){
return this(arguments);};


src_Set__Set.fromKeys = function(value){
return this(KeyedIterable(value).keySeq());};


src_Set__Set.prototype.toString = function(){
return this.__toString('Set {','}');};




src_Set__Set.prototype.has = function(value){
return this._map.has(value);};




src_Set__Set.prototype.add = function(value){
return updateSet(this,this._map.set(value,true));};


src_Set__Set.prototype.remove = function(value){
return updateSet(this,this._map.remove(value));};


src_Set__Set.prototype.clear = function(){
return updateSet(this,this._map.clear());};




src_Set__Set.prototype.union = function(){var iters=SLICE$0.call(arguments,0);
iters = iters.filter(function(x){return x.size !== 0;});
if(iters.length === 0){
return this;}

if(this.size === 0 && !this.__ownerID && iters.length === 1){
return this.constructor(iters[0]);}

return this.withMutations(function(set){
for(var ii=0;ii < iters.length;ii++) {
SetIterable(iters[ii]).forEach(function(value){return set.add(value);});}});};




src_Set__Set.prototype.intersect = function(){var iters=SLICE$0.call(arguments,0);
if(iters.length === 0){
return this;}

iters = iters.map(function(iter){return SetIterable(iter);});
var originalSet=this;
return this.withMutations(function(set){
originalSet.forEach(function(value){
if(!iters.every(function(iter){return iter.includes(value);})){
set.remove(value);}});});};





src_Set__Set.prototype.subtract = function(){var iters=SLICE$0.call(arguments,0);
if(iters.length === 0){
return this;}

iters = iters.map(function(iter){return SetIterable(iter);});
var originalSet=this;
return this.withMutations(function(set){
originalSet.forEach(function(value){
if(iters.some(function(iter){return iter.includes(value);})){
set.remove(value);}});});};





src_Set__Set.prototype.merge = function(){
return this.union.apply(this,arguments);};


src_Set__Set.prototype.mergeWith = function(merger){var iters=SLICE$0.call(arguments,1);
return this.union.apply(this,iters);};


src_Set__Set.prototype.sort = function(comparator){

return OrderedSet(sortFactory(this,comparator));};


src_Set__Set.prototype.sortBy = function(mapper,comparator){

return OrderedSet(sortFactory(this,comparator,mapper));};


src_Set__Set.prototype.wasAltered = function(){
return this._map.wasAltered();};


src_Set__Set.prototype.__iterate = function(fn,reverse){var this$0=this;
return this._map.__iterate(function(_,k){return fn(k,k,this$0);},reverse);};


src_Set__Set.prototype.__iterator = function(type,reverse){
return this._map.map(function(_,k){return k;}).__iterator(type,reverse);};


src_Set__Set.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

var newMap=this._map.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID = ownerID;
this._map = newMap;
return this;}

return this.__make(newMap,ownerID);};



function isSet(maybeSet){
return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);}


src_Set__Set.isSet = isSet;

var IS_SET_SENTINEL='@@__IMMUTABLE_SET__@@';

var SetPrototype=src_Set__Set.prototype;
SetPrototype[IS_SET_SENTINEL] = true;
SetPrototype[DELETE] = SetPrototype.remove;
SetPrototype.mergeDeep = SetPrototype.merge;
SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
SetPrototype.withMutations = MapPrototype.withMutations;
SetPrototype.asMutable = MapPrototype.asMutable;
SetPrototype.asImmutable = MapPrototype.asImmutable;

SetPrototype.__empty = emptySet;
SetPrototype.__make = makeSet;

function updateSet(set,newMap){
if(set.__ownerID){
set.size = newMap.size;
set._map = newMap;
return set;}

return newMap === set._map?set:
newMap.size === 0?set.__empty():
set.__make(newMap);}


function makeSet(map,ownerID){
var set=Object.create(SetPrototype);
set.size = map?map.size:0;
set._map = map;
set.__ownerID = ownerID;
return set;}


var EMPTY_SET;
function emptySet(){
return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));}


createClass(OrderedSet,src_Set__Set);



function OrderedSet(value){
return value === null || value === undefined?emptyOrderedSet():
isOrderedSet(value)?value:
emptyOrderedSet().withMutations(function(set){
var iter=SetIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v){return set.add(v);});});}



OrderedSet.of = function(){
return this(arguments);};


OrderedSet.fromKeys = function(value){
return this(KeyedIterable(value).keySeq());};


OrderedSet.prototype.toString = function(){
return this.__toString('OrderedSet {','}');};



function isOrderedSet(maybeOrderedSet){
return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);}


OrderedSet.isOrderedSet = isOrderedSet;

var OrderedSetPrototype=OrderedSet.prototype;
OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

OrderedSetPrototype.__empty = emptyOrderedSet;
OrderedSetPrototype.__make = makeOrderedSet;

function makeOrderedSet(map,ownerID){
var set=Object.create(OrderedSetPrototype);
set.size = map?map.size:0;
set._map = map;
set.__ownerID = ownerID;
return set;}


var EMPTY_ORDERED_SET;
function emptyOrderedSet(){
return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));}


createClass(Record,KeyedCollection);

function Record(defaultValues,name){
var hasInitialized;

var RecordType=function Record(values){
if(values instanceof RecordType){
return values;}

if(!(this instanceof RecordType)){
return new RecordType(values);}

if(!hasInitialized){
hasInitialized = true;
var keys=Object.keys(defaultValues);
setProps(RecordTypePrototype,keys);
RecordTypePrototype.size = keys.length;
RecordTypePrototype._name = name;
RecordTypePrototype._keys = keys;
RecordTypePrototype._defaultValues = defaultValues;}

this._map = src_Map__Map(values);};


var RecordTypePrototype=RecordType.prototype = Object.create(RecordPrototype);
RecordTypePrototype.constructor = RecordType;

return RecordType;}


Record.prototype.toString = function(){
return this.__toString(recordName(this) + ' {','}');};




Record.prototype.has = function(k){
return this._defaultValues.hasOwnProperty(k);};


Record.prototype.get = function(k,notSetValue){
if(!this.has(k)){
return notSetValue;}

var defaultVal=this._defaultValues[k];
return this._map?this._map.get(k,defaultVal):defaultVal;};




Record.prototype.clear = function(){
if(this.__ownerID){
this._map && this._map.clear();
return this;}

var RecordType=this.constructor;
return RecordType._empty || (RecordType._empty = makeRecord(this,emptyMap()));};


Record.prototype.set = function(k,v){
if(!this.has(k)){
throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));}

var newMap=this._map && this._map.set(k,v);
if(this.__ownerID || newMap === this._map){
return this;}

return makeRecord(this,newMap);};


Record.prototype.remove = function(k){
if(!this.has(k)){
return this;}

var newMap=this._map && this._map.remove(k);
if(this.__ownerID || newMap === this._map){
return this;}

return makeRecord(this,newMap);};


Record.prototype.wasAltered = function(){
return this._map.wasAltered();};


Record.prototype.__iterator = function(type,reverse){var this$0=this;
return KeyedIterable(this._defaultValues).map(function(_,k){return this$0.get(k);}).__iterator(type,reverse);};


Record.prototype.__iterate = function(fn,reverse){var this$0=this;
return KeyedIterable(this._defaultValues).map(function(_,k){return this$0.get(k);}).__iterate(fn,reverse);};


Record.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

var newMap=this._map && this._map.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID = ownerID;
this._map = newMap;
return this;}

return makeRecord(this,newMap,ownerID);};



var RecordPrototype=Record.prototype;
RecordPrototype[DELETE] = RecordPrototype.remove;
RecordPrototype.deleteIn = 
RecordPrototype.removeIn = MapPrototype.removeIn;
RecordPrototype.merge = MapPrototype.merge;
RecordPrototype.mergeWith = MapPrototype.mergeWith;
RecordPrototype.mergeIn = MapPrototype.mergeIn;
RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
RecordPrototype.setIn = MapPrototype.setIn;
RecordPrototype.update = MapPrototype.update;
RecordPrototype.updateIn = MapPrototype.updateIn;
RecordPrototype.withMutations = MapPrototype.withMutations;
RecordPrototype.asMutable = MapPrototype.asMutable;
RecordPrototype.asImmutable = MapPrototype.asImmutable;


function makeRecord(likeRecord,map,ownerID){
var record=Object.create(Object.getPrototypeOf(likeRecord));
record._map = map;
record.__ownerID = ownerID;
return record;}


function recordName(record){
return record._name || record.constructor.name || 'Record';}


function setProps(prototype,names){
try{
names.forEach(setProp.bind(undefined,prototype));}
catch(error) {}}




function setProp(prototype,name){
Object.defineProperty(prototype,name,{
get:function(){
return this.get(name);},

set:function(value){
invariant(this.__ownerID,'Cannot set on an immutable record.');
this.set(name,value);}});}




function deepEqual(a,b){
if(a === b){
return true;}


if(
!isIterable(b) || 
a.size !== undefined && b.size !== undefined && a.size !== b.size || 
a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || 
isKeyed(a) !== isKeyed(b) || 
isIndexed(a) !== isIndexed(b) || 
isOrdered(a) !== isOrdered(b))
{
return false;}


if(a.size === 0 && b.size === 0){
return true;}


var notAssociative=!isAssociative(a);

if(isOrdered(a)){
var entries=a.entries();
return b.every(function(v,k){
var entry=entries.next().value;
return entry && is(entry[1],v) && (notAssociative || is(entry[0],k));}) && 
entries.next().done;}


var flipped=false;

if(a.size === undefined){
if(b.size === undefined){
if(typeof a.cacheResult === 'function'){
a.cacheResult();}}else 

{
flipped = true;
var _=a;
a = b;
b = _;}}



var allEqual=true;
var bSize=b.__iterate(function(v,k){
if(notAssociative?!a.has(v):
flipped?!is(v,a.get(k,NOT_SET)):!is(a.get(k,NOT_SET),v)){
allEqual = false;
return false;}});



return allEqual && a.size === bSize;}


createClass(Range,IndexedSeq);

function Range(start,end,step){
if(!(this instanceof Range)){
return new Range(start,end,step);}

invariant(step !== 0,'Cannot step a Range by 0');
start = start || 0;
if(end === undefined){
end = Infinity;}

step = step === undefined?1:Math.abs(step);
if(end < start){
step = -step;}

this._start = start;
this._end = end;
this._step = step;
this.size = Math.max(0,Math.ceil((end - start) / step - 1) + 1);
if(this.size === 0){
if(EMPTY_RANGE){
return EMPTY_RANGE;}

EMPTY_RANGE = this;}}



Range.prototype.toString = function(){
if(this.size === 0){
return 'Range []';}

return 'Range [ ' + 
this._start + '...' + this._end + (
this._step > 1?' by ' + this._step:'') + 
' ]';};


Range.prototype.get = function(index,notSetValue){
return this.has(index)?
this._start + wrapIndex(this,index) * this._step:
notSetValue;};


Range.prototype.includes = function(searchValue){
var possibleIndex=(searchValue - this._start) / this._step;
return possibleIndex >= 0 && 
possibleIndex < this.size && 
possibleIndex === Math.floor(possibleIndex);};


Range.prototype.slice = function(begin,end){
if(wholeSlice(begin,end,this.size)){
return this;}

begin = resolveBegin(begin,this.size);
end = resolveEnd(end,this.size);
if(end <= begin){
return new Range(0,0);}

return new Range(this.get(begin,this._end),this.get(end,this._end),this._step);};


Range.prototype.indexOf = function(searchValue){
var offsetValue=searchValue - this._start;
if(offsetValue % this._step === 0){
var index=offsetValue / this._step;
if(index >= 0 && index < this.size){
return index;}}


return -1;};


Range.prototype.lastIndexOf = function(searchValue){
return this.indexOf(searchValue);};


Range.prototype.__iterate = function(fn,reverse){
var maxIndex=this.size - 1;
var step=this._step;
var value=reverse?this._start + maxIndex * step:this._start;
for(var ii=0;ii <= maxIndex;ii++) {
if(fn(value,ii,this) === false){
return ii + 1;}

value += reverse?-step:step;}

return ii;};


Range.prototype.__iterator = function(type,reverse){
var maxIndex=this.size - 1;
var step=this._step;
var value=reverse?this._start + maxIndex * step:this._start;
var ii=0;
return new src_Iterator__Iterator(function(){
var v=value;
value += reverse?-step:step;
return ii > maxIndex?iteratorDone():iteratorValue(type,ii++,v);});};



Range.prototype.equals = function(other){
return other instanceof Range?
this._start === other._start && 
this._end === other._end && 
this._step === other._step:
deepEqual(this,other);};



var EMPTY_RANGE;

createClass(Repeat,IndexedSeq);

function Repeat(value,times){
if(!(this instanceof Repeat)){
return new Repeat(value,times);}

this._value = value;
this.size = times === undefined?Infinity:Math.max(0,times);
if(this.size === 0){
if(EMPTY_REPEAT){
return EMPTY_REPEAT;}

EMPTY_REPEAT = this;}}



Repeat.prototype.toString = function(){
if(this.size === 0){
return 'Repeat []';}

return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';};


Repeat.prototype.get = function(index,notSetValue){
return this.has(index)?this._value:notSetValue;};


Repeat.prototype.includes = function(searchValue){
return is(this._value,searchValue);};


Repeat.prototype.slice = function(begin,end){
var size=this.size;
return wholeSlice(begin,end,size)?this:
new Repeat(this._value,resolveEnd(end,size) - resolveBegin(begin,size));};


Repeat.prototype.reverse = function(){
return this;};


Repeat.prototype.indexOf = function(searchValue){
if(is(this._value,searchValue)){
return 0;}

return -1;};


Repeat.prototype.lastIndexOf = function(searchValue){
if(is(this._value,searchValue)){
return this.size;}

return -1;};


Repeat.prototype.__iterate = function(fn,reverse){
for(var ii=0;ii < this.size;ii++) {
if(fn(this._value,ii,this) === false){
return ii + 1;}}


return ii;};


Repeat.prototype.__iterator = function(type,reverse){var this$0=this;
var ii=0;
return new src_Iterator__Iterator(function()
{return ii < this$0.size?iteratorValue(type,ii++,this$0._value):iteratorDone();});};



Repeat.prototype.equals = function(other){
return other instanceof Repeat?
is(this._value,other._value):
deepEqual(other);};



var EMPTY_REPEAT;




function mixin(ctor,methods){
var keyCopier=function(key){ctor.prototype[key] = methods[key];};
Object.keys(methods).forEach(keyCopier);
Object.getOwnPropertySymbols && 
Object.getOwnPropertySymbols(methods).forEach(keyCopier);
return ctor;}


Iterable.Iterator = src_Iterator__Iterator;

mixin(Iterable,{



toArray:function(){
assertNotInfinite(this.size);
var array=new Array(this.size || 0);
this.valueSeq().__iterate(function(v,i){array[i] = v;});
return array;},


toIndexedSeq:function(){
return new ToIndexedSequence(this);},


toJS:function(){
return this.toSeq().map(
function(value){return value && typeof value.toJS === 'function'?value.toJS():value;}).
__toJS();},


toJSON:function(){
return this.toSeq().map(
function(value){return value && typeof value.toJSON === 'function'?value.toJSON():value;}).
__toJS();},


toKeyedSeq:function(){
return new ToKeyedSequence(this,true);},


toMap:function(){

return src_Map__Map(this.toKeyedSeq());},


toObject:function(){
assertNotInfinite(this.size);
var object={};
this.__iterate(function(v,k){object[k] = v;});
return object;},


toOrderedMap:function(){

return OrderedMap(this.toKeyedSeq());},


toOrderedSet:function(){

return OrderedSet(isKeyed(this)?this.valueSeq():this);},


toSet:function(){

return src_Set__Set(isKeyed(this)?this.valueSeq():this);},


toSetSeq:function(){
return new ToSetSequence(this);},


toSeq:function(){
return isIndexed(this)?this.toIndexedSeq():
isKeyed(this)?this.toKeyedSeq():
this.toSetSeq();},


toStack:function(){

return Stack(isKeyed(this)?this.valueSeq():this);},


toList:function(){

return List(isKeyed(this)?this.valueSeq():this);},





toString:function(){
return '[Iterable]';},


__toString:function(head,tail){
if(this.size === 0){
return head + tail;}

return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;},





concat:function(){var values=SLICE$0.call(arguments,0);
return reify(this,concatFactory(this,values));},


includes:function(searchValue){
return this.some(function(value){return is(value,searchValue);});},


entries:function(){
return this.__iterator(ITERATE_ENTRIES);},


every:function(predicate,context){
assertNotInfinite(this.size);
var returnValue=true;
this.__iterate(function(v,k,c){
if(!predicate.call(context,v,k,c)){
returnValue = false;
return false;}});


return returnValue;},


filter:function(predicate,context){
return reify(this,filterFactory(this,predicate,context,true));},


find:function(predicate,context,notSetValue){
var entry=this.findEntry(predicate,context);
return entry?entry[1]:notSetValue;},


findEntry:function(predicate,context){
var found;
this.__iterate(function(v,k,c){
if(predicate.call(context,v,k,c)){
found = [k,v];
return false;}});


return found;},


findLastEntry:function(predicate,context){
return this.toSeq().reverse().findEntry(predicate,context);},


forEach:function(sideEffect,context){
assertNotInfinite(this.size);
return this.__iterate(context?sideEffect.bind(context):sideEffect);},


join:function(separator){
assertNotInfinite(this.size);
separator = separator !== undefined?'' + separator:',';
var joined='';
var isFirst=true;
this.__iterate(function(v){
isFirst?isFirst = false:joined += separator;
joined += v !== null && v !== undefined?v.toString():'';});

return joined;},


keys:function(){
return this.__iterator(ITERATE_KEYS);},


map:function(mapper,context){
return reify(this,mapFactory(this,mapper,context));},


reduce:function(reducer,initialReduction,context){
assertNotInfinite(this.size);
var reduction;
var useFirst;
if(arguments.length < 2){
useFirst = true;}else 
{
reduction = initialReduction;}

this.__iterate(function(v,k,c){
if(useFirst){
useFirst = false;
reduction = v;}else 
{
reduction = reducer.call(context,reduction,v,k,c);}});


return reduction;},


reduceRight:function(reducer,initialReduction,context){
var reversed=this.toKeyedSeq().reverse();
return reversed.reduce.apply(reversed,arguments);},


reverse:function(){
return reify(this,reverseFactory(this,true));},


slice:function(begin,end){
return reify(this,sliceFactory(this,begin,end,true));},


some:function(predicate,context){
return !this.every(not(predicate),context);},


sort:function(comparator){
return reify(this,sortFactory(this,comparator));},


values:function(){
return this.__iterator(ITERATE_VALUES);},





butLast:function(){
return this.slice(0,-1);},


isEmpty:function(){
return this.size !== undefined?this.size === 0:!this.some(function(){return true;});},


count:function(predicate,context){
return ensureSize(
predicate?this.toSeq().filter(predicate,context):this);},



countBy:function(grouper,context){
return countByFactory(this,grouper,context);},


equals:function(other){
return deepEqual(this,other);},


entrySeq:function(){
var iterable=this;
if(iterable._cache){

return new ArraySeq(iterable._cache);}

var entriesSequence=iterable.toSeq().map(entryMapper).toIndexedSeq();
entriesSequence.fromEntrySeq = function(){return iterable.toSeq();};
return entriesSequence;},


filterNot:function(predicate,context){
return this.filter(not(predicate),context);},


findLast:function(predicate,context,notSetValue){
return this.toKeyedSeq().reverse().find(predicate,context,notSetValue);},


first:function(){
return this.find(returnTrue);},


flatMap:function(mapper,context){
return reify(this,flatMapFactory(this,mapper,context));},


flatten:function(depth){
return reify(this,flattenFactory(this,depth,true));},


fromEntrySeq:function(){
return new FromEntriesSequence(this);},


get:function(searchKey,notSetValue){
return this.find(function(_,key){return is(key,searchKey);},undefined,notSetValue);},


getIn:function(searchKeyPath,notSetValue){
var nested=this;


var iter=forceIterator(searchKeyPath);
var step;
while(!(step = iter.next()).done) {
var key=step.value;
nested = nested && nested.get?nested.get(key,NOT_SET):NOT_SET;
if(nested === NOT_SET){
return notSetValue;}}


return nested;},


groupBy:function(grouper,context){
return groupByFactory(this,grouper,context);},


has:function(searchKey){
return this.get(searchKey,NOT_SET) !== NOT_SET;},


hasIn:function(searchKeyPath){
return this.getIn(searchKeyPath,NOT_SET) !== NOT_SET;},


isSubset:function(iter){
iter = typeof iter.includes === 'function'?iter:Iterable(iter);
return this.every(function(value){return iter.includes(value);});},


isSuperset:function(iter){
iter = typeof iter.isSubset === 'function'?iter:Iterable(iter);
return iter.isSubset(this);},


keySeq:function(){
return this.toSeq().map(keyMapper).toIndexedSeq();},


last:function(){
return this.toSeq().reverse().first();},


max:function(comparator){
return maxFactory(this,comparator);},


maxBy:function(mapper,comparator){
return maxFactory(this,comparator,mapper);},


min:function(comparator){
return maxFactory(this,comparator?neg(comparator):defaultNegComparator);},


minBy:function(mapper,comparator){
return maxFactory(this,comparator?neg(comparator):defaultNegComparator,mapper);},


rest:function(){
return this.slice(1);},


skip:function(amount){
return this.slice(Math.max(0,amount));},


skipLast:function(amount){
return reify(this,this.toSeq().reverse().skip(amount).reverse());},


skipWhile:function(predicate,context){
return reify(this,skipWhileFactory(this,predicate,context,true));},


skipUntil:function(predicate,context){
return this.skipWhile(not(predicate),context);},


sortBy:function(mapper,comparator){
return reify(this,sortFactory(this,comparator,mapper));},


take:function(amount){
return this.slice(0,Math.max(0,amount));},


takeLast:function(amount){
return reify(this,this.toSeq().reverse().take(amount).reverse());},


takeWhile:function(predicate,context){
return reify(this,takeWhileFactory(this,predicate,context));},


takeUntil:function(predicate,context){
return this.takeWhile(not(predicate),context);},


valueSeq:function(){
return this.toIndexedSeq();},





hashCode:function(){
return this.__hash || (this.__hash = hashIterable(this));}});















var IterablePrototype=Iterable.prototype;
IterablePrototype[IS_ITERABLE_SENTINEL] = true;
IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
IterablePrototype.__toJS = IterablePrototype.toArray;
IterablePrototype.__toStringMapper = quoteString;
IterablePrototype.inspect = 
IterablePrototype.toSource = function(){return this.toString();};
IterablePrototype.chain = IterablePrototype.flatMap;
IterablePrototype.contains = IterablePrototype.includes;


(function(){
try{
Object.defineProperty(IterablePrototype,'length',{
get:function(){
if(!Iterable.noLengthWarning){
var stack;
try{
throw new Error();}
catch(error) {
stack = error.stack;}

if(stack.indexOf('_wrapObject') === -1){
console && console.warn && console.warn(
'iterable.length has been deprecated, ' + 
'use iterable.size or iterable.count(). ' + 
'This warning will become a silent error in a future version. ' + 
stack);

return this.size;}}}});}




catch(e) {}})();




mixin(KeyedIterable,{



flip:function(){
return reify(this,flipFactory(this));},


findKey:function(predicate,context){
var entry=this.findEntry(predicate,context);
return entry && entry[0];},


findLastKey:function(predicate,context){
return this.toSeq().reverse().findKey(predicate,context);},


keyOf:function(searchValue){
return this.findKey(function(value){return is(value,searchValue);});},


lastKeyOf:function(searchValue){
return this.findLastKey(function(value){return is(value,searchValue);});},


mapEntries:function(mapper,context){var this$0=this;
var iterations=0;
return reify(this,
this.toSeq().map(
function(v,k){return mapper.call(context,[k,v],iterations++,this$0);}).
fromEntrySeq());},



mapKeys:function(mapper,context){var this$0=this;
return reify(this,
this.toSeq().flip().map(
function(k,v){return mapper.call(context,k,v,this$0);}).
flip());}});





var KeyedIterablePrototype=KeyedIterable.prototype;
KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
KeyedIterablePrototype.__toStringMapper = function(v,k){return JSON.stringify(k) + ': ' + quoteString(v);};



mixin(IndexedIterable,{



toKeyedSeq:function(){
return new ToKeyedSequence(this,false);},





filter:function(predicate,context){
return reify(this,filterFactory(this,predicate,context,false));},


findIndex:function(predicate,context){
var entry=this.findEntry(predicate,context);
return entry?entry[0]:-1;},


indexOf:function(searchValue){
var key=this.toKeyedSeq().keyOf(searchValue);
return key === undefined?-1:key;},


lastIndexOf:function(searchValue){
return this.toSeq().reverse().indexOf(searchValue);},


reverse:function(){
return reify(this,reverseFactory(this,false));},


slice:function(begin,end){
return reify(this,sliceFactory(this,begin,end,false));},


splice:function(index,removeNum){
var numArgs=arguments.length;
removeNum = Math.max(removeNum | 0,0);
if(numArgs === 0 || numArgs === 2 && !removeNum){
return this;}




index = resolveBegin(index,index < 0?this.count():this.size);
var spliced=this.slice(0,index);
return reify(
this,
numArgs === 1?
spliced:
spliced.concat(arrCopy(arguments,2),this.slice(index + removeNum)));},






findLastIndex:function(predicate,context){
var key=this.toKeyedSeq().findLastKey(predicate,context);
return key === undefined?-1:key;},


first:function(){
return this.get(0);},


flatten:function(depth){
return reify(this,flattenFactory(this,depth,false));},


get:function(index,notSetValue){
index = wrapIndex(this,index);
return index < 0 || (this.size === Infinity || 
this.size !== undefined && index > this.size)?
notSetValue:
this.find(function(_,key){return key === index;},undefined,notSetValue);},


has:function(index){
index = wrapIndex(this,index);
return index >= 0 && (this.size !== undefined?
this.size === Infinity || index < this.size:
this.indexOf(index) !== -1);},



interpose:function(separator){
return reify(this,interposeFactory(this,separator));},


interleave:function(){
var iterables=[this].concat(arrCopy(arguments));
var zipped=zipWithFactory(this.toSeq(),IndexedSeq.of,iterables);
var interleaved=zipped.flatten(true);
if(zipped.size){
interleaved.size = zipped.size * iterables.length;}

return reify(this,interleaved);},


last:function(){
return this.get(-1);},


skipWhile:function(predicate,context){
return reify(this,skipWhileFactory(this,predicate,context,false));},


zip:function(){
var iterables=[this].concat(arrCopy(arguments));
return reify(this,zipWithFactory(this,defaultZipper,iterables));},


zipWith:function(zipper){
var iterables=arrCopy(arguments);
iterables[0] = this;
return reify(this,zipWithFactory(this,zipper,iterables));}});




IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;



mixin(SetIterable,{



get:function(value,notSetValue){
return this.has(value)?value:notSetValue;},


includes:function(value){
return this.has(value);},





keySeq:function(){
return this.valueSeq();}});




SetIterable.prototype.has = IterablePrototype.includes;




mixin(KeyedSeq,KeyedIterable.prototype);
mixin(IndexedSeq,IndexedIterable.prototype);
mixin(SetSeq,SetIterable.prototype);

mixin(KeyedCollection,KeyedIterable.prototype);
mixin(IndexedCollection,IndexedIterable.prototype);
mixin(SetCollection,SetIterable.prototype);




function keyMapper(v,k){
return k;}


function entryMapper(v,k){
return [k,v];}


function not(predicate){
return function(){
return !predicate.apply(this,arguments);};}



function neg(predicate){
return function(){
return -predicate.apply(this,arguments);};}



function quoteString(value){
return typeof value === 'string'?JSON.stringify(value):value;}


function defaultZipper(){
return arrCopy(arguments);}


function defaultNegComparator(a,b){
return a < b?1:a > b?-1:0;}


function hashIterable(iterable){
if(iterable.size === Infinity){
return 0;}

var ordered=isOrdered(iterable);
var keyed=isKeyed(iterable);
var h=ordered?1:0;
var size=iterable.__iterate(
keyed?
ordered?
function(v,k){h = 31 * h + hashMerge(hash(v),hash(k)) | 0;}:
function(v,k){h = h + hashMerge(hash(v),hash(k)) | 0;}:
ordered?
function(v){h = 31 * h + hash(v) | 0;}:
function(v){h = h + hash(v) | 0;});

return murmurHashOfSize(size,h);}


function murmurHashOfSize(size,h){
h = src_Math__imul(h,0xCC9E2D51);
h = src_Math__imul(h << 15 | h >>> -15,0x1B873593);
h = src_Math__imul(h << 13 | h >>> -13,5);
h = (h + 0xE6546B64 | 0) ^ size;
h = src_Math__imul(h ^ h >>> 16,0x85EBCA6B);
h = src_Math__imul(h ^ h >>> 13,0xC2B2AE35);
h = smi(h ^ h >>> 16);
return h;}


function hashMerge(a,b){
return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0;}


var Immutable={

Iterable:Iterable,

Seq:Seq,
Collection:Collection,
Map:src_Map__Map,
OrderedMap:OrderedMap,
List:List,
Stack:Stack,
Set:src_Set__Set,
OrderedSet:OrderedSet,

Record:Record,
Range:Range,
Repeat:Repeat,

is:is,
fromJS:fromJS};



return Immutable;});
});
__d('NavigatorNavigationBar',["React","NavigatorNavigationBarStyles","StaticContainer.react","StyleSheet","View","immutable/dist/immutable.js"],function(global, require, module, exports) {  'use strict';



























var React=require('React');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');var _require=

require('immutable/dist/immutable.js');var Map=_require.Map;

var COMPONENT_NAMES=['Title','LeftButton','RightButton'];

var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};


var NavigatorNavigationBar=React.createClass({

propTypes:{
navigator:React.PropTypes.object,
routeMapper:React.PropTypes.shape({
Title:React.PropTypes.func.isRequired,
LeftButton:React.PropTypes.func.isRequired,
RightButton:React.PropTypes.func.isRequired}),

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
presentedIndex:React.PropTypes.number}),

style:View.propTypes.style},


statics:{
Styles:NavigatorNavigationBarStyles},


componentWillMount:function(){var _this=this;
this._components = {};
this._descriptors = {};

COMPONENT_NAMES.forEach(function(componentName){
_this._components[componentName] = new Map();
_this._descriptors[componentName] = new Map();});},



_getReusableProps:function(
componentName,
index)
{
if(!this._reusableProps){
this._reusableProps = {};}

var propStack=this._reusableProps[componentName];
if(!propStack){
propStack = this._reusableProps[componentName] = [];}

var props=propStack[index];
if(!props){
props = propStack[index] = {style:{}};}

return props;},


_updateIndexProgress:function(
progress,
index,
fromIndex,
toIndex)
{
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = NavigatorNavigationBarStyles.Interpolators.CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToCenter;}else 
{
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToLeft;}


COMPONENT_NAMES.forEach(function(componentName){
var component=this._components[componentName].get(this.props.navState.routeStack[index]);
var props=this._getReusableProps(componentName,index);
if(component && interpolate[componentName](props.style,amount)){
component.setNativeProps(props);}},

this);},


updateProgress:function(
progress,
fromIndex,
toIndex)
{
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



render:function(){
var navState=this.props.navState;
var components=COMPONENT_NAMES.map(function(componentName){
return navState.routeStack.map(
this._getComponent.bind(this,componentName));},

this);

return (
React.createElement(View,{style:[styles.navBarContainer,this.props.style]},
components));},




_getComponent:function(
componentName,
route,
index)
{var _this2=this;
if(this._descriptors[componentName].includes(route)){
return this._descriptors[componentName].get(route);}


var rendered=null;

var content=this.props.routeMapper[componentName](
this.props.navState.routeStack[index],
this.props.navigator,
index,
this.props.navState);

if(!content){
return null;}


var initialStage=index === navStatePresentedIndex(this.props.navState)?
NavigatorNavigationBarStyles.Stages.Center:NavigatorNavigationBarStyles.Stages.Left;
rendered = 
React.createElement(View,{
ref:function(ref){
_this2._components[componentName] = _this2._components[componentName].set(route,ref);},

style:initialStage[componentName]},
content);



this._descriptors[componentName] = this._descriptors[componentName].set(route,rendered);
return rendered;}});





var styles=StyleSheet.create({
navBarContainer:{
position:'absolute',
height:NavigatorNavigationBarStyles.General.TotalNavHeight,
top:0,
left:0,
right:0,
backgroundColor:'transparent'}});



module.exports = NavigatorNavigationBar;
});
__d('NavigatorSceneConfigs',["Dimensions","PixelRatio","buildStyleInterpolator"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};



























var Dimensions=require('Dimensions');
var PixelRatio=require('PixelRatio');

var buildStyleInterpolator=require('buildStyleInterpolator');

var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;

var FadeToTheLeft={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Math.round(Dimensions.get('window').width * 0.3),y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},












transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

translateX:{
from:0,
to:-Math.round(Dimensions.get('window').width * 0.3),
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FadeToTheRight=_extends({},
FadeToTheLeft,{
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:Math.round(SCREEN_WIDTH * 0.3),y:0,z:0}},

translateX:{
from:0,
to:Math.round(SCREEN_WIDTH * 0.3)}});



var FadeIn={
opacity:{
from:0,
to:1,
min:0.5,
max:1,
type:'linear',
extrapolate:false,
round:100}};



var FadeOut={
opacity:{
from:1,
to:0,
min:0,
max:0.5,
type:'linear',
extrapolate:false,
round:100}};



var ToTheLeft={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Dimensions.get('window').width,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},


translateX:{
from:0,
to:-Dimensions.get('window').width,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var ToTheUp={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:-Dimensions.get('window').height,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},

translateY:{
from:0,
to:-Dimensions.get('window').height,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var ToTheDown={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:Dimensions.get('window').height,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},

translateY:{
from:0,
to:Dimensions.get('window').height,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var FromTheRight={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:Dimensions.get('window').width,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


translateX:{
from:Dimensions.get('window').width,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var FromTheLeft=_extends({},
FromTheRight,{
transformTranslate:{
from:{x:-SCREEN_WIDTH,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateX:{
from:-SCREEN_WIDTH,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var FromTheDown=_extends({},
FromTheRight,{
transformTranslate:{
from:{y:SCREEN_HEIGHT,x:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:SCREEN_HEIGHT,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var FromTheTop=_extends({},
FromTheRight,{
transformTranslate:{
from:{y:-SCREEN_HEIGHT,x:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:-SCREEN_HEIGHT,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var ToTheBack={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FromTheFront={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:0,y:Dimensions.get('window').height,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:Dimensions.get('window').height,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var ToTheBackAndroid={
opacity:{
value:1,
type:'constant'}};



var FromTheFrontAndroid={
opacity:{
from:0,
to:1,
min:0.5,
max:1,
type:'linear',
extrapolate:false,
round:100},

transformTranslate:{
from:{x:0,y:100,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:100,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var BaseOverswipeConfig={
frictionConstant:1,
frictionByDistance:1.5};


var BaseLeftToRightGesture={


isDetachable:false,


gestureDetectMovement:2,


notMoving:0.3,


directionRatio:0.66,


snapVelocity:2,


edgeHitWidth:30,


stillCompletionRatio:3 / 5,

fullDistance:SCREEN_WIDTH,

direction:'left-to-right'};



var BaseRightToLeftGesture=_extends({},
BaseLeftToRightGesture,{
direction:'right-to-left'});


var BaseDownUpGesture=_extends({},
BaseLeftToRightGesture,{
fullDistance:SCREEN_HEIGHT,
direction:'down-to-up'});


var BaseUpDownGesture=_extends({},
BaseLeftToRightGesture,{
fullDistance:SCREEN_HEIGHT,
direction:'up-to-down'});


var BaseConfig={

gestures:{
pop:BaseLeftToRightGesture},



springFriction:26,
springTension:200,


defaultTransitionVelocity:1.5,


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(FadeToTheLeft)}};



var NavigatorSceneConfigs={
PushFromRight:_extends({},
BaseConfig),


FloatFromRight:_extends({},
BaseConfig),


FloatFromLeft:_extends({},
BaseConfig,{
animationInterpolators:{
into:buildStyleInterpolator(FromTheLeft),
out:buildStyleInterpolator(FadeToTheRight)}}),


FloatFromBottom:_extends({},
BaseConfig,{
gestures:{
pop:_extends({},
BaseLeftToRightGesture,{
edgeHitWidth:150,
direction:'top-to-bottom',
fullDistance:SCREEN_HEIGHT})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheFront),
out:buildStyleInterpolator(ToTheBack)}}),


FloatFromBottomAndroid:_extends({},
BaseConfig,{
gestures:null,
defaultTransitionVelocity:3,
springFriction:20,
animationInterpolators:{
into:buildStyleInterpolator(FromTheFrontAndroid),
out:buildStyleInterpolator(ToTheBackAndroid)}}),


FadeAndroid:_extends({},
BaseConfig,{
gestures:null,
animationInterpolators:{
into:buildStyleInterpolator(FadeIn),
out:buildStyleInterpolator(FadeOut)}}),


HorizontalSwipeJump:_extends({},
BaseConfig,{
gestures:{
jumpBack:_extends({},
BaseLeftToRightGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:_extends({},
BaseRightToLeftGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(ToTheLeft)}}),


VerticalUpSwipeJump:_extends({},
BaseConfig,{
gestures:{
jumpBack:_extends({},
BaseDownUpGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:_extends({},
BaseDownUpGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheDown),
out:buildStyleInterpolator(ToTheUp)}}),


VerticalDownSwipeJump:_extends({},
BaseConfig,{
gestures:{
jumpBack:_extends({},
BaseUpDownGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:_extends({},
BaseUpDownGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheTop),
out:buildStyleInterpolator(ToTheDown)}})};




module.exports = NavigatorSceneConfigs;
});
__d('PanResponder',["TouchHistoryMath"],function(global, require, module, exports) {  "use strict";





var TouchHistoryMath=require('TouchHistoryMath');

var currentCentroidXOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
var currentCentroidYOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
var previousCentroidXOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
var previousCentroidYOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
var currentCentroidX=TouchHistoryMath.currentCentroidX;
var currentCentroidY=TouchHistoryMath.currentCentroidY;















































































var PanResponder={
































































_initializeGestureState:function(gestureState){
gestureState.moveX = 0;
gestureState.moveY = 0;
gestureState.x0 = 0;
gestureState.y0 = 0;
gestureState.dx = 0;
gestureState.dy = 0;
gestureState.vx = 0;
gestureState.vy = 0;
gestureState.numberActiveTouches = 0;

gestureState._accountsForMovesUpTo = 0;},


























_updateGestureStateOnMove:function(gestureState,touchHistory){
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
gestureState.moveX = currentCentroidXOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

gestureState.moveY = currentCentroidYOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

var movedAfter=gestureState._accountsForMovesUpTo;
var prevX=previousCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var x=currentCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var prevY=previousCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var y=currentCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var nextDX=gestureState.dx + (x - prevX);
var nextDY=gestureState.dy + (y - prevY);


var dt=
touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;
gestureState.vx = (nextDX - gestureState.dx) / dt;
gestureState.vy = (nextDY - gestureState.dy) / dt;

gestureState.dx = nextDX;
gestureState.dy = nextDY;
gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;},


































create:function(config){
var gestureState={

stateID:Math.random()};

PanResponder._initializeGestureState(gestureState);
var panHandlers={
onStartShouldSetResponder:function(e){
return config.onStartShouldSetPanResponder === undefined?false:
config.onStartShouldSetPanResponder(e,gestureState);},

onMoveShouldSetResponder:function(e){
return config.onMoveShouldSetPanResponder === undefined?false:
config.onMoveShouldSetPanResponder(e,gestureState);},

onStartShouldSetResponderCapture:function(e){


if(e.nativeEvent.touches.length === 1){
PanResponder._initializeGestureState(gestureState);}

gestureState.numberActiveTouches = e.touchHistory.numberActiveTouches;
return config.onStartShouldSetPanResponderCapture !== undefined?
config.onStartShouldSetPanResponderCapture(e,gestureState):false;},


onMoveShouldSetResponderCapture:function(e){
var touchHistory=e.touchHistory;



if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return false;}

PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
return config.onMoveShouldSetPanResponderCapture?
config.onMoveShouldSetPanResponderCapture(e,gestureState):false;},


onResponderGrant:function(e){
gestureState.x0 = currentCentroidX(e.touchHistory);
gestureState.y0 = currentCentroidY(e.touchHistory);
gestureState.dx = 0;
gestureState.dy = 0;
config.onPanResponderGrant && config.onPanResponderGrant(e,gestureState);

return config.onShouldBlockNativeResponder === undefined?true:
config.onShouldBlockNativeResponder();},


onResponderReject:function(e){
config.onPanResponderReject && config.onPanResponderReject(e,gestureState);},


onResponderRelease:function(e){
config.onPanResponderRelease && config.onPanResponderRelease(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderStart:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderStart && config.onPanResponderStart(e,gestureState);},


onResponderMove:function(e){
var touchHistory=e.touchHistory;


if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return;}



PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
config.onPanResponderMove && config.onPanResponderMove(e,gestureState);},


onResponderEnd:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderEnd && config.onPanResponderEnd(e,gestureState);},


onResponderTerminate:function(e){
config.onPanResponderTerminate && 
config.onPanResponderTerminate(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderTerminationRequest:function(e){
return config.onPanResponderTerminationRequest === undefined?true:
config.onPanResponderTerminationRequest(e,gestureState);}};


return {panHandlers:panHandlers};}};



module.exports = PanResponder;
});
__d('TouchHistoryMath',[],function(global, require, module, exports) {  "use strict";





var TouchHistoryMath={
















centroidDimension:function(touchHistory,touchesChangedAfter,isXAxis,ofCurrent){
var touchBank=touchHistory.touchBank;
var total=0;
var count=0;

var oneTouchData=touchHistory.numberActiveTouches === 1?
touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]:null;

if(oneTouchData !== null){
if(oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter){
total += ofCurrent && isXAxis?oneTouchData.currentPageX:
ofCurrent && !isXAxis?oneTouchData.currentPageY:
!ofCurrent && isXAxis?oneTouchData.previousPageX:
oneTouchData.previousPageY;
count = 1;}}else 

{
for(var i=0;i < touchBank.length;i++) {
var touchTrack=touchBank[i];
if(touchTrack !== null && 
touchTrack !== undefined && 
touchTrack.touchActive && 
touchTrack.currentTimeStamp >= touchesChangedAfter){
var toAdd;
if(ofCurrent && isXAxis){
toAdd = touchTrack.currentPageX;}else 
if(ofCurrent && !isXAxis){
toAdd = touchTrack.currentPageY;}else 
if(!ofCurrent && isXAxis){
toAdd = touchTrack.previousPageX;}else 
{
toAdd = touchTrack.previousPageY;}

total += toAdd;
count++;}}}



return count > 0?total / count:TouchHistoryMath.noCentroid;},


currentCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
true);},



currentCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
true);},



previousCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
false);},



previousCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
false);},



currentCentroidX:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
true,
true);},



currentCentroidY:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
false,
true);},



noCentroid:-1};


module.exports = TouchHistoryMath;
});
__d('clamp',[],function(global, require, module, exports) {  function 























clamp(min,value,max){
if(value < min){
return min;}

if(value > max){
return max;}

return value;}


module.exports = clamp;
});
__d('rebound/rebound.js',[],function(global, require, module, exports) {  (


























































































































function(){
var rebound={};
var util=rebound.util = {};
var concat=Array.prototype.concat;
var slice=Array.prototype.slice;


util.bind = function bind(func,context){
var args=slice.call(arguments,2);
return function(){
func.apply(context,concat.call(args,slice.call(arguments)));};};




util.extend = function extend(target,source){
for(var key in source) {
if(source.hasOwnProperty(key)){
target[key] = source[key];}}};









var SpringSystem=rebound.SpringSystem = function SpringSystem(looper){
this._springRegistry = {};
this._activeSprings = [];
this.listeners = [];
this._idleSpringIndices = [];
this.looper = looper || new AnimationLooper();
this.looper.springSystem = this;};


util.extend(SpringSystem.prototype,{

_springRegistry:null,

_isIdle:true,

_lastTimeMillis:-1,

_activeSprings:null,

listeners:null,

_idleSpringIndices:null,






setLooper:function(looper){
this.looper = looper;
looper.springSystem = this;},






createSpring:function(tension,friction){
var springConfig;
if(tension === undefined || friction === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromOrigamiTensionAndFriction(tension,friction);}

return this.createSpringWithConfig(springConfig);},





createSpringWithBouncinessAndSpeed:function(bounciness,speed){
var springConfig;
if(bounciness === undefined || speed === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromBouncinessAndSpeed(bounciness,speed);}

return this.createSpringWithConfig(springConfig);},



createSpringWithConfig:function(springConfig){
var spring=new Spring(this);
this.registerSpring(spring);
spring.setSpringConfig(springConfig);
return spring;},






getIsIdle:function(){
return this._isIdle;},





getSpringById:function(id){
return this._springRegistry[id];},




getAllSprings:function(){
var vals=[];
for(var id in this._springRegistry) {
if(this._springRegistry.hasOwnProperty(id)){
vals.push(this._springRegistry[id]);}}


return vals;},






registerSpring:function(spring){
this._springRegistry[spring.getId()] = spring;},






deregisterSpring:function(spring){
removeFirst(this._activeSprings,spring);
delete this._springRegistry[spring.getId()];},


advance:function(time,deltaTime){
while(this._idleSpringIndices.length > 0) this._idleSpringIndices.pop();
for(var i=0,len=this._activeSprings.length;i < len;i++) {
var spring=this._activeSprings[i];
if(spring.systemShouldAdvance()){
spring.advance(time / 1000.0,deltaTime / 1000.0);}else 
{
this._idleSpringIndices.push(this._activeSprings.indexOf(spring));}}


while(this._idleSpringIndices.length > 0) {
var idx=this._idleSpringIndices.pop();
idx >= 0 && this._activeSprings.splice(idx,1);}},
















loop:function(currentTimeMillis){
var listener;
if(this._lastTimeMillis === -1){
this._lastTimeMillis = currentTimeMillis - 1;}

var ellapsedMillis=currentTimeMillis - this._lastTimeMillis;
this._lastTimeMillis = currentTimeMillis;

var i=0,len=this.listeners.length;
for(i = 0;i < len;i++) {
listener = this.listeners[i];
listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);}


this.advance(currentTimeMillis,ellapsedMillis);
if(this._activeSprings.length === 0){
this._isIdle = true;
this._lastTimeMillis = -1;}


for(i = 0;i < len;i++) {
listener = this.listeners[i];
listener.onAfterIntegrate && listener.onAfterIntegrate(this);}


if(!this._isIdle){
this.looper.run();}},






activateSpring:function(springId){
var spring=this._springRegistry[springId];
if(this._activeSprings.indexOf(spring) == -1){
this._activeSprings.push(spring);}

if(this.getIsIdle()){
this._isIdle = false;
this.looper.run();}},






addListener:function(listener){
this.listeners.push(listener);},



removeListener:function(listener){
removeFirst(this.listeners,listener);},



removeAllListeners:function(){
this.listeners = [];}});


















var Spring=rebound.Spring = function Spring(springSystem){
this._id = 's' + Spring._ID++;
this._springSystem = springSystem;
this.listeners = [];
this._currentState = new PhysicsState();
this._previousState = new PhysicsState();
this._tempState = new PhysicsState();};


util.extend(Spring,{
_ID:0,

MAX_DELTA_TIME_SEC:0.064,

SOLVER_TIMESTEP_SEC:0.001});



util.extend(Spring.prototype,{

_id:0,

_springConfig:null,

_overshootClampingEnabled:false,

_currentState:null,

_previousState:null,

_tempState:null,

_startValue:0,

_endValue:0,

_wasAtRest:true,

_restSpeedThreshold:0.001,

_displacementFromRestThreshold:0.001,

listeners:null,

_timeAccumulator:0,

_springSystem:null,


destroy:function(){
this.listeners = [];
this.frames = [];
this._springSystem.deregisterSpring(this);},




getId:function(){
return this._id;},





setSpringConfig:function(springConfig){
this._springConfig = springConfig;
return this;},



getSpringConfig:function(){
return this._springConfig;},





























setCurrentValue:function(currentValue,skipSetAtRest){
this._startValue = currentValue;
this._currentState.position = currentValue;
if(!skipSetAtRest){
this.setAtRest();}

this.notifyPositionUpdated(false,false);
return this;},





getStartValue:function(){
return this._startValue;},



getCurrentValue:function(){
return this._currentState.position;},




getCurrentDisplacementDistance:function(){
return this.getDisplacementDistanceForState(this._currentState);},


getDisplacementDistanceForState:function(state){
return Math.abs(this._endValue - state.position);},








setEndValue:function(endValue){
if(this._endValue == endValue && this.isAtRest()){
return this;}

this._startValue = this.getCurrentValue();
this._endValue = endValue;
this._springSystem.activateSpring(this.getId());
for(var i=0,len=this.listeners.length;i < len;i++) {
var listener=this.listeners[i];
var onChange=listener.onSpringEndStateChange;
onChange && onChange(this);}

return this;},



getEndValue:function(){
return this._endValue;},









setVelocity:function(velocity){
if(velocity === this._currentState.velocity){
return this;}

this._currentState.velocity = velocity;
this._springSystem.activateSpring(this.getId());
return this;},



getVelocity:function(){
return this._currentState.velocity;},




setRestSpeedThreshold:function(restSpeedThreshold){
this._restSpeedThreshold = restSpeedThreshold;
return this;},



getRestSpeedThreshold:function(){
return this._restSpeedThreshold;},





setRestDisplacementThreshold:function(displacementFromRestThreshold){
this._displacementFromRestThreshold = displacementFromRestThreshold;},



getRestDisplacementThreshold:function(){
return this._displacementFromRestThreshold;},







setOvershootClampingEnabled:function(enabled){
this._overshootClampingEnabled = enabled;
return this;},



isOvershootClampingEnabled:function(){
return this._overshootClampingEnabled;},





isOvershooting:function(){
var start=this._startValue;
var end=this._endValue;
return this._springConfig.tension > 0 && (
start < end && this.getCurrentValue() > end || 
start > end && this.getCurrentValue() < end);},







advance:function(time,realDeltaTime){
var isAtRest=this.isAtRest();

if(isAtRest && this._wasAtRest){
return;}


var adjustedDeltaTime=realDeltaTime;
if(realDeltaTime > Spring.MAX_DELTA_TIME_SEC){
adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;}


this._timeAccumulator += adjustedDeltaTime;

var tension=this._springConfig.tension,
friction=this._springConfig.friction,

position=this._currentState.position,
velocity=this._currentState.velocity,
tempPosition=this._tempState.position,
tempVelocity=this._tempState.velocity,

aVelocity,aAcceleration,
bVelocity,bAcceleration,
cVelocity,cAcceleration,
dVelocity,dAcceleration,

dxdt,dvdt;

while(this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {

this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;

if(this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC){
this._previousState.position = position;
this._previousState.velocity = velocity;}


aVelocity = velocity;
aAcceleration = 
tension * (this._endValue - tempPosition) - friction * velocity;

tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
bVelocity = tempVelocity;
bAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
cVelocity = tempVelocity;
cAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
dVelocity = tempVelocity;
dAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

dxdt = 
1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);
dvdt = 1.0 / 6.0 * (
aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);


position += dxdt * Spring.SOLVER_TIMESTEP_SEC;
velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;}


this._tempState.position = tempPosition;
this._tempState.velocity = tempVelocity;

this._currentState.position = position;
this._currentState.velocity = velocity;

if(this._timeAccumulator > 0){
this.interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);}


if(this.isAtRest() || 
this._overshootClampingEnabled && this.isOvershooting()){

if(this._springConfig.tension > 0){
this._startValue = this._endValue;
this._currentState.position = this._endValue;}else 
{
this._endValue = this._currentState.position;
this._startValue = this._endValue;}

this.setVelocity(0);
isAtRest = true;}


var notifyActivate=false;
if(this._wasAtRest){
this._wasAtRest = false;
notifyActivate = true;}


var notifyAtRest=false;
if(isAtRest){
this._wasAtRest = true;
notifyAtRest = true;}


this.notifyPositionUpdated(notifyActivate,notifyAtRest);},


notifyPositionUpdated:function(notifyActivate,notifyAtRest){
for(var i=0,len=this.listeners.length;i < len;i++) {
var listener=this.listeners[i];
if(notifyActivate && listener.onSpringActivate){
listener.onSpringActivate(this);}


if(listener.onSpringUpdate){
listener.onSpringUpdate(this);}


if(notifyAtRest && listener.onSpringAtRest){
listener.onSpringAtRest(this);}}},









systemShouldAdvance:function(){
return !this.isAtRest() || !this.wasAtRest();},


wasAtRest:function(){
return this._wasAtRest;},








isAtRest:function(){
return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (
this.getDisplacementDistanceForState(this._currentState) <= 
this._displacementFromRestThreshold || 
this._springConfig.tension === 0);},






setAtRest:function(){
this._endValue = this._currentState.position;
this._tempState.position = this._currentState.position;
this._currentState.velocity = 0;
return this;},


interpolate:function(alpha){
this._currentState.position = this._currentState.position * 
alpha + this._previousState.position * (1 - alpha);
this._currentState.velocity = this._currentState.velocity * 
alpha + this._previousState.velocity * (1 - alpha);},


getListeners:function(){
return this.listeners;},


addListener:function(newListener){
this.listeners.push(newListener);
return this;},


removeListener:function(listenerToRemove){
removeFirst(this.listeners,listenerToRemove);
return this;},


removeAllListeners:function(){
this.listeners = [];
return this;},


currentValueIsApproximately:function(value){
return Math.abs(this.getCurrentValue() - value) <= 
this.getRestDisplacementThreshold();}});









var PhysicsState=function PhysicsState(){};

util.extend(PhysicsState.prototype,{
position:0,
velocity:0});








var SpringConfig=rebound.SpringConfig = 
function SpringConfig(tension,friction){
this.tension = tension;
this.friction = friction;};







var AnimationLooper=rebound.AnimationLooper = function AnimationLooper(){
this.springSystem = null;
var _this=this;
var _run=function(){
_this.springSystem.loop(Date.now());};


this.run = function(){
util.onFrame(_run);};};









rebound.SimulationLooper = function SimulationLooper(timestep){
this.springSystem = null;
var time=0;
var running=false;
timestep = timestep || 16.667;

this.run = function(){
if(running){
return;}

running = true;
while(!this.springSystem.getIsIdle()) {
this.springSystem.loop(time += timestep);}

running = false;};};








rebound.SteppingSimulationLooper = function(timestep){
this.springSystem = null;
var time=0;



this.run = function(){};


this.step = function(timestep){
this.springSystem.loop(time += timestep);};};








var OrigamiValueConverter=rebound.OrigamiValueConverter = {
tensionFromOrigamiValue:function(oValue){
return (oValue - 30.0) * 3.62 + 194.0;},


origamiValueFromTension:function(tension){
return (tension - 194.0) / 3.62 + 30.0;},


frictionFromOrigamiValue:function(oValue){
return (oValue - 8.0) * 3.0 + 25.0;},


origamiFromFriction:function(friction){
return (friction - 25.0) / 3.0 + 8.0;}};










var BouncyConversion=rebound.BouncyConversion = function(bounciness,speed){
this.bounciness = bounciness;
this.speed = speed;
var b=this.normalize(bounciness / 1.7,0,20.0);
b = this.projectNormal(b,0.0,0.8);
var s=this.normalize(speed / 1.7,0,20.0);
this.bouncyTension = this.projectNormal(s,0.5,200);
this.bouncyFriction = this.quadraticOutInterpolation(
b,
this.b3Nobounce(this.bouncyTension),
0.01);};


util.extend(BouncyConversion.prototype,{

normalize:function(value,startValue,endValue){
return (value - startValue) / (endValue - startValue);},


projectNormal:function(n,start,end){
return start + n * (end - start);},


linearInterpolation:function(t,start,end){
return t * end + (1.0 - t) * start;},


quadraticOutInterpolation:function(t,start,end){
return this.linearInterpolation(2 * t - t * t,start,end);},


b3Friction1:function(x){
return 0.0007 * Math.pow(x,3) - 
0.031 * Math.pow(x,2) + 0.64 * x + 1.28;},


b3Friction2:function(x){
return 0.000044 * Math.pow(x,3) - 
0.006 * Math.pow(x,2) + 0.36 * x + 2.;},


b3Friction3:function(x){
return 0.00000045 * Math.pow(x,3) - 
0.000332 * Math.pow(x,2) + 0.1078 * x + 5.84;},


b3Nobounce:function(tension){
var friction=0;
if(tension <= 18){
friction = this.b3Friction1(tension);}else 
if(tension > 18 && tension <= 44){
friction = this.b3Friction2(tension);}else 
{
friction = this.b3Friction3(tension);}

return friction;}});



util.extend(SpringConfig,{




fromOrigamiTensionAndFriction:function(tension,friction){
return new SpringConfig(
OrigamiValueConverter.tensionFromOrigamiValue(tension),
OrigamiValueConverter.frictionFromOrigamiValue(friction));},





fromBouncinessAndSpeed:function(bounciness,speed){
var bouncyConversion=new rebound.BouncyConversion(bounciness,speed);
return this.fromOrigamiTensionAndFriction(
bouncyConversion.bouncyTension,
bouncyConversion.bouncyFriction);},




coastingConfigWithOrigamiFriction:function(friction){
return new SpringConfig(
0,
OrigamiValueConverter.frictionFromOrigamiValue(friction));}});




SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = 
SpringConfig.fromOrigamiTensionAndFriction(40,7);

util.extend(SpringConfig.prototype,{friction:0,tension:0});




var colorCache={};
util.hexToRGB = function(color){
if(colorCache[color]){
return colorCache[color];}

color = color.replace('#','');
if(color.length === 3){
color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];}

var parts=color.match(/.{2}/g);

var ret={
r:parseInt(parts[0],16),
g:parseInt(parts[1],16),
b:parseInt(parts[2],16)};


colorCache[color] = ret;
return ret;};


util.rgbToHex = function(r,g,b){
r = r.toString(16);
g = g.toString(16);
b = b.toString(16);
r = r.length < 2?'0' + r:r;
g = g.length < 2?'0' + g:g;
b = b.length < 2?'0' + b:b;
return '#' + r + g + b;};


var MathUtil=rebound.MathUtil = {








mapValueInRange:function(value,fromLow,fromHigh,toLow,toHigh){
var fromRangeSize=fromHigh - fromLow;
var toRangeSize=toHigh - toLow;
var valueScale=(value - fromLow) / fromRangeSize;
return toLow + valueScale * toRangeSize;},





interpolateColor:
function(val,startColor,endColor,fromLow,fromHigh,asRGB){
fromLow = fromLow === undefined?0:fromLow;
fromHigh = fromHigh === undefined?1:fromHigh;
startColor = util.hexToRGB(startColor);
endColor = util.hexToRGB(endColor);
var r=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.r,endColor.r));

var g=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.g,endColor.g));

var b=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.b,endColor.b));

if(asRGB){
return 'rgb(' + r + ',' + g + ',' + b + ')';}else 
{
return util.rgbToHex(r,g,b);}},



degreesToRadians:function(deg){
return deg * Math.PI / 180;},


radiansToDegrees:function(rad){
return rad * 180 / Math.PI;}};




util.extend(util,MathUtil);







function removeFirst(array,item){
var idx=array.indexOf(item);
idx != -1 && array.splice(idx,1);}


var _onFrame;
if(typeof window !== 'undefined'){
_onFrame = window.requestAnimationFrame || 
window.webkitRequestAnimationFrame || 
window.mozRequestAnimationFrame || 
window.msRequestAnimationFrame || 
window.oRequestAnimationFrame;}

if(!_onFrame && typeof process !== 'undefined' && process.title === 'node'){
_onFrame = setImmediate;}



util.onFrame = function onFrame(func){
return _onFrame(func);};




if(typeof exports != 'undefined'){
util.extend(exports,rebound);}else 
if(typeof window != 'undefined'){
window.rebound = rebound;}})();
});
__d('NavigatorIOS',["EventEmitter","Image","NavigationContext","React","NativeModules","StyleSheet","StaticContainer.react","View","requireNativeComponent","invariant","logError"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EventEmitter=require('EventEmitter');
var Image=require('Image');
var NavigationContext=require('NavigationContext');
var React=require('React');
var RCTNavigatorManager=require('NativeModules').NavigatorManager;
var StyleSheet=require('StyleSheet');
var StaticContainer=require('StaticContainer.react');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var invariant=require('invariant');
var logError=require('logError');

var TRANSITIONER_REF='transitionerRef';

var PropTypes=React.PropTypes;

var __uid=0;
function getuid(){
return __uid++;}


var NavigatorTransitionerIOS=React.createClass({
requestSchedulingNavigation:function(cb){
RCTNavigatorManager.requestSchedulingJavaScriptNavigation(
React.findNodeHandle(this),
logError,
cb);},



render:function(){
return (
React.createElement(RCTNavigator,this.props));}});

























































































































var NavigatorIOS=React.createClass({

propTypes:{






initialRoute:PropTypes.shape({



component:PropTypes.func.isRequired,




title:PropTypes.string.isRequired,





passProps:PropTypes.object,






backButtonIcon:Image.propTypes.source,






backButtonTitle:PropTypes.string,




leftButtonIcon:Image.propTypes.source,




leftButtonTitle:PropTypes.string,




onLeftButtonPress:PropTypes.func,




rightButtonIcon:Image.propTypes.source,




rightButtonTitle:PropTypes.string,




onRightButtonPress:PropTypes.func,




wrapperStyle:View.propTypes.style}).

isRequired,




navigationBarHidden:PropTypes.bool,




shadowHidden:PropTypes.bool,





itemWrapperStyle:View.propTypes.style,




tintColor:PropTypes.string,




barTintColor:PropTypes.string,




titleTextColor:PropTypes.string,




translucent:PropTypes.bool},



navigator:undefined,
navigationContext:new NavigationContext(),

componentWillMount:function(){


this.navigator = {
push:this.push,
pop:this.pop,
popN:this.popN,
replace:this.replace,
replacePrevious:this.replacePrevious,
replacePreviousAndPop:this.replacePreviousAndPop,
resetTo:this.resetTo,
popToRoute:this.popToRoute,
popToTop:this.popToTop,
navigationContext:this.navigationContext};

this._emitWillFocus(this.state.routeStack[this.state.observedTopOfStack]);},


componentDidMount:function(){
this._emitDidFocus(this.state.routeStack[this.state.observedTopOfStack]);},


componentWillUnmount:function(){
this.navigationContext.dispose();
this.navigationContext = new NavigationContext();},


getInitialState:function(){
return {
idStack:[getuid()],
routeStack:[this.props.initialRoute],

requestedTopOfStack:0,






observedTopOfStack:0,
progress:1,
fromIndex:0,
toIndex:0,


makingNavigatorRequest:false,



updatingAllIndicesAtOrBeyond:0};},



_toFocusOnNavigationComplete:undefined,

_handleFocusRequest:function(item){
if(this.state.makingNavigatorRequest){
this._toFocusOnNavigationComplete = item;}else 
{
this._getFocusEmitter().emit('focus',item);}},



_focusEmitter:undefined,

_getFocusEmitter:function(){

var focusEmitter=this._focusEmitter;
if(!focusEmitter){
focusEmitter = new EventEmitter();
this._focusEmitter = focusEmitter;}

return focusEmitter;},


getChildContext:function()


{
return {
onFocusRequested:this._handleFocusRequest,
focusEmitter:this._getFocusEmitter()};},



childContextTypes:{
onFocusRequested:React.PropTypes.func,
focusEmitter:React.PropTypes.instanceOf(EventEmitter)},


_tryLockNavigator:function(cb){
this.refs[TRANSITIONER_REF].requestSchedulingNavigation(
function(acquiredLock){return acquiredLock && cb();});},



_handleNavigatorStackChanged:function(e){
var newObservedTopOfStack=e.nativeEvent.stackLength - 1;
this._emitDidFocus(this.state.routeStack[newObservedTopOfStack]);

invariant(
newObservedTopOfStack <= this.state.requestedTopOfStack,
'No navigator item should be pushed without JS knowing about it %s %s',newObservedTopOfStack,this.state.requestedTopOfStack);

var wasWaitingForConfirmation=
this.state.requestedTopOfStack !== this.state.observedTopOfStack;
if(wasWaitingForConfirmation){
invariant(
newObservedTopOfStack === this.state.requestedTopOfStack,
'If waiting for observedTopOfStack to reach requestedTopOfStack, ' + 
'the only valid observedTopOfStack should be requestedTopOfStack.');}











var nextState={
observedTopOfStack:newObservedTopOfStack,
makingNavigatorRequest:false,
updatingAllIndicesAtOrBeyond:null,
progress:1,
toIndex:newObservedTopOfStack,
fromIndex:newObservedTopOfStack};

this.setState(nextState,this._eliminateUnneededChildren);},


_eliminateUnneededChildren:function(){



var updatingAllIndicesAtOrBeyond=
this.state.routeStack.length > this.state.observedTopOfStack + 1?
this.state.observedTopOfStack + 1:
null;
this.setState({
idStack:this.state.idStack.slice(0,this.state.observedTopOfStack + 1),
routeStack:this.state.routeStack.slice(0,this.state.observedTopOfStack + 1),

requestedTopOfStack:this.state.observedTopOfStack,
makingNavigatorRequest:true,
updatingAllIndicesAtOrBeyond:updatingAllIndicesAtOrBeyond});},



_emitDidFocus:function(route){
this.navigationContext.emit('didfocus',{route:route});},


_emitWillFocus:function(route){
this.navigationContext.emit('willfocus',{route:route});},


push:function(route){var _this=this;
invariant(!!route,'Must supply route to push');

if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
this._tryLockNavigator(function(){
_this._emitWillFocus(route);

var nextStack=_this.state.routeStack.concat([route]);
var nextIDStack=_this.state.idStack.concat([getuid()]);
_this.setState({


idStack:nextIDStack,
routeStack:nextStack,
requestedTopOfStack:nextStack.length - 1,
makingNavigatorRequest:true,
updatingAllIndicesAtOrBeyond:nextStack.length - 1});});}},





popN:function(n){var _this2=this;
if(n === 0){
return;}


if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
if(this.state.requestedTopOfStack > 0){
this._tryLockNavigator(function(){
var newRequestedTopOfStack=_this2.state.requestedTopOfStack - n;
invariant(newRequestedTopOfStack >= 0,'Cannot pop below 0');
_this2._emitWillFocus(_this2.state.routeStack[newRequestedTopOfStack]);
_this2.setState({
requestedTopOfStack:newRequestedTopOfStack,
makingNavigatorRequest:true,


updatingAllIndicesAtOrBeyond:null});});}}},






pop:function(){
this.popN(1);},








replaceAtIndex:function(route,index){
invariant(!!route,'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}




var nextIDStack=this.state.idStack.slice();
var nextRouteStack=this.state.routeStack.slice();
nextIDStack[index] = getuid();
nextRouteStack[index] = route;

this.setState({
idStack:nextIDStack,
routeStack:nextRouteStack,
makingNavigatorRequest:false,
updatingAllIndicesAtOrBeyond:index});


this._emitWillFocus(route);
this._emitDidFocus(route);},





replace:function(route){
this.replaceAtIndex(route,-1);},





replacePrevious:function(route){
this.replaceAtIndex(route,-2);},


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);},


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1,
'Calling pop to route for a route that doesn\'t exist!');

var numToPop=this.state.routeStack.length - indexOfRoute - 1;
this.popN(numToPop);},


replacePreviousAndPop:function(route){var _this3=this;

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

if(this.state.routeStack.length < 2){
return;}

this._tryLockNavigator(function(){
_this3.replacePrevious(route);
_this3.setState({
requestedTopOfStack:_this3.state.requestedTopOfStack - 1,
makingNavigatorRequest:true});});},




resetTo:function(route){
invariant(!!route,'Must supply route to push');

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

this.replaceAtIndex(route,0);
this.popToRoute(route);},


handleNavigationComplete:function(e){
if(this._toFocusOnNavigationComplete){
this._getFocusEmitter().emit('focus',this._toFocusOnNavigationComplete);
this._toFocusOnNavigationComplete = null;}

this._handleNavigatorStackChanged(e);},


_routeToStackItem:function(route,i){
var Component=route.component;
var shouldUpdateChild=this.state.updatingAllIndicesAtOrBeyond !== null && 
this.state.updatingAllIndicesAtOrBeyond >= i;

return (
React.createElement(StaticContainer,{key:'nav' + i,shouldUpdate:shouldUpdateChild},
React.createElement(RCTNavigatorItem,{
title:route.title,
style:[
styles.stackItem,
this.props.itemWrapperStyle,
route.wrapperStyle],

backButtonIcon:this._imageNameFromSource(route.backButtonIcon),
backButtonTitle:route.backButtonTitle,
leftButtonIcon:this._imageNameFromSource(route.leftButtonIcon),
leftButtonTitle:route.leftButtonTitle,
onNavLeftButtonTap:route.onLeftButtonPress,
rightButtonIcon:this._imageNameFromSource(route.rightButtonIcon),
rightButtonTitle:route.rightButtonTitle,
onNavRightButtonTap:route.onRightButtonPress,
navigationBarHidden:this.props.navigationBarHidden,
shadowHidden:this.props.shadowHidden,
tintColor:this.props.tintColor,
barTintColor:this.props.barTintColor,
translucent:this.props.translucent !== false,
titleTextColor:this.props.titleTextColor},
React.createElement(Component,_extends({
navigator:this.navigator,
route:route},
route.passProps)))));},






_imageNameFromSource:function(source){
return source?source.uri:undefined;},


renderNavigationStackItems:function(){
var shouldRecurseToNavigator=
this.state.makingNavigatorRequest || 
this.state.updatingAllIndicesAtOrBeyond !== null;


var items=shouldRecurseToNavigator?
this.state.routeStack.map(this._routeToStackItem):null;
return (
React.createElement(StaticContainer,{shouldUpdate:shouldRecurseToNavigator},
React.createElement(NavigatorTransitionerIOS,{
ref:TRANSITIONER_REF,
style:styles.transitioner,
vertical:this.props.vertical,
requestedTopOfStack:this.state.requestedTopOfStack,
onNavigationComplete:this.handleNavigationComplete},
items)));},





render:function(){
return (
React.createElement(View,{style:this.props.style},
this.renderNavigationStackItems()));}});





var styles=StyleSheet.create({
stackItem:{
backgroundColor:'white',
overflow:'hidden',
position:'absolute',
top:0,
left:0,
right:0,
bottom:0},

transitioner:{
flex:1}});



var RCTNavigator=requireNativeComponent('RCTNavigator');
var RCTNavigatorItem=requireNativeComponent('RCTNavItem');

module.exports = NavigatorIOS;
});
__d('PickerIOS',["NativeMethodsMixin","React","ReactChildren","ReactNativeViewAttributes","NativeModules","StyleSheet","View","requireNativeComponent","merge"],function(global, require, module, exports) {  'use strict';













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactChildren=require('ReactChildren');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTPickerIOSConsts=require('NativeModules').UIManager.RCTPicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var merge=require('merge');

var PICKER='picker';

var PickerIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{
onValueChange:React.PropTypes.func,
selectedValue:React.PropTypes.any},


getInitialState:function(){
return this._stateFromProps(this.props);},


componentWillReceiveProps:function(nextProps){
this.setState(this._stateFromProps(nextProps));},



_stateFromProps:function(props){
var selectedIndex=0;
var items=[];
ReactChildren.forEach(props.children,function(child,index){
if(child.props.value === props.selectedValue){
selectedIndex = index;}

items.push({value:child.props.value,label:child.props.label});});

return {selectedIndex:selectedIndex,items:items};},


render:function(){
return (
React.createElement(View,{style:this.props.style},
React.createElement(RCTPickerIOS,{
ref:PICKER,
style:styles.pickerIOS,
items:this.state.items,
selectedIndex:this.state.selectedIndex,
onChange:this._onChange})));},





_onChange:function(event){
if(this.props.onChange){
this.props.onChange(event);}

if(this.props.onValueChange){
this.props.onValueChange(event.nativeEvent.newValue);}








if(this.state.selectedIndex !== event.nativeEvent.newIndex){
this.refs[PICKER].setNativeProps({
selectedIndex:this.state.selectedIndex});}}});





PickerIOS.Item = React.createClass({
propTypes:{
value:React.PropTypes.any,
label:React.PropTypes.string},


render:function(){

return null;}});



var styles=StyleSheet.create({
pickerIOS:{



height:RCTPickerIOSConsts.ComponentHeight}});



var RCTPickerIOS=requireNativeComponent('RCTPicker',null);

module.exports = PickerIOS;
});
__d('ProgressBarAndroid',["UnimplementedView"],function(global, require, module, exports) {  'use strict';











module.exports = require('UnimplementedView');
});
__d('ProgressViewIOS',["Image","NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var Image=require('Image');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');




var ProgressViewIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{



progressViewStyle:PropTypes.oneOf(['default','bar']),




progress:PropTypes.number,




progressTintColor:PropTypes.string,




trackTintColor:PropTypes.string,




progressImage:Image.propTypes.source,




trackImage:Image.propTypes.source},


render:function(){
return (
React.createElement(RCTProgressView,_extends({},
this.props,{
style:[styles.progressView,this.props.style]})));}});





var styles=StyleSheet.create({
progressView:{
height:NativeModules.ProgressViewManager.ComponentHeight}});



var RCTProgressView=requireNativeComponent(
'RCTProgressView',
ProgressViewIOS);


module.exports = ProgressViewIOS;
});
__d('SegmentedControlIOS',["NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');






var SEGMENTED_CONTROL_REFERENCE='segmentedcontrol';






var SegmentedControlIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{



values:PropTypes.arrayOf(PropTypes.string),




selectedIndex:PropTypes.number,





onValueChange:PropTypes.func,





onChange:PropTypes.func,





enabled:PropTypes.bool,




tintColor:PropTypes.string,





momentary:PropTypes.bool},


getDefaultProps:function(){
return {
values:[],
enabled:true};},



_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);},


render:function(){
return (
React.createElement(RCTSegmentedControl,_extends({},
this.props,{
ref:SEGMENTED_CONTROL_REFERENCE,
style:[styles.segmentedControl,this.props.style],
onChange:this._onChange})));}});





var styles=StyleSheet.create({
segmentedControl:{
height:NativeModules.SegmentedControlManager.ComponentHeight}});



var RCTSegmentedControl=requireNativeComponent(
'RCTSegmentedControl',
SegmentedControlIOS);


module.exports = SegmentedControlIOS;
});
__d('SliderIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');



var SliderIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{




style:View.propTypes.style,









value:PropTypes.number,




minimumValue:PropTypes.number,




maximumValue:PropTypes.number,





minimumTrackTintColor:PropTypes.string,





maximumTrackTintColor:PropTypes.string,




onValueChange:PropTypes.func,





onSlidingComplete:PropTypes.func},


_onValueChange:function(event){
this.props.onChange && this.props.onChange(event);
if(event.nativeEvent.continuous){
this.props.onValueChange && 
this.props.onValueChange(event.nativeEvent.value);}else 
{
this.props.onSlidingComplete && event.nativeEvent.value !== undefined && 
this.props.onSlidingComplete(event.nativeEvent.value);}},



render:function(){
return (
React.createElement(RCTSlider,{
style:[styles.slider,this.props.style],
value:this.props.value,
maximumValue:this.props.maximumValue,
minimumValue:this.props.minimumValue,
minimumTrackTintColor:this.props.minimumTrackTintColor,
maximumTrackTintColor:this.props.maximumTrackTintColor,
onChange:this._onValueChange}));}});





var styles=StyleSheet.create({
slider:{
height:40}});



var RCTSlider=requireNativeComponent('RCTSlider',SliderIOS);

module.exports = SliderIOS;
});
__d('SwitchAndroid',["UnimplementedView"],function(global, require, module, exports) {  'use strict';











module.exports = require('UnimplementedView');
});
__d('SwitchIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');

var SWITCH='switch';















var SwitchIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{




value:PropTypes.bool,





disabled:PropTypes.bool,




onValueChange:PropTypes.func,




onTintColor:PropTypes.string,




thumbTintColor:PropTypes.string,




tintColor:PropTypes.string},


getDefaultProps:function(){
return {
value:false,
disabled:false};},



_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);



this.refs[SWITCH].setNativeProps({value:this.props.value});},


render:function(){
return (
React.createElement(RCTSwitch,_extends({},
this.props,{
ref:SWITCH,
onChange:this._onChange,
style:[styles.rkSwitch,this.props.style]})));}});





var styles=StyleSheet.create({
rkSwitch:{
height:31,
width:51}});



var RCTSwitch=requireNativeComponent('RCTSwitch',SwitchIOS);

module.exports = SwitchIOS;
});
__d('TabBarIOS',["React","StyleSheet","TabBarItemIOS","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var TabBarItemIOS=require('TabBarItemIOS');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarIOS=React.createClass({
statics:{
Item:TabBarItemIOS},


propTypes:{
style:View.propTypes.style,



tintColor:React.PropTypes.string,



barTintColor:React.PropTypes.string,



translucent:React.PropTypes.bool},


render:function(){
return (
React.createElement(RCTTabBar,{
style:[styles.tabGroup,this.props.style],
tintColor:this.props.tintColor,
barTintColor:this.props.barTintColor,
translucent:this.props.translucent !== false},
this.props.children));}});





var styles=StyleSheet.create({
tabGroup:{
flex:1}});



var RCTTabBar=requireNativeComponent('RCTTabBar',TabBarIOS);

module.exports = TabBarIOS;
});
__d('TabBarItemIOS',["Image","React","StaticContainer.react","StyleSheet","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};











var Image=require('Image');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarItemIOS=React.createClass({
propTypes:{



badge:React.PropTypes.oneOfType([
React.PropTypes.string,
React.PropTypes.number]),






systemIcon:React.PropTypes.oneOf([
'bookmarks',
'contacts',
'downloads',
'favorites',
'featured',
'history',
'more',
'most-recent',
'most-viewed',
'recents',
'search',
'top-rated']),




icon:Image.propTypes.source,




selectedIcon:Image.propTypes.source,




onPress:React.PropTypes.func,




selected:React.PropTypes.bool,



style:View.propTypes.style,




title:React.PropTypes.string},


getInitialState:function(){
return {
hasBeenSelected:false};},



componentWillMount:function(){
if(this.props.selected){
this.setState({hasBeenSelected:true});}},



componentWillReceiveProps:function(nextProps){
if(this.state.hasBeenSelected || nextProps.selected){
this.setState({hasBeenSelected:true});}},



render:function(){
var tabContents=null;


if(this.state.hasBeenSelected){
tabContents = 
React.createElement(StaticContainer,{shouldUpdate:this.props.selected},
this.props.children);}else 

{
tabContents = React.createElement(View,null);}


var badge=typeof this.props.badge === 'number'?
'' + this.props.badge:
this.props.badge;

return (
React.createElement(RCTTabBarItem,_extends({},
this.props,{
icon:this.props.systemIcon || this.props.icon,
badge:badge,
style:[styles.tab,this.props.style]}),
tabContents));}});





var styles=StyleSheet.create({
tab:{
position:'absolute',
top:0,
right:0,
bottom:0,
left:0}});



var RCTTabBarItem=requireNativeComponent('RCTTabBarItem',TabBarItemIOS);

module.exports = TabBarItemIOS;
});
__d('Text',["NativeMethodsMixin","Platform","React","ReactInstanceMap","ReactNativeViewAttributes","StyleSheetPropType","TextStylePropTypes","Touchable","createReactNativeComponentClass","merge"],function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var TextStylePropTypes=require('TextStylePropTypes');
var Touchable=require('Touchable');

var createReactNativeComponentClass=
require('createReactNativeComponentClass');
var merge=require('merge');

var stylePropType=StyleSheetPropType(TextStylePropTypes);

var viewConfig={
validAttributes:merge(ReactNativeViewAttributes.UIView,{
isHighlighted:true,
numberOfLines:true,
allowFontScaling:true}),

uiViewClassName:'RCTText'};



































var Text=React.createClass({

mixins:[Touchable.Mixin,NativeMethodsMixin],

propTypes:{





numberOfLines:React.PropTypes.number,





onLayout:React.PropTypes.func,



onPress:React.PropTypes.func,





suppressHighlighting:React.PropTypes.bool,
style:stylePropType,



testID:React.PropTypes.string,



allowFontScaling:React.PropTypes.bool},


viewConfig:viewConfig,

getInitialState:function(){
return merge(this.touchableGetInitialState(),{
isHighlighted:false});},



getDefaultProps:function(){
return {
allowFontScaling:true};},



onStartShouldSetResponder:function(){
var shouldSetFromProps=this.props.onStartShouldSetResponder && 
this.props.onStartShouldSetResponder();
return shouldSetFromProps || !!this.props.onPress;},





handleResponderTerminationRequest:function(){


var allowTermination=this.touchableHandleResponderTerminationRequest();
if(allowTermination && this.props.onResponderTerminationRequest){
allowTermination = this.props.onResponderTerminationRequest();}

return allowTermination;},


handleResponderGrant:function(e,dispatchID){
this.touchableHandleResponderGrant(e,dispatchID);
this.props.onResponderGrant && 
this.props.onResponderGrant.apply(this,arguments);},


handleResponderMove:function(e){
this.touchableHandleResponderMove(e);
this.props.onResponderMove && 
this.props.onResponderMove.apply(this,arguments);},


handleResponderRelease:function(e){
this.touchableHandleResponderRelease(e);
this.props.onResponderRelease && 
this.props.onResponderRelease.apply(this,arguments);},


handleResponderTerminate:function(e){
this.touchableHandleResponderTerminate(e);
this.props.onResponderTerminate && 
this.props.onResponderTerminate.apply(this,arguments);},


touchableHandleActivePressIn:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:true});},



touchableHandleActivePressOut:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:false});},



touchableHandlePress:function(){
this.props.onPress && this.props.onPress();},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


getChildContext:function(){
return {isInAParentText:true};},


childContextTypes:{
isInAParentText:React.PropTypes.bool},


render:function(){
var props={};
for(var key in this.props) {
props[key] = this.props[key];}


if(props.accessible !== false){
props.accessible = true;}

props.isHighlighted = this.state.isHighlighted;
props.onStartShouldSetResponder = this.onStartShouldSetResponder;
props.onResponderTerminationRequest = 
this.handleResponderTerminationRequest;
props.onResponderGrant = this.handleResponderGrant;
props.onResponderMove = this.handleResponderMove;
props.onResponderRelease = this.handleResponderRelease;
props.onResponderTerminate = this.handleResponderTerminate;


var context=ReactInstanceMap.get(this)._context;
if(context.isInAParentText){
return React.createElement(RCTVirtualText,props);}else 
{
return React.createElement(RCTText,props);}}});











var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};

var RCTText=createReactNativeComponentClass(viewConfig);
var RCTVirtualText=RCTText;

if(Platform.OS === 'android'){
RCTVirtualText = createReactNativeComponentClass({
validAttributes:merge(ReactNativeViewAttributes.UIView,{
isHighlighted:true}),

uiViewClassName:'RCTVirtualText'});}



module.exports = Text;
});
__d('Touchable',["BoundingDimensions","Position","TouchEventUtils","keyMirror","queryLayoutByID"],function(global, require, module, exports) {  'use strict';





var BoundingDimensions=require('BoundingDimensions');
var Position=require('Position');
var TouchEventUtils=require('TouchEventUtils');

var keyMirror=require('keyMirror');
var queryLayoutByID=require('queryLayoutByID');

























































































var States=keyMirror({
NOT_RESPONDER:null,
RESPONDER_INACTIVE_PRESS_IN:null,
RESPONDER_INACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_PRESS_IN:null,
RESPONDER_ACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_LONG_PRESS_IN:null,
RESPONDER_ACTIVE_LONG_PRESS_OUT:null,
ERROR:null});





var IsActive={
RESPONDER_ACTIVE_PRESS_OUT:true,
RESPONDER_ACTIVE_PRESS_IN:true};






var IsPressingIn={
RESPONDER_INACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_LONG_PRESS_IN:true};


var IsLongPressingIn={
RESPONDER_ACTIVE_LONG_PRESS_IN:true};





var Signals=keyMirror({
DELAY:null,
RESPONDER_GRANT:null,
RESPONDER_RELEASE:null,
RESPONDER_TERMINATED:null,
ENTER_PRESS_RECT:null,
LEAVE_PRESS_RECT:null,
LONG_PRESS_DETECTED:null});





var Transitions={
NOT_RESPONDER:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.ERROR,
RESPONDER_TERMINATED:States.ERROR,
ENTER_PRESS_RECT:States.ERROR,
LEAVE_PRESS_RECT:States.ERROR,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_IN:{
DELAY:States.RESPONDER_ACTIVE_PRESS_IN,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_OUT:{
DELAY:States.RESPONDER_ACTIVE_PRESS_OUT,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_LONG_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_LONG_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

error:{
DELAY:States.NOT_RESPONDER,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.NOT_RESPONDER,
LEAVE_PRESS_RECT:States.NOT_RESPONDER,
LONG_PRESS_DETECTED:States.NOT_RESPONDER}};






var HIGHLIGHT_DELAY_MS=130;

var PRESS_EXPAND_PX=20;

var LONG_PRESS_THRESHOLD=500;

var LONG_PRESS_DELAY_MS=LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;

var LONG_PRESS_ALLOWED_MOVEMENT=10;



































































var TouchableMixin={







touchableGetInitialState:function(){
return {
touchable:{touchState:undefined,responderID:null}};},







touchableHandleResponderTerminationRequest:function(){
return !this.props.rejectResponderTermination;},





touchableHandleStartShouldSetResponder:function(){
return true;},





touchableLongPressCancelsPress:function(){
return true;},








touchableHandleResponderGrant:function(e,dispatchID){



e.persist();

this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
this.pressOutDelayTimeout = null;

this.state.touchable.touchState = States.NOT_RESPONDER;
this.state.touchable.responderID = dispatchID;
this._receiveSignal(Signals.RESPONDER_GRANT,e);
var delayMS=
this.touchableGetHighlightDelayMS !== undefined?
Math.max(this.touchableGetHighlightDelayMS(),0):HIGHLIGHT_DELAY_MS;
delayMS = isNaN(delayMS)?HIGHLIGHT_DELAY_MS:delayMS;
if(delayMS !== 0){
this.touchableDelayTimeout = setTimeout(
this._handleDelay.bind(this,e),
delayMS);}else 

{
this._handleDelay(e);}


var longDelayMS=
this.touchableGetLongPressDelayMS !== undefined?
Math.max(this.touchableGetLongPressDelayMS(),10):LONG_PRESS_DELAY_MS;
longDelayMS = isNaN(longDelayMS)?LONG_PRESS_DELAY_MS:longDelayMS;
this.longPressDelayTimeout = setTimeout(
this._handleLongDelay.bind(this,e),
longDelayMS + delayMS);},






touchableHandleResponderRelease:function(e){
this._receiveSignal(Signals.RESPONDER_RELEASE,e);},





touchableHandleResponderTerminate:function(e){
this._receiveSignal(Signals.RESPONDER_TERMINATED,e);},





touchableHandleResponderMove:function(e){


if(this.state.touchable.touchState === States.RESPONDER_INACTIVE_PRESS_IN){
return;}



if(!this.state.touchable.positionOnActivate){
return;}


var positionOnActivate=this.state.touchable.positionOnActivate;
var dimensionsOnActivate=this.state.touchable.dimensionsOnActivate;
var pressRectOffset=this.touchableGetPressRectOffset?
this.touchableGetPressRectOffset():null;
var pressExpandLeft=
pressRectOffset.left != null?pressRectOffset.left:PRESS_EXPAND_PX;
var pressExpandTop=
pressRectOffset.top != null?pressRectOffset.top:PRESS_EXPAND_PX;
var pressExpandRight=
pressRectOffset.right != null?pressRectOffset.right:PRESS_EXPAND_PX;
var pressExpandBottom=
pressRectOffset.bottom != null?pressRectOffset.bottom:PRESS_EXPAND_PX;

var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;

if(this.pressInLocation){
var movedDistance=this._getDistanceBetweenPoints(pageX,pageY,this.pressInLocation.pageX,this.pressInLocation.pageY);
if(movedDistance > LONG_PRESS_ALLOWED_MOVEMENT){
this._cancelLongPressDelayTimeout();}}



var isTouchWithinActive=
pageX > positionOnActivate.left - pressExpandLeft && 
pageY > positionOnActivate.top - pressExpandTop && 
pageX < 
positionOnActivate.left + 
dimensionsOnActivate.width + 
pressExpandRight && 
pageY < 
positionOnActivate.top + 
dimensionsOnActivate.height + 
pressExpandBottom;
if(isTouchWithinActive){
this._receiveSignal(Signals.ENTER_PRESS_RECT,e);}else 
{
this._cancelLongPressDelayTimeout();
this._receiveSignal(Signals.LEAVE_PRESS_RECT,e);}},

















































































_remeasureMetricsOnActivation:function(){
queryLayoutByID(
this.state.touchable.responderID,
null,
this._handleQueryLayout);},



_handleQueryLayout:function(l,t,w,h,globalX,globalY){
this.state.touchable.positionOnActivate && 
Position.release(this.state.touchable.positionOnActivate);
this.state.touchable.dimensionsOnActivate && 
BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
this.state.touchable.positionOnActivate = Position.getPooled(globalX,globalY);
this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w,h);},


_handleDelay:function(e){
this.touchableDelayTimeout = null;
this._receiveSignal(Signals.DELAY,e);},


_handleLongDelay:function(e){
this.longPressDelayTimeout = null;
this._receiveSignal(Signals.LONG_PRESS_DETECTED,e);},










_receiveSignal:function(signal,e){
var curState=this.state.touchable.touchState;
if(!(Transitions[curState] && Transitions[curState][signal])){
throw new Error(
'Unrecognized signal `' + signal + '` or state `' + curState + 
'` for Touchable responder `' + this.state.touchable.responderID + '`');}


var nextState=Transitions[curState][signal];
if(nextState === States.ERROR){
throw new Error(
'Touchable cannot transition from `' + curState + '` to `' + signal + 
'` for responder `' + this.state.touchable.responderID + '`');}


if(curState !== nextState){
this._performSideEffectsForTransition(curState,nextState,signal,e);
this.state.touchable.touchState = nextState;}},



_cancelLongPressDelayTimeout:function(){
this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
this.longPressDelayTimeout = null;},


_isHighlight:function(state){
return state === States.RESPONDER_ACTIVE_PRESS_IN || 
state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;},


_savePressInLocation:function(e){
var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;
this.pressInLocation = {pageX:pageX,pageY:pageY};},


_getDistanceBetweenPoints:function(aX,aY,bX,bY){
var deltaX=aX - bX;
var deltaY=aY - bY;
return Math.sqrt(deltaX * deltaX + deltaY * deltaY);},













_performSideEffectsForTransition:function(curState,nextState,signal,e){
var curIsHighlight=this._isHighlight(curState);
var newIsHighlight=this._isHighlight(nextState);

var isFinalSignal=
signal === Signals.RESPONDER_TERMINATED || 
signal === Signals.RESPONDER_RELEASE;

if(isFinalSignal){
this._cancelLongPressDelayTimeout();}


if(!IsActive[curState] && IsActive[nextState]){
this._remeasureMetricsOnActivation();}


if(IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED){
this.touchableHandleLongPress && this.touchableHandleLongPress(e);}


if(newIsHighlight && !curIsHighlight){
this._savePressInLocation(e);
this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);}else 
if(!newIsHighlight && curIsHighlight && this.touchableHandleActivePressOut){
if(this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()){
this.pressOutDelayTimeout = this.setTimeout(function(){
this.touchableHandleActivePressOut(e);},
this.touchableGetPressOutDelayMS());}else 
{
this.touchableHandleActivePressOut(e);}}



if(IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE){
var hasLongPressHandler=!!this.props.onLongPress;
var pressIsLongButStillCallOnPress=
IsLongPressingIn[curState] && (
!hasLongPressHandler || 
!this.touchableLongPressCancelsPress());


var shouldInvokePress=!IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;
if(shouldInvokePress && this.touchableHandlePress){
this.touchableHandlePress(e);}}



this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
this.touchableDelayTimeout = null;}};




var Touchable={
Mixin:TouchableMixin};


module.exports = Touchable;
});
__d('BoundingDimensions',["PooledClass"],function(global, require, module, exports) {  "use strict";





var PooledClass=require('PooledClass');

var twoArgumentPooler=PooledClass.twoArgumentPooler;








function BoundingDimensions(width,height){
this.width = width;
this.height = height;}






BoundingDimensions.getPooledFromElement = function(element){
return BoundingDimensions.getPooled(
element.offsetWidth,
element.offsetHeight);};



PooledClass.addPoolingTo(BoundingDimensions,twoArgumentPooler);

module.exports = BoundingDimensions;
});
__d('Position',["PooledClass"],function(global, require, module, exports) {  "use strict";





var PooledClass=require('PooledClass');

var twoArgumentPooler=PooledClass.twoArgumentPooler;









function Position(left,top){
this.left = left;
this.top = top;}


PooledClass.addPoolingTo(Position,twoArgumentPooler);

module.exports = Position;
});
__d('TouchEventUtils',[],function(global, require, module, exports) {  var 










TouchEventUtils={










extractSingleTouch:function(nativeEvent){
var touches=nativeEvent.touches;
var changedTouches=nativeEvent.changedTouches;
var hasTouches=touches && touches.length > 0;
var hasChangedTouches=changedTouches && changedTouches.length > 0;

return !hasTouches && hasChangedTouches?changedTouches[0]:
hasTouches?touches[0]:
nativeEvent;}};



module.exports = TouchEventUtils;
});
__d('queryLayoutByID',["ReactNativeTagHandles","NativeModules"],function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var RCTUIManager=require('NativeModules').UIManager;
































var queryLayoutByID=function(
rootNodeID,
onError,
onSuccess)
{

RCTUIManager.measure(
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID],
onSuccess);};



module.exports = queryLayoutByID;
});
__d('TextInput',["DocumentSelectionState","EventEmitter","NativeMethodsMixin","NativeModules","Platform","ReactPropTypes","React","ReactChildren","StyleSheet","Text","TextInputState","react-timer-mixin/TimerMixin.js","TouchableWithoutFeedback","createReactNativeComponentClass","emptyFunction","invariant","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var DocumentSelectionState=require('DocumentSelectionState');
var EventEmitter=require('EventEmitter');
var NativeMethodsMixin=require('NativeMethodsMixin');
var RCTUIManager=require('NativeModules').UIManager;
var Platform=require('Platform');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactChildren=require('ReactChildren');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TextInputState=require('TextInputState');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');
var requireNativeComponent=require('requireNativeComponent');

var onlyMultiline={
onSelectionChange:true,
onTextInput:true,
children:true};


var notMultiline={
onSubmitEditing:true};


var AndroidTextInputAttributes={
autoCapitalize:true,
autoCorrect:true,
autoFocus:true,
textAlign:true,
textAlignVertical:true,
keyboardType:true,
mostRecentEventCount:true,
multiline:true,
numberOfLines:true,
password:true,
placeholder:true,
placeholderTextColor:true,
text:true,
testID:true,
underlineColorAndroid:true,
editable:true};


var viewConfigAndroid={
uiViewClassName:'AndroidTextInput',
validAttributes:AndroidTextInputAttributes};


var RCTTextView=requireNativeComponent('RCTTextView',null);
var RCTTextField=requireNativeComponent('RCTTextField',null);


































var TextInput=React.createClass({
propTypes:{








autoCapitalize:PropTypes.oneOf([
'none',
'sentences',
'words',
'characters']),




autoCorrect:PropTypes.bool,




autoFocus:PropTypes.bool,




textAlign:PropTypes.oneOf([
'start',
'center',
'end']),





textAlignVertical:PropTypes.oneOf([
'top',
'center',
'bottom']),




editable:PropTypes.bool,








keyboardType:PropTypes.oneOf([

'default',
'numeric',
'email-address',

'ascii-capable',
'numbers-and-punctuation',
'url',
'number-pad',
'phone-pad',
'name-phone-pad',
'decimal-pad',
'twitter',
'web-search']),





returnKeyType:PropTypes.oneOf([
'default',
'go',
'google',
'join',
'next',
'route',
'search',
'send',
'yahoo',
'done',
'emergency-call']),






maxLength:PropTypes.number,





numberOfLines:PropTypes.number,





enablesReturnKeyAutomatically:PropTypes.bool,




multiline:PropTypes.bool,



onBlur:PropTypes.func,



onFocus:PropTypes.func,



onChange:PropTypes.func,




onChangeText:PropTypes.func,



onEndEditing:PropTypes.func,



onSubmitEditing:PropTypes.func,



onLayout:PropTypes.func,



placeholder:PropTypes.string,



placeholderTextColor:PropTypes.string,




secureTextEntry:PropTypes.bool,





selectionState:PropTypes.instanceOf(DocumentSelectionState),









value:PropTypes.string,





defaultValue:PropTypes.string,




clearButtonMode:PropTypes.oneOf([
'never',
'while-editing',
'unless-editing',
'always']),





clearTextOnFocus:PropTypes.bool,




selectTextOnFocus:PropTypes.bool,



style:Text.propTypes.style,



testID:PropTypes.string,




underlineColorAndroid:PropTypes.string},






mixins:[NativeMethodsMixin,TimerMixin],

viewConfig:Platform.OS === 'ios'?RCTTextField.viewConfig:
Platform.OS === 'android'?viewConfigAndroid:{},

isFocused:function(){
return TextInputState.currentlyFocusedField() === 
React.findNodeHandle(this.refs.input);},


getInitialState:function(){
return {
mostRecentEventCount:0};},



contextTypes:{
onFocusRequested:React.PropTypes.func,
focusEmitter:React.PropTypes.instanceOf(EventEmitter)},


_focusSubscription:undefined,

componentDidMount:function(){var _this=this;
if(!this.context.focusEmitter){
if(this.props.autoFocus){
this.requestAnimationFrame(this.focus);}

return;}

this._focusSubscription = this.context.focusEmitter.addListener(
'focus',
function(el){
if(_this === el){
_this.requestAnimationFrame(_this.focus);}else 
if(_this.isFocused()){
_this.blur();}});



if(this.props.autoFocus){
this.context.onFocusRequested(this);}},



componentWillUnmount:function(){
this._focusSubscription && this._focusSubscription.remove();
if(this.isFocused()){
this.blur();}},



getChildContext:function(){
return {isInAParentText:true};},


childContextTypes:{
isInAParentText:React.PropTypes.bool},


clear:function(){
this.setNativeProps({text:''});},


render:function(){
if(Platform.OS === 'ios'){
return this._renderIOS();}else 
if(Platform.OS === 'android'){
return this._renderAndroid();}},



_getText:function(){
return typeof this.props.value === 'string'?
this.props.value:
this.props.defaultValue;},


_renderIOS:function(){
var textContainer;

var props=Object.assign({},this.props);
props.style = [styles.input,this.props.style];
if(!props.multiline){
for(var propKey in onlyMultiline) {
if(props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` is only supported with multiline.');}}



textContainer = 
React.createElement(RCTTextField,_extends({
ref:'input'},
props,{
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onSelectionChangeShouldSetResponder:function(){return true;},
text:this._getText(),
mostRecentEventCount:this.state.mostRecentEventCount}));}else 

{
for(var propKey in notMultiline) {
if(props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` cannot be used with multiline.');}}




var children=props.children;
var childCount=0;
ReactChildren.forEach(children,function(){return ++childCount;});
invariant(
!(props.value && childCount),
'Cannot specify both value and children.');

if(childCount > 1){
children = React.createElement(Text,null,children);}

if(props.inputView){
children = [children,props.inputView];}

textContainer = 
React.createElement(RCTTextView,_extends({
ref:'input'},
props,{
children:children,
mostRecentEventCount:this.state.mostRecentEventCount,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onSelectionChange:this._onSelectionChange,
onTextInput:this._onTextInput,
onSelectionChangeShouldSetResponder:emptyFunction.thatReturnsTrue,
text:this._getText()}));}



return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
rejectResponderTermination:true,
testID:props.testID},
textContainer));},




_renderAndroid:function(){
var autoCapitalize=RCTUIManager.UIText.AutocapitalizationType[this.props.autoCapitalize];
var textAlign=
RCTUIManager.AndroidTextInput.Constants.TextAlign[this.props.textAlign];
var textAlignVertical=
RCTUIManager.AndroidTextInput.Constants.TextAlignVertical[this.props.textAlignVertical];
var children=this.props.children;
var childCount=0;
ReactChildren.forEach(children,function(){return ++childCount;});
invariant(
!(this.props.value && childCount),
'Cannot specify both value and children.');

if(childCount > 1){
children = React.createElement(Text,null,children);}

var textContainer=
React.createElement(AndroidTextInput,{
ref:'input',
style:[this.props.style],
autoCapitalize:autoCapitalize,
autoCorrect:this.props.autoCorrect,
textAlign:textAlign,
textAlignVertical:textAlignVertical,
keyboardType:this.props.keyboardType,
mostRecentEventCount:this.state.mostRecentEventCount,
multiline:this.props.multiline,
numberOfLines:this.props.numberOfLines,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onTextInput:this._onTextInput,
onEndEditing:this.props.onEndEditing,
onSubmitEditing:this.props.onSubmitEditing,
onLayout:this.props.onLayout,
password:this.props.password || this.props.secureTextEntry,
placeholder:this.props.placeholder,
placeholderTextColor:this.props.placeholderTextColor,
text:this._getText(),
underlineColorAndroid:this.props.underlineColorAndroid,
children:children,
editable:this.props.editable});


return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
testID:this.props.testID},
textContainer));},




_onFocus:function(event){
if(this.props.onFocus){
this.props.onFocus(event);}},



_onPress:function(event){
if(this.props.editable || this.props.editable === undefined){
this.focus();}},



_onChange:function(event){var _this2=this;
if(Platform.OS === 'android'){

this.refs.input.setNativeProps({
mostRecentEventCount:event.nativeEvent.eventCount});}


var text=event.nativeEvent.text;
var eventCount=event.nativeEvent.eventCount;
this.props.onChange && this.props.onChange(event);
this.props.onChangeText && this.props.onChangeText(text);
this.setState({mostRecentEventCount:eventCount},function(){



if(text !== _this2.props.value && typeof _this2.props.value === 'string'){
_this2.refs.input.setNativeProps({
text:_this2.props.value});}});},





_onBlur:function(event){
this.blur();
if(this.props.onBlur){
this.props.onBlur(event);}},



_onSelectionChange:function(event){
if(this.props.selectionState){
var selection=event.nativeEvent.selection;
this.props.selectionState.update(selection.start,selection.end);}

this.props.onSelectionChange && this.props.onSelectionChange(event);},


_onTextInput:function(event){
this.props.onTextInput && this.props.onTextInput(event);}});



var styles=StyleSheet.create({
input:{
alignSelf:'stretch'}});



var AndroidTextInput=createReactNativeComponentClass({
validAttributes:AndroidTextInputAttributes,
uiViewClassName:'AndroidTextInput'});


module.exports = TextInput;
});
__d('DocumentSelectionState',["mixInEventEmitter"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var mixInEventEmitter=require('mixInEventEmitter');var 










DocumentSelectionState=(function(){




function DocumentSelectionState(anchor,focus){_classCallCheck(this,DocumentSelectionState);
this._anchorOffset = anchor;
this._focusOffset = focus;
this._hasFocus = false;}_createClass(DocumentSelectionState,[{key:'update',value:









function update(anchor,focus){
if(this._anchorOffset !== anchor || this._focusOffset !== focus){
this._anchorOffset = anchor;
this._focusOffset = focus;
this.emit('update');}}},{key:'constrainLength',value:









function constrainLength(maxLength){
this.update(
Math.min(this._anchorOffset,maxLength),
Math.min(this._focusOffset,maxLength));}},{key:'focus',value:



function focus(){
if(!this._hasFocus){
this._hasFocus = true;
this.emit('focus');}}},{key:'blur',value:



function blur(){
if(this._hasFocus){
this._hasFocus = false;
this.emit('blur');}}},{key:'hasFocus',value:






function hasFocus(){
return this._hasFocus;}},{key:'isCollapsed',value:





function isCollapsed(){
return this._anchorOffset === this._focusOffset;}},{key:'isBackward',value:





function isBackward(){
return this._anchorOffset > this._focusOffset;}},{key:'getAnchorOffset',value:





function getAnchorOffset(){
return this._hasFocus?this._anchorOffset:null;}},{key:'getFocusOffset',value:





function getFocusOffset(){
return this._hasFocus?this._focusOffset:null;}},{key:'getStartOffset',value:





function getStartOffset(){
return (
this._hasFocus?Math.min(this._anchorOffset,this._focusOffset):null);}},{key:'getEndOffset',value:






function getEndOffset(){
return (
this._hasFocus?Math.max(this._anchorOffset,this._focusOffset):null);}},{key:'overlaps',value:








function overlaps(start,end){
return (
this.hasFocus() && 
this.getStartOffset() <= end && start <= this.getEndOffset());}}]);return DocumentSelectionState;})();




mixInEventEmitter(DocumentSelectionState,{
'blur':true,
'focus':true,
'update':true});


module.exports = DocumentSelectionState;
});
__d('mixInEventEmitter',["EventEmitter","EventEmitterWithHolding","EventHolder","EventValidator","copyProperties","invariant","keyOf"],function(global, require, module, exports) {  var 
















EventEmitter=require('EventEmitter');
var EventEmitterWithHolding=require('EventEmitterWithHolding');
var EventHolder=require('EventHolder');
var EventValidator=require('EventValidator');

var copyProperties=require('copyProperties');
var invariant=require('invariant');
var keyOf=require('keyOf');

var TYPES_KEY=keyOf({__types:true});






















function mixInEventEmitter(klass,types){
invariant(types,'Must supply set of valid event types');
invariant(!this.__eventEmitter,'An active emitter is already mixed in');



var target=klass.prototype || klass;

var ctor=klass.constructor;
if(ctor){
invariant(
ctor === Object || ctor === Function,
'Mix EventEmitter into a class, not an instance');}





if(target.hasOwnProperty(TYPES_KEY)){
copyProperties(target.__types,types);}else 
if(target.__types){
target.__types = copyProperties({},target.__types,types);}else 
{
target.__types = types;}

copyProperties(target,EventEmitterMixin);}


var EventEmitterMixin={
emit:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emit(eventType,a,b,c,d,e,_);},


emitAndHold:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emitAndHold(eventType,a,b,c,d,e,_);},


addListener:function(eventType,listener,context){
return this.__getEventEmitter().addListener(eventType,listener,context);},


once:function(eventType,listener,context){
return this.__getEventEmitter().once(eventType,listener,context);},


addRetroactiveListener:function(eventType,listener,context){
return this.__getEventEmitter().addRetroactiveListener(
eventType,
listener,
context);},



addListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


addRetroactiveListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


removeAllListeners:function(){
this.__getEventEmitter().removeAllListeners();},


removeCurrentListener:function(){
this.__getEventEmitter().removeCurrentListener();},


releaseHeldEventType:function(eventType){
this.__getEventEmitter().releaseHeldEventType(eventType);},


__getEventEmitter:function(){
if(!this.__eventEmitter){
var emitter=new EventEmitter();
emitter = EventValidator.addValidation(emitter,this.__types);

var holder=new EventHolder();
this.__eventEmitter = new EventEmitterWithHolding(emitter,holder);}

return this.__eventEmitter;}};



module.exports = mixInEventEmitter;
});
__d('EventEmitterWithHolding',[],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






























EventEmitterWithHolding=(function(){







function EventEmitterWithHolding(emitter,holder){_classCallCheck(this,EventEmitterWithHolding);
this._emitter = emitter;
this._eventHolder = holder;
this._currentEventToken = null;
this._emittingHeldEvents = false;}_createClass(EventEmitterWithHolding,[{key:'addListener',value:





function addListener(eventType,listener,context){
return this._emitter.addListener(eventType,listener,context);}},{key:'once',value:





function once(eventType,listener,context){
return this._emitter.once(eventType,listener,context);}},{key:'addRetroactiveListener',value:






















function addRetroactiveListener(
eventType,listener,context){
var subscription=this._emitter.addListener(eventType,listener,context);

this._emittingHeldEvents = true;
this._eventHolder.emitToListener(eventType,listener,context);
this._emittingHeldEvents = false;

return subscription;}},{key:'removeAllListeners',value:





function removeAllListeners(eventType){
this._emitter.removeAllListeners(eventType);}},{key:'removeCurrentListener',value:





function removeCurrentListener(){
this._emitter.removeCurrentListener();}},{key:'listeners',value:





function listeners(eventType){
return this._emitter.listeners(eventType);}},{key:'emit',value:





function emit(eventType,a,b,c,d,e,_){
this._emitter.emit(eventType,a,b,c,d,e,_);}},{key:'emitAndHold',value:

















function emitAndHold(eventType,a,b,c,d,e,_){
this._currentEventToken = this._eventHolder.holdEvent(
eventType,
a,b,c,d,e,_);

this._emitter.emit(eventType,a,b,c,d,e,_);
this._currentEventToken = null;}},{key:'releaseCurrentEvent',value:





function releaseCurrentEvent(){
if(this._currentEventToken !== null){
this._eventHolder.releaseEvent(this._currentEventToken);}else 
if(this._emittingHeldEvents){
this._eventHolder.releaseCurrentEvent();}}},{key:'releaseHeldEventType',value:







function releaseHeldEventType(eventType){
this._eventHolder.releaseEventType(eventType);}}]);return EventEmitterWithHolding;})();



module.exports = EventEmitterWithHolding;
});
__d('EventHolder',["invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 

EventHolder=(function(){
function EventHolder(){_classCallCheck(this,EventHolder);
this._heldEvents = {};
this._currentEventKey = null;}_createClass(EventHolder,[{key:'holdEvent',value:























function holdEvent(eventType,a,b,c,d,e,_){
this._heldEvents[eventType] = this._heldEvents[eventType] || [];
var eventsOfType=this._heldEvents[eventType];
var key={
eventType:eventType,
index:eventsOfType.length};

eventsOfType.push([a,b,c,d,e,_]);
return key;}},{key:'emitToListener',value:










function emitToListener(eventType,listener,context){var _this=this;
var eventsOfType=this._heldEvents[eventType];
if(!eventsOfType){
return;}

var origEventKey=this._currentEventKey;
eventsOfType.forEach(function(eventHeld,index){
if(!eventHeld){
return;}

_this._currentEventKey = {
eventType:eventType,
index:index};

listener.apply(context,eventHeld);});

this._currentEventKey = origEventKey;}},{key:'releaseCurrentEvent',value:










function releaseCurrentEvent(){
invariant(
this._currentEventKey !== null,
'Not in an emitting cycle; there is no current event');

this.releaseEvent(this._currentEventKey);}},{key:'releaseEvent',value:








function releaseEvent(token){
delete this._heldEvents[token.eventType][token.index];}},{key:'releaseEventType',value:







function releaseEventType(type){
this._heldEvents[type] = [];}}]);return EventHolder;})();



module.exports = EventHolder;
});
__d('EventValidator',["copyProperties"],function(global, require, module, exports) {  'use strict';

















var copyProperties=require('copyProperties');










var EventValidator={










addValidation:function(emitter,types){
var eventTypes=Object.keys(types);
var emitterWithValidation=Object.create(emitter);

copyProperties(emitterWithValidation,{
emit:function emit(type,a,b,c,d,e,_){
assertAllowsEventType(type,eventTypes);
return emitter.emit.call(this,type,a,b,c,d,e,_);}});



return emitterWithValidation;}};



function assertAllowsEventType(type,allowedTypes){
if(allowedTypes.indexOf(type) === -1){
throw new TypeError(errorMessageFor(type,allowedTypes));}}



function errorMessageFor(type,allowedTypes){
var message='Unknown event type "' + type + '". ';
if(__DEV__){
message += recommendationFor(type,allowedTypes);}

message += 'Known event types: ' + allowedTypes.join(', ') + '.';
return message;}



if(__DEV__){
var recommendationFor=function(type,allowedTypes){
var closestTypeRecommendation=closestTypeFor(type,allowedTypes);
if(isCloseEnough(closestTypeRecommendation,type)){
return 'Did you mean "' + closestTypeRecommendation.type + '"? ';}else 
{
return '';}};



var closestTypeFor=function(type,allowedTypes){
var typeRecommendations=allowedTypes.map(
typeRecommendationFor.bind(this,type));

return typeRecommendations.sort(recommendationSort)[0];};


var typeRecommendationFor=function(type,recomendedType){
return {
type:recomendedType,
distance:damerauLevenshteinDistance(type,recomendedType)};};



var recommendationSort=function(recommendationA,recommendationB){
if(recommendationA.distance < recommendationB.distance){
return -1;}else 
if(recommendationA.distance > recommendationB.distance){
return 1;}else 
{
return 0;}};



var isCloseEnough=function(closestType,actualType){
return closestType.distance / actualType.length < 0.334;};


var damerauLevenshteinDistance=function(a,b){
var i,j;
var d=[];

for(i = 0;i <= a.length;i++) {
d[i] = [i];}


for(j = 1;j <= b.length;j++) {
d[0][j] = j;}


for(i = 1;i <= a.length;i++) {
for(j = 1;j <= b.length;j++) {
var cost=a.charAt(i - 1) === b.charAt(j - 1)?0:1;

d[i][j] = Math.min(
d[i - 1][j] + 1,
d[i][j - 1] + 1,
d[i - 1][j - 1] + cost);


if(i > 1 && j > 1 && 
a.charAt(i - 1) == b.charAt(j - 2) && 
a.charAt(i - 2) == b.charAt(j - 1)){
d[i][j] = Math.min(d[i][j],d[i - 2][j - 2] + cost);}}}




return d[a.length][b.length];};}



module.exports = EventValidator;
});
__d('copyProperties',[],function(global, require, module, exports) {  function 























copyProperties(obj,a,b,c,d,e,f){
obj = obj || {};

if(__DEV__){
if(f){
throw new Error('Too many arguments passed to copyProperties');}}



var args=[a,b,c,d,e];
var ii=0,v;
while(args[ii]) {
v = args[ii++];
for(var k in v) {
obj[k] = v[k];}




if(v.hasOwnProperty && v.hasOwnProperty('toString') && 
typeof v.toString != 'undefined' && obj.toString !== v.toString){
obj.toString = v.toString;}}



return obj;}


module.exports = copyProperties;
});
__d('TouchableWithoutFeedback',["React","react-timer-mixin/TimerMixin.js","Touchable","ensurePositiveDelayProps","onlyChild"],function(global, require, module, exports) {  'use strict';












var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var onlyChild=require('onlyChild');









var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};






var TouchableWithoutFeedback=React.createClass({
mixins:[TimerMixin,Touchable.Mixin],

propTypes:{




accessible:React.PropTypes.bool,
onPress:React.PropTypes.func,
onPressIn:React.PropTypes.func,
onPressOut:React.PropTypes.func,
onLongPress:React.PropTypes.func,



delayPressIn:React.PropTypes.number,



delayPressOut:React.PropTypes.number,



delayLongPress:React.PropTypes.number},


getInitialState:function(){
return this.touchableGetInitialState();},


componentDidMount:function(){
ensurePositiveDelayProps(this.props);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);},






touchableHandlePress:function(e){
this.props.onPress && this.props.onPress(e);},


touchableHandleActivePressIn:function(e){
this.props.onPressIn && this.props.onPressIn(e);},


touchableHandleActivePressOut:function(e){
this.props.onPressOut && this.props.onPressOut(e);},


touchableHandleLongPress:function(e){
this.props.onLongPress && this.props.onLongPress(e);},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn || 0;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress === 0?0:
this.props.delayLongPress || 500;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut || 0;},


render:function(){

return React.cloneElement(onlyChild(this.props.children),{
accessible:this.props.accessible !== false,
testID:this.props.testID,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate});}});




module.exports = TouchableWithoutFeedback;
});
__d('ensurePositiveDelayProps',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');

var ensurePositiveDelayProps=function(props){
invariant(
!(props.delayPressIn < 0 || props.delayPressOut < 0 || 
props.delayLongPress < 0),
'Touchable components cannot have negative delay properties');};



module.exports = ensurePositiveDelayProps;
});
__d('ToastAndroid',["warning"],function(global, require, module, exports) {  'use strict';











var warning=require('warning');

var ToastAndroid={

show:function(
message,
duration)
{
warning(false,'Cannot use ToastAndroid on iOS.');}};




module.exports = ToastAndroid;
});
__d('ToolbarAndroid',["UnimplementedView"],function(global, require, module, exports) {  'use strict';











module.exports = require('UnimplementedView');
});
__d('TouchableHighlight',["NativeMethodsMixin","React","ReactNativeViewAttributes","StyleSheet","react-timer-mixin/TimerMixin.js","Touchable","TouchableWithoutFeedback","View","cloneWithProps","ensureComponentIsNative","ensurePositiveDelayProps","keyOf","merge","onlyChild"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var cloneWithProps=require('cloneWithProps');
var ensureComponentIsNative=require('ensureComponentIsNative');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var keyOf=require('keyOf');
var merge=require('merge');
var onlyChild=require('onlyChild');



var DEFAULT_PROPS={
activeOpacity:0.8,
underlayColor:'black'};


























var TouchableHighlight=React.createClass({
propTypes:_extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number,




underlayColor:React.PropTypes.string,
style:View.propTypes.style,



onShowUnderlay:React.PropTypes.func,



onHideUnderlay:React.PropTypes.func}),


mixins:[NativeMethodsMixin,TimerMixin,Touchable.Mixin],

getDefaultProps:function(){return DEFAULT_PROPS;},


computeSyntheticState:function(props){
return {
activeProps:{
style:{
opacity:props.activeOpacity}},


activeUnderlayProps:{
style:{
backgroundColor:props.underlayColor}},


underlayStyle:[
INACTIVE_UNDERLAY_PROPS.style,
props.style]};},




getInitialState:function(){
return merge(
this.touchableGetInitialState(),this.computeSyntheticState(this.props));},



componentDidMount:function(){
ensurePositiveDelayProps(this.props);
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentDidUpdate:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);
if(nextProps.activeOpacity !== this.props.activeOpacity || 
nextProps.underlayColor !== this.props.underlayColor || 
nextProps.style !== this.props.style){
this.setState(this.computeSyntheticState(nextProps));}},



viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},






touchableHandleActivePressIn:function(e){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
this._showUnderlay();
this.props.onPressIn && this.props.onPressIn(e);},


touchableHandleActivePressOut:function(e){
if(!this._hideTimeout){
this._hideUnderlay();}

this.props.onPressOut && this.props.onPressOut(e);},


touchableHandlePress:function(e){
this.clearTimeout(this._hideTimeout);
this._showUnderlay();
this._hideTimeout = this.setTimeout(this._hideUnderlay,
this.props.delayPressOut || 100);
this.props.onPress && this.props.onPress(e);},


touchableHandleLongPress:function(e){
this.props.onLongPress && this.props.onLongPress(e);},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;},


_showUnderlay:function(){
if(!this.isMounted()){
return;}


this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
this.refs[CHILD_REF].setNativeProps(this.state.activeProps);
this.props.onShowUnderlay && this.props.onShowUnderlay();},


_hideUnderlay:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
if(this.refs[UNDERLAY_REF]){
this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
this.refs[UNDERLAY_REF].setNativeProps(_extends({},
INACTIVE_UNDERLAY_PROPS,{
style:this.state.underlayStyle}));

this.props.onHideUnderlay && this.props.onHideUnderlay();}},



render:function(){
return (
React.createElement(View,{
accessible:true,
ref:UNDERLAY_REF,
style:this.state.underlayStyle,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate,
testID:this.props.testID},
cloneWithProps(
onlyChild(this.props.children),
{
ref:CHILD_REF})));}});







var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};
var CHILD_REF=keyOf({childRef:null});
var UNDERLAY_REF=keyOf({underlayRef:null});
var INACTIVE_CHILD_PROPS={
style:StyleSheet.create({x:{opacity:1.0}}).x};

var INACTIVE_UNDERLAY_PROPS={
style:StyleSheet.create({x:{backgroundColor:'transparent'}}).x};


module.exports = TouchableHighlight;
});
__d('cloneWithProps',["ReactElement","ReactPropTransferer","keyOf","warning"],function(global, require, module, exports) {  'use strict';













var ReactElement=require('ReactElement');
var ReactPropTransferer=require('ReactPropTransferer');

var keyOf=require('keyOf');
var warning=require('warning');

var CHILDREN_PROP=keyOf({children:null});










function cloneWithProps(child,props){
if(__DEV__){
warning(
!child.ref,
'You are calling cloneWithProps() on a child with a ref. This is ' + 
'dangerous because you\'re creating a new child which will not be ' + 
'added as a ref to its parent.');}



var newProps=ReactPropTransferer.mergeProps(props,child.props);


if(!newProps.hasOwnProperty(CHILDREN_PROP) && 
child.props.hasOwnProperty(CHILDREN_PROP)){
newProps.children = child.props.children;}




return ReactElement.createElement(child.type,newProps);}


module.exports = cloneWithProps;
});
__d('ReactPropTransferer',["Object.assign","emptyFunction","joinClasses"],function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var joinClasses=require('joinClasses');








function createTransferStrategy(mergeStrategy){
return function(props,key,value){
if(!props.hasOwnProperty(key)){
props[key] = value;}else 
{
props[key] = mergeStrategy(props[key],value);}};}




var transferStrategyMerge=createTransferStrategy(function(a,b){



return assign({},b,a);});







var TransferStrategies={



children:emptyFunction,



className:createTransferStrategy(joinClasses),



style:transferStrategyMerge};










function transferInto(props,newProps){
for(var thisKey in newProps) {
if(!newProps.hasOwnProperty(thisKey)){
continue;}


var transferStrategy=TransferStrategies[thisKey];

if(transferStrategy && TransferStrategies.hasOwnProperty(thisKey)){
transferStrategy(props,thisKey,newProps[thisKey]);}else 
if(!props.hasOwnProperty(thisKey)){
props[thisKey] = newProps[thisKey];}}


return props;}








var ReactPropTransferer={








mergeProps:function(oldProps,newProps){
return transferInto(assign({},oldProps),newProps);}};




module.exports = ReactPropTransferer;
});
__d('joinClasses',[],function(global, require, module, exports) {  'use strict';




















function joinClasses(className){
if(!className){
className = '';}

var nextClass;
var argLength=arguments.length;
if(argLength > 1){
for(var ii=1;ii < argLength;ii++) {
nextClass = arguments[ii];
if(nextClass){
className = (className?className + ' ':'') + nextClass;}}}



return className;}


module.exports = joinClasses;
});
__d('ensureComponentIsNative',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');

var ensureComponentIsNative=function(component){
invariant(
component && typeof component.setNativeProps === 'function',
'Touchable child must either be native or forward setNativeProps to a ' + 
'native component');};



module.exports = ensureComponentIsNative;
});
__d('TouchableNativeFeedback',["React","StyleSheet","Text","View"],function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var DummyTouchableNativeFeedback=React.createClass({
render:function(){
return (
React.createElement(View,{style:[styles.container,this.props.style]},
React.createElement(Text,{style:styles.info},'TouchableNativeFeedback is not supported on this platform!')));}});





var styles=StyleSheet.create({
container:{
height:100,
width:300,
backgroundColor:'#ffbcbc',
borderWidth:1,
borderColor:'red',
alignItems:'center',
justifyContent:'center',
margin:10},

info:{
color:'#333333',
margin:20}});



module.exports = DummyTouchableNativeFeedback;
});
__d('TouchableOpacity',["Animated","NativeMethodsMixin","React","react-timer-mixin/TimerMixin.js","Touchable","TouchableWithoutFeedback","ensurePositiveDelayProps","flattenStyle","keyOf"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var Animated=require('Animated');
var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var flattenStyle=require('flattenStyle');
var keyOf=require('keyOf');




























var TouchableOpacity=React.createClass({
mixins:[TimerMixin,Touchable.Mixin,NativeMethodsMixin],

propTypes:_extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number}),


getDefaultProps:function(){
return {
activeOpacity:0.2};},



getInitialState:function(){
return _extends({},
this.touchableGetInitialState(),{
anim:new Animated.Value(1)});},



componentDidMount:function(){
ensurePositiveDelayProps(this.props);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);},


setOpacityTo:function(value){
Animated.timing(
this.state.anim,
{toValue:value,duration:150}).
start();},






touchableHandleActivePressIn:function(e){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
this._opacityActive();
this.props.onPressIn && this.props.onPressIn(e);},


touchableHandleActivePressOut:function(e){
if(!this._hideTimeout){
this._opacityInactive();}

this.props.onPressOut && this.props.onPressOut(e);},


touchableHandlePress:function(e){
this.clearTimeout(this._hideTimeout);
this._opacityActive();
this._hideTimeout = this.setTimeout(
this._opacityInactive,
this.props.delayPressOut || 100);

this.props.onPress && this.props.onPress(e);},


touchableHandleLongPress:function(e){
this.props.onLongPress && this.props.onLongPress(e);},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn || 0;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress === 0?0:
this.props.delayLongPress || 500;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;},


_opacityActive:function(){
this.setOpacityTo(this.props.activeOpacity);},


_opacityInactive:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
var childStyle=flattenStyle(this.props.style) || {};
this.setOpacityTo(
childStyle.opacity === undefined?1:childStyle.opacity);},



render:function(){
return (
React.createElement(Animated.View,{
accessible:true,
style:[this.props.style,{opacity:this.state.anim}],
testID:this.props.testID,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate},
this.props.children));}});











var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};


module.exports = TouchableOpacity;
});
__d('Animated',["Interpolation","Easing","Image","InteractionManager","Interpolation","React","Set","SpringConfig","Text","View","invariant","flattenStyle","requestAnimationFrame"],function(global, require, module, exports) {  var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}










'use strict';

var Easing=require('Easing');
var Image=require('Image');
var InteractionManager=require('InteractionManager');
var Interpolation=require('Interpolation');
var React=require('React');
var Set=require('Set');
var SpringConfig=require('SpringConfig');
var Text=require('Text');
var View=require('View');
var invariant=require('invariant');

var flattenStyle=require('flattenStyle');
var requestAnimationFrame=require('requestAnimationFrame');var 








Animated=(function(){function Animated(){_classCallCheck(this,Animated);}_createClass(Animated,[{key:'__attach',value:
function __attach(){}},{key:'__detach',value:
function __detach(){}},{key:'__getValue',value:
function __getValue(){}},{key:'__getAnimatedValue',value:
function __getAnimatedValue(){return this.__getValue();}},{key:'__addChild',value:
function __addChild(child){}},{key:'__removeChild',value:
function __removeChild(child){}},{key:'__getChildren',value:
function __getChildren(){return [];}}]);return Animated;})();var 





Animation=(function(){function Animation(){_classCallCheck(this,Animation);}_createClass(Animation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd,
previousAnimation)
{}},{key:'stop',value:
function stop(){}},{key:'__debouncedOnEnd',value:

function __debouncedOnEnd(result){
var onEnd=this.__onEnd;
this.__onEnd = null;
onEnd && onEnd(result);}}]);return Animation;})();var 



AnimatedWithChildren=(function(_Animated){_inherits(AnimatedWithChildren,_Animated);


function AnimatedWithChildren(){_classCallCheck(this,AnimatedWithChildren);
_get(Object.getPrototypeOf(AnimatedWithChildren.prototype),'constructor',this).call(this);
this._children = [];}_createClass(AnimatedWithChildren,[{key:'__addChild',value:


function __addChild(child){
if(this._children.length === 0){
this.__attach();}

this._children.push(child);}},{key:'__removeChild',value:


function __removeChild(child){
var index=this._children.indexOf(child);
if(index === -1){
console.warn('Trying to remove a child that doesn\'t exist');
return;}

this._children.splice(index,1);
if(this._children.length === 0){
this.__detach();}}},{key:'__getChildren',value:



function __getChildren(){
return this._children;}}]);return AnimatedWithChildren;})(Animated);

























function _flush(rootNode){
var animatedStyles=new Set();
function findAnimatedStyles(node){
if(typeof node.update === 'function'){
animatedStyles.add(node);}else 
{
node.__getChildren().forEach(findAnimatedStyles);}}


findAnimatedStyles(rootNode);
animatedStyles.forEach(function(animatedStyle){return animatedStyle.update();});}









var easeInOut=Easing.inOut(Easing.ease);var 

TimingAnimation=(function(_Animation){_inherits(TimingAnimation,_Animation);










function TimingAnimation(
config)
{_classCallCheck(this,TimingAnimation);
_get(Object.getPrototypeOf(TimingAnimation.prototype),'constructor',this).call(this);
this._toValue = config.toValue;
this._easing = config.easing || easeInOut;
this._duration = config.duration !== undefined?config.duration:500;
this._delay = config.delay || 0;}_createClass(TimingAnimation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd)
{var _this=this;
this.__active = true;
this._fromValue = fromValue;
this._onUpdate = onUpdate;
this.__onEnd = onEnd;

var start=function(){
if(_this._duration === 0){
_this._onUpdate(_this._toValue);
_this.__debouncedOnEnd({finished:true});}else 
{
_this._startTime = Date.now();
_this._animationFrame = requestAnimationFrame(_this.onUpdate.bind(_this));}};


if(this._delay){
this._timeout = setTimeout(start,this._delay);}else 
{
start();}}},{key:'onUpdate',value:



function onUpdate(){
var now=Date.now();
if(now >= this._startTime + this._duration){
if(this._duration === 0){
this._onUpdate(this._toValue);}else 
{
this._onUpdate(
this._fromValue + this._easing(1) * (this._toValue - this._fromValue));}


this.__debouncedOnEnd({finished:true});
return;}


this._onUpdate(
this._fromValue + 
this._easing((now - this._startTime) / this._duration) * (
this._toValue - this._fromValue));

if(this.__active){
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'stop',value:



function stop(){
this.__active = false;
clearTimeout(this._timeout);
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return TimingAnimation;})(Animation);var 













DecayAnimation=(function(_Animation2){_inherits(DecayAnimation,_Animation2);








function DecayAnimation(
config)
{_classCallCheck(this,DecayAnimation);
_get(Object.getPrototypeOf(DecayAnimation.prototype),'constructor',this).call(this);
this._deceleration = config.deceleration || 0.998;
this._velocity = config.velocity;}_createClass(DecayAnimation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd)
{
this.__active = true;
this._lastValue = fromValue;
this._fromValue = fromValue;
this._onUpdate = onUpdate;
this.__onEnd = onEnd;
this._startTime = Date.now();
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}},{key:'onUpdate',value:


function onUpdate(){
var now=Date.now();

var value=this._fromValue + 
this._velocity / (1 - this._deceleration) * (
1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));

this._onUpdate(value);

if(Math.abs(this._lastValue - value) < 0.1){
this.__debouncedOnEnd({finished:true});
return;}


this._lastValue = value;
if(this.__active){
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'stop',value:



function stop(){
this.__active = false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return DecayAnimation;})(Animation);



























function withDefault(value,defaultValue){
if(value === undefined || value === null){
return defaultValue;}

return value;}var 


SpringAnimation=(function(_Animation3){_inherits(SpringAnimation,_Animation3);















function SpringAnimation(
config)
{_classCallCheck(this,SpringAnimation);
_get(Object.getPrototypeOf(SpringAnimation.prototype),'constructor',this).call(this);

this._overshootClamping = withDefault(config.overshootClamping,false);
this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold,0.001);
this._restSpeedThreshold = withDefault(config.restSpeedThreshold,0.001);
this._initialVelocity = config.velocity;
this._lastVelocity = withDefault(config.velocity,0);
this._toValue = config.toValue;

var springConfig;
if(config.bounciness !== undefined || config.speed !== undefined){
invariant(
config.tension === undefined && config.friction === undefined,
'You can only define bounciness/speed or tension/friction but not both');

springConfig = SpringConfig.fromBouncinessAndSpeed(
withDefault(config.bounciness,8),
withDefault(config.speed,12));}else 

{
springConfig = SpringConfig.fromOrigamiTensionAndFriction(
withDefault(config.tension,40),
withDefault(config.friction,7));}


this._tension = springConfig.tension;
this._friction = springConfig.friction;}_createClass(SpringAnimation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd,
previousAnimation)
{
this.__active = true;
this._startPosition = fromValue;
this._lastPosition = this._startPosition;

this._onUpdate = onUpdate;
this.__onEnd = onEnd;
this._lastTime = Date.now();

if(previousAnimation instanceof SpringAnimation){
var internalState=previousAnimation.getInternalState();
this._lastPosition = internalState.lastPosition;
this._lastVelocity = internalState.lastVelocity;
this._lastTime = internalState.lastTime;}

if(this._initialVelocity !== undefined && 
this._initialVelocity !== null){
this._lastVelocity = this._initialVelocity;}

this.onUpdate();}},{key:'getInternalState',value:


function getInternalState(){
return {
lastPosition:this._lastPosition,
lastVelocity:this._lastVelocity,
lastTime:this._lastTime};}},{key:'onUpdate',value:



function onUpdate(){
var position=this._lastPosition;
var velocity=this._lastVelocity;

var tempPosition=this._lastPosition;
var tempVelocity=this._lastVelocity;





var MAX_STEPS=64;
var now=Date.now();
if(now > this._lastTime + MAX_STEPS){
now = this._lastTime + MAX_STEPS;}





var TIMESTEP_MSEC=1;
var numSteps=Math.floor((now - this._lastTime) / TIMESTEP_MSEC);

for(var i=0;i < numSteps;++i) {

var step=TIMESTEP_MSEC / 1000;



var aVelocity=velocity;
var aAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
var tempPosition=position + aVelocity * step / 2;
var tempVelocity=velocity + aAcceleration * step / 2;

var bVelocity=tempVelocity;
var bAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + bVelocity * step / 2;
tempVelocity = velocity + bAcceleration * step / 2;

var cVelocity=tempVelocity;
var cAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + cVelocity * step / 2;
tempVelocity = velocity + cAcceleration * step / 2;

var dVelocity=tempVelocity;
var dAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + cVelocity * step / 2;
tempVelocity = velocity + cAcceleration * step / 2;

var dxdt=(aVelocity + 2 * (bVelocity + cVelocity) + dVelocity) / 6;
var dvdt=(aAcceleration + 2 * (bAcceleration + cAcceleration) + dAcceleration) / 6;

position += dxdt * step;
velocity += dvdt * step;}


this._lastTime = now;
this._lastPosition = position;
this._lastVelocity = velocity;

this._onUpdate(position);
if(!this.__active){
return;}



var isOvershooting=false;
if(this._overshootClamping && this._tension !== 0){
if(this._startPosition < this._toValue){
isOvershooting = position > this._toValue;}else 
{
isOvershooting = position < this._toValue;}}


var isVelocity=Math.abs(velocity) <= this._restSpeedThreshold;
var isDisplacement=true;
if(this._tension !== 0){
isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;}


if(isOvershooting || isVelocity && isDisplacement){
if(this._tension !== 0){

this._onUpdate(this._toValue);}


this.__debouncedOnEnd({finished:true});
return;}

this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}},{key:'stop',value:


function stop(){
this.__active = false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return SpringAnimation;})(Animation);





var _uniqueId=1;var 

AnimatedValue=(function(_AnimatedWithChildren){_inherits(AnimatedValue,_AnimatedWithChildren);






function AnimatedValue(value){_classCallCheck(this,AnimatedValue);
_get(Object.getPrototypeOf(AnimatedValue.prototype),'constructor',this).call(this);
this._value = value;
this._offset = 0;
this._animation = null;
this._listeners = {};}_createClass(AnimatedValue,[{key:'__detach',value:


function __detach(){
this.stopAnimation();}},{key:'__getValue',value:


function __getValue(){
return this._value + this._offset;}},{key:'setValue',value:


function setValue(value){
if(this._animation){
this._animation.stop();
this._animation = null;}

this._updateValue(value);}},{key:'setOffset',value:


function setOffset(offset){
this._offset = offset;}},{key:'flattenOffset',value:


function flattenOffset(){
this._value += this._offset;
this._offset = 0;}},{key:'addListener',value:


function addListener(callback){
var id=String(_uniqueId++);
this._listeners[id] = callback;
return id;}},{key:'removeListener',value:


function removeListener(id){
delete this._listeners[id];}},{key:'removeAllListeners',value:


function removeAllListeners(){
this._listeners = {};}},{key:'animate',value:


function animate(animation,callback){var _this2=this;
var handle=InteractionManager.createInteractionHandle();
var previousAnimation=this._animation;
this._animation && this._animation.stop();
this._animation = animation;
animation.start(
this._value,
function(value){
_this2._updateValue(value);},

function(result){
_this2._animation = null;
InteractionManager.clearInteractionHandle(handle);
callback && callback(result);},

previousAnimation);}},{key:'stopAnimation',value:



function stopAnimation(callback){
this.stopTracking();
this._animation && this._animation.stop();
this._animation = null;
callback && callback(this.__getValue());}},{key:'stopTracking',value:


function stopTracking(){
this._tracking && this._tracking.__detach();
this._tracking = null;}},{key:'track',value:


function track(tracking){
this.stopTracking();
this._tracking = tracking;}},{key:'interpolate',value:


function interpolate(config){
return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'_updateValue',value:


function _updateValue(value){
this._value = value;
_flush(this);
for(var key in this._listeners) {
this._listeners[key]({value:this.__getValue()});}}}]);return AnimatedValue;})(AnimatedWithChildren);var 





AnimatedValueXY=(function(_AnimatedWithChildren2){_inherits(AnimatedValueXY,_AnimatedWithChildren2);




function AnimatedValueXY(valueIn){_classCallCheck(this,AnimatedValueXY);
_get(Object.getPrototypeOf(AnimatedValueXY.prototype),'constructor',this).call(this);
var value=valueIn || {x:0,y:0};
if(typeof value.x === 'number' && typeof value.y === 'number'){
this.x = new AnimatedValue(value.x);
this.y = new AnimatedValue(value.y);}else 
{
invariant(
value.x instanceof AnimatedValue && 
value.y instanceof AnimatedValue,
'AnimatedValueXY must be initalized with an object of numbers or ' + 
'AnimatedValues.');

this.x = value.x;
this.y = value.y;}

this._listeners = {};}_createClass(AnimatedValueXY,[{key:'setValue',value:


function setValue(value){
this.x.setValue(value.x);
this.y.setValue(value.y);}},{key:'setOffset',value:


function setOffset(offset){
this.x.setOffset(offset.x);
this.y.setOffset(offset.y);}},{key:'flattenOffset',value:


function flattenOffset(){
this.x.flattenOffset();
this.y.flattenOffset();}},{key:'__getValue',value:


function __getValue(){
return {
x:this.x.__getValue(),
y:this.y.__getValue()};}},{key:'stopAnimation',value:



function stopAnimation(callback){
this.x.stopAnimation();
this.y.stopAnimation();
callback && callback(this.__getValue());}},{key:'addListener',value:


function addListener(callback){var _this3=this;
var id=String(_uniqueId++);
var jointCallback=function(_ref){var number=_ref.value;
callback(_this3.__getValue());};

this._listeners[id] = {
x:this.x.addListener(jointCallback),
y:this.y.addListener(jointCallback)};

return id;}},{key:'removeListener',value:


function removeListener(id){
this.x.removeListener(this._listeners[id].x);
this.y.removeListener(this._listeners[id].y);
delete this._listeners[id];}},{key:'getLayout',value:


function getLayout(){
return {
left:this.x,
top:this.y};}},{key:'getTranslateTransform',value:



function getTranslateTransform(){
return [
{translateX:this.x},
{translateY:this.y}];}}]);return AnimatedValueXY;})(AnimatedWithChildren);var 




AnimatedInterpolation=(function(_AnimatedWithChildren3){_inherits(AnimatedInterpolation,_AnimatedWithChildren3);



function AnimatedInterpolation(parent,interpolation){_classCallCheck(this,AnimatedInterpolation);
_get(Object.getPrototypeOf(AnimatedInterpolation.prototype),'constructor',this).call(this);
this._parent = parent;
this._interpolation = interpolation;}_createClass(AnimatedInterpolation,[{key:'__getValue',value:


function __getValue(){
var parentValue=this._parent.__getValue();
invariant(
typeof parentValue === 'number',
'Cannot interpolate an input which is not a number.');

return this._interpolation(parentValue);}},{key:'interpolate',value:


function interpolate(config){
return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'__attach',value:


function __attach(){
this._parent.__addChild(this);}},{key:'__detach',value:


function __detach(){
this._parent.__removeChild(this);}}]);return AnimatedInterpolation;})(AnimatedWithChildren);var 



AnimatedTransform=(function(_AnimatedWithChildren4){_inherits(AnimatedTransform,_AnimatedWithChildren4);


function AnimatedTransform(transforms){_classCallCheck(this,AnimatedTransform);
_get(Object.getPrototypeOf(AnimatedTransform.prototype),'constructor',this).call(this);
this._transforms = transforms;}_createClass(AnimatedTransform,[{key:'__getValue',value:


function __getValue(){
return this._transforms.map(function(transform){
var result={};
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
result[key] = value.__getValue();}else 
{
result[key] = value;}}


return result;});}},{key:'__getAnimatedValue',value:



function __getAnimatedValue(){
return this._transforms.map(function(transform){
var result={};
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
result[key] = value.__getAnimatedValue();}else 
{

result[key] = value;}}


return result;});}},{key:'__attach',value:



function __attach(){var _this4=this;
this._transforms.forEach(function(transform){
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
value.__addChild(_this4);}}});}},{key:'__detach',value:





function __detach(){var _this5=this;
this._transforms.forEach(function(transform){
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
value.__removeChild(_this5);}}});}}]);return AnimatedTransform;})(AnimatedWithChildren);var 






AnimatedStyle=(function(_AnimatedWithChildren5){_inherits(AnimatedStyle,_AnimatedWithChildren5);


function AnimatedStyle(style){_classCallCheck(this,AnimatedStyle);
_get(Object.getPrototypeOf(AnimatedStyle.prototype),'constructor',this).call(this);
style = flattenStyle(style) || {};
if(style.transform){
style = _extends({},
style,{
transform:new AnimatedTransform(style.transform)});}


this._style = style;}_createClass(AnimatedStyle,[{key:'__getValue',value:


function __getValue(){
var style={};
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
style[key] = value.__getValue();}else 
{
style[key] = value;}}


return style;}},{key:'__getAnimatedValue',value:


function __getAnimatedValue(){
var style={};
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
style[key] = value.__getAnimatedValue();}}


return style;}},{key:'__attach',value:


function __attach(){
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
value.__addChild(this);}}}},{key:'__detach',value:




function __detach(){
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
value.__removeChild(this);}}}}]);return AnimatedStyle;})(AnimatedWithChildren);var 





AnimatedProps=(function(_Animated2){_inherits(AnimatedProps,_Animated2);



function AnimatedProps(
props,
callback)
{_classCallCheck(this,AnimatedProps);
_get(Object.getPrototypeOf(AnimatedProps.prototype),'constructor',this).call(this);
if(props.style){
props = _extends({},
props,{
style:new AnimatedStyle(props.style)});}


this._props = props;
this._callback = callback;
this.__attach();}_createClass(AnimatedProps,[{key:'__getValue',value:


function __getValue(){
var props={};
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
props[key] = value.__getValue();}else 
{
props[key] = value;}}


return props;}},{key:'__getAnimatedValue',value:


function __getAnimatedValue(){
var props={};
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
props[key] = value.__getAnimatedValue();}}


return props;}},{key:'__attach',value:


function __attach(){
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
value.__addChild(this);}}}},{key:'__detach',value:




function __detach(){
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
value.__removeChild(this);}}}},{key:'update',value:




function update(){
this._callback();}}]);return AnimatedProps;})(Animated);



function createAnimatedComponent(Component){
var refName='node';var 

AnimatedComponent=(function(_React$Component){_inherits(AnimatedComponent,_React$Component);function AnimatedComponent(){_classCallCheck(this,AnimatedComponent);_get(Object.getPrototypeOf(AnimatedComponent.prototype),'constructor',this).apply(this,arguments);}_createClass(AnimatedComponent,[{key:'componentWillUnmount',value:


function componentWillUnmount(){
this._propsAnimated && this._propsAnimated.__detach();}},{key:'setNativeProps',value:


function setNativeProps(props){
this.refs[refName].setNativeProps(props);}},{key:'componentWillMount',value:


function componentWillMount(){
this.attachProps(this.props);}},{key:'attachProps',value:


function attachProps(nextProps){var _this6=this;
var oldPropsAnimated=this._propsAnimated;







var callback=function(){
if(_this6.refs[refName].setNativeProps){
var value=_this6._propsAnimated.__getAnimatedValue();
_this6.refs[refName].setNativeProps(value);}else 
{
_this6.forceUpdate();}};



this._propsAnimated = new AnimatedProps(
nextProps,
callback);










oldPropsAnimated && oldPropsAnimated.__detach();}},{key:'componentWillReceiveProps',value:


function componentWillReceiveProps(nextProps){
this.attachProps(nextProps);}},{key:'render',value:


function render(){
return (
React.createElement(Component,_extends({},
this._propsAnimated.__getValue(),{
ref:refName})));}}]);return AnimatedComponent;})(React.Component);





return AnimatedComponent;}var 


AnimatedTracking=(function(_Animated3){_inherits(AnimatedTracking,_Animated3);






function AnimatedTracking(
value,
parent,
animationClass,
animationConfig,
callback)
{_classCallCheck(this,AnimatedTracking);
_get(Object.getPrototypeOf(AnimatedTracking.prototype),'constructor',this).call(this);
this._value = value;
this._parent = parent;
this._animationClass = animationClass;
this._animationConfig = animationConfig;
this._callback = callback;
this.__attach();}_createClass(AnimatedTracking,[{key:'__getValue',value:


function __getValue(){
return this._parent.__getValue();}},{key:'__attach',value:


function __attach(){
this._parent.__addChild(this);}},{key:'__detach',value:


function __detach(){
this._parent.__removeChild(this);}},{key:'update',value:


function update(){
this._value.animate(new this._animationClass(_extends({},
this._animationConfig,{
toValue:this._animationConfig.toValue.__getValue()})),
this._callback);}}]);return AnimatedTracking;})(Animated);








var maybeVectorAnim=function(
value,
config,
anim)
{
if(value instanceof AnimatedValueXY){
var configX=_extends({},config);
var configY=_extends({},config);
for(var key in config) {var _config$key=
config[key];var x=_config$key.x;var y=_config$key.y;
if(x !== undefined && y !== undefined){
configX[key] = x;
configY[key] = y;}}


var aX=anim(value.x,configX);
var aY=anim(value.y,configY);


return parallel([aX,aY],{stopTogether:false});}

return null;};


var spring=function(
value,
config)
{
return maybeVectorAnim(value,config,spring) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue,
config.toValue,
SpringAnimation,
singleConfig,
callback));}else 

{
singleValue.animate(new SpringAnimation(singleConfig),callback);}},



stop:function(){
value.stopAnimation();}};};




var timing=function(
value,
config)
{
return maybeVectorAnim(value,config,timing) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue,
config.toValue,
TimingAnimation,
singleConfig,
callback));}else 

{
singleValue.animate(new TimingAnimation(singleConfig),callback);}},



stop:function(){
value.stopAnimation();}};};




var decay=function(
value,
config)
{
return maybeVectorAnim(value,config,decay) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
singleValue.animate(new DecayAnimation(singleConfig),callback);},


stop:function(){
value.stopAnimation();}};};




var sequence=function(
animations)
{
var current=0;
return {
start:function(callback){
var onComplete=function(result){
if(!result.finished){
callback && callback(result);
return;}


current++;

if(current === animations.length){
callback && callback(result);
return;}


animations[current].start(onComplete);};


if(animations.length === 0){
callback && callback({finished:true});}else 
{
animations[current].start(onComplete);}},



stop:function(){
if(current < animations.length){
animations[current].stop();}}};};








var parallel=function(
animations,
config)
{
var doneCount=0;

var hasEnded={};
var stopTogether=!(config && config.stopTogether === false);

var result={
start:function(callback){
if(doneCount === animations.length){
callback && callback({finished:true});
return;}


animations.forEach(function(animation,idx){
var cb=function(endResult){
hasEnded[idx] = true;
doneCount++;
if(doneCount === animations.length){
doneCount = 0;
callback && callback(endResult);
return;}


if(!endResult.finished && stopTogether){
result.stop();}};



if(!animation){
cb({finished:true});}else 
{
animation.start(cb);}});},




stop:function(){
animations.forEach(function(animation,idx){
!hasEnded[idx] && animation.stop();
hasEnded[idx] = true;});}};




return result;};


var delay=function(time){

return timing(new AnimatedValue(0),{toValue:0,delay:time,duration:0});};


var stagger=function(
time,
animations)
{
return parallel(animations.map(function(animation,i){
return sequence([
delay(time * i),
animation]);}));};






















var event=function(
argMapping,
config)
{
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}
var traverse=function(recMapping,recEvt,key){
if(typeof recEvt === 'number'){
invariant(
recMapping instanceof AnimatedValue,
'Bad mapping of type ' + typeof recMapping + ' for key ' + key + 
', event value must map to AnimatedValue');

recMapping.setValue(recEvt);
return;}

invariant(
typeof recMapping === 'object',
'Bad mapping of type ' + typeof recMapping + ' for key ' + key);

invariant(
typeof recEvt === 'object',
'Bad event of type ' + typeof recEvt + ' for key ' + key);

for(var key in recMapping) {
traverse(recMapping[key],recEvt[key],key);}};


argMapping.forEach(function(mapping,idx){
traverse(mapping,args[idx],'arg' + idx);});

if(config && config.listener){
config.listener.apply(null,args);}};};




module.exports = {
delay:delay,
sequence:sequence,
parallel:parallel,
stagger:stagger,

decay:decay,
timing:timing,
spring:spring,

event:event,

Value:AnimatedValue,
ValueXY:AnimatedValueXY,
__PropsOnlyForTests:AnimatedProps,
View:createAnimatedComponent(View),
Text:createAnimatedComponent(Text),
Image:createAnimatedComponent(Image),
createAnimatedComponent:createAnimatedComponent};
});
__d('Interpolation',[],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}













var invariant=function(condition,message){
if(!condition){
var error=new Error(message);
error.framesToPop = 1;
throw error;}};















var linear=function(t){return t;};var 





Interpolation=(function(){function Interpolation(){_classCallCheck(this,Interpolation);}_createClass(Interpolation,null,[{key:'create',value:
function create(config){

if(config.outputRange && typeof config.outputRange[0] === 'string'){
return createInterpolationFromStringOutputRange(config);}


var outputRange=config.outputRange;
checkInfiniteRange('outputRange',outputRange);

var inputRange=config.inputRange;
checkInfiniteRange('inputRange',inputRange);
checkValidInputRange(inputRange);

invariant(
inputRange.length === outputRange.length,
'inputRange (' + inputRange.length + ') and outputRange (' + 
outputRange.length + ') must have the same length');


var easing=config.easing || linear;

var extrapolateLeft='extend';
if(config.extrapolateLeft !== undefined){
extrapolateLeft = config.extrapolateLeft;}else 
if(config.extrapolate !== undefined){
extrapolateLeft = config.extrapolate;}


var extrapolateRight='extend';
if(config.extrapolateRight !== undefined){
extrapolateRight = config.extrapolateRight;}else 
if(config.extrapolate !== undefined){
extrapolateRight = config.extrapolate;}


return function(input){
invariant(
typeof input === 'number',
'Cannot interpolation an input which is not a number');


var range=findRange(input,inputRange);
return interpolate(
input,
inputRange[range],
inputRange[range + 1],
outputRange[range],
outputRange[range + 1],
easing,
extrapolateLeft,
extrapolateRight);};}}]);return Interpolation;})();





function interpolate(
input,
inputMin,
inputMax,
outputMin,
outputMax,
easing,
extrapolateLeft,
extrapolateRight)
{
var result=input;


if(result < inputMin){
if(extrapolateLeft === 'identity'){
return result;}else 
if(extrapolateLeft === 'clamp'){
result = inputMin;}else 
if(extrapolateLeft === 'extend'){}}




if(result > inputMax){
if(extrapolateRight === 'identity'){
return result;}else 
if(extrapolateRight === 'clamp'){
result = inputMax;}else 
if(extrapolateRight === 'extend'){}}




if(outputMin === outputMax){
return outputMin;}


if(inputMin === inputMax){
if(input <= inputMin){
return outputMin;}

return outputMax;}



if(inputMin === -Infinity){
result = -result;}else 
if(inputMax === Infinity){
result = result - inputMin;}else 
{
result = (result - inputMin) / (inputMax - inputMin);}



result = easing(result);


if(outputMin === -Infinity){
result = -result;}else 
if(outputMax === Infinity){
result = result + outputMin;}else 
{
result = result * (outputMax - outputMin) + outputMin;}


return result;}


var stringShapeRegex=/[0-9\.-]+/g;









function createInterpolationFromStringOutputRange(
config)
{
var outputRange=config.outputRange;
invariant(outputRange.length >= 2,'Bad output range');
checkPattern(outputRange);









var outputRanges=outputRange[0].match(stringShapeRegex).map(function(){return [];});
outputRange.forEach(function(value){
value.match(stringShapeRegex).forEach(function(number,i){
outputRanges[i].push(+number);});});



var interpolations=outputRange[0].match(stringShapeRegex).map(function(value,i){
return Interpolation.create(_extends({},
config,{
outputRange:outputRanges[i]}));});



return function(input){
var i=0;



return outputRange[0].replace(stringShapeRegex,function(){
return String(interpolations[i++](input));});};}




function checkPattern(arr){
var pattern=arr[0].replace(stringShapeRegex,'');
for(var i=1;i < arr.length;++i) {
invariant(
pattern === arr[i].replace(stringShapeRegex,''),
'invalid pattern ' + arr[0] + ' and ' + arr[i]);}}




function findRange(input,inputRange){
for(var i=1;i < inputRange.length - 1;++i) {
if(inputRange[i] >= input){
break;}}


return i - 1;}


function checkValidInputRange(arr){
invariant(arr.length >= 2,'inputRange must have at least 2 elements');
for(var i=1;i < arr.length;++i) {
invariant(
arr[i] >= arr[i - 1],






'inputRange must be monotonically increasing ' + arr);}}




function checkInfiniteRange(name,arr){
invariant(arr.length >= 2,name + ' must have at least 2 elements');
invariant(
arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity,






name + 'cannot be ]-infinity;+infinity[ ' + arr);}



module.exports = Interpolation;
});
__d('Easing',["bezier"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var _bezier=require('bezier');var 






Easing=(function(){function Easing(){_classCallCheck(this,Easing);}_createClass(Easing,null,[{key:'step0',value:
function step0(n){
return n > 0?1:0;}},{key:'step1',value:


function step1(n){
return n >= 1?1:0;}},{key:'linear',value:


function linear(t){
return t;}},{key:'ease',value:(function(_ease){function ease(_x){return _ease.apply(this,arguments);}ease.toString = function(){return _ease.toString();};return ease;})(


function(t){
return ease(t);})},{key:'quad',value:


function quad(t){
return t * t;}},{key:'cubic',value:


function cubic(t){
return t * t * t;}},{key:'poly',value:


function poly(n){
return function(t){return Math.pow(t,n);};}},{key:'sin',value:


function sin(t){
return 1 - Math.cos(t * Math.PI / 2);}},{key:'circle',value:


function circle(t){
return 1 - Math.sqrt(1 - t * t);}},{key:'exp',value:


function exp(t){
return Math.pow(2,10 * (t - 1));}},{key:'elastic',value:


function elastic(a,p){
var tau=Math.PI * 2;


var s;
if(arguments.length < 2){
p = 0.45;}

if(arguments.length){
s = p / tau * Math.asin(1 / a);}else 
{
a = 1;
s = p / 4;}

return function(t){return 1 + a * Math.pow(2,-10 * t) * Math.sin((t - s) * tau / p);};}},{key:'back',value:


function back(s){
if(s === undefined){
s = 1.70158;}

return function(t){return t * t * ((s + 1) * t - s);};}},{key:'bounce',value:


function bounce(t){
if(t < 1 / 2.75){
return 7.5625 * t * t;}


if(t < 2 / 2.75){
t -= 1.5 / 2.75;
return 7.5625 * t * t + 0.75;}


if(t < 2.5 / 2.75){
t -= 2.25 / 2.75;
return 7.5625 * t * t + 0.9375;}


t -= 2.625 / 2.75;
return 7.5625 * t * t + 0.984375;}},{key:'bezier',value:


function bezier(
x1,
y1,
x2,
y2,
epsilon)
{
if(epsilon === undefined){


var duration=500;
epsilon = 1000 / 60 / duration / 4;}


return _bezier(x1,y1,x2,y2,epsilon);}},{key:'in',value:


function _in(
easing)
{
return easing;}},{key:'out',value:


function out(
easing)
{
return function(t){return 1 - easing(1 - t);};}},{key:'inOut',value:


function inOut(
easing)
{
return function(t){
if(t < 0.5){
return easing(t * 2) / 2;}

return 1 - easing((1 - t) * 2) / 2;};}}]);return Easing;})();




var ease=Easing.bezier(0.42,0,1,1);

module.exports = Easing;
});
__d('bezier',[],function(global, require, module, exports) {  module.





























exports = function(x1,y1,x2,y2,epsilon){

var curveX=function(t){
var v=1 - t;
return 3 * v * v * t * x1 + 3 * v * t * t * x2 + t * t * t;};


var curveY=function(t){
var v=1 - t;
return 3 * v * v * t * y1 + 3 * v * t * t * y2 + t * t * t;};


var derivativeCurveX=function(t){
var v=1 - t;
return 3 * (2 * (t - 1) * t + v * v) * x1 + 3 * (-t * t * t + 2 * v * t) * x2;};


return function(t){

var x=t,t0,t1,t2,x2,d2,i;


for(t2 = x,i = 0;i < 8;i++) {
x2 = curveX(t2) - x;
if(Math.abs(x2) < epsilon)return curveY(t2);
d2 = derivativeCurveX(t2);
if(Math.abs(d2) < 1e-6)break;
t2 = t2 - x2 / d2;}


t0 = 0,t1 = 1,t2 = x;

if(t2 < t0)return curveY(t0);
if(t2 > t1)return curveY(t1);


while(t0 < t1) {
x2 = curveX(t2);
if(Math.abs(x2 - x) < epsilon)return curveY(t2);
if(x > x2)t0 = t2;else 
t1 = t2;
t2 = (t1 - t0) * .5 + t0;}



return curveY(t2);};};
});
__d('SpringConfig',[],function(global, require, module, exports) {  'use strict';


















function tensionFromOrigamiValue(oValue){
return (oValue - 30) * 3.62 + 194;}


function frictionFromOrigamiValue(oValue){
return (oValue - 8) * 3 + 25;}


function fromOrigamiTensionAndFriction(
tension,
friction)
{
return {
tension:tensionFromOrigamiValue(tension),
friction:frictionFromOrigamiValue(friction)};}



function fromBouncinessAndSpeed(
bounciness,
speed)
{
function normalize(value,startValue,endValue){
return (value - startValue) / (endValue - startValue);}


function projectNormal(n,start,end){
return start + n * (end - start);}


function linearInterpolation(t,start,end){
return t * end + (1 - t) * start;}


function quadraticOutInterpolation(t,start,end){
return linearInterpolation(2 * t - t * t,start,end);}


function b3Friction1(x){
return 0.0007 * Math.pow(x,3) - 
0.031 * Math.pow(x,2) + 0.64 * x + 1.28;}


function b3Friction2(x){
return 0.000044 * Math.pow(x,3) - 
0.006 * Math.pow(x,2) + 0.36 * x + 2;}


function b3Friction3(x){
return 0.00000045 * Math.pow(x,3) - 
0.000332 * Math.pow(x,2) + 0.1078 * x + 5.84;}


function b3Nobounce(tension){
if(tension <= 18){
return b3Friction1(tension);}else 
if(tension > 18 && tension <= 44){
return b3Friction2(tension);}else 
{
return b3Friction3(tension);}}



var b=normalize(bounciness / 1.7,0,20);
b = projectNormal(b,0,0.8);
var s=normalize(speed / 1.7,0,20);
var bouncyTension=projectNormal(s,0.5,200);
var bouncyFriction=quadraticOutInterpolation(
b,
b3Nobounce(bouncyTension),
0.01);


return {
tension:tensionFromOrigamiValue(bouncyTension),
friction:frictionFromOrigamiValue(bouncyFriction)};}



module.exports = {
fromOrigamiTensionAndFriction:fromOrigamiTensionAndFriction,
fromBouncinessAndSpeed:fromBouncinessAndSpeed};
});
__d('requestAnimationFrame',["emptyFunction","nativeRequestAnimationFrame"],function(global, require, module, exports) {  var 










emptyFunction=require('emptyFunction');
var nativeRequestAnimationFrame=require('nativeRequestAnimationFrame');

var lastTime=0;

var requestAnimationFrame=
nativeRequestAnimationFrame || 
function(callback){
var currTime=Date.now();
var timeDelay=Math.max(0,16 - (currTime - lastTime));
lastTime = currTime + timeDelay;
return global.setTimeout(function(){
callback(Date.now());},
timeDelay);};



requestAnimationFrame(emptyFunction);

module.exports = requestAnimationFrame;
});
__d('nativeRequestAnimationFrame',[],function(global, require, module, exports) {  var 










nativeRequestAnimationFrame=
global.requestAnimationFrame || 
global.webkitRequestAnimationFrame || 
global.mozRequestAnimationFrame || 
global.oRequestAnimationFrame || 
global.msRequestAnimationFrame;

module.exports = nativeRequestAnimationFrame;
});
__d('WebView',["ActivityIndicatorIOS","EdgeInsetsPropType","React","StyleSheet","Text","View","invariant","keyMirror","requireNativeComponent","NativeModules"],function(global, require, module, exports) {  'use strict';












var ActivityIndicatorIOS=require('ActivityIndicatorIOS');
var EdgeInsetsPropType=require('EdgeInsetsPropType');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;
var RCTWebViewManager=require('NativeModules').WebViewManager;

var BGWASH='rgba(255,255,255,0.8)';
var RCT_WEBVIEW_REF='webview';

var WebViewState=keyMirror({
IDLE:null,
LOADING:null,
ERROR:null});


var NavigationType={
click:RCTWebViewManager.NavigationType.LinkClicked,
formsubmit:RCTWebViewManager.NavigationType.FormSubmitted,
backforward:RCTWebViewManager.NavigationType.BackForward,
reload:RCTWebViewManager.NavigationType.Reload,
formresubmit:RCTWebViewManager.NavigationType.FormResubmitted,
other:RCTWebViewManager.NavigationType.Other};


var JSNavigationScheme=RCTWebViewManager.JSNavigationScheme;









var defaultRenderLoading=function(){return (
React.createElement(View,{style:styles.loadingView},
React.createElement(ActivityIndicatorIOS,null)));};


var defaultRenderError=function(errorDomain,errorCode,errorDesc){return (
React.createElement(View,{style:styles.errorContainer},
React.createElement(Text,{style:styles.errorTextTitle},'Error loading page'),


React.createElement(Text,{style:styles.errorText},
'Domain: ' + errorDomain),

React.createElement(Text,{style:styles.errorText},
'Error Code: ' + errorCode),

React.createElement(Text,{style:styles.errorText},
'Description: ' + errorDesc)));};




var WebView=React.createClass({
statics:{
JSNavigationScheme:JSNavigationScheme,
NavigationType:NavigationType},


propTypes:{
url:PropTypes.string,
html:PropTypes.string,
renderError:PropTypes.func,
renderLoading:PropTypes.func,
bounces:PropTypes.bool,
scrollEnabled:PropTypes.bool,
automaticallyAdjustContentInsets:PropTypes.bool,
contentInset:EdgeInsetsPropType,
onNavigationStateChange:PropTypes.func,
startInLoadingState:PropTypes.bool,
style:View.propTypes.style,



javaScriptEnabledAndroid:PropTypes.bool,



injectedJavaScript:PropTypes.string,





scalesPageToFit:PropTypes.bool},


getInitialState:function(){
return {
viewState:WebViewState.IDLE,
lastErrorEvent:null,
startInLoadingState:true};},



componentWillMount:function(){
if(this.props.startInLoadingState){
this.setState({viewState:WebViewState.LOADING});}},



render:function(){
var otherView=null;

if(this.state.viewState === WebViewState.LOADING){
otherView = (this.props.renderLoading || defaultRenderLoading)();}else 
if(this.state.viewState === WebViewState.ERROR){
var errorEvent=this.state.lastErrorEvent;
invariant(
errorEvent != null,
'lastErrorEvent expected to be non-null');

otherView = (this.props.renderError || defaultRenderError)(
errorEvent.domain,
errorEvent.code,
errorEvent.description);}else 

if(this.state.viewState !== WebViewState.IDLE){
console.error(
'RCTWebView invalid state encountered: ' + this.state.loading);}



var webViewStyles=[styles.container,styles.webView,this.props.style];
if(this.state.viewState === WebViewState.LOADING || 
this.state.viewState === WebViewState.ERROR){

webViewStyles.push(styles.hidden);}


var webView=
React.createElement(RCTWebView,{
ref:RCT_WEBVIEW_REF,
key:'webViewKey',
style:webViewStyles,
url:this.props.url,
html:this.props.html,
injectedJavaScript:this.props.injectedJavaScript,
bounces:this.props.bounces,
scrollEnabled:this.props.scrollEnabled,
contentInset:this.props.contentInset,
automaticallyAdjustContentInsets:this.props.automaticallyAdjustContentInsets,
onLoadingStart:this.onLoadingStart,
onLoadingFinish:this.onLoadingFinish,
onLoadingError:this.onLoadingError,
scalesPageToFit:this.props.scalesPageToFit});


return (
React.createElement(View,{style:styles.container},
webView,
otherView));},




goForward:function(){
RCTWebViewManager.goForward(this.getWebViewHandle());},


goBack:function(){
RCTWebViewManager.goBack(this.getWebViewHandle());},


reload:function(){
RCTWebViewManager.reload(this.getWebViewHandle());},






updateNavigationState:function(event){
if(this.props.onNavigationStateChange){
this.props.onNavigationStateChange(event.nativeEvent);}},



getWebViewHandle:function(){
return React.findNodeHandle(this.refs[RCT_WEBVIEW_REF]);},


onLoadingStart:function(event){
this.updateNavigationState(event);},


onLoadingError:function(event){
event.persist();
console.error('Encountered an error loading page',event.nativeEvent);

this.setState({
lastErrorEvent:event.nativeEvent,
viewState:WebViewState.ERROR});},



onLoadingFinish:function(event){
this.setState({
viewState:WebViewState.IDLE});

this.updateNavigationState(event);}});



var RCTWebView=requireNativeComponent('RCTWebView',WebView);

var styles=StyleSheet.create({
container:{
flex:1},

errorContainer:{
flex:1,
justifyContent:'center',
alignItems:'center',
backgroundColor:BGWASH},

errorText:{
fontSize:14,
textAlign:'center',
marginBottom:2},

errorTextTitle:{
fontSize:15,
fontWeight:'500',
marginBottom:10},

hidden:{
height:0,
flex:0},

loadingView:{
backgroundColor:BGWASH,
flex:1,
justifyContent:'center',
alignItems:'center'},

webView:{
backgroundColor:'#ffffff'}});



module.exports = WebView;
});
__d('ActionSheetIOS',["NativeModules","invariant"],function(global, require, module, exports) {  'use strict';












var RCTActionSheetManager=require('NativeModules').ActionSheetManager;

var invariant=require('invariant');

var ActionSheetIOS={
showActionSheetWithOptions:function(options,callback){
invariant(
typeof options === 'object' && options !== null,
'Options must a valid object');

invariant(
typeof callback === 'function',
'Must provide a valid callback');

RCTActionSheetManager.showActionSheetWithOptions(
options,
function(){},
callback);},



showShareActionSheetWithOptions:function(
options,
failureCallback,
successCallback)
{
invariant(
typeof options === 'object' && options !== null,
'Options must a valid object');

invariant(
typeof failureCallback === 'function',
'Must provide a valid failureCallback');

invariant(
typeof successCallback === 'function',
'Must provide a valid successCallback');

RCTActionSheetManager.showShareActionSheetWithOptions(
options,
failureCallback,
successCallback);}};




module.exports = ActionSheetIOS;
});
__d('AdSupportIOS',["NativeModules"],function(global, require, module, exports) {  'use strict';












var AdSupport=require('NativeModules').AdSupport;

module.exports = {
getAdvertisingId:function(onSuccess,onFailure){
AdSupport.getAdvertisingId(onSuccess,onFailure);},


getAdvertisingTrackingEnabled:function(onSuccess,onFailure){
AdSupport.getAdvertisingTrackingEnabled(onSuccess,onFailure);}};
});
__d('AlertIOS',["NativeModules","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTAlertManager=require('NativeModules').AlertManager;
var invariant=require('invariant');

var DEFAULT_BUTTON_TEXT='OK';
var DEFAULT_BUTTON={
text:DEFAULT_BUTTON_TEXT,
onPress:null};var 
























AlertIOS=(function(){function AlertIOS(){_classCallCheck(this,AlertIOS);}_createClass(AlertIOS,null,[{key:'alert',value:
function alert(
title,
message,
buttons,



type)
{
var callbacks=[];
var buttonsSpec=[];
title = title || '';
message = message || '';
buttons = buttons || [DEFAULT_BUTTON];
type = type || '';

buttons.forEach(function(btn,index){
callbacks[index] = btn.onPress;
var btnDef={};
btnDef[index] = btn.text || DEFAULT_BUTTON_TEXT;
buttonsSpec.push(btnDef);});

RCTAlertManager.alertWithArgs({
title:title,
message:message,
buttons:buttonsSpec,
type:type},
function(id,value){
var cb=callbacks[id];
cb && cb(value);});}},{key:'prompt',value:



function prompt(
title,
value,
buttons,



callback)
{
if(arguments.length === 2){
if(typeof value === 'object'){
buttons = value;
value = undefined;}else 
if(typeof value === 'function'){
callback = value;
value = undefined;}}else 

if(arguments.length === 3 && typeof buttons === 'function'){
callback = buttons;
buttons = undefined;}


invariant(
!(callback && buttons) && (callback || buttons),
'Must provide either a button list or a callback, but not both');


if(!buttons){
buttons = [{
text:'Cancel'},
{
text:'OK',
onPress:callback}];}


this.alert(title,value,buttons,'plain-text');}}]);return AlertIOS;})();



module.exports = AlertIOS;
});
__d('AppRegistry',["invariant","renderApplication","RCTRenderingPerf"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');
var renderApplication=require('renderApplication');

if(__DEV__){


require('RCTRenderingPerf');}


var runnables={};




















var AppRegistry={
registerConfig:function(config){
for(var i=0;i < config.length;++i) {
var appConfig=config[i];
if(appConfig.run){
AppRegistry.registerRunnable(appConfig.appKey,appConfig.run);}else 
{
invariant(appConfig.component,'No component provider passed in');
AppRegistry.registerComponent(appConfig.appKey,appConfig.component);}}},




registerComponent:function(appKey,getComponentFunc){
runnables[appKey] = {
run:function(appParameters){return (
renderApplication(getComponentFunc(),appParameters.initialProps,appParameters.rootTag));}};

return appKey;},


registerRunnable:function(appKey,func){
runnables[appKey] = {run:func};
return appKey;},


getAppKeys:function(){
return Object.keys(runnables);},


runApplication:function(appKey,appParameters){
console.log(
'Running application "' + appKey + '" with appParams: ' + 
JSON.stringify(appParameters) + '. ' + 
'__DEV__ === ' + String(__DEV__) + 
', development-level warning are ' + (__DEV__?'ON':'OFF') + 
', performance optimizations are ' + (__DEV__?'OFF':'ON'));

invariant(
runnables[appKey] && runnables[appKey].run,
'Application ' + appKey + ' has not been registered. This ' + 
'is either due to a require() error during initialization ' + 
'or failure to call AppRegistry.registerComponent.');

runnables[appKey].run(appParameters);}};



module.exports = AppRegistry;
});
__d('renderApplication',["Inspector","RCTDeviceEventEmitter","React","StyleSheet","Subscribable","View","WarningBox","invariant","setupDevtools"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};











var Inspector=require('Inspector');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var View=require('View');
var WarningBox=require('WarningBox');

var invariant=require('invariant');

var AppContainer=React.createClass({
mixins:[Subscribable.Mixin],

getInitialState:function(){
return {inspector:null};},


toggleElementInspector:function(){
var inspector=this.state.inspector?
null:
React.createElement(Inspector,{
rootTag:this.props.rootTag,
inspectedViewTag:React.findNodeHandle(this.refs.main)});

this.setState({inspector:inspector});},


componentDidMount:function(){
this.addListenerOn(
RCTDeviceEventEmitter,
'toggleElementInspector',
this.toggleElementInspector);},



render:function(){
var shouldRenderWarningBox=__DEV__ && console.yellowBoxEnabled;
var warningBox=shouldRenderWarningBox?React.createElement(WarningBox,null):null;
return (
React.createElement(View,{style:styles.appContainer},
React.createElement(View,{collapsible:false,style:styles.appContainer,ref:'main'},
this.props.children),

warningBox,
this.state.inspector));}});





function renderApplication(
RootComponent,
initialProps,
rootTag)
{
invariant(
rootTag,
'Expect to have a valid rootTag, instead got ',rootTag);


if(__DEV__ && !window.document){
var setupDevtools=require('setupDevtools');
setupDevtools();}

React.render(
React.createElement(AppContainer,{rootTag:rootTag},
React.createElement(RootComponent,_extends({},
initialProps,{
rootTag:rootTag}))),


rootTag);}



var styles=StyleSheet.create({
appContainer:{
position:'absolute',
left:0,
top:0,
right:0,
bottom:0}});



module.exports = renderApplication;
});
__d('Inspector',["Dimensions","InspectorOverlay","InspectorPanel","InspectorUtils","React","StyleSheet","NativeModules","View","flattenStyle"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var Dimensions=require('Dimensions');
var InspectorOverlay=require('InspectorOverlay');
var InspectorPanel=require('InspectorPanel');
var InspectorUtils=require('InspectorUtils');
var React=require('React');
var StyleSheet=require('StyleSheet');
var UIManager=require('NativeModules').UIManager;
var View=require('View');

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){

window.__REACT_DEVTOOLS_GLOBAL_HOOK__.resolveRNStyle = require('flattenStyle');}var 


Inspector=(function(_React$Component){_inherits(Inspector,_React$Component);


function Inspector(props){_classCallCheck(this,Inspector);
_get(Object.getPrototypeOf(Inspector.prototype),'constructor',this).call(this,props);

this.state = {
devtoolsAgent:null,
panelPos:'bottom',
inspecting:true,
perfing:false,
inspected:null};}_createClass(Inspector,[{key:'componentDidMount',value:



function componentDidMount(){
if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){
this.attachToDevtools = this.attachToDevtools.bind(this);
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.on('react-devtools',this.attachToDevtools);

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent){
this.attachToDevtools(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent);}}}},{key:'componentWillUnmount',value:




function componentWillUnmount(){
if(this._subs){
this._subs.map(function(fn){return fn();});}

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.off('react-devtools',this.attachToDevtools);}}},{key:'attachToDevtools',value:



function attachToDevtools(agent){var _this=this;
var _hideWait=null;
var hlSub=agent.sub('highlight',function(_ref){var node=_ref.node;var name=_ref.name;var props=_ref.props;
clearTimeout(_hideWait);
UIManager.measure(node,function(x,y,width,height,left,top){
_this.setState({
hierarchy:[],
inspected:{
frame:{left:left,top:top,width:width,height:height},
style:props?props.style:{}}});});});




var hideSub=agent.sub('hideHighlight',function(){
if(_this.state.inspected === null){
return;}


_hideWait = setTimeout(function(){
_this.setState({
inspected:null});},

100);});

this._subs = [hlSub,hideSub];

agent.on('shutdown',function(){
_this.setState({devtoolsAgent:null});
_this._subs = null;});

this.setState({
devtoolsAgent:agent});}},{key:'setSelection',value:



function setSelection(i){var _this2=this;
var instance=this.state.hierarchy[i];
var publicInstance=instance.getPublicInstance();
UIManager.measure(React.findNodeHandle(instance),function(x,y,width,height,left,top){
_this2.setState({
inspected:{
frame:{left:left,top:top,width:width,height:height},
style:publicInstance.props?publicInstance.props.style:{}},

selection:i});});}},{key:'onTouchInstance',value:




function onTouchInstance(instance,frame,pointerY){
if(this.state.devtoolsAgent){
this.state.devtoolsAgent.selectFromReactInstance(instance,true);}

var hierarchy=InspectorUtils.getOwnerHierarchy(instance);
var publicInstance=instance.getPublicInstance();
var props=publicInstance.props || {};
this.setState({
panelPos:pointerY > Dimensions.get('window').height / 2?'top':'bottom',
selection:hierarchy.length - 1,
hierarchy:hierarchy,
inspected:{
style:props.style || {},
frame:frame}});}},{key:'setPerfing',value:




function setPerfing(val){
this.setState({
perfing:val,
inspecting:false,
inspected:null});}},{key:'setInspecting',value:



function setInspecting(val){
this.setState({
inspecting:val,
inspected:null});}},{key:'render',value:



function render(){
var panelContainerStyle=this.state.panelPos === 'bottom'?{bottom:0}:{top:0};
return (
React.createElement(View,{style:styles.container,pointerEvents:'box-none'},
this.state.inspecting && 
React.createElement(InspectorOverlay,{
rootTag:this.props.rootTag,
inspected:this.state.inspected,
inspectedViewTag:this.props.inspectedViewTag,
onTouchInstance:this.onTouchInstance.bind(this)}),

React.createElement(View,{style:[styles.panelContainer,panelContainerStyle]},
React.createElement(InspectorPanel,{
devtoolsIsOpen:!!this.state.devtoolsAgent,
inspecting:this.state.inspecting,
perfing:this.state.perfing,
setPerfing:this.setPerfing.bind(this),
setInspecting:this.setInspecting.bind(this),
inspected:this.state.inspected,
hierarchy:this.state.hierarchy,
selection:this.state.selection,
setSelection:this.setSelection.bind(this)}))));}}]);return Inspector;})(React.Component);







var styles=StyleSheet.create({
container:{
position:'absolute',
backgroundColor:'transparent',
top:0,
left:0,
right:0,
bottom:0},

panelContainer:{
position:'absolute',
left:0,
right:0}});



module.exports = Inspector;
});
__d('InspectorOverlay',["Dimensions","InspectorUtils","React","StyleSheet","NativeModules","View","ElementBox"],function(global, require, module, exports) {  'use strict';












var Dimensions=require('Dimensions');
var InspectorUtils=require('InspectorUtils');
var React=require('React');
var StyleSheet=require('StyleSheet');
var UIManager=require('NativeModules').UIManager;
var View=require('View');
var ElementBox=require('ElementBox');

var PropTypes=React.PropTypes;





var InspectorOverlay=React.createClass({
propTypes:{
inspected:PropTypes.shape({
frame:PropTypes.object,
style:PropTypes.any}),

inspectedViewTag:PropTypes.number,
onTouchInstance:PropTypes.func.isRequired},


findViewForTouchEvent:function(e){var _this=this;var _e$nativeEvent$touches$0=
e.nativeEvent.touches[0];var locationX=_e$nativeEvent$touches$0.locationX;var locationY=_e$nativeEvent$touches$0.locationY;
UIManager.findSubviewIn(
this.props.inspectedViewTag,
[locationX,locationY],
function(nativeViewTag,left,top,width,height){
var instance=InspectorUtils.findInstanceByNativeTag(_this.props.rootTag,nativeViewTag);
if(!instance){
return;}

_this.props.onTouchInstance(instance,{left:left,top:top,width:width,height:height},locationY);});},




shouldSetResponser:function(e){
this.findViewForTouchEvent(e);
return true;},


render:function(){
var content=null;
if(this.props.inspected){
content = React.createElement(ElementBox,{frame:this.props.inspected.frame,style:this.props.inspected.style});}


return (
React.createElement(View,{
onStartShouldSetResponder:this.shouldSetResponser,
onResponderMove:this.findViewForTouchEvent,
style:[styles.inspector,{height:Dimensions.get('window').height}]},
content));}});





var styles=StyleSheet.create({
inspector:{
backgroundColor:'transparent',
position:'absolute',
left:0,
top:0,
right:0}});



module.exports = InspectorOverlay;
});
__d('ElementBox',["React","View","StyleSheet","BorderBox","resolveBoxStyle","flattenStyle"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var View=require('View');
var StyleSheet=require('StyleSheet');
var BorderBox=require('BorderBox');
var resolveBoxStyle=require('resolveBoxStyle');

var flattenStyle=require('flattenStyle');var 

ElementBox=(function(_React$Component){_inherits(ElementBox,_React$Component);function ElementBox(){_classCallCheck(this,ElementBox);_get(Object.getPrototypeOf(ElementBox.prototype),'constructor',this).apply(this,arguments);}_createClass(ElementBox,[{key:'render',value:
function render(){
var style=flattenStyle(this.props.style) || {};
var margin=resolveBoxStyle('margin',style);
var padding=resolveBoxStyle('padding',style);
var frameStyle=this.props.frame;
if(margin){
frameStyle = {
top:frameStyle.top - margin.top,
left:frameStyle.left - margin.left,
height:frameStyle.height + margin.top + margin.bottom,
width:frameStyle.width + margin.left + margin.right};}


var contentStyle={
width:this.props.frame.width,
height:this.props.frame.height};

if(padding){
contentStyle = {
width:contentStyle.width - padding.left - padding.right,
height:contentStyle.height - padding.top - padding.bottom};}


return (
React.createElement(View,{style:[styles.frame,frameStyle],pointerEvents:'none'},
React.createElement(BorderBox,{box:margin,style:styles.margin},
React.createElement(BorderBox,{box:padding,style:styles.padding},
React.createElement(View,{style:[styles.content,contentStyle]})))));}}]);return ElementBox;})(React.Component);







var styles=StyleSheet.create({
frame:{
position:'absolute'},

content:{
backgroundColor:'rgba(200, 230, 255, 0.8)'},

padding:{
borderColor:'rgba(77, 255, 0, 0.3)'},

margin:{
borderColor:'rgba(255, 132, 0, 0.3)'}});



module.exports = ElementBox;
});
__d('BorderBox',["React","View"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var View=require('View');var 

BorderBox=(function(_React$Component){_inherits(BorderBox,_React$Component);function BorderBox(){_classCallCheck(this,BorderBox);_get(Object.getPrototypeOf(BorderBox.prototype),'constructor',this).apply(this,arguments);}_createClass(BorderBox,[{key:'render',value:
function render(){
var box=this.props.box;
if(!box){
return this.props.children;}

var style={
borderTopWidth:box.top,
borderBottomWidth:box.bottom,
borderLeftWidth:box.left,
borderRightWidth:box.right};

return (
React.createElement(View,{style:[style,this.props.style]},
this.props.children));}}]);return BorderBox;})(React.Component);





module.exports = BorderBox;
});
__d('resolveBoxStyle',[],function(global, require, module, exports) {  'use strict';





















function resolveBoxStyle(prefix,style){
var res={};
var subs=['top','left','bottom','right'];
var set=false;
subs.forEach(function(sub){
res[sub] = style[prefix] || 0;});

if(style[prefix]){
set = true;}

if(style[prefix + 'Vertical']){
res.top = res.bottom = style[prefix + 'Vertical'];
set = true;}

if(style[prefix + 'Horizontal']){
res.left = res.right = style[prefix + 'Horizontal'];
set = true;}

subs.forEach(function(sub){
var val=style[prefix + capFirst(sub)];
if(val){
res[sub] = val;
set = true;}});


if(!set){
return;}

return res;}


function capFirst(text){
return text[0].toUpperCase() + text.slice(1);}


module.exports = resolveBoxStyle;
});
__d('InspectorPanel',["React","StyleSheet","Text","View","ElementProperties","PerformanceOverlay","TouchableHighlight"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var ElementProperties=require('ElementProperties');
var PerformanceOverlay=require('PerformanceOverlay');
var TouchableHighlight=require('TouchableHighlight');

var PropTypes=React.PropTypes;var 

InspectorPanel=(function(_React$Component){_inherits(InspectorPanel,_React$Component);function InspectorPanel(){_classCallCheck(this,InspectorPanel);_get(Object.getPrototypeOf(InspectorPanel.prototype),'constructor',this).apply(this,arguments);}_createClass(InspectorPanel,[{key:'renderWaiting',value:
function renderWaiting(){
if(this.props.inspecting){
return (
React.createElement(Text,{style:styles.waitingText},'Tap something to inspect it'));}




return React.createElement(Text,{style:styles.waitingText},'Nothing is inspected');}},{key:'render',value:


function render(){
var contents;
if(this.props.inspected){
contents = 
React.createElement(ElementProperties,{
style:this.props.inspected.style,
frame:this.props.inspected.frame,
hierarchy:this.props.hierarchy,
selection:this.props.selection,
setSelection:this.props.setSelection});}else 


if(this.props.perfing){
contents = 
React.createElement(PerformanceOverlay,null);}else 

{
contents = 
React.createElement(View,{style:styles.waiting},
this.renderWaiting());}



return (
React.createElement(View,{style:styles.container},
!this.props.devtoolsIsOpen && contents,
React.createElement(View,{style:styles.buttonRow},
React.createElement(Button,{
title:'Inspect',
pressed:this.props.inspecting,
onClick:this.props.setInspecting}),

React.createElement(Button,{title:'Perf',
pressed:this.props.perfing,
onClick:this.props.setPerfing}))));}}]);return InspectorPanel;})(React.Component);







InspectorPanel.propTypes = {
devtoolsIsOpen:PropTypes.bool,
inspecting:PropTypes.bool,
setInspecting:PropTypes.func,
inspected:PropTypes.object,
perfing:PropTypes.bool,
setPerfing:PropTypes.func};var 


Button=(function(_React$Component2){_inherits(Button,_React$Component2);function Button(){_classCallCheck(this,Button);_get(Object.getPrototypeOf(Button.prototype),'constructor',this).apply(this,arguments);}_createClass(Button,[{key:'render',value:
function render(){var _this=this;
return (
React.createElement(TouchableHighlight,{onPress:function(){return _this.props.onClick(!_this.props.pressed);},style:[
styles.button,
this.props.pressed && styles.buttonPressed]},

React.createElement(Text,{style:styles.buttonText},this.props.title)));}}]);return Button;})(React.Component);





var styles=StyleSheet.create({
buttonRow:{
flexDirection:'row'},

button:{
backgroundColor:'rgba(0, 0, 0, 0.3)',
margin:2,
height:30,
justifyContent:'center',
alignItems:'center'},

buttonPressed:{
backgroundColor:'rgba(255, 255, 255, 0.3)'},

buttonText:{
textAlign:'center',
color:'white',
margin:5},

container:{
backgroundColor:'rgba(0, 0, 0, 0.7)'},

waiting:{
height:100},

waitingText:{
fontSize:20,
textAlign:'center',
marginVertical:20}});



module.exports = InspectorPanel;
});
__d('ElementProperties',["BoxInspector","ReactPropTypes","React","StyleInspector","StyleSheet","Text","TouchableHighlight","TouchableWithoutFeedback","View","flattenStyle","mapWithSeparator"],function(global, require, module, exports) {  'use strict';












var BoxInspector=require('BoxInspector');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleInspector=require('StyleInspector');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TouchableHighlight=require('TouchableHighlight');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var flattenStyle=require('flattenStyle');
var mapWithSeparator=require('mapWithSeparator');

var ElementProperties=React.createClass({
propTypes:{
hierarchy:PropTypes.array.isRequired,
style:PropTypes.oneOfType([
PropTypes.object,
PropTypes.array,
PropTypes.number])},



render:function(){var _this=this;
var style=flattenStyle(this.props.style);
var selection=this.props.selection;


return (
React.createElement(TouchableWithoutFeedback,null,
React.createElement(View,{style:styles.info},
React.createElement(View,{style:styles.breadcrumb},
mapWithSeparator(
this.props.hierarchy,
function(item,i){return (
React.createElement(TouchableHighlight,{
style:[styles.breadItem,i === selection && styles.selected],
onPress:function(){return _this.props.setSelection(i);}},
React.createElement(Text,{style:styles.breadItemText},
item.getName?item.getName():'Unknown')));},



function(){return React.createElement(Text,{style:styles.breadSep},'▸');})),


React.createElement(View,{style:styles.row},
React.createElement(StyleInspector,{style:style}),
React.createElement(BoxInspector,{style:style,frame:this.props.frame})))));}});







var styles=StyleSheet.create({
breadSep:{
fontSize:8,
color:'white'},

breadcrumb:{
flexDirection:'row',
flexWrap:'wrap',
marginBottom:5},

selected:{
borderColor:'white',
borderRadius:5},

breadItem:{
borderWidth:1,
borderColor:'transparent',
marginHorizontal:2},

breadItemText:{
fontSize:10,
color:'white',
marginHorizontal:5},

row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-between'},

info:{
padding:10},

path:{
color:'white',
fontSize:9}});



module.exports = ElementProperties;
});
__d('BoxInspector',["React","StyleSheet","Text","View","resolveBoxStyle"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var resolveBoxStyle=require('resolveBoxStyle');

var blank={
top:0,
left:0,
right:0,
bottom:0};var 


BoxInspector=(function(_React$Component){_inherits(BoxInspector,_React$Component);function BoxInspector(){_classCallCheck(this,BoxInspector);_get(Object.getPrototypeOf(BoxInspector.prototype),'constructor',this).apply(this,arguments);}_createClass(BoxInspector,[{key:'render',value:
function render(){
var frame=this.props.frame;
var style=this.props.style;
var margin=style && resolveBoxStyle('margin',style) || blank;
var padding=style && resolveBoxStyle('padding',style) || blank;
return (
React.createElement(BoxContainer,{title:'margin',titleStyle:styles.marginLabel,box:margin},
React.createElement(BoxContainer,{title:'padding',box:padding},
React.createElement(View,null,
React.createElement(Text,{style:styles.innerText},'(',
frame.left,', ',frame.top,')'),

React.createElement(Text,{style:styles.innerText},
frame.width,' × ',frame.height)))));}}]);return BoxInspector;})(React.Component);var 








BoxContainer=(function(_React$Component2){_inherits(BoxContainer,_React$Component2);function BoxContainer(){_classCallCheck(this,BoxContainer);_get(Object.getPrototypeOf(BoxContainer.prototype),'constructor',this).apply(this,arguments);}_createClass(BoxContainer,[{key:'render',value:
function render(){
var box=this.props.box;
return (
React.createElement(View,{style:styles.box},
React.createElement(View,{style:styles.row},
React.createElement(Text,{style:[this.props.titleStyle,styles.label]},this.props.title),
React.createElement(Text,{style:styles.boxText},box.top)),

React.createElement(View,{style:styles.row},
React.createElement(Text,{style:styles.boxText},box.left),
this.props.children,
React.createElement(Text,{style:styles.boxText},box.right)),

React.createElement(Text,{style:styles.boxText},box.bottom)));}}]);return BoxContainer;})(React.Component);





var styles=StyleSheet.create({
row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

marginLabel:{
width:60},

label:{
fontSize:10,
color:'rgb(255,100,0)',
marginLeft:5,
flex:1,
textAlign:'left',
top:-3},

buffer:{
fontSize:10,
color:'yellow',
flex:1,
textAlign:'center'},

innerText:{
color:'yellow',
fontSize:12,
textAlign:'center',
width:70},

box:{
borderWidth:1,
borderColor:'grey'},

boxText:{
color:'white',
fontSize:12,
marginHorizontal:3,
marginVertical:2,
textAlign:'center'}});



module.exports = BoxInspector;
});
__d('StyleInspector',["React","StyleSheet","Text","View"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');var 

StyleInspector=(function(_React$Component){_inherits(StyleInspector,_React$Component);function StyleInspector(){_classCallCheck(this,StyleInspector);_get(Object.getPrototypeOf(StyleInspector.prototype),'constructor',this).apply(this,arguments);}_createClass(StyleInspector,[{key:'render',value:
function render(){var _this=this;
if(!this.props.style){
return React.createElement(Text,{style:styles.noStyle},'No style');}

var names=Object.keys(this.props.style);
return (
React.createElement(View,{style:styles.container},
React.createElement(View,null,
names.map(function(name){return React.createElement(Text,{style:styles.attr},name,':');})),

React.createElement(View,null,
names.map(function(name){return React.createElement(Text,{style:styles.value},_this.props.style[name]);}))));}}]);return StyleInspector;})(React.Component);






var styles=StyleSheet.create({
container:{
flexDirection:'row'},

row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

attr:{
fontSize:10,
color:'#ccc'},

value:{
fontSize:10,
color:'white',
marginLeft:10},

noStyle:{
color:'white',
fontSize:10}});



module.exports = StyleInspector;
});
__d('mapWithSeparator',[],function(global, require, module, exports) {  'use strict';






function mapWithSeparator(array,valueFunction,separatorFunction){
var results=[];
for(var i=0;i < array.length;i++) {
results.push(valueFunction(array[i],i,array));
if(i !== array.length - 1){
results.push(separatorFunction(i));}}


return results;}


module.exports = mapWithSeparator;
});
__d('PerformanceOverlay',["PerformanceLogger","React","StyleSheet","Text","View"],function(global, require, module, exports) {  'use strict';












var PerformanceLogger=require('PerformanceLogger');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var PerformanceOverlay=React.createClass({
render:function(){
var perfLogs=PerformanceLogger.getTimespans();
var items=[];

for(var key in perfLogs) {
if(perfLogs[key].totalTime){
items.push(
React.createElement(View,{style:styles.row},
React.createElement(Text,{style:[styles.text,styles.label]},key),
React.createElement(Text,{style:[styles.text,styles.totalTime]},
perfLogs[key].totalTime + 'ms')));}}






return (
React.createElement(View,{style:styles.container},
items));}});





var styles=StyleSheet.create({
container:{
height:100,
paddingTop:10},

label:{
flex:1},

row:{
flexDirection:'row',
paddingHorizontal:10},

text:{
color:'white',
fontSize:12},

totalTime:{
paddingRight:100}});



module.exports = PerformanceOverlay;
});
__d('WarningBox',["AsyncStorage","EventEmitter","Map","PanResponder","React","StyleSheet","Text","TouchableOpacity","View","invariant","rebound/rebound.js","stringifySafe","Dimensions"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};











var AsyncStorage=require('AsyncStorage');
var EventEmitter=require('EventEmitter');
var Map=require('Map');
var PanResponder=require('PanResponder');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TouchableOpacity=require('TouchableOpacity');
var View=require('View');

var invariant=require('invariant');
var rebound=require('rebound/rebound.js');
var stringifySafe=require('stringifySafe');

var SCREEN_WIDTH=require('Dimensions').get('window').width;
var IGNORED_WARNINGS_KEY='__DEV_WARNINGS_IGNORED';

var consoleWarn=console.warn.bind(console);

var warningCounts=new Map();
var ignoredWarnings=[];
var totalWarningCount=0;
var warningCountEvents=new EventEmitter();























if(__DEV__){
console.warn = function(){
consoleWarn.apply(null,arguments);
if(!console.yellowBoxEnabled){
return;}

var warning=Array.prototype.map.call(arguments,stringifySafe).join(' ');
if(!console.yellowBoxResetIgnored && 
ignoredWarnings.indexOf(warning) !== -1){
return;}

var count=warningCounts.has(warning)?warningCounts.get(warning) + 1:1;
warningCounts.set(warning,count);
totalWarningCount += 1;
warningCountEvents.emit('count',totalWarningCount);};}



function saveIgnoredWarnings(){
AsyncStorage.setItem(
IGNORED_WARNINGS_KEY,
JSON.stringify(ignoredWarnings),
function(err){
if(err){
console.warn('Could not save ignored warnings.',err);}});}





AsyncStorage.getItem(IGNORED_WARNINGS_KEY,function(err,data){
if(!err && data && !console.yellowBoxResetIgnored){
ignoredWarnings = JSON.parse(data);}});



var WarningRow=React.createClass({
componentWillMount:function(){var _this=this;
this.springSystem = new rebound.SpringSystem();
this.dismissalSpring = this.springSystem.createSpring();
this.dismissalSpring.setRestSpeedThreshold(0.05);
this.dismissalSpring.setCurrentValue(0);
this.dismissalSpring.addListener({
onSpringUpdate:function(){
var val=_this.dismissalSpring.getCurrentValue();
_this.text && _this.text.setNativeProps({
left:SCREEN_WIDTH * val});

_this.container && _this.container.setNativeProps({
opacity:1 - val});

_this.closeButton && _this.closeButton.setNativeProps({
opacity:1 - val * 5});},


onSpringAtRest:function(){
if(_this.dismissalSpring.getCurrentValue()){
_this.collapseSpring.setEndValue(1);}}});



this.collapseSpring = this.springSystem.createSpring();
this.collapseSpring.setRestSpeedThreshold(0.05);
this.collapseSpring.setCurrentValue(0);
this.collapseSpring.getSpringConfig().friction = 20;
this.collapseSpring.getSpringConfig().tension = 200;
this.collapseSpring.addListener({
onSpringUpdate:function(){
var val=_this.collapseSpring.getCurrentValue();
_this.container && _this.container.setNativeProps({
height:Math.abs(46 - val * 46)});},


onSpringAtRest:function(){
_this.props.onDismissed();}});


this.panGesture = PanResponder.create({
onStartShouldSetPanResponder:function(){
return !!_this.dismissalSpring.getCurrentValue();},

onMoveShouldSetPanResponder:function(){return true;},
onPanResponderGrant:function(){
_this.isResponderOnlyToBlockTouches = 
!!_this.dismissalSpring.getCurrentValue();},

onPanResponderMove:function(e,gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

_this.dismissalSpring.setCurrentValue(gestureState.dx / SCREEN_WIDTH);},

onPanResponderRelease:function(e,gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

var gestureCompletion=gestureState.dx / SCREEN_WIDTH;
var doesGestureRelease=gestureState.vx + gestureCompletion > 0.5;
_this.dismissalSpring.setEndValue(doesGestureRelease?1:0);}});},



render:function(){var _this2=this;
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text,{style:styles.bold},'(',
warningCounts.get(this.props.warning),')'," ");}



return (
React.createElement(View,_extends({
style:styles.warningBox,
ref:function(container){_this2.container = container;}},
this.panGesture.panHandlers),
React.createElement(TouchableOpacity,{
onPress:this.props.onOpened},
React.createElement(Text,{
style:styles.warningText,
numberOfLines:2,
ref:function(text){_this2.text = text;}},
countText,
this.props.warning)),


React.createElement(View,{
ref:function(closeButton){_this2.closeButton = closeButton;},
style:styles.closeButton},
React.createElement(TouchableOpacity,{
onPress:function(){
_this2.dismissalSpring.setEndValue(1);}},

React.createElement(Text,{style:styles.closeButtonText},'✕')))));}});







var WarningBoxOpened=React.createClass({
render:function(){
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text,{style:styles.bold},'(',
warningCounts.get(this.props.warning),')'," ");}



return (
React.createElement(TouchableOpacity,{
activeOpacity:0.9,
onPress:this.props.onClose,
style:styles.yellowBox},
React.createElement(Text,{style:styles.yellowBoxText},
countText,
this.props.warning),

React.createElement(View,{style:styles.yellowBoxButtons},
React.createElement(TouchableOpacity,{
onPress:this.props.onDismissed,
style:styles.yellowBoxButton},
React.createElement(Text,{style:styles.yellowBoxButtonText},'Dismiss')),



React.createElement(TouchableOpacity,{
onPress:this.props.onIgnored,
style:styles.yellowBoxButton},
React.createElement(Text,{style:styles.yellowBoxButtonText},'Ignore')))));}});









var canMountWarningBox=true;

var WarningBox=React.createClass({
getInitialState:function(){
return {
totalWarningCount:totalWarningCount,
openWarning:null};},


componentWillMount:function(){
if(console.yellowBoxResetIgnored){
AsyncStorage.setItem(IGNORED_WARNINGS_KEY,'[]',function(err){
if(err){
console.warn('Could not reset ignored warnings.',err);}});


ignoredWarnings = [];}},


componentDidMount:function(){
invariant(
canMountWarningBox,
'There can only be one WarningBox');

canMountWarningBox = false;
warningCountEvents.addListener(
'count',
this._onWarningCount);},


componentWillUnmount:function(){
warningCountEvents.removeAllListeners();
canMountWarningBox = true;},

_onWarningCount:function(totalWarningCount){var _this3=this;


setImmediate(function(){
_this3.setState({totalWarningCount:totalWarningCount});});},


_onDismiss:function(warning){
warningCounts.delete(warning);
this.setState({
openWarning:null});},


render:function(){var _this4=this;
if(warningCounts.size === 0){
return React.createElement(View,null);}

if(this.state.openWarning){
return (
React.createElement(WarningBoxOpened,{
warning:this.state.openWarning,
onClose:function(){
_this4.setState({openWarning:null});},

onDismissed:this._onDismiss.bind(this,this.state.openWarning),
onIgnored:function(){
ignoredWarnings.push(_this4.state.openWarning);
saveIgnoredWarnings();
_this4._onDismiss(_this4.state.openWarning);}}));}




var warningRows=[];
warningCounts.forEach(function(count,warning){
warningRows.push(
React.createElement(WarningRow,{
key:warning,
onOpened:function(){
_this4.setState({openWarning:warning});},

onDismissed:_this4._onDismiss.bind(_this4,warning),
warning:warning}));});



return (
React.createElement(View,{style:styles.warningContainer},
warningRows));}});





var styles=StyleSheet.create({
bold:{
fontWeight:'bold'},

closeButton:{
position:'absolute',
right:0,
height:46,
width:46},

closeButtonText:{
color:'white',
fontSize:32,
position:'relative',
left:8},

warningContainer:{
position:'absolute',
left:0,
right:0,
bottom:0},

warningBox:{
position:'relative',
backgroundColor:'rgba(171, 124, 36, 0.9)',
flex:1,
height:46},

warningText:{
color:'white',
position:'absolute',
left:0,
marginLeft:15,
marginRight:46,
top:7},

yellowBox:{
backgroundColor:'rgba(171, 124, 36, 0.9)',
position:'absolute',
left:0,
right:0,
top:0,
bottom:0,
padding:15,
paddingTop:35},

yellowBoxText:{
color:'white',
fontSize:20},

yellowBoxButtons:{
flexDirection:'row',
position:'absolute',
bottom:0},

yellowBoxButton:{
flex:1,
padding:25},

yellowBoxButtonText:{
color:'white',
fontSize:16}});



module.exports = WarningBox;
});
__d('AsyncStorage',["NativeModules"],function(global, require, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTAsyncLocalStorage=NativeModules.AsyncLocalStorage;
var RCTAsyncRocksDBStorage=NativeModules.AsyncRocksDBStorage;


var RCTAsyncStorage=RCTAsyncRocksDBStorage || RCTAsyncLocalStorage;













var AsyncStorage={




getItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiGet([key],function(errors,result){

var value=result && result[0] && result[0][1]?result[0][1]:null;
callback && callback(errors && convertError(errors[0]) || null,value);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(value);}});});},









setItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet([[key,value]],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},







removeItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove([key],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},










mergeItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge([[key,value]],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},










clear:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.clear(function(error){
callback && callback(convertError(error));
if(error && convertError(error)){
reject(convertError(error));}else 
{
resolve(null);}});});},








getAllKeys:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.getAllKeys(function(error,keys){
callback && callback(convertError(error),keys);
if(error){
reject(convertError(error));}else 
{
resolve(keys);}});});},





















multiGet:function(
keys,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiGet(keys,function(errors,result){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error,result);
if(errors){
reject(error);}else 
{
resolve(result);}});});},











multiSet:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet(keyValuePairs,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});},








multiRemove:function(
keys,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove(keys,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});},











multiMerge:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge(keyValuePairs,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});}};







if(!RCTAsyncStorage.multiMerge){
delete AsyncStorage.mergeItem;
delete AsyncStorage.multiMerge;}


function convertError(error){
if(!error){
return null;}

var out=new Error(error.message);
out.key = error.key;
return out;}


module.exports = AsyncStorage;
});
__d('setupDevtools',["flattenStyle","ReactCurrentOwner","ReactInstanceHandles","ReactNativeMount","ReactReconciler","ReactNativeTextComponent"],function(global, require, module, exports) {  'use strict';












function setupDevtools(){
var messageListeners=[];
var closeListeners=[];
var ws=new window.WebSocket('ws://192.168.1.123:8081/devtools');

var FOR_BACKEND={
resolveRNStyle:require('flattenStyle'),
wall:{
listen:function(fn){
messageListeners.push(fn);},

onClose:function(fn){
closeListeners.push(fn);},

send:function(data){
ws.send(JSON.stringify(data));}}};



ws.onclose = function(){
console.warn('devtools socket closed');
closeListeners.forEach(function(fn){return fn();});};

ws.onerror = function(error){
console.warn('devtools socket errored',error);
closeListeners.forEach(function(fn){return fn();});};

ws.onopen = function(){
tryToConnect();};


function tryToConnect(){
ws.send('attach:agent');
var _interval=setInterval(function(){return ws.send('attach:agent');},500);
ws.onmessage = function(evt){
if(evt.data.indexOf('eval:') === 0){
clearInterval(_interval);
initialize(evt.data.slice('eval:'.length));}};}




function initialize(text){
try{

eval(text);}
catch(e) {
console.error('Failed to eval' + e.message);
return;}

window.__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:require('ReactCurrentOwner'),
InstanceHandles:require('ReactInstanceHandles'),
Mount:require('ReactNativeMount'),
Reconciler:require('ReactReconciler'),
TextComponent:require('ReactNativeTextComponent')});

ws.onmessage = handleMessage;}


function handleMessage(evt){
var data;
try{
data = JSON.parse(evt.data);}
catch(e) {
return console.error('failed to parse json: ' + evt.data);}


if(data.$close || data.$error){
closeListeners.forEach(function(fn){return fn();});
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.emit('shutdown');
tryToConnect();
return;}

if(data.$open){
return;}

messageListeners.forEach(function(fn){
try{
fn(data);}
catch(e) {



console.log(data);
throw e;}});}}





module.exports = setupDevtools;
});
__d('RCTRenderingPerf',["ReactDefaultPerf","invariant"],function(global, require, module, exports) {  'use strict';












var ReactDefaultPerf=require('ReactDefaultPerf');

var invariant=require('invariant');






var perfModules=[];
var enabled=false;

var RCTRenderingPerf={

toggle:function(){
console.log('Render perfomance measurements enabled');
enabled = true;},


start:function(){
if(!enabled){
return;}


ReactDefaultPerf.start();
perfModules.forEach(function(module){return module.start();});},


stop:function(){
if(!enabled){
return;}


ReactDefaultPerf.stop();
ReactDefaultPerf.printInclusive();
ReactDefaultPerf.printWasted();

var totalRender=0;
var totalTime=0;
var measurements=ReactDefaultPerf.getLastMeasurements();
for(var ii=0;ii < measurements.length;ii++) {
var render=measurements[ii].render;
for(var nodeName in render) {
totalRender += render[nodeName];}

totalTime += measurements[ii].totalTime;}

console.log('Total time spent in render(): ' + totalRender + 'ms');

perfModules.forEach(function(module){return module.stop();});},


register:function(module){
invariant(
typeof module.start === 'function',
'Perf module should have start() function');

invariant(
typeof module.stop === 'function',
'Perf module should have stop() function');

perfModules.push(module);}};



module.exports = RCTRenderingPerf;
});
__d('ReactDefaultPerf',["DOMProperty","ReactDefaultPerfAnalysis","ReactMount","ReactPerf","performanceNow"],function(global, require, module, exports) {  'use strict';













var DOMProperty=require('DOMProperty');
var ReactDefaultPerfAnalysis=require('ReactDefaultPerfAnalysis');
var ReactMount=require('ReactMount');
var ReactPerf=require('ReactPerf');

var performanceNow=require('performanceNow');

function roundFloat(val){
return Math.floor(val * 100) / 100;}


function addValue(obj,key,val){
obj[key] = (obj[key] || 0) + val;}


var ReactDefaultPerf={
_allMeasurements:[],
_mountStack:[0],
_injected:false,

start:function(){
if(!ReactDefaultPerf._injected){
ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);}


ReactDefaultPerf._allMeasurements.length = 0;
ReactPerf.enableMeasure = true;},


stop:function(){
ReactPerf.enableMeasure = false;},


getLastMeasurements:function(){
return ReactDefaultPerf._allMeasurements;},


printExclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Component class name':item.componentName,
'Total inclusive time (ms)':roundFloat(item.inclusive),
'Exclusive mount time (ms)':roundFloat(item.exclusive),
'Exclusive render time (ms)':roundFloat(item.render),
'Mount time per instance (ms)':roundFloat(item.exclusive / item.count),
'Render time per instance (ms)':roundFloat(item.render / item.count),
'Instances':item.count};}));},






printInclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Owner > component':item.componentName,
'Inclusive time (ms)':roundFloat(item.time),
'Instances':item.count};}));


console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



getMeasurementsSummaryMap:function(measurements){
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(
measurements,
true);

return summary.map(function(item){
return {
'Owner > component':item.componentName,
'Wasted time (ms)':item.time,
'Instances':item.count};});},




printWasted:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



printDOM:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getDOMSummary(measurements);
console.table(summary.map(function(item){
var result={};
result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
result['type'] = item.type;
result['args'] = JSON.stringify(item.args);
return result;}));

console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



_recordWrite:function(id,fnName,totalTime,args){

var writes=
ReactDefaultPerf.
_allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].
writes;
writes[id] = writes[id] || [];
writes[id].push({
type:fnName,
time:totalTime,
args:args});},



measure:function(moduleName,fnName,func){
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}
var totalTime;
var rv;
var start;

if(fnName === '_renderNewRootComponent' || 
fnName === 'flushBatchedUpdates'){




ReactDefaultPerf._allMeasurements.push({
exclusive:{},
inclusive:{},
render:{},
counts:{},
writes:{},
displayNames:{},
totalTime:0});

start = performanceNow();
rv = func.apply(this,args);
ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1].
totalTime = performanceNow() - start;
return rv;}else 
if(fnName === '_mountImageIntoNode' || 
moduleName === 'ReactDOMIDOperations'){
start = performanceNow();
rv = func.apply(this,args);
totalTime = performanceNow() - start;

if(fnName === '_mountImageIntoNode'){
var mountID=ReactMount.getID(args[1]);
ReactDefaultPerf._recordWrite(mountID,fnName,totalTime,args[0]);}else 
if(fnName === 'dangerouslyProcessChildrenUpdates'){

args[0].forEach(function(update){
var writeArgs={};
if(update.fromIndex !== null){
writeArgs.fromIndex = update.fromIndex;}

if(update.toIndex !== null){
writeArgs.toIndex = update.toIndex;}

if(update.textContent !== null){
writeArgs.textContent = update.textContent;}

if(update.markupIndex !== null){
writeArgs.markup = args[1][update.markupIndex];}

ReactDefaultPerf._recordWrite(
update.parentID,
update.type,
totalTime,
writeArgs);});}else 


{

ReactDefaultPerf._recordWrite(
args[0],
fnName,
totalTime,
Array.prototype.slice.call(args,1));}


return rv;}else 
if(moduleName === 'ReactCompositeComponent' && (
fnName === 'mountComponent' || 
fnName === 'updateComponent' || 
fnName === '_renderValidatedComponent')){

if(typeof this._currentElement.type === 'string'){
return func.apply(this,args);}


var rootNodeID=fnName === 'mountComponent'?
args[0]:
this._rootNodeID;
var isRender=fnName === '_renderValidatedComponent';
var isMount=fnName === 'mountComponent';

var mountStack=ReactDefaultPerf._mountStack;
var entry=ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1];


if(isRender){
addValue(entry.counts,rootNodeID,1);}else 
if(isMount){
mountStack.push(0);}


start = performanceNow();
rv = func.apply(this,args);
totalTime = performanceNow() - start;

if(isRender){
addValue(entry.render,rootNodeID,totalTime);}else 
if(isMount){
var subMountTime=mountStack.pop();
mountStack[mountStack.length - 1] += totalTime;
addValue(entry.exclusive,rootNodeID,totalTime - subMountTime);
addValue(entry.inclusive,rootNodeID,totalTime);}else 
{
addValue(entry.inclusive,rootNodeID,totalTime);}


entry.displayNames[rootNodeID] = {
current:this.getName(),
owner:this._currentElement._owner?
this._currentElement._owner.getName():
'<root>'};


return rv;}else 
{
return func.apply(this,args);}};}};





module.exports = ReactDefaultPerf;
});
__d('DOMProperty',["invariant"],function(global, require, module, exports) {  'use strict';













var invariant=require('invariant');

function checkMask(value,bitmask){
return (value & bitmask) === bitmask;}


var DOMPropertyInjection={




MUST_USE_ATTRIBUTE:0x1,
MUST_USE_PROPERTY:0x2,
HAS_SIDE_EFFECTS:0x4,
HAS_BOOLEAN_VALUE:0x8,
HAS_NUMERIC_VALUE:0x10,
HAS_POSITIVE_NUMERIC_VALUE:0x20 | 0x10,
HAS_OVERLOADED_BOOLEAN_VALUE:0x40,





























injectDOMPropertyConfig:function(domPropertyConfig){
var Injection=DOMPropertyInjection;
var Properties=domPropertyConfig.Properties || {};
var DOMAttributeNamespaces=domPropertyConfig.DOMAttributeNamespaces || {};
var DOMAttributeNames=domPropertyConfig.DOMAttributeNames || {};
var DOMPropertyNames=domPropertyConfig.DOMPropertyNames || {};
var DOMMutationMethods=domPropertyConfig.DOMMutationMethods || {};

if(domPropertyConfig.isCustomAttribute){
DOMProperty._isCustomAttributeFunctions.push(
domPropertyConfig.isCustomAttribute);}



for(var propName in Properties) {
invariant(
!DOMProperty.properties.hasOwnProperty(propName),
'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + 
'\'%s\' which has already been injected. You may be accidentally ' + 
'injecting the same DOM property config twice, or you may be ' + 
'injecting two configs that have conflicting property names.',
propName);


var lowerCased=propName.toLowerCase();
var propConfig=Properties[propName];

var propertyInfo={
attributeName:lowerCased,
attributeNamespace:null,
propertyName:propName,
mutationMethod:null,

mustUseAttribute:checkMask(propConfig,Injection.MUST_USE_ATTRIBUTE),
mustUseProperty:checkMask(propConfig,Injection.MUST_USE_PROPERTY),
hasSideEffects:checkMask(propConfig,Injection.HAS_SIDE_EFFECTS),
hasBooleanValue:checkMask(propConfig,Injection.HAS_BOOLEAN_VALUE),
hasNumericValue:checkMask(propConfig,Injection.HAS_NUMERIC_VALUE),
hasPositiveNumericValue:
checkMask(propConfig,Injection.HAS_POSITIVE_NUMERIC_VALUE),
hasOverloadedBooleanValue:
checkMask(propConfig,Injection.HAS_OVERLOADED_BOOLEAN_VALUE)};


invariant(
!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty,
'DOMProperty: Cannot require using both attribute and property: %s',
propName);

invariant(
propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects,
'DOMProperty: Properties that have side effects must use property: %s',
propName);

invariant(
propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + 
propertyInfo.hasOverloadedBooleanValue <= 1,
'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 
'numeric value, but not a combination: %s',
propName);


if(__DEV__){
DOMProperty.getPossibleStandardName[lowerCased] = propName;}


if(DOMAttributeNames.hasOwnProperty(propName)){
var attributeName=DOMAttributeNames[propName];
propertyInfo.attributeName = attributeName;
if(__DEV__){
DOMProperty.getPossibleStandardName[attributeName] = propName;}}



if(DOMAttributeNamespaces.hasOwnProperty(propName)){
propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];}


if(DOMPropertyNames.hasOwnProperty(propName)){
propertyInfo.propertyName = DOMPropertyNames[propName];}


if(DOMMutationMethods.hasOwnProperty(propName)){
propertyInfo.mutationMethod = DOMMutationMethods[propName];}


DOMProperty.properties[propName] = propertyInfo;}}};



var defaultValueCache={};














var DOMProperty={

ID_ATTRIBUTE_NAME:'data-reactid',





































properties:{},






getPossibleStandardName:__DEV__?{}:null,




_isCustomAttributeFunctions:[],





isCustomAttribute:function(attributeName){
for(var i=0;i < DOMProperty._isCustomAttributeFunctions.length;i++) {
var isCustomAttributeFn=DOMProperty._isCustomAttributeFunctions[i];
if(isCustomAttributeFn(attributeName)){
return true;}}


return false;},










getDefaultValueForProperty:function(nodeName,prop){
var nodeDefaults=defaultValueCache[nodeName];
var testElement;
if(!nodeDefaults){
defaultValueCache[nodeName] = nodeDefaults = {};}

if(!(prop in nodeDefaults)){
testElement = document.createElement(nodeName);
nodeDefaults[prop] = testElement[prop];}

return nodeDefaults[prop];},


injection:DOMPropertyInjection};


module.exports = DOMProperty;
});
__d('ReactDefaultPerfAnalysis',["Object.assign"],function(global, require, module, exports) {  var 










assign=require('Object.assign');


var DONT_CARE_THRESHOLD=1.2;
var DOM_OPERATION_TYPES={
'_mountImageIntoNode':'set innerHTML',
INSERT_MARKUP:'set innerHTML',
MOVE_EXISTING:'move',
REMOVE_NODE:'remove',
TEXT_CONTENT:'set textContent',
'updatePropertyByID':'update attribute',
'deletePropertyByID':'delete attribute',
'updateStylesByID':'update styles',
'updateInnerHTMLByID':'set innerHTML',
'dangerouslyReplaceNodeWithMarkupByID':'replace'};


function getTotalTime(measurements){




var totalTime=0;
for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
totalTime += measurement.totalTime;}

return totalTime;}


function getDOMSummary(measurements){
var items=[];
for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var id;

for(id in measurement.writes) {
measurement.writes[id].forEach(function(write){
items.push({
id:id,
type:DOM_OPERATION_TYPES[write.type] || write.type,
args:write.args});});}}




return items;}


function getExclusiveSummary(measurements){
var candidates={};
var displayName;

for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);


for(var id in allIDs) {
displayName = measurement.displayNames[id].current;

candidates[displayName] = candidates[displayName] || {
componentName:displayName,
inclusive:0,
exclusive:0,
render:0,
count:0};

if(measurement.render[id]){
candidates[displayName].render += measurement.render[id];}

if(measurement.exclusive[id]){
candidates[displayName].exclusive += measurement.exclusive[id];}

if(measurement.inclusive[id]){
candidates[displayName].inclusive += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[displayName].count += measurement.counts[id];}}}





var arr=[];
for(displayName in candidates) {
if(candidates[displayName].exclusive >= DONT_CARE_THRESHOLD){
arr.push(candidates[displayName]);}}



arr.sort(function(a,b){
return b.exclusive - a.exclusive;});


return arr;}


function getInclusiveSummary(measurements,onlyClean){
var candidates={};
var inclusiveKey;

for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);

var cleanComponents;

if(onlyClean){
cleanComponents = getUnchangedComponents(measurement);}


for(var id in allIDs) {
if(onlyClean && !cleanComponents[id]){
continue;}


var displayName=measurement.displayNames[id];




inclusiveKey = displayName.owner + ' > ' + displayName.current;

candidates[inclusiveKey] = candidates[inclusiveKey] || {
componentName:inclusiveKey,
time:0,
count:0};


if(measurement.inclusive[id]){
candidates[inclusiveKey].time += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[inclusiveKey].count += measurement.counts[id];}}}





var arr=[];
for(inclusiveKey in candidates) {
if(candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD){
arr.push(candidates[inclusiveKey]);}}



arr.sort(function(a,b){
return b.time - a.time;});


return arr;}


function getUnchangedComponents(measurement){



var cleanComponents={};
var dirtyLeafIDs=Object.keys(measurement.writes);
var allIDs=assign({},measurement.exclusive,measurement.inclusive);

for(var id in allIDs) {
var isDirty=false;


for(var i=0;i < dirtyLeafIDs.length;i++) {
if(dirtyLeafIDs[i].indexOf(id) === 0){
isDirty = true;
break;}}


if(!isDirty && measurement.counts[id] > 0){
cleanComponents[id] = true;}}


return cleanComponents;}


var ReactDefaultPerfAnalysis={
getExclusiveSummary:getExclusiveSummary,
getInclusiveSummary:getInclusiveSummary,
getDOMSummary:getDOMSummary,
getTotalTime:getTotalTime};


module.exports = ReactDefaultPerfAnalysis;
});
__d('ReactMount',["DOMProperty","ReactBrowserEventEmitter","ReactCurrentOwner","ReactElement","ReactEmptyComponent","ReactInstanceHandles","ReactInstanceMap","ReactMarkupChecksum","ReactPerf","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","containsNode","instantiateReactComponent","invariant","setInnerHTML","shouldUpdateReactComponent","validateDOMNesting","warning"],function(global, require, module, exports) {  'use strict';












var DOMProperty=require('DOMProperty');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMarkupChecksum=require('ReactMarkupChecksum');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var emptyObject=require('emptyObject');
var containsNode=require('containsNode');
var instantiateReactComponent=require('instantiateReactComponent');
var invariant=require('invariant');
var setInnerHTML=require('setInnerHTML');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var validateDOMNesting=require('validateDOMNesting');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;

var ATTR_NAME=DOMProperty.ID_ATTRIBUTE_NAME;
var nodeCache={};

var ELEMENT_NODE_TYPE=1;
var DOC_NODE_TYPE=9;
var DOCUMENT_FRAGMENT_NODE_TYPE=11;


var instancesByReactRootID={};


var containersByReactRootID={};

if(__DEV__){

var rootElementsByReactRootID={};}



var findComponentRootReusableArray=[];







function firstDifferenceIndex(string1,string2){
var minLen=Math.min(string1.length,string2.length);
for(var i=0;i < minLen;i++) {
if(string1.charAt(i) !== string2.charAt(i)){
return i;}}


return string1.length === string2.length?-1:minLen;}







function getReactRootElementInContainer(container){
if(!container){
return null;}


if(container.nodeType === DOC_NODE_TYPE){
return container.documentElement;}else 
{
return container.firstChild;}}







function getReactRootID(container){
var rootElement=getReactRootElementInContainer(container);
return rootElement && ReactMount.getID(rootElement);}












function getID(node){
var id=internalGetID(node);
if(id){
if(nodeCache.hasOwnProperty(id)){
var cached=nodeCache[id];
if(cached !== node){
invariant(
!isValid(cached,id),
'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
ATTR_NAME,id);


nodeCache[id] = node;}}else 

{
nodeCache[id] = node;}}



return id;}


function internalGetID(node){



return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';}








function setID(node,id){
var oldID=internalGetID(node);
if(oldID !== id){
delete nodeCache[oldID];}

node.setAttribute(ATTR_NAME,id);
nodeCache[id] = node;}









function getNode(id){
if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id],id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}









function getNodeFromInstance(instance){
var id=ReactInstanceMap.get(instance)._rootNodeID;
if(ReactEmptyComponent.isNullComponentID(id)){
return null;}

if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id],id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}












function isValid(node,id){
if(node){
invariant(
internalGetID(node) === id,
'ReactMount: Unexpected modification of `%s`',
ATTR_NAME);


var container=ReactMount.findReactContainerForID(id);
if(container && containsNode(container,node)){
return true;}}



return false;}







function purgeID(id){
delete nodeCache[id];}


var deepestNodeSoFar=null;
function findDeepestCachedAncestorImpl(ancestorID){
var ancestor=nodeCache[ancestorID];
if(ancestor && isValid(ancestor,ancestorID)){
deepestNodeSoFar = ancestor;}else 
{


return false;}}






function findDeepestCachedAncestor(targetID){
deepestNodeSoFar = null;
ReactInstanceHandles.traverseAncestors(
targetID,
findDeepestCachedAncestorImpl);


var foundNode=deepestNodeSoFar;
deepestNodeSoFar = null;
return foundNode;}











function mountComponentIntoNode(
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup,
context){
if(__DEV__){
if(context === emptyObject){
context = {};}

var tag=container.nodeName.toLowerCase();
context[validateDOMNesting.ancestorInfoContextKey] = 
validateDOMNesting.updatedAncestorInfo(null,tag,null);}

var markup=ReactReconciler.mountComponent(
componentInstance,rootID,transaction,context);

componentInstance._renderedComponent._topLevelWrapper = componentInstance;
ReactMount._mountImageIntoNode(markup,container,shouldReuseMarkup);}










function batchedMountComponentIntoNode(
componentInstance,
rootID,
container,
shouldReuseMarkup,
context){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode,
null,
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup,
context);

ReactUpdates.ReactReconcileTransaction.release(transaction);}











function unmountComponentFromNode(instance,container){
ReactReconciler.unmountComponent(instance);

if(container.nodeType === DOC_NODE_TYPE){
container = container.documentElement;}



while(container.lastChild) {
container.removeChild(container.lastChild);}}








var TopLevelWrapper=function(){};
TopLevelWrapper.prototype.render = function(){

return this.props;};




















var ReactMount={

_instancesByReactRootID:instancesByReactRootID,









scrollMonitor:function(container,renderCallback){
renderCallback();},









_updateRootComponent:function(
prevComponent,
nextElement,
container,
callback){
ReactMount.scrollMonitor(container,function(){
ReactUpdateQueue.enqueueElementInternal(prevComponent,nextElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent,callback);}});



if(__DEV__){

rootElementsByReactRootID[getReactRootID(container)] = 
getReactRootElementInContainer(container);}


return prevComponent;},









_registerComponent:function(nextComponent,container){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE || 
container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE),

'_registerComponent(...): Target container is not a DOM element.');


ReactBrowserEventEmitter.ensureScrollValueMonitoring();

var reactRootID=ReactMount.registerContainer(container);
instancesByReactRootID[reactRootID] = nextComponent;
return reactRootID;},









_renderNewRootComponent:function(
nextElement,
container,
shouldReuseMarkup,
context)
{



warning(
ReactCurrentOwner.current == null,
'_renderNewRootComponent(): Render methods should be a pure function ' + 
'of props and state; triggering nested component updates from ' + 
'render is not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate. Check the render method of %s.',
ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 
'ReactCompositeComponent');


var componentInstance=instantiateReactComponent(nextElement,null);
var reactRootID=ReactMount._registerComponent(
componentInstance,
container);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode,
componentInstance,
reactRootID,
container,
shouldReuseMarkup,
context);


if(__DEV__){

rootElementsByReactRootID[reactRootID] = 
getReactRootElementInContainer(container);}


return componentInstance;},















renderSubtreeIntoContainer:function(parentComponent,nextElement,container,callback){
invariant(
parentComponent != null && parentComponent._reactInternalInstance != null,
'parentComponent must be a valid React Component');

return ReactMount._renderSubtreeIntoContainer(
parentComponent,
nextElement,
container,
callback);},



_renderSubtreeIntoContainer:function(parentComponent,nextElement,container,callback){
invariant(
ReactElement.isValidElement(nextElement),
'React.render(): Invalid component element.%s',

typeof nextElement === 'string'?
' Instead of passing an element string, make sure to instantiate ' + 
'it by passing it to React.createElement.':
typeof nextElement === 'function'?
' Instead of passing a component class, make sure to instantiate ' + 
'it by passing it to React.createElement.':

nextElement != null && nextElement.props !== undefined?
' This may be caused by unintentionally loading two independent ' + 
'copies of React.':
'');



warning(
!container || !container.tagName || 
container.tagName.toUpperCase() !== 'BODY',
'render(): Rendering components directly into document.body is ' + 
'discouraged, since its children are often manipulated by third-party ' + 
'scripts and browser extensions. This may lead to subtle ' + 
'reconciliation issues. Try rendering into a container element created ' + 
'for your app.');


var nextWrappedElement=new ReactElement(
TopLevelWrapper,
null,
null,
null,
nextElement);


var prevComponent=instancesByReactRootID[getReactRootID(container)];

if(prevComponent){
var prevWrappedElement=prevComponent._currentElement;
var prevElement=prevWrappedElement.props;
if(shouldUpdateReactComponent(prevElement,nextElement)){
return ReactMount._updateRootComponent(
prevComponent,
nextWrappedElement,
container,
callback).
_renderedComponent.getPublicInstance();}else 
{
ReactMount.unmountComponentAtNode(container);}}



var reactRootElement=getReactRootElementInContainer(container);
var containerHasReactMarkup=
reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

if(__DEV__){
if(!containerHasReactMarkup || reactRootElement.nextSibling){
var rootElementSibling=reactRootElement;
while(rootElementSibling) {
if(ReactMount.isRenderedByReact(rootElementSibling)){
warning(
false,
'render(): Target node has markup rendered by React, but there ' + 
'are unrelated nodes as well. This is most commonly caused by ' + 
'white-space inserted around server-rendered markup.');

break;}


rootElementSibling = rootElementSibling.nextSibling;}}}




var shouldReuseMarkup=containerHasReactMarkup && !prevComponent;
var component=ReactMount._renderNewRootComponent(
nextWrappedElement,
container,
shouldReuseMarkup,
parentComponent != null?
parentComponent._reactInternalInstance._processChildContext(
parentComponent._reactInternalInstance._context):

emptyObject).
_renderedComponent.getPublicInstance();
if(callback){
callback.call(component);}

return component;},















render:function(nextElement,container,callback){
return ReactMount._renderSubtreeIntoContainer(null,nextElement,container,callback);},










registerContainer:function(container){
var reactRootID=getReactRootID(container);
if(reactRootID){

reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);}

if(!reactRootID){

reactRootID = ReactInstanceHandles.createReactRootID();}

containersByReactRootID[reactRootID] = container;
return reactRootID;},









unmountComponentAtNode:function(container){




warning(
ReactCurrentOwner.current == null,
'unmountComponentAtNode(): Render methods should be a pure function ' + 
'of props and state; triggering nested component updates from render ' + 
'is not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate. Check the render method of %s.',
ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 
'ReactCompositeComponent');


invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE || 
container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE),

'unmountComponentAtNode(...): Target container is not a DOM element.');


var reactRootID=getReactRootID(container);
var component=instancesByReactRootID[reactRootID];
if(!component){
return false;}

ReactUpdates.batchedUpdates(
unmountComponentFromNode,
component,
container);

delete instancesByReactRootID[reactRootID];
delete containersByReactRootID[reactRootID];
if(__DEV__){
delete rootElementsByReactRootID[reactRootID];}

return true;},









findReactContainerForID:function(id){
var reactRootID=ReactInstanceHandles.getReactRootIDFromNodeID(id);
var container=containersByReactRootID[reactRootID];

if(__DEV__){
var rootElement=rootElementsByReactRootID[reactRootID];
if(rootElement && rootElement.parentNode !== container){
warning(


internalGetID(rootElement) === reactRootID,
'ReactMount: Root element ID differed from reactRootID.');

var containerChild=container.firstChild;
if(containerChild && 
reactRootID === internalGetID(containerChild)){




rootElementsByReactRootID[reactRootID] = containerChild;}else 
{
warning(
false,
'ReactMount: Root element has been removed from its original ' + 
'container. New container: %s',
rootElement.parentNode);}}}





return container;},








findReactNodeByID:function(id){
var reactRoot=ReactMount.findReactContainerForID(id);
return ReactMount.findComponentRoot(reactRoot,id);},









isRenderedByReact:function(node){
if(node.nodeType !== 1){

return false;}

var id=ReactMount.getID(node);
return id?id.charAt(0) === SEPARATOR:false;},










getFirstReactDOM:function(node){
var current=node;
while(current && current.parentNode !== current) {
if(ReactMount.isRenderedByReact(current)){
return current;}

current = current.parentNode;}

return null;},












findComponentRoot:function(ancestorNode,targetID){
var firstChildren=findComponentRootReusableArray;
var childIndex=0;

var deepestAncestor=findDeepestCachedAncestor(targetID) || ancestorNode;

firstChildren[0] = deepestAncestor.firstChild;
firstChildren.length = 1;

while(childIndex < firstChildren.length) {
var child=firstChildren[childIndex++];
var targetChild;

while(child) {
var childID=ReactMount.getID(child);
if(childID){





if(targetID === childID){
targetChild = child;}else 
if(ReactInstanceHandles.isAncestorIDOf(childID,targetID)){




firstChildren.length = childIndex = 0;
firstChildren.push(child.firstChild);}}else 


{





firstChildren.push(child.firstChild);}


child = child.nextSibling;}


if(targetChild){



firstChildren.length = 0;

return targetChild;}}



firstChildren.length = 0;

invariant(
false,
'findComponentRoot(..., %s): Unable to find element. This probably ' + 
'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 
'usually due to forgetting a <tbody> when using tables, nesting tags ' + 
'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 
'parent. ' + 
'Try inspecting the child nodes of the element with React ID `%s`.',
targetID,
ReactMount.getID(ancestorNode));},



_mountImageIntoNode:function(markup,container,shouldReuseMarkup){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE || 
container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE),

'mountComponentIntoNode(...): Target container is not valid.');


if(shouldReuseMarkup){
var rootElement=getReactRootElementInContainer(container);
if(ReactMarkupChecksum.canReuseMarkup(markup,rootElement)){
return;}else 
{
var checksum=rootElement.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

var rootMarkup=rootElement.outerHTML;
rootElement.setAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
checksum);


var diffIndex=firstDifferenceIndex(markup,rootMarkup);
var difference=' (client) ' + 
markup.substring(diffIndex - 20,diffIndex + 20) + 
'\n (server) ' + rootMarkup.substring(diffIndex - 20,diffIndex + 20);

invariant(
container.nodeType !== DOC_NODE_TYPE,
'You\'re trying to render a component to the document using ' + 
'server rendering but the checksum was invalid. This usually ' + 
'means you rendered a different component type or props on ' + 
'the client from the one on the server, or your render() ' + 
'methods are impure. React cannot handle this case due to ' + 
'cross-browser quirks by rendering at the document root. You ' + 
'should look for environment dependent code in your components ' + 
'and ensure the props are the same client and server side:\n%s',
difference);


if(__DEV__){
warning(
false,
'React attempted to reuse markup in a container but the ' + 
'checksum was invalid. This generally means that you are ' + 
'using server rendering and the markup generated on the ' + 
'server was not what the client was expecting. React injected ' + 
'new markup to compensate which works but you have lost many ' + 
'of the benefits of server rendering. Instead, figure out ' + 
'why the markup being generated is different on the client ' + 
'or server:\n%s',
difference);}}}





invariant(
container.nodeType !== DOC_NODE_TYPE,
'You\'re trying to render a component to the document but ' + 
'you didn\'t use server rendering. We can\'t do this ' + 
'without using server rendering due to cross-browser quirks. ' + 
'See React.renderToString() for server rendering.');


setInnerHTML(container,markup);},






getReactRootID:getReactRootID,

getID:getID,

setID:setID,

getNode:getNode,

getNodeFromInstance:getNodeFromInstance,

purgeID:purgeID};


ReactPerf.measureMethods(ReactMount,'ReactMount',{
_renderNewRootComponent:'_renderNewRootComponent',
_mountImageIntoNode:'_mountImageIntoNode'});


module.exports = ReactMount;
});
__d('ReactBrowserEventEmitter',["EventConstants","EventPluginHub","EventPluginRegistry","ReactEventEmitterMixin","ViewportMetrics","Object.assign","isEventSupported"],function(global, require, module, exports) {  'use strict';













var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPluginRegistry=require('EventPluginRegistry');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ViewportMetrics=require('ViewportMetrics');

var assign=require('Object.assign');
var isEventSupported=require('isEventSupported');
























































var alreadyListeningTo={};
var isMonitoringScrollValue=false;
var reactTopListenersCounter=0;




var topEventMapping={
topBlur:'blur',
topChange:'change',
topClick:'click',
topCompositionEnd:'compositionend',
topCompositionStart:'compositionstart',
topCompositionUpdate:'compositionupdate',
topContextMenu:'contextmenu',
topCopy:'copy',
topCut:'cut',
topDoubleClick:'dblclick',
topDrag:'drag',
topDragEnd:'dragend',
topDragEnter:'dragenter',
topDragExit:'dragexit',
topDragLeave:'dragleave',
topDragOver:'dragover',
topDragStart:'dragstart',
topDrop:'drop',
topFocus:'focus',
topInput:'input',
topKeyDown:'keydown',
topKeyPress:'keypress',
topKeyUp:'keyup',
topMouseDown:'mousedown',
topMouseMove:'mousemove',
topMouseOut:'mouseout',
topMouseOver:'mouseover',
topMouseUp:'mouseup',
topPaste:'paste',
topScroll:'scroll',
topSelectionChange:'selectionchange',
topTextInput:'textInput',
topTouchCancel:'touchcancel',
topTouchEnd:'touchend',
topTouchMove:'touchmove',
topTouchStart:'touchstart',
topWheel:'wheel'};





var topListenersIDKey='_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt){


if(!Object.prototype.hasOwnProperty.call(mountAt,topListenersIDKey)){
mountAt[topListenersIDKey] = reactTopListenersCounter++;
alreadyListeningTo[mountAt[topListenersIDKey]] = {};}

return alreadyListeningTo[mountAt[topListenersIDKey]];}












var ReactBrowserEventEmitter=assign({},ReactEventEmitterMixin,{




ReactEventListener:null,

injection:{



injectReactEventListener:function(ReactEventListener){
ReactEventListener.setHandleTopLevel(
ReactBrowserEventEmitter.handleTopLevel);

ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;}},








setEnabled:function(enabled){
if(ReactBrowserEventEmitter.ReactEventListener){
ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);}},






isEnabled:function(){
return !!(
ReactBrowserEventEmitter.ReactEventListener && 
ReactBrowserEventEmitter.ReactEventListener.isEnabled());},
























listenTo:function(registrationName,contentDocumentHandle){
var mountAt=contentDocumentHandle;
var isListening=getListeningForDocument(mountAt);
var dependencies=
EventPluginRegistry.registrationNameDependencies[registrationName];

var topLevelTypes=EventConstants.topLevelTypes;
for(var i=0;i < dependencies.length;i++) {
var dependency=dependencies[i];
if(!(
isListening.hasOwnProperty(dependency) && 
isListening[dependency]))
{
if(dependency === topLevelTypes.topWheel){
if(isEventSupported('wheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'wheel',
mountAt);}else 

if(isEventSupported('mousewheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'mousewheel',
mountAt);}else 

{


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'DOMMouseScroll',
mountAt);}}else 


if(dependency === topLevelTypes.topScroll){

if(isEventSupported('scroll',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topScroll,
'scroll',
mountAt);}else 

{
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topScroll,
'scroll',
ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);}}else 


if(dependency === topLevelTypes.topFocus || 
dependency === topLevelTypes.topBlur){

if(isEventSupported('focus',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topFocus,
'focus',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topBlur,
'blur',
mountAt);}else 

if(isEventSupported('focusin')){


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topFocus,
'focusin',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topBlur,
'focusout',
mountAt);}




isListening[topLevelTypes.topBlur] = true;
isListening[topLevelTypes.topFocus] = true;}else 
if(topEventMapping.hasOwnProperty(dependency)){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
dependency,
topEventMapping[dependency],
mountAt);}



isListening[dependency] = true;}}},




trapBubbledEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelType,
handlerBaseName,
handle);},



trapCapturedEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelType,
handlerBaseName,
handle);},











ensureScrollValueMonitoring:function(){
if(!isMonitoringScrollValue){
var refresh=ViewportMetrics.refreshScrollValues;
ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
isMonitoringScrollValue = true;}},



eventNameDispatchConfigs:EventPluginHub.eventNameDispatchConfigs,

registrationNameModules:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners});



module.exports = ReactBrowserEventEmitter;
});
__d('ViewportMetrics',[],function(global, require, module, exports) {  'use strict';












var ViewportMetrics={

currentScrollLeft:0,

currentScrollTop:0,

refreshScrollValues:function(scrollPosition){
ViewportMetrics.currentScrollLeft = scrollPosition.x;
ViewportMetrics.currentScrollTop = scrollPosition.y;}};




module.exports = ViewportMetrics;
});
__d('isEventSupported',["ExecutionEnvironment"],function(global, require, module, exports) {  'use strict';












var ExecutionEnvironment=require('ExecutionEnvironment');

var useHasFeature;
if(ExecutionEnvironment.canUseDOM){
useHasFeature = 
document.implementation && 
document.implementation.hasFeature && 


document.implementation.hasFeature('','') !== true;}


/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix,capture){
if(!ExecutionEnvironment.canUseDOM || 
capture && !('addEventListener' in document)){
return false;}


var eventName='on' + eventNameSuffix;
var isSupported=(eventName in document);

if(!isSupported){
var element=document.createElement('div');
element.setAttribute(eventName,'return;');
isSupported = typeof element[eventName] === 'function';}


if(!isSupported && useHasFeature && eventNameSuffix === 'wheel'){

isSupported = document.implementation.hasFeature('Events.wheel','3.0');}


return isSupported;}


module.exports = isEventSupported;
});
__d('ReactMarkupChecksum',["adler32"],function(global, require, module, exports) {  'use strict';












var adler32=require('adler32');

var ReactMarkupChecksum={
CHECKSUM_ATTR_NAME:'data-react-checksum',





addChecksumToMarkup:function(markup){
var checksum=adler32(markup);
return markup.replace(
'>',
' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">');},








canReuseMarkup:function(markup,element){
var existingChecksum=element.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

existingChecksum = existingChecksum && parseInt(existingChecksum,10);
var markupChecksum=adler32(markup);
return markupChecksum === existingChecksum;}};



module.exports = ReactMarkupChecksum;
});
__d('adler32',[],function(global, require, module, exports) {  'use strict';












var MOD=65521;





function adler32(data){
var a=1;
var b=0;
for(var i=0;i < data.length;i++) {
a = (a + data.charCodeAt(i)) % MOD;
b = (b + a) % MOD;}

return a | b << 16;}


module.exports = adler32;
});
__d('containsNode',["isTextNode"],function(global, require, module, exports) {  var 











isTextNode=require('isTextNode');










function containsNode(outerNode,innerNode){
if(!outerNode || !innerNode){
return false;}else 
if(outerNode === innerNode){
return true;}else 
if(isTextNode(outerNode)){
return false;}else 
if(isTextNode(innerNode)){
return containsNode(outerNode,innerNode.parentNode);}else 
if(outerNode.contains){
return outerNode.contains(innerNode);}else 
if(outerNode.compareDocumentPosition){
return !!(outerNode.compareDocumentPosition(innerNode) & 16);}else 
{
return false;}}



module.exports = containsNode;
});
__d('isTextNode',["isNode"],function(global, require, module, exports) {  var 











isNode=require('isNode');





function isTextNode(object){
return isNode(object) && object.nodeType == 3;}


module.exports = isTextNode;
});
__d('setInnerHTML',["ExecutionEnvironment"],function(global, require, module, exports) {  'use strict';














var ExecutionEnvironment=require('ExecutionEnvironment');

var WHITESPACE_TEST=/^[ \r\n\t\f]/;
var NONVISIBLE_TEST=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;









var setInnerHTML=function(node,html){
node.innerHTML = html;};



if(typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction){
setInnerHTML = function(node,html){
MSApp.execUnsafeLocalFunction(function(){
node.innerHTML = html;});};}




if(ExecutionEnvironment.canUseDOM){






var testElement=document.createElement('div');
testElement.innerHTML = ' ';
if(testElement.innerHTML === ''){
setInnerHTML = function(node,html){





if(node.parentNode){
node.parentNode.replaceChild(node,node);}






if(WHITESPACE_TEST.test(html) || 
html[0] === '<' && NONVISIBLE_TEST.test(html)){






node.innerHTML = String.fromCharCode(0xFEFF) + html;



var textNode=node.firstChild;
if(textNode.data.length === 1){
node.removeChild(textNode);}else 
{
textNode.deleteData(0,1);}}else 

{
node.innerHTML = html;}};}}





module.exports = setInnerHTML;
});
__d('validateDOMNesting',["Object.assign","emptyFunction","warning"],function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var warning=require('warning');

var validateDOMNesting=emptyFunction;

if(__DEV__){












var specialTags=[
'address','applet','area','article','aside','base','basefont',
'bgsound','blockquote','body','br','button','caption','center','col',
'colgroup','dd','details','dir','div','dl','dt','embed','fieldset',
'figcaption','figure','footer','form','frame','frameset','h1','h2',
'h3','h4','h5','h6','head','header','hgroup','hr','html','iframe',
'img','input','isindex','li','link','listing','main','marquee',
'menu','menuitem','meta','nav','noembed','noframes','noscript',
'object','ol','p','param','plaintext','pre','script','section',
'select','source','style','summary','table','tbody','td','template',
'textarea','tfoot','th','thead','title','tr','track','ul','wbr',
'xmp'];



var inScopeTags=[
'applet','caption','html','table','td','th','marquee','object',
'template',




'foreignObject','desc','title'];



var buttonScopeTags=inScopeTags.concat(['button']);


var impliedEndTags=
['dd','dt','li','option','optgroup','p','rp','rt'];

var emptyAncestorInfo={
parentTag:null,

formTag:null,
aTagInScope:null,
buttonTagInScope:null,
nobrTagInScope:null,
pTagInButtonScope:null,

listItemTagAutoclosing:null,
dlItemTagAutoclosing:null};


var updatedAncestorInfo=function(oldInfo,tag,instance){
var ancestorInfo=assign({},oldInfo || emptyAncestorInfo);
var info={tag:tag,instance:instance};

if(inScopeTags.indexOf(tag) !== -1){
ancestorInfo.aTagInScope = null;
ancestorInfo.buttonTagInScope = null;
ancestorInfo.nobrTagInScope = null;}

if(buttonScopeTags.indexOf(tag) !== -1){
ancestorInfo.pTagInButtonScope = null;}




if(
specialTags.indexOf(tag) !== -1 && 
tag !== 'address' && tag !== 'div' && tag !== 'p')
{
ancestorInfo.listItemTagAutoclosing = null;
ancestorInfo.dlItemTagAutoclosing = null;}


ancestorInfo.parentTag = info;

if(tag === 'form'){
ancestorInfo.formTag = info;}

if(tag === 'a'){
ancestorInfo.aTagInScope = info;}

if(tag === 'button'){
ancestorInfo.buttonTagInScope = info;}

if(tag === 'nobr'){
ancestorInfo.nobrTagInScope = info;}

if(tag === 'p'){
ancestorInfo.pTagInButtonScope = info;}

if(tag === 'li'){
ancestorInfo.listItemTagAutoclosing = info;}

if(tag === 'dd' || tag === 'dt'){
ancestorInfo.dlItemTagAutoclosing = info;}


return ancestorInfo;};





var isTagValidWithParent=function(tag,parentTag){

switch(parentTag){

case 'select':
return tag === 'option' || tag === 'optgroup' || tag === '#text';
case 'optgroup':
return tag === 'option' || tag === '#text';


case 'option':
return tag === '#text';







case 'tr':
return (
tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || 
tag === 'template');



case 'tbody':
case 'thead':
case 'tfoot':
return (
tag === 'tr' || tag === 'style' || tag === 'script' || 
tag === 'template');



case 'colgroup':
return tag === 'col' || tag === 'template';


case 'table':
return (
tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || 
tag === 'tfoot' || tag === 'thead' || tag === 'style' || 
tag === 'script' || tag === 'template');



case 'head':
return (
tag === 'base' || tag === 'basefont' || tag === 'bgsound' || 
tag === 'link' || tag === 'meta' || tag === 'title' || 
tag === 'noscript' || tag === 'noframes' || tag === 'style' || 
tag === 'script' || tag === 'template');



case 'html':
return tag === 'head' || tag === 'body';}





switch(tag){
case 'h1':
case 'h2':
case 'h3':
case 'h4':
case 'h5':
case 'h6':
return (
parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && 
parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6');


case 'rp':
case 'rt':
return impliedEndTags.indexOf(parentTag) === -1;

case 'caption':
case 'col':
case 'colgroup':
case 'frame':
case 'head':
case 'tbody':
case 'td':
case 'tfoot':
case 'th':
case 'thead':
case 'tr':




return parentTag == null;}


return true;};





var findInvalidAncestorForTag=function(tag,ancestorInfo){
switch(tag){
case 'address':
case 'article':
case 'aside':
case 'blockquote':
case 'center':
case 'details':
case 'dialog':
case 'dir':
case 'div':
case 'dl':
case 'fieldset':
case 'figcaption':
case 'figure':
case 'footer':
case 'header':
case 'hgroup':
case 'main':
case 'menu':
case 'nav':
case 'ol':
case 'p':
case 'section':
case 'summary':
case 'ul':

case 'pre':
case 'listing':

case 'table':

case 'hr':

case 'xmp':

case 'h1':
case 'h2':
case 'h3':
case 'h4':
case 'h5':
case 'h6':
return ancestorInfo.pTagInButtonScope;

case 'form':
return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

case 'li':
return ancestorInfo.listItemTagAutoclosing;

case 'dd':
case 'dt':
return ancestorInfo.dlItemTagAutoclosing;

case 'button':
return ancestorInfo.buttonTagInScope;

case 'a':


return ancestorInfo.aTagInScope;

case 'nobr':
return ancestorInfo.nobrTagInScope;}


return null;};






var findOwnerStack=function(instance){
if(!instance){
return [];}


var stack=[];

do {

stack.push(instance);}while(
instance = instance._currentElement._owner);
stack.reverse();
return stack;};


var didWarn={};

validateDOMNesting = function(childTag,childInstance,ancestorInfo){
ancestorInfo = ancestorInfo || emptyAncestorInfo;
var parentInfo=ancestorInfo.parentTag;
var parentTag=parentInfo && parentInfo.tag;

var invalidParent=
isTagValidWithParent(childTag,parentTag)?null:parentInfo;
var invalidAncestor=
invalidParent?null:findInvalidAncestorForTag(childTag,ancestorInfo);
var problematic=invalidParent || invalidAncestor;

if(problematic){
var ancestorTag=problematic.tag;
var ancestorInstance=problematic.instance;

var childOwner=childInstance && childInstance._currentElement._owner;
var ancestorOwner=
ancestorInstance && ancestorInstance._currentElement._owner;

var childOwners=findOwnerStack(childOwner);
var ancestorOwners=findOwnerStack(ancestorOwner);

var minStackLen=Math.min(childOwners.length,ancestorOwners.length);
var i;

var deepestCommon=-1;
for(i = 0;i < minStackLen;i++) {
if(childOwners[i] === ancestorOwners[i]){
deepestCommon = i;}else 
{
break;}}



var UNKNOWN='(unknown)';
var childOwnerNames=childOwners.slice(deepestCommon + 1).map(
function(inst){return inst.getName() || UNKNOWN;});

var ancestorOwnerNames=ancestorOwners.slice(deepestCommon + 1).map(
function(inst){return inst.getName() || UNKNOWN;});

var ownerInfo=[].concat(


deepestCommon !== -1?
childOwners[deepestCommon].getName() || UNKNOWN:
[],
ancestorOwnerNames,
ancestorTag,

invalidAncestor?['...']:[],
childOwnerNames,
childTag).
join(' > ');

var warnKey=
!!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
if(didWarn[warnKey]){
return;}

didWarn[warnKey] = true;

if(invalidParent){
var info='';
if(ancestorTag === 'table' && childTag === 'tr'){
info += 
' Add a <tbody> to your code to match the DOM tree generated by ' + 
'the browser.';}

warning(
false,
'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 
'See %s.%s',
childTag,
ancestorTag,
ownerInfo,
info);}else 

{
warning(
false,
'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + 
'<%s>. See %s.',
childTag,
ancestorTag,
ownerInfo);}}};





validateDOMNesting.ancestorInfoContextKey = 
'__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);

validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;


validateDOMNesting.isTagValidInContext = function(tag,ancestorInfo){
ancestorInfo = ancestorInfo || emptyAncestorInfo;
var parentInfo=ancestorInfo.parentTag;
var parentTag=parentInfo && parentInfo.tag;
return (
isTagValidWithParent(tag,parentTag) && 
!findInvalidAncestorForTag(tag,ancestorInfo));};}




module.exports = validateDOMNesting;
});
__d('AppStateIOS',["Map","NativeModules","RCTDeviceEventEmitter","logError","invariant"],function(global, require, module, exports) {  'use strict';












var Map=require('Map');
var NativeModules=require('NativeModules');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTAppState=NativeModules.AppState;

var logError=require('logError');
var invariant=require('invariant');

var _eventHandlers={
change:new Map(),
memoryWarning:new Map()};





















































var AppStateIOS={





addEventListener:function(
type,
handler)
{
invariant(
['change','memoryWarning'].indexOf(type) !== -1,
'Trying to subscribe to unknown event: "%s"',type);

if(type === 'change'){
_eventHandlers[type].set(handler,RCTDeviceEventEmitter.addListener(
'appStateDidChange',
function(appStateData){
handler(appStateData.app_state);}));}else 


if(type === 'memoryWarning'){
_eventHandlers[type].set(handler,RCTDeviceEventEmitter.addListener(
'memoryWarning',
handler));}},







removeEventListener:function(
type,
handler)
{
invariant(
['change','memoryWarning'].indexOf(type) !== -1,
'Trying to remove listener for unknown event: "%s"',type);

if(!_eventHandlers[type].has(handler)){
return;}

_eventHandlers[type].get(handler).remove();
_eventHandlers[type].delete(handler);},


currentState:RCTAppState && RCTAppState.initialAppState};



RCTDeviceEventEmitter.addListener(
'appStateDidChange',
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;});



RCTAppState.getCurrentAppState(
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;},

logError);


module.exports = AppStateIOS;
});
__d('BackAndroid',["warning"],function(global, require, module, exports) {  'use strict';














var warning=require('warning');

function platformWarn(){
warning(false,'BackAndroid is not supported on this platform.');}


var BackAndroid={
exitApp:platformWarn,
addEventListener:platformWarn,
removeEventListener:platformWarn};


module.exports = BackAndroid;
});
__d('CameraRoll',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","deepFreezeAndThrowOnMutationInDev","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ReactPropTypes=require('ReactPropTypes');
var RCTCameraRollManager=require('NativeModules').CameraRollManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var deepFreezeAndThrowOnMutationInDev=
require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');

var GROUP_TYPES_OPTIONS=[
'Album',
'All',
'Event',
'Faces',
'Library',
'PhotoStream',
'SavedPhotos'];


var ASSET_TYPE_OPTIONS=[
'All',
'Videos',
'Photos'];




deepFreezeAndThrowOnMutationInDev(GROUP_TYPES_OPTIONS);
deepFreezeAndThrowOnMutationInDev(ASSET_TYPE_OPTIONS);




var getPhotosParamChecker=createStrictShapeTypeChecker({




first:ReactPropTypes.number.isRequired,





after:ReactPropTypes.string,




groupTypes:ReactPropTypes.oneOf(GROUP_TYPES_OPTIONS),





groupName:ReactPropTypes.string,




assetType:ReactPropTypes.oneOf(ASSET_TYPE_OPTIONS),




mimeTypes:ReactPropTypes.arrayOf(ReactPropTypes.string)});





var getPhotosReturnChecker=createStrictShapeTypeChecker({
edges:ReactPropTypes.arrayOf(createStrictShapeTypeChecker({
node:createStrictShapeTypeChecker({
type:ReactPropTypes.string.isRequired,
group_name:ReactPropTypes.string.isRequired,
image:createStrictShapeTypeChecker({
uri:ReactPropTypes.string.isRequired,
height:ReactPropTypes.number.isRequired,
width:ReactPropTypes.number.isRequired,
isStored:ReactPropTypes.bool}).
isRequired,
timestamp:ReactPropTypes.number.isRequired,
location:createStrictShapeTypeChecker({
latitude:ReactPropTypes.number,
longitude:ReactPropTypes.number,
altitude:ReactPropTypes.number,
heading:ReactPropTypes.number,
speed:ReactPropTypes.number})}).

isRequired})).
isRequired,
page_info:createStrictShapeTypeChecker({
has_next_page:ReactPropTypes.bool.isRequired,
start_cursor:ReactPropTypes.string,
end_cursor:ReactPropTypes.string}).
isRequired});var 





CameraRoll=(function(){function CameraRoll(){_classCallCheck(this,CameraRoll);}_createClass(CameraRoll,null,[{key:'saveImageWithTag',value:



















function saveImageWithTag(tag,successCallback,errorCallback){
invariant(
typeof tag === 'string',
'CameraRoll.saveImageWithTag tag must be a valid string.');

RCTCameraRollManager.saveImageWithTag(
tag,
function(imageTag){
successCallback && successCallback(imageTag);},

function(errorMessage){
errorCallback && errorCallback(errorMessage);});}},{key:'getPhotos',value:












function getPhotos(params,callback,errorCallback){
var metaCallback=callback;
if(__DEV__){
getPhotosParamChecker({params:params},'params','CameraRoll.getPhotos');
invariant(
typeof callback === 'function',
'CameraRoll.getPhotos callback must be a valid function.');

invariant(
typeof errorCallback === 'function',
'CameraRoll.getPhotos errorCallback must be a valid function.');}


if(__DEV__){
metaCallback = function(response){
getPhotosReturnChecker(
{response:response},
'response',
'CameraRoll.getPhotos callback');

callback(response);};}


RCTCameraRollManager.getPhotos(params,metaCallback,errorCallback);}}]);return CameraRoll;})();



CameraRoll.GroupTypesOptions = GROUP_TYPES_OPTIONS;
CameraRoll.AssetTypeOptions = ASSET_TYPE_OPTIONS;

module.exports = CameraRoll;
});
__d('ImagePickerIOS',["NativeModules"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var RCTImagePicker=require('NativeModules').ImagePickerIOS;

var ImagePickerIOS={
canRecordVideos:function(callback){
return RCTImagePicker.canRecordVideos(callback);},

canUseCamera:function(callback){
return RCTImagePicker.canUseCamera(callback);},

openCameraDialog:function(config,successCallback,cancelCallback){
config = _extends({
videoMode:false},
config);

return RCTImagePicker.openCameraDialog(config,successCallback,cancelCallback);},

openSelectDialog:function(config,successCallback,cancelCallback){
config = _extends({
showImages:true,
showVideos:false},
config);

return RCTImagePicker.openSelectDialog(config,successCallback,cancelCallback);}};



module.exports = ImagePickerIOS;
});
__d('LayoutAnimation',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","keyMirror"],function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var keyMirror=require('keyMirror');

var TypesEnum={
spring:true,
linear:true,
easeInEaseOut:true,
easeIn:true,
easeOut:true,
keyboard:true};

var Types=keyMirror(TypesEnum);

var PropertiesEnum={
opacity:true,
scaleXY:true};

var Properties=keyMirror(PropertiesEnum);

var animChecker=createStrictShapeTypeChecker({
duration:PropTypes.number,
delay:PropTypes.number,
springDamping:PropTypes.number,
initialVelocity:PropTypes.number,
type:PropTypes.oneOf(
Object.keys(Types)),

property:PropTypes.oneOf(
Object.keys(Properties))});












var configChecker=createStrictShapeTypeChecker({
duration:PropTypes.number.isRequired,
create:animChecker,
update:animChecker,
delete:animChecker});









function configureNext(config,onAnimationDidEnd){
configChecker({config:config},'config','LayoutAnimation.configureNext');
RCTUIManager.configureNextLayoutAnimation(
config,onAnimationDidEnd || function(){},function(){});}



function create(duration,type,creationProp){
return {
duration:duration,
create:{
type:type,
property:creationProp},

update:{
type:type}};}




var Presets={
easeInEaseOut:create(
300,Types.easeInEaseOut,Properties.opacity),

linear:create(
500,Types.linear,Properties.opacity),

spring:{
duration:700,
create:{
type:Types.linear,
property:Properties.opacity},

update:{
type:Types.spring,
springDamping:0.4}}};











var LayoutAnimation={














configureNext:configureNext,



create:create,
Types:Types,
Properties:Properties,
configChecker:configChecker,
Presets:Presets,
easeInEaseOut:configureNext.bind(
null,Presets.easeInEaseOut),

linear:configureNext.bind(
null,Presets.linear),

spring:configureNext.bind(
null,Presets.spring)};



module.exports = LayoutAnimation;
});
__d('LinkingIOS',["RCTDeviceEventEmitter","NativeModules","Map","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLinkingManager=require('NativeModules').LinkingManager;
var Map=require('Map');
var invariant=require('invariant');

var _notifHandlers=new Map();
var _initialURL=RCTLinkingManager && 
RCTLinkingManager.initialURL;

var DEVICE_NOTIF_EVENT='openURL';var 





























































LinkingIOS=(function(){function LinkingIOS(){_classCallCheck(this,LinkingIOS);}_createClass(LinkingIOS,null,[{key:'addEventListener',value:




function addEventListener(type,handler){
invariant(
type === 'url',
'LinkingIOS only supports `url` events');

var listener=RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT,
handler);

_notifHandlers.set(handler,listener);}},{key:'removeEventListener',value:





function removeEventListener(type,handler){
invariant(
type === 'url',
'LinkingIOS only supports `url` events');

var listener=_notifHandlers.get(handler);
if(!listener){
return;}

listener.remove();
_notifHandlers.delete(handler);}},{key:'openURL',value:





function openURL(url){
invariant(
typeof url === 'string',
'Invalid url: should be a string');

RCTLinkingManager.openURL(url);}},{key:'canOpenURL',value:






function canOpenURL(url,callback){
invariant(
typeof url === 'string',
'Invalid url: should be a string');

invariant(
typeof callback === 'function',
'A valid callback function is required');

RCTLinkingManager.canOpenURL(url,callback);}},{key:'popInitialURL',value:






function popInitialURL(){
var initialURL=_initialURL;
_initialURL = null;
return initialURL;}}]);return LinkingIOS;})();



module.exports = LinkingIOS;
});
__d('NetInfo',["Map","NativeModules","Platform","RCTDeviceEventEmitter"],function(global, require, module, exports) {  'use strict';












var Map=require('Map');
var NativeModules=require('NativeModules');
var Platform=require('Platform');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTNetInfo=NativeModules.NetInfo;

var DEVICE_REACHABILITY_EVENT='networkDidChange';






















































































































var _subscriptions=new Map();

var NetInfo={
addEventListener:function(
eventName,
handler)
{
var listener=RCTDeviceEventEmitter.addListener(
DEVICE_REACHABILITY_EVENT,
function(appStateData){
handler(appStateData.network_info);});


_subscriptions.set(handler,listener);},


removeEventListener:function(
eventName,
handler)
{
var listener=_subscriptions.get(handler);
if(!listener){
return;}

listener.remove();
_subscriptions.delete(handler);},


fetch:function(){
return new Promise(function(resolve,reject){
RCTNetInfo.getCurrentReachability(
function(resp){
resolve(resp.network_reachability);},

reject);});},




isConnected:{},

isConnectionMetered:{}};


if(Platform.OS === 'ios'){
var _isConnected=function(
reachability)
{
return reachability !== 'none' && 
reachability !== 'unknown';};}else 

if(Platform.OS === 'android'){
var _isConnected=function(
connectionType)
{
return connectionType !== 'NONE' && connectionType !== 'UNKNOWN';};}



var _isConnectedSubscriptions=new Map();

NetInfo.isConnected = {
addEventListener:function(
eventName,
handler)
{
var listener=function(connection){
handler(_isConnected(connection));};

_isConnectedSubscriptions.set(handler,listener);
NetInfo.addEventListener(
eventName,
listener);},



removeEventListener:function(
eventName,
handler)
{
var listener=_isConnectedSubscriptions.get(handler);
NetInfo.removeEventListener(
eventName,
listener);

_isConnectedSubscriptions.delete(handler);},


fetch:function(){
return NetInfo.fetch().then(
function(connection){return _isConnected(connection);});}};




if(Platform.OS === 'android'){
NetInfo.isConnectionMetered = function(callback){
RCTNetInfo.isConnectionMetered(function(_isMetered){
callback(_isMetered);});};}




module.exports = NetInfo;
});
__d('PushNotificationIOS',["Map","RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var Map=require('Map');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTPushNotificationManager=require('NativeModules').PushNotificationManager;
var invariant=require('invariant');

var _notifHandlers=new Map();
var _initialNotification=RCTPushNotificationManager && 
RCTPushNotificationManager.initialNotification;

var DEVICE_NOTIF_EVENT='remoteNotificationReceived';
var NOTIF_REGISTER_EVENT='remoteNotificationsRegistered';var 








PushNotificationIOS=(function(){_createClass(PushNotificationIOS,null,[{key:'presentLocalNotification',value:













function presentLocalNotification(details){
RCTPushNotificationManager.presentLocalNotification(details);}},{key:'scheduleLocalNotification',value:











function scheduleLocalNotification(details){
RCTPushNotificationManager.scheduleLocalNotification(details);}},{key:'setApplicationIconBadgeNumber',value:





function setApplicationIconBadgeNumber(number){
RCTPushNotificationManager.setApplicationIconBadgeNumber(number);}},{key:'getApplicationIconBadgeNumber',value:





function getApplicationIconBadgeNumber(callback){
RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);}},{key:'addEventListener',value:













function addEventListener(type,handler){
invariant(
type === 'notification' || type === 'register',
'PushNotificationIOS only supports `notification` and `register` events');

var listener;
if(type === 'notification'){
listener = RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT,
function(notifData){
handler(new PushNotificationIOS(notifData));});}else 


if(type === 'register'){
listener = RCTDeviceEventEmitter.addListener(
NOTIF_REGISTER_EVENT,
function(registrationInfo){
handler(registrationInfo.deviceToken);});}



_notifHandlers.set(handler,listener);}},{key:'requestPermissions',value:
















function requestPermissions(permissions)



{
var requestedPermissions={};
if(permissions){
requestedPermissions = {
alert:!!permissions.alert,
badge:!!permissions.badge,
sound:!!permissions.sound};}else 

{
requestedPermissions = {
alert:true,
badge:true,
sound:true};}


RCTPushNotificationManager.requestPermissions(requestedPermissions);}},{key:'abandonPermissions',value:










function abandonPermissions(){
RCTPushNotificationManager.abandonPermissions();}},{key:'checkPermissions',value:










function checkPermissions(callback){
invariant(
typeof callback === 'function',
'Must provide a valid callback');

RCTPushNotificationManager.checkPermissions(callback);}},{key:'removeEventListener',value:






function removeEventListener(type,handler){
invariant(
type === 'notification' || type === 'register',
'PushNotificationIOS only supports `notification` and `register` events');

var listener=_notifHandlers.get(handler);
if(!listener){
return;}

listener.remove();
_notifHandlers.delete(handler);}},{key:'popInitialNotification',value:










function popInitialNotification(){
var initialNotification=_initialNotification && 
new PushNotificationIOS(_initialNotification);
_initialNotification = null;
return initialNotification;}}]);







function PushNotificationIOS(nativeNotif){var _this=this;_classCallCheck(this,PushNotificationIOS);
this._data = {};





Object.keys(nativeNotif).forEach(function(notifKey){
var notifVal=nativeNotif[notifKey];
if(notifKey === 'aps'){
_this._alert = notifVal.alert;
_this._sound = notifVal.sound;
_this._badgeCount = notifVal.badge;}else 
{
_this._data[notifKey] = notifVal;}});}_createClass(PushNotificationIOS,[{key:'getMessage',value:







function getMessage(){

return this._alert;}},{key:'getSound',value:





function getSound(){
return this._sound;}},{key:'getAlert',value:





function getAlert(){
return this._alert;}},{key:'getBadgeCount',value:





function getBadgeCount(){
return this._badgeCount;}},{key:'getData',value:





function getData(){
return this._data;}}]);return PushNotificationIOS;})();



module.exports = PushNotificationIOS;
});
__d('Settings',["RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTSettingsManager=require('NativeModules').SettingsManager;

var invariant=require('invariant');

var subscriptions=[];

var Settings={
_settings:RCTSettingsManager && RCTSettingsManager.settings,

get:function(key){
return this._settings[key];},


set:function(settings){
this._settings = Object.assign(this._settings,settings);
RCTSettingsManager.setValues(settings);},


watchKeys:function(keys,callback){
if(typeof keys === 'string'){
keys = [keys];}


invariant(
Array.isArray(keys),
'keys should be a string or array of strings');


var sid=subscriptions.length;
subscriptions.push({keys:keys,callback:callback});
return sid;},


clearWatch:function(watchId){
if(watchId < subscriptions.length){
subscriptions[watchId] = {keys:[],callback:null};}},



_sendObservations:function(body){var _this=this;
Object.keys(body).forEach(function(key){
var newValue=body[key];
var didChange=_this._settings[key] !== newValue;
_this._settings[key] = newValue;

if(didChange){
subscriptions.forEach(function(sub){
if(sub.keys.indexOf(key) !== -1 && sub.callback){
sub.callback();}});}});}};







RCTDeviceEventEmitter.addListener(
'settingsUpdated',
Settings._sendObservations.bind(Settings));


module.exports = Settings;
});
__d('StatusBarIOS',["NativeModules"],function(global, require, module, exports) {  'use strict';












var RCTStatusBarManager=require('NativeModules').StatusBarManager;












var StatusBarIOS={

setStyle:function(style,animated){
animated = animated || false;
RCTStatusBarManager.setStyle(style,animated);},


setHidden:function(hidden,animation){
animation = animation || 'none';
RCTStatusBarManager.setHidden(hidden,animation);},


setNetworkActivityIndicatorVisible:function(visible){
RCTStatusBarManager.setNetworkActivityIndicatorVisible(visible);}};



module.exports = StatusBarIOS;
});
__d('VibrationIOS',["NativeModules","invariant"],function(global, require, module, exports) {  'use strict';












var RCTVibration=require('NativeModules').Vibration;

var invariant=require('invariant');












var VibrationIOS={
vibrate:function(){
invariant(
arguments[0] === undefined,
'Vibration patterns not supported.');

RCTVibration.vibrate();}};



module.exports = VibrationIOS;
});
__d('RCTNativeAppEventEmitter',["EventEmitter"],function(global, require, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTNativeAppEventEmitter=new EventEmitter();

module.exports = RCTNativeAppEventEmitter;
});
__d('LinkedStateMixin',["ReactLink","ReactStateSetters"],function(global, require, module, exports) {  'use strict';













var ReactLink=require('ReactLink');
var ReactStateSetters=require('ReactStateSetters');




var LinkedStateMixin={









linkState:function(key){
return new ReactLink(
this.state[key],
ReactStateSetters.createStateKeySetter(this,key));}};




module.exports = LinkedStateMixin;
});
__d('ReactLink',["React"],function(global, require, module, exports) {  'use strict';




































var React=require('React');





function ReactLink(value,requestChange){
this.value = value;
this.requestChange = requestChange;}










function createLinkTypeChecker(linkType){
var shapes={
value:typeof linkType === 'undefined'?
React.PropTypes.any.isRequired:
linkType.isRequired,
requestChange:React.PropTypes.func.isRequired};

return React.PropTypes.shape(shapes);}


ReactLink.PropTypes = {
link:createLinkTypeChecker};


module.exports = ReactLink;
});
__d('ReactStateSetters',[],function(global, require, module, exports) {  'use strict';












var ReactStateSetters={










createStateSetter:function(component,funcReturningState){
return function(a,b,c,d,e,f){
var partialState=funcReturningState.call(component,a,b,c,d,e,f);
if(partialState){
component.setState(partialState);}};},















createStateKeySetter:function(component,key){

var cache=component.__keySetters || (component.__keySetters = {});
return cache[key] || (cache[key] = createStateKeySetter(component,key));}};



function createStateKeySetter(component,key){



var partialState={};
return function stateKeySetter(value){
partialState[key] = value;
component.setState(partialState);};}



ReactStateSetters.Mixin = {
















createStateSetter:function(funcReturningState){
return ReactStateSetters.createStateSetter(this,funcReturningState);},

















createStateKeySetter:function(key){
return ReactStateSetters.createStateKeySetter(this,key);}};



module.exports = ReactStateSetters;
});
__d('ReactComponentWithPureRenderMixin',["shallowCompare"],function(global, require, module, exports) {  'use strict';












var shallowCompare=require('shallowCompare');

























var ReactComponentWithPureRenderMixin={
shouldComponentUpdate:function(nextProps,nextState){
return shallowCompare(this,nextProps,nextState);}};



module.exports = ReactComponentWithPureRenderMixin;
});
__d('shallowCompare',["shallowEqual"],function(global, require, module, exports) {  'use strict';












var shallowEqual=require('shallowEqual');





function shallowCompare(instance,nextProps,nextState){
return (
!shallowEqual(instance.props,nextProps) || 
!shallowEqual(instance.state,nextState));}



module.exports = shallowCompare;
});
__d('shallowEqual',[],function(global, require, module, exports) {  'use strict';



















function shallowEqual(objA,objB){
if(objA === objB){
return true;}


if(typeof objA !== 'object' || objA === null || 
typeof objB !== 'object' || objB === null){
return false;}


var keysA=Object.keys(objA);
var keysB=Object.keys(objB);

if(keysA.length !== keysB.length){
return false;}



var bHasOwnProperty=Object.prototype.hasOwnProperty.bind(objB);
for(var i=0;i < keysA.length;i++) {
if(!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]){
return false;}}



return true;}


module.exports = shallowEqual;
});
__d('update',["Object.assign","keyOf","invariant"],function(global, require, module, exports) {  'use strict';














var assign=require('Object.assign');
var keyOf=require('keyOf');
var invariant=require('invariant');
var hasOwnProperty=({}).hasOwnProperty;

function shallowCopy(x){
if(Array.isArray(x)){
return x.concat();}else 
if(x && typeof x === 'object'){
return assign(new x.constructor(),x);}else 
{
return x;}}



var COMMAND_PUSH=keyOf({$push:null});
var COMMAND_UNSHIFT=keyOf({$unshift:null});
var COMMAND_SPLICE=keyOf({$splice:null});
var COMMAND_SET=keyOf({$set:null});
var COMMAND_MERGE=keyOf({$merge:null});
var COMMAND_APPLY=keyOf({$apply:null});

var ALL_COMMANDS_LIST=[
COMMAND_PUSH,
COMMAND_UNSHIFT,
COMMAND_SPLICE,
COMMAND_SET,
COMMAND_MERGE,
COMMAND_APPLY];


var ALL_COMMANDS_SET={};

ALL_COMMANDS_LIST.forEach(function(command){
ALL_COMMANDS_SET[command] = true;});


function invariantArrayCase(value,spec,command){
invariant(
Array.isArray(value),
'update(): expected target of %s to be an array; got %s.',
command,
value);

var specValue=spec[command];
invariant(
Array.isArray(specValue),
'update(): expected spec of %s to be an array; got %s. ' + 
'Did you forget to wrap your parameter in an array?',
command,
specValue);}



function update(value,spec){
invariant(
typeof spec === 'object',
'update(): You provided a key path to update() that did not contain one ' + 
'of %s. Did you forget to include {%s: ...}?',
ALL_COMMANDS_LIST.join(', '),
COMMAND_SET);


if(hasOwnProperty.call(spec,COMMAND_SET)){
invariant(
Object.keys(spec).length === 1,
'Cannot have more than one key in an object with %s',
COMMAND_SET);


return spec[COMMAND_SET];}


var nextValue=shallowCopy(value);

if(hasOwnProperty.call(spec,COMMAND_MERGE)){
var mergeObj=spec[COMMAND_MERGE];
invariant(
mergeObj && typeof mergeObj === 'object',
'update(): %s expects a spec of type \'object\'; got %s',
COMMAND_MERGE,
mergeObj);

invariant(
nextValue && typeof nextValue === 'object',
'update(): %s expects a target of type \'object\'; got %s',
COMMAND_MERGE,
nextValue);

assign(nextValue,spec[COMMAND_MERGE]);}


if(hasOwnProperty.call(spec,COMMAND_PUSH)){
invariantArrayCase(value,spec,COMMAND_PUSH);
spec[COMMAND_PUSH].forEach(function(item){
nextValue.push(item);});}



if(hasOwnProperty.call(spec,COMMAND_UNSHIFT)){
invariantArrayCase(value,spec,COMMAND_UNSHIFT);
spec[COMMAND_UNSHIFT].forEach(function(item){
nextValue.unshift(item);});}



if(hasOwnProperty.call(spec,COMMAND_SPLICE)){
invariant(
Array.isArray(value),
'Expected %s target to be an array; got %s',
COMMAND_SPLICE,
value);

invariant(
Array.isArray(spec[COMMAND_SPLICE]),
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

spec[COMMAND_SPLICE].forEach(function(args){
invariant(
Array.isArray(args),
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

nextValue.splice.apply(nextValue,args);});}



if(hasOwnProperty.call(spec,COMMAND_APPLY)){
invariant(
typeof spec[COMMAND_APPLY] === 'function',
'update(): expected spec of %s to be a function; got %s.',
COMMAND_APPLY,
spec[COMMAND_APPLY]);

nextValue = spec[COMMAND_APPLY](nextValue);}


for(var k in spec) {
if(!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])){
nextValue[k] = update(value[k],spec[k]);}}



return nextValue;}


module.exports = update;
});
__d('ReactTestUtils',["EventConstants","EventPluginHub","EventPropagators","React","ReactElement","ReactEmptyComponent","ReactBrowserEventEmitter","ReactCompositeComponent","ReactInstanceHandles","ReactInstanceMap","ReactMount","ReactUpdates","SyntheticEvent","Object.assign","emptyObject","findDOMNode","invariant"],function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPropagators=require('EventPropagators');
var React=require('React');
var ReactElement=require('ReactElement');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');
var ReactUpdates=require('ReactUpdates');
var SyntheticEvent=require('SyntheticEvent');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var findDOMNode=require('findDOMNode');
var invariant=require('invariant');

var topLevelTypes=EventConstants.topLevelTypes;

function Event(suffix){}





function findAllInRenderedTreeInternal(inst,test){
if(!inst || !inst.getPublicInstance){
return [];}

var publicInst=inst.getPublicInstance();
var ret=test(publicInst)?[publicInst]:[];
if(ReactTestUtils.isDOMComponent(publicInst)){
var renderedChildren=inst._renderedChildren;
var key;
for(key in renderedChildren) {
if(!renderedChildren.hasOwnProperty(key)){
continue;}

ret = ret.concat(
findAllInRenderedTreeInternal(
renderedChildren[key],
test));}}else 



if(ReactTestUtils.isCompositeComponent(publicInst)){
ret = ret.concat(
findAllInRenderedTreeInternal(inst._renderedComponent,test));}


return ret;}







var ReactTestUtils={
renderIntoDocument:function(instance){
var div=document.createElement('div');





return React.render(instance,div);},


isElement:function(element){
return ReactElement.isValidElement(element);},


isElementOfType:function(inst,convenienceConstructor){
return (
ReactElement.isValidElement(inst) && 
inst.type === convenienceConstructor);},



isDOMComponent:function(inst){


return !!(inst && inst.nodeType === 1 && inst.tagName);},


isDOMComponentElement:function(inst){
return !!(inst && 
ReactElement.isValidElement(inst) && 
!!inst.tagName);},


isCompositeComponent:function(inst){
if(ReactTestUtils.isDOMComponent(inst)){


return false;}

return typeof inst.render === 'function' && 
typeof inst.setState === 'function';},


isCompositeComponentWithType:function(inst,type){
if(!ReactTestUtils.isCompositeComponent(inst)){
return false;}

var internalInstance=ReactInstanceMap.get(inst);
var constructor=internalInstance.
_currentElement.
type;

return constructor === type;},


isCompositeComponentElement:function(inst){
if(!ReactElement.isValidElement(inst)){
return false;}



var prototype=inst.type.prototype;
return (
typeof prototype.render === 'function' && 
typeof prototype.setState === 'function');},



isCompositeComponentElementWithType:function(inst,type){
var internalInstance=ReactInstanceMap.get(inst);
var constructor=internalInstance.
_currentElement.
type;

return !!(ReactTestUtils.isCompositeComponentElement(inst) && 
constructor === type);},


getRenderedChildOfCompositeComponent:function(inst){
if(!ReactTestUtils.isCompositeComponent(inst)){
return null;}

var internalInstance=ReactInstanceMap.get(inst);
return internalInstance._renderedComponent.getPublicInstance();},


findAllInRenderedTree:function(inst,test){
if(!inst){
return [];}

invariant(
ReactTestUtils.isCompositeComponent(inst),
'findAllInRenderedTree(...): instance must be a composite component');

return findAllInRenderedTreeInternal(ReactInstanceMap.get(inst),test);},







scryRenderedDOMComponentsWithClass:function(root,className){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
if(ReactTestUtils.isDOMComponent(inst)){
var instClassName=React.findDOMNode(inst).className;
return (
instClassName && 
('' + instClassName).split(/\s+/).indexOf(className) !== -1);}


return false;});},









findRenderedDOMComponentWithClass:function(root,className){
var all=
ReactTestUtils.scryRenderedDOMComponentsWithClass(root,className);
if(all.length !== 1){
throw new Error('Did not find exactly one match ' + 
'(found: ' + all.length + ') for class:' + className);}


return all[0];},








scryRenderedDOMComponentsWithTag:function(root,tagName){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isDOMComponent(inst) && 
inst.tagName === tagName.toUpperCase();});},









findRenderedDOMComponentWithTag:function(root,tagName){
var all=ReactTestUtils.scryRenderedDOMComponentsWithTag(root,tagName);
if(all.length !== 1){
throw new Error('Did not find exactly one match for tag:' + tagName);}

return all[0];},







scryRenderedComponentsWithType:function(root,componentType){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isCompositeComponentWithType(
inst,
componentType);});},










findRenderedComponentWithType:function(root,componentType){
var all=ReactTestUtils.scryRenderedComponentsWithType(
root,
componentType);

if(all.length !== 1){
throw new Error(
'Did not find exactly one match for componentType:' + componentType + 
' (found ' + all.length + ')');}


return all[0];},















mockComponent:function(module,mockTagName){
mockTagName = mockTagName || module.mockTagName || "div";

module.prototype.render.mockImplementation(function(){
return React.createElement(
mockTagName,
null,
this.props.children);});



return this;},









simulateNativeEventOnNode:function(topLevelType,node,fakeNativeEvent){
fakeNativeEvent.target = node;
ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(
topLevelType,
fakeNativeEvent);},










simulateNativeEventOnDOMComponent:function(
topLevelType,
comp,
fakeNativeEvent){
ReactTestUtils.simulateNativeEventOnNode(
topLevelType,
findDOMNode(comp),
fakeNativeEvent);},



nativeTouchData:function(x,y){
return {
touches:[
{pageX:x,pageY:y}]};},




createRenderer:function(){
return new ReactShallowRenderer();},


Simulate:null,
SimulateNative:{}};





var ReactShallowRenderer=function(){
this._instance = null;};


ReactShallowRenderer.prototype.getRenderOutput = function(){
return (
this._instance && this._instance._renderedComponent && 
this._instance._renderedComponent._renderedOutput || 
null);};



var NoopInternalComponent=function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;};


NoopInternalComponent.prototype = {

mountComponent:function(){},


receiveComponent:function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;},


unmountComponent:function(){}};




var ShallowComponentWrapper=function(){};
assign(
ShallowComponentWrapper.prototype,
ReactCompositeComponent.Mixin,{
_instantiateReactComponent:function(element){
return new NoopInternalComponent(element);},

_replaceNodeWithMarkupByID:function(){},
_renderValidatedComponent:
ReactCompositeComponent.Mixin.
_renderValidatedComponentWithoutOwnerOrContext});



ReactShallowRenderer.prototype.render = function(element,context){
if(!context){
context = emptyObject;}

var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
this._render(element,transaction,context);
ReactUpdates.ReactReconcileTransaction.release(transaction);};


ReactShallowRenderer.prototype.unmount = function(){
if(this._instance){
this._instance.unmountComponent();}};



ReactShallowRenderer.prototype._render = function(element,transaction,context){
if(!this._instance){
var rootID=ReactInstanceHandles.createReactRootID();
var instance=new ShallowComponentWrapper(element.type);
instance.construct(element);

instance.mountComponent(rootID,transaction,context);

this._instance = instance;}else 
{
this._instance.receiveComponent(element,transaction,context);}};











function makeSimulator(eventType){
return function(domComponentOrNode,eventData){
var node;
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
node = findDOMNode(domComponentOrNode);}else 
if(domComponentOrNode.tagName){
node = domComponentOrNode;}


var dispatchConfig=
ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType];

var fakeNativeEvent=new Event();
fakeNativeEvent.target = node;


var event=new SyntheticEvent(
dispatchConfig,
ReactMount.getID(node),
fakeNativeEvent,
node);

assign(event,eventData);

if(dispatchConfig.phasedRegistrationNames){
EventPropagators.accumulateTwoPhaseDispatches(event);}else 
{
EventPropagators.accumulateDirectDispatches(event);}


ReactUpdates.batchedUpdates(function(){
EventPluginHub.enqueueEvents(event);
EventPluginHub.processEventQueue();});};}




function buildSimulators(){
ReactTestUtils.Simulate = {};

var eventType;
for(eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {




ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);}}




var oldInjectEventPluginOrder=EventPluginHub.injection.injectEventPluginOrder;
EventPluginHub.injection.injectEventPluginOrder = function(){
oldInjectEventPluginOrder.apply(this,arguments);
buildSimulators();};

var oldInjectEventPlugins=EventPluginHub.injection.injectEventPluginsByName;
EventPluginHub.injection.injectEventPluginsByName = function(){
oldInjectEventPlugins.apply(this,arguments);
buildSimulators();};


buildSimulators();

















function makeNativeSimulator(eventType){
return function(domComponentOrNode,nativeEventData){
var fakeNativeEvent=new Event(eventType);
assign(fakeNativeEvent,nativeEventData);
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
ReactTestUtils.simulateNativeEventOnDOMComponent(
eventType,
domComponentOrNode,
fakeNativeEvent);}else 

if(!!domComponentOrNode.tagName){

ReactTestUtils.simulateNativeEventOnNode(
eventType,
domComponentOrNode,
fakeNativeEvent);}};}





var eventType;
for(eventType in topLevelTypes) {

var convenienceName=eventType.indexOf('top') === 0?
eventType.charAt(3).toLowerCase() + eventType.substr(4):eventType;




ReactTestUtils.SimulateNative[convenienceName] = 
makeNativeSimulator(eventType);}


module.exports = ReactTestUtils;
});
__d('findDOMNode',["ReactCurrentOwner","ReactInstanceMap","ReactMount","invariant","warning"],function(global, require, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');

var invariant=require('invariant');
var warning=require('warning');







function findDOMNode(componentOrElement){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing getDOMNode or findDOMNode inside its render(). ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


if(componentOrElement == null){
return null;}

if(componentOrElement.nodeType === 1){
return componentOrElement;}

if(ReactInstanceMap.has(componentOrElement)){
return ReactMount.getNodeFromInstance(componentOrElement);}

invariant(
componentOrElement.render == null || 
typeof componentOrElement.render !== 'function',
'Component (with keys: %s) contains `render` method ' + 
'but is not mounted in the DOM',
Object.keys(componentOrElement));

invariant(
false,
'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',
Object.keys(componentOrElement));}



module.exports = findDOMNode;
});
__d('yarn/app/views/browser/browser.js',["react-native/Libraries/react-native/react-native.js","yarn/app/stores/gamestatestore.js","yarn/app/views/browser/yarnwebview.js","yarn/app/actions/actions.js","yarn/app/logger/logger.js","yarn/app/blacklist.js","yarn/app/whitelist.js","yarn/app/uiconfig.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=






React.StyleSheet;var Text=React.Text;var TextInput=React.TextInput;var TouchableOpacity=React.TouchableOpacity;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;var View=React.View;var WebView=React.WebView;

var gameStateStore=require('yarn/app/stores/gamestatestore.js');
var YarnWebView=require('yarn/app/views/browser/yarnwebview.js');
var actions=require('yarn/app/actions/actions.js');
var log=require('yarn/app/logger/logger.js');

var BLACKLIST=require('yarn/app/blacklist.js');
var WHITELIST=require('yarn/app/whitelist.js');

var BORDER='#E7EAEA';
var BGWASH='rgba(255,255,255,0.8)';
var HEADER='#F9FAFB';
var DISABLED_WASH='rgba(255,255,255,0.25)';

var WEBVIEW_REF='webview';
var TEXT_INPUT_REF='urlInput';
var WORDS_PARSE_TIMEOUT=10000;

var uiConfig=require('yarn/app/uiconfig.js');

var Browser=React.createClass({
lastUrl:'',
lastTitle:'',
apiInjectTimeout:0,

getInitialState:function(){
return {
url:this.props.url,
urlInInput:this.props.url,
shortUrl:this.cleanupUrl(this.props.url),
status:'No Page Loaded',
backButtonEnabled:false,
forwardButtonEnabled:false,
loading:true};},



handleTextInputChange:function(event){
this.setState({
urlInInput:event.nativeEvent.text});},



render:function(){
return (
React.createElement(View,{style:[styles.container]},
this.renderAddressBar(),
React.createElement(YarnWebView,{
ref:WEBVIEW_REF,
style:styles.webView,
userRange:this.props.userRange,
userLevel:this.props.userLevel,
url:this.state.url,
onNavigationStateChange:this.onNavigationStateChange,
onWordsParsed:this.onWordsParsed,
onVisibleWordsChanged:this.onVisibleWordsChanged,
onNotAllowedUrl:this.onNotAllowedUrl,
onScroll:this.props.onScroll || function(){}})));},





renderAddressBar:function(){
return (
React.createElement(TouchableWithoutFeedback,{onPress:this.onNotAllowedUrl},
React.createElement(View,{style:styles.smallAddressBar},
React.createElement(Text,{style:styles.smallAddressBarText},this.state.shortUrl))));},


































cleanupUrl:function(url){
return url.replace(/^(https?\:\/\/)/,'').
replace(/^(www\.)/,'').
split('/')[0];},


componentDidMount:function(){
gameStateStore.addChangeListener(this.onGameStateChanged);

var webView=this.refs[WEBVIEW_REF];
actions.on(actions.WORDS_READY,webView.prepareWords);
actions.on(actions.START_GAME,webView.stopScrollTracking);},


onVisibleWordsChanged:function(words){
actions.emit(actions.VISITED_WORDS_CHANGED,words);},


onGameStateChanged:function(){
if(gameStateStore.get('currentState') === gameStateStore.GAME_STATES.WAITING_FOR_ANSWER){
if(gameStateStore.get('currentWordIndex') === 0){
this.refs[WEBVIEW_REF].setHighlightColor(uiConfig.COLORS.BLUE_BG);}}},




goToUrl:function(url){
this.setState({
urlInInput:url});

this.onSubmitEditing();},


onWordsParsed:function(words){
log({
message:'words parsed',
url:this.state.url,
words:words});

actions.emit('WORDS_PARSED',words);},


goBack:function(){
this.refs[WEBVIEW_REF].goBack();},


goForward:function(){
this.refs[WEBVIEW_REF].goForward();},


reload:function(){
this.props.onUrlChange && this.props.onUrlChange();
this.refs[WEBVIEW_REF].reload();},


onNavigationStateChange:function(navState){
this.setState({
backButtonEnabled:navState.canGoBack,
forwardButtonEnabled:navState.canGoForward,
shortUrl:this.cleanupUrl(navState.url),
url:navState.url,
status:navState.title,
loading:navState.loading,
urlInInput:navState.url});



if(WHITELIST.doesMatch(navState.url)){
this.scheduleApiInject();}


if(navState.url !== this.lastUrl){
this.lastUrl = navState.url;
this.refs[WEBVIEW_REF].resetLastParsedContent();
this.props.onUrlChange && this.props.onUrlChange(navState.url);}},



onNotAllowedUrl:function(url){
actions.emit(actions.URL_FEATURE_REQUESTED);},


scheduleApiInject:function(){
clearTimeout(this.apiInjectTimeout);
this.apiInjectTimeout = setTimeout((function(){
this.refs[WEBVIEW_REF].injectYarnWebsiteApi();}).
bind(this),1000);},


onSubmitEditing:function(){
this.setState({
words:[]});

this.pressGoButton();},


pressGoButton:function(){
var url=this.state.urlInInput.toLowerCase();
log({
message:'Page loading started',
url:url});

if(url === this.state.url){
this.reload();}else 
{
this.setState({
url:this.state.urlInInput});}



this.refs[TEXT_INPUT_REF].blur();},


highlightWord:function(word){
this.refs[WEBVIEW_REF].highlightWord(word);},


scrollToWord:function(word){
this.refs[WEBVIEW_REF].scrollToWord(word);},


unhighlightWords:function(){
this.refs[WEBVIEW_REF].unhighlightWords();},


goToRandomUrl:function(cb){
this.refs[WEBVIEW_REF].goToRandomUrl();},


resetLastParsedContent:function(){
this.refs[WEBVIEW_REF].resetLastParsedContent();}});



var styles=StyleSheet.create({
container:{
flex:1,
backgroundColor:HEADER},

addressBarRow:{
flexDirection:'row',
padding:8,
borderBottomWidth:1,
borderBottomColor:BORDER,
height:uiConfig.BROWSER_BAR_HEIGHT},

addressBarTextInput:{
backgroundColor:BGWASH,
borderColor:BORDER,
borderRadius:3,
borderWidth:1,
height:24,
paddingLeft:10,
paddingTop:3,
paddingBottom:3,
flex:1,
fontSize:14},

navButton:{
width:20,
padding:3,
marginRight:3,
alignItems:'center',
justifyContent:'center',
backgroundColor:BGWASH,
borderWidth:1,
borderColor:BORDER,
borderRadius:3},

disabledButton:{
width:20,
padding:3,
marginRight:3,
alignItems:'center',
justifyContent:'center',
backgroundColor:DISABLED_WASH,
borderColor:'transparent',
borderRadius:3},

goButton:{
height:24,
padding:3,
marginLeft:8,
alignItems:'center',
backgroundColor:BGWASH,
borderColor:BORDER,
borderWidth:1,
borderRadius:3,
alignSelf:'stretch'},

spinner:{
width:20,
marginRight:6},


smallAddressBar:{
height:20,
borderBottomWidth:1,
borderBottomColor:uiConfig.COLORS.MID_GREY},


smallAddressBarText:{
textAlign:'justify',
fontSize:10,
alignSelf:'center',
paddingTop:3}});


module.exports = Browser;
});
__d('yarn/app/stores/gamestatestore.js',["events/events.js"],function(global, require, module, exports) {  'use strict';

var Events=require('events/events.js');
var eventEmitter=new Events.EventEmitter();
var CHANGE_EVENT='store:changed';

var GAME_STATES={
NOT_STARTED:'NOT_STARTED',
LOOKING_FOR_WORDS:'LOOKING_FOR_WORDS',
WORDS_FOUND:'WORDS_FOUND',
WAITING_FOR_ANSWER:'WAITING_FOR_ANSWER',
WRONG_ANSWER_CHOSEN:'WRONG_ANSWER_CHOSEN',
CORRECT_ANSWER_CHOSEN:'CORRECT_ANSWER_CHOSEN'};


var initialData={
pageWords:[],
visitedPageWords:[],
currentWordIndex:-1,
currentWord:'',
currentQuestion:null,
chosenAnswer:'',
randomWordsCount:6,
currentState:GAME_STATES.NOT_STARTED,
correct:0,
wrong:0,
finished:false};


var data=JSON.parse(JSON.stringify(initialData));
var listenersPaused=false;

function set(key,d){
data[key] = d;
!listenersPaused && emitChange();}


function get(key){
return data[key];}


function emitChange(){
eventEmitter.emit(CHANGE_EVENT);}


function addChangeListener(listener){
eventEmitter.on(CHANGE_EVENT,listener);}


function reset(){
data = JSON.parse(JSON.stringify(initialData));
!listenersPaused && emitChange();}


function pause(b){
listenersPaused = b;
!listenersPaused && emitChange();}


module.exports = {
addChangeListener:addChangeListener,
get:get,
set:set,
reset:reset,
pause:pause,
GAME_STATES:GAME_STATES};
});
__d('events/events.js',[],function(global, require, module, exports) {  function 




















EventEmitter(){
this._events = this._events || {};
this._maxListeners = this._maxListeners || undefined;}

module.exports = EventEmitter;


EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;



EventEmitter.defaultMaxListeners = 10;



EventEmitter.prototype.setMaxListeners = function(n){
if(!isNumber(n) || n < 0 || isNaN(n))
throw TypeError('n must be a positive number');
this._maxListeners = n;
return this;};


EventEmitter.prototype.emit = function(type){
var er,handler,len,args,i,listeners;

if(!this._events)
this._events = {};


if(type === 'error'){
if(!this._events.error || 
isObject(this._events.error) && !this._events.error.length){
er = arguments[1];
if(er instanceof Error){
throw er;}

throw TypeError('Uncaught, unspecified "error" event.');}}



handler = this._events[type];

if(isUndefined(handler))
return false;

if(isFunction(handler)){
switch(arguments.length){

case 1:
handler.call(this);
break;
case 2:
handler.call(this,arguments[1]);
break;
case 3:
handler.call(this,arguments[1],arguments[2]);
break;

default:
len = arguments.length;
args = new Array(len - 1);
for(i = 1;i < len;i++) 
args[i - 1] = arguments[i];
handler.apply(this,args);}}else 

if(isObject(handler)){
len = arguments.length;
args = new Array(len - 1);
for(i = 1;i < len;i++) 
args[i - 1] = arguments[i];

listeners = handler.slice();
len = listeners.length;
for(i = 0;i < len;i++) 
listeners[i].apply(this,args);}


return true;};


EventEmitter.prototype.addListener = function(type,listener){
var m;

if(!isFunction(listener))
throw TypeError('listener must be a function');

if(!this._events)
this._events = {};



if(this._events.newListener)
this.emit('newListener',type,
isFunction(listener.listener)?
listener.listener:listener);

if(!this._events[type])

this._events[type] = listener;else 
if(isObject(this._events[type]))

this._events[type].push(listener);else 


this._events[type] = [this._events[type],listener];


if(isObject(this._events[type]) && !this._events[type].warned){
var m;
if(!isUndefined(this._maxListeners)){
m = this._maxListeners;}else 
{
m = EventEmitter.defaultMaxListeners;}


if(m && m > 0 && this._events[type].length > m){
this._events[type].warned = true;
console.error('(node) warning: possible EventEmitter memory ' + 
'leak detected. %d listeners added. ' + 
'Use emitter.setMaxListeners() to increase limit.',
this._events[type].length);
if(typeof console.trace === 'function'){

console.trace();}}}




return this;};


EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type,listener){
if(!isFunction(listener))
throw TypeError('listener must be a function');

var fired=false;

function g(){
this.removeListener(type,g);

if(!fired){
fired = true;
listener.apply(this,arguments);}}



g.listener = listener;
this.on(type,g);

return this;};



EventEmitter.prototype.removeListener = function(type,listener){
var list,position,length,i;

if(!isFunction(listener))
throw TypeError('listener must be a function');

if(!this._events || !this._events[type])
return this;

list = this._events[type];
length = list.length;
position = -1;

if(list === listener || 
isFunction(list.listener) && list.listener === listener){
delete this._events[type];
if(this._events.removeListener)
this.emit('removeListener',type,listener);}else 

if(isObject(list)){
for(i = length;i-- > 0;) {
if(list[i] === listener || 
list[i].listener && list[i].listener === listener){
position = i;
break;}}



if(position < 0)
return this;

if(list.length === 1){
list.length = 0;
delete this._events[type];}else 
{
list.splice(position,1);}


if(this._events.removeListener)
this.emit('removeListener',type,listener);}


return this;};


EventEmitter.prototype.removeAllListeners = function(type){
var key,listeners;

if(!this._events)
return this;


if(!this._events.removeListener){
if(arguments.length === 0)
this._events = {};else 
if(this._events[type])
delete this._events[type];
return this;}



if(arguments.length === 0){
for(key in this._events) {
if(key === 'removeListener')continue;
this.removeAllListeners(key);}

this.removeAllListeners('removeListener');
this._events = {};
return this;}


listeners = this._events[type];

if(isFunction(listeners)){
this.removeListener(type,listeners);}else 
{

while(listeners.length) 
this.removeListener(type,listeners[listeners.length - 1]);}

delete this._events[type];

return this;};


EventEmitter.prototype.listeners = function(type){
var ret;
if(!this._events || !this._events[type])
ret = [];else 
if(isFunction(this._events[type]))
ret = [this._events[type]];else 

ret = this._events[type].slice();
return ret;};


EventEmitter.listenerCount = function(emitter,type){
var ret;
if(!emitter._events || !emitter._events[type])
ret = 0;else 
if(isFunction(emitter._events[type]))
ret = 1;else 

ret = emitter._events[type].length;
return ret;};


function isFunction(arg){
return typeof arg === 'function';}


function isNumber(arg){
return typeof arg === 'number';}


function isObject(arg){
return typeof arg === 'object' && arg !== null;}


function isUndefined(arg){
return arg === void 0;}
});
__d('yarn/app/views/browser/yarnwebview.js',["react-native/Libraries/react-native/react-native.js","react-native-webview-bridge/jsx/WebViewBridge.js","yarn/app/logger/logger.js","node-read/index.js","yarn/app/views/browser/wordHelpers.js","yarn/app/actions/actions.js","yarn/app/views/browser/websiteapi.js","yarn/app/uiconfig.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=

React.StyleSheet;var WebView=React.WebView;

var WebViewBridge=require('react-native-webview-bridge/jsx/WebViewBridge.js');

var log=require('yarn/app/logger/logger.js');
var readability=require('node-read/index.js');
var wordHelpers=require('yarn/app/views/browser/wordHelpers.js');

var actions=require('yarn/app/actions/actions.js');

var YARN_API=require('yarn/app/views/browser/websiteapi.js').toString();
YARN_API = '(' + YARN_API + '())';

var uiConfig=require('yarn/app/uiconfig.js');

function encodeMessage(name,data){
return JSON.stringify({
name:name,
data:data});}



function decodeMessage(msg){
return JSON.parse(msg);}


var BGWASH='rgba(255,255,255,0.8)';
var WEBVIEW_REF='webview';















var Browser=React.createClass({
lastParsedContent:'',
waitForContentTimeout:0,

getInitialState:function(){
return {
status:'No Page Loaded',
backButtonEnabled:false,
forwardButtonEnabled:false,
loading:true,
url:this.props.url};},



render:function(){
return (
React.createElement(WebViewBridge,{
ref:WEBVIEW_REF,
automaticallyAdjustContentInsets:false,
style:styles.webView,
url:this.state.url,
javaScriptEnabledAndroid:true,
onNavigationStateChange:this.onNavigationStateChange,
startInLoadingState:true}));},




componentDidMount:function(){
this.refs[WEBVIEW_REF].onMessage((function(message){
var msg=decodeMessage(message);

switch(msg.name){
case 'WEBSITE_CONTENT':
clearTimeout(this.waitForContentTimeout);
console.log('website content received',msg.data.length,msg.data.length < 100?msg.data:'');
log({
message:'Page content received',
url:this.props.url,
length:msg.data.length});




this.parseWebsiteContent(msg.data);
break;

case 'WORDS_CHANGED':
console.log('words changed',msg.data);
break;

case 'LOG':
var args=['WEBVIEW LOG:'].concat(msg.data);
console.log.apply(console,args);
break;

case 'WEBSITE_READY':
this.setHighlightColor(uiConfig.COLORS.ORANGE_BG);
this.requestWebsiteContent();
break;

case 'WORDS':
console.log('visited words:',msg.data);
this.props.onVisibleWordsChanged && this.props.onVisibleWordsChanged(msg.data);
break;

case 'SCROLL':
this.props.onScroll && this.props.onScroll(msg.data);
break;

case 'NOT_ALLOWED_URL':
this.props.onNotAllowedUrl && this.props.onNotAllowedUrl(msg.data);}}).


bind(this));},


onNavigationStateChange:function(navState){

this.props.onNavigationStateChange && this.props.onNavigationStateChange(navState);

console.log('onNavigationStateChange',navState);
this.setState({
url:navState.url,
status:navState.title,
loading:navState.loading});},




















requestWebsiteContent:function(shouldInjectYarnApi){
this.sendCommand('GET_HTML');
this.waitForContentTimeout = setTimeout((function(){
console.log('!!!!!! no content, retry');
this.requestWebsiteContent();}).
bind(this),5000);},


parseWebsiteContent:function(html){

readability(html,(function(err,article,meta){


if(err){
throw err;}

var content=(article.content || '').replace(/\s/g,' ');

if(!content.length){

return this.requestWebsiteContent();}








var contentToParse=article.title + ' ' + article.content;
console.log('content to parse: ',contentToParse);

if(this.lastParsedContent === contentToParse){
console.log('content was already parsed - terminating');
return;}

this.lastParsedContent = contentToParse;
var range=this.props.userRange;
var level=this.props.userLevel || 50;
var words=wordHelpers.extractWordsFromArticle(contentToParse,level - range,level + range);

var attempts=0;
while(words.length < 8 && attempts++ < 5) {
log({
message:'Not enough words, extending the range',
previousRange:range,
wordsForPreviousRange:words,
newRange:range + 5});

range += 5;
words = wordHelpers.extractWordsFromArticle(contentToParse,level - range,level + range);}




console.log('parsed words:',words);
this.props.onWordsParsed && this.props.onWordsParsed(words);}).
bind(this));},


injectYarnWebsiteApi:function(){
try{
console.log('sending YARN API to webview');
this.refs[WEBVIEW_REF].injectBridgeScript();
this.refs[WEBVIEW_REF].evalScript(YARN_API);}
catch(ex) {
console.log('INJECTION ERROR!');}},



sendCommand:function(command,data){
this.refs[WEBVIEW_REF].send(encodeMessage(command,data));},


prepareWords:function(words){
this.sendCommand('PREPARE_WORDS',words);},


stopScrollTracking:function(){
this.sendCommand('STOP_SCROLL_TRACKING');},


goBack:function(){
this.refs[WEBVIEW_REF].goBack();},


goForward:function(){
this.refs[WEBVIEW_REF].goForward();},


reload:function(){
this.refs[WEBVIEW_REF].reload();},


highlightWord:function(word){
this.sendCommand('HIGHLIGHT_WORD',word);},


scrollToWord:function(word){
this.sendCommand('SCROLL_TO_WORD',word);},


unhighlightWords:function(){
this.sendCommand('UNHIGHLIGHT_WORDS');},


resetLastParsedContent:function(){
this.lastParsedContent = '';},


setHighlightColor:function(color){
this.sendCommand('SET_HIGHLIGHT_COLOR',color);},


goToRandomUrl:function(){
this.sendCommand('GO_TO_RANDOM_URL');}});



var styles=StyleSheet.create({
webView:{
backgroundColor:BGWASH,
height:350}});


module.exports = Browser;
});
__d('react-native-webview-bridge/jsx/WebViewBridge.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');var 


WebView=



React.WebView;var WebViewManager=React.NativeModules.WebViewManager;var 

WebViewBridge=(function(_WebView){_inherits(WebViewBridge,_WebView);
function WebViewBridge(props){_classCallCheck(this,WebViewBridge);
_get(Object.getPrototypeOf(WebViewBridge.prototype),'constructor',this).call(this,props);
this.handlerId = 0;}_createClass(WebViewBridge,[{key:'getWebViewBridgeHandler',value:





function getWebViewBridgeHandler(fn){var _this=this;



var handler=this.getWebWiewHandle || this.getWebViewHandle;

if(this.handlerId){
fn(this.handlerId);}else 
{


setTimeout(function(){
_this.handlerId = handler();
fn(_this.handlerId);},
0);}}},{key:'injectBridgeScript',value:






function injectBridgeScript(){
this.getWebViewBridgeHandler(function(handlerId){
WebViewManager.injectBridgeScript(handlerId);});}},{key:'onMessage',value:



function onMessage(cb){var _this2=this;
this.getWebViewBridgeHandler(function(handlerId){
WebViewManager.onMessage(handlerId,function(messages){
messages.forEach(function(message){
cb(message);});



_this2.onMessage(cb);});});}},{key:'evalScript',value:




function evalScript(value){
this.getWebViewBridgeHandler(function(handlerId){
WebViewManager.eval(handlerId,value);});}},{key:'send',value:



function send(message){
if(typeof message !== 'string'){
message = JSON.stringify(message);}


this.getWebViewBridgeHandler(function(handlerId){
WebViewManager.send(handlerId,message);});}},{key:'print',value:



function print(){
this.getWebViewBridgeHandler(function(handlerId){
WebViewManager.print(handlerId);});}},{key:'componentDidMount',value:



function componentDidMount(){
if(_get(Object.getPrototypeOf(WebViewBridge.prototype),'componentDidMount',this)){
_get(Object.getPrototypeOf(WebViewBridge.prototype),'componentDidMount',this).call(this);}


this.getWebViewBridgeHandler(function(handlerId){
WebViewManager.bridgeSetup(handlerId);});}},{key:'componentWillUnmount',value:



function componentWillUnmount(){var _this3=this;
if(_get(Object.getPrototypeOf(WebViewBridge.prototype),'componentWillUnmount',this)){
_get(Object.getPrototypeOf(WebViewBridge.prototype),'componentWillMount',this).call(this);}



this.getWebViewBridgeHandler(function(handlerId){
WebViewManager.callbackCleanup(handlerId);
_this3.handlerId = 0;});}}]);return WebViewBridge;})(WebView);




module.exports = WebViewBridge;
});
__d('yarn/app/logger/logger.js',[],function(global, require, module, exports) {  'use strict';


var url='http://logs-01.loggly.com/bulk/41096412-3533-4c39-bed4-a19e96b4aa42/tag/bulk/';
var sessionTimestamp=Date.now();

module.exports = function(data){
if(typeof data === 'string'){
data = {
message:data};}


data.sessionTimestamp = sessionTimestamp;
data.timestamp = Date.now();

var dataStr=JSON.stringify(data);

console.log(data.message,data);


return fetch(url,{
method:'post',
headers:{
'Accept':'application/json',
'Content-Type':'application/json'},

body:dataStr});};
});
__d('node-read/index.js',["node-read/lib/utils.js","url/url.js","cheerio/index.js"],function(global, require, module, exports) {  var utils=require('node-read/lib/utils.js');
var url=require('url/url.js');
var cheerio=require('cheerio/index.js');

function Article(dom,options,uri){
this.$ = dom;
this.originalDOM = dom;
this.cache = {};

if(uri && typeof uri != "undefined"){
this.base = uri.protocol + "//" + uri.hostname + uri.pathname;
if(uri.port && uri.port != 80)this.base += ":" + uri.port;}else 
{
this.base = false;}


this.options = options;
this.__defineGetter__('content',function(){
return this.getContent(true);});

this.__defineGetter__('title',function(){
return this.getTitle(true);});

this.__defineGetter__('html',function(){
return this.getHTML(true);});

this.__defineGetter__('dom',function(){
return this.getDOM(true);});}



Article.prototype.getContent = function(){
if(typeof this.cache['article-content'] !== 'undefined'){
return this.cache['article-content'];}

var content=utils.extract(this.$,this.base,this.options).text();

return this.cache['article-content'] = content;};




Article.prototype.getTitle = function(){
if(typeof this.cache['article-title'] !== 'undefined'){
return this.cache['article-title'];}





var preferredTitle=this.$('.entry-title, .instapaper_title');
if(preferredTitle.length > 0){
return this.cache['article-title'] = preferredTitle.first().text().trim();}


var title=this.$('title').text();
var betterTitle;
var commonSeparatingCharacters=[' | ',' _ ',' - ','«','»','—'];

var self=this;
commonSeparatingCharacters.forEach(function(char){
var tmpArray=title.split(char);
if(tmpArray.length > 1){
if(betterTitle)return self.cache['article-title'] = title;
betterTitle = tmpArray[0].trim();}});



if(betterTitle && betterTitle.length > 10){
return this.cache['article-title'] = betterTitle;}


return this.cache['article-title'] = title.trim();};


Article.prototype.getDOM = function(){
return this.originalDOM;};


Article.prototype.getHTML = function(){
return this.$.html();};


var read=module.exports = function(html,options,callback){
if(typeof options === 'function'){
callback = options;
options = {
considerDIVs:true,
nodesToRemove:'meta,iframe,noscript,style,aside,object,script'};}



if(!html.match(/^\s*</)){

parseDOM('<html></html>',null);}else 
{
parseDOM(html,null);}


function parseDOM(html,url){
if(!html)return callback(new Error('Empty html'));
var $=cheerio.load(html,{
normalizeWhitespace:true});

if($('body').length < 1)return callback(new Error("No body tag was found"));
return callback(null,new Article($,options,url),url);}};
});
__d('node-read/lib/utils.js',["url/url.js"],function(global, require, module, exports) {  var 



url=require("url/url.js");





var regexps={
unlikelyCandidatesRe:/combx|pager|comment|disqus|foot|header|menu|meta|nav|rss|shoutbox|sidebar|sponsor|share|bookmark|social|advert|leaderboard|instapaper_ignore|entry-unrelated/i,
okMaybeItsACandidateRe:/and|article|body|column|main/i,
positiveRe:/article|body|content|entry|hentry|page|pagination|post|text/i,
negativeRe:/combx|comment|captcha|contact|foot|footer|footnote|link|media|meta|promo|related|scroll|shoutbox|sponsor|utility|tags|widget|tip|dialog/i,
divToPElementsRe:/<(a|blockquote|dl|div|img|ol|p|pre|table|ul)/i,
replaceBrsRe:/(<br[^>]*>[ \n\r\t]*){2,}/gi,
replaceFontsRe:/<(\/?)font[^>]*>/gi,
trimRe:/^\s+|\s+$/g,
normalizeRe:/\s{2,}/g,
killBreaksRe:/(<br\s*\/?>(\s|&nbsp;?)*){1,}/g,
videoRe:/http:\/\/(www\.)?(youtube|vimeo|youku|tudou|56|yinyuetai)\.com/i,
nextLink:/(next|weiter|continue|>([^\|]|$)|»([^\|]|$))/i};






var nodeTypes={
'mostPositive':['div'],
'positive':['pre','td','blockquote'],
'negative':['address','ol','ul','dl','dd','dt','li'],
'mostNegative':['h1','h2','h3','h4','h5','h6','th']};






function getArticle(candidates,$,options){
var topCandidate=null;

candidates.forEach(function(elem){
var linkDensity=getLinkDensity(elem,$);
var score=elem.data('readabilityScore');
var siblings=elem.children('p').length;

elem.data('readabilityScore',Math.min(2,Math.max(siblings,1)) * score * (1 - linkDensity));
if(!topCandidate || elem.data('readabilityScore') > topCandidate.data('readabilityScore')){
topCandidate = elem;}});






if(topCandidate === null){
return $('body');}



var parent;
if(!(parent = topCandidate.parent()) || parent.length == 0 || topCandidate.children('p').length > 5){
return filterCandidates(topCandidate,topCandidate.children(),$);}else 
{
return filterCandidates(topCandidate,parent.children(),$);}}








function filterCandidates(topCandidate,siblings,$){
var articleContent=$("<div id='readabilityArticle'></div>");
var siblingScoreThreshold=Math.max(10,topCandidate.data('readabilityScore') * 0.2);

siblings.each(function(index,elem){

var node=$(this);
var append=false;
var type=node.get(0).name;
var score=node.data('readabilityScore');
var children=siblings.contents().length;

if(node.is(topCandidate) || score > siblingScoreThreshold){
append = true;}


if(children > 0){
siblings.contents().each(function(index,elem){
if(elem.name == "img")append = true;});}



if(!append && (type == 'p' || type == 'ul' || type == 'blockquote' || type == 'pre' || type == 'h2')){
$(elem).find('a').each(function(index,elems){
if($(elems).text().length > 1)return;
if(elems.name == "a")$(elems).remove();});


var linkDensity=getLinkDensity(node,$);
var len=node.text().length;
if(len < 3)return;

if(len > 80 && linkDensity < 0.25){
append = true;}else 
if(len < 80 && linkDensity == 0 && node.text().replace(regexps.trimRe,"").length > 0){
append = true;}}



if(append){
articleContent.append(node);}});


return articleContent;}






function getCandidates($,base,options){


$(options.nodesToRemove).remove();


var candidates=[];


$('*','body').each(function(index,element){
var node=$(this);


if(!node || node.length == 0)return;
var nodeType=node.get(0).name;


var classAndID=(node.attr('class') || "") + (node.attr('id') || "");
if(classAndID.search(regexps.unlikelyCandidatesRe) !== -1 && classAndID.search(regexps.okMaybeItsACandidateRe) == -1){
return node.remove();}



if(nodeType == "div" && node.children().length < 1 && node.text().trim().length < 1){
return node.remove();}



node.removeAttr('style');


if(nodeType === "div" && options.considerDIVs){
if(node.html().search(regexps.divToPElementsRe) === -1){
node.replaceWith('<p class="node-read-div2p">' + node.html() + '</p>');}else 
{
node.contents().each(function(index,element){
var child=$(this),
childEntity;
if(!child || !(childEntity = child.get(0))){
return;}

if(childEntity.type == 'text' && childEntity.data && childEntity.data.replace(regexps.trimRe,'').length > 1){
child.replaceWith('<p class="node-read-div2p">' + childEntity.data + '</p>');}});}}






if(nodeType == "p" || nodeType == "pre"){
return calculateNodeScore(node,candidates);}



if(base){
if(nodeType == "img" && typeof node.attr('src') != "undefined"){
node.attr('src',url.resolve(base,node.attr('src')));}

if(nodeType == "a" && typeof node.attr('href') != "undefined"){
node.attr('href',url.resolve(base,node.attr('href')));}}




if(["h1","h2","h3","h4","h5","h6"].indexOf(nodeType) !== -1){
var weight=getClassWeight(node,$);
var density=getLinkDensity(node,$);
if(weight < 0 || density > 0.3){
node.remove();}}});





$('p.node-read-div2p','body').each(function(){
calculateNodeScore($(this),candidates);});


return candidates;}








function scoreCandidate(node,contentScore,candidates){
var score;
if(typeof node.data('readabilityScore') == "undefined"){
score = initializeNode(node);
candidates.push(node);}else 
{
score = node.data('readabilityScore') || 0;}

node.data('readabilityScore',score + contentScore);}







function calculateNodeScore(node,candidates){
var txt=node.text();
var contentScore=1;


if(txt.length < 25)return;



var commas=txt.match(/[,，.。;；?？、]/g);
if(commas && commas.length){
contentScore += commas.length;}



contentScore += Math.min(Math.floor(txt.length / 100),3);



var parent=node.parent();

if(parent && parent.length > 0){
scoreCandidate(parent,contentScore,candidates);
var grandParent=parent.parent();
if(grandParent && grandParent.length > 0){
scoreCandidate(grandParent,contentScore / 2,candidates);}}}








function initializeNode(node){
if(!node || node.length == 0)return 0;
var tag=node.get(0).name;
if(nodeTypes['mostPositive'].indexOf(tag))return 5 + getClassWeight(node);
if(nodeTypes['positive'].indexOf(tag))return 3 + getClassWeight(node);
if(nodeTypes['negative'].indexOf(tag))return -3 + getClassWeight(node);
if(nodeTypes['mostNegative'].indexOf(tag))return -5 + getClassWeight(node);
return -1;}






function getClassWeight(node){
if(node == null || node.length == 0)return 0;
var classAndID=(node.attr('class') || "") + (node.attr('id') || "");
var weight=0;

if(node.get(0).name == "article")weight += 25;
if(classAndID.search(regexps.negativeRe) !== -1)weight -= 25;
if(classAndID.search(regexps.positiveRe) !== -1)weight += 25;

return weight;}








function getLinkDensity(node,$){
var links=node.find('a');
var textLength=node.text().length;
var linkLength=0;

links.each(function(index,elem){
var href=$(this).attr('href');
if(!href || href.length > 0 && href[0] === '#')return;
linkLength += $(this).text().length;});


return linkLength / textLength || 0;}







module.exports.extract = function($,base,options){
var candidates=getCandidates($,base,options);
article = getArticle(candidates,$,options);
if(article.length < 1){
article = getArticle([$('body')],$,options);}

return article;};
});
__d('url/url.js',["punycode/punycode.js","querystring/index.js"],function(global, require, module, exports) {  var 




















punycode=require('punycode/punycode.js');

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url(){
this.protocol = null;
this.slashes = null;
this.auth = null;
this.host = null;
this.port = null;
this.hostname = null;
this.hash = null;
this.search = null;
this.query = null;
this.pathname = null;
this.path = null;
this.href = null;}






var protocolPattern=/^([a-z0-9.+-]+:)/i,
portPattern=/:[0-9]*$/,



delims=['<','>','"','`',' ','\r','\n','\t'],


unwise=['{','}','|','\\','^','`'].concat(delims),


autoEscape=['\''].concat(unwise),




nonHostChars=['%','/','?',';','#'].concat(autoEscape),
hostEndingChars=['/','?','#'],
hostnameMaxLen=255,
hostnamePartPattern=/^[a-z0-9A-Z_-]{0,63}$/,
hostnamePartStart=/^([a-z0-9A-Z_-]{0,63})(.*)$/,

unsafeProtocol={
'javascript':true,
'javascript:':true},


hostlessProtocol={
'javascript':true,
'javascript:':true},


slashedProtocol={
'http':true,
'https':true,
'ftp':true,
'gopher':true,
'file':true,
'http:':true,
'https:':true,
'ftp:':true,
'gopher:':true,
'file:':true},

querystring=require('querystring/index.js');

function urlParse(url,parseQueryString,slashesDenoteHost){
if(url && isObject(url) && url instanceof Url)return url;

var u=new Url();
u.parse(url,parseQueryString,slashesDenoteHost);
return u;}


Url.prototype.parse = function(url,parseQueryString,slashesDenoteHost){
if(!isString(url)){
throw new TypeError("Parameter 'url' must be a string, not " + typeof url);}


var rest=url;



rest = rest.trim();

var proto=protocolPattern.exec(rest);
if(proto){
proto = proto[0];
var lowerProto=proto.toLowerCase();
this.protocol = lowerProto;
rest = rest.substr(proto.length);}






if(slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)){
var slashes=rest.substr(0,2) === '//';
if(slashes && !(proto && hostlessProtocol[proto])){
rest = rest.substr(2);
this.slashes = true;}}



if(!hostlessProtocol[proto] && (
slashes || proto && !slashedProtocol[proto])){

















var hostEnd=-1;
for(var i=0;i < hostEndingChars.length;i++) {
var hec=rest.indexOf(hostEndingChars[i]);
if(hec !== -1 && (hostEnd === -1 || hec < hostEnd))
hostEnd = hec;}




var auth,atSign;
if(hostEnd === -1){

atSign = rest.lastIndexOf('@');}else 
{


atSign = rest.lastIndexOf('@',hostEnd);}




if(atSign !== -1){
auth = rest.slice(0,atSign);
rest = rest.slice(atSign + 1);
this.auth = decodeURIComponent(auth);}



hostEnd = -1;
for(var i=0;i < nonHostChars.length;i++) {
var hec=rest.indexOf(nonHostChars[i]);
if(hec !== -1 && (hostEnd === -1 || hec < hostEnd))
hostEnd = hec;}


if(hostEnd === -1)
hostEnd = rest.length;

this.host = rest.slice(0,hostEnd);
rest = rest.slice(hostEnd);


this.parseHost();



this.hostname = this.hostname || '';



var ipv6Hostname=this.hostname[0] === '[' && 
this.hostname[this.hostname.length - 1] === ']';


if(!ipv6Hostname){
var hostparts=this.hostname.split(/\./);
for(var i=0,l=hostparts.length;i < l;i++) {
var part=hostparts[i];
if(!part)continue;
if(!part.match(hostnamePartPattern)){
var newpart='';
for(var j=0,k=part.length;j < k;j++) {
if(part.charCodeAt(j) > 127){



newpart += 'x';}else 
{
newpart += part[j];}}



if(!newpart.match(hostnamePartPattern)){
var validParts=hostparts.slice(0,i);
var notHost=hostparts.slice(i + 1);
var bit=part.match(hostnamePartStart);
if(bit){
validParts.push(bit[1]);
notHost.unshift(bit[2]);}

if(notHost.length){
rest = '/' + notHost.join('.') + rest;}

this.hostname = validParts.join('.');
break;}}}}





if(this.hostname.length > hostnameMaxLen){
this.hostname = '';}else 
{

this.hostname = this.hostname.toLowerCase();}


if(!ipv6Hostname){




var domainArray=this.hostname.split('.');
var newOut=[];
for(var i=0;i < domainArray.length;++i) {
var s=domainArray[i];
newOut.push(s.match(/[^A-Za-z0-9_-]/)?
'xn--' + punycode.encode(s):s);}

this.hostname = newOut.join('.');}


var p=this.port?':' + this.port:'';
var h=this.hostname || '';
this.host = h + p;
this.href += this.host;



if(ipv6Hostname){
this.hostname = this.hostname.substr(1,this.hostname.length - 2);
if(rest[0] !== '/'){
rest = '/' + rest;}}}






if(!unsafeProtocol[lowerProto]){




for(var i=0,l=autoEscape.length;i < l;i++) {
var ae=autoEscape[i];
var esc=encodeURIComponent(ae);
if(esc === ae){
esc = escape(ae);}

rest = rest.split(ae).join(esc);}}





var hash=rest.indexOf('#');
if(hash !== -1){

this.hash = rest.substr(hash);
rest = rest.slice(0,hash);}

var qm=rest.indexOf('?');
if(qm !== -1){
this.search = rest.substr(qm);
this.query = rest.substr(qm + 1);
if(parseQueryString){
this.query = querystring.parse(this.query);}

rest = rest.slice(0,qm);}else 
if(parseQueryString){

this.search = '';
this.query = {};}

if(rest)this.pathname = rest;
if(slashedProtocol[lowerProto] && 
this.hostname && !this.pathname){
this.pathname = '/';}



if(this.pathname || this.search){
var p=this.pathname || '';
var s=this.search || '';
this.path = p + s;}



this.href = this.format();
return this;};



function urlFormat(obj){




if(isString(obj))obj = urlParse(obj);
if(!(obj instanceof Url))return Url.prototype.format.call(obj);
return obj.format();}


Url.prototype.format = function(){
var auth=this.auth || '';
if(auth){
auth = encodeURIComponent(auth);
auth = auth.replace(/%3A/i,':');
auth += '@';}


var protocol=this.protocol || '',
pathname=this.pathname || '',
hash=this.hash || '',
host=false,
query='';

if(this.host){
host = auth + this.host;}else 
if(this.hostname){
host = auth + (this.hostname.indexOf(':') === -1?
this.hostname:
'[' + this.hostname + ']');
if(this.port){
host += ':' + this.port;}}



if(this.query && 
isObject(this.query) && 
Object.keys(this.query).length){
query = querystring.stringify(this.query);}


var search=this.search || query && '?' + query || '';

if(protocol && protocol.substr(-1) !== ':')protocol += ':';



if(this.slashes || 
(!protocol || slashedProtocol[protocol]) && host !== false){
host = '//' + (host || '');
if(pathname && pathname.charAt(0) !== '/')pathname = '/' + pathname;}else 
if(!host){
host = '';}


if(hash && hash.charAt(0) !== '#')hash = '#' + hash;
if(search && search.charAt(0) !== '?')search = '?' + search;

pathname = pathname.replace(/[?#]/g,function(match){
return encodeURIComponent(match);});

search = search.replace('#','%23');

return protocol + host + pathname + search + hash;};


function urlResolve(source,relative){
return urlParse(source,false,true).resolve(relative);}


Url.prototype.resolve = function(relative){
return this.resolveObject(urlParse(relative,false,true)).format();};


function urlResolveObject(source,relative){
if(!source)return relative;
return urlParse(source,false,true).resolveObject(relative);}


Url.prototype.resolveObject = function(relative){
if(isString(relative)){
var rel=new Url();
rel.parse(relative,false,true);
relative = rel;}


var result=new Url();
Object.keys(this).forEach(function(k){
result[k] = this[k];},
this);



result.hash = relative.hash;


if(relative.href === ''){
result.href = result.format();
return result;}



if(relative.slashes && !relative.protocol){

Object.keys(relative).forEach(function(k){
if(k !== 'protocol')
result[k] = relative[k];});



if(slashedProtocol[result.protocol] && 
result.hostname && !result.pathname){
result.path = result.pathname = '/';}


result.href = result.format();
return result;}


if(relative.protocol && relative.protocol !== result.protocol){








if(!slashedProtocol[relative.protocol]){
Object.keys(relative).forEach(function(k){
result[k] = relative[k];});

result.href = result.format();
return result;}


result.protocol = relative.protocol;
if(!relative.host && !hostlessProtocol[relative.protocol]){
var relPath=(relative.pathname || '').split('/');
while(relPath.length && !(relative.host = relPath.shift()));
if(!relative.host)relative.host = '';
if(!relative.hostname)relative.hostname = '';
if(relPath[0] !== '')relPath.unshift('');
if(relPath.length < 2)relPath.unshift('');
result.pathname = relPath.join('/');}else 
{
result.pathname = relative.pathname;}

result.search = relative.search;
result.query = relative.query;
result.host = relative.host || '';
result.auth = relative.auth;
result.hostname = relative.hostname || relative.host;
result.port = relative.port;

if(result.pathname || result.search){
var p=result.pathname || '';
var s=result.search || '';
result.path = p + s;}

result.slashes = result.slashes || relative.slashes;
result.href = result.format();
return result;}


var isSourceAbs=result.pathname && result.pathname.charAt(0) === '/',
isRelAbs=
relative.host || 
relative.pathname && relative.pathname.charAt(0) === '/',

mustEndAbs=isRelAbs || isSourceAbs || 
result.host && relative.pathname,
removeAllDots=mustEndAbs,
srcPath=result.pathname && result.pathname.split('/') || [],
relPath=relative.pathname && relative.pathname.split('/') || [],
psychotic=result.protocol && !slashedProtocol[result.protocol];






if(psychotic){
result.hostname = '';
result.port = null;
if(result.host){
if(srcPath[0] === '')srcPath[0] = result.host;else 
srcPath.unshift(result.host);}

result.host = '';
if(relative.protocol){
relative.hostname = null;
relative.port = null;
if(relative.host){
if(relPath[0] === '')relPath[0] = relative.host;else 
relPath.unshift(relative.host);}

relative.host = null;}

mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');}


if(isRelAbs){

result.host = relative.host || relative.host === ''?
relative.host:result.host;
result.hostname = relative.hostname || relative.hostname === ''?
relative.hostname:result.hostname;
result.search = relative.search;
result.query = relative.query;
srcPath = relPath;}else 

if(relPath.length){


if(!srcPath)srcPath = [];
srcPath.pop();
srcPath = srcPath.concat(relPath);
result.search = relative.search;
result.query = relative.query;}else 
if(!isNullOrUndefined(relative.search)){



if(psychotic){
result.hostname = result.host = srcPath.shift();



var authInHost=result.host && result.host.indexOf('@') > 0?
result.host.split('@'):false;
if(authInHost){
result.auth = authInHost.shift();
result.host = result.hostname = authInHost.shift();}}


result.search = relative.search;
result.query = relative.query;

if(!isNull(result.pathname) || !isNull(result.search)){
result.path = (result.pathname?result.pathname:'') + (
result.search?result.search:'');}

result.href = result.format();
return result;}


if(!srcPath.length){


result.pathname = null;

if(result.search){
result.path = '/' + result.search;}else 
{
result.path = null;}

result.href = result.format();
return result;}





var last=srcPath.slice(-1)[0];
var hasTrailingSlash=
(result.host || relative.host) && (last === '.' || last === '..') || 
last === '';



var up=0;
for(var i=srcPath.length;i >= 0;i--) {
last = srcPath[i];
if(last == '.'){
srcPath.splice(i,1);}else 
if(last === '..'){
srcPath.splice(i,1);
up++;}else 
if(up){
srcPath.splice(i,1);
up--;}}




if(!mustEndAbs && !removeAllDots){
for(;up--;up) {
srcPath.unshift('..');}}



if(mustEndAbs && srcPath[0] !== '' && (
!srcPath[0] || srcPath[0].charAt(0) !== '/')){
srcPath.unshift('');}


if(hasTrailingSlash && srcPath.join('/').substr(-1) !== '/'){
srcPath.push('');}


var isAbsolute=srcPath[0] === '' || 
srcPath[0] && srcPath[0].charAt(0) === '/';


if(psychotic){
result.hostname = result.host = isAbsolute?'':
srcPath.length?srcPath.shift():'';



var authInHost=result.host && result.host.indexOf('@') > 0?
result.host.split('@'):false;
if(authInHost){
result.auth = authInHost.shift();
result.host = result.hostname = authInHost.shift();}}



mustEndAbs = mustEndAbs || result.host && srcPath.length;

if(mustEndAbs && !isAbsolute){
srcPath.unshift('');}


if(!srcPath.length){
result.pathname = null;
result.path = null;}else 
{
result.pathname = srcPath.join('/');}



if(!isNull(result.pathname) || !isNull(result.search)){
result.path = (result.pathname?result.pathname:'') + (
result.search?result.search:'');}

result.auth = relative.auth || result.auth;
result.slashes = result.slashes || relative.slashes;
result.href = result.format();
return result;};


Url.prototype.parseHost = function(){
var host=this.host;
var port=portPattern.exec(host);
if(port){
port = port[0];
if(port !== ':'){
this.port = port.substr(1);}

host = host.substr(0,host.length - port.length);}

if(host)this.hostname = host;};


function isString(arg){
return typeof arg === "string";}


function isObject(arg){
return typeof arg === 'object' && arg !== null;}


function isNull(arg){
return arg === null;}

function isNullOrUndefined(arg){
return arg == null;}
});
__d('punycode/punycode.js',[],function(global, require, module, exports) {  ;
(function(root){


var freeExports=typeof exports == 'object' && exports && 
!exports.nodeType && exports;
var freeModule=typeof module == 'object' && module && 
!module.nodeType && module;
var freeGlobal=typeof global == 'object' && global;
if(
freeGlobal.global === freeGlobal || 
freeGlobal.window === freeGlobal || 
freeGlobal.self === freeGlobal)
{
root = freeGlobal;}







var punycode,


maxInt=2147483647,


base=36,
tMin=1,
tMax=26,
skew=38,
damp=700,
initialBias=72,
initialN=128,
delimiter='-',


regexPunycode=/^xn--/,
regexNonASCII=/[^\x20-\x7E]/,
regexSeparators=/[\x2E\u3002\uFF0E\uFF61]/g,


errors={
'overflow':'Overflow: input needs wider integers to process',
'not-basic':'Illegal input >= 0x80 (not a basic code point)',
'invalid-input':'Invalid input'},



baseMinusTMin=base - tMin,
floor=Math.floor,
stringFromCharCode=String.fromCharCode,


key;









function error(type){
throw RangeError(errors[type]);}










function map(array,fn){
var length=array.length;
var result=[];
while(length--) {
result[length] = fn(array[length]);}

return result;}












function mapDomain(string,fn){
var parts=string.split('@');
var result='';
if(parts.length > 1){


result = parts[0] + '@';
string = parts[1];}


string = string.replace(regexSeparators,'\x2E');
var labels=string.split('.');
var encoded=map(labels,fn).join('.');
return result + encoded;}















function ucs2decode(string){
var output=[],
counter=0,
length=string.length,
value,
extra;
while(counter < length) {
value = string.charCodeAt(counter++);
if(value >= 0xD800 && value <= 0xDBFF && counter < length){

extra = string.charCodeAt(counter++);
if((extra & 0xFC00) == 0xDC00){
output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);}else 
{


output.push(value);
counter--;}}else 

{
output.push(value);}}


return output;}










function ucs2encode(array){
return map(array,function(value){
var output='';
if(value > 0xFFFF){
value -= 0x10000;
output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
value = 0xDC00 | value & 0x3FF;}

output += stringFromCharCode(value);
return output;}).
join('');}











function basicToDigit(codePoint){
if(codePoint - 48 < 10){
return codePoint - 22;}

if(codePoint - 65 < 26){
return codePoint - 65;}

if(codePoint - 97 < 26){
return codePoint - 97;}

return base;}













function digitToBasic(digit,flag){


return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);}







function adapt(delta,numPoints,firstTime){
var k=0;
delta = firstTime?floor(delta / damp):delta >> 1;
delta += floor(delta / numPoints);
for(;delta > baseMinusTMin * tMax >> 1;k += base) {
delta = floor(delta / baseMinusTMin);}

return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));}









function decode(input){

var output=[],
inputLength=input.length,
out,
i=0,
n=initialN,
bias=initialBias,
basic,
j,
index,
oldi,
w,
k,
digit,
t,

baseMinusT;





basic = input.lastIndexOf(delimiter);
if(basic < 0){
basic = 0;}


for(j = 0;j < basic;++j) {

if(input.charCodeAt(j) >= 0x80){
error('not-basic');}

output.push(input.charCodeAt(j));}





for(index = basic > 0?basic + 1:0;index < inputLength;) {






for(oldi = i,w = 1,k = base;;k += base) {

if(index >= inputLength){
error('invalid-input');}


digit = basicToDigit(input.charCodeAt(index++));

if(digit >= base || digit > floor((maxInt - i) / w)){
error('overflow');}


i += digit * w;
t = k <= bias?tMin:k >= bias + tMax?tMax:k - bias;

if(digit < t){
break;}


baseMinusT = base - t;
if(w > floor(maxInt / baseMinusT)){
error('overflow');}


w *= baseMinusT;}



out = output.length + 1;
bias = adapt(i - oldi,out,oldi == 0);



if(floor(i / out) > maxInt - n){
error('overflow');}


n += floor(i / out);
i %= out;


output.splice(i++,0,n);}



return ucs2encode(output);}









function encode(input){
var n,
delta,
handledCPCount,
basicLength,
bias,
j,
m,
q,
k,
t,
currentValue,
output=[],

inputLength,

handledCPCountPlusOne,
baseMinusT,
qMinusT;


input = ucs2decode(input);


inputLength = input.length;


n = initialN;
delta = 0;
bias = initialBias;


for(j = 0;j < inputLength;++j) {
currentValue = input[j];
if(currentValue < 0x80){
output.push(stringFromCharCode(currentValue));}}



handledCPCount = basicLength = output.length;





if(basicLength){
output.push(delimiter);}



while(handledCPCount < inputLength) {



for(m = maxInt,j = 0;j < inputLength;++j) {
currentValue = input[j];
if(currentValue >= n && currentValue < m){
m = currentValue;}}





handledCPCountPlusOne = handledCPCount + 1;
if(m - n > floor((maxInt - delta) / handledCPCountPlusOne)){
error('overflow');}


delta += (m - n) * handledCPCountPlusOne;
n = m;

for(j = 0;j < inputLength;++j) {
currentValue = input[j];

if(currentValue < n && ++delta > maxInt){
error('overflow');}


if(currentValue == n){

for(q = delta,k = base;;k += base) {
t = k <= bias?tMin:k >= bias + tMax?tMax:k - bias;
if(q < t){
break;}

qMinusT = q - t;
baseMinusT = base - t;
output.push(
stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT,0)));

q = floor(qMinusT / baseMinusT);}


output.push(stringFromCharCode(digitToBasic(q,0)));
bias = adapt(delta,handledCPCountPlusOne,handledCPCount == basicLength);
delta = 0;
++handledCPCount;}}



++delta;
++n;}


return output.join('');}













function toUnicode(input){
return mapDomain(input,function(string){
return regexPunycode.test(string)?
decode(string.slice(4).toLowerCase()):
string;});}














function toASCII(input){
return mapDomain(input,function(string){
return regexNonASCII.test(string)?
'xn--' + encode(string):
string;});}






punycode = {





'version':'1.3.2',







'ucs2':{
'decode':ucs2decode,
'encode':ucs2encode},

'decode':decode,
'encode':encode,
'toASCII':toASCII,
'toUnicode':toUnicode};





if(
typeof define == 'function' && 
typeof define.amd == 'object' && 
define.amd)
{
define('punycode',function(){
return punycode;});}else 

if(freeExports && freeModule){
if(module.exports == freeExports){
freeModule.exports = punycode;}else 
{
for(key in punycode) {
punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);}}}else 


{
root.punycode = punycode;}})(


this);
});
__d('querystring/index.js',["querystring/decode.js","querystring/encode.js"],function(global, require, module, exports) {  'use strict';

exports.decode = exports.parse = require('querystring/decode.js');
exports.encode = exports.stringify = require('querystring/encode.js');
});
__d('querystring/decode.js',[],function(global, require, module, exports) {  'use strict';

























function hasOwnProperty(obj,prop){
return Object.prototype.hasOwnProperty.call(obj,prop);}


module.exports = function(qs,sep,eq,options){
sep = sep || '&';
eq = eq || '=';
var obj={};

if(typeof qs !== 'string' || qs.length === 0){
return obj;}


var regexp=/\+/g;
qs = qs.split(sep);

var maxKeys=1000;
if(options && typeof options.maxKeys === 'number'){
maxKeys = options.maxKeys;}


var len=qs.length;

if(maxKeys > 0 && len > maxKeys){
len = maxKeys;}


for(var i=0;i < len;++i) {
var x=qs[i].replace(regexp,'%20'),
idx=x.indexOf(eq),
kstr,vstr,k,v;

if(idx >= 0){
kstr = x.substr(0,idx);
vstr = x.substr(idx + 1);}else 
{
kstr = x;
vstr = '';}


k = decodeURIComponent(kstr);
v = decodeURIComponent(vstr);

if(!hasOwnProperty(obj,k)){
obj[k] = v;}else 
if(Array.isArray(obj[k])){
obj[k].push(v);}else 
{
obj[k] = [obj[k],v];}}



return obj;};
});
__d('querystring/encode.js',[],function(global, require, module, exports) {  'use strict';






















var stringifyPrimitive=function(v){
switch(typeof v){
case 'string':
return v;

case 'boolean':
return v?'true':'false';

case 'number':
return isFinite(v)?v:'';

default:
return '';}};



module.exports = function(obj,sep,eq,name){
sep = sep || '&';
eq = eq || '=';
if(obj === null){
obj = undefined;}


if(typeof obj === 'object'){
return Object.keys(obj).map(function(k){
var ks=encodeURIComponent(stringifyPrimitive(k)) + eq;
if(Array.isArray(obj[k])){
return obj[k].map(function(v){
return ks + encodeURIComponent(stringifyPrimitive(v));}).
join(sep);}else 
{
return ks + encodeURIComponent(stringifyPrimitive(obj[k]));}}).

join(sep);}



if(!name)return '';
return encodeURIComponent(stringifyPrimitive(name)) + eq + 
encodeURIComponent(stringifyPrimitive(obj));};
});
__d('cheerio/index.js',["cheerio/lib/cheerio.js"],function(global, require, module, exports) {  exports = 



module.exports = require('cheerio/lib/cheerio.js');
});
__d('cheerio/lib/cheerio.js',["cheerio/lib/parse.js","lodash/index.js","cheerio/lib/api/attributes.js","cheerio/lib/api/traversing.js","cheerio/lib/api/manipulation.js","cheerio/lib/api/css.js","cheerio/lib/api/forms.js","cheerio/lib/static.js"],function(global, require, module, exports) {  var 



parse=require('cheerio/lib/parse.js'),
_=require('lodash/index.js');





var api=[
require('cheerio/lib/api/attributes.js'),
require('cheerio/lib/api/traversing.js'),
require('cheerio/lib/api/manipulation.js'),
require('cheerio/lib/api/css.js'),
require('cheerio/lib/api/forms.js')];






var quickExpr=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/;





var Cheerio=module.exports = function(selector,context,root,options){
if(!(this instanceof Cheerio))return new Cheerio(selector,context,root,options);

this.options = _.defaults(options || {},this.options);


if(!selector)return this;

if(root){
if(typeof root === 'string')root = parse(root,this.options);
this._root = Cheerio.call(this,root);}



if(selector.cheerio)return selector;


if(isNode(selector))
selector = [selector];


if(Array.isArray(selector)){
_.forEach(selector,function(elem,idx){
this[idx] = elem;},
this);
this.length = selector.length;
return this;}



if(typeof selector === 'string' && isHtml(selector)){
return Cheerio.call(this,parse(selector,this.options).children);}



if(!context){
context = this._root;}else 
if(typeof context === 'string'){
if(isHtml(context)){

context = parse(context,this.options);
context = Cheerio.call(this,context);}else 
{

selector = [context,selector].join(' ');
context = this._root;}}else 


if(!context.cheerio){
context = Cheerio.call(this,context);}



if(!context)return this;


return context.find(selector);};






_.extend(Cheerio,require('cheerio/lib/static.js'));





Cheerio.prototype.cheerio = '[cheerio object]';





Cheerio.prototype.options = {
withDomLvl1:true,
normalizeWhitespace:false,
xmlMode:false,
decodeEntities:true};






Cheerio.prototype.length = 0;
Cheerio.prototype.splice = Array.prototype.splice;




var isHtml=function(str){

if(str.charAt(0) === '<' && str.charAt(str.length - 1) === '>' && str.length >= 3)return true;


var match=quickExpr.exec(str);
return !!(match && match[1]);};








Cheerio.prototype._make = function(dom,context){
var cheerio=new this.constructor(dom,context,this._root,this.options);
cheerio.prevObject = this;
return cheerio;};








Cheerio.prototype.toArray = function(){
return this.get();};





api.forEach(function(mod){
_.extend(Cheerio.prototype,mod);});


var isNode=function(obj){
return obj.name || obj.type === 'text' || obj.type === 'comment';};
});
__d('cheerio/lib/parse.js',["htmlparser2/lib/index.js"],function(global, require, module, exports) {  var 


htmlparser=require('htmlparser2/lib/index.js');




exports = module.exports = function(content,options){
var dom=exports.evaluate(content,options),

root=exports.evaluate('<root></root>',options)[0];

root.type = 'root';


exports.update(dom,root);

return root;};


exports.evaluate = function(content,options){


var dom;

if(typeof content === 'string' || Buffer.isBuffer(content)){
dom = htmlparser.parseDOM(content,options);}else 
{
dom = content;}


return dom;};





exports.update = function(arr,parent){

if(!Array.isArray(arr))arr = [arr];


if(parent){
parent.children = arr;}else 
{
parent = null;}



for(var i=0;i < arr.length;i++) {
var node=arr[i];


var oldParent=node.parent || node.root,
oldSiblings=oldParent && oldParent.children;
if(oldSiblings && oldSiblings !== arr){
oldSiblings.splice(oldSiblings.indexOf(node),1);
if(node.prev){
node.prev.next = node.next;}

if(node.next){
node.next.prev = node.prev;}}



if(parent){
node.prev = arr[i - 1] || null;
node.next = arr[i + 1] || null;}else 
{
node.prev = node.next = null;}


if(parent && parent.type === 'root'){
node.root = parent;
node.parent = null;}else 
{
node.root = null;
node.parent = parent;}}



return parent;};
});
__d('htmlparser2/lib/index.js',["htmlparser2/lib/Parser.js","domhandler/index.js","htmlparser2/lib/Tokenizer.js","domelementtype/index.js","htmlparser2/lib/FeedHandler.js","htmlparser2/lib/Stream.js","htmlparser2/lib/WritableStream.js","htmlparser2/lib/ProxyHandler.js","domutils/index.js","htmlparser2/lib/CollectingHandler.js"],function(global, require, module, exports) {  var Parser=require("htmlparser2/lib/Parser.js"),
DomHandler=require("domhandler/index.js");

function defineProp(name,value){
delete module.exports[name];
module.exports[name] = value;
return value;}


module.exports = {
Parser:Parser,
Tokenizer:require("htmlparser2/lib/Tokenizer.js"),
ElementType:require("domelementtype/index.js"),
DomHandler:DomHandler,
get FeedHandler(){
return defineProp("FeedHandler",require("htmlparser2/lib/FeedHandler.js"));},

get Stream(){
return defineProp("Stream",require("htmlparser2/lib/Stream.js"));},

get WritableStream(){
return defineProp("WritableStream",require("htmlparser2/lib/WritableStream.js"));},

get ProxyHandler(){
return defineProp("ProxyHandler",require("htmlparser2/lib/ProxyHandler.js"));},

get DomUtils(){
return defineProp("DomUtils",require("domutils/index.js"));},

get CollectingHandler(){
return defineProp("CollectingHandler",require("htmlparser2/lib/CollectingHandler.js"));},


DefaultHandler:DomHandler,
get RssHandler(){
return defineProp("RssHandler",this.FeedHandler);},


parseDOM:function(data,options){
var handler=new DomHandler(options);
new Parser(handler,options).end(data);
return handler.dom;},

parseFeed:function(feed,options){
var handler=new module.exports.FeedHandler(options);
new Parser(handler,options).end(feed);
return handler.dom;},

createDomStream:function(cb,options,elementCb){
var handler=new DomHandler(cb,options,elementCb);
return new Parser(handler,options);},


EVENTS:{
attribute:2,
cdatastart:0,
cdataend:0,
text:1,
processinginstruction:2,
comment:1,
commentend:0,
closetag:1,
opentag:2,
opentagname:1,
error:1,
end:0}};
});
__d('htmlparser2/lib/Parser.js',["htmlparser2/lib/Tokenizer.js","util/util.js","events/events.js"],function(global, require, module, exports) {  var Tokenizer=require("htmlparser2/lib/Tokenizer.js");
























var formTags={
input:true,
option:true,
optgroup:true,
select:true,
button:true,
datalist:true,
textarea:true};


var openImpliesClose={
tr:{tr:true,th:true,td:true},
th:{th:true},
td:{thead:true,th:true,td:true},
body:{head:true,link:true,script:true},
li:{li:true},
p:{p:true},
h1:{p:true},
h2:{p:true},
h3:{p:true},
h4:{p:true},
h5:{p:true},
h6:{p:true},
select:formTags,
input:formTags,
output:formTags,
button:formTags,
datalist:formTags,
textarea:formTags,
option:{option:true},
optgroup:{optgroup:true}};


var voidElements={
__proto__:null,
area:true,
base:true,
basefont:true,
br:true,
col:true,
command:true,
embed:true,
frame:true,
hr:true,
img:true,
input:true,
isindex:true,
keygen:true,
link:true,
meta:true,
param:true,
source:true,
track:true,
wbr:true,


path:true,
circle:true,
ellipse:true,
line:true,
rect:true,
use:true,
stop:true,
polyline:true,
polygon:true};


var re_nameEnd=/\s|\//;

function Parser(cbs,options){
this._options = options || {};
this._cbs = cbs || {};

this._tagname = "";
this._attribname = "";
this._attribvalue = "";
this._attribs = null;
this._stack = [];

this.startIndex = 0;
this.endIndex = null;

this._lowerCaseTagNames = "lowerCaseTags" in this._options?
!!this._options.lowerCaseTags:
!this._options.xmlMode;
this._lowerCaseAttributeNames = "lowerCaseAttributeNames" in this._options?
!!this._options.lowerCaseAttributeNames:
!this._options.xmlMode;

this._tokenizer = new Tokenizer(this._options,this);

if(this._cbs.onparserinit)this._cbs.onparserinit(this);}


require("util/util.js").inherits(Parser,require("events/events.js").EventEmitter);

Parser.prototype._updatePosition = function(initialOffset){
if(this.endIndex === null){
if(this._tokenizer._sectionStart <= initialOffset){
this.startIndex = 0;}else 
{
this.startIndex = this._tokenizer._sectionStart - initialOffset;}}else 


this.startIndex = this.endIndex + 1;
this.endIndex = this._tokenizer.getAbsoluteIndex();};



Parser.prototype.ontext = function(data){
this._updatePosition(1);
this.endIndex--;

if(this._cbs.ontext)this._cbs.ontext(data);};


Parser.prototype.onopentagname = function(name){
if(this._lowerCaseTagNames){
name = name.toLowerCase();}


this._tagname = name;

if(!this._options.xmlMode && name in openImpliesClose){
for(
var el;(
(el = this._stack[this._stack.length - 1]) in openImpliesClose[name]);
this.onclosetag(el));}



if(this._options.xmlMode || !(name in voidElements)){
this._stack.push(name);}


if(this._cbs.onopentagname)this._cbs.onopentagname(name);
if(this._cbs.onopentag)this._attribs = {};};


Parser.prototype.onopentagend = function(){
this._updatePosition(1);

if(this._attribs){
if(this._cbs.onopentag)this._cbs.onopentag(this._tagname,this._attribs);
this._attribs = null;}


if(!this._options.xmlMode && this._cbs.onclosetag && this._tagname in voidElements){
this._cbs.onclosetag(this._tagname);}


this._tagname = "";};


Parser.prototype.onclosetag = function(name){
this._updatePosition(1);

if(this._lowerCaseTagNames){
name = name.toLowerCase();}


if(this._stack.length && (!(name in voidElements) || this._options.xmlMode)){
var pos=this._stack.lastIndexOf(name);
if(pos !== -1){
if(this._cbs.onclosetag){
pos = this._stack.length - pos;
while(pos--) this._cbs.onclosetag(this._stack.pop());}else 

this._stack.length = pos;}else 
if(name === "p" && !this._options.xmlMode){
this.onopentagname(name);
this._closeCurrentTag();}}else 

if(!this._options.xmlMode && (name === "br" || name === "p")){
this.onopentagname(name);
this._closeCurrentTag();}};



Parser.prototype.onselfclosingtag = function(){
if(this._options.xmlMode || this._options.recognizeSelfClosing){
this._closeCurrentTag();}else 
{
this.onopentagend();}};



Parser.prototype._closeCurrentTag = function(){
var name=this._tagname;

this.onopentagend();



if(this._stack[this._stack.length - 1] === name){
if(this._cbs.onclosetag){
this._cbs.onclosetag(name);}

this._stack.pop();}};



Parser.prototype.onattribname = function(name){
if(this._lowerCaseAttributeNames){
name = name.toLowerCase();}

this._attribname = name;};


Parser.prototype.onattribdata = function(value){
this._attribvalue += value;};


Parser.prototype.onattribend = function(){
if(this._cbs.onattribute)this._cbs.onattribute(this._attribname,this._attribvalue);
if(
this._attribs && 
!Object.prototype.hasOwnProperty.call(this._attribs,this._attribname))
{
this._attribs[this._attribname] = this._attribvalue;}

this._attribname = "";
this._attribvalue = "";};


Parser.prototype._getInstructionName = function(value){
var idx=value.search(re_nameEnd),
name=idx < 0?value:value.substr(0,idx);

if(this._lowerCaseTagNames){
name = name.toLowerCase();}


return name;};


Parser.prototype.ondeclaration = function(value){
if(this._cbs.onprocessinginstruction){
var name=this._getInstructionName(value);
this._cbs.onprocessinginstruction("!" + name,"!" + value);}};



Parser.prototype.onprocessinginstruction = function(value){
if(this._cbs.onprocessinginstruction){
var name=this._getInstructionName(value);
this._cbs.onprocessinginstruction("?" + name,"?" + value);}};



Parser.prototype.oncomment = function(value){
this._updatePosition(4);

if(this._cbs.oncomment)this._cbs.oncomment(value);
if(this._cbs.oncommentend)this._cbs.oncommentend();};


Parser.prototype.oncdata = function(value){
this._updatePosition(1);

if(this._options.xmlMode || this._options.recognizeCDATA){
if(this._cbs.oncdatastart)this._cbs.oncdatastart();
if(this._cbs.ontext)this._cbs.ontext(value);
if(this._cbs.oncdataend)this._cbs.oncdataend();}else 
{
this.oncomment("[CDATA[" + value + "]]");}};



Parser.prototype.onerror = function(err){
if(this._cbs.onerror)this._cbs.onerror(err);};


Parser.prototype.onend = function(){
if(this._cbs.onclosetag){
for(
var i=this._stack.length;
i > 0;
this._cbs.onclosetag(this._stack[--i]));}


if(this._cbs.onend)this._cbs.onend();};




Parser.prototype.reset = function(){
if(this._cbs.onreset)this._cbs.onreset();
this._tokenizer.reset();

this._tagname = "";
this._attribname = "";
this._attribs = null;
this._stack = [];

if(this._cbs.onparserinit)this._cbs.onparserinit(this);};



Parser.prototype.parseComplete = function(data){
this.reset();
this.end(data);};


Parser.prototype.write = function(chunk){
this._tokenizer.write(chunk);};


Parser.prototype.end = function(chunk){
this._tokenizer.end(chunk);};


Parser.prototype.pause = function(){
this._tokenizer.pause();};


Parser.prototype.resume = function(){
this._tokenizer.resume();};



Parser.prototype.parseChunk = Parser.prototype.write;
Parser.prototype.done = Parser.prototype.end;

module.exports = Parser;
});
__d('htmlparser2/lib/Tokenizer.js',["entities/lib/decode_codepoint.js","entities/maps/entities.json","entities/maps/legacy.json","entities/maps/xml.json"],function(global, require, module, exports) {  module.exports = Tokenizer;

var decodeCodePoint=require("entities/lib/decode_codepoint.js"),
entityMap=require("entities/maps/entities.json"),
legacyMap=require("entities/maps/legacy.json"),
xmlMap=require("entities/maps/xml.json"),

i=0,

TEXT=i++,
BEFORE_TAG_NAME=i++,
IN_TAG_NAME=i++,
IN_SELF_CLOSING_TAG=i++,
BEFORE_CLOSING_TAG_NAME=i++,
IN_CLOSING_TAG_NAME=i++,
AFTER_CLOSING_TAG_NAME=i++,


BEFORE_ATTRIBUTE_NAME=i++,
IN_ATTRIBUTE_NAME=i++,
AFTER_ATTRIBUTE_NAME=i++,
BEFORE_ATTRIBUTE_VALUE=i++,
IN_ATTRIBUTE_VALUE_DQ=i++,
IN_ATTRIBUTE_VALUE_SQ=i++,
IN_ATTRIBUTE_VALUE_NQ=i++,


BEFORE_DECLARATION=i++,
IN_DECLARATION=i++,


IN_PROCESSING_INSTRUCTION=i++,


BEFORE_COMMENT=i++,
IN_COMMENT=i++,
AFTER_COMMENT_1=i++,
AFTER_COMMENT_2=i++,


BEFORE_CDATA_1=i++,
BEFORE_CDATA_2=i++,
BEFORE_CDATA_3=i++,
BEFORE_CDATA_4=i++,
BEFORE_CDATA_5=i++,
BEFORE_CDATA_6=i++,
IN_CDATA=i++,
AFTER_CDATA_1=i++,
AFTER_CDATA_2=i++,


BEFORE_SPECIAL=i++,
BEFORE_SPECIAL_END=i++,

BEFORE_SCRIPT_1=i++,
BEFORE_SCRIPT_2=i++,
BEFORE_SCRIPT_3=i++,
BEFORE_SCRIPT_4=i++,
BEFORE_SCRIPT_5=i++,
AFTER_SCRIPT_1=i++,
AFTER_SCRIPT_2=i++,
AFTER_SCRIPT_3=i++,
AFTER_SCRIPT_4=i++,
AFTER_SCRIPT_5=i++,

BEFORE_STYLE_1=i++,
BEFORE_STYLE_2=i++,
BEFORE_STYLE_3=i++,
BEFORE_STYLE_4=i++,
AFTER_STYLE_1=i++,
AFTER_STYLE_2=i++,
AFTER_STYLE_3=i++,
AFTER_STYLE_4=i++,

BEFORE_ENTITY=i++,
BEFORE_NUMERIC_ENTITY=i++,
IN_NAMED_ENTITY=i++,
IN_NUMERIC_ENTITY=i++,
IN_HEX_ENTITY=i++,

j=0,

SPECIAL_NONE=j++,
SPECIAL_SCRIPT=j++,
SPECIAL_STYLE=j++;

function whitespace(c){
return c === " " || c === "\n" || c === "\t" || c === "\f" || c === "\r";}


function characterState(char,SUCCESS){
return function(c){
if(c === char)this._state = SUCCESS;};}



function ifElseState(upper,SUCCESS,FAILURE){
var lower=upper.toLowerCase();

if(upper === lower){
return function(c){
if(c === lower){
this._state = SUCCESS;}else 
{
this._state = FAILURE;
this._index--;}};}else 


{
return function(c){
if(c === lower || c === upper){
this._state = SUCCESS;}else 
{
this._state = FAILURE;
this._index--;}};}}





function consumeSpecialNameChar(upper,NEXT_STATE){
var lower=upper.toLowerCase();

return function(c){
if(c === lower || c === upper){
this._state = NEXT_STATE;}else 
{
this._state = IN_TAG_NAME;
this._index--;}};}




function Tokenizer(options,cbs){
this._state = TEXT;
this._buffer = "";
this._sectionStart = 0;
this._index = 0;
this._bufferOffset = 0;
this._baseState = TEXT;
this._special = SPECIAL_NONE;
this._cbs = cbs;
this._running = true;
this._ended = false;
this._xmlMode = !!(options && options.xmlMode);
this._decodeEntities = !!(options && options.decodeEntities);}


Tokenizer.prototype._stateText = function(c){
if(c === "<"){
if(this._index > this._sectionStart){
this._cbs.ontext(this._getSection());}

this._state = BEFORE_TAG_NAME;
this._sectionStart = this._index;}else 
if(this._decodeEntities && this._special === SPECIAL_NONE && c === "&"){
if(this._index > this._sectionStart){
this._cbs.ontext(this._getSection());}

this._baseState = TEXT;
this._state = BEFORE_ENTITY;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateBeforeTagName = function(c){
if(c === "/"){
this._state = BEFORE_CLOSING_TAG_NAME;}else 
if(c === ">" || this._special !== SPECIAL_NONE || whitespace(c)){
this._state = TEXT;}else 
if(c === "!"){
this._state = BEFORE_DECLARATION;
this._sectionStart = this._index + 1;}else 
if(c === "?"){
this._state = IN_PROCESSING_INSTRUCTION;
this._sectionStart = this._index + 1;}else 
if(c === "<"){
this._cbs.ontext(this._getSection());
this._sectionStart = this._index;}else 
{
this._state = !this._xmlMode && (c === "s" || c === "S")?
BEFORE_SPECIAL:IN_TAG_NAME;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateInTagName = function(c){
if(c === "/" || c === ">" || whitespace(c)){
this._emitToken("onopentagname");
this._state = BEFORE_ATTRIBUTE_NAME;
this._index--;}};



Tokenizer.prototype._stateBeforeCloseingTagName = function(c){
if(whitespace(c));else 
if(c === ">"){
this._state = TEXT;}else 
if(this._special !== SPECIAL_NONE){
if(c === "s" || c === "S"){
this._state = BEFORE_SPECIAL_END;}else 
{
this._state = TEXT;
this._index--;}}else 

{
this._state = IN_CLOSING_TAG_NAME;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateInCloseingTagName = function(c){
if(c === ">" || whitespace(c)){
this._emitToken("onclosetag");
this._state = AFTER_CLOSING_TAG_NAME;
this._index--;}};



Tokenizer.prototype._stateAfterCloseingTagName = function(c){

if(c === ">"){
this._state = TEXT;
this._sectionStart = this._index + 1;}};



Tokenizer.prototype._stateBeforeAttributeName = function(c){
if(c === ">"){
this._cbs.onopentagend();
this._state = TEXT;
this._sectionStart = this._index + 1;}else 
if(c === "/"){
this._state = IN_SELF_CLOSING_TAG;}else 
if(!whitespace(c)){
this._state = IN_ATTRIBUTE_NAME;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateInSelfClosingTag = function(c){
if(c === ">"){
this._cbs.onselfclosingtag();
this._state = TEXT;
this._sectionStart = this._index + 1;}else 
if(!whitespace(c)){
this._state = BEFORE_ATTRIBUTE_NAME;
this._index--;}};



Tokenizer.prototype._stateInAttributeName = function(c){
if(c === "=" || c === "/" || c === ">" || whitespace(c)){
this._cbs.onattribname(this._getSection());
this._sectionStart = -1;
this._state = AFTER_ATTRIBUTE_NAME;
this._index--;}};



Tokenizer.prototype._stateAfterAttributeName = function(c){
if(c === "="){
this._state = BEFORE_ATTRIBUTE_VALUE;}else 
if(c === "/" || c === ">"){
this._cbs.onattribend();
this._state = BEFORE_ATTRIBUTE_NAME;
this._index--;}else 
if(!whitespace(c)){
this._cbs.onattribend();
this._state = IN_ATTRIBUTE_NAME;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateBeforeAttributeValue = function(c){
if(c === "\""){
this._state = IN_ATTRIBUTE_VALUE_DQ;
this._sectionStart = this._index + 1;}else 
if(c === "'"){
this._state = IN_ATTRIBUTE_VALUE_SQ;
this._sectionStart = this._index + 1;}else 
if(!whitespace(c)){
this._state = IN_ATTRIBUTE_VALUE_NQ;
this._sectionStart = this._index;
this._index--;}};



Tokenizer.prototype._stateInAttributeValueDoubleQuotes = function(c){
if(c === "\""){
this._emitToken("onattribdata");
this._cbs.onattribend();
this._state = BEFORE_ATTRIBUTE_NAME;}else 
if(this._decodeEntities && c === "&"){
this._emitToken("onattribdata");
this._baseState = this._state;
this._state = BEFORE_ENTITY;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateInAttributeValueSingleQuotes = function(c){
if(c === "'"){
this._emitToken("onattribdata");
this._cbs.onattribend();
this._state = BEFORE_ATTRIBUTE_NAME;}else 
if(this._decodeEntities && c === "&"){
this._emitToken("onattribdata");
this._baseState = this._state;
this._state = BEFORE_ENTITY;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateInAttributeValueNoQuotes = function(c){
if(whitespace(c) || c === ">"){
this._emitToken("onattribdata");
this._cbs.onattribend();
this._state = BEFORE_ATTRIBUTE_NAME;
this._index--;}else 
if(this._decodeEntities && c === "&"){
this._emitToken("onattribdata");
this._baseState = this._state;
this._state = BEFORE_ENTITY;
this._sectionStart = this._index;}};



Tokenizer.prototype._stateBeforeDeclaration = function(c){
this._state = c === "["?BEFORE_CDATA_1:
c === "-"?BEFORE_COMMENT:
IN_DECLARATION;};


Tokenizer.prototype._stateInDeclaration = function(c){
if(c === ">"){
this._cbs.ondeclaration(this._getSection());
this._state = TEXT;
this._sectionStart = this._index + 1;}};



Tokenizer.prototype._stateInProcessingInstruction = function(c){
if(c === ">"){
this._cbs.onprocessinginstruction(this._getSection());
this._state = TEXT;
this._sectionStart = this._index + 1;}};



Tokenizer.prototype._stateBeforeComment = function(c){
if(c === "-"){
this._state = IN_COMMENT;
this._sectionStart = this._index + 1;}else 
{
this._state = IN_DECLARATION;}};



Tokenizer.prototype._stateInComment = function(c){
if(c === "-")this._state = AFTER_COMMENT_1;};


Tokenizer.prototype._stateAfterComment1 = function(c){
if(c === "-"){
this._state = AFTER_COMMENT_2;}else 
{
this._state = IN_COMMENT;}};



Tokenizer.prototype._stateAfterComment2 = function(c){
if(c === ">"){

this._cbs.oncomment(this._buffer.substring(this._sectionStart,this._index - 2));
this._state = TEXT;
this._sectionStart = this._index + 1;}else 
if(c !== "-"){
this._state = IN_COMMENT;}};




Tokenizer.prototype._stateBeforeCdata1 = ifElseState("C",BEFORE_CDATA_2,IN_DECLARATION);
Tokenizer.prototype._stateBeforeCdata2 = ifElseState("D",BEFORE_CDATA_3,IN_DECLARATION);
Tokenizer.prototype._stateBeforeCdata3 = ifElseState("A",BEFORE_CDATA_4,IN_DECLARATION);
Tokenizer.prototype._stateBeforeCdata4 = ifElseState("T",BEFORE_CDATA_5,IN_DECLARATION);
Tokenizer.prototype._stateBeforeCdata5 = ifElseState("A",BEFORE_CDATA_6,IN_DECLARATION);

Tokenizer.prototype._stateBeforeCdata6 = function(c){
if(c === "["){
this._state = IN_CDATA;
this._sectionStart = this._index + 1;}else 
{
this._state = IN_DECLARATION;
this._index--;}};



Tokenizer.prototype._stateInCdata = function(c){
if(c === "]")this._state = AFTER_CDATA_1;};


Tokenizer.prototype._stateAfterCdata1 = characterState("]",AFTER_CDATA_2);

Tokenizer.prototype._stateAfterCdata2 = function(c){
if(c === ">"){

this._cbs.oncdata(this._buffer.substring(this._sectionStart,this._index - 2));
this._state = TEXT;
this._sectionStart = this._index + 1;}else 
if(c !== "]"){
this._state = IN_CDATA;}};




Tokenizer.prototype._stateBeforeSpecial = function(c){
if(c === "c" || c === "C"){
this._state = BEFORE_SCRIPT_1;}else 
if(c === "t" || c === "T"){
this._state = BEFORE_STYLE_1;}else 
{
this._state = IN_TAG_NAME;
this._index--;}};



Tokenizer.prototype._stateBeforeSpecialEnd = function(c){
if(this._special === SPECIAL_SCRIPT && (c === "c" || c === "C")){
this._state = AFTER_SCRIPT_1;}else 
if(this._special === SPECIAL_STYLE && (c === "t" || c === "T")){
this._state = AFTER_STYLE_1;}else 

this._state = TEXT;};


Tokenizer.prototype._stateBeforeScript1 = consumeSpecialNameChar("R",BEFORE_SCRIPT_2);
Tokenizer.prototype._stateBeforeScript2 = consumeSpecialNameChar("I",BEFORE_SCRIPT_3);
Tokenizer.prototype._stateBeforeScript3 = consumeSpecialNameChar("P",BEFORE_SCRIPT_4);
Tokenizer.prototype._stateBeforeScript4 = consumeSpecialNameChar("T",BEFORE_SCRIPT_5);

Tokenizer.prototype._stateBeforeScript5 = function(c){
if(c === "/" || c === ">" || whitespace(c)){
this._special = SPECIAL_SCRIPT;}

this._state = IN_TAG_NAME;
this._index--;};


Tokenizer.prototype._stateAfterScript1 = ifElseState("R",AFTER_SCRIPT_2,TEXT);
Tokenizer.prototype._stateAfterScript2 = ifElseState("I",AFTER_SCRIPT_3,TEXT);
Tokenizer.prototype._stateAfterScript3 = ifElseState("P",AFTER_SCRIPT_4,TEXT);
Tokenizer.prototype._stateAfterScript4 = ifElseState("T",AFTER_SCRIPT_5,TEXT);

Tokenizer.prototype._stateAfterScript5 = function(c){
if(c === ">" || whitespace(c)){
this._special = SPECIAL_NONE;
this._state = IN_CLOSING_TAG_NAME;
this._sectionStart = this._index - 6;
this._index--;}else 

this._state = TEXT;};


Tokenizer.prototype._stateBeforeStyle1 = consumeSpecialNameChar("Y",BEFORE_STYLE_2);
Tokenizer.prototype._stateBeforeStyle2 = consumeSpecialNameChar("L",BEFORE_STYLE_3);
Tokenizer.prototype._stateBeforeStyle3 = consumeSpecialNameChar("E",BEFORE_STYLE_4);

Tokenizer.prototype._stateBeforeStyle4 = function(c){
if(c === "/" || c === ">" || whitespace(c)){
this._special = SPECIAL_STYLE;}

this._state = IN_TAG_NAME;
this._index--;};


Tokenizer.prototype._stateAfterStyle1 = ifElseState("Y",AFTER_STYLE_2,TEXT);
Tokenizer.prototype._stateAfterStyle2 = ifElseState("L",AFTER_STYLE_3,TEXT);
Tokenizer.prototype._stateAfterStyle3 = ifElseState("E",AFTER_STYLE_4,TEXT);

Tokenizer.prototype._stateAfterStyle4 = function(c){
if(c === ">" || whitespace(c)){
this._special = SPECIAL_NONE;
this._state = IN_CLOSING_TAG_NAME;
this._sectionStart = this._index - 5;
this._index--;}else 

this._state = TEXT;};


Tokenizer.prototype._stateBeforeEntity = ifElseState("#",BEFORE_NUMERIC_ENTITY,IN_NAMED_ENTITY);
Tokenizer.prototype._stateBeforeNumericEntity = ifElseState("X",IN_HEX_ENTITY,IN_NUMERIC_ENTITY);


Tokenizer.prototype._parseNamedEntityStrict = function(){

if(this._sectionStart + 1 < this._index){
var entity=this._buffer.substring(this._sectionStart + 1,this._index),
map=this._xmlMode?xmlMap:entityMap;

if(map.hasOwnProperty(entity)){
this._emitPartial(map[entity]);
this._sectionStart = this._index + 1;}}};






Tokenizer.prototype._parseLegacyEntity = function(){
var start=this._sectionStart + 1,
limit=this._index - start;

if(limit > 6)limit = 6;

while(limit >= 2) {
var entity=this._buffer.substr(start,limit);

if(legacyMap.hasOwnProperty(entity)){
this._emitPartial(legacyMap[entity]);
this._sectionStart += limit + 1;
return;}else 
{
limit--;}}};




Tokenizer.prototype._stateInNamedEntity = function(c){
if(c === ";"){
this._parseNamedEntityStrict();
if(this._sectionStart + 1 < this._index && !this._xmlMode){
this._parseLegacyEntity();}

this._state = this._baseState;}else 
if((c < "a" || c > "z") && (c < "A" || c > "Z") && (c < "0" || c > "9")){
if(this._xmlMode);else 
if(this._sectionStart + 1 === this._index);else 
if(this._baseState !== TEXT){
if(c !== "="){
this._parseNamedEntityStrict();}}else 

{
this._parseLegacyEntity();}


this._state = this._baseState;
this._index--;}};



Tokenizer.prototype._decodeNumericEntity = function(offset,base){
var sectionStart=this._sectionStart + offset;

if(sectionStart !== this._index){

var entity=this._buffer.substring(sectionStart,this._index);
var parsed=parseInt(entity,base);

this._emitPartial(decodeCodePoint(parsed));
this._sectionStart = this._index;}else 
{
this._sectionStart--;}


this._state = this._baseState;};


Tokenizer.prototype._stateInNumericEntity = function(c){
if(c === ";"){
this._decodeNumericEntity(2,10);
this._sectionStart++;}else 
if(c < "0" || c > "9"){
if(!this._xmlMode){
this._decodeNumericEntity(2,10);}else 
{
this._state = this._baseState;}

this._index--;}};



Tokenizer.prototype._stateInHexEntity = function(c){
if(c === ";"){
this._decodeNumericEntity(3,16);
this._sectionStart++;}else 
if((c < "a" || c > "f") && (c < "A" || c > "F") && (c < "0" || c > "9")){
if(!this._xmlMode){
this._decodeNumericEntity(3,16);}else 
{
this._state = this._baseState;}

this._index--;}};



Tokenizer.prototype._cleanup = function(){
if(this._sectionStart < 0){
this._buffer = "";
this._index = 0;
this._bufferOffset += this._index;}else 
if(this._running){
if(this._state === TEXT){
if(this._sectionStart !== this._index){
this._cbs.ontext(this._buffer.substr(this._sectionStart));}

this._buffer = "";
this._index = 0;
this._bufferOffset += this._index;}else 
if(this._sectionStart === this._index){

this._buffer = "";
this._index = 0;
this._bufferOffset += this._index;}else 
{

this._buffer = this._buffer.substr(this._sectionStart);
this._index -= this._sectionStart;
this._bufferOffset += this._sectionStart;}


this._sectionStart = 0;}};




Tokenizer.prototype.write = function(chunk){
if(this._ended)this._cbs.onerror(Error(".write() after done!"));

this._buffer += chunk;
this._parse();};


Tokenizer.prototype._parse = function(){
while(this._index < this._buffer.length && this._running) {
var c=this._buffer.charAt(this._index);
if(this._state === TEXT){
this._stateText(c);}else 
if(this._state === BEFORE_TAG_NAME){
this._stateBeforeTagName(c);}else 
if(this._state === IN_TAG_NAME){
this._stateInTagName(c);}else 
if(this._state === BEFORE_CLOSING_TAG_NAME){
this._stateBeforeCloseingTagName(c);}else 
if(this._state === IN_CLOSING_TAG_NAME){
this._stateInCloseingTagName(c);}else 
if(this._state === AFTER_CLOSING_TAG_NAME){
this._stateAfterCloseingTagName(c);}else 
if(this._state === IN_SELF_CLOSING_TAG){
this._stateInSelfClosingTag(c);}else 





if(this._state === BEFORE_ATTRIBUTE_NAME){
this._stateBeforeAttributeName(c);}else 
if(this._state === IN_ATTRIBUTE_NAME){
this._stateInAttributeName(c);}else 
if(this._state === AFTER_ATTRIBUTE_NAME){
this._stateAfterAttributeName(c);}else 
if(this._state === BEFORE_ATTRIBUTE_VALUE){
this._stateBeforeAttributeValue(c);}else 
if(this._state === IN_ATTRIBUTE_VALUE_DQ){
this._stateInAttributeValueDoubleQuotes(c);}else 
if(this._state === IN_ATTRIBUTE_VALUE_SQ){
this._stateInAttributeValueSingleQuotes(c);}else 
if(this._state === IN_ATTRIBUTE_VALUE_NQ){
this._stateInAttributeValueNoQuotes(c);}else 





if(this._state === BEFORE_DECLARATION){
this._stateBeforeDeclaration(c);}else 
if(this._state === IN_DECLARATION){
this._stateInDeclaration(c);}else 





if(this._state === IN_PROCESSING_INSTRUCTION){
this._stateInProcessingInstruction(c);}else 





if(this._state === BEFORE_COMMENT){
this._stateBeforeComment(c);}else 
if(this._state === IN_COMMENT){
this._stateInComment(c);}else 
if(this._state === AFTER_COMMENT_1){
this._stateAfterComment1(c);}else 
if(this._state === AFTER_COMMENT_2){
this._stateAfterComment2(c);}else 





if(this._state === BEFORE_CDATA_1){
this._stateBeforeCdata1(c);}else 
if(this._state === BEFORE_CDATA_2){
this._stateBeforeCdata2(c);}else 
if(this._state === BEFORE_CDATA_3){
this._stateBeforeCdata3(c);}else 
if(this._state === BEFORE_CDATA_4){
this._stateBeforeCdata4(c);}else 
if(this._state === BEFORE_CDATA_5){
this._stateBeforeCdata5(c);}else 
if(this._state === BEFORE_CDATA_6){
this._stateBeforeCdata6(c);}else 
if(this._state === IN_CDATA){
this._stateInCdata(c);}else 
if(this._state === AFTER_CDATA_1){
this._stateAfterCdata1(c);}else 
if(this._state === AFTER_CDATA_2){
this._stateAfterCdata2(c);}else 





if(this._state === BEFORE_SPECIAL){
this._stateBeforeSpecial(c);}else 
if(this._state === BEFORE_SPECIAL_END){
this._stateBeforeSpecialEnd(c);}else 





if(this._state === BEFORE_SCRIPT_1){
this._stateBeforeScript1(c);}else 
if(this._state === BEFORE_SCRIPT_2){
this._stateBeforeScript2(c);}else 
if(this._state === BEFORE_SCRIPT_3){
this._stateBeforeScript3(c);}else 
if(this._state === BEFORE_SCRIPT_4){
this._stateBeforeScript4(c);}else 
if(this._state === BEFORE_SCRIPT_5){
this._stateBeforeScript5(c);}else 


if(this._state === AFTER_SCRIPT_1){
this._stateAfterScript1(c);}else 
if(this._state === AFTER_SCRIPT_2){
this._stateAfterScript2(c);}else 
if(this._state === AFTER_SCRIPT_3){
this._stateAfterScript3(c);}else 
if(this._state === AFTER_SCRIPT_4){
this._stateAfterScript4(c);}else 
if(this._state === AFTER_SCRIPT_5){
this._stateAfterScript5(c);}else 





if(this._state === BEFORE_STYLE_1){
this._stateBeforeStyle1(c);}else 
if(this._state === BEFORE_STYLE_2){
this._stateBeforeStyle2(c);}else 
if(this._state === BEFORE_STYLE_3){
this._stateBeforeStyle3(c);}else 
if(this._state === BEFORE_STYLE_4){
this._stateBeforeStyle4(c);}else 


if(this._state === AFTER_STYLE_1){
this._stateAfterStyle1(c);}else 
if(this._state === AFTER_STYLE_2){
this._stateAfterStyle2(c);}else 
if(this._state === AFTER_STYLE_3){
this._stateAfterStyle3(c);}else 
if(this._state === AFTER_STYLE_4){
this._stateAfterStyle4(c);}else 





if(this._state === BEFORE_ENTITY){
this._stateBeforeEntity(c);}else 
if(this._state === BEFORE_NUMERIC_ENTITY){
this._stateBeforeNumericEntity(c);}else 
if(this._state === IN_NAMED_ENTITY){
this._stateInNamedEntity(c);}else 
if(this._state === IN_NUMERIC_ENTITY){
this._stateInNumericEntity(c);}else 
if(this._state === IN_HEX_ENTITY){
this._stateInHexEntity(c);}else 


{
this._cbs.onerror(Error("unknown _state"),this._state);}


this._index++;}


this._cleanup();};


Tokenizer.prototype.pause = function(){
this._running = false;};

Tokenizer.prototype.resume = function(){
this._running = true;

if(this._index < this._buffer.length){
this._parse();}

if(this._ended){
this._finish();}};



Tokenizer.prototype.end = function(chunk){
if(this._ended)this._cbs.onerror(Error(".end() after done!"));
if(chunk)this.write(chunk);

this._ended = true;

if(this._running)this._finish();};


Tokenizer.prototype._finish = function(){

if(this._sectionStart < this._index){
this._handleTrailingData();}


this._cbs.onend();};


Tokenizer.prototype._handleTrailingData = function(){
var data=this._buffer.substr(this._sectionStart);

if(this._state === IN_CDATA || this._state === AFTER_CDATA_1 || this._state === AFTER_CDATA_2){
this._cbs.oncdata(data);}else 
if(this._state === IN_COMMENT || this._state === AFTER_COMMENT_1 || this._state === AFTER_COMMENT_2){
this._cbs.oncomment(data);}else 
if(this._state === IN_NAMED_ENTITY && !this._xmlMode){
this._parseLegacyEntity();
if(this._sectionStart < this._index){
this._state = this._baseState;
this._handleTrailingData();}}else 

if(this._state === IN_NUMERIC_ENTITY && !this._xmlMode){
this._decodeNumericEntity(2,10);
if(this._sectionStart < this._index){
this._state = this._baseState;
this._handleTrailingData();}}else 

if(this._state === IN_HEX_ENTITY && !this._xmlMode){
this._decodeNumericEntity(3,16);
if(this._sectionStart < this._index){
this._state = this._baseState;
this._handleTrailingData();}}else 

if(
this._state !== IN_TAG_NAME && 
this._state !== BEFORE_ATTRIBUTE_NAME && 
this._state !== BEFORE_ATTRIBUTE_VALUE && 
this._state !== AFTER_ATTRIBUTE_NAME && 
this._state !== IN_ATTRIBUTE_NAME && 
this._state !== IN_ATTRIBUTE_VALUE_SQ && 
this._state !== IN_ATTRIBUTE_VALUE_DQ && 
this._state !== IN_ATTRIBUTE_VALUE_NQ && 
this._state !== IN_CLOSING_TAG_NAME)
{
this._cbs.ontext(data);}};





Tokenizer.prototype.reset = function(){
Tokenizer.call(this,{xmlMode:this._xmlMode,decodeEntities:this._decodeEntities},this._cbs);};


Tokenizer.prototype.getAbsoluteIndex = function(){
return this._bufferOffset + this._index;};


Tokenizer.prototype._getSection = function(){
return this._buffer.substring(this._sectionStart,this._index);};


Tokenizer.prototype._emitToken = function(name){
this._cbs[name](this._getSection());
this._sectionStart = -1;};


Tokenizer.prototype._emitPartial = function(value){
if(this._baseState !== TEXT){
this._cbs.onattribdata(value);}else 
{
this._cbs.ontext(value);}};
});
__d('entities/lib/decode_codepoint.js',["entities/maps/decode.json"],function(global, require, module, exports) {  var decodeMap=require("entities/maps/decode.json");

module.exports = decodeCodePoint;


function decodeCodePoint(codePoint){

if(codePoint >= 0xD800 && codePoint <= 0xDFFF || codePoint > 0x10FFFF){
return "\uFFFD";}


if(codePoint in decodeMap){
codePoint = decodeMap[codePoint];}


var output="";

if(codePoint > 0xFFFF){
codePoint -= 0x10000;
output += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);
codePoint = 0xDC00 | codePoint & 0x3FF;}


output += String.fromCharCode(codePoint);
return output;}
});
__d('entities/maps/decode.json',[],function(global, require, module, exports) {  module.exports = {"0":65533,"128":8364,"130":8218,"131":402,"132":8222,"133":8230,"134":8224,"135":8225,"136":710,"137":8240,"138":352,"139":8249,"140":338,"142":381,"145":8216,"146":8217,"147":8220,"148":8221,"149":8226,"150":8211,"151":8212,"152":732,"153":8482,"154":353,"155":8250,"156":339,"158":382,"159":376};
});
__d('entities/maps/entities.json',[],function(global, require, module, exports) {  module.exports = {"Aacute":"\u00C1","aacute":"\u00E1","Abreve":"\u0102","abreve":"\u0103","ac":"\u223E","acd":"\u223F","acE":"\u223E\u0333","Acirc":"\u00C2","acirc":"\u00E2","acute":"\u00B4","Acy":"\u0410","acy":"\u0430","AElig":"\u00C6","aelig":"\u00E6","af":"\u2061","Afr":"\uD835\uDD04","afr":"\uD835\uDD1E","Agrave":"\u00C0","agrave":"\u00E0","alefsym":"\u2135","aleph":"\u2135","Alpha":"\u0391","alpha":"\u03B1","Amacr":"\u0100","amacr":"\u0101","amalg":"\u2A3F","amp":"&","AMP":"&","andand":"\u2A55","And":"\u2A53","and":"\u2227","andd":"\u2A5C","andslope":"\u2A58","andv":"\u2A5A","ang":"\u2220","ange":"\u29A4","angle":"\u2220","angmsdaa":"\u29A8","angmsdab":"\u29A9","angmsdac":"\u29AA","angmsdad":"\u29AB","angmsdae":"\u29AC","angmsdaf":"\u29AD","angmsdag":"\u29AE","angmsdah":"\u29AF","angmsd":"\u2221","angrt":"\u221F","angrtvb":"\u22BE","angrtvbd":"\u299D","angsph":"\u2222","angst":"\u00C5","angzarr":"\u237C","Aogon":"\u0104","aogon":"\u0105","Aopf":"\uD835\uDD38","aopf":"\uD835\uDD52","apacir":"\u2A6F","ap":"\u2248","apE":"\u2A70","ape":"\u224A","apid":"\u224B","apos":"'","ApplyFunction":"\u2061","approx":"\u2248","approxeq":"\u224A","Aring":"\u00C5","aring":"\u00E5","Ascr":"\uD835\uDC9C","ascr":"\uD835\uDCB6","Assign":"\u2254","ast":"*","asymp":"\u2248","asympeq":"\u224D","Atilde":"\u00C3","atilde":"\u00E3","Auml":"\u00C4","auml":"\u00E4","awconint":"\u2233","awint":"\u2A11","backcong":"\u224C","backepsilon":"\u03F6","backprime":"\u2035","backsim":"\u223D","backsimeq":"\u22CD","Backslash":"\u2216","Barv":"\u2AE7","barvee":"\u22BD","barwed":"\u2305","Barwed":"\u2306","barwedge":"\u2305","bbrk":"\u23B5","bbrktbrk":"\u23B6","bcong":"\u224C","Bcy":"\u0411","bcy":"\u0431","bdquo":"\u201E","becaus":"\u2235","because":"\u2235","Because":"\u2235","bemptyv":"\u29B0","bepsi":"\u03F6","bernou":"\u212C","Bernoullis":"\u212C","Beta":"\u0392","beta":"\u03B2","beth":"\u2136","between":"\u226C","Bfr":"\uD835\uDD05","bfr":"\uD835\uDD1F","bigcap":"\u22C2","bigcirc":"\u25EF","bigcup":"\u22C3","bigodot":"\u2A00","bigoplus":"\u2A01","bigotimes":"\u2A02","bigsqcup":"\u2A06","bigstar":"\u2605","bigtriangledown":"\u25BD","bigtriangleup":"\u25B3","biguplus":"\u2A04","bigvee":"\u22C1","bigwedge":"\u22C0","bkarow":"\u290D","blacklozenge":"\u29EB","blacksquare":"\u25AA","blacktriangle":"\u25B4","blacktriangledown":"\u25BE","blacktriangleleft":"\u25C2","blacktriangleright":"\u25B8","blank":"\u2423","blk12":"\u2592","blk14":"\u2591","blk34":"\u2593","block":"\u2588","bne":"=\u20E5","bnequiv":"\u2261\u20E5","bNot":"\u2AED","bnot":"\u2310","Bopf":"\uD835\uDD39","bopf":"\uD835\uDD53","bot":"\u22A5","bottom":"\u22A5","bowtie":"\u22C8","boxbox":"\u29C9","boxdl":"\u2510","boxdL":"\u2555","boxDl":"\u2556","boxDL":"\u2557","boxdr":"\u250C","boxdR":"\u2552","boxDr":"\u2553","boxDR":"\u2554","boxh":"\u2500","boxH":"\u2550","boxhd":"\u252C","boxHd":"\u2564","boxhD":"\u2565","boxHD":"\u2566","boxhu":"\u2534","boxHu":"\u2567","boxhU":"\u2568","boxHU":"\u2569","boxminus":"\u229F","boxplus":"\u229E","boxtimes":"\u22A0","boxul":"\u2518","boxuL":"\u255B","boxUl":"\u255C","boxUL":"\u255D","boxur":"\u2514","boxuR":"\u2558","boxUr":"\u2559","boxUR":"\u255A","boxv":"\u2502","boxV":"\u2551","boxvh":"\u253C","boxvH":"\u256A","boxVh":"\u256B","boxVH":"\u256C","boxvl":"\u2524","boxvL":"\u2561","boxVl":"\u2562","boxVL":"\u2563","boxvr":"\u251C","boxvR":"\u255E","boxVr":"\u255F","boxVR":"\u2560","bprime":"\u2035","breve":"\u02D8","Breve":"\u02D8","brvbar":"\u00A6","bscr":"\uD835\uDCB7","Bscr":"\u212C","bsemi":"\u204F","bsim":"\u223D","bsime":"\u22CD","bsolb":"\u29C5","bsol":"\\","bsolhsub":"\u27C8","bull":"\u2022","bullet":"\u2022","bump":"\u224E","bumpE":"\u2AAE","bumpe":"\u224F","Bumpeq":"\u224E","bumpeq":"\u224F","Cacute":"\u0106","cacute":"\u0107","capand":"\u2A44","capbrcup":"\u2A49","capcap":"\u2A4B","cap":"\u2229","Cap":"\u22D2","capcup":"\u2A47","capdot":"\u2A40","CapitalDifferentialD":"\u2145","caps":"\u2229\uFE00","caret":"\u2041","caron":"\u02C7","Cayleys":"\u212D","ccaps":"\u2A4D","Ccaron":"\u010C","ccaron":"\u010D","Ccedil":"\u00C7","ccedil":"\u00E7","Ccirc":"\u0108","ccirc":"\u0109","Cconint":"\u2230","ccups":"\u2A4C","ccupssm":"\u2A50","Cdot":"\u010A","cdot":"\u010B","cedil":"\u00B8","Cedilla":"\u00B8","cemptyv":"\u29B2","cent":"\u00A2","centerdot":"\u00B7","CenterDot":"\u00B7","cfr":"\uD835\uDD20","Cfr":"\u212D","CHcy":"\u0427","chcy":"\u0447","check":"\u2713","checkmark":"\u2713","Chi":"\u03A7","chi":"\u03C7","circ":"\u02C6","circeq":"\u2257","circlearrowleft":"\u21BA","circlearrowright":"\u21BB","circledast":"\u229B","circledcirc":"\u229A","circleddash":"\u229D","CircleDot":"\u2299","circledR":"\u00AE","circledS":"\u24C8","CircleMinus":"\u2296","CirclePlus":"\u2295","CircleTimes":"\u2297","cir":"\u25CB","cirE":"\u29C3","cire":"\u2257","cirfnint":"\u2A10","cirmid":"\u2AEF","cirscir":"\u29C2","ClockwiseContourIntegral":"\u2232","CloseCurlyDoubleQuote":"\u201D","CloseCurlyQuote":"\u2019","clubs":"\u2663","clubsuit":"\u2663","colon":":","Colon":"\u2237","Colone":"\u2A74","colone":"\u2254","coloneq":"\u2254","comma":",","commat":"@","comp":"\u2201","compfn":"\u2218","complement":"\u2201","complexes":"\u2102","cong":"\u2245","congdot":"\u2A6D","Congruent":"\u2261","conint":"\u222E","Conint":"\u222F","ContourIntegral":"\u222E","copf":"\uD835\uDD54","Copf":"\u2102","coprod":"\u2210","Coproduct":"\u2210","copy":"\u00A9","COPY":"\u00A9","copysr":"\u2117","CounterClockwiseContourIntegral":"\u2233","crarr":"\u21B5","cross":"\u2717","Cross":"\u2A2F","Cscr":"\uD835\uDC9E","cscr":"\uD835\uDCB8","csub":"\u2ACF","csube":"\u2AD1","csup":"\u2AD0","csupe":"\u2AD2","ctdot":"\u22EF","cudarrl":"\u2938","cudarrr":"\u2935","cuepr":"\u22DE","cuesc":"\u22DF","cularr":"\u21B6","cularrp":"\u293D","cupbrcap":"\u2A48","cupcap":"\u2A46","CupCap":"\u224D","cup":"\u222A","Cup":"\u22D3","cupcup":"\u2A4A","cupdot":"\u228D","cupor":"\u2A45","cups":"\u222A\uFE00","curarr":"\u21B7","curarrm":"\u293C","curlyeqprec":"\u22DE","curlyeqsucc":"\u22DF","curlyvee":"\u22CE","curlywedge":"\u22CF","curren":"\u00A4","curvearrowleft":"\u21B6","curvearrowright":"\u21B7","cuvee":"\u22CE","cuwed":"\u22CF","cwconint":"\u2232","cwint":"\u2231","cylcty":"\u232D","dagger":"\u2020","Dagger":"\u2021","daleth":"\u2138","darr":"\u2193","Darr":"\u21A1","dArr":"\u21D3","dash":"\u2010","Dashv":"\u2AE4","dashv":"\u22A3","dbkarow":"\u290F","dblac":"\u02DD","Dcaron":"\u010E","dcaron":"\u010F","Dcy":"\u0414","dcy":"\u0434","ddagger":"\u2021","ddarr":"\u21CA","DD":"\u2145","dd":"\u2146","DDotrahd":"\u2911","ddotseq":"\u2A77","deg":"\u00B0","Del":"\u2207","Delta":"\u0394","delta":"\u03B4","demptyv":"\u29B1","dfisht":"\u297F","Dfr":"\uD835\uDD07","dfr":"\uD835\uDD21","dHar":"\u2965","dharl":"\u21C3","dharr":"\u21C2","DiacriticalAcute":"\u00B4","DiacriticalDot":"\u02D9","DiacriticalDoubleAcute":"\u02DD","DiacriticalGrave":"`","DiacriticalTilde":"\u02DC","diam":"\u22C4","diamond":"\u22C4","Diamond":"\u22C4","diamondsuit":"\u2666","diams":"\u2666","die":"\u00A8","DifferentialD":"\u2146","digamma":"\u03DD","disin":"\u22F2","div":"\u00F7","divide":"\u00F7","divideontimes":"\u22C7","divonx":"\u22C7","DJcy":"\u0402","djcy":"\u0452","dlcorn":"\u231E","dlcrop":"\u230D","dollar":"$","Dopf":"\uD835\uDD3B","dopf":"\uD835\uDD55","Dot":"\u00A8","dot":"\u02D9","DotDot":"\u20DC","doteq":"\u2250","doteqdot":"\u2251","DotEqual":"\u2250","dotminus":"\u2238","dotplus":"\u2214","dotsquare":"\u22A1","doublebarwedge":"\u2306","DoubleContourIntegral":"\u222F","DoubleDot":"\u00A8","DoubleDownArrow":"\u21D3","DoubleLeftArrow":"\u21D0","DoubleLeftRightArrow":"\u21D4","DoubleLeftTee":"\u2AE4","DoubleLongLeftArrow":"\u27F8","DoubleLongLeftRightArrow":"\u27FA","DoubleLongRightArrow":"\u27F9","DoubleRightArrow":"\u21D2","DoubleRightTee":"\u22A8","DoubleUpArrow":"\u21D1","DoubleUpDownArrow":"\u21D5","DoubleVerticalBar":"\u2225","DownArrowBar":"\u2913","downarrow":"\u2193","DownArrow":"\u2193","Downarrow":"\u21D3","DownArrowUpArrow":"\u21F5","DownBreve":"\u0311","downdownarrows":"\u21CA","downharpoonleft":"\u21C3","downharpoonright":"\u21C2","DownLeftRightVector":"\u2950","DownLeftTeeVector":"\u295E","DownLeftVectorBar":"\u2956","DownLeftVector":"\u21BD","DownRightTeeVector":"\u295F","DownRightVectorBar":"\u2957","DownRightVector":"\u21C1","DownTeeArrow":"\u21A7","DownTee":"\u22A4","drbkarow":"\u2910","drcorn":"\u231F","drcrop":"\u230C","Dscr":"\uD835\uDC9F","dscr":"\uD835\uDCB9","DScy":"\u0405","dscy":"\u0455","dsol":"\u29F6","Dstrok":"\u0110","dstrok":"\u0111","dtdot":"\u22F1","dtri":"\u25BF","dtrif":"\u25BE","duarr":"\u21F5","duhar":"\u296F","dwangle":"\u29A6","DZcy":"\u040F","dzcy":"\u045F","dzigrarr":"\u27FF","Eacute":"\u00C9","eacute":"\u00E9","easter":"\u2A6E","Ecaron":"\u011A","ecaron":"\u011B","Ecirc":"\u00CA","ecirc":"\u00EA","ecir":"\u2256","ecolon":"\u2255","Ecy":"\u042D","ecy":"\u044D","eDDot":"\u2A77","Edot":"\u0116","edot":"\u0117","eDot":"\u2251","ee":"\u2147","efDot":"\u2252","Efr":"\uD835\uDD08","efr":"\uD835\uDD22","eg":"\u2A9A","Egrave":"\u00C8","egrave":"\u00E8","egs":"\u2A96","egsdot":"\u2A98","el":"\u2A99","Element":"\u2208","elinters":"\u23E7","ell":"\u2113","els":"\u2A95","elsdot":"\u2A97","Emacr":"\u0112","emacr":"\u0113","empty":"\u2205","emptyset":"\u2205","EmptySmallSquare":"\u25FB","emptyv":"\u2205","EmptyVerySmallSquare":"\u25AB","emsp13":"\u2004","emsp14":"\u2005","emsp":"\u2003","ENG":"\u014A","eng":"\u014B","ensp":"\u2002","Eogon":"\u0118","eogon":"\u0119","Eopf":"\uD835\uDD3C","eopf":"\uD835\uDD56","epar":"\u22D5","eparsl":"\u29E3","eplus":"\u2A71","epsi":"\u03B5","Epsilon":"\u0395","epsilon":"\u03B5","epsiv":"\u03F5","eqcirc":"\u2256","eqcolon":"\u2255","eqsim":"\u2242","eqslantgtr":"\u2A96","eqslantless":"\u2A95","Equal":"\u2A75","equals":"=","EqualTilde":"\u2242","equest":"\u225F","Equilibrium":"\u21CC","equiv":"\u2261","equivDD":"\u2A78","eqvparsl":"\u29E5","erarr":"\u2971","erDot":"\u2253","escr":"\u212F","Escr":"\u2130","esdot":"\u2250","Esim":"\u2A73","esim":"\u2242","Eta":"\u0397","eta":"\u03B7","ETH":"\u00D0","eth":"\u00F0","Euml":"\u00CB","euml":"\u00EB","euro":"\u20AC","excl":"!","exist":"\u2203","Exists":"\u2203","expectation":"\u2130","exponentiale":"\u2147","ExponentialE":"\u2147","fallingdotseq":"\u2252","Fcy":"\u0424","fcy":"\u0444","female":"\u2640","ffilig":"\uFB03","fflig":"\uFB00","ffllig":"\uFB04","Ffr":"\uD835\uDD09","ffr":"\uD835\uDD23","filig":"\uFB01","FilledSmallSquare":"\u25FC","FilledVerySmallSquare":"\u25AA","fjlig":"fj","flat":"\u266D","fllig":"\uFB02","fltns":"\u25B1","fnof":"\u0192","Fopf":"\uD835\uDD3D","fopf":"\uD835\uDD57","forall":"\u2200","ForAll":"\u2200","fork":"\u22D4","forkv":"\u2AD9","Fouriertrf":"\u2131","fpartint":"\u2A0D","frac12":"\u00BD","frac13":"\u2153","frac14":"\u00BC","frac15":"\u2155","frac16":"\u2159","frac18":"\u215B","frac23":"\u2154","frac25":"\u2156","frac34":"\u00BE","frac35":"\u2157","frac38":"\u215C","frac45":"\u2158","frac56":"\u215A","frac58":"\u215D","frac78":"\u215E","frasl":"\u2044","frown":"\u2322","fscr":"\uD835\uDCBB","Fscr":"\u2131","gacute":"\u01F5","Gamma":"\u0393","gamma":"\u03B3","Gammad":"\u03DC","gammad":"\u03DD","gap":"\u2A86","Gbreve":"\u011E","gbreve":"\u011F","Gcedil":"\u0122","Gcirc":"\u011C","gcirc":"\u011D","Gcy":"\u0413","gcy":"\u0433","Gdot":"\u0120","gdot":"\u0121","ge":"\u2265","gE":"\u2267","gEl":"\u2A8C","gel":"\u22DB","geq":"\u2265","geqq":"\u2267","geqslant":"\u2A7E","gescc":"\u2AA9","ges":"\u2A7E","gesdot":"\u2A80","gesdoto":"\u2A82","gesdotol":"\u2A84","gesl":"\u22DB\uFE00","gesles":"\u2A94","Gfr":"\uD835\uDD0A","gfr":"\uD835\uDD24","gg":"\u226B","Gg":"\u22D9","ggg":"\u22D9","gimel":"\u2137","GJcy":"\u0403","gjcy":"\u0453","gla":"\u2AA5","gl":"\u2277","glE":"\u2A92","glj":"\u2AA4","gnap":"\u2A8A","gnapprox":"\u2A8A","gne":"\u2A88","gnE":"\u2269","gneq":"\u2A88","gneqq":"\u2269","gnsim":"\u22E7","Gopf":"\uD835\uDD3E","gopf":"\uD835\uDD58","grave":"`","GreaterEqual":"\u2265","GreaterEqualLess":"\u22DB","GreaterFullEqual":"\u2267","GreaterGreater":"\u2AA2","GreaterLess":"\u2277","GreaterSlantEqual":"\u2A7E","GreaterTilde":"\u2273","Gscr":"\uD835\uDCA2","gscr":"\u210A","gsim":"\u2273","gsime":"\u2A8E","gsiml":"\u2A90","gtcc":"\u2AA7","gtcir":"\u2A7A","gt":">","GT":">","Gt":"\u226B","gtdot":"\u22D7","gtlPar":"\u2995","gtquest":"\u2A7C","gtrapprox":"\u2A86","gtrarr":"\u2978","gtrdot":"\u22D7","gtreqless":"\u22DB","gtreqqless":"\u2A8C","gtrless":"\u2277","gtrsim":"\u2273","gvertneqq":"\u2269\uFE00","gvnE":"\u2269\uFE00","Hacek":"\u02C7","hairsp":"\u200A","half":"\u00BD","hamilt":"\u210B","HARDcy":"\u042A","hardcy":"\u044A","harrcir":"\u2948","harr":"\u2194","hArr":"\u21D4","harrw":"\u21AD","Hat":"^","hbar":"\u210F","Hcirc":"\u0124","hcirc":"\u0125","hearts":"\u2665","heartsuit":"\u2665","hellip":"\u2026","hercon":"\u22B9","hfr":"\uD835\uDD25","Hfr":"\u210C","HilbertSpace":"\u210B","hksearow":"\u2925","hkswarow":"\u2926","hoarr":"\u21FF","homtht":"\u223B","hookleftarrow":"\u21A9","hookrightarrow":"\u21AA","hopf":"\uD835\uDD59","Hopf":"\u210D","horbar":"\u2015","HorizontalLine":"\u2500","hscr":"\uD835\uDCBD","Hscr":"\u210B","hslash":"\u210F","Hstrok":"\u0126","hstrok":"\u0127","HumpDownHump":"\u224E","HumpEqual":"\u224F","hybull":"\u2043","hyphen":"\u2010","Iacute":"\u00CD","iacute":"\u00ED","ic":"\u2063","Icirc":"\u00CE","icirc":"\u00EE","Icy":"\u0418","icy":"\u0438","Idot":"\u0130","IEcy":"\u0415","iecy":"\u0435","iexcl":"\u00A1","iff":"\u21D4","ifr":"\uD835\uDD26","Ifr":"\u2111","Igrave":"\u00CC","igrave":"\u00EC","ii":"\u2148","iiiint":"\u2A0C","iiint":"\u222D","iinfin":"\u29DC","iiota":"\u2129","IJlig":"\u0132","ijlig":"\u0133","Imacr":"\u012A","imacr":"\u012B","image":"\u2111","ImaginaryI":"\u2148","imagline":"\u2110","imagpart":"\u2111","imath":"\u0131","Im":"\u2111","imof":"\u22B7","imped":"\u01B5","Implies":"\u21D2","incare":"\u2105","in":"\u2208","infin":"\u221E","infintie":"\u29DD","inodot":"\u0131","intcal":"\u22BA","int":"\u222B","Int":"\u222C","integers":"\u2124","Integral":"\u222B","intercal":"\u22BA","Intersection":"\u22C2","intlarhk":"\u2A17","intprod":"\u2A3C","InvisibleComma":"\u2063","InvisibleTimes":"\u2062","IOcy":"\u0401","iocy":"\u0451","Iogon":"\u012E","iogon":"\u012F","Iopf":"\uD835\uDD40","iopf":"\uD835\uDD5A","Iota":"\u0399","iota":"\u03B9","iprod":"\u2A3C","iquest":"\u00BF","iscr":"\uD835\uDCBE","Iscr":"\u2110","isin":"\u2208","isindot":"\u22F5","isinE":"\u22F9","isins":"\u22F4","isinsv":"\u22F3","isinv":"\u2208","it":"\u2062","Itilde":"\u0128","itilde":"\u0129","Iukcy":"\u0406","iukcy":"\u0456","Iuml":"\u00CF","iuml":"\u00EF","Jcirc":"\u0134","jcirc":"\u0135","Jcy":"\u0419","jcy":"\u0439","Jfr":"\uD835\uDD0D","jfr":"\uD835\uDD27","jmath":"\u0237","Jopf":"\uD835\uDD41","jopf":"\uD835\uDD5B","Jscr":"\uD835\uDCA5","jscr":"\uD835\uDCBF","Jsercy":"\u0408","jsercy":"\u0458","Jukcy":"\u0404","jukcy":"\u0454","Kappa":"\u039A","kappa":"\u03BA","kappav":"\u03F0","Kcedil":"\u0136","kcedil":"\u0137","Kcy":"\u041A","kcy":"\u043A","Kfr":"\uD835\uDD0E","kfr":"\uD835\uDD28","kgreen":"\u0138","KHcy":"\u0425","khcy":"\u0445","KJcy":"\u040C","kjcy":"\u045C","Kopf":"\uD835\uDD42","kopf":"\uD835\uDD5C","Kscr":"\uD835\uDCA6","kscr":"\uD835\uDCC0","lAarr":"\u21DA","Lacute":"\u0139","lacute":"\u013A","laemptyv":"\u29B4","lagran":"\u2112","Lambda":"\u039B","lambda":"\u03BB","lang":"\u27E8","Lang":"\u27EA","langd":"\u2991","langle":"\u27E8","lap":"\u2A85","Laplacetrf":"\u2112","laquo":"\u00AB","larrb":"\u21E4","larrbfs":"\u291F","larr":"\u2190","Larr":"\u219E","lArr":"\u21D0","larrfs":"\u291D","larrhk":"\u21A9","larrlp":"\u21AB","larrpl":"\u2939","larrsim":"\u2973","larrtl":"\u21A2","latail":"\u2919","lAtail":"\u291B","lat":"\u2AAB","late":"\u2AAD","lates":"\u2AAD\uFE00","lbarr":"\u290C","lBarr":"\u290E","lbbrk":"\u2772","lbrace":"{","lbrack":"[","lbrke":"\u298B","lbrksld":"\u298F","lbrkslu":"\u298D","Lcaron":"\u013D","lcaron":"\u013E","Lcedil":"\u013B","lcedil":"\u013C","lceil":"\u2308","lcub":"{","Lcy":"\u041B","lcy":"\u043B","ldca":"\u2936","ldquo":"\u201C","ldquor":"\u201E","ldrdhar":"\u2967","ldrushar":"\u294B","ldsh":"\u21B2","le":"\u2264","lE":"\u2266","LeftAngleBracket":"\u27E8","LeftArrowBar":"\u21E4","leftarrow":"\u2190","LeftArrow":"\u2190","Leftarrow":"\u21D0","LeftArrowRightArrow":"\u21C6","leftarrowtail":"\u21A2","LeftCeiling":"\u2308","LeftDoubleBracket":"\u27E6","LeftDownTeeVector":"\u2961","LeftDownVectorBar":"\u2959","LeftDownVector":"\u21C3","LeftFloor":"\u230A","leftharpoondown":"\u21BD","leftharpoonup":"\u21BC","leftleftarrows":"\u21C7","leftrightarrow":"\u2194","LeftRightArrow":"\u2194","Leftrightarrow":"\u21D4","leftrightarrows":"\u21C6","leftrightharpoons":"\u21CB","leftrightsquigarrow":"\u21AD","LeftRightVector":"\u294E","LeftTeeArrow":"\u21A4","LeftTee":"\u22A3","LeftTeeVector":"\u295A","leftthreetimes":"\u22CB","LeftTriangleBar":"\u29CF","LeftTriangle":"\u22B2","LeftTriangleEqual":"\u22B4","LeftUpDownVector":"\u2951","LeftUpTeeVector":"\u2960","LeftUpVectorBar":"\u2958","LeftUpVector":"\u21BF","LeftVectorBar":"\u2952","LeftVector":"\u21BC","lEg":"\u2A8B","leg":"\u22DA","leq":"\u2264","leqq":"\u2266","leqslant":"\u2A7D","lescc":"\u2AA8","les":"\u2A7D","lesdot":"\u2A7F","lesdoto":"\u2A81","lesdotor":"\u2A83","lesg":"\u22DA\uFE00","lesges":"\u2A93","lessapprox":"\u2A85","lessdot":"\u22D6","lesseqgtr":"\u22DA","lesseqqgtr":"\u2A8B","LessEqualGreater":"\u22DA","LessFullEqual":"\u2266","LessGreater":"\u2276","lessgtr":"\u2276","LessLess":"\u2AA1","lesssim":"\u2272","LessSlantEqual":"\u2A7D","LessTilde":"\u2272","lfisht":"\u297C","lfloor":"\u230A","Lfr":"\uD835\uDD0F","lfr":"\uD835\uDD29","lg":"\u2276","lgE":"\u2A91","lHar":"\u2962","lhard":"\u21BD","lharu":"\u21BC","lharul":"\u296A","lhblk":"\u2584","LJcy":"\u0409","ljcy":"\u0459","llarr":"\u21C7","ll":"\u226A","Ll":"\u22D8","llcorner":"\u231E","Lleftarrow":"\u21DA","llhard":"\u296B","lltri":"\u25FA","Lmidot":"\u013F","lmidot":"\u0140","lmoustache":"\u23B0","lmoust":"\u23B0","lnap":"\u2A89","lnapprox":"\u2A89","lne":"\u2A87","lnE":"\u2268","lneq":"\u2A87","lneqq":"\u2268","lnsim":"\u22E6","loang":"\u27EC","loarr":"\u21FD","lobrk":"\u27E6","longleftarrow":"\u27F5","LongLeftArrow":"\u27F5","Longleftarrow":"\u27F8","longleftrightarrow":"\u27F7","LongLeftRightArrow":"\u27F7","Longleftrightarrow":"\u27FA","longmapsto":"\u27FC","longrightarrow":"\u27F6","LongRightArrow":"\u27F6","Longrightarrow":"\u27F9","looparrowleft":"\u21AB","looparrowright":"\u21AC","lopar":"\u2985","Lopf":"\uD835\uDD43","lopf":"\uD835\uDD5D","loplus":"\u2A2D","lotimes":"\u2A34","lowast":"\u2217","lowbar":"_","LowerLeftArrow":"\u2199","LowerRightArrow":"\u2198","loz":"\u25CA","lozenge":"\u25CA","lozf":"\u29EB","lpar":"(","lparlt":"\u2993","lrarr":"\u21C6","lrcorner":"\u231F","lrhar":"\u21CB","lrhard":"\u296D","lrm":"\u200E","lrtri":"\u22BF","lsaquo":"\u2039","lscr":"\uD835\uDCC1","Lscr":"\u2112","lsh":"\u21B0","Lsh":"\u21B0","lsim":"\u2272","lsime":"\u2A8D","lsimg":"\u2A8F","lsqb":"[","lsquo":"\u2018","lsquor":"\u201A","Lstrok":"\u0141","lstrok":"\u0142","ltcc":"\u2AA6","ltcir":"\u2A79","lt":"<","LT":"<","Lt":"\u226A","ltdot":"\u22D6","lthree":"\u22CB","ltimes":"\u22C9","ltlarr":"\u2976","ltquest":"\u2A7B","ltri":"\u25C3","ltrie":"\u22B4","ltrif":"\u25C2","ltrPar":"\u2996","lurdshar":"\u294A","luruhar":"\u2966","lvertneqq":"\u2268\uFE00","lvnE":"\u2268\uFE00","macr":"\u00AF","male":"\u2642","malt":"\u2720","maltese":"\u2720","Map":"\u2905","map":"\u21A6","mapsto":"\u21A6","mapstodown":"\u21A7","mapstoleft":"\u21A4","mapstoup":"\u21A5","marker":"\u25AE","mcomma":"\u2A29","Mcy":"\u041C","mcy":"\u043C","mdash":"\u2014","mDDot":"\u223A","measuredangle":"\u2221","MediumSpace":"\u205F","Mellintrf":"\u2133","Mfr":"\uD835\uDD10","mfr":"\uD835\uDD2A","mho":"\u2127","micro":"\u00B5","midast":"*","midcir":"\u2AF0","mid":"\u2223","middot":"\u00B7","minusb":"\u229F","minus":"\u2212","minusd":"\u2238","minusdu":"\u2A2A","MinusPlus":"\u2213","mlcp":"\u2ADB","mldr":"\u2026","mnplus":"\u2213","models":"\u22A7","Mopf":"\uD835\uDD44","mopf":"\uD835\uDD5E","mp":"\u2213","mscr":"\uD835\uDCC2","Mscr":"\u2133","mstpos":"\u223E","Mu":"\u039C","mu":"\u03BC","multimap":"\u22B8","mumap":"\u22B8","nabla":"\u2207","Nacute":"\u0143","nacute":"\u0144","nang":"\u2220\u20D2","nap":"\u2249","napE":"\u2A70\u0338","napid":"\u224B\u0338","napos":"\u0149","napprox":"\u2249","natural":"\u266E","naturals":"\u2115","natur":"\u266E","nbsp":"\u00A0","nbump":"\u224E\u0338","nbumpe":"\u224F\u0338","ncap":"\u2A43","Ncaron":"\u0147","ncaron":"\u0148","Ncedil":"\u0145","ncedil":"\u0146","ncong":"\u2247","ncongdot":"\u2A6D\u0338","ncup":"\u2A42","Ncy":"\u041D","ncy":"\u043D","ndash":"\u2013","nearhk":"\u2924","nearr":"\u2197","neArr":"\u21D7","nearrow":"\u2197","ne":"\u2260","nedot":"\u2250\u0338","NegativeMediumSpace":"\u200B","NegativeThickSpace":"\u200B","NegativeThinSpace":"\u200B","NegativeVeryThinSpace":"\u200B","nequiv":"\u2262","nesear":"\u2928","nesim":"\u2242\u0338","NestedGreaterGreater":"\u226B","NestedLessLess":"\u226A","NewLine":"\n","nexist":"\u2204","nexists":"\u2204","Nfr":"\uD835\uDD11","nfr":"\uD835\uDD2B","ngE":"\u2267\u0338","nge":"\u2271","ngeq":"\u2271","ngeqq":"\u2267\u0338","ngeqslant":"\u2A7E\u0338","nges":"\u2A7E\u0338","nGg":"\u22D9\u0338","ngsim":"\u2275","nGt":"\u226B\u20D2","ngt":"\u226F","ngtr":"\u226F","nGtv":"\u226B\u0338","nharr":"\u21AE","nhArr":"\u21CE","nhpar":"\u2AF2","ni":"\u220B","nis":"\u22FC","nisd":"\u22FA","niv":"\u220B","NJcy":"\u040A","njcy":"\u045A","nlarr":"\u219A","nlArr":"\u21CD","nldr":"\u2025","nlE":"\u2266\u0338","nle":"\u2270","nleftarrow":"\u219A","nLeftarrow":"\u21CD","nleftrightarrow":"\u21AE","nLeftrightarrow":"\u21CE","nleq":"\u2270","nleqq":"\u2266\u0338","nleqslant":"\u2A7D\u0338","nles":"\u2A7D\u0338","nless":"\u226E","nLl":"\u22D8\u0338","nlsim":"\u2274","nLt":"\u226A\u20D2","nlt":"\u226E","nltri":"\u22EA","nltrie":"\u22EC","nLtv":"\u226A\u0338","nmid":"\u2224","NoBreak":"\u2060","NonBreakingSpace":"\u00A0","nopf":"\uD835\uDD5F","Nopf":"\u2115","Not":"\u2AEC","not":"\u00AC","NotCongruent":"\u2262","NotCupCap":"\u226D","NotDoubleVerticalBar":"\u2226","NotElement":"\u2209","NotEqual":"\u2260","NotEqualTilde":"\u2242\u0338","NotExists":"\u2204","NotGreater":"\u226F","NotGreaterEqual":"\u2271","NotGreaterFullEqual":"\u2267\u0338","NotGreaterGreater":"\u226B\u0338","NotGreaterLess":"\u2279","NotGreaterSlantEqual":"\u2A7E\u0338","NotGreaterTilde":"\u2275","NotHumpDownHump":"\u224E\u0338","NotHumpEqual":"\u224F\u0338","notin":"\u2209","notindot":"\u22F5\u0338","notinE":"\u22F9\u0338","notinva":"\u2209","notinvb":"\u22F7","notinvc":"\u22F6","NotLeftTriangleBar":"\u29CF\u0338","NotLeftTriangle":"\u22EA","NotLeftTriangleEqual":"\u22EC","NotLess":"\u226E","NotLessEqual":"\u2270","NotLessGreater":"\u2278","NotLessLess":"\u226A\u0338","NotLessSlantEqual":"\u2A7D\u0338","NotLessTilde":"\u2274","NotNestedGreaterGreater":"\u2AA2\u0338","NotNestedLessLess":"\u2AA1\u0338","notni":"\u220C","notniva":"\u220C","notnivb":"\u22FE","notnivc":"\u22FD","NotPrecedes":"\u2280","NotPrecedesEqual":"\u2AAF\u0338","NotPrecedesSlantEqual":"\u22E0","NotReverseElement":"\u220C","NotRightTriangleBar":"\u29D0\u0338","NotRightTriangle":"\u22EB","NotRightTriangleEqual":"\u22ED","NotSquareSubset":"\u228F\u0338","NotSquareSubsetEqual":"\u22E2","NotSquareSuperset":"\u2290\u0338","NotSquareSupersetEqual":"\u22E3","NotSubset":"\u2282\u20D2","NotSubsetEqual":"\u2288","NotSucceeds":"\u2281","NotSucceedsEqual":"\u2AB0\u0338","NotSucceedsSlantEqual":"\u22E1","NotSucceedsTilde":"\u227F\u0338","NotSuperset":"\u2283\u20D2","NotSupersetEqual":"\u2289","NotTilde":"\u2241","NotTildeEqual":"\u2244","NotTildeFullEqual":"\u2247","NotTildeTilde":"\u2249","NotVerticalBar":"\u2224","nparallel":"\u2226","npar":"\u2226","nparsl":"\u2AFD\u20E5","npart":"\u2202\u0338","npolint":"\u2A14","npr":"\u2280","nprcue":"\u22E0","nprec":"\u2280","npreceq":"\u2AAF\u0338","npre":"\u2AAF\u0338","nrarrc":"\u2933\u0338","nrarr":"\u219B","nrArr":"\u21CF","nrarrw":"\u219D\u0338","nrightarrow":"\u219B","nRightarrow":"\u21CF","nrtri":"\u22EB","nrtrie":"\u22ED","nsc":"\u2281","nsccue":"\u22E1","nsce":"\u2AB0\u0338","Nscr":"\uD835\uDCA9","nscr":"\uD835\uDCC3","nshortmid":"\u2224","nshortparallel":"\u2226","nsim":"\u2241","nsime":"\u2244","nsimeq":"\u2244","nsmid":"\u2224","nspar":"\u2226","nsqsube":"\u22E2","nsqsupe":"\u22E3","nsub":"\u2284","nsubE":"\u2AC5\u0338","nsube":"\u2288","nsubset":"\u2282\u20D2","nsubseteq":"\u2288","nsubseteqq":"\u2AC5\u0338","nsucc":"\u2281","nsucceq":"\u2AB0\u0338","nsup":"\u2285","nsupE":"\u2AC6\u0338","nsupe":"\u2289","nsupset":"\u2283\u20D2","nsupseteq":"\u2289","nsupseteqq":"\u2AC6\u0338","ntgl":"\u2279","Ntilde":"\u00D1","ntilde":"\u00F1","ntlg":"\u2278","ntriangleleft":"\u22EA","ntrianglelefteq":"\u22EC","ntriangleright":"\u22EB","ntrianglerighteq":"\u22ED","Nu":"\u039D","nu":"\u03BD","num":"#","numero":"\u2116","numsp":"\u2007","nvap":"\u224D\u20D2","nvdash":"\u22AC","nvDash":"\u22AD","nVdash":"\u22AE","nVDash":"\u22AF","nvge":"\u2265\u20D2","nvgt":">\u20D2","nvHarr":"\u2904","nvinfin":"\u29DE","nvlArr":"\u2902","nvle":"\u2264\u20D2","nvlt":"<\u20D2","nvltrie":"\u22B4\u20D2","nvrArr":"\u2903","nvrtrie":"\u22B5\u20D2","nvsim":"\u223C\u20D2","nwarhk":"\u2923","nwarr":"\u2196","nwArr":"\u21D6","nwarrow":"\u2196","nwnear":"\u2927","Oacute":"\u00D3","oacute":"\u00F3","oast":"\u229B","Ocirc":"\u00D4","ocirc":"\u00F4","ocir":"\u229A","Ocy":"\u041E","ocy":"\u043E","odash":"\u229D","Odblac":"\u0150","odblac":"\u0151","odiv":"\u2A38","odot":"\u2299","odsold":"\u29BC","OElig":"\u0152","oelig":"\u0153","ofcir":"\u29BF","Ofr":"\uD835\uDD12","ofr":"\uD835\uDD2C","ogon":"\u02DB","Ograve":"\u00D2","ograve":"\u00F2","ogt":"\u29C1","ohbar":"\u29B5","ohm":"\u03A9","oint":"\u222E","olarr":"\u21BA","olcir":"\u29BE","olcross":"\u29BB","oline":"\u203E","olt":"\u29C0","Omacr":"\u014C","omacr":"\u014D","Omega":"\u03A9","omega":"\u03C9","Omicron":"\u039F","omicron":"\u03BF","omid":"\u29B6","ominus":"\u2296","Oopf":"\uD835\uDD46","oopf":"\uD835\uDD60","opar":"\u29B7","OpenCurlyDoubleQuote":"\u201C","OpenCurlyQuote":"\u2018","operp":"\u29B9","oplus":"\u2295","orarr":"\u21BB","Or":"\u2A54","or":"\u2228","ord":"\u2A5D","order":"\u2134","orderof":"\u2134","ordf":"\u00AA","ordm":"\u00BA","origof":"\u22B6","oror":"\u2A56","orslope":"\u2A57","orv":"\u2A5B","oS":"\u24C8","Oscr":"\uD835\uDCAA","oscr":"\u2134","Oslash":"\u00D8","oslash":"\u00F8","osol":"\u2298","Otilde":"\u00D5","otilde":"\u00F5","otimesas":"\u2A36","Otimes":"\u2A37","otimes":"\u2297","Ouml":"\u00D6","ouml":"\u00F6","ovbar":"\u233D","OverBar":"\u203E","OverBrace":"\u23DE","OverBracket":"\u23B4","OverParenthesis":"\u23DC","para":"\u00B6","parallel":"\u2225","par":"\u2225","parsim":"\u2AF3","parsl":"\u2AFD","part":"\u2202","PartialD":"\u2202","Pcy":"\u041F","pcy":"\u043F","percnt":"%","period":".","permil":"\u2030","perp":"\u22A5","pertenk":"\u2031","Pfr":"\uD835\uDD13","pfr":"\uD835\uDD2D","Phi":"\u03A6","phi":"\u03C6","phiv":"\u03D5","phmmat":"\u2133","phone":"\u260E","Pi":"\u03A0","pi":"\u03C0","pitchfork":"\u22D4","piv":"\u03D6","planck":"\u210F","planckh":"\u210E","plankv":"\u210F","plusacir":"\u2A23","plusb":"\u229E","pluscir":"\u2A22","plus":"+","plusdo":"\u2214","plusdu":"\u2A25","pluse":"\u2A72","PlusMinus":"\u00B1","plusmn":"\u00B1","plussim":"\u2A26","plustwo":"\u2A27","pm":"\u00B1","Poincareplane":"\u210C","pointint":"\u2A15","popf":"\uD835\uDD61","Popf":"\u2119","pound":"\u00A3","prap":"\u2AB7","Pr":"\u2ABB","pr":"\u227A","prcue":"\u227C","precapprox":"\u2AB7","prec":"\u227A","preccurlyeq":"\u227C","Precedes":"\u227A","PrecedesEqual":"\u2AAF","PrecedesSlantEqual":"\u227C","PrecedesTilde":"\u227E","preceq":"\u2AAF","precnapprox":"\u2AB9","precneqq":"\u2AB5","precnsim":"\u22E8","pre":"\u2AAF","prE":"\u2AB3","precsim":"\u227E","prime":"\u2032","Prime":"\u2033","primes":"\u2119","prnap":"\u2AB9","prnE":"\u2AB5","prnsim":"\u22E8","prod":"\u220F","Product":"\u220F","profalar":"\u232E","profline":"\u2312","profsurf":"\u2313","prop":"\u221D","Proportional":"\u221D","Proportion":"\u2237","propto":"\u221D","prsim":"\u227E","prurel":"\u22B0","Pscr":"\uD835\uDCAB","pscr":"\uD835\uDCC5","Psi":"\u03A8","psi":"\u03C8","puncsp":"\u2008","Qfr":"\uD835\uDD14","qfr":"\uD835\uDD2E","qint":"\u2A0C","qopf":"\uD835\uDD62","Qopf":"\u211A","qprime":"\u2057","Qscr":"\uD835\uDCAC","qscr":"\uD835\uDCC6","quaternions":"\u210D","quatint":"\u2A16","quest":"?","questeq":"\u225F","quot":"\"","QUOT":"\"","rAarr":"\u21DB","race":"\u223D\u0331","Racute":"\u0154","racute":"\u0155","radic":"\u221A","raemptyv":"\u29B3","rang":"\u27E9","Rang":"\u27EB","rangd":"\u2992","range":"\u29A5","rangle":"\u27E9","raquo":"\u00BB","rarrap":"\u2975","rarrb":"\u21E5","rarrbfs":"\u2920","rarrc":"\u2933","rarr":"\u2192","Rarr":"\u21A0","rArr":"\u21D2","rarrfs":"\u291E","rarrhk":"\u21AA","rarrlp":"\u21AC","rarrpl":"\u2945","rarrsim":"\u2974","Rarrtl":"\u2916","rarrtl":"\u21A3","rarrw":"\u219D","ratail":"\u291A","rAtail":"\u291C","ratio":"\u2236","rationals":"\u211A","rbarr":"\u290D","rBarr":"\u290F","RBarr":"\u2910","rbbrk":"\u2773","rbrace":"}","rbrack":"]","rbrke":"\u298C","rbrksld":"\u298E","rbrkslu":"\u2990","Rcaron":"\u0158","rcaron":"\u0159","Rcedil":"\u0156","rcedil":"\u0157","rceil":"\u2309","rcub":"}","Rcy":"\u0420","rcy":"\u0440","rdca":"\u2937","rdldhar":"\u2969","rdquo":"\u201D","rdquor":"\u201D","rdsh":"\u21B3","real":"\u211C","realine":"\u211B","realpart":"\u211C","reals":"\u211D","Re":"\u211C","rect":"\u25AD","reg":"\u00AE","REG":"\u00AE","ReverseElement":"\u220B","ReverseEquilibrium":"\u21CB","ReverseUpEquilibrium":"\u296F","rfisht":"\u297D","rfloor":"\u230B","rfr":"\uD835\uDD2F","Rfr":"\u211C","rHar":"\u2964","rhard":"\u21C1","rharu":"\u21C0","rharul":"\u296C","Rho":"\u03A1","rho":"\u03C1","rhov":"\u03F1","RightAngleBracket":"\u27E9","RightArrowBar":"\u21E5","rightarrow":"\u2192","RightArrow":"\u2192","Rightarrow":"\u21D2","RightArrowLeftArrow":"\u21C4","rightarrowtail":"\u21A3","RightCeiling":"\u2309","RightDoubleBracket":"\u27E7","RightDownTeeVector":"\u295D","RightDownVectorBar":"\u2955","RightDownVector":"\u21C2","RightFloor":"\u230B","rightharpoondown":"\u21C1","rightharpoonup":"\u21C0","rightleftarrows":"\u21C4","rightleftharpoons":"\u21CC","rightrightarrows":"\u21C9","rightsquigarrow":"\u219D","RightTeeArrow":"\u21A6","RightTee":"\u22A2","RightTeeVector":"\u295B","rightthreetimes":"\u22CC","RightTriangleBar":"\u29D0","RightTriangle":"\u22B3","RightTriangleEqual":"\u22B5","RightUpDownVector":"\u294F","RightUpTeeVector":"\u295C","RightUpVectorBar":"\u2954","RightUpVector":"\u21BE","RightVectorBar":"\u2953","RightVector":"\u21C0","ring":"\u02DA","risingdotseq":"\u2253","rlarr":"\u21C4","rlhar":"\u21CC","rlm":"\u200F","rmoustache":"\u23B1","rmoust":"\u23B1","rnmid":"\u2AEE","roang":"\u27ED","roarr":"\u21FE","robrk":"\u27E7","ropar":"\u2986","ropf":"\uD835\uDD63","Ropf":"\u211D","roplus":"\u2A2E","rotimes":"\u2A35","RoundImplies":"\u2970","rpar":")","rpargt":"\u2994","rppolint":"\u2A12","rrarr":"\u21C9","Rrightarrow":"\u21DB","rsaquo":"\u203A","rscr":"\uD835\uDCC7","Rscr":"\u211B","rsh":"\u21B1","Rsh":"\u21B1","rsqb":"]","rsquo":"\u2019","rsquor":"\u2019","rthree":"\u22CC","rtimes":"\u22CA","rtri":"\u25B9","rtrie":"\u22B5","rtrif":"\u25B8","rtriltri":"\u29CE","RuleDelayed":"\u29F4","ruluhar":"\u2968","rx":"\u211E","Sacute":"\u015A","sacute":"\u015B","sbquo":"\u201A","scap":"\u2AB8","Scaron":"\u0160","scaron":"\u0161","Sc":"\u2ABC","sc":"\u227B","sccue":"\u227D","sce":"\u2AB0","scE":"\u2AB4","Scedil":"\u015E","scedil":"\u015F","Scirc":"\u015C","scirc":"\u015D","scnap":"\u2ABA","scnE":"\u2AB6","scnsim":"\u22E9","scpolint":"\u2A13","scsim":"\u227F","Scy":"\u0421","scy":"\u0441","sdotb":"\u22A1","sdot":"\u22C5","sdote":"\u2A66","searhk":"\u2925","searr":"\u2198","seArr":"\u21D8","searrow":"\u2198","sect":"\u00A7","semi":";","seswar":"\u2929","setminus":"\u2216","setmn":"\u2216","sext":"\u2736","Sfr":"\uD835\uDD16","sfr":"\uD835\uDD30","sfrown":"\u2322","sharp":"\u266F","SHCHcy":"\u0429","shchcy":"\u0449","SHcy":"\u0428","shcy":"\u0448","ShortDownArrow":"\u2193","ShortLeftArrow":"\u2190","shortmid":"\u2223","shortparallel":"\u2225","ShortRightArrow":"\u2192","ShortUpArrow":"\u2191","shy":"\u00AD","Sigma":"\u03A3","sigma":"\u03C3","sigmaf":"\u03C2","sigmav":"\u03C2","sim":"\u223C","simdot":"\u2A6A","sime":"\u2243","simeq":"\u2243","simg":"\u2A9E","simgE":"\u2AA0","siml":"\u2A9D","simlE":"\u2A9F","simne":"\u2246","simplus":"\u2A24","simrarr":"\u2972","slarr":"\u2190","SmallCircle":"\u2218","smallsetminus":"\u2216","smashp":"\u2A33","smeparsl":"\u29E4","smid":"\u2223","smile":"\u2323","smt":"\u2AAA","smte":"\u2AAC","smtes":"\u2AAC\uFE00","SOFTcy":"\u042C","softcy":"\u044C","solbar":"\u233F","solb":"\u29C4","sol":"/","Sopf":"\uD835\uDD4A","sopf":"\uD835\uDD64","spades":"\u2660","spadesuit":"\u2660","spar":"\u2225","sqcap":"\u2293","sqcaps":"\u2293\uFE00","sqcup":"\u2294","sqcups":"\u2294\uFE00","Sqrt":"\u221A","sqsub":"\u228F","sqsube":"\u2291","sqsubset":"\u228F","sqsubseteq":"\u2291","sqsup":"\u2290","sqsupe":"\u2292","sqsupset":"\u2290","sqsupseteq":"\u2292","square":"\u25A1","Square":"\u25A1","SquareIntersection":"\u2293","SquareSubset":"\u228F","SquareSubsetEqual":"\u2291","SquareSuperset":"\u2290","SquareSupersetEqual":"\u2292","SquareUnion":"\u2294","squarf":"\u25AA","squ":"\u25A1","squf":"\u25AA","srarr":"\u2192","Sscr":"\uD835\uDCAE","sscr":"\uD835\uDCC8","ssetmn":"\u2216","ssmile":"\u2323","sstarf":"\u22C6","Star":"\u22C6","star":"\u2606","starf":"\u2605","straightepsilon":"\u03F5","straightphi":"\u03D5","strns":"\u00AF","sub":"\u2282","Sub":"\u22D0","subdot":"\u2ABD","subE":"\u2AC5","sube":"\u2286","subedot":"\u2AC3","submult":"\u2AC1","subnE":"\u2ACB","subne":"\u228A","subplus":"\u2ABF","subrarr":"\u2979","subset":"\u2282","Subset":"\u22D0","subseteq":"\u2286","subseteqq":"\u2AC5","SubsetEqual":"\u2286","subsetneq":"\u228A","subsetneqq":"\u2ACB","subsim":"\u2AC7","subsub":"\u2AD5","subsup":"\u2AD3","succapprox":"\u2AB8","succ":"\u227B","succcurlyeq":"\u227D","Succeeds":"\u227B","SucceedsEqual":"\u2AB0","SucceedsSlantEqual":"\u227D","SucceedsTilde":"\u227F","succeq":"\u2AB0","succnapprox":"\u2ABA","succneqq":"\u2AB6","succnsim":"\u22E9","succsim":"\u227F","SuchThat":"\u220B","sum":"\u2211","Sum":"\u2211","sung":"\u266A","sup1":"\u00B9","sup2":"\u00B2","sup3":"\u00B3","sup":"\u2283","Sup":"\u22D1","supdot":"\u2ABE","supdsub":"\u2AD8","supE":"\u2AC6","supe":"\u2287","supedot":"\u2AC4","Superset":"\u2283","SupersetEqual":"\u2287","suphsol":"\u27C9","suphsub":"\u2AD7","suplarr":"\u297B","supmult":"\u2AC2","supnE":"\u2ACC","supne":"\u228B","supplus":"\u2AC0","supset":"\u2283","Supset":"\u22D1","supseteq":"\u2287","supseteqq":"\u2AC6","supsetneq":"\u228B","supsetneqq":"\u2ACC","supsim":"\u2AC8","supsub":"\u2AD4","supsup":"\u2AD6","swarhk":"\u2926","swarr":"\u2199","swArr":"\u21D9","swarrow":"\u2199","swnwar":"\u292A","szlig":"\u00DF","Tab":"\t","target":"\u2316","Tau":"\u03A4","tau":"\u03C4","tbrk":"\u23B4","Tcaron":"\u0164","tcaron":"\u0165","Tcedil":"\u0162","tcedil":"\u0163","Tcy":"\u0422","tcy":"\u0442","tdot":"\u20DB","telrec":"\u2315","Tfr":"\uD835\uDD17","tfr":"\uD835\uDD31","there4":"\u2234","therefore":"\u2234","Therefore":"\u2234","Theta":"\u0398","theta":"\u03B8","thetasym":"\u03D1","thetav":"\u03D1","thickapprox":"\u2248","thicksim":"\u223C","ThickSpace":"\u205F\u200A","ThinSpace":"\u2009","thinsp":"\u2009","thkap":"\u2248","thksim":"\u223C","THORN":"\u00DE","thorn":"\u00FE","tilde":"\u02DC","Tilde":"\u223C","TildeEqual":"\u2243","TildeFullEqual":"\u2245","TildeTilde":"\u2248","timesbar":"\u2A31","timesb":"\u22A0","times":"\u00D7","timesd":"\u2A30","tint":"\u222D","toea":"\u2928","topbot":"\u2336","topcir":"\u2AF1","top":"\u22A4","Topf":"\uD835\uDD4B","topf":"\uD835\uDD65","topfork":"\u2ADA","tosa":"\u2929","tprime":"\u2034","trade":"\u2122","TRADE":"\u2122","triangle":"\u25B5","triangledown":"\u25BF","triangleleft":"\u25C3","trianglelefteq":"\u22B4","triangleq":"\u225C","triangleright":"\u25B9","trianglerighteq":"\u22B5","tridot":"\u25EC","trie":"\u225C","triminus":"\u2A3A","TripleDot":"\u20DB","triplus":"\u2A39","trisb":"\u29CD","tritime":"\u2A3B","trpezium":"\u23E2","Tscr":"\uD835\uDCAF","tscr":"\uD835\uDCC9","TScy":"\u0426","tscy":"\u0446","TSHcy":"\u040B","tshcy":"\u045B","Tstrok":"\u0166","tstrok":"\u0167","twixt":"\u226C","twoheadleftarrow":"\u219E","twoheadrightarrow":"\u21A0","Uacute":"\u00DA","uacute":"\u00FA","uarr":"\u2191","Uarr":"\u219F","uArr":"\u21D1","Uarrocir":"\u2949","Ubrcy":"\u040E","ubrcy":"\u045E","Ubreve":"\u016C","ubreve":"\u016D","Ucirc":"\u00DB","ucirc":"\u00FB","Ucy":"\u0423","ucy":"\u0443","udarr":"\u21C5","Udblac":"\u0170","udblac":"\u0171","udhar":"\u296E","ufisht":"\u297E","Ufr":"\uD835\uDD18","ufr":"\uD835\uDD32","Ugrave":"\u00D9","ugrave":"\u00F9","uHar":"\u2963","uharl":"\u21BF","uharr":"\u21BE","uhblk":"\u2580","ulcorn":"\u231C","ulcorner":"\u231C","ulcrop":"\u230F","ultri":"\u25F8","Umacr":"\u016A","umacr":"\u016B","uml":"\u00A8","UnderBar":"_","UnderBrace":"\u23DF","UnderBracket":"\u23B5","UnderParenthesis":"\u23DD","Union":"\u22C3","UnionPlus":"\u228E","Uogon":"\u0172","uogon":"\u0173","Uopf":"\uD835\uDD4C","uopf":"\uD835\uDD66","UpArrowBar":"\u2912","uparrow":"\u2191","UpArrow":"\u2191","Uparrow":"\u21D1","UpArrowDownArrow":"\u21C5","updownarrow":"\u2195","UpDownArrow":"\u2195","Updownarrow":"\u21D5","UpEquilibrium":"\u296E","upharpoonleft":"\u21BF","upharpoonright":"\u21BE","uplus":"\u228E","UpperLeftArrow":"\u2196","UpperRightArrow":"\u2197","upsi":"\u03C5","Upsi":"\u03D2","upsih":"\u03D2","Upsilon":"\u03A5","upsilon":"\u03C5","UpTeeArrow":"\u21A5","UpTee":"\u22A5","upuparrows":"\u21C8","urcorn":"\u231D","urcorner":"\u231D","urcrop":"\u230E","Uring":"\u016E","uring":"\u016F","urtri":"\u25F9","Uscr":"\uD835\uDCB0","uscr":"\uD835\uDCCA","utdot":"\u22F0","Utilde":"\u0168","utilde":"\u0169","utri":"\u25B5","utrif":"\u25B4","uuarr":"\u21C8","Uuml":"\u00DC","uuml":"\u00FC","uwangle":"\u29A7","vangrt":"\u299C","varepsilon":"\u03F5","varkappa":"\u03F0","varnothing":"\u2205","varphi":"\u03D5","varpi":"\u03D6","varpropto":"\u221D","varr":"\u2195","vArr":"\u21D5","varrho":"\u03F1","varsigma":"\u03C2","varsubsetneq":"\u228A\uFE00","varsubsetneqq":"\u2ACB\uFE00","varsupsetneq":"\u228B\uFE00","varsupsetneqq":"\u2ACC\uFE00","vartheta":"\u03D1","vartriangleleft":"\u22B2","vartriangleright":"\u22B3","vBar":"\u2AE8","Vbar":"\u2AEB","vBarv":"\u2AE9","Vcy":"\u0412","vcy":"\u0432","vdash":"\u22A2","vDash":"\u22A8","Vdash":"\u22A9","VDash":"\u22AB","Vdashl":"\u2AE6","veebar":"\u22BB","vee":"\u2228","Vee":"\u22C1","veeeq":"\u225A","vellip":"\u22EE","verbar":"|","Verbar":"\u2016","vert":"|","Vert":"\u2016","VerticalBar":"\u2223","VerticalLine":"|","VerticalSeparator":"\u2758","VerticalTilde":"\u2240","VeryThinSpace":"\u200A","Vfr":"\uD835\uDD19","vfr":"\uD835\uDD33","vltri":"\u22B2","vnsub":"\u2282\u20D2","vnsup":"\u2283\u20D2","Vopf":"\uD835\uDD4D","vopf":"\uD835\uDD67","vprop":"\u221D","vrtri":"\u22B3","Vscr":"\uD835\uDCB1","vscr":"\uD835\uDCCB","vsubnE":"\u2ACB\uFE00","vsubne":"\u228A\uFE00","vsupnE":"\u2ACC\uFE00","vsupne":"\u228B\uFE00","Vvdash":"\u22AA","vzigzag":"\u299A","Wcirc":"\u0174","wcirc":"\u0175","wedbar":"\u2A5F","wedge":"\u2227","Wedge":"\u22C0","wedgeq":"\u2259","weierp":"\u2118","Wfr":"\uD835\uDD1A","wfr":"\uD835\uDD34","Wopf":"\uD835\uDD4E","wopf":"\uD835\uDD68","wp":"\u2118","wr":"\u2240","wreath":"\u2240","Wscr":"\uD835\uDCB2","wscr":"\uD835\uDCCC","xcap":"\u22C2","xcirc":"\u25EF","xcup":"\u22C3","xdtri":"\u25BD","Xfr":"\uD835\uDD1B","xfr":"\uD835\uDD35","xharr":"\u27F7","xhArr":"\u27FA","Xi":"\u039E","xi":"\u03BE","xlarr":"\u27F5","xlArr":"\u27F8","xmap":"\u27FC","xnis":"\u22FB","xodot":"\u2A00","Xopf":"\uD835\uDD4F","xopf":"\uD835\uDD69","xoplus":"\u2A01","xotime":"\u2A02","xrarr":"\u27F6","xrArr":"\u27F9","Xscr":"\uD835\uDCB3","xscr":"\uD835\uDCCD","xsqcup":"\u2A06","xuplus":"\u2A04","xutri":"\u25B3","xvee":"\u22C1","xwedge":"\u22C0","Yacute":"\u00DD","yacute":"\u00FD","YAcy":"\u042F","yacy":"\u044F","Ycirc":"\u0176","ycirc":"\u0177","Ycy":"\u042B","ycy":"\u044B","yen":"\u00A5","Yfr":"\uD835\uDD1C","yfr":"\uD835\uDD36","YIcy":"\u0407","yicy":"\u0457","Yopf":"\uD835\uDD50","yopf":"\uD835\uDD6A","Yscr":"\uD835\uDCB4","yscr":"\uD835\uDCCE","YUcy":"\u042E","yucy":"\u044E","yuml":"\u00FF","Yuml":"\u0178","Zacute":"\u0179","zacute":"\u017A","Zcaron":"\u017D","zcaron":"\u017E","Zcy":"\u0417","zcy":"\u0437","Zdot":"\u017B","zdot":"\u017C","zeetrf":"\u2128","ZeroWidthSpace":"\u200B","Zeta":"\u0396","zeta":"\u03B6","zfr":"\uD835\uDD37","Zfr":"\u2128","ZHcy":"\u0416","zhcy":"\u0436","zigrarr":"\u21DD","zopf":"\uD835\uDD6B","Zopf":"\u2124","Zscr":"\uD835\uDCB5","zscr":"\uD835\uDCCF","zwj":"\u200D","zwnj":"\u200C"};
});
__d('entities/maps/legacy.json',[],function(global, require, module, exports) {  module.exports = {"Aacute":"\u00C1","aacute":"\u00E1","Acirc":"\u00C2","acirc":"\u00E2","acute":"\u00B4","AElig":"\u00C6","aelig":"\u00E6","Agrave":"\u00C0","agrave":"\u00E0","amp":"&","AMP":"&","Aring":"\u00C5","aring":"\u00E5","Atilde":"\u00C3","atilde":"\u00E3","Auml":"\u00C4","auml":"\u00E4","brvbar":"\u00A6","Ccedil":"\u00C7","ccedil":"\u00E7","cedil":"\u00B8","cent":"\u00A2","copy":"\u00A9","COPY":"\u00A9","curren":"\u00A4","deg":"\u00B0","divide":"\u00F7","Eacute":"\u00C9","eacute":"\u00E9","Ecirc":"\u00CA","ecirc":"\u00EA","Egrave":"\u00C8","egrave":"\u00E8","ETH":"\u00D0","eth":"\u00F0","Euml":"\u00CB","euml":"\u00EB","frac12":"\u00BD","frac14":"\u00BC","frac34":"\u00BE","gt":">","GT":">","Iacute":"\u00CD","iacute":"\u00ED","Icirc":"\u00CE","icirc":"\u00EE","iexcl":"\u00A1","Igrave":"\u00CC","igrave":"\u00EC","iquest":"\u00BF","Iuml":"\u00CF","iuml":"\u00EF","laquo":"\u00AB","lt":"<","LT":"<","macr":"\u00AF","micro":"\u00B5","middot":"\u00B7","nbsp":"\u00A0","not":"\u00AC","Ntilde":"\u00D1","ntilde":"\u00F1","Oacute":"\u00D3","oacute":"\u00F3","Ocirc":"\u00D4","ocirc":"\u00F4","Ograve":"\u00D2","ograve":"\u00F2","ordf":"\u00AA","ordm":"\u00BA","Oslash":"\u00D8","oslash":"\u00F8","Otilde":"\u00D5","otilde":"\u00F5","Ouml":"\u00D6","ouml":"\u00F6","para":"\u00B6","plusmn":"\u00B1","pound":"\u00A3","quot":"\"","QUOT":"\"","raquo":"\u00BB","reg":"\u00AE","REG":"\u00AE","sect":"\u00A7","shy":"\u00AD","sup1":"\u00B9","sup2":"\u00B2","sup3":"\u00B3","szlig":"\u00DF","THORN":"\u00DE","thorn":"\u00FE","times":"\u00D7","Uacute":"\u00DA","uacute":"\u00FA","Ucirc":"\u00DB","ucirc":"\u00FB","Ugrave":"\u00D9","ugrave":"\u00F9","uml":"\u00A8","Uuml":"\u00DC","uuml":"\u00FC","Yacute":"\u00DD","yacute":"\u00FD","yen":"\u00A5","yuml":"\u00FF"};
});
__d('entities/maps/xml.json',[],function(global, require, module, exports) {  module.exports = {"amp":"&","apos":"'","gt":">","lt":"<","quot":"\""}
;
});
__d('util/util.js',["util/support/isBufferBrowser.js","inherits/inherits_browser.js"],function(global, require, module, exports) {  var 




















formatRegExp=/%[sdj%]/g;
exports.format = function(f){
if(!isString(f)){
var objects=[];
for(var i=0;i < arguments.length;i++) {
objects.push(inspect(arguments[i]));}

return objects.join(' ');}


var i=1;
var args=arguments;
var len=args.length;
var str=String(f).replace(formatRegExp,function(x){
if(x === '%%')return '%';
if(i >= len)return x;
switch(x){
case '%s':return String(args[i++]);
case '%d':return Number(args[i++]);
case '%j':
try{
return JSON.stringify(args[i++]);}
catch(_) {
return '[Circular]';}

default:
return x;}});


for(var x=args[i];i < len;x = args[++i]) {
if(isNull(x) || !isObject(x)){
str += ' ' + x;}else 
{
str += ' ' + inspect(x);}}


return str;};






exports.deprecate = function(fn,msg){

if(isUndefined(global.process)){
return function(){
return exports.deprecate(fn,msg).apply(this,arguments);};}



if(process.noDeprecation === true){
return fn;}


var warned=false;
function deprecated(){
if(!warned){
if(process.throwDeprecation){
throw new Error(msg);}else 
if(process.traceDeprecation){
console.trace(msg);}else 
{
console.error(msg);}

warned = true;}

return fn.apply(this,arguments);}


return deprecated;};



var debugs={};
var debugEnviron;
exports.debuglog = function(set){
if(isUndefined(debugEnviron))
debugEnviron = process.env.NODE_DEBUG || '';
set = set.toUpperCase();
if(!debugs[set]){
if(new RegExp('\\b' + set + '\\b','i').test(debugEnviron)){
var pid=process.pid;
debugs[set] = function(){
var msg=exports.format.apply(exports,arguments);
console.error('%s %d: %s',set,pid,msg);};}else 

{
debugs[set] = function(){};}}


return debugs[set];};











function inspect(obj,opts){

var ctx={
seen:[],
stylize:stylizeNoColor};


if(arguments.length >= 3)ctx.depth = arguments[2];
if(arguments.length >= 4)ctx.colors = arguments[3];
if(isBoolean(opts)){

ctx.showHidden = opts;}else 
if(opts){

exports._extend(ctx,opts);}


if(isUndefined(ctx.showHidden))ctx.showHidden = false;
if(isUndefined(ctx.depth))ctx.depth = 2;
if(isUndefined(ctx.colors))ctx.colors = false;
if(isUndefined(ctx.customInspect))ctx.customInspect = true;
if(ctx.colors)ctx.stylize = stylizeWithColor;
return formatValue(ctx,obj,ctx.depth);}

exports.inspect = inspect;



inspect.colors = {
'bold':[1,22],
'italic':[3,23],
'underline':[4,24],
'inverse':[7,27],
'white':[37,39],
'grey':[90,39],
'black':[30,39],
'blue':[34,39],
'cyan':[36,39],
'green':[32,39],
'magenta':[35,39],
'red':[31,39],
'yellow':[33,39]};



inspect.styles = {
'special':'cyan',
'number':'yellow',
'boolean':'yellow',
'undefined':'grey',
'null':'bold',
'string':'green',
'date':'magenta',

'regexp':'red'};



function stylizeWithColor(str,styleType){
var style=inspect.styles[styleType];

if(style){
return '\u001b[' + inspect.colors[style][0] + 'm' + str + 
'\u001b[' + inspect.colors[style][1] + 'm';}else 
{
return str;}}




function stylizeNoColor(str,styleType){
return str;}



function arrayToHash(array){
var hash={};

array.forEach(function(val,idx){
hash[val] = true;});


return hash;}



function formatValue(ctx,value,recurseTimes){


if(ctx.customInspect && 
value && 
isFunction(value.inspect) && 

value.inspect !== exports.inspect && 

!(value.constructor && value.constructor.prototype === value)){
var ret=value.inspect(recurseTimes,ctx);
if(!isString(ret)){
ret = formatValue(ctx,ret,recurseTimes);}

return ret;}



var primitive=formatPrimitive(ctx,value);
if(primitive){
return primitive;}



var keys=Object.keys(value);
var visibleKeys=arrayToHash(keys);

if(ctx.showHidden){
keys = Object.getOwnPropertyNames(value);}




if(isError(value) && (
keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)){
return formatError(value);}



if(keys.length === 0){
if(isFunction(value)){
var name=value.name?': ' + value.name:'';
return ctx.stylize('[Function' + name + ']','special');}

if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}

if(isDate(value)){
return ctx.stylize(Date.prototype.toString.call(value),'date');}

if(isError(value)){
return formatError(value);}}



var base='',array=false,braces=['{','}'];


if(isArray(value)){
array = true;
braces = ['[',']'];}



if(isFunction(value)){
var n=value.name?': ' + value.name:'';
base = ' [Function' + n + ']';}



if(isRegExp(value)){
base = ' ' + RegExp.prototype.toString.call(value);}



if(isDate(value)){
base = ' ' + Date.prototype.toUTCString.call(value);}



if(isError(value)){
base = ' ' + formatError(value);}


if(keys.length === 0 && (!array || value.length == 0)){
return braces[0] + base + braces[1];}


if(recurseTimes < 0){
if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}else 
{
return ctx.stylize('[Object]','special');}}



ctx.seen.push(value);

var output;
if(array){
output = formatArray(ctx,value,recurseTimes,visibleKeys,keys);}else 
{
output = keys.map(function(key){
return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array);});}



ctx.seen.pop();

return reduceToSingleString(output,base,braces);}



function formatPrimitive(ctx,value){
if(isUndefined(value))
return ctx.stylize('undefined','undefined');
if(isString(value)){
var simple='\'' + JSON.stringify(value).replace(/^"|"$/g,'').
replace(/'/g,"\\'").
replace(/\\"/g,'"') + '\'';
return ctx.stylize(simple,'string');}

if(isNumber(value))
return ctx.stylize('' + value,'number');
if(isBoolean(value))
return ctx.stylize('' + value,'boolean');

if(isNull(value))
return ctx.stylize('null','null');}



function formatError(value){
return '[' + Error.prototype.toString.call(value) + ']';}



function formatArray(ctx,value,recurseTimes,visibleKeys,keys){
var output=[];
for(var i=0,l=value.length;i < l;++i) {
if(hasOwnProperty(value,String(i))){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
String(i),true));}else 
{
output.push('');}}


keys.forEach(function(key){
if(!key.match(/^\d+$/)){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
key,true));}});


return output;}



function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){
var name,str,desc;
desc = Object.getOwnPropertyDescriptor(value,key) || {value:value[key]};
if(desc.get){
if(desc.set){
str = ctx.stylize('[Getter/Setter]','special');}else 
{
str = ctx.stylize('[Getter]','special');}}else 

{
if(desc.set){
str = ctx.stylize('[Setter]','special');}}


if(!hasOwnProperty(visibleKeys,key)){
name = '[' + key + ']';}

if(!str){
if(ctx.seen.indexOf(desc.value) < 0){
if(isNull(recurseTimes)){
str = formatValue(ctx,desc.value,null);}else 
{
str = formatValue(ctx,desc.value,recurseTimes - 1);}

if(str.indexOf('\n') > -1){
if(array){
str = str.split('\n').map(function(line){
return '  ' + line;}).
join('\n').substr(2);}else 
{
str = '\n' + str.split('\n').map(function(line){
return '   ' + line;}).
join('\n');}}}else 


{
str = ctx.stylize('[Circular]','special');}}


if(isUndefined(name)){
if(array && key.match(/^\d+$/)){
return str;}

name = JSON.stringify('' + key);
if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){
name = name.substr(1,name.length - 2);
name = ctx.stylize(name,'name');}else 
{
name = name.replace(/'/g,"\\'").
replace(/\\"/g,'"').
replace(/(^"|"$)/g,"'");
name = ctx.stylize(name,'string');}}



return name + ': ' + str;}



function reduceToSingleString(output,base,braces){
var numLinesEst=0;
var length=output.reduce(function(prev,cur){
numLinesEst++;
if(cur.indexOf('\n') >= 0)numLinesEst++;
return prev + cur.replace(/\u001b\[\d\d?m/g,'').length + 1;},
0);

if(length > 60){
return braces[0] + (
base === ''?'':base + '\n ') + 
' ' + 
output.join(',\n  ') + 
' ' + 
braces[1];}


return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];}





function isArray(ar){
return Array.isArray(ar);}

exports.isArray = isArray;

function isBoolean(arg){
return typeof arg === 'boolean';}

exports.isBoolean = isBoolean;

function isNull(arg){
return arg === null;}

exports.isNull = isNull;

function isNullOrUndefined(arg){
return arg == null;}

exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg){
return typeof arg === 'number';}

exports.isNumber = isNumber;

function isString(arg){
return typeof arg === 'string';}

exports.isString = isString;

function isSymbol(arg){
return typeof arg === 'symbol';}

exports.isSymbol = isSymbol;

function isUndefined(arg){
return arg === void 0;}

exports.isUndefined = isUndefined;

function isRegExp(re){
return isObject(re) && objectToString(re) === '[object RegExp]';}

exports.isRegExp = isRegExp;

function isObject(arg){
return typeof arg === 'object' && arg !== null;}

exports.isObject = isObject;

function isDate(d){
return isObject(d) && objectToString(d) === '[object Date]';}

exports.isDate = isDate;

function isError(e){
return isObject(e) && (
objectToString(e) === '[object Error]' || e instanceof Error);}

exports.isError = isError;

function isFunction(arg){
return typeof arg === 'function';}

exports.isFunction = isFunction;

function isPrimitive(arg){
return arg === null || 
typeof arg === 'boolean' || 
typeof arg === 'number' || 
typeof arg === 'string' || 
typeof arg === 'symbol' || 
typeof arg === 'undefined';}

exports.isPrimitive = isPrimitive;

exports.isBuffer = require('util/support/isBufferBrowser.js');

function objectToString(o){
return Object.prototype.toString.call(o);}



function pad(n){
return n < 10?'0' + n.toString(10):n.toString(10);}



var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep',
'Oct','Nov','Dec'];


function timestamp(){
var d=new Date();
var time=[pad(d.getHours()),
pad(d.getMinutes()),
pad(d.getSeconds())].join(':');
return [d.getDate(),months[d.getMonth()],time].join(' ');}




exports.log = function(){
console.log('%s - %s',timestamp(),exports.format.apply(exports,arguments));};
















exports.inherits = require('inherits/inherits_browser.js');

exports._extend = function(origin,add){

if(!add || !isObject(add))return origin;

var keys=Object.keys(add);
var i=keys.length;
while(i--) {
origin[keys[i]] = add[keys[i]];}

return origin;};


function hasOwnProperty(obj,prop){
return Object.prototype.hasOwnProperty.call(obj,prop);}
});
__d('util/support/isBufferBrowser.js',[],function(global, require, module, exports) {  module.exports = function isBuffer(arg){
return arg && typeof arg === 'object' && 
typeof arg.copy === 'function' && 
typeof arg.fill === 'function' && 
typeof arg.readUInt8 === 'function';};
});
__d('inherits/inherits_browser.js',[],function(global, require, module, exports) {  if(typeof Object.create === 'function'){

module.exports = function inherits(ctor,superCtor){
ctor.super_ = superCtor;
ctor.prototype = Object.create(superCtor.prototype,{
constructor:{
value:ctor,
enumerable:false,
writable:true,
configurable:true}});};}else 



{

module.exports = function inherits(ctor,superCtor){
ctor.super_ = superCtor;
var TempCtor=function(){};
TempCtor.prototype = superCtor.prototype;
ctor.prototype = new TempCtor();
ctor.prototype.constructor = ctor;};}
});
__d('domhandler/index.js',["domelementtype/index.js","domhandler/lib/node.js","domhandler/lib/element.js"],function(global, require, module, exports) {  var ElementType=require("domelementtype/index.js");

var re_whitespace=/\s+/g;
var NodePrototype=require("domhandler/lib/node.js");
var ElementPrototype=require("domhandler/lib/element.js");

function DomHandler(callback,options,elementCB){
if(typeof callback === "object"){
elementCB = options;
options = callback;
callback = null;}else 
if(typeof options === "function"){
elementCB = options;
options = defaultOpts;}

this._callback = callback;
this._options = options || defaultOpts;
this._elementCB = elementCB;
this.dom = [];
this._done = false;
this._tagStack = [];
this._parser = this._parser || null;}



var defaultOpts={
normalizeWhitespace:false,
withStartIndices:false};


DomHandler.prototype.onparserinit = function(parser){
this._parser = parser;};



DomHandler.prototype.onreset = function(){
DomHandler.call(this,this._callback,this._options,this._elementCB);};



DomHandler.prototype.onend = function(){
if(this._done)return;
this._done = true;
this._parser = null;
this._handleCallback(null);};


DomHandler.prototype._handleCallback = 
DomHandler.prototype.onerror = function(error){
if(typeof this._callback === "function"){
this._callback(error,this.dom);}else 
{
if(error)throw error;}};



DomHandler.prototype.onclosetag = function(){

var elem=this._tagStack.pop();
if(this._elementCB)this._elementCB(elem);};


DomHandler.prototype._addDomElement = function(element){
var parent=this._tagStack[this._tagStack.length - 1];
var siblings=parent?parent.children:this.dom;
var previousSibling=siblings[siblings.length - 1];

element.next = null;

if(this._options.withStartIndices){
element.startIndex = this._parser.startIndex;}


if(this._options.withDomLvl1){
element.__proto__ = element.type === "tag"?ElementPrototype:NodePrototype;}


if(previousSibling){
element.prev = previousSibling;
previousSibling.next = element;}else 
{
element.prev = null;}


siblings.push(element);
element.parent = parent || null;};


DomHandler.prototype.onopentag = function(name,attribs){
var element={
type:name === "script"?ElementType.Script:name === "style"?ElementType.Style:ElementType.Tag,
name:name,
attribs:attribs,
children:[]};


this._addDomElement(element);

this._tagStack.push(element);};


DomHandler.prototype.ontext = function(data){


var normalize=this._options.normalizeWhitespace || this._options.ignoreWhitespace;

var lastTag;

if(!this._tagStack.length && this.dom.length && (lastTag = this.dom[this.dom.length - 1]).type === ElementType.Text){
if(normalize){
lastTag.data = (lastTag.data + data).replace(re_whitespace," ");}else 
{
lastTag.data += data;}}else 

{
if(
this._tagStack.length && (
lastTag = this._tagStack[this._tagStack.length - 1]) && (
lastTag = lastTag.children[lastTag.children.length - 1]) && 
lastTag.type === ElementType.Text)
{
if(normalize){
lastTag.data = (lastTag.data + data).replace(re_whitespace," ");}else 
{
lastTag.data += data;}}else 

{
if(normalize){
data = data.replace(re_whitespace," ");}


this._addDomElement({
data:data,
type:ElementType.Text});}}};





DomHandler.prototype.oncomment = function(data){
var lastTag=this._tagStack[this._tagStack.length - 1];

if(lastTag && lastTag.type === ElementType.Comment){
lastTag.data += data;
return;}


var element={
data:data,
type:ElementType.Comment};


this._addDomElement(element);
this._tagStack.push(element);};


DomHandler.prototype.oncdatastart = function(){
var element={
children:[{
data:"",
type:ElementType.Text}],

type:ElementType.CDATA};


this._addDomElement(element);
this._tagStack.push(element);};


DomHandler.prototype.oncommentend = DomHandler.prototype.oncdataend = function(){
this._tagStack.pop();};


DomHandler.prototype.onprocessinginstruction = function(name,data){
this._addDomElement({
name:name,
data:data,
type:ElementType.Directive});};



module.exports = DomHandler;
});
__d('domelementtype/index.js',[],function(global, require, module, exports) {  module.
exports = {
Text:"text",
Directive:"directive",
Comment:"comment",
Script:"script",
Style:"style",
Tag:"tag",
CDATA:"cdata",
Doctype:"doctype",

isTag:function(elem){
return elem.type === "tag" || elem.type === "script" || elem.type === "style";}};
});
__d('domhandler/lib/node.js',[],function(global, require, module, exports) {  var 

NodePrototype=module.exports = {
get firstChild(){
var children=this.children;
return children && children[0] || null;},

get lastChild(){
var children=this.children;
return children && children[children.length - 1] || null;},

get nodeType(){
return nodeTypes[this.type] || nodeTypes.element;}};



var domLvl1={
tagName:"name",
childNodes:"children",
parentNode:"parent",
previousSibling:"prev",
nextSibling:"next",
nodeValue:"data"};


var nodeTypes={
element:1,
text:3,
cdata:4,
comment:8};


Object.keys(domLvl1).forEach(function(key){
var shorthand=domLvl1[key];
Object.defineProperty(NodePrototype,key,{
get:function(){
return this[shorthand] || null;},

set:function(val){
this[shorthand] = val;
return val;}});});
});
__d('domhandler/lib/element.js',["domhandler/lib/node.js"],function(global, require, module, exports) {  var 
NodePrototype=require('domhandler/lib/node.js');
var ElementPrototype=module.exports = Object.create(NodePrototype);

var domLvl1={
tagName:"name"};


Object.keys(domLvl1).forEach(function(key){
var shorthand=domLvl1[key];
Object.defineProperty(ElementPrototype,key,{
get:function(){
return this[shorthand] || null;},

set:function(val){
this[shorthand] = val;
return val;}});});
});
__d('htmlparser2/lib/FeedHandler.js',["htmlparser2/lib/index.js","util/util.js"],function(global, require, module, exports) {  var index=require("htmlparser2/lib/index.js"),
DomHandler=index.DomHandler,
DomUtils=index.DomUtils;


function FeedHandler(callback,options){
this.init(callback,options);}


require("util/util.js").inherits(FeedHandler,DomHandler);

FeedHandler.prototype.init = DomHandler;

function getElements(what,where){
return DomUtils.getElementsByTagName(what,where,true);}

function getOneElement(what,where){
return DomUtils.getElementsByTagName(what,where,true,1)[0];}

function fetch(what,where,recurse){
return DomUtils.getText(
DomUtils.getElementsByTagName(what,where,recurse,1)).
trim();}


function addConditionally(obj,prop,what,where,recurse){
var tmp=fetch(what,where,recurse);
if(tmp)obj[prop] = tmp;}


var isValidFeed=function(value){
return value === "rss" || value === "feed" || value === "rdf:RDF";};


FeedHandler.prototype.onend = function(){
var feed={},
feedRoot=getOneElement(isValidFeed,this.dom),
tmp,childs;

if(feedRoot){
if(feedRoot.name === "feed"){
childs = feedRoot.children;

feed.type = "atom";
addConditionally(feed,"id","id",childs);
addConditionally(feed,"title","title",childs);
if((tmp = getOneElement("link",childs)) && (tmp = tmp.attribs) && (tmp = tmp.href))feed.link = tmp;
addConditionally(feed,"description","subtitle",childs);
if(tmp = fetch("updated",childs))feed.updated = new Date(tmp);
addConditionally(feed,"author","email",childs,true);

feed.items = getElements("entry",childs).map(function(item){
var entry={},tmp;

item = item.children;

addConditionally(entry,"id","id",item);
addConditionally(entry,"title","title",item);
if((tmp = getOneElement("link",item)) && (tmp = tmp.attribs) && (tmp = tmp.href))entry.link = tmp;
if(tmp = fetch("summary",item) || fetch("content",item))entry.description = tmp;
if(tmp = fetch("updated",item))entry.pubDate = new Date(tmp);
return entry;});}else 

{
childs = getOneElement("channel",feedRoot.children).children;

feed.type = feedRoot.name.substr(0,3);
feed.id = "";
addConditionally(feed,"title","title",childs);
addConditionally(feed,"link","link",childs);
addConditionally(feed,"description","description",childs);
if(tmp = fetch("lastBuildDate",childs))feed.updated = new Date(tmp);
addConditionally(feed,"author","managingEditor",childs,true);

feed.items = getElements("item",feedRoot.children).map(function(item){
var entry={},tmp;

item = item.children;

addConditionally(entry,"id","guid",item);
addConditionally(entry,"title","title",item);
addConditionally(entry,"link","link",item);
addConditionally(entry,"description","description",item);
if(tmp = fetch("pubDate",item))entry.pubDate = new Date(tmp);
return entry;});}}



this.dom = feed;
DomHandler.prototype._handleCallback.call(
this,feedRoot?null:Error("couldn't find root of feed"));};



module.exports = FeedHandler;
});
__d('htmlparser2/lib/Stream.js',["htmlparser2/lib/WritableStream.js","util/util.js","htmlparser2/lib/index.js"],function(global, require, module, exports) {  module.exports = Stream;

var Parser=require("htmlparser2/lib/WritableStream.js");

function Stream(options){
Parser.call(this,new Cbs(this),options);}


require("util/util.js").inherits(Stream,Parser);

Stream.prototype.readable = true;

function Cbs(scope){
this.scope = scope;}


var EVENTS=require("htmlparser2/lib/index.js").EVENTS;

Object.keys(EVENTS).forEach(function(name){
if(EVENTS[name] === 0){
Cbs.prototype["on" + name] = function(){
this.scope.emit(name);};}else 

if(EVENTS[name] === 1){
Cbs.prototype["on" + name] = function(a){
this.scope.emit(name,a);};}else 

if(EVENTS[name] === 2){
Cbs.prototype["on" + name] = function(a,b){
this.scope.emit(name,a,b);};}else 

{
throw Error("wrong number of arguments!");}});
});
__d('htmlparser2/lib/WritableStream.js',["htmlparser2/lib/Parser.js","readable-stream/readable.js","util/util.js"],function(global, require, module, exports) {  module.exports = Stream;

var Parser=require("htmlparser2/lib/Parser.js"),
WritableStream=require("stream").Writable || require("readable-stream/readable.js").Writable;

function Stream(cbs,options){
var parser=this._parser = new Parser(cbs,options);

WritableStream.call(this,{decodeStrings:false});

this.once("finish",function(){
parser.end();});}



require("util/util.js").inherits(Stream,WritableStream);

WritableStream.prototype._write = function(chunk,encoding,cb){
this._parser.write(chunk);
cb();};
});
__d('readable-stream/readable.js',["readable-stream/lib/_stream_readable.js","readable-stream/lib/_stream_writable.js","readable-stream/lib/_stream_duplex.js","readable-stream/lib/_stream_transform.js","readable-stream/lib/_stream_passthrough.js"],function(global, require, module, exports) {  exports = module.exports = require('readable-stream/lib/_stream_readable.js');
exports.Stream = require('stream');
exports.Readable = exports;
exports.Writable = require('readable-stream/lib/_stream_writable.js');
exports.Duplex = require('readable-stream/lib/_stream_duplex.js');
exports.Transform = require('readable-stream/lib/_stream_transform.js');
exports.PassThrough = require('readable-stream/lib/_stream_passthrough.js');
});
__d('readable-stream/lib/_stream_readable.js',["isarray/index.js","events/events.js","core-util-is/lib/util.js","inherits/inherits_browser.js","util/util.js","readable-stream/lib/_stream_duplex.js","string_decoder/index.js","readable-stream/lib/_stream_duplex.js","string_decoder/index.js"],function(global, require, module, exports) {  module.




















exports = Readable;


var isArray=require('isarray/index.js');




var Buffer=require('buffer').Buffer;


Readable.ReadableState = ReadableState;

var EE=require('events/events.js').EventEmitter;


if(!EE.listenerCount)EE.listenerCount = function(emitter,type){
return emitter.listeners(type).length;};



var Stream=require('stream');


var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


var StringDecoder;



var debug=require('util/util.js');
if(debug && debug.debuglog){
debug = debug.debuglog('stream');}else 
{
debug = function(){};}




util.inherits(Readable,Stream);

function ReadableState(options,stream){
var Duplex=require('readable-stream/lib/_stream_duplex.js');

options = options || {};



var hwm=options.highWaterMark;
var defaultHwm=options.objectMode?16:16 * 1024;
this.highWaterMark = hwm || hwm === 0?hwm:defaultHwm;


this.highWaterMark = ~ ~this.highWaterMark;

this.buffer = [];
this.length = 0;
this.pipes = null;
this.pipesCount = 0;
this.flowing = null;
this.ended = false;
this.endEmitted = false;
this.reading = false;





this.sync = true;



this.needReadable = false;
this.emittedReadable = false;
this.readableListening = false;




this.objectMode = !!options.objectMode;

if(stream instanceof Duplex)
this.objectMode = this.objectMode || !!options.readableObjectMode;




this.defaultEncoding = options.defaultEncoding || 'utf8';



this.ranOut = false;


this.awaitDrain = 0;


this.readingMore = false;

this.decoder = null;
this.encoding = null;
if(options.encoding){
if(!StringDecoder)
StringDecoder = require('string_decoder/index.js').StringDecoder;
this.decoder = new StringDecoder(options.encoding);
this.encoding = options.encoding;}}



function Readable(options){
var Duplex=require('readable-stream/lib/_stream_duplex.js');

if(!(this instanceof Readable))
return new Readable(options);

this._readableState = new ReadableState(options,this);


this.readable = true;

Stream.call(this);}






Readable.prototype.push = function(chunk,encoding){
var state=this._readableState;

if(util.isString(chunk) && !state.objectMode){
encoding = encoding || state.defaultEncoding;
if(encoding !== state.encoding){
chunk = new Buffer(chunk,encoding);
encoding = '';}}



return readableAddChunk(this,state,chunk,encoding,false);};



Readable.prototype.unshift = function(chunk){
var state=this._readableState;
return readableAddChunk(this,state,chunk,'',true);};


function readableAddChunk(stream,state,chunk,encoding,addToFront){
var er=chunkInvalid(state,chunk);
if(er){
stream.emit('error',er);}else 
if(util.isNullOrUndefined(chunk)){
state.reading = false;
if(!state.ended)
onEofChunk(stream,state);}else 
if(state.objectMode || chunk && chunk.length > 0){
if(state.ended && !addToFront){
var e=new Error('stream.push() after EOF');
stream.emit('error',e);}else 
if(state.endEmitted && addToFront){
var e=new Error('stream.unshift() after end event');
stream.emit('error',e);}else 
{
if(state.decoder && !addToFront && !encoding)
chunk = state.decoder.write(chunk);

if(!addToFront)
state.reading = false;


if(state.flowing && state.length === 0 && !state.sync){
stream.emit('data',chunk);
stream.read(0);}else 
{

state.length += state.objectMode?1:chunk.length;
if(addToFront)
state.buffer.unshift(chunk);else 

state.buffer.push(chunk);

if(state.needReadable)
emitReadable(stream);}


maybeReadMore(stream,state);}}else 

if(!addToFront){
state.reading = false;}


return needMoreData(state);}











function needMoreData(state){
return !state.ended && (
state.needReadable || 
state.length < state.highWaterMark || 
state.length === 0);}



Readable.prototype.setEncoding = function(enc){
if(!StringDecoder)
StringDecoder = require('string_decoder/index.js').StringDecoder;
this._readableState.decoder = new StringDecoder(enc);
this._readableState.encoding = enc;
return this;};



var MAX_HWM=0x800000;
function roundUpToNextPowerOf2(n){
if(n >= MAX_HWM){
n = MAX_HWM;}else 
{

n--;
for(var p=1;p < 32;p <<= 1) n |= n >> p;
n++;}

return n;}


function howMuchToRead(n,state){
if(state.length === 0 && state.ended)
return 0;

if(state.objectMode)
return n === 0?0:1;

if(isNaN(n) || util.isNull(n)){

if(state.flowing && state.buffer.length)
return state.buffer[0].length;else 

return state.length;}


if(n <= 0)
return 0;





if(n > state.highWaterMark)
state.highWaterMark = roundUpToNextPowerOf2(n);


if(n > state.length){
if(!state.ended){
state.needReadable = true;
return 0;}else 

return state.length;}


return n;}



Readable.prototype.read = function(n){
debug('read',n);
var state=this._readableState;
var nOrig=n;

if(!util.isNumber(n) || n > 0)
state.emittedReadable = false;




if(n === 0 && 
state.needReadable && (
state.length >= state.highWaterMark || state.ended)){
debug('read: emitReadable',state.length,state.ended);
if(state.length === 0 && state.ended)
endReadable(this);else 

emitReadable(this);
return null;}


n = howMuchToRead(n,state);


if(n === 0 && state.ended){
if(state.length === 0)
endReadable(this);
return null;}

























var doRead=state.needReadable;
debug('need readable',doRead);


if(state.length === 0 || state.length - n < state.highWaterMark){
doRead = true;
debug('length less than watermark',doRead);}




if(state.ended || state.reading){
doRead = false;
debug('reading or ended',doRead);}


if(doRead){
debug('do read');
state.reading = true;
state.sync = true;

if(state.length === 0)
state.needReadable = true;

this._read(state.highWaterMark);
state.sync = false;}




if(doRead && !state.reading)
n = howMuchToRead(nOrig,state);

var ret;
if(n > 0)
ret = fromList(n,state);else 

ret = null;

if(util.isNull(ret)){
state.needReadable = true;
n = 0;}


state.length -= n;



if(state.length === 0 && !state.ended)
state.needReadable = true;


if(nOrig !== n && state.ended && state.length === 0)
endReadable(this);

if(!util.isNull(ret))
this.emit('data',ret);

return ret;};


function chunkInvalid(state,chunk){
var er=null;
if(!util.isBuffer(chunk) && 
!util.isString(chunk) && 
!util.isNullOrUndefined(chunk) && 
!state.objectMode){
er = new TypeError('Invalid non-string/buffer chunk');}

return er;}



function onEofChunk(stream,state){
if(state.decoder && !state.ended){
var chunk=state.decoder.end();
if(chunk && chunk.length){
state.buffer.push(chunk);
state.length += state.objectMode?1:chunk.length;}}


state.ended = true;


emitReadable(stream);}





function emitReadable(stream){
var state=stream._readableState;
state.needReadable = false;
if(!state.emittedReadable){
debug('emitReadable',state.flowing);
state.emittedReadable = true;
if(state.sync)
process.nextTick(function(){
emitReadable_(stream);});else 


emitReadable_(stream);}}



function emitReadable_(stream){
debug('emit readable');
stream.emit('readable');
flow(stream);}









function maybeReadMore(stream,state){
if(!state.readingMore){
state.readingMore = true;
process.nextTick(function(){
maybeReadMore_(stream,state);});}}




function maybeReadMore_(stream,state){
var len=state.length;
while(!state.reading && !state.flowing && !state.ended && 
state.length < state.highWaterMark) {
debug('maybeReadMore read 0');
stream.read(0);
if(len === state.length)

break;else 

len = state.length;}

state.readingMore = false;}






Readable.prototype._read = function(n){
this.emit('error',new Error('not implemented'));};


Readable.prototype.pipe = function(dest,pipeOpts){
var src=this;
var state=this._readableState;

switch(state.pipesCount){
case 0:
state.pipes = dest;
break;
case 1:
state.pipes = [state.pipes,dest];
break;
default:
state.pipes.push(dest);
break;}

state.pipesCount += 1;
debug('pipe count=%d opts=%j',state.pipesCount,pipeOpts);

var doEnd=(!pipeOpts || pipeOpts.end !== false) && 
dest !== process.stdout && 
dest !== process.stderr;

var endFn=doEnd?onend:cleanup;
if(state.endEmitted)
process.nextTick(endFn);else 

src.once('end',endFn);

dest.on('unpipe',onunpipe);
function onunpipe(readable){
debug('onunpipe');
if(readable === src){
cleanup();}}



function onend(){
debug('onend');
dest.end();}






var ondrain=pipeOnDrain(src);
dest.on('drain',ondrain);

function cleanup(){
debug('cleanup');

dest.removeListener('close',onclose);
dest.removeListener('finish',onfinish);
dest.removeListener('drain',ondrain);
dest.removeListener('error',onerror);
dest.removeListener('unpipe',onunpipe);
src.removeListener('end',onend);
src.removeListener('end',cleanup);
src.removeListener('data',ondata);






if(state.awaitDrain && (
!dest._writableState || dest._writableState.needDrain))
ondrain();}


src.on('data',ondata);
function ondata(chunk){
debug('ondata');
var ret=dest.write(chunk);
if(false === ret){
debug('false write response, pause',
src._readableState.awaitDrain);
src._readableState.awaitDrain++;
src.pause();}}





function onerror(er){
debug('onerror',er);
unpipe();
dest.removeListener('error',onerror);
if(EE.listenerCount(dest,'error') === 0)
dest.emit('error',er);}



if(!dest._events || !dest._events.error)
dest.on('error',onerror);else 
if(isArray(dest._events.error))
dest._events.error.unshift(onerror);else 

dest._events.error = [onerror,dest._events.error];




function onclose(){
dest.removeListener('finish',onfinish);
unpipe();}

dest.once('close',onclose);
function onfinish(){
debug('onfinish');
dest.removeListener('close',onclose);
unpipe();}

dest.once('finish',onfinish);

function unpipe(){
debug('unpipe');
src.unpipe(dest);}



dest.emit('pipe',src);


if(!state.flowing){
debug('pipe resume');
src.resume();}


return dest;};


function pipeOnDrain(src){
return function(){
var state=src._readableState;
debug('pipeOnDrain',state.awaitDrain);
if(state.awaitDrain)
state.awaitDrain--;
if(state.awaitDrain === 0 && EE.listenerCount(src,'data')){
state.flowing = true;
flow(src);}};}





Readable.prototype.unpipe = function(dest){
var state=this._readableState;


if(state.pipesCount === 0)
return this;


if(state.pipesCount === 1){

if(dest && dest !== state.pipes)
return this;

if(!dest)
dest = state.pipes;


state.pipes = null;
state.pipesCount = 0;
state.flowing = false;
if(dest)
dest.emit('unpipe',this);
return this;}




if(!dest){

var dests=state.pipes;
var len=state.pipesCount;
state.pipes = null;
state.pipesCount = 0;
state.flowing = false;

for(var i=0;i < len;i++) 
dests[i].emit('unpipe',this);
return this;}



var i=indexOf(state.pipes,dest);
if(i === -1)
return this;

state.pipes.splice(i,1);
state.pipesCount -= 1;
if(state.pipesCount === 1)
state.pipes = state.pipes[0];

dest.emit('unpipe',this);

return this;};




Readable.prototype.on = function(ev,fn){
var res=Stream.prototype.on.call(this,ev,fn);



if(ev === 'data' && false !== this._readableState.flowing){
this.resume();}


if(ev === 'readable' && this.readable){
var state=this._readableState;
if(!state.readableListening){
state.readableListening = true;
state.emittedReadable = false;
state.needReadable = true;
if(!state.reading){
var self=this;
process.nextTick(function(){
debug('readable nexttick read 0');
self.read(0);});}else 

if(state.length){
emitReadable(this,state);}}}




return res;};

Readable.prototype.addListener = Readable.prototype.on;



Readable.prototype.resume = function(){
var state=this._readableState;
if(!state.flowing){
debug('resume');
state.flowing = true;
if(!state.reading){
debug('resume read 0');
this.read(0);}

resume(this,state);}

return this;};


function resume(stream,state){
if(!state.resumeScheduled){
state.resumeScheduled = true;
process.nextTick(function(){
resume_(stream,state);});}}




function resume_(stream,state){
state.resumeScheduled = false;
stream.emit('resume');
flow(stream);
if(state.flowing && !state.reading)
stream.read(0);}


Readable.prototype.pause = function(){
debug('call pause flowing=%j',this._readableState.flowing);
if(false !== this._readableState.flowing){
debug('pause');
this._readableState.flowing = false;
this.emit('pause');}

return this;};


function flow(stream){
var state=stream._readableState;
debug('flow',state.flowing);
if(state.flowing){
do {
var chunk=stream.read();}while(
null !== chunk && state.flowing);}}






Readable.prototype.wrap = function(stream){
var state=this._readableState;
var paused=false;

var self=this;
stream.on('end',function(){
debug('wrapped end');
if(state.decoder && !state.ended){
var chunk=state.decoder.end();
if(chunk && chunk.length)
self.push(chunk);}


self.push(null);});


stream.on('data',function(chunk){
debug('wrapped data');
if(state.decoder)
chunk = state.decoder.write(chunk);
if(!chunk || !state.objectMode && !chunk.length)
return;

var ret=self.push(chunk);
if(!ret){
paused = true;
stream.pause();}});





for(var i in stream) {
if(util.isFunction(stream[i]) && util.isUndefined(this[i])){
this[i] = (function(method){return function(){
return stream[method].apply(stream,arguments);};})(
i);}}




var events=['error','close','destroy','pause','resume'];
forEach(events,function(ev){
stream.on(ev,self.emit.bind(self,ev));});




self._read = function(n){
debug('wrapped _read',n);
if(paused){
paused = false;
stream.resume();}};



return self;};





Readable._fromList = fromList;



function fromList(n,state){
var list=state.buffer;
var length=state.length;
var stringMode=!!state.decoder;
var objectMode=!!state.objectMode;
var ret;


if(list.length === 0)
return null;

if(length === 0)
ret = null;else 
if(objectMode)
ret = list.shift();else 
if(!n || n >= length){

if(stringMode)
ret = list.join('');else 

ret = Buffer.concat(list,length);
list.length = 0;}else 
{

if(n < list[0].length){


var buf=list[0];
ret = buf.slice(0,n);
list[0] = buf.slice(n);}else 
if(n === list[0].length){

ret = list.shift();}else 
{


if(stringMode)
ret = '';else 

ret = new Buffer(n);

var c=0;
for(var i=0,l=list.length;i < l && c < n;i++) {
var buf=list[0];
var cpy=Math.min(n - c,buf.length);

if(stringMode)
ret += buf.slice(0,cpy);else 

buf.copy(ret,c,0,cpy);

if(cpy < buf.length)
list[0] = buf.slice(cpy);else 

list.shift();

c += cpy;}}}




return ret;}


function endReadable(stream){
var state=stream._readableState;



if(state.length > 0)
throw new Error('endReadable called on non-empty stream');

if(!state.endEmitted){
state.ended = true;
process.nextTick(function(){

if(!state.endEmitted && state.length === 0){
state.endEmitted = true;
stream.readable = false;
stream.emit('end');}});}}





function forEach(xs,f){
for(var i=0,l=xs.length;i < l;i++) {
f(xs[i],i);}}



function indexOf(xs,x){
for(var i=0,l=xs.length;i < l;i++) {
if(xs[i] === x)return i;}

return -1;}
});
__d('isarray/index.js',[],function(global, require, module, exports) {  module.exports = Array.isArray || function(arr){
return Object.prototype.toString.call(arr) == '[object Array]';};
});
__d('core-util-is/lib/util.js',[],function(global, require, module, exports) {  function 






















isArray(ar){
return Array.isArray(ar);}

exports.isArray = isArray;

function isBoolean(arg){
return typeof arg === 'boolean';}

exports.isBoolean = isBoolean;

function isNull(arg){
return arg === null;}

exports.isNull = isNull;

function isNullOrUndefined(arg){
return arg == null;}

exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg){
return typeof arg === 'number';}

exports.isNumber = isNumber;

function isString(arg){
return typeof arg === 'string';}

exports.isString = isString;

function isSymbol(arg){
return typeof arg === 'symbol';}

exports.isSymbol = isSymbol;

function isUndefined(arg){
return arg === void 0;}

exports.isUndefined = isUndefined;

function isRegExp(re){
return isObject(re) && objectToString(re) === '[object RegExp]';}

exports.isRegExp = isRegExp;

function isObject(arg){
return typeof arg === 'object' && arg !== null;}

exports.isObject = isObject;

function isDate(d){
return isObject(d) && objectToString(d) === '[object Date]';}

exports.isDate = isDate;

function isError(e){
return isObject(e) && (
objectToString(e) === '[object Error]' || e instanceof Error);}

exports.isError = isError;

function isFunction(arg){
return typeof arg === 'function';}

exports.isFunction = isFunction;

function isPrimitive(arg){
return arg === null || 
typeof arg === 'boolean' || 
typeof arg === 'number' || 
typeof arg === 'string' || 
typeof arg === 'symbol' || 
typeof arg === 'undefined';}

exports.isPrimitive = isPrimitive;

function isBuffer(arg){
return Buffer.isBuffer(arg);}

exports.isBuffer = isBuffer;

function objectToString(o){
return Object.prototype.toString.call(o);}
});
__d('inherits/inherits_browser.js',[],function(global, require, module, exports) {  if(typeof Object.create === 'function'){

module.exports = function inherits(ctor,superCtor){
ctor.super_ = superCtor;
ctor.prototype = Object.create(superCtor.prototype,{
constructor:{
value:ctor,
enumerable:false,
writable:true,
configurable:true}});};}else 



{

module.exports = function inherits(ctor,superCtor){
ctor.super_ = superCtor;
var TempCtor=function(){};
TempCtor.prototype = superCtor.prototype;
ctor.prototype = new TempCtor();
ctor.prototype.constructor = ctor;};}
});
__d('readable-stream/lib/_stream_duplex.js',["core-util-is/lib/util.js","inherits/inherits_browser.js","readable-stream/lib/_stream_readable.js","readable-stream/lib/_stream_writable.js"],function(global, require, module, exports) {  module.

























exports = Duplex;


var objectKeys=Object.keys || function(obj){
var keys=[];
for(var key in obj) keys.push(key);
return keys;};





var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


var Readable=require('readable-stream/lib/_stream_readable.js');
var Writable=require('readable-stream/lib/_stream_writable.js');

util.inherits(Duplex,Readable);

forEach(objectKeys(Writable.prototype),function(method){
if(!Duplex.prototype[method])
Duplex.prototype[method] = Writable.prototype[method];});


function Duplex(options){
if(!(this instanceof Duplex))
return new Duplex(options);

Readable.call(this,options);
Writable.call(this,options);

if(options && options.readable === false)
this.readable = false;

if(options && options.writable === false)
this.writable = false;

this.allowHalfOpen = true;
if(options && options.allowHalfOpen === false)
this.allowHalfOpen = false;

this.once('end',onend);}



function onend(){


if(this.allowHalfOpen || this._writableState.ended)
return;



process.nextTick(this.end.bind(this));}


function forEach(xs,f){
for(var i=0,l=xs.length;i < l;i++) {
f(xs[i],i);}}
});
__d('readable-stream/lib/_stream_writable.js',["core-util-is/lib/util.js","inherits/inherits_browser.js","readable-stream/lib/_stream_duplex.js","readable-stream/lib/_stream_duplex.js"],function(global, require, module, exports) {  module.
























exports = Writable;


var Buffer=require('buffer').Buffer;


Writable.WritableState = WritableState;



var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


var Stream=require('stream');

util.inherits(Writable,Stream);

function WriteReq(chunk,encoding,cb){
this.chunk = chunk;
this.encoding = encoding;
this.callback = cb;}


function WritableState(options,stream){
var Duplex=require('readable-stream/lib/_stream_duplex.js');

options = options || {};




var hwm=options.highWaterMark;
var defaultHwm=options.objectMode?16:16 * 1024;
this.highWaterMark = hwm || hwm === 0?hwm:defaultHwm;



this.objectMode = !!options.objectMode;

if(stream instanceof Duplex)
this.objectMode = this.objectMode || !!options.writableObjectMode;


this.highWaterMark = ~ ~this.highWaterMark;

this.needDrain = false;

this.ending = false;

this.ended = false;

this.finished = false;




var noDecode=options.decodeStrings === false;
this.decodeStrings = !noDecode;




this.defaultEncoding = options.defaultEncoding || 'utf8';




this.length = 0;


this.writing = false;


this.corked = 0;





this.sync = true;




this.bufferProcessing = false;


this.onwrite = function(er){
onwrite(stream,er);};



this.writecb = null;


this.writelen = 0;

this.buffer = [];



this.pendingcb = 0;



this.prefinished = false;


this.errorEmitted = false;}


function Writable(options){
var Duplex=require('readable-stream/lib/_stream_duplex.js');



if(!(this instanceof Writable) && !(this instanceof Duplex))
return new Writable(options);

this._writableState = new WritableState(options,this);


this.writable = true;

Stream.call(this);}



Writable.prototype.pipe = function(){
this.emit('error',new Error('Cannot pipe. Not readable.'));};



function writeAfterEnd(stream,state,cb){
var er=new Error('write after end');

stream.emit('error',er);
process.nextTick(function(){
cb(er);});}








function validChunk(stream,state,chunk,cb){
var valid=true;
if(!util.isBuffer(chunk) && 
!util.isString(chunk) && 
!util.isNullOrUndefined(chunk) && 
!state.objectMode){
var er=new TypeError('Invalid non-string/buffer chunk');
stream.emit('error',er);
process.nextTick(function(){
cb(er);});

valid = false;}

return valid;}


Writable.prototype.write = function(chunk,encoding,cb){
var state=this._writableState;
var ret=false;

if(util.isFunction(encoding)){
cb = encoding;
encoding = null;}


if(util.isBuffer(chunk))
encoding = 'buffer';else 
if(!encoding)
encoding = state.defaultEncoding;

if(!util.isFunction(cb))
cb = function(){};

if(state.ended)
writeAfterEnd(this,state,cb);else 
if(validChunk(this,state,chunk,cb)){
state.pendingcb++;
ret = writeOrBuffer(this,state,chunk,encoding,cb);}


return ret;};


Writable.prototype.cork = function(){
var state=this._writableState;

state.corked++;};


Writable.prototype.uncork = function(){
var state=this._writableState;

if(state.corked){
state.corked--;

if(!state.writing && 
!state.corked && 
!state.finished && 
!state.bufferProcessing && 
state.buffer.length)
clearBuffer(this,state);}};



function decodeChunk(state,chunk,encoding){
if(!state.objectMode && 
state.decodeStrings !== false && 
util.isString(chunk)){
chunk = new Buffer(chunk,encoding);}

return chunk;}





function writeOrBuffer(stream,state,chunk,encoding,cb){
chunk = decodeChunk(state,chunk,encoding);
if(util.isBuffer(chunk))
encoding = 'buffer';
var len=state.objectMode?1:chunk.length;

state.length += len;

var ret=state.length < state.highWaterMark;

if(!ret)
state.needDrain = true;

if(state.writing || state.corked)
state.buffer.push(new WriteReq(chunk,encoding,cb));else 

doWrite(stream,state,false,len,chunk,encoding,cb);

return ret;}


function doWrite(stream,state,writev,len,chunk,encoding,cb){
state.writelen = len;
state.writecb = cb;
state.writing = true;
state.sync = true;
if(writev)
stream._writev(chunk,state.onwrite);else 

stream._write(chunk,encoding,state.onwrite);
state.sync = false;}


function onwriteError(stream,state,sync,er,cb){
if(sync)
process.nextTick(function(){
state.pendingcb--;
cb(er);});else 

{
state.pendingcb--;
cb(er);}


stream._writableState.errorEmitted = true;
stream.emit('error',er);}


function onwriteStateUpdate(state){
state.writing = false;
state.writecb = null;
state.length -= state.writelen;
state.writelen = 0;}


function onwrite(stream,er){
var state=stream._writableState;
var sync=state.sync;
var cb=state.writecb;

onwriteStateUpdate(state);

if(er)
onwriteError(stream,state,sync,er,cb);else 
{

var finished=needFinish(stream,state);

if(!finished && 
!state.corked && 
!state.bufferProcessing && 
state.buffer.length){
clearBuffer(stream,state);}


if(sync){
process.nextTick(function(){
afterWrite(stream,state,finished,cb);});}else 

{
afterWrite(stream,state,finished,cb);}}}




function afterWrite(stream,state,finished,cb){
if(!finished)
onwriteDrain(stream,state);
state.pendingcb--;
cb();
finishMaybe(stream,state);}





function onwriteDrain(stream,state){
if(state.length === 0 && state.needDrain){
state.needDrain = false;
stream.emit('drain');}}





function clearBuffer(stream,state){
state.bufferProcessing = true;

if(stream._writev && state.buffer.length > 1){

var cbs=[];
for(var c=0;c < state.buffer.length;c++) 
cbs.push(state.buffer[c].callback);



state.pendingcb++;
doWrite(stream,state,true,state.length,state.buffer,'',function(err){
for(var i=0;i < cbs.length;i++) {
state.pendingcb--;
cbs[i](err);}});




state.buffer = [];}else 
{

for(var c=0;c < state.buffer.length;c++) {
var entry=state.buffer[c];
var chunk=entry.chunk;
var encoding=entry.encoding;
var cb=entry.callback;
var len=state.objectMode?1:chunk.length;

doWrite(stream,state,false,len,chunk,encoding,cb);





if(state.writing){
c++;
break;}}



if(c < state.buffer.length)
state.buffer = state.buffer.slice(c);else 

state.buffer.length = 0;}


state.bufferProcessing = false;}


Writable.prototype._write = function(chunk,encoding,cb){
cb(new Error('not implemented'));};



Writable.prototype._writev = null;

Writable.prototype.end = function(chunk,encoding,cb){
var state=this._writableState;

if(util.isFunction(chunk)){
cb = chunk;
chunk = null;
encoding = null;}else 
if(util.isFunction(encoding)){
cb = encoding;
encoding = null;}


if(!util.isNullOrUndefined(chunk))
this.write(chunk,encoding);


if(state.corked){
state.corked = 1;
this.uncork();}



if(!state.ending && !state.finished)
endWritable(this,state,cb);};



function needFinish(stream,state){
return state.ending && 
state.length === 0 && 
!state.finished && 
!state.writing;}


function prefinish(stream,state){
if(!state.prefinished){
state.prefinished = true;
stream.emit('prefinish');}}



function finishMaybe(stream,state){
var need=needFinish(stream,state);
if(need){
if(state.pendingcb === 0){
prefinish(stream,state);
state.finished = true;
stream.emit('finish');}else 

prefinish(stream,state);}

return need;}


function endWritable(stream,state,cb){
state.ending = true;
finishMaybe(stream,state);
if(cb){
if(state.finished)
process.nextTick(cb);else 

stream.once('finish',cb);}

state.ended = true;}
});
__d('string_decoder/index.js',[],function(global, require, module, exports) {  var 




















Buffer=require('buffer').Buffer;

var isBufferEncoding=Buffer.isEncoding || 
function(encoding){
switch(encoding && encoding.toLowerCase()){
case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':return true;
default:return false;}};




function assertEncoding(encoding){
if(encoding && !isBufferEncoding(encoding)){
throw new Error('Unknown encoding: ' + encoding);}}











var StringDecoder=exports.StringDecoder = function(encoding){
this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/,'');
assertEncoding(encoding);
switch(this.encoding){
case 'utf8':

this.surrogateSize = 3;
break;
case 'ucs2':
case 'utf16le':

this.surrogateSize = 2;
this.detectIncompleteChar = utf16DetectIncompleteChar;
break;
case 'base64':

this.surrogateSize = 3;
this.detectIncompleteChar = base64DetectIncompleteChar;
break;
default:
this.write = passThroughWrite;
return;}




this.charBuffer = new Buffer(6);

this.charReceived = 0;

this.charLength = 0;};












StringDecoder.prototype.write = function(buffer){
var charStr='';

while(this.charLength) {

var available=buffer.length >= this.charLength - this.charReceived?
this.charLength - this.charReceived:
buffer.length;


buffer.copy(this.charBuffer,this.charReceived,0,available);
this.charReceived += available;

if(this.charReceived < this.charLength){

return '';}



buffer = buffer.slice(available,buffer.length);


charStr = this.charBuffer.slice(0,this.charLength).toString(this.encoding);


var charCode=charStr.charCodeAt(charStr.length - 1);
if(charCode >= 0xD800 && charCode <= 0xDBFF){
this.charLength += this.surrogateSize;
charStr = '';
continue;}

this.charReceived = this.charLength = 0;


if(buffer.length === 0){
return charStr;}

break;}



this.detectIncompleteChar(buffer);

var end=buffer.length;
if(this.charLength){

buffer.copy(this.charBuffer,0,buffer.length - this.charReceived,end);
end -= this.charReceived;}


charStr += buffer.toString(this.encoding,0,end);

var end=charStr.length - 1;
var charCode=charStr.charCodeAt(end);

if(charCode >= 0xD800 && charCode <= 0xDBFF){
var size=this.surrogateSize;
this.charLength += size;
this.charReceived += size;
this.charBuffer.copy(this.charBuffer,size,0,size);
buffer.copy(this.charBuffer,0,0,size);
return charStr.substring(0,end);}



return charStr;};






StringDecoder.prototype.detectIncompleteChar = function(buffer){

var i=buffer.length >= 3?3:buffer.length;



for(;i > 0;i--) {
var c=buffer[buffer.length - i];




if(i == 1 && c >> 5 == 0x06){
this.charLength = 2;
break;}



if(i <= 2 && c >> 4 == 0x0E){
this.charLength = 3;
break;}



if(i <= 3 && c >> 3 == 0x1E){
this.charLength = 4;
break;}}


this.charReceived = i;};


StringDecoder.prototype.end = function(buffer){
var res='';
if(buffer && buffer.length)
res = this.write(buffer);

if(this.charReceived){
var cr=this.charReceived;
var buf=this.charBuffer;
var enc=this.encoding;
res += buf.slice(0,cr).toString(enc);}


return res;};


function passThroughWrite(buffer){
return buffer.toString(this.encoding);}


function utf16DetectIncompleteChar(buffer){
this.charReceived = buffer.length % 2;
this.charLength = this.charReceived?2:0;}


function base64DetectIncompleteChar(buffer){
this.charReceived = buffer.length % 3;
this.charLength = this.charReceived?3:0;}
});
__d('readable-stream/lib/_stream_transform.js',["readable-stream/lib/_stream_duplex.js","core-util-is/lib/util.js","inherits/inherits_browser.js"],function(global, require, module, exports) {  module.































































exports = Transform;

var Duplex=require('readable-stream/lib/_stream_duplex.js');


var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


util.inherits(Transform,Duplex);


function TransformState(options,stream){
this.afterTransform = function(er,data){
return afterTransform(stream,er,data);};


this.needTransform = false;
this.transforming = false;
this.writecb = null;
this.writechunk = null;}


function afterTransform(stream,er,data){
var ts=stream._transformState;
ts.transforming = false;

var cb=ts.writecb;

if(!cb)
return stream.emit('error',new Error('no writecb in Transform class'));

ts.writechunk = null;
ts.writecb = null;

if(!util.isNullOrUndefined(data))
stream.push(data);

if(cb)
cb(er);

var rs=stream._readableState;
rs.reading = false;
if(rs.needReadable || rs.length < rs.highWaterMark){
stream._read(rs.highWaterMark);}}




function Transform(options){
if(!(this instanceof Transform))
return new Transform(options);

Duplex.call(this,options);

this._transformState = new TransformState(options,this);


var stream=this;


this._readableState.needReadable = true;




this._readableState.sync = false;

this.once('prefinish',function(){
if(util.isFunction(this._flush))
this._flush(function(er){
done(stream,er);});else 


done(stream);});}



Transform.prototype.push = function(chunk,encoding){
this._transformState.needTransform = false;
return Duplex.prototype.push.call(this,chunk,encoding);};












Transform.prototype._transform = function(chunk,encoding,cb){
throw new Error('not implemented');};


Transform.prototype._write = function(chunk,encoding,cb){
var ts=this._transformState;
ts.writecb = cb;
ts.writechunk = chunk;
ts.writeencoding = encoding;
if(!ts.transforming){
var rs=this._readableState;
if(ts.needTransform || 
rs.needReadable || 
rs.length < rs.highWaterMark)
this._read(rs.highWaterMark);}};






Transform.prototype._read = function(n){
var ts=this._transformState;

if(!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming){
ts.transforming = true;
this._transform(ts.writechunk,ts.writeencoding,ts.afterTransform);}else 
{


ts.needTransform = true;}};




function done(stream,er){
if(er)
return stream.emit('error',er);



var ws=stream._writableState;
var ts=stream._transformState;

if(ws.length)
throw new Error('calling transform done when ws.length != 0');

if(ts.transforming)
throw new Error('calling transform done when still transforming');

return stream.push(null);}
});
__d('readable-stream/lib/_stream_passthrough.js',["readable-stream/lib/_stream_transform.js","core-util-is/lib/util.js","inherits/inherits_browser.js"],function(global, require, module, exports) {  module.
























exports = PassThrough;

var Transform=require('readable-stream/lib/_stream_transform.js');


var util=require('core-util-is/lib/util.js');
util.inherits = require('inherits/inherits_browser.js');


util.inherits(PassThrough,Transform);

function PassThrough(options){
if(!(this instanceof PassThrough))
return new PassThrough(options);

Transform.call(this,options);}


PassThrough.prototype._transform = function(chunk,encoding,cb){
cb(null,chunk);};
});
__d('htmlparser2/lib/ProxyHandler.js',["htmlparser2/lib/index.js"],function(global, require, module, exports) {  module.exports = ProxyHandler;

function ProxyHandler(cbs){
this._cbs = cbs || {};}


var EVENTS=require("htmlparser2/lib/index.js").EVENTS;
Object.keys(EVENTS).forEach(function(name){
if(EVENTS[name] === 0){
name = "on" + name;
ProxyHandler.prototype[name] = function(){
if(this._cbs[name])this._cbs[name]();};}else 

if(EVENTS[name] === 1){
name = "on" + name;
ProxyHandler.prototype[name] = function(a){
if(this._cbs[name])this._cbs[name](a);};}else 

if(EVENTS[name] === 2){
name = "on" + name;
ProxyHandler.prototype[name] = function(a,b){
if(this._cbs[name])this._cbs[name](a,b);};}else 

{
throw Error("wrong number of arguments");}});
});
__d('domutils/index.js',["domutils/lib/stringify.js","domutils/lib/traversal.js","domutils/lib/manipulation.js","domutils/lib/querying.js","domutils/lib/legacy.js","domutils/lib/helpers.js"],function(global, require, module, exports) {  var DomUtils=module.exports;

[
require("domutils/lib/stringify.js"),
require("domutils/lib/traversal.js"),
require("domutils/lib/manipulation.js"),
require("domutils/lib/querying.js"),
require("domutils/lib/legacy.js"),
require("domutils/lib/helpers.js")].
forEach(function(ext){
Object.keys(ext).forEach(function(key){
DomUtils[key] = ext[key].bind(DomUtils);});});
});
__d('domutils/lib/stringify.js',["domelementtype/index.js","dom-serializer/index.js"],function(global, require, module, exports) {  var ElementType=require("domelementtype/index.js"),
getOuterHTML=require("dom-serializer/index.js"),
isTag=ElementType.isTag;

module.exports = {
getInnerHTML:getInnerHTML,
getOuterHTML:getOuterHTML,
getText:getText};


function getInnerHTML(elem,opts){
return elem.children?elem.children.map(function(elem){
return getOuterHTML(elem,opts);}).
join(""):"";}


function getText(elem){
if(Array.isArray(elem))return elem.map(getText).join("");
if(isTag(elem) || elem.type === ElementType.CDATA)return getText(elem.children);
if(elem.type === ElementType.Text)return elem.data;
return "";}
});
__d('dom-serializer/index.js',["domelementtype/index.js","entities/index.js"],function(global, require, module, exports) {  var 


ElementType=require('domelementtype/index.js');
var entities=require('entities/index.js');




var booleanAttributes={
__proto__:null,
allowfullscreen:true,
async:true,
autofocus:true,
autoplay:true,
checked:true,
controls:true,
default:true,
defer:true,
disabled:true,
hidden:true,
ismap:true,
loop:true,
multiple:true,
muted:true,
open:true,
readonly:true,
required:true,
reversed:true,
scoped:true,
seamless:true,
selected:true,
typemustmatch:true};


var unencodedElements={
__proto__:null,
style:true,
script:true,
xmp:true,
iframe:true,
noembed:true,
noframes:true,
plaintext:true,
noscript:true};





function formatAttrs(attributes,opts){
if(!attributes)return;

var output='',
value;


for(var key in attributes) {
value = attributes[key];
if(output){
output += ' ';}


if(!value && booleanAttributes[key]){
output += key;}else 
{
output += key + '="' + (opts.decodeEntities?entities.encodeXML(value):value) + '"';}}



return output;}





var singleTag={
__proto__:null,
area:true,
base:true,
basefont:true,
br:true,
col:true,
command:true,
embed:true,
frame:true,
hr:true,
img:true,
input:true,
isindex:true,
keygen:true,
link:true,
meta:true,
param:true,
source:true,
track:true,
wbr:true};



var render=module.exports = function(dom,opts){
if(!Array.isArray(dom) && !dom.cheerio)dom = [dom];
opts = opts || {};

var output='';

for(var i=0;i < dom.length;i++) {
var elem=dom[i];

if(elem.type === 'root')
output += render(elem.children,opts);else 
if(ElementType.isTag(elem))
output += renderTag(elem,opts);else 
if(elem.type === ElementType.Directive)
output += renderDirective(elem);else 
if(elem.type === ElementType.Comment)
output += renderComment(elem);else 
if(elem.type === ElementType.CDATA)
output += renderCdata(elem);else 

output += renderText(elem,opts);}


return output;};


function renderTag(elem,opts){

if(elem.name === "svg")opts = {decodeEntities:opts.decodeEntities,xmlMode:true};

var tag='<' + elem.name,
attribs=formatAttrs(elem.attribs,opts);

if(attribs){
tag += ' ' + attribs;}


if(
opts.xmlMode && (
!elem.children || elem.children.length === 0))
{
tag += '/>';}else 
{
tag += '>';
if(elem.children){
tag += render(elem.children,opts);}


if(!singleTag[elem.name] || opts.xmlMode){
tag += '</' + elem.name + '>';}}



return tag;}


function renderDirective(elem){
return '<' + elem.data + '>';}


function renderText(elem,opts){
var data=elem.data || '';


if(opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)){
data = entities.encodeXML(data);}


return data;}


function renderCdata(elem){
return '<![CDATA[' + elem.children[0].data + ']]>';}


function renderComment(elem){
return '<!--' + elem.data + '-->';}
});
__d('domelementtype/index.js',[],function(global, require, module, exports) {  module.
exports = {
Text:"text",
Directive:"directive",
Comment:"comment",
Script:"script",
Style:"style",
Tag:"tag",
CDATA:"cdata",

isTag:function(elem){
return elem.type === "tag" || elem.type === "script" || elem.type === "style";}};
});
__d('entities/index.js',["entities/lib/encode.js","entities/lib/decode.js"],function(global, require, module, exports) {  var encode=require("entities/lib/encode.js"),
decode=require("entities/lib/decode.js");

exports.decode = function(data,level){
return (!level || level <= 0?decode.XML:decode.HTML)(data);};


exports.decodeStrict = function(data,level){
return (!level || level <= 0?decode.XML:decode.HTMLStrict)(data);};


exports.encode = function(data,level){
return (!level || level <= 0?encode.XML:encode.HTML)(data);};


exports.encodeXML = encode.XML;

exports.encodeHTML4 = 
exports.encodeHTML5 = 
exports.encodeHTML = encode.HTML;

exports.decodeXML = 
exports.decodeXMLStrict = decode.XML;

exports.decodeHTML4 = 
exports.decodeHTML5 = 
exports.decodeHTML = decode.HTML;

exports.decodeHTML4Strict = 
exports.decodeHTML5Strict = 
exports.decodeHTMLStrict = decode.HTMLStrict;

exports.escape = encode.escape;
});
__d('entities/lib/encode.js',["entities/maps/xml.json","entities/maps/entities.json"],function(global, require, module, exports) {  var inverseXML=getInverseObj(require("entities/maps/xml.json")),
xmlReplacer=getInverseReplacer(inverseXML);

exports.XML = getInverse(inverseXML,xmlReplacer);

var inverseHTML=getInverseObj(require("entities/maps/entities.json")),
htmlReplacer=getInverseReplacer(inverseHTML);

exports.HTML = getInverse(inverseHTML,htmlReplacer);

function getInverseObj(obj){
return Object.keys(obj).sort().reduce(function(inverse,name){
inverse[obj[name]] = "&" + name + ";";
return inverse;},
{});}


function getInverseReplacer(inverse){
var single=[],
multiple=[];

Object.keys(inverse).forEach(function(k){
if(k.length === 1){
single.push("\\" + k);}else 
{
multiple.push(k);}});




multiple.unshift("[" + single.join("") + "]");

return new RegExp(multiple.join("|"),"g");}


var re_nonASCII=/[^\0-\x7F]/g,
re_astralSymbols=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;

function singleCharReplacer(c){
return "&#x" + c.charCodeAt(0).toString(16).toUpperCase() + ";";}


function astralReplacer(c){

var high=c.charCodeAt(0);
var low=c.charCodeAt(1);
var codePoint=(high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;
return "&#x" + codePoint.toString(16).toUpperCase() + ";";}


function getInverse(inverse,re){
function func(name){
return inverse[name];}


return function(data){
return data.
replace(re,func).
replace(re_astralSymbols,astralReplacer).
replace(re_nonASCII,singleCharReplacer);};}



var re_xmlChars=getInverseReplacer(inverseXML);

function escapeXML(data){
return data.
replace(re_xmlChars,singleCharReplacer).
replace(re_astralSymbols,astralReplacer).
replace(re_nonASCII,singleCharReplacer);}


exports.escape = escapeXML;
});
__d('entities/maps/xml.json',[],function(global, require, module, exports) {  module.exports = {"amp":"&","apos":"'","gt":">","lt":"<","quot":"\""}
;
});
__d('entities/maps/entities.json',[],function(global, require, module, exports) {  module.exports = {"Aacute":"\u00C1","aacute":"\u00E1","Abreve":"\u0102","abreve":"\u0103","ac":"\u223E","acd":"\u223F","acE":"\u223E\u0333","Acirc":"\u00C2","acirc":"\u00E2","acute":"\u00B4","Acy":"\u0410","acy":"\u0430","AElig":"\u00C6","aelig":"\u00E6","af":"\u2061","Afr":"\uD835\uDD04","afr":"\uD835\uDD1E","Agrave":"\u00C0","agrave":"\u00E0","alefsym":"\u2135","aleph":"\u2135","Alpha":"\u0391","alpha":"\u03B1","Amacr":"\u0100","amacr":"\u0101","amalg":"\u2A3F","amp":"&","AMP":"&","andand":"\u2A55","And":"\u2A53","and":"\u2227","andd":"\u2A5C","andslope":"\u2A58","andv":"\u2A5A","ang":"\u2220","ange":"\u29A4","angle":"\u2220","angmsdaa":"\u29A8","angmsdab":"\u29A9","angmsdac":"\u29AA","angmsdad":"\u29AB","angmsdae":"\u29AC","angmsdaf":"\u29AD","angmsdag":"\u29AE","angmsdah":"\u29AF","angmsd":"\u2221","angrt":"\u221F","angrtvb":"\u22BE","angrtvbd":"\u299D","angsph":"\u2222","angst":"\u00C5","angzarr":"\u237C","Aogon":"\u0104","aogon":"\u0105","Aopf":"\uD835\uDD38","aopf":"\uD835\uDD52","apacir":"\u2A6F","ap":"\u2248","apE":"\u2A70","ape":"\u224A","apid":"\u224B","apos":"'","ApplyFunction":"\u2061","approx":"\u2248","approxeq":"\u224A","Aring":"\u00C5","aring":"\u00E5","Ascr":"\uD835\uDC9C","ascr":"\uD835\uDCB6","Assign":"\u2254","ast":"*","asymp":"\u2248","asympeq":"\u224D","Atilde":"\u00C3","atilde":"\u00E3","Auml":"\u00C4","auml":"\u00E4","awconint":"\u2233","awint":"\u2A11","backcong":"\u224C","backepsilon":"\u03F6","backprime":"\u2035","backsim":"\u223D","backsimeq":"\u22CD","Backslash":"\u2216","Barv":"\u2AE7","barvee":"\u22BD","barwed":"\u2305","Barwed":"\u2306","barwedge":"\u2305","bbrk":"\u23B5","bbrktbrk":"\u23B6","bcong":"\u224C","Bcy":"\u0411","bcy":"\u0431","bdquo":"\u201E","becaus":"\u2235","because":"\u2235","Because":"\u2235","bemptyv":"\u29B0","bepsi":"\u03F6","bernou":"\u212C","Bernoullis":"\u212C","Beta":"\u0392","beta":"\u03B2","beth":"\u2136","between":"\u226C","Bfr":"\uD835\uDD05","bfr":"\uD835\uDD1F","bigcap":"\u22C2","bigcirc":"\u25EF","bigcup":"\u22C3","bigodot":"\u2A00","bigoplus":"\u2A01","bigotimes":"\u2A02","bigsqcup":"\u2A06","bigstar":"\u2605","bigtriangledown":"\u25BD","bigtriangleup":"\u25B3","biguplus":"\u2A04","bigvee":"\u22C1","bigwedge":"\u22C0","bkarow":"\u290D","blacklozenge":"\u29EB","blacksquare":"\u25AA","blacktriangle":"\u25B4","blacktriangledown":"\u25BE","blacktriangleleft":"\u25C2","blacktriangleright":"\u25B8","blank":"\u2423","blk12":"\u2592","blk14":"\u2591","blk34":"\u2593","block":"\u2588","bne":"=\u20E5","bnequiv":"\u2261\u20E5","bNot":"\u2AED","bnot":"\u2310","Bopf":"\uD835\uDD39","bopf":"\uD835\uDD53","bot":"\u22A5","bottom":"\u22A5","bowtie":"\u22C8","boxbox":"\u29C9","boxdl":"\u2510","boxdL":"\u2555","boxDl":"\u2556","boxDL":"\u2557","boxdr":"\u250C","boxdR":"\u2552","boxDr":"\u2553","boxDR":"\u2554","boxh":"\u2500","boxH":"\u2550","boxhd":"\u252C","boxHd":"\u2564","boxhD":"\u2565","boxHD":"\u2566","boxhu":"\u2534","boxHu":"\u2567","boxhU":"\u2568","boxHU":"\u2569","boxminus":"\u229F","boxplus":"\u229E","boxtimes":"\u22A0","boxul":"\u2518","boxuL":"\u255B","boxUl":"\u255C","boxUL":"\u255D","boxur":"\u2514","boxuR":"\u2558","boxUr":"\u2559","boxUR":"\u255A","boxv":"\u2502","boxV":"\u2551","boxvh":"\u253C","boxvH":"\u256A","boxVh":"\u256B","boxVH":"\u256C","boxvl":"\u2524","boxvL":"\u2561","boxVl":"\u2562","boxVL":"\u2563","boxvr":"\u251C","boxvR":"\u255E","boxVr":"\u255F","boxVR":"\u2560","bprime":"\u2035","breve":"\u02D8","Breve":"\u02D8","brvbar":"\u00A6","bscr":"\uD835\uDCB7","Bscr":"\u212C","bsemi":"\u204F","bsim":"\u223D","bsime":"\u22CD","bsolb":"\u29C5","bsol":"\\","bsolhsub":"\u27C8","bull":"\u2022","bullet":"\u2022","bump":"\u224E","bumpE":"\u2AAE","bumpe":"\u224F","Bumpeq":"\u224E","bumpeq":"\u224F","Cacute":"\u0106","cacute":"\u0107","capand":"\u2A44","capbrcup":"\u2A49","capcap":"\u2A4B","cap":"\u2229","Cap":"\u22D2","capcup":"\u2A47","capdot":"\u2A40","CapitalDifferentialD":"\u2145","caps":"\u2229\uFE00","caret":"\u2041","caron":"\u02C7","Cayleys":"\u212D","ccaps":"\u2A4D","Ccaron":"\u010C","ccaron":"\u010D","Ccedil":"\u00C7","ccedil":"\u00E7","Ccirc":"\u0108","ccirc":"\u0109","Cconint":"\u2230","ccups":"\u2A4C","ccupssm":"\u2A50","Cdot":"\u010A","cdot":"\u010B","cedil":"\u00B8","Cedilla":"\u00B8","cemptyv":"\u29B2","cent":"\u00A2","centerdot":"\u00B7","CenterDot":"\u00B7","cfr":"\uD835\uDD20","Cfr":"\u212D","CHcy":"\u0427","chcy":"\u0447","check":"\u2713","checkmark":"\u2713","Chi":"\u03A7","chi":"\u03C7","circ":"\u02C6","circeq":"\u2257","circlearrowleft":"\u21BA","circlearrowright":"\u21BB","circledast":"\u229B","circledcirc":"\u229A","circleddash":"\u229D","CircleDot":"\u2299","circledR":"\u00AE","circledS":"\u24C8","CircleMinus":"\u2296","CirclePlus":"\u2295","CircleTimes":"\u2297","cir":"\u25CB","cirE":"\u29C3","cire":"\u2257","cirfnint":"\u2A10","cirmid":"\u2AEF","cirscir":"\u29C2","ClockwiseContourIntegral":"\u2232","CloseCurlyDoubleQuote":"\u201D","CloseCurlyQuote":"\u2019","clubs":"\u2663","clubsuit":"\u2663","colon":":","Colon":"\u2237","Colone":"\u2A74","colone":"\u2254","coloneq":"\u2254","comma":",","commat":"@","comp":"\u2201","compfn":"\u2218","complement":"\u2201","complexes":"\u2102","cong":"\u2245","congdot":"\u2A6D","Congruent":"\u2261","conint":"\u222E","Conint":"\u222F","ContourIntegral":"\u222E","copf":"\uD835\uDD54","Copf":"\u2102","coprod":"\u2210","Coproduct":"\u2210","copy":"\u00A9","COPY":"\u00A9","copysr":"\u2117","CounterClockwiseContourIntegral":"\u2233","crarr":"\u21B5","cross":"\u2717","Cross":"\u2A2F","Cscr":"\uD835\uDC9E","cscr":"\uD835\uDCB8","csub":"\u2ACF","csube":"\u2AD1","csup":"\u2AD0","csupe":"\u2AD2","ctdot":"\u22EF","cudarrl":"\u2938","cudarrr":"\u2935","cuepr":"\u22DE","cuesc":"\u22DF","cularr":"\u21B6","cularrp":"\u293D","cupbrcap":"\u2A48","cupcap":"\u2A46","CupCap":"\u224D","cup":"\u222A","Cup":"\u22D3","cupcup":"\u2A4A","cupdot":"\u228D","cupor":"\u2A45","cups":"\u222A\uFE00","curarr":"\u21B7","curarrm":"\u293C","curlyeqprec":"\u22DE","curlyeqsucc":"\u22DF","curlyvee":"\u22CE","curlywedge":"\u22CF","curren":"\u00A4","curvearrowleft":"\u21B6","curvearrowright":"\u21B7","cuvee":"\u22CE","cuwed":"\u22CF","cwconint":"\u2232","cwint":"\u2231","cylcty":"\u232D","dagger":"\u2020","Dagger":"\u2021","daleth":"\u2138","darr":"\u2193","Darr":"\u21A1","dArr":"\u21D3","dash":"\u2010","Dashv":"\u2AE4","dashv":"\u22A3","dbkarow":"\u290F","dblac":"\u02DD","Dcaron":"\u010E","dcaron":"\u010F","Dcy":"\u0414","dcy":"\u0434","ddagger":"\u2021","ddarr":"\u21CA","DD":"\u2145","dd":"\u2146","DDotrahd":"\u2911","ddotseq":"\u2A77","deg":"\u00B0","Del":"\u2207","Delta":"\u0394","delta":"\u03B4","demptyv":"\u29B1","dfisht":"\u297F","Dfr":"\uD835\uDD07","dfr":"\uD835\uDD21","dHar":"\u2965","dharl":"\u21C3","dharr":"\u21C2","DiacriticalAcute":"\u00B4","DiacriticalDot":"\u02D9","DiacriticalDoubleAcute":"\u02DD","DiacriticalGrave":"`","DiacriticalTilde":"\u02DC","diam":"\u22C4","diamond":"\u22C4","Diamond":"\u22C4","diamondsuit":"\u2666","diams":"\u2666","die":"\u00A8","DifferentialD":"\u2146","digamma":"\u03DD","disin":"\u22F2","div":"\u00F7","divide":"\u00F7","divideontimes":"\u22C7","divonx":"\u22C7","DJcy":"\u0402","djcy":"\u0452","dlcorn":"\u231E","dlcrop":"\u230D","dollar":"$","Dopf":"\uD835\uDD3B","dopf":"\uD835\uDD55","Dot":"\u00A8","dot":"\u02D9","DotDot":"\u20DC","doteq":"\u2250","doteqdot":"\u2251","DotEqual":"\u2250","dotminus":"\u2238","dotplus":"\u2214","dotsquare":"\u22A1","doublebarwedge":"\u2306","DoubleContourIntegral":"\u222F","DoubleDot":"\u00A8","DoubleDownArrow":"\u21D3","DoubleLeftArrow":"\u21D0","DoubleLeftRightArrow":"\u21D4","DoubleLeftTee":"\u2AE4","DoubleLongLeftArrow":"\u27F8","DoubleLongLeftRightArrow":"\u27FA","DoubleLongRightArrow":"\u27F9","DoubleRightArrow":"\u21D2","DoubleRightTee":"\u22A8","DoubleUpArrow":"\u21D1","DoubleUpDownArrow":"\u21D5","DoubleVerticalBar":"\u2225","DownArrowBar":"\u2913","downarrow":"\u2193","DownArrow":"\u2193","Downarrow":"\u21D3","DownArrowUpArrow":"\u21F5","DownBreve":"\u0311","downdownarrows":"\u21CA","downharpoonleft":"\u21C3","downharpoonright":"\u21C2","DownLeftRightVector":"\u2950","DownLeftTeeVector":"\u295E","DownLeftVectorBar":"\u2956","DownLeftVector":"\u21BD","DownRightTeeVector":"\u295F","DownRightVectorBar":"\u2957","DownRightVector":"\u21C1","DownTeeArrow":"\u21A7","DownTee":"\u22A4","drbkarow":"\u2910","drcorn":"\u231F","drcrop":"\u230C","Dscr":"\uD835\uDC9F","dscr":"\uD835\uDCB9","DScy":"\u0405","dscy":"\u0455","dsol":"\u29F6","Dstrok":"\u0110","dstrok":"\u0111","dtdot":"\u22F1","dtri":"\u25BF","dtrif":"\u25BE","duarr":"\u21F5","duhar":"\u296F","dwangle":"\u29A6","DZcy":"\u040F","dzcy":"\u045F","dzigrarr":"\u27FF","Eacute":"\u00C9","eacute":"\u00E9","easter":"\u2A6E","Ecaron":"\u011A","ecaron":"\u011B","Ecirc":"\u00CA","ecirc":"\u00EA","ecir":"\u2256","ecolon":"\u2255","Ecy":"\u042D","ecy":"\u044D","eDDot":"\u2A77","Edot":"\u0116","edot":"\u0117","eDot":"\u2251","ee":"\u2147","efDot":"\u2252","Efr":"\uD835\uDD08","efr":"\uD835\uDD22","eg":"\u2A9A","Egrave":"\u00C8","egrave":"\u00E8","egs":"\u2A96","egsdot":"\u2A98","el":"\u2A99","Element":"\u2208","elinters":"\u23E7","ell":"\u2113","els":"\u2A95","elsdot":"\u2A97","Emacr":"\u0112","emacr":"\u0113","empty":"\u2205","emptyset":"\u2205","EmptySmallSquare":"\u25FB","emptyv":"\u2205","EmptyVerySmallSquare":"\u25AB","emsp13":"\u2004","emsp14":"\u2005","emsp":"\u2003","ENG":"\u014A","eng":"\u014B","ensp":"\u2002","Eogon":"\u0118","eogon":"\u0119","Eopf":"\uD835\uDD3C","eopf":"\uD835\uDD56","epar":"\u22D5","eparsl":"\u29E3","eplus":"\u2A71","epsi":"\u03B5","Epsilon":"\u0395","epsilon":"\u03B5","epsiv":"\u03F5","eqcirc":"\u2256","eqcolon":"\u2255","eqsim":"\u2242","eqslantgtr":"\u2A96","eqslantless":"\u2A95","Equal":"\u2A75","equals":"=","EqualTilde":"\u2242","equest":"\u225F","Equilibrium":"\u21CC","equiv":"\u2261","equivDD":"\u2A78","eqvparsl":"\u29E5","erarr":"\u2971","erDot":"\u2253","escr":"\u212F","Escr":"\u2130","esdot":"\u2250","Esim":"\u2A73","esim":"\u2242","Eta":"\u0397","eta":"\u03B7","ETH":"\u00D0","eth":"\u00F0","Euml":"\u00CB","euml":"\u00EB","euro":"\u20AC","excl":"!","exist":"\u2203","Exists":"\u2203","expectation":"\u2130","exponentiale":"\u2147","ExponentialE":"\u2147","fallingdotseq":"\u2252","Fcy":"\u0424","fcy":"\u0444","female":"\u2640","ffilig":"\uFB03","fflig":"\uFB00","ffllig":"\uFB04","Ffr":"\uD835\uDD09","ffr":"\uD835\uDD23","filig":"\uFB01","FilledSmallSquare":"\u25FC","FilledVerySmallSquare":"\u25AA","fjlig":"fj","flat":"\u266D","fllig":"\uFB02","fltns":"\u25B1","fnof":"\u0192","Fopf":"\uD835\uDD3D","fopf":"\uD835\uDD57","forall":"\u2200","ForAll":"\u2200","fork":"\u22D4","forkv":"\u2AD9","Fouriertrf":"\u2131","fpartint":"\u2A0D","frac12":"\u00BD","frac13":"\u2153","frac14":"\u00BC","frac15":"\u2155","frac16":"\u2159","frac18":"\u215B","frac23":"\u2154","frac25":"\u2156","frac34":"\u00BE","frac35":"\u2157","frac38":"\u215C","frac45":"\u2158","frac56":"\u215A","frac58":"\u215D","frac78":"\u215E","frasl":"\u2044","frown":"\u2322","fscr":"\uD835\uDCBB","Fscr":"\u2131","gacute":"\u01F5","Gamma":"\u0393","gamma":"\u03B3","Gammad":"\u03DC","gammad":"\u03DD","gap":"\u2A86","Gbreve":"\u011E","gbreve":"\u011F","Gcedil":"\u0122","Gcirc":"\u011C","gcirc":"\u011D","Gcy":"\u0413","gcy":"\u0433","Gdot":"\u0120","gdot":"\u0121","ge":"\u2265","gE":"\u2267","gEl":"\u2A8C","gel":"\u22DB","geq":"\u2265","geqq":"\u2267","geqslant":"\u2A7E","gescc":"\u2AA9","ges":"\u2A7E","gesdot":"\u2A80","gesdoto":"\u2A82","gesdotol":"\u2A84","gesl":"\u22DB\uFE00","gesles":"\u2A94","Gfr":"\uD835\uDD0A","gfr":"\uD835\uDD24","gg":"\u226B","Gg":"\u22D9","ggg":"\u22D9","gimel":"\u2137","GJcy":"\u0403","gjcy":"\u0453","gla":"\u2AA5","gl":"\u2277","glE":"\u2A92","glj":"\u2AA4","gnap":"\u2A8A","gnapprox":"\u2A8A","gne":"\u2A88","gnE":"\u2269","gneq":"\u2A88","gneqq":"\u2269","gnsim":"\u22E7","Gopf":"\uD835\uDD3E","gopf":"\uD835\uDD58","grave":"`","GreaterEqual":"\u2265","GreaterEqualLess":"\u22DB","GreaterFullEqual":"\u2267","GreaterGreater":"\u2AA2","GreaterLess":"\u2277","GreaterSlantEqual":"\u2A7E","GreaterTilde":"\u2273","Gscr":"\uD835\uDCA2","gscr":"\u210A","gsim":"\u2273","gsime":"\u2A8E","gsiml":"\u2A90","gtcc":"\u2AA7","gtcir":"\u2A7A","gt":">","GT":">","Gt":"\u226B","gtdot":"\u22D7","gtlPar":"\u2995","gtquest":"\u2A7C","gtrapprox":"\u2A86","gtrarr":"\u2978","gtrdot":"\u22D7","gtreqless":"\u22DB","gtreqqless":"\u2A8C","gtrless":"\u2277","gtrsim":"\u2273","gvertneqq":"\u2269\uFE00","gvnE":"\u2269\uFE00","Hacek":"\u02C7","hairsp":"\u200A","half":"\u00BD","hamilt":"\u210B","HARDcy":"\u042A","hardcy":"\u044A","harrcir":"\u2948","harr":"\u2194","hArr":"\u21D4","harrw":"\u21AD","Hat":"^","hbar":"\u210F","Hcirc":"\u0124","hcirc":"\u0125","hearts":"\u2665","heartsuit":"\u2665","hellip":"\u2026","hercon":"\u22B9","hfr":"\uD835\uDD25","Hfr":"\u210C","HilbertSpace":"\u210B","hksearow":"\u2925","hkswarow":"\u2926","hoarr":"\u21FF","homtht":"\u223B","hookleftarrow":"\u21A9","hookrightarrow":"\u21AA","hopf":"\uD835\uDD59","Hopf":"\u210D","horbar":"\u2015","HorizontalLine":"\u2500","hscr":"\uD835\uDCBD","Hscr":"\u210B","hslash":"\u210F","Hstrok":"\u0126","hstrok":"\u0127","HumpDownHump":"\u224E","HumpEqual":"\u224F","hybull":"\u2043","hyphen":"\u2010","Iacute":"\u00CD","iacute":"\u00ED","ic":"\u2063","Icirc":"\u00CE","icirc":"\u00EE","Icy":"\u0418","icy":"\u0438","Idot":"\u0130","IEcy":"\u0415","iecy":"\u0435","iexcl":"\u00A1","iff":"\u21D4","ifr":"\uD835\uDD26","Ifr":"\u2111","Igrave":"\u00CC","igrave":"\u00EC","ii":"\u2148","iiiint":"\u2A0C","iiint":"\u222D","iinfin":"\u29DC","iiota":"\u2129","IJlig":"\u0132","ijlig":"\u0133","Imacr":"\u012A","imacr":"\u012B","image":"\u2111","ImaginaryI":"\u2148","imagline":"\u2110","imagpart":"\u2111","imath":"\u0131","Im":"\u2111","imof":"\u22B7","imped":"\u01B5","Implies":"\u21D2","incare":"\u2105","in":"\u2208","infin":"\u221E","infintie":"\u29DD","inodot":"\u0131","intcal":"\u22BA","int":"\u222B","Int":"\u222C","integers":"\u2124","Integral":"\u222B","intercal":"\u22BA","Intersection":"\u22C2","intlarhk":"\u2A17","intprod":"\u2A3C","InvisibleComma":"\u2063","InvisibleTimes":"\u2062","IOcy":"\u0401","iocy":"\u0451","Iogon":"\u012E","iogon":"\u012F","Iopf":"\uD835\uDD40","iopf":"\uD835\uDD5A","Iota":"\u0399","iota":"\u03B9","iprod":"\u2A3C","iquest":"\u00BF","iscr":"\uD835\uDCBE","Iscr":"\u2110","isin":"\u2208","isindot":"\u22F5","isinE":"\u22F9","isins":"\u22F4","isinsv":"\u22F3","isinv":"\u2208","it":"\u2062","Itilde":"\u0128","itilde":"\u0129","Iukcy":"\u0406","iukcy":"\u0456","Iuml":"\u00CF","iuml":"\u00EF","Jcirc":"\u0134","jcirc":"\u0135","Jcy":"\u0419","jcy":"\u0439","Jfr":"\uD835\uDD0D","jfr":"\uD835\uDD27","jmath":"\u0237","Jopf":"\uD835\uDD41","jopf":"\uD835\uDD5B","Jscr":"\uD835\uDCA5","jscr":"\uD835\uDCBF","Jsercy":"\u0408","jsercy":"\u0458","Jukcy":"\u0404","jukcy":"\u0454","Kappa":"\u039A","kappa":"\u03BA","kappav":"\u03F0","Kcedil":"\u0136","kcedil":"\u0137","Kcy":"\u041A","kcy":"\u043A","Kfr":"\uD835\uDD0E","kfr":"\uD835\uDD28","kgreen":"\u0138","KHcy":"\u0425","khcy":"\u0445","KJcy":"\u040C","kjcy":"\u045C","Kopf":"\uD835\uDD42","kopf":"\uD835\uDD5C","Kscr":"\uD835\uDCA6","kscr":"\uD835\uDCC0","lAarr":"\u21DA","Lacute":"\u0139","lacute":"\u013A","laemptyv":"\u29B4","lagran":"\u2112","Lambda":"\u039B","lambda":"\u03BB","lang":"\u27E8","Lang":"\u27EA","langd":"\u2991","langle":"\u27E8","lap":"\u2A85","Laplacetrf":"\u2112","laquo":"\u00AB","larrb":"\u21E4","larrbfs":"\u291F","larr":"\u2190","Larr":"\u219E","lArr":"\u21D0","larrfs":"\u291D","larrhk":"\u21A9","larrlp":"\u21AB","larrpl":"\u2939","larrsim":"\u2973","larrtl":"\u21A2","latail":"\u2919","lAtail":"\u291B","lat":"\u2AAB","late":"\u2AAD","lates":"\u2AAD\uFE00","lbarr":"\u290C","lBarr":"\u290E","lbbrk":"\u2772","lbrace":"{","lbrack":"[","lbrke":"\u298B","lbrksld":"\u298F","lbrkslu":"\u298D","Lcaron":"\u013D","lcaron":"\u013E","Lcedil":"\u013B","lcedil":"\u013C","lceil":"\u2308","lcub":"{","Lcy":"\u041B","lcy":"\u043B","ldca":"\u2936","ldquo":"\u201C","ldquor":"\u201E","ldrdhar":"\u2967","ldrushar":"\u294B","ldsh":"\u21B2","le":"\u2264","lE":"\u2266","LeftAngleBracket":"\u27E8","LeftArrowBar":"\u21E4","leftarrow":"\u2190","LeftArrow":"\u2190","Leftarrow":"\u21D0","LeftArrowRightArrow":"\u21C6","leftarrowtail":"\u21A2","LeftCeiling":"\u2308","LeftDoubleBracket":"\u27E6","LeftDownTeeVector":"\u2961","LeftDownVectorBar":"\u2959","LeftDownVector":"\u21C3","LeftFloor":"\u230A","leftharpoondown":"\u21BD","leftharpoonup":"\u21BC","leftleftarrows":"\u21C7","leftrightarrow":"\u2194","LeftRightArrow":"\u2194","Leftrightarrow":"\u21D4","leftrightarrows":"\u21C6","leftrightharpoons":"\u21CB","leftrightsquigarrow":"\u21AD","LeftRightVector":"\u294E","LeftTeeArrow":"\u21A4","LeftTee":"\u22A3","LeftTeeVector":"\u295A","leftthreetimes":"\u22CB","LeftTriangleBar":"\u29CF","LeftTriangle":"\u22B2","LeftTriangleEqual":"\u22B4","LeftUpDownVector":"\u2951","LeftUpTeeVector":"\u2960","LeftUpVectorBar":"\u2958","LeftUpVector":"\u21BF","LeftVectorBar":"\u2952","LeftVector":"\u21BC","lEg":"\u2A8B","leg":"\u22DA","leq":"\u2264","leqq":"\u2266","leqslant":"\u2A7D","lescc":"\u2AA8","les":"\u2A7D","lesdot":"\u2A7F","lesdoto":"\u2A81","lesdotor":"\u2A83","lesg":"\u22DA\uFE00","lesges":"\u2A93","lessapprox":"\u2A85","lessdot":"\u22D6","lesseqgtr":"\u22DA","lesseqqgtr":"\u2A8B","LessEqualGreater":"\u22DA","LessFullEqual":"\u2266","LessGreater":"\u2276","lessgtr":"\u2276","LessLess":"\u2AA1","lesssim":"\u2272","LessSlantEqual":"\u2A7D","LessTilde":"\u2272","lfisht":"\u297C","lfloor":"\u230A","Lfr":"\uD835\uDD0F","lfr":"\uD835\uDD29","lg":"\u2276","lgE":"\u2A91","lHar":"\u2962","lhard":"\u21BD","lharu":"\u21BC","lharul":"\u296A","lhblk":"\u2584","LJcy":"\u0409","ljcy":"\u0459","llarr":"\u21C7","ll":"\u226A","Ll":"\u22D8","llcorner":"\u231E","Lleftarrow":"\u21DA","llhard":"\u296B","lltri":"\u25FA","Lmidot":"\u013F","lmidot":"\u0140","lmoustache":"\u23B0","lmoust":"\u23B0","lnap":"\u2A89","lnapprox":"\u2A89","lne":"\u2A87","lnE":"\u2268","lneq":"\u2A87","lneqq":"\u2268","lnsim":"\u22E6","loang":"\u27EC","loarr":"\u21FD","lobrk":"\u27E6","longleftarrow":"\u27F5","LongLeftArrow":"\u27F5","Longleftarrow":"\u27F8","longleftrightarrow":"\u27F7","LongLeftRightArrow":"\u27F7","Longleftrightarrow":"\u27FA","longmapsto":"\u27FC","longrightarrow":"\u27F6","LongRightArrow":"\u27F6","Longrightarrow":"\u27F9","looparrowleft":"\u21AB","looparrowright":"\u21AC","lopar":"\u2985","Lopf":"\uD835\uDD43","lopf":"\uD835\uDD5D","loplus":"\u2A2D","lotimes":"\u2A34","lowast":"\u2217","lowbar":"_","LowerLeftArrow":"\u2199","LowerRightArrow":"\u2198","loz":"\u25CA","lozenge":"\u25CA","lozf":"\u29EB","lpar":"(","lparlt":"\u2993","lrarr":"\u21C6","lrcorner":"\u231F","lrhar":"\u21CB","lrhard":"\u296D","lrm":"\u200E","lrtri":"\u22BF","lsaquo":"\u2039","lscr":"\uD835\uDCC1","Lscr":"\u2112","lsh":"\u21B0","Lsh":"\u21B0","lsim":"\u2272","lsime":"\u2A8D","lsimg":"\u2A8F","lsqb":"[","lsquo":"\u2018","lsquor":"\u201A","Lstrok":"\u0141","lstrok":"\u0142","ltcc":"\u2AA6","ltcir":"\u2A79","lt":"<","LT":"<","Lt":"\u226A","ltdot":"\u22D6","lthree":"\u22CB","ltimes":"\u22C9","ltlarr":"\u2976","ltquest":"\u2A7B","ltri":"\u25C3","ltrie":"\u22B4","ltrif":"\u25C2","ltrPar":"\u2996","lurdshar":"\u294A","luruhar":"\u2966","lvertneqq":"\u2268\uFE00","lvnE":"\u2268\uFE00","macr":"\u00AF","male":"\u2642","malt":"\u2720","maltese":"\u2720","Map":"\u2905","map":"\u21A6","mapsto":"\u21A6","mapstodown":"\u21A7","mapstoleft":"\u21A4","mapstoup":"\u21A5","marker":"\u25AE","mcomma":"\u2A29","Mcy":"\u041C","mcy":"\u043C","mdash":"\u2014","mDDot":"\u223A","measuredangle":"\u2221","MediumSpace":"\u205F","Mellintrf":"\u2133","Mfr":"\uD835\uDD10","mfr":"\uD835\uDD2A","mho":"\u2127","micro":"\u00B5","midast":"*","midcir":"\u2AF0","mid":"\u2223","middot":"\u00B7","minusb":"\u229F","minus":"\u2212","minusd":"\u2238","minusdu":"\u2A2A","MinusPlus":"\u2213","mlcp":"\u2ADB","mldr":"\u2026","mnplus":"\u2213","models":"\u22A7","Mopf":"\uD835\uDD44","mopf":"\uD835\uDD5E","mp":"\u2213","mscr":"\uD835\uDCC2","Mscr":"\u2133","mstpos":"\u223E","Mu":"\u039C","mu":"\u03BC","multimap":"\u22B8","mumap":"\u22B8","nabla":"\u2207","Nacute":"\u0143","nacute":"\u0144","nang":"\u2220\u20D2","nap":"\u2249","napE":"\u2A70\u0338","napid":"\u224B\u0338","napos":"\u0149","napprox":"\u2249","natural":"\u266E","naturals":"\u2115","natur":"\u266E","nbsp":"\u00A0","nbump":"\u224E\u0338","nbumpe":"\u224F\u0338","ncap":"\u2A43","Ncaron":"\u0147","ncaron":"\u0148","Ncedil":"\u0145","ncedil":"\u0146","ncong":"\u2247","ncongdot":"\u2A6D\u0338","ncup":"\u2A42","Ncy":"\u041D","ncy":"\u043D","ndash":"\u2013","nearhk":"\u2924","nearr":"\u2197","neArr":"\u21D7","nearrow":"\u2197","ne":"\u2260","nedot":"\u2250\u0338","NegativeMediumSpace":"\u200B","NegativeThickSpace":"\u200B","NegativeThinSpace":"\u200B","NegativeVeryThinSpace":"\u200B","nequiv":"\u2262","nesear":"\u2928","nesim":"\u2242\u0338","NestedGreaterGreater":"\u226B","NestedLessLess":"\u226A","NewLine":"\n","nexist":"\u2204","nexists":"\u2204","Nfr":"\uD835\uDD11","nfr":"\uD835\uDD2B","ngE":"\u2267\u0338","nge":"\u2271","ngeq":"\u2271","ngeqq":"\u2267\u0338","ngeqslant":"\u2A7E\u0338","nges":"\u2A7E\u0338","nGg":"\u22D9\u0338","ngsim":"\u2275","nGt":"\u226B\u20D2","ngt":"\u226F","ngtr":"\u226F","nGtv":"\u226B\u0338","nharr":"\u21AE","nhArr":"\u21CE","nhpar":"\u2AF2","ni":"\u220B","nis":"\u22FC","nisd":"\u22FA","niv":"\u220B","NJcy":"\u040A","njcy":"\u045A","nlarr":"\u219A","nlArr":"\u21CD","nldr":"\u2025","nlE":"\u2266\u0338","nle":"\u2270","nleftarrow":"\u219A","nLeftarrow":"\u21CD","nleftrightarrow":"\u21AE","nLeftrightarrow":"\u21CE","nleq":"\u2270","nleqq":"\u2266\u0338","nleqslant":"\u2A7D\u0338","nles":"\u2A7D\u0338","nless":"\u226E","nLl":"\u22D8\u0338","nlsim":"\u2274","nLt":"\u226A\u20D2","nlt":"\u226E","nltri":"\u22EA","nltrie":"\u22EC","nLtv":"\u226A\u0338","nmid":"\u2224","NoBreak":"\u2060","NonBreakingSpace":"\u00A0","nopf":"\uD835\uDD5F","Nopf":"\u2115","Not":"\u2AEC","not":"\u00AC","NotCongruent":"\u2262","NotCupCap":"\u226D","NotDoubleVerticalBar":"\u2226","NotElement":"\u2209","NotEqual":"\u2260","NotEqualTilde":"\u2242\u0338","NotExists":"\u2204","NotGreater":"\u226F","NotGreaterEqual":"\u2271","NotGreaterFullEqual":"\u2267\u0338","NotGreaterGreater":"\u226B\u0338","NotGreaterLess":"\u2279","NotGreaterSlantEqual":"\u2A7E\u0338","NotGreaterTilde":"\u2275","NotHumpDownHump":"\u224E\u0338","NotHumpEqual":"\u224F\u0338","notin":"\u2209","notindot":"\u22F5\u0338","notinE":"\u22F9\u0338","notinva":"\u2209","notinvb":"\u22F7","notinvc":"\u22F6","NotLeftTriangleBar":"\u29CF\u0338","NotLeftTriangle":"\u22EA","NotLeftTriangleEqual":"\u22EC","NotLess":"\u226E","NotLessEqual":"\u2270","NotLessGreater":"\u2278","NotLessLess":"\u226A\u0338","NotLessSlantEqual":"\u2A7D\u0338","NotLessTilde":"\u2274","NotNestedGreaterGreater":"\u2AA2\u0338","NotNestedLessLess":"\u2AA1\u0338","notni":"\u220C","notniva":"\u220C","notnivb":"\u22FE","notnivc":"\u22FD","NotPrecedes":"\u2280","NotPrecedesEqual":"\u2AAF\u0338","NotPrecedesSlantEqual":"\u22E0","NotReverseElement":"\u220C","NotRightTriangleBar":"\u29D0\u0338","NotRightTriangle":"\u22EB","NotRightTriangleEqual":"\u22ED","NotSquareSubset":"\u228F\u0338","NotSquareSubsetEqual":"\u22E2","NotSquareSuperset":"\u2290\u0338","NotSquareSupersetEqual":"\u22E3","NotSubset":"\u2282\u20D2","NotSubsetEqual":"\u2288","NotSucceeds":"\u2281","NotSucceedsEqual":"\u2AB0\u0338","NotSucceedsSlantEqual":"\u22E1","NotSucceedsTilde":"\u227F\u0338","NotSuperset":"\u2283\u20D2","NotSupersetEqual":"\u2289","NotTilde":"\u2241","NotTildeEqual":"\u2244","NotTildeFullEqual":"\u2247","NotTildeTilde":"\u2249","NotVerticalBar":"\u2224","nparallel":"\u2226","npar":"\u2226","nparsl":"\u2AFD\u20E5","npart":"\u2202\u0338","npolint":"\u2A14","npr":"\u2280","nprcue":"\u22E0","nprec":"\u2280","npreceq":"\u2AAF\u0338","npre":"\u2AAF\u0338","nrarrc":"\u2933\u0338","nrarr":"\u219B","nrArr":"\u21CF","nrarrw":"\u219D\u0338","nrightarrow":"\u219B","nRightarrow":"\u21CF","nrtri":"\u22EB","nrtrie":"\u22ED","nsc":"\u2281","nsccue":"\u22E1","nsce":"\u2AB0\u0338","Nscr":"\uD835\uDCA9","nscr":"\uD835\uDCC3","nshortmid":"\u2224","nshortparallel":"\u2226","nsim":"\u2241","nsime":"\u2244","nsimeq":"\u2244","nsmid":"\u2224","nspar":"\u2226","nsqsube":"\u22E2","nsqsupe":"\u22E3","nsub":"\u2284","nsubE":"\u2AC5\u0338","nsube":"\u2288","nsubset":"\u2282\u20D2","nsubseteq":"\u2288","nsubseteqq":"\u2AC5\u0338","nsucc":"\u2281","nsucceq":"\u2AB0\u0338","nsup":"\u2285","nsupE":"\u2AC6\u0338","nsupe":"\u2289","nsupset":"\u2283\u20D2","nsupseteq":"\u2289","nsupseteqq":"\u2AC6\u0338","ntgl":"\u2279","Ntilde":"\u00D1","ntilde":"\u00F1","ntlg":"\u2278","ntriangleleft":"\u22EA","ntrianglelefteq":"\u22EC","ntriangleright":"\u22EB","ntrianglerighteq":"\u22ED","Nu":"\u039D","nu":"\u03BD","num":"#","numero":"\u2116","numsp":"\u2007","nvap":"\u224D\u20D2","nvdash":"\u22AC","nvDash":"\u22AD","nVdash":"\u22AE","nVDash":"\u22AF","nvge":"\u2265\u20D2","nvgt":">\u20D2","nvHarr":"\u2904","nvinfin":"\u29DE","nvlArr":"\u2902","nvle":"\u2264\u20D2","nvlt":"<\u20D2","nvltrie":"\u22B4\u20D2","nvrArr":"\u2903","nvrtrie":"\u22B5\u20D2","nvsim":"\u223C\u20D2","nwarhk":"\u2923","nwarr":"\u2196","nwArr":"\u21D6","nwarrow":"\u2196","nwnear":"\u2927","Oacute":"\u00D3","oacute":"\u00F3","oast":"\u229B","Ocirc":"\u00D4","ocirc":"\u00F4","ocir":"\u229A","Ocy":"\u041E","ocy":"\u043E","odash":"\u229D","Odblac":"\u0150","odblac":"\u0151","odiv":"\u2A38","odot":"\u2299","odsold":"\u29BC","OElig":"\u0152","oelig":"\u0153","ofcir":"\u29BF","Ofr":"\uD835\uDD12","ofr":"\uD835\uDD2C","ogon":"\u02DB","Ograve":"\u00D2","ograve":"\u00F2","ogt":"\u29C1","ohbar":"\u29B5","ohm":"\u03A9","oint":"\u222E","olarr":"\u21BA","olcir":"\u29BE","olcross":"\u29BB","oline":"\u203E","olt":"\u29C0","Omacr":"\u014C","omacr":"\u014D","Omega":"\u03A9","omega":"\u03C9","Omicron":"\u039F","omicron":"\u03BF","omid":"\u29B6","ominus":"\u2296","Oopf":"\uD835\uDD46","oopf":"\uD835\uDD60","opar":"\u29B7","OpenCurlyDoubleQuote":"\u201C","OpenCurlyQuote":"\u2018","operp":"\u29B9","oplus":"\u2295","orarr":"\u21BB","Or":"\u2A54","or":"\u2228","ord":"\u2A5D","order":"\u2134","orderof":"\u2134","ordf":"\u00AA","ordm":"\u00BA","origof":"\u22B6","oror":"\u2A56","orslope":"\u2A57","orv":"\u2A5B","oS":"\u24C8","Oscr":"\uD835\uDCAA","oscr":"\u2134","Oslash":"\u00D8","oslash":"\u00F8","osol":"\u2298","Otilde":"\u00D5","otilde":"\u00F5","otimesas":"\u2A36","Otimes":"\u2A37","otimes":"\u2297","Ouml":"\u00D6","ouml":"\u00F6","ovbar":"\u233D","OverBar":"\u203E","OverBrace":"\u23DE","OverBracket":"\u23B4","OverParenthesis":"\u23DC","para":"\u00B6","parallel":"\u2225","par":"\u2225","parsim":"\u2AF3","parsl":"\u2AFD","part":"\u2202","PartialD":"\u2202","Pcy":"\u041F","pcy":"\u043F","percnt":"%","period":".","permil":"\u2030","perp":"\u22A5","pertenk":"\u2031","Pfr":"\uD835\uDD13","pfr":"\uD835\uDD2D","Phi":"\u03A6","phi":"\u03C6","phiv":"\u03D5","phmmat":"\u2133","phone":"\u260E","Pi":"\u03A0","pi":"\u03C0","pitchfork":"\u22D4","piv":"\u03D6","planck":"\u210F","planckh":"\u210E","plankv":"\u210F","plusacir":"\u2A23","plusb":"\u229E","pluscir":"\u2A22","plus":"+","plusdo":"\u2214","plusdu":"\u2A25","pluse":"\u2A72","PlusMinus":"\u00B1","plusmn":"\u00B1","plussim":"\u2A26","plustwo":"\u2A27","pm":"\u00B1","Poincareplane":"\u210C","pointint":"\u2A15","popf":"\uD835\uDD61","Popf":"\u2119","pound":"\u00A3","prap":"\u2AB7","Pr":"\u2ABB","pr":"\u227A","prcue":"\u227C","precapprox":"\u2AB7","prec":"\u227A","preccurlyeq":"\u227C","Precedes":"\u227A","PrecedesEqual":"\u2AAF","PrecedesSlantEqual":"\u227C","PrecedesTilde":"\u227E","preceq":"\u2AAF","precnapprox":"\u2AB9","precneqq":"\u2AB5","precnsim":"\u22E8","pre":"\u2AAF","prE":"\u2AB3","precsim":"\u227E","prime":"\u2032","Prime":"\u2033","primes":"\u2119","prnap":"\u2AB9","prnE":"\u2AB5","prnsim":"\u22E8","prod":"\u220F","Product":"\u220F","profalar":"\u232E","profline":"\u2312","profsurf":"\u2313","prop":"\u221D","Proportional":"\u221D","Proportion":"\u2237","propto":"\u221D","prsim":"\u227E","prurel":"\u22B0","Pscr":"\uD835\uDCAB","pscr":"\uD835\uDCC5","Psi":"\u03A8","psi":"\u03C8","puncsp":"\u2008","Qfr":"\uD835\uDD14","qfr":"\uD835\uDD2E","qint":"\u2A0C","qopf":"\uD835\uDD62","Qopf":"\u211A","qprime":"\u2057","Qscr":"\uD835\uDCAC","qscr":"\uD835\uDCC6","quaternions":"\u210D","quatint":"\u2A16","quest":"?","questeq":"\u225F","quot":"\"","QUOT":"\"","rAarr":"\u21DB","race":"\u223D\u0331","Racute":"\u0154","racute":"\u0155","radic":"\u221A","raemptyv":"\u29B3","rang":"\u27E9","Rang":"\u27EB","rangd":"\u2992","range":"\u29A5","rangle":"\u27E9","raquo":"\u00BB","rarrap":"\u2975","rarrb":"\u21E5","rarrbfs":"\u2920","rarrc":"\u2933","rarr":"\u2192","Rarr":"\u21A0","rArr":"\u21D2","rarrfs":"\u291E","rarrhk":"\u21AA","rarrlp":"\u21AC","rarrpl":"\u2945","rarrsim":"\u2974","Rarrtl":"\u2916","rarrtl":"\u21A3","rarrw":"\u219D","ratail":"\u291A","rAtail":"\u291C","ratio":"\u2236","rationals":"\u211A","rbarr":"\u290D","rBarr":"\u290F","RBarr":"\u2910","rbbrk":"\u2773","rbrace":"}","rbrack":"]","rbrke":"\u298C","rbrksld":"\u298E","rbrkslu":"\u2990","Rcaron":"\u0158","rcaron":"\u0159","Rcedil":"\u0156","rcedil":"\u0157","rceil":"\u2309","rcub":"}","Rcy":"\u0420","rcy":"\u0440","rdca":"\u2937","rdldhar":"\u2969","rdquo":"\u201D","rdquor":"\u201D","rdsh":"\u21B3","real":"\u211C","realine":"\u211B","realpart":"\u211C","reals":"\u211D","Re":"\u211C","rect":"\u25AD","reg":"\u00AE","REG":"\u00AE","ReverseElement":"\u220B","ReverseEquilibrium":"\u21CB","ReverseUpEquilibrium":"\u296F","rfisht":"\u297D","rfloor":"\u230B","rfr":"\uD835\uDD2F","Rfr":"\u211C","rHar":"\u2964","rhard":"\u21C1","rharu":"\u21C0","rharul":"\u296C","Rho":"\u03A1","rho":"\u03C1","rhov":"\u03F1","RightAngleBracket":"\u27E9","RightArrowBar":"\u21E5","rightarrow":"\u2192","RightArrow":"\u2192","Rightarrow":"\u21D2","RightArrowLeftArrow":"\u21C4","rightarrowtail":"\u21A3","RightCeiling":"\u2309","RightDoubleBracket":"\u27E7","RightDownTeeVector":"\u295D","RightDownVectorBar":"\u2955","RightDownVector":"\u21C2","RightFloor":"\u230B","rightharpoondown":"\u21C1","rightharpoonup":"\u21C0","rightleftarrows":"\u21C4","rightleftharpoons":"\u21CC","rightrightarrows":"\u21C9","rightsquigarrow":"\u219D","RightTeeArrow":"\u21A6","RightTee":"\u22A2","RightTeeVector":"\u295B","rightthreetimes":"\u22CC","RightTriangleBar":"\u29D0","RightTriangle":"\u22B3","RightTriangleEqual":"\u22B5","RightUpDownVector":"\u294F","RightUpTeeVector":"\u295C","RightUpVectorBar":"\u2954","RightUpVector":"\u21BE","RightVectorBar":"\u2953","RightVector":"\u21C0","ring":"\u02DA","risingdotseq":"\u2253","rlarr":"\u21C4","rlhar":"\u21CC","rlm":"\u200F","rmoustache":"\u23B1","rmoust":"\u23B1","rnmid":"\u2AEE","roang":"\u27ED","roarr":"\u21FE","robrk":"\u27E7","ropar":"\u2986","ropf":"\uD835\uDD63","Ropf":"\u211D","roplus":"\u2A2E","rotimes":"\u2A35","RoundImplies":"\u2970","rpar":")","rpargt":"\u2994","rppolint":"\u2A12","rrarr":"\u21C9","Rrightarrow":"\u21DB","rsaquo":"\u203A","rscr":"\uD835\uDCC7","Rscr":"\u211B","rsh":"\u21B1","Rsh":"\u21B1","rsqb":"]","rsquo":"\u2019","rsquor":"\u2019","rthree":"\u22CC","rtimes":"\u22CA","rtri":"\u25B9","rtrie":"\u22B5","rtrif":"\u25B8","rtriltri":"\u29CE","RuleDelayed":"\u29F4","ruluhar":"\u2968","rx":"\u211E","Sacute":"\u015A","sacute":"\u015B","sbquo":"\u201A","scap":"\u2AB8","Scaron":"\u0160","scaron":"\u0161","Sc":"\u2ABC","sc":"\u227B","sccue":"\u227D","sce":"\u2AB0","scE":"\u2AB4","Scedil":"\u015E","scedil":"\u015F","Scirc":"\u015C","scirc":"\u015D","scnap":"\u2ABA","scnE":"\u2AB6","scnsim":"\u22E9","scpolint":"\u2A13","scsim":"\u227F","Scy":"\u0421","scy":"\u0441","sdotb":"\u22A1","sdot":"\u22C5","sdote":"\u2A66","searhk":"\u2925","searr":"\u2198","seArr":"\u21D8","searrow":"\u2198","sect":"\u00A7","semi":";","seswar":"\u2929","setminus":"\u2216","setmn":"\u2216","sext":"\u2736","Sfr":"\uD835\uDD16","sfr":"\uD835\uDD30","sfrown":"\u2322","sharp":"\u266F","SHCHcy":"\u0429","shchcy":"\u0449","SHcy":"\u0428","shcy":"\u0448","ShortDownArrow":"\u2193","ShortLeftArrow":"\u2190","shortmid":"\u2223","shortparallel":"\u2225","ShortRightArrow":"\u2192","ShortUpArrow":"\u2191","shy":"\u00AD","Sigma":"\u03A3","sigma":"\u03C3","sigmaf":"\u03C2","sigmav":"\u03C2","sim":"\u223C","simdot":"\u2A6A","sime":"\u2243","simeq":"\u2243","simg":"\u2A9E","simgE":"\u2AA0","siml":"\u2A9D","simlE":"\u2A9F","simne":"\u2246","simplus":"\u2A24","simrarr":"\u2972","slarr":"\u2190","SmallCircle":"\u2218","smallsetminus":"\u2216","smashp":"\u2A33","smeparsl":"\u29E4","smid":"\u2223","smile":"\u2323","smt":"\u2AAA","smte":"\u2AAC","smtes":"\u2AAC\uFE00","SOFTcy":"\u042C","softcy":"\u044C","solbar":"\u233F","solb":"\u29C4","sol":"/","Sopf":"\uD835\uDD4A","sopf":"\uD835\uDD64","spades":"\u2660","spadesuit":"\u2660","spar":"\u2225","sqcap":"\u2293","sqcaps":"\u2293\uFE00","sqcup":"\u2294","sqcups":"\u2294\uFE00","Sqrt":"\u221A","sqsub":"\u228F","sqsube":"\u2291","sqsubset":"\u228F","sqsubseteq":"\u2291","sqsup":"\u2290","sqsupe":"\u2292","sqsupset":"\u2290","sqsupseteq":"\u2292","square":"\u25A1","Square":"\u25A1","SquareIntersection":"\u2293","SquareSubset":"\u228F","SquareSubsetEqual":"\u2291","SquareSuperset":"\u2290","SquareSupersetEqual":"\u2292","SquareUnion":"\u2294","squarf":"\u25AA","squ":"\u25A1","squf":"\u25AA","srarr":"\u2192","Sscr":"\uD835\uDCAE","sscr":"\uD835\uDCC8","ssetmn":"\u2216","ssmile":"\u2323","sstarf":"\u22C6","Star":"\u22C6","star":"\u2606","starf":"\u2605","straightepsilon":"\u03F5","straightphi":"\u03D5","strns":"\u00AF","sub":"\u2282","Sub":"\u22D0","subdot":"\u2ABD","subE":"\u2AC5","sube":"\u2286","subedot":"\u2AC3","submult":"\u2AC1","subnE":"\u2ACB","subne":"\u228A","subplus":"\u2ABF","subrarr":"\u2979","subset":"\u2282","Subset":"\u22D0","subseteq":"\u2286","subseteqq":"\u2AC5","SubsetEqual":"\u2286","subsetneq":"\u228A","subsetneqq":"\u2ACB","subsim":"\u2AC7","subsub":"\u2AD5","subsup":"\u2AD3","succapprox":"\u2AB8","succ":"\u227B","succcurlyeq":"\u227D","Succeeds":"\u227B","SucceedsEqual":"\u2AB0","SucceedsSlantEqual":"\u227D","SucceedsTilde":"\u227F","succeq":"\u2AB0","succnapprox":"\u2ABA","succneqq":"\u2AB6","succnsim":"\u22E9","succsim":"\u227F","SuchThat":"\u220B","sum":"\u2211","Sum":"\u2211","sung":"\u266A","sup1":"\u00B9","sup2":"\u00B2","sup3":"\u00B3","sup":"\u2283","Sup":"\u22D1","supdot":"\u2ABE","supdsub":"\u2AD8","supE":"\u2AC6","supe":"\u2287","supedot":"\u2AC4","Superset":"\u2283","SupersetEqual":"\u2287","suphsol":"\u27C9","suphsub":"\u2AD7","suplarr":"\u297B","supmult":"\u2AC2","supnE":"\u2ACC","supne":"\u228B","supplus":"\u2AC0","supset":"\u2283","Supset":"\u22D1","supseteq":"\u2287","supseteqq":"\u2AC6","supsetneq":"\u228B","supsetneqq":"\u2ACC","supsim":"\u2AC8","supsub":"\u2AD4","supsup":"\u2AD6","swarhk":"\u2926","swarr":"\u2199","swArr":"\u21D9","swarrow":"\u2199","swnwar":"\u292A","szlig":"\u00DF","Tab":"\t","target":"\u2316","Tau":"\u03A4","tau":"\u03C4","tbrk":"\u23B4","Tcaron":"\u0164","tcaron":"\u0165","Tcedil":"\u0162","tcedil":"\u0163","Tcy":"\u0422","tcy":"\u0442","tdot":"\u20DB","telrec":"\u2315","Tfr":"\uD835\uDD17","tfr":"\uD835\uDD31","there4":"\u2234","therefore":"\u2234","Therefore":"\u2234","Theta":"\u0398","theta":"\u03B8","thetasym":"\u03D1","thetav":"\u03D1","thickapprox":"\u2248","thicksim":"\u223C","ThickSpace":"\u205F\u200A","ThinSpace":"\u2009","thinsp":"\u2009","thkap":"\u2248","thksim":"\u223C","THORN":"\u00DE","thorn":"\u00FE","tilde":"\u02DC","Tilde":"\u223C","TildeEqual":"\u2243","TildeFullEqual":"\u2245","TildeTilde":"\u2248","timesbar":"\u2A31","timesb":"\u22A0","times":"\u00D7","timesd":"\u2A30","tint":"\u222D","toea":"\u2928","topbot":"\u2336","topcir":"\u2AF1","top":"\u22A4","Topf":"\uD835\uDD4B","topf":"\uD835\uDD65","topfork":"\u2ADA","tosa":"\u2929","tprime":"\u2034","trade":"\u2122","TRADE":"\u2122","triangle":"\u25B5","triangledown":"\u25BF","triangleleft":"\u25C3","trianglelefteq":"\u22B4","triangleq":"\u225C","triangleright":"\u25B9","trianglerighteq":"\u22B5","tridot":"\u25EC","trie":"\u225C","triminus":"\u2A3A","TripleDot":"\u20DB","triplus":"\u2A39","trisb":"\u29CD","tritime":"\u2A3B","trpezium":"\u23E2","Tscr":"\uD835\uDCAF","tscr":"\uD835\uDCC9","TScy":"\u0426","tscy":"\u0446","TSHcy":"\u040B","tshcy":"\u045B","Tstrok":"\u0166","tstrok":"\u0167","twixt":"\u226C","twoheadleftarrow":"\u219E","twoheadrightarrow":"\u21A0","Uacute":"\u00DA","uacute":"\u00FA","uarr":"\u2191","Uarr":"\u219F","uArr":"\u21D1","Uarrocir":"\u2949","Ubrcy":"\u040E","ubrcy":"\u045E","Ubreve":"\u016C","ubreve":"\u016D","Ucirc":"\u00DB","ucirc":"\u00FB","Ucy":"\u0423","ucy":"\u0443","udarr":"\u21C5","Udblac":"\u0170","udblac":"\u0171","udhar":"\u296E","ufisht":"\u297E","Ufr":"\uD835\uDD18","ufr":"\uD835\uDD32","Ugrave":"\u00D9","ugrave":"\u00F9","uHar":"\u2963","uharl":"\u21BF","uharr":"\u21BE","uhblk":"\u2580","ulcorn":"\u231C","ulcorner":"\u231C","ulcrop":"\u230F","ultri":"\u25F8","Umacr":"\u016A","umacr":"\u016B","uml":"\u00A8","UnderBar":"_","UnderBrace":"\u23DF","UnderBracket":"\u23B5","UnderParenthesis":"\u23DD","Union":"\u22C3","UnionPlus":"\u228E","Uogon":"\u0172","uogon":"\u0173","Uopf":"\uD835\uDD4C","uopf":"\uD835\uDD66","UpArrowBar":"\u2912","uparrow":"\u2191","UpArrow":"\u2191","Uparrow":"\u21D1","UpArrowDownArrow":"\u21C5","updownarrow":"\u2195","UpDownArrow":"\u2195","Updownarrow":"\u21D5","UpEquilibrium":"\u296E","upharpoonleft":"\u21BF","upharpoonright":"\u21BE","uplus":"\u228E","UpperLeftArrow":"\u2196","UpperRightArrow":"\u2197","upsi":"\u03C5","Upsi":"\u03D2","upsih":"\u03D2","Upsilon":"\u03A5","upsilon":"\u03C5","UpTeeArrow":"\u21A5","UpTee":"\u22A5","upuparrows":"\u21C8","urcorn":"\u231D","urcorner":"\u231D","urcrop":"\u230E","Uring":"\u016E","uring":"\u016F","urtri":"\u25F9","Uscr":"\uD835\uDCB0","uscr":"\uD835\uDCCA","utdot":"\u22F0","Utilde":"\u0168","utilde":"\u0169","utri":"\u25B5","utrif":"\u25B4","uuarr":"\u21C8","Uuml":"\u00DC","uuml":"\u00FC","uwangle":"\u29A7","vangrt":"\u299C","varepsilon":"\u03F5","varkappa":"\u03F0","varnothing":"\u2205","varphi":"\u03D5","varpi":"\u03D6","varpropto":"\u221D","varr":"\u2195","vArr":"\u21D5","varrho":"\u03F1","varsigma":"\u03C2","varsubsetneq":"\u228A\uFE00","varsubsetneqq":"\u2ACB\uFE00","varsupsetneq":"\u228B\uFE00","varsupsetneqq":"\u2ACC\uFE00","vartheta":"\u03D1","vartriangleleft":"\u22B2","vartriangleright":"\u22B3","vBar":"\u2AE8","Vbar":"\u2AEB","vBarv":"\u2AE9","Vcy":"\u0412","vcy":"\u0432","vdash":"\u22A2","vDash":"\u22A8","Vdash":"\u22A9","VDash":"\u22AB","Vdashl":"\u2AE6","veebar":"\u22BB","vee":"\u2228","Vee":"\u22C1","veeeq":"\u225A","vellip":"\u22EE","verbar":"|","Verbar":"\u2016","vert":"|","Vert":"\u2016","VerticalBar":"\u2223","VerticalLine":"|","VerticalSeparator":"\u2758","VerticalTilde":"\u2240","VeryThinSpace":"\u200A","Vfr":"\uD835\uDD19","vfr":"\uD835\uDD33","vltri":"\u22B2","vnsub":"\u2282\u20D2","vnsup":"\u2283\u20D2","Vopf":"\uD835\uDD4D","vopf":"\uD835\uDD67","vprop":"\u221D","vrtri":"\u22B3","Vscr":"\uD835\uDCB1","vscr":"\uD835\uDCCB","vsubnE":"\u2ACB\uFE00","vsubne":"\u228A\uFE00","vsupnE":"\u2ACC\uFE00","vsupne":"\u228B\uFE00","Vvdash":"\u22AA","vzigzag":"\u299A","Wcirc":"\u0174","wcirc":"\u0175","wedbar":"\u2A5F","wedge":"\u2227","Wedge":"\u22C0","wedgeq":"\u2259","weierp":"\u2118","Wfr":"\uD835\uDD1A","wfr":"\uD835\uDD34","Wopf":"\uD835\uDD4E","wopf":"\uD835\uDD68","wp":"\u2118","wr":"\u2240","wreath":"\u2240","Wscr":"\uD835\uDCB2","wscr":"\uD835\uDCCC","xcap":"\u22C2","xcirc":"\u25EF","xcup":"\u22C3","xdtri":"\u25BD","Xfr":"\uD835\uDD1B","xfr":"\uD835\uDD35","xharr":"\u27F7","xhArr":"\u27FA","Xi":"\u039E","xi":"\u03BE","xlarr":"\u27F5","xlArr":"\u27F8","xmap":"\u27FC","xnis":"\u22FB","xodot":"\u2A00","Xopf":"\uD835\uDD4F","xopf":"\uD835\uDD69","xoplus":"\u2A01","xotime":"\u2A02","xrarr":"\u27F6","xrArr":"\u27F9","Xscr":"\uD835\uDCB3","xscr":"\uD835\uDCCD","xsqcup":"\u2A06","xuplus":"\u2A04","xutri":"\u25B3","xvee":"\u22C1","xwedge":"\u22C0","Yacute":"\u00DD","yacute":"\u00FD","YAcy":"\u042F","yacy":"\u044F","Ycirc":"\u0176","ycirc":"\u0177","Ycy":"\u042B","ycy":"\u044B","yen":"\u00A5","Yfr":"\uD835\uDD1C","yfr":"\uD835\uDD36","YIcy":"\u0407","yicy":"\u0457","Yopf":"\uD835\uDD50","yopf":"\uD835\uDD6A","Yscr":"\uD835\uDCB4","yscr":"\uD835\uDCCE","YUcy":"\u042E","yucy":"\u044E","yuml":"\u00FF","Yuml":"\u0178","Zacute":"\u0179","zacute":"\u017A","Zcaron":"\u017D","zcaron":"\u017E","Zcy":"\u0417","zcy":"\u0437","Zdot":"\u017B","zdot":"\u017C","zeetrf":"\u2128","ZeroWidthSpace":"\u200B","Zeta":"\u0396","zeta":"\u03B6","zfr":"\uD835\uDD37","Zfr":"\u2128","ZHcy":"\u0416","zhcy":"\u0436","zigrarr":"\u21DD","zopf":"\uD835\uDD6B","Zopf":"\u2124","Zscr":"\uD835\uDCB5","zscr":"\uD835\uDCCF","zwj":"\u200D","zwnj":"\u200C"};
});
__d('entities/lib/decode.js',["entities/maps/entities.json","entities/maps/legacy.json","entities/maps/xml.json","entities/lib/decode_codepoint.js"],function(global, require, module, exports) {  var entityMap=require("entities/maps/entities.json"),
legacyMap=require("entities/maps/legacy.json"),
xmlMap=require("entities/maps/xml.json"),
decodeCodePoint=require("entities/lib/decode_codepoint.js");

var decodeXMLStrict=getStrictDecoder(xmlMap),
decodeHTMLStrict=getStrictDecoder(entityMap);

function getStrictDecoder(map){
var keys=Object.keys(map).join("|"),
replace=getReplacer(map);

keys += "|#[xX][\\da-fA-F]+|#\\d+";

var re=new RegExp("&(?:" + keys + ");","g");

return function(str){
return String(str).replace(re,replace);};}



var decodeHTML=(function(){
var legacy=Object.keys(legacyMap).
sort(sorter);

var keys=Object.keys(entityMap).
sort(sorter);

for(var i=0,j=0;i < keys.length;i++) {
if(legacy[j] === keys[i]){
keys[i] += ";?";
j++;}else 
{
keys[i] += ";";}}



var re=new RegExp("&(?:" + keys.join("|") + "|#[xX][\\da-fA-F]+;?|#\\d+;?)","g"),
replace=getReplacer(entityMap);

function replacer(str){
if(str.substr(-1) !== ";")str += ";";
return replace(str);}



return function(str){
return String(str).replace(re,replacer);};})();



function sorter(a,b){
return a < b?1:-1;}


function getReplacer(map){
return function replace(str){
if(str.charAt(1) === "#"){
if(str.charAt(2) === "X" || str.charAt(2) === "x"){
return decodeCodePoint(parseInt(str.substr(3),16));}

return decodeCodePoint(parseInt(str.substr(2),10));}

return map[str.slice(1,-1)];};}



module.exports = {
XML:decodeXMLStrict,
HTML:decodeHTML,
HTMLStrict:decodeHTMLStrict};
});
__d('entities/maps/legacy.json',[],function(global, require, module, exports) {  module.exports = {"Aacute":"\u00C1","aacute":"\u00E1","Acirc":"\u00C2","acirc":"\u00E2","acute":"\u00B4","AElig":"\u00C6","aelig":"\u00E6","Agrave":"\u00C0","agrave":"\u00E0","amp":"&","AMP":"&","Aring":"\u00C5","aring":"\u00E5","Atilde":"\u00C3","atilde":"\u00E3","Auml":"\u00C4","auml":"\u00E4","brvbar":"\u00A6","Ccedil":"\u00C7","ccedil":"\u00E7","cedil":"\u00B8","cent":"\u00A2","copy":"\u00A9","COPY":"\u00A9","curren":"\u00A4","deg":"\u00B0","divide":"\u00F7","Eacute":"\u00C9","eacute":"\u00E9","Ecirc":"\u00CA","ecirc":"\u00EA","Egrave":"\u00C8","egrave":"\u00E8","ETH":"\u00D0","eth":"\u00F0","Euml":"\u00CB","euml":"\u00EB","frac12":"\u00BD","frac14":"\u00BC","frac34":"\u00BE","gt":">","GT":">","Iacute":"\u00CD","iacute":"\u00ED","Icirc":"\u00CE","icirc":"\u00EE","iexcl":"\u00A1","Igrave":"\u00CC","igrave":"\u00EC","iquest":"\u00BF","Iuml":"\u00CF","iuml":"\u00EF","laquo":"\u00AB","lt":"<","LT":"<","macr":"\u00AF","micro":"\u00B5","middot":"\u00B7","nbsp":"\u00A0","not":"\u00AC","Ntilde":"\u00D1","ntilde":"\u00F1","Oacute":"\u00D3","oacute":"\u00F3","Ocirc":"\u00D4","ocirc":"\u00F4","Ograve":"\u00D2","ograve":"\u00F2","ordf":"\u00AA","ordm":"\u00BA","Oslash":"\u00D8","oslash":"\u00F8","Otilde":"\u00D5","otilde":"\u00F5","Ouml":"\u00D6","ouml":"\u00F6","para":"\u00B6","plusmn":"\u00B1","pound":"\u00A3","quot":"\"","QUOT":"\"","raquo":"\u00BB","reg":"\u00AE","REG":"\u00AE","sect":"\u00A7","shy":"\u00AD","sup1":"\u00B9","sup2":"\u00B2","sup3":"\u00B3","szlig":"\u00DF","THORN":"\u00DE","thorn":"\u00FE","times":"\u00D7","Uacute":"\u00DA","uacute":"\u00FA","Ucirc":"\u00DB","ucirc":"\u00FB","Ugrave":"\u00D9","ugrave":"\u00F9","uml":"\u00A8","Uuml":"\u00DC","uuml":"\u00FC","Yacute":"\u00DD","yacute":"\u00FD","yen":"\u00A5","yuml":"\u00FF"};
});
__d('entities/lib/decode_codepoint.js',["entities/maps/decode.json"],function(global, require, module, exports) {  var decodeMap=require("entities/maps/decode.json");

module.exports = decodeCodePoint;


function decodeCodePoint(codePoint){

if(codePoint >= 0xD800 && codePoint <= 0xDFFF || codePoint > 0x10FFFF){
return "\uFFFD";}


if(codePoint in decodeMap){
codePoint = decodeMap[codePoint];}


var output="";

if(codePoint > 0xFFFF){
codePoint -= 0x10000;
output += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);
codePoint = 0xDC00 | codePoint & 0x3FF;}


output += String.fromCharCode(codePoint);
return output;}
});
__d('entities/maps/decode.json',[],function(global, require, module, exports) {  module.exports = {"0":65533,"128":8364,"130":8218,"131":402,"132":8222,"133":8230,"134":8224,"135":8225,"136":710,"137":8240,"138":352,"139":8249,"140":338,"142":381,"145":8216,"146":8217,"147":8220,"148":8221,"149":8226,"150":8211,"151":8212,"152":732,"153":8482,"154":353,"155":8250,"156":339,"158":382,"159":376};
});
__d('domutils/lib/traversal.js',[],function(global, require, module, exports) {  var getChildren=exports.getChildren = function(elem){
return elem.children;};


var getParent=exports.getParent = function(elem){
return elem.parent;};


exports.getSiblings = function(elem){
var parent=getParent(elem);
return parent?getChildren(parent):[elem];};


exports.getAttributeValue = function(elem,name){
return elem.attribs && elem.attribs[name];};


exports.hasAttrib = function(elem,name){
return !!elem.attribs && hasOwnProperty.call(elem.attribs,name);};


exports.getName = function(elem){
return elem.name;};
});
__d('domutils/lib/manipulation.js',[],function(global, require, module, exports) {  exports.removeElement = function(elem){
if(elem.prev)elem.prev.next = elem.next;
if(elem.next)elem.next.prev = elem.prev;

if(elem.parent){
var childs=elem.parent.children;
childs.splice(childs.lastIndexOf(elem),1);}};



exports.replaceElement = function(elem,replacement){
var prev=replacement.prev = elem.prev;
if(prev){
prev.next = replacement;}


var next=replacement.next = elem.next;
if(next){
next.prev = replacement;}


var parent=replacement.parent = elem.parent;
if(parent){
var childs=parent.children;
childs[childs.lastIndexOf(elem)] = replacement;}};



exports.appendChild = function(elem,child){
child.parent = elem;

if(elem.children.push(child) !== 1){
var sibling=elem.children[elem.children.length - 2];
sibling.next = child;
child.prev = sibling;
child.next = null;}};



exports.append = function(elem,next){
var parent=elem.parent,
currNext=elem.next;

next.next = currNext;
next.prev = elem;
elem.next = next;
next.parent = parent;

if(currNext){
currNext.prev = next;
if(parent){
var childs=parent.children;
childs.splice(childs.lastIndexOf(currNext),0,next);}}else 

if(parent){
parent.children.push(next);}};



exports.prepend = function(elem,prev){
var parent=elem.parent;
if(parent){
var childs=parent.children;
childs.splice(childs.lastIndexOf(elem),0,prev);}


if(elem.prev){
elem.prev.next = prev;}


prev.parent = parent;
prev.prev = elem.prev;
prev.next = elem;
elem.prev = prev;};
});
__d('domutils/lib/querying.js',["domelementtype/index.js"],function(global, require, module, exports) {  var isTag=require("domelementtype/index.js").isTag;

module.exports = {
filter:filter,
find:find,
findOneChild:findOneChild,
findOne:findOne,
existsOne:existsOne,
findAll:findAll};


function filter(test,element,recurse,limit){
if(!Array.isArray(element))element = [element];

if(typeof limit !== "number" || !isFinite(limit)){
limit = Infinity;}

return find(test,element,recurse !== false,limit);}


function find(test,elems,recurse,limit){
var result=[],childs;

for(var i=0,j=elems.length;i < j;i++) {
if(test(elems[i])){
result.push(elems[i]);
if(--limit <= 0)break;}


childs = elems[i].children;
if(recurse && childs && childs.length > 0){
childs = find(test,childs,recurse,limit);
result = result.concat(childs);
limit -= childs.length;
if(limit <= 0)break;}}



return result;}


function findOneChild(test,elems){
for(var i=0,l=elems.length;i < l;i++) {
if(test(elems[i]))return elems[i];}


return null;}


function findOne(test,elems){
var elem=null;

for(var i=0,l=elems.length;i < l && !elem;i++) {
if(!isTag(elems[i])){
continue;}else 
if(test(elems[i])){
elem = elems[i];}else 
if(elems[i].children.length > 0){
elem = findOne(test,elems[i].children);}}



return elem;}


function existsOne(test,elems){
for(var i=0,l=elems.length;i < l;i++) {
if(
isTag(elems[i]) && (
test(elems[i]) || 
elems[i].children.length > 0 && 
existsOne(test,elems[i].children)))


{
return true;}}



return false;}


function findAll(test,elems){
var result=[];
for(var i=0,j=elems.length;i < j;i++) {
if(!isTag(elems[i]))continue;
if(test(elems[i]))result.push(elems[i]);

if(elems[i].children.length > 0){
result = result.concat(findAll(test,elems[i].children));}}


return result;}
});
__d('domutils/lib/legacy.js',["domelementtype/index.js"],function(global, require, module, exports) {  var ElementType=require("domelementtype/index.js");
var isTag=exports.isTag = ElementType.isTag;

exports.testElement = function(options,element){
for(var key in options) {
if(!options.hasOwnProperty(key));else 
if(key === "tag_name"){
if(!isTag(element) || !options.tag_name(element.name)){
return false;}}else 

if(key === "tag_type"){
if(!options.tag_type(element.type))return false;}else 
if(key === "tag_contains"){
if(isTag(element) || !options.tag_contains(element.data)){
return false;}}else 

if(!element.attribs || !options[key](element.attribs[key])){
return false;}}


return true;};


var Checks={
tag_name:function(name){
if(typeof name === "function"){
return function(elem){return isTag(elem) && name(elem.name);};}else 
if(name === "*"){
return isTag;}else 
{
return function(elem){return isTag(elem) && elem.name === name;};}},


tag_type:function(type){
if(typeof type === "function"){
return function(elem){return type(elem.type);};}else 
{
return function(elem){return elem.type === type;};}},


tag_contains:function(data){
if(typeof data === "function"){
return function(elem){return !isTag(elem) && data(elem.data);};}else 
{
return function(elem){return !isTag(elem) && elem.data === data;};}}};




function getAttribCheck(attrib,value){
if(typeof value === "function"){
return function(elem){return elem.attribs && value(elem.attribs[attrib]);};}else 
{
return function(elem){return elem.attribs && elem.attribs[attrib] === value;};}}



function combineFuncs(a,b){
return function(elem){
return a(elem) || b(elem);};}



exports.getElements = function(options,element,recurse,limit){
var funcs=Object.keys(options).map(function(key){
var value=options[key];
return key in Checks?Checks[key](value):getAttribCheck(key,value);});


return funcs.length === 0?[]:this.filter(
funcs.reduce(combineFuncs),
element,recurse,limit);};



exports.getElementById = function(id,element,recurse){
if(!Array.isArray(element))element = [element];
return this.findOne(getAttribCheck("id",id),element,recurse !== false);};


exports.getElementsByTagName = function(name,element,recurse,limit){
return this.filter(Checks.tag_name(name),element,recurse,limit);};


exports.getElementsByTagType = function(type,element,recurse,limit){
return this.filter(Checks.tag_type(type),element,recurse,limit);};
});
__d('domutils/lib/helpers.js',[],function(global, require, module, exports) {  exports.

removeSubsets = function(nodes){
var idx=nodes.length,node,ancestor,replace;



while(--idx > -1) {
node = ancestor = nodes[idx];


nodes[idx] = null;
replace = true;

while(ancestor) {
if(nodes.indexOf(ancestor) > -1){
replace = false;
nodes.splice(idx,1);
break;}

ancestor = ancestor.parent;}



if(replace){
nodes[idx] = node;}}



return nodes;};



var POSITION={
DISCONNECTED:1,
PRECEDING:2,
FOLLOWING:4,
CONTAINS:8,
CONTAINED_BY:16};
























var comparePos=exports.compareDocumentPosition = function(nodeA,nodeB){
var aParents=[];
var bParents=[];
var current,sharedParent,siblings,aSibling,bSibling,idx;

if(nodeA === nodeB){
return 0;}


current = nodeA;
while(current) {
aParents.unshift(current);
current = current.parent;}

current = nodeB;
while(current) {
bParents.unshift(current);
current = current.parent;}


idx = 0;
while(aParents[idx] === bParents[idx]) {
idx++;}


if(idx === 0){
return POSITION.DISCONNECTED;}


sharedParent = aParents[idx - 1];
siblings = sharedParent.children;
aSibling = aParents[idx];
bSibling = bParents[idx];

if(siblings.indexOf(aSibling) > siblings.indexOf(bSibling)){
if(sharedParent === nodeB){
return POSITION.FOLLOWING | POSITION.CONTAINED_BY;}

return POSITION.FOLLOWING;}else 
{
if(sharedParent === nodeA){
return POSITION.PRECEDING | POSITION.CONTAINS;}

return POSITION.PRECEDING;}};










exports.uniqueSort = function(nodes){
var idx=nodes.length,node,position;

nodes = nodes.slice();

while(--idx > -1) {
node = nodes[idx];
position = nodes.indexOf(node);
if(position > -1 && position < idx){
nodes.splice(idx,1);}}


nodes.sort(function(a,b){
var relative=comparePos(a,b);
if(relative & POSITION.PRECEDING){
return -1;}else 
if(relative & POSITION.FOLLOWING){
return 1;}

return 0;});


return nodes;};
});
__d('htmlparser2/lib/CollectingHandler.js',["htmlparser2/lib/index.js"],function(global, require, module, exports) {  module.exports = CollectingHandler;

function CollectingHandler(cbs){
this._cbs = cbs || {};
this.events = [];}


var EVENTS=require("htmlparser2/lib/index.js").EVENTS;
Object.keys(EVENTS).forEach(function(name){
if(EVENTS[name] === 0){
name = "on" + name;
CollectingHandler.prototype[name] = function(){
this.events.push([name]);
if(this._cbs[name])this._cbs[name]();};}else 

if(EVENTS[name] === 1){
name = "on" + name;
CollectingHandler.prototype[name] = function(a){
this.events.push([name,a]);
if(this._cbs[name])this._cbs[name](a);};}else 

if(EVENTS[name] === 2){
name = "on" + name;
CollectingHandler.prototype[name] = function(a,b){
this.events.push([name,a,b]);
if(this._cbs[name])this._cbs[name](a,b);};}else 

{
throw Error("wrong number of arguments");}});



CollectingHandler.prototype.onreset = function(){
this.events = [];
if(this._cbs.onreset)this._cbs.onreset();};


CollectingHandler.prototype.restart = function(){
if(this._cbs.onreset)this._cbs.onreset();

for(var i=0,len=this.events.length;i < len;i++) {
if(this._cbs[this.events[i][0]]){

var num=this.events[i].length;

if(num === 1){
this._cbs[this.events[i][0]]();}else 
if(num === 2){
this._cbs[this.events[i][0]](this.events[i][1]);}else 
{
this._cbs[this.events[i][0]](this.events[i][1],this.events[i][2]);}}}};
});
__d('lodash/index.js',[],function(global, require, module, exports) {  /**
 * @license
 * lodash 3.10.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern -d -o ./index.js`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */
;(function(){


var undefined;


var VERSION='3.10.1';


var BIND_FLAG=1,
BIND_KEY_FLAG=2,
CURRY_BOUND_FLAG=4,
CURRY_FLAG=8,
CURRY_RIGHT_FLAG=16,
PARTIAL_FLAG=32,
PARTIAL_RIGHT_FLAG=64,
ARY_FLAG=128,
REARG_FLAG=256;


var DEFAULT_TRUNC_LENGTH=30,
DEFAULT_TRUNC_OMISSION='...';


var HOT_COUNT=150,
HOT_SPAN=16;


var LARGE_ARRAY_SIZE=200;


var LAZY_FILTER_FLAG=1,
LAZY_MAP_FLAG=2;


var FUNC_ERROR_TEXT='Expected a function';


var PLACEHOLDER='__lodash_placeholder__';


var argsTag='[object Arguments]',
arrayTag='[object Array]',
boolTag='[object Boolean]',
dateTag='[object Date]',
errorTag='[object Error]',
funcTag='[object Function]',
mapTag='[object Map]',
numberTag='[object Number]',
objectTag='[object Object]',
regexpTag='[object RegExp]',
setTag='[object Set]',
stringTag='[object String]',
weakMapTag='[object WeakMap]';

var arrayBufferTag='[object ArrayBuffer]',
float32Tag='[object Float32Array]',
float64Tag='[object Float64Array]',
int8Tag='[object Int8Array]',
int16Tag='[object Int16Array]',
int32Tag='[object Int32Array]',
uint8Tag='[object Uint8Array]',
uint8ClampedTag='[object Uint8ClampedArray]',
uint16Tag='[object Uint16Array]',
uint32Tag='[object Uint32Array]';


var reEmptyStringLeading=/\b__p \+= '';/g,
reEmptyStringMiddle=/\b(__p \+=) '' \+/g,
reEmptyStringTrailing=/(__e\(.*?\)|\b__t\)) \+\n'';/g;


var reEscapedHtml=/&(?:amp|lt|gt|quot|#39|#96);/g,
reUnescapedHtml=/[&<>"'`]/g,
reHasEscapedHtml=RegExp(reEscapedHtml.source),
reHasUnescapedHtml=RegExp(reUnescapedHtml.source);


var reEscape=/<%-([\s\S]+?)%>/g,
reEvaluate=/<%([\s\S]+?)%>/g,
reInterpolate=/<%=([\s\S]+?)%>/g;


var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,
reIsPlainProp=/^\w*$/,
rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g;





var reRegExpChars=/^[:!,]|[\\^$.*+?()[\]{}|\/]|(^[0-9a-fA-Fnrtuvx])|([\n\r\u2028\u2029])/g,
reHasRegExpChars=RegExp(reRegExpChars.source);


var reComboMark=/[\u0300-\u036f\ufe20-\ufe23]/g;


var reEscapeChar=/\\(\\)?/g;


var reEsTemplate=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;


var reFlags=/\w*$/;


var reHasHexPrefix=/^0[xX]/;


var reIsHostCtor=/^\[object .+?Constructor\]$/;


var reIsUint=/^\d+$/;


var reLatin1=/[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;


var reNoMatch=/($^)/;


var reUnescapedString=/['\n\r\u2028\u2029\\]/g;


var reWords=(function(){
var upper='[A-Z\\xc0-\\xd6\\xd8-\\xde]',
lower='[a-z\\xdf-\\xf6\\xf8-\\xff]+';

return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+','g');})();



var contextProps=[
'Array','ArrayBuffer','Date','Error','Float32Array','Float64Array',
'Function','Int8Array','Int16Array','Int32Array','Math','Number',
'Object','RegExp','Set','String','_','clearTimeout','isFinite',
'parseFloat','parseInt','setTimeout','TypeError','Uint8Array',
'Uint8ClampedArray','Uint16Array','Uint32Array','WeakMap'];



var templateCounter=-1;


var typedArrayTags={};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = 
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = 
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = 
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = 
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = 
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = 
typedArrayTags[dateTag] = typedArrayTags[errorTag] = 
typedArrayTags[funcTag] = typedArrayTags[mapTag] = 
typedArrayTags[numberTag] = typedArrayTags[objectTag] = 
typedArrayTags[regexpTag] = typedArrayTags[setTag] = 
typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;


var cloneableTags={};
cloneableTags[argsTag] = cloneableTags[arrayTag] = 
cloneableTags[arrayBufferTag] = cloneableTags[boolTag] = 
cloneableTags[dateTag] = cloneableTags[float32Tag] = 
cloneableTags[float64Tag] = cloneableTags[int8Tag] = 
cloneableTags[int16Tag] = cloneableTags[int32Tag] = 
cloneableTags[numberTag] = cloneableTags[objectTag] = 
cloneableTags[regexpTag] = cloneableTags[stringTag] = 
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = 
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] = 
cloneableTags[mapTag] = cloneableTags[setTag] = 
cloneableTags[weakMapTag] = false;


var deburredLetters={
'\xc0':'A','\xc1':'A','\xc2':'A','\xc3':'A','\xc4':'A','\xc5':'A',
'\xe0':'a','\xe1':'a','\xe2':'a','\xe3':'a','\xe4':'a','\xe5':'a',
'\xc7':'C','\xe7':'c',
'\xd0':'D','\xf0':'d',
'\xc8':'E','\xc9':'E','\xca':'E','\xcb':'E',
'\xe8':'e','\xe9':'e','\xea':'e','\xeb':'e',
'\xcC':'I','\xcd':'I','\xce':'I','\xcf':'I',
'\xeC':'i','\xed':'i','\xee':'i','\xef':'i',
'\xd1':'N','\xf1':'n',
'\xd2':'O','\xd3':'O','\xd4':'O','\xd5':'O','\xd6':'O','\xd8':'O',
'\xf2':'o','\xf3':'o','\xf4':'o','\xf5':'o','\xf6':'o','\xf8':'o',
'\xd9':'U','\xda':'U','\xdb':'U','\xdc':'U',
'\xf9':'u','\xfa':'u','\xfb':'u','\xfc':'u',
'\xdd':'Y','\xfd':'y','\xff':'y',
'\xc6':'Ae','\xe6':'ae',
'\xde':'Th','\xfe':'th',
'\xdf':'ss'};



var htmlEscapes={
'&':'&amp;',
'<':'&lt;',
'>':'&gt;',
'"':'&quot;',
"'":'&#39;',
'`':'&#96;'};



var htmlUnescapes={
'&amp;':'&',
'&lt;':'<',
'&gt;':'>',
'&quot;':'"',
'&#39;':"'",
'&#96;':'`'};



var objectTypes={
'function':true,
'object':true};



var regexpEscapes={
'0':'x30','1':'x31','2':'x32','3':'x33','4':'x34',
'5':'x35','6':'x36','7':'x37','8':'x38','9':'x39',
'A':'x41','B':'x42','C':'x43','D':'x44','E':'x45','F':'x46',
'a':'x61','b':'x62','c':'x63','d':'x64','e':'x65','f':'x66',
'n':'x6e','r':'x72','t':'x74','u':'x75','v':'x76','x':'x78'};



var stringEscapes={
'\\':'\\',
"'":"'",
'\n':'n',
'\r':'r',
'\u2028':'u2028',
'\u2029':'u2029'};



var freeExports=objectTypes[typeof exports] && exports && !exports.nodeType && exports;


var freeModule=objectTypes[typeof module] && module && !module.nodeType && module;


var freeGlobal=freeExports && freeModule && typeof global == 'object' && global && global.Object && global;


var freeSelf=objectTypes[typeof self] && self && self.Object && self;


var freeWindow=objectTypes[typeof window] && window && window.Object && window;


var moduleExports=freeModule && freeModule.exports === freeExports && freeExports;







var root=freeGlobal || freeWindow !== (this && this.window) && freeWindow || freeSelf || this;












function baseCompareAscending(value,other){
if(value !== other){
var valIsNull=value === null,
valIsUndef=value === undefined,
valIsReflexive=value === value;

var othIsNull=other === null,
othIsUndef=other === undefined,
othIsReflexive=other === other;

if(value > other && !othIsNull || !valIsReflexive || 
valIsNull && !othIsUndef && othIsReflexive || 
valIsUndef && othIsReflexive){
return 1;}

if(value < other && !valIsNull || !othIsReflexive || 
othIsNull && !valIsUndef && valIsReflexive || 
othIsUndef && valIsReflexive){
return -1;}}


return 0;}












function baseFindIndex(array,predicate,fromRight){
var length=array.length,
index=fromRight?length:-1;

while(fromRight?index--:++index < length) {
if(predicate(array[index],index,array)){
return index;}}


return -1;}











function baseIndexOf(array,value,fromIndex){
if(value !== value){
return indexOfNaN(array,fromIndex);}

var index=fromIndex - 1,
length=array.length;

while(++index < length) {
if(array[index] === value){
return index;}}


return -1;}










function baseIsFunction(value){


return typeof value == 'function' || false;}










function baseToString(value){
return value == null?'':value + '';}











function charsLeftIndex(string,chars){
var index=-1,
length=string.length;

while(++index < length && chars.indexOf(string.charAt(index)) > -1) {}
return index;}











function charsRightIndex(string,chars){
var index=string.length;

while(index-- && chars.indexOf(string.charAt(index)) > -1) {}
return index;}











function compareAscending(object,other){
return baseCompareAscending(object.criteria,other.criteria) || object.index - other.index;}
















function compareMultiple(object,other,orders){
var index=-1,
objCriteria=object.criteria,
othCriteria=other.criteria,
length=objCriteria.length,
ordersLength=orders.length;

while(++index < length) {
var result=baseCompareAscending(objCriteria[index],othCriteria[index]);
if(result){
if(index >= ordersLength){
return result;}

var order=orders[index];
return result * (order === 'asc' || order === true?1:-1);}}









return object.index - other.index;}









function deburrLetter(letter){
return deburredLetters[letter];}









function escapeHtmlChar(chr){
return htmlEscapes[chr];}











function escapeRegExpChar(chr,leadingChar,whitespaceChar){
if(leadingChar){
chr = regexpEscapes[chr];}else 
if(whitespaceChar){
chr = stringEscapes[chr];}

return '\\' + chr;}









function escapeStringChar(chr){
return '\\' + stringEscapes[chr];}











function indexOfNaN(array,fromIndex,fromRight){
var length=array.length,
index=fromIndex + (fromRight?0:-1);

while(fromRight?index--:++index < length) {
var other=array[index];
if(other !== other){
return index;}}


return -1;}









function isObjectLike(value){
return !!value && typeof value == 'object';}










function isSpace(charCode){
return charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160 || charCode == 5760 || charCode == 6158 || 
charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279);}











function replaceHolders(array,placeholder){
var index=-1,
length=array.length,
resIndex=-1,
result=[];

while(++index < length) {
if(array[index] === placeholder){
array[index] = PLACEHOLDER;
result[++resIndex] = index;}}


return result;}











function sortedUniq(array,iteratee){
var seen,
index=-1,
length=array.length,
resIndex=-1,
result=[];

while(++index < length) {
var value=array[index],
computed=iteratee?iteratee(value,index,array):value;

if(!index || seen !== computed){
seen = computed;
result[++resIndex] = value;}}


return result;}










function trimmedLeftIndex(string){
var index=-1,
length=string.length;

while(++index < length && isSpace(string.charCodeAt(index))) {}
return index;}










function trimmedRightIndex(string){
var index=string.length;

while(index-- && isSpace(string.charCodeAt(index))) {}
return index;}









function unescapeHtmlChar(chr){
return htmlUnescapes[chr];}







































function runInContext(context){




context = context?_.defaults(root.Object(),context,_.pick(root,contextProps)):root;


var Array=context.Array,
Date=context.Date,
Error=context.Error,
Function=context.Function,
Math=context.Math,
Number=context.Number,
Object=context.Object,
RegExp=context.RegExp,
String=context.String,
TypeError=context.TypeError;


var arrayProto=Array.prototype,
objectProto=Object.prototype,
stringProto=String.prototype;


var fnToString=Function.prototype.toString;


var hasOwnProperty=objectProto.hasOwnProperty;


var idCounter=0;





var objToString=objectProto.toString;


var oldDash=root._;


var reIsNative=RegExp('^' + 
fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g,'\\$&').
replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,'$1.*?') + '$');



var ArrayBuffer=context.ArrayBuffer,
clearTimeout=context.clearTimeout,
parseFloat=context.parseFloat,
pow=Math.pow,
propertyIsEnumerable=objectProto.propertyIsEnumerable,
Set=getNative(context,'Set'),
setTimeout=context.setTimeout,
splice=arrayProto.splice,
Uint8Array=context.Uint8Array,
WeakMap=getNative(context,'WeakMap');


var nativeCeil=Math.ceil,
nativeCreate=getNative(Object,'create'),
nativeFloor=Math.floor,
nativeIsArray=getNative(Array,'isArray'),
nativeIsFinite=context.isFinite,
nativeKeys=getNative(Object,'keys'),
nativeMax=Math.max,
nativeMin=Math.min,
nativeNow=getNative(Date,'now'),
nativeParseInt=context.parseInt,
nativeRandom=Math.random;


var NEGATIVE_INFINITY=Number.NEGATIVE_INFINITY,
POSITIVE_INFINITY=Number.POSITIVE_INFINITY;


var MAX_ARRAY_LENGTH=4294967295,
MAX_ARRAY_INDEX=MAX_ARRAY_LENGTH - 1,
HALF_MAX_ARRAY_LENGTH=MAX_ARRAY_LENGTH >>> 1;





var MAX_SAFE_INTEGER=9007199254740991;


var metaMap=WeakMap && new WeakMap();


var realNames={};



































































































function lodash(value){
if(isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)){
if(value instanceof LodashWrapper){
return value;}

if(hasOwnProperty.call(value,'__chain__') && hasOwnProperty.call(value,'__wrapped__')){
return wrapperClone(value);}}


return new LodashWrapper(value);}







function baseLodash(){}











function LodashWrapper(value,chainAll,actions){
this.__wrapped__ = value;
this.__actions__ = actions || [];
this.__chain__ = !!chainAll;}









var support=lodash.support = {};










lodash.templateSettings = {







'escape':reEscape,







'evaluate':reEvaluate,







'interpolate':reInterpolate,







'variable':'',







'imports':{







'_':lodash}};











function LazyWrapper(value){
this.__wrapped__ = value;
this.__actions__ = [];
this.__dir__ = 1;
this.__filtered__ = false;
this.__iteratees__ = [];
this.__takeCount__ = POSITIVE_INFINITY;
this.__views__ = [];}










function lazyClone(){
var result=new LazyWrapper(this.__wrapped__);
result.__actions__ = arrayCopy(this.__actions__);
result.__dir__ = this.__dir__;
result.__filtered__ = this.__filtered__;
result.__iteratees__ = arrayCopy(this.__iteratees__);
result.__takeCount__ = this.__takeCount__;
result.__views__ = arrayCopy(this.__views__);
return result;}










function lazyReverse(){
if(this.__filtered__){
var result=new LazyWrapper(this);
result.__dir__ = -1;
result.__filtered__ = true;}else 
{
result = this.clone();
result.__dir__ *= -1;}

return result;}










function lazyValue(){
var array=this.__wrapped__.value(),
dir=this.__dir__,
isArr=isArray(array),
isRight=dir < 0,
arrLength=isArr?array.length:0,
view=getView(0,arrLength,this.__views__),
start=view.start,
end=view.end,
length=end - start,
index=isRight?end:start - 1,
iteratees=this.__iteratees__,
iterLength=iteratees.length,
resIndex=0,
takeCount=nativeMin(length,this.__takeCount__);

if(!isArr || arrLength < LARGE_ARRAY_SIZE || arrLength == length && takeCount == length){
return baseWrapperValue(isRight && isArr?array.reverse():array,this.__actions__);}

var result=[];

outer: 
while(length-- && resIndex < takeCount) {
index += dir;

var iterIndex=-1,
value=array[index];

while(++iterIndex < iterLength) {
var data=iteratees[iterIndex],
iteratee=data.iteratee,
type=data.type,
computed=iteratee(value);

if(type == LAZY_MAP_FLAG){
value = computed;}else 
if(!computed){
if(type == LAZY_FILTER_FLAG){
continue outer;}else 
{
break outer;}}}



result[resIndex++] = value;}

return result;}












function MapCache(){
this.__data__ = {};}











function mapDelete(key){
return this.has(key) && delete this.__data__[key];}











function mapGet(key){
return key == '__proto__'?undefined:this.__data__[key];}











function mapHas(key){
return key != '__proto__' && hasOwnProperty.call(this.__data__,key);}












function mapSet(key,value){
if(key != '__proto__'){
this.__data__[key] = value;}

return this;}











function SetCache(values){
var length=values?values.length:0;

this.data = {'hash':nativeCreate(null),'set':new Set()};
while(length--) {
this.push(values[length]);}}












function cacheIndexOf(cache,value){
var data=cache.data,
result=typeof value == 'string' || isObject(value)?data.set.has(value):data.hash[value];

return result?0:-1;}










function cachePush(value){
var data=this.data;
if(typeof value == 'string' || isObject(value)){
data.set.add(value);}else 
{
data.hash[value] = true;}}













function arrayConcat(array,other){
var index=-1,
length=array.length,
othIndex=-1,
othLength=other.length,
result=Array(length + othLength);

while(++index < length) {
result[index] = array[index];}

while(++othIndex < othLength) {
result[index++] = other[othIndex];}

return result;}










function arrayCopy(source,array){
var index=-1,
length=source.length;

array || (array = Array(length));
while(++index < length) {
array[index] = source[index];}

return array;}











function arrayEach(array,iteratee){
var index=-1,
length=array.length;

while(++index < length) {
if(iteratee(array[index],index,array) === false){
break;}}


return array;}











function arrayEachRight(array,iteratee){
var length=array.length;

while(length--) {
if(iteratee(array[length],length,array) === false){
break;}}


return array;}












function arrayEvery(array,predicate){
var index=-1,
length=array.length;

while(++index < length) {
if(!predicate(array[index],index,array)){
return false;}}


return true;}













function arrayExtremum(array,iteratee,comparator,exValue){
var index=-1,
length=array.length,
computed=exValue,
result=computed;

while(++index < length) {
var value=array[index],
current=+iteratee(value);

if(comparator(current,computed)){
computed = current;
result = value;}}


return result;}











function arrayFilter(array,predicate){
var index=-1,
length=array.length,
resIndex=-1,
result=[];

while(++index < length) {
var value=array[index];
if(predicate(value,index,array)){
result[++resIndex] = value;}}


return result;}











function arrayMap(array,iteratee){
var index=-1,
length=array.length,
result=Array(length);

while(++index < length) {
result[index] = iteratee(array[index],index,array);}

return result;}










function arrayPush(array,values){
var index=-1,
length=values.length,
offset=array.length;

while(++index < length) {
array[offset + index] = values[index];}

return array;}














function arrayReduce(array,iteratee,accumulator,initFromArray){
var index=-1,
length=array.length;

if(initFromArray && length){
accumulator = array[++index];}

while(++index < length) {
accumulator = iteratee(accumulator,array[index],index,array);}

return accumulator;}














function arrayReduceRight(array,iteratee,accumulator,initFromArray){
var length=array.length;
if(initFromArray && length){
accumulator = array[--length];}

while(length--) {
accumulator = iteratee(accumulator,array[length],length,array);}

return accumulator;}












function arraySome(array,predicate){
var index=-1,
length=array.length;

while(++index < length) {
if(predicate(array[index],index,array)){
return true;}}


return false;}











function arraySum(array,iteratee){
var length=array.length,
result=0;

while(length--) {
result += +iteratee(array[length]) || 0;}

return result;}










function assignDefaults(objectValue,sourceValue){
return objectValue === undefined?sourceValue:objectValue;}















function assignOwnDefaults(objectValue,sourceValue,key,object){
return objectValue === undefined || !hasOwnProperty.call(object,key)?
sourceValue:
objectValue;}













function assignWith(object,source,customizer){
var index=-1,
props=keys(source),
length=props.length;

while(++index < length) {
var key=props[index],
value=object[key],
result=customizer(value,source[key],key,object,source);

if((result === result?result !== value:value === value) || 
value === undefined && !(key in object)){
object[key] = result;}}


return object;}











function baseAssign(object,source){
return source == null?
object:
baseCopy(source,keys(source),object);}











function baseAt(collection,props){
var index=-1,
isNil=collection == null,
isArr=!isNil && isArrayLike(collection),
length=isArr?collection.length:0,
propsLength=props.length,
result=Array(propsLength);

while(++index < propsLength) {
var key=props[index];
if(isArr){
result[index] = isIndex(key,length)?collection[key]:undefined;}else 
{
result[index] = isNil?undefined:collection[key];}}


return result;}











function baseCopy(source,props,object){
object || (object = {});

var index=-1,
length=props.length;

while(++index < length) {
var key=props[index];
object[key] = source[key];}

return object;}












function baseCallback(func,thisArg,argCount){
var type=typeof func;
if(type == 'function'){
return thisArg === undefined?
func:
bindCallback(func,thisArg,argCount);}

if(func == null){
return identity;}

if(type == 'object'){
return baseMatches(func);}

return thisArg === undefined?
property(func):
baseMatchesProperty(func,thisArg);}
















function baseClone(value,isDeep,customizer,key,object,stackA,stackB){
var result;
if(customizer){
result = object?customizer(value,key,object):customizer(value);}

if(result !== undefined){
return result;}

if(!isObject(value)){
return value;}

var isArr=isArray(value);
if(isArr){
result = initCloneArray(value);
if(!isDeep){
return arrayCopy(value,result);}}else 

{
var tag=objToString.call(value),
isFunc=tag == funcTag;

if(tag == objectTag || tag == argsTag || isFunc && !object){
result = initCloneObject(isFunc?{}:value);
if(!isDeep){
return baseAssign(result,value);}}else 

{
return cloneableTags[tag]?
initCloneByTag(value,tag,isDeep):
object?value:{};}}



stackA || (stackA = []);
stackB || (stackB = []);

var length=stackA.length;
while(length--) {
if(stackA[length] == value){
return stackB[length];}}



stackA.push(value);
stackB.push(result);


(isArr?arrayEach:baseForOwn)(value,function(subValue,key){
result[key] = baseClone(subValue,isDeep,customizer,key,value,stackA,stackB);});

return result;}










var baseCreate=(function(){
function object(){}
return function(prototype){
if(isObject(prototype)){
object.prototype = prototype;
var result=new object();
object.prototype = undefined;}

return result || {};};})();













function baseDelay(func,wait,args){
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

return setTimeout(function(){func.apply(undefined,args);},wait);}











function baseDifference(array,values){
var length=array?array.length:0,
result=[];

if(!length){
return result;}

var index=-1,
indexOf=getIndexOf(),
isCommon=indexOf == baseIndexOf,
cache=isCommon && values.length >= LARGE_ARRAY_SIZE?createCache(values):null,
valuesLength=values.length;

if(cache){
indexOf = cacheIndexOf;
isCommon = false;
values = cache;}

outer: 
while(++index < length) {
var value=array[index];

if(isCommon && value === value){
var valuesIndex=valuesLength;
while(valuesIndex--) {
if(values[valuesIndex] === value){
continue outer;}}


result.push(value);}else 

if(indexOf(values,value,0) < 0){
result.push(value);}}


return result;}











var baseEach=createBaseEach(baseForOwn);










var baseEachRight=createBaseEach(baseForOwnRight,true);











function baseEvery(collection,predicate){
var result=true;
baseEach(collection,function(value,index,collection){
result = !!predicate(value,index,collection);
return result;});

return result;}














function baseExtremum(collection,iteratee,comparator,exValue){
var computed=exValue,
result=computed;

baseEach(collection,function(value,index,collection){
var current=+iteratee(value,index,collection);
if(comparator(current,computed) || current === exValue && current === result){
computed = current;
result = value;}});


return result;}












function baseFill(array,value,start,end){
var length=array.length;

start = start == null?0:+start || 0;
if(start < 0){
start = -start > length?0:length + start;}

end = end === undefined || end > length?length:+end || 0;
if(end < 0){
end += length;}

length = start > end?0:end >>> 0;
start >>>= 0;

while(start < length) {
array[start++] = value;}

return array;}











function baseFilter(collection,predicate){
var result=[];
baseEach(collection,function(value,index,collection){
if(predicate(value,index,collection)){
result.push(value);}});


return result;}















function baseFind(collection,predicate,eachFunc,retKey){
var result;
eachFunc(collection,function(value,key,collection){
if(predicate(value,key,collection)){
result = retKey?key:value;
return false;}});


return result;}













function baseFlatten(array,isDeep,isStrict,result){
result || (result = []);

var index=-1,
length=array.length;

while(++index < length) {
var value=array[index];
if(isObjectLike(value) && isArrayLike(value) && (
isStrict || isArray(value) || isArguments(value))){
if(isDeep){

baseFlatten(value,isDeep,isStrict,result);}else 
{
arrayPush(result,value);}}else 

if(!isStrict){
result[result.length] = value;}}


return result;}














var baseFor=createBaseFor();











var baseForRight=createBaseFor(true);










function baseForIn(object,iteratee){
return baseFor(object,iteratee,keysIn);}











function baseForOwn(object,iteratee){
return baseFor(object,iteratee,keys);}











function baseForOwnRight(object,iteratee){
return baseForRight(object,iteratee,keys);}











function baseFunctions(object,props){
var index=-1,
length=props.length,
resIndex=-1,
result=[];

while(++index < length) {
var key=props[index];
if(isFunction(object[key])){
result[++resIndex] = key;}}


return result;}












function baseGet(object,path,pathKey){
if(object == null){
return;}

if(pathKey !== undefined && pathKey in toObject(object)){
path = [pathKey];}

var index=0,
length=path.length;

while(object != null && index < length) {
object = object[path[index++]];}

return index && index == length?object:undefined;}















function baseIsEqual(value,other,customizer,isLoose,stackA,stackB){
if(value === other){
return true;}

if(value == null || other == null || !isObject(value) && !isObjectLike(other)){
return value !== value && other !== other;}

return baseIsEqualDeep(value,other,baseIsEqual,customizer,isLoose,stackA,stackB);}

















function baseIsEqualDeep(object,other,equalFunc,customizer,isLoose,stackA,stackB){
var objIsArr=isArray(object),
othIsArr=isArray(other),
objTag=arrayTag,
othTag=arrayTag;

if(!objIsArr){
objTag = objToString.call(object);
if(objTag == argsTag){
objTag = objectTag;}else 
if(objTag != objectTag){
objIsArr = isTypedArray(object);}}


if(!othIsArr){
othTag = objToString.call(other);
if(othTag == argsTag){
othTag = objectTag;}else 
if(othTag != objectTag){
othIsArr = isTypedArray(other);}}


var objIsObj=objTag == objectTag,
othIsObj=othTag == objectTag,
isSameTag=objTag == othTag;

if(isSameTag && !(objIsArr || objIsObj)){
return equalByTag(object,other,objTag);}

if(!isLoose){
var objIsWrapped=objIsObj && hasOwnProperty.call(object,'__wrapped__'),
othIsWrapped=othIsObj && hasOwnProperty.call(other,'__wrapped__');

if(objIsWrapped || othIsWrapped){
return equalFunc(objIsWrapped?object.value():object,othIsWrapped?other.value():other,customizer,isLoose,stackA,stackB);}}


if(!isSameTag){
return false;}



stackA || (stackA = []);
stackB || (stackB = []);

var length=stackA.length;
while(length--) {
if(stackA[length] == object){
return stackB[length] == other;}}



stackA.push(object);
stackB.push(other);

var result=(objIsArr?equalArrays:equalObjects)(object,other,equalFunc,customizer,isLoose,stackA,stackB);

stackA.pop();
stackB.pop();

return result;}












function baseIsMatch(object,matchData,customizer){
var index=matchData.length,
length=index,
noCustomizer=!customizer;

if(object == null){
return !length;}

object = toObject(object);
while(index--) {
var data=matchData[index];
if(noCustomizer && data[2]?
data[1] !== object[data[0]]:
!(data[0] in object))
{
return false;}}


while(++index < length) {
data = matchData[index];
var key=data[0],
objValue=object[key],
srcValue=data[1];

if(noCustomizer && data[2]){
if(objValue === undefined && !(key in object)){
return false;}}else 

{
var result=customizer?customizer(objValue,srcValue,key):undefined;
if(!(result === undefined?baseIsEqual(srcValue,objValue,customizer,true):result)){
return false;}}}



return true;}











function baseMap(collection,iteratee){
var index=-1,
result=isArrayLike(collection)?Array(collection.length):[];

baseEach(collection,function(value,key,collection){
result[++index] = iteratee(value,key,collection);});

return result;}









function baseMatches(source){
var matchData=getMatchData(source);
if(matchData.length == 1 && matchData[0][2]){
var key=matchData[0][0],
value=matchData[0][1];

return function(object){
if(object == null){
return false;}

return object[key] === value && (value !== undefined || key in toObject(object));};}


return function(object){
return baseIsMatch(object,matchData);};}











function baseMatchesProperty(path,srcValue){
var isArr=isArray(path),
isCommon=isKey(path) && isStrictComparable(srcValue),
pathKey=path + '';

path = toPath(path);
return function(object){
if(object == null){
return false;}

var key=pathKey;
object = toObject(object);
if((isArr || !isCommon) && !(key in object)){
object = path.length == 1?object:baseGet(object,baseSlice(path,0,-1));
if(object == null){
return false;}

key = last(path);
object = toObject(object);}

return object[key] === srcValue?
srcValue !== undefined || key in object:
baseIsEqual(srcValue,object[key],undefined,true);};}















function baseMerge(object,source,customizer,stackA,stackB){
if(!isObject(object)){
return object;}

var isSrcArr=isArrayLike(source) && (isArray(source) || isTypedArray(source)),
props=isSrcArr?undefined:keys(source);

arrayEach(props || source,function(srcValue,key){
if(props){
key = srcValue;
srcValue = source[key];}

if(isObjectLike(srcValue)){
stackA || (stackA = []);
stackB || (stackB = []);
baseMergeDeep(object,source,key,baseMerge,customizer,stackA,stackB);}else 

{
var value=object[key],
result=customizer?customizer(value,srcValue,key,object,source):undefined,
isCommon=result === undefined;

if(isCommon){
result = srcValue;}

if((result !== undefined || isSrcArr && !(key in object)) && (
isCommon || (result === result?result !== value:value === value))){
object[key] = result;}}});



return object;}

















function baseMergeDeep(object,source,key,mergeFunc,customizer,stackA,stackB){
var length=stackA.length,
srcValue=source[key];

while(length--) {
if(stackA[length] == srcValue){
object[key] = stackB[length];
return;}}


var value=object[key],
result=customizer?customizer(value,srcValue,key,object,source):undefined,
isCommon=result === undefined;

if(isCommon){
result = srcValue;
if(isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))){
result = isArray(value)?
value:
isArrayLike(value)?arrayCopy(value):[];}else 

if(isPlainObject(srcValue) || isArguments(srcValue)){
result = isArguments(value)?
toPlainObject(value):
isPlainObject(value)?value:{};}else 

{
isCommon = false;}}




stackA.push(srcValue);
stackB.push(result);

if(isCommon){

object[key] = mergeFunc(result,srcValue,customizer,stackA,stackB);}else 
if(result === result?result !== value:value === value){
object[key] = result;}}










function baseProperty(key){
return function(object){
return object == null?undefined:object[key];};}










function basePropertyDeep(path){
var pathKey=path + '';
path = toPath(path);
return function(object){
return baseGet(object,path,pathKey);};}












function basePullAt(array,indexes){
var length=array?indexes.length:0;
while(length--) {
var index=indexes[length];
if(index != previous && isIndex(index)){
var previous=index;
splice.call(array,index,1);}}


return array;}











function baseRandom(min,max){
return min + nativeFloor(nativeRandom() * (max - min + 1));}
















function baseReduce(collection,iteratee,accumulator,initFromCollection,eachFunc){
eachFunc(collection,function(value,index,collection){
accumulator = initFromCollection?(
initFromCollection = false,value):
iteratee(accumulator,value,index,collection);});

return accumulator;}










var baseSetData=!metaMap?identity:function(func,data){
metaMap.set(func,data);
return func;};











function baseSlice(array,start,end){
var index=-1,
length=array.length;

start = start == null?0:+start || 0;
if(start < 0){
start = -start > length?0:length + start;}

end = end === undefined || end > length?length:+end || 0;
if(end < 0){
end += length;}

length = start > end?0:end - start >>> 0;
start >>>= 0;

var result=Array(length);
while(++index < length) {
result[index] = array[index + start];}

return result;}












function baseSome(collection,predicate){
var result;

baseEach(collection,function(value,index,collection){
result = predicate(value,index,collection);
return !result;});

return !!result;}












function baseSortBy(array,comparer){
var length=array.length;

array.sort(comparer);
while(length--) {
array[length] = array[length].value;}

return array;}











function baseSortByOrder(collection,iteratees,orders){
var callback=getCallback(),
index=-1;

iteratees = arrayMap(iteratees,function(iteratee){return callback(iteratee);});

var result=baseMap(collection,function(value){
var criteria=arrayMap(iteratees,function(iteratee){return iteratee(value);});
return {'criteria':criteria,'index':++index,'value':value};});


return baseSortBy(result,function(object,other){
return compareMultiple(object,other,orders);});}












function baseSum(collection,iteratee){
var result=0;
baseEach(collection,function(value,index,collection){
result += +iteratee(value,index,collection) || 0;});

return result;}











function baseUniq(array,iteratee){
var index=-1,
indexOf=getIndexOf(),
length=array.length,
isCommon=indexOf == baseIndexOf,
isLarge=isCommon && length >= LARGE_ARRAY_SIZE,
seen=isLarge?createCache():null,
result=[];

if(seen){
indexOf = cacheIndexOf;
isCommon = false;}else 
{
isLarge = false;
seen = iteratee?[]:result;}

outer: 
while(++index < length) {
var value=array[index],
computed=iteratee?iteratee(value,index,array):value;

if(isCommon && value === value){
var seenIndex=seen.length;
while(seenIndex--) {
if(seen[seenIndex] === computed){
continue outer;}}


if(iteratee){
seen.push(computed);}

result.push(value);}else 

if(indexOf(seen,computed,0) < 0){
if(iteratee || isLarge){
seen.push(computed);}

result.push(value);}}


return result;}












function baseValues(object,props){
var index=-1,
length=props.length,
result=Array(length);

while(++index < length) {
result[index] = object[props[index]];}

return result;}













function baseWhile(array,predicate,isDrop,fromRight){
var length=array.length,
index=fromRight?length:-1;

while((fromRight?index--:++index < length) && predicate(array[index],index,array)) {}
return isDrop?
baseSlice(array,fromRight?0:index,fromRight?index + 1:length):
baseSlice(array,fromRight?index + 1:0,fromRight?length:index);}












function baseWrapperValue(value,actions){
var result=value;
if(result instanceof LazyWrapper){
result = result.value();}

var index=-1,
length=actions.length;

while(++index < length) {
var action=actions[index];
result = action.func.apply(action.thisArg,arrayPush([result],action.args));}

return result;}













function binaryIndex(array,value,retHighest){
var low=0,
high=array?array.length:low;

if(typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH){
while(low < high) {
var mid=low + high >>> 1,
computed=array[mid];

if((retHighest?computed <= value:computed < value) && computed !== null){
low = mid + 1;}else 
{
high = mid;}}


return high;}

return binaryIndexBy(array,value,identity,retHighest);}















function binaryIndexBy(array,value,iteratee,retHighest){
value = iteratee(value);

var low=0,
high=array?array.length:0,
valIsNaN=value !== value,
valIsNull=value === null,
valIsUndef=value === undefined;

while(low < high) {
var mid=nativeFloor((low + high) / 2),
computed=iteratee(array[mid]),
isDef=computed !== undefined,
isReflexive=computed === computed;

if(valIsNaN){
var setLow=isReflexive || retHighest;}else 
if(valIsNull){
setLow = isReflexive && isDef && (retHighest || computed != null);}else 
if(valIsUndef){
setLow = isReflexive && (retHighest || isDef);}else 
if(computed == null){
setLow = false;}else 
{
setLow = retHighest?computed <= value:computed < value;}

if(setLow){
low = mid + 1;}else 
{
high = mid;}}


return nativeMin(high,MAX_ARRAY_INDEX);}












function bindCallback(func,thisArg,argCount){
if(typeof func != 'function'){
return identity;}

if(thisArg === undefined){
return func;}

switch(argCount){
case 1:return function(value){
return func.call(thisArg,value);};

case 3:return function(value,index,collection){
return func.call(thisArg,value,index,collection);};

case 4:return function(accumulator,value,index,collection){
return func.call(thisArg,accumulator,value,index,collection);};

case 5:return function(value,other,key,object,source){
return func.call(thisArg,value,other,key,object,source);};}


return function(){
return func.apply(thisArg,arguments);};}










function bufferClone(buffer){
var result=new ArrayBuffer(buffer.byteLength),
view=new Uint8Array(result);

view.set(new Uint8Array(buffer));
return result;}












function composeArgs(args,partials,holders){
var holdersLength=holders.length,
argsIndex=-1,
argsLength=nativeMax(args.length - holdersLength,0),
leftIndex=-1,
leftLength=partials.length,
result=Array(leftLength + argsLength);

while(++leftIndex < leftLength) {
result[leftIndex] = partials[leftIndex];}

while(++argsIndex < holdersLength) {
result[holders[argsIndex]] = args[argsIndex];}

while(argsLength--) {
result[leftIndex++] = args[argsIndex++];}

return result;}












function composeArgsRight(args,partials,holders){
var holdersIndex=-1,
holdersLength=holders.length,
argsIndex=-1,
argsLength=nativeMax(args.length - holdersLength,0),
rightIndex=-1,
rightLength=partials.length,
result=Array(argsLength + rightLength);

while(++argsIndex < argsLength) {
result[argsIndex] = args[argsIndex];}

var offset=argsIndex;
while(++rightIndex < rightLength) {
result[offset + rightIndex] = partials[rightIndex];}

while(++holdersIndex < holdersLength) {
result[offset + holders[holdersIndex]] = args[argsIndex++];}

return result;}










function createAggregator(setter,initializer){
return function(collection,iteratee,thisArg){
var result=initializer?initializer():{};
iteratee = getCallback(iteratee,thisArg,3);

if(isArray(collection)){
var index=-1,
length=collection.length;

while(++index < length) {
var value=collection[index];
setter(result,value,iteratee(value,index,collection),collection);}}else 

{
baseEach(collection,function(value,key,collection){
setter(result,value,iteratee(value,key,collection),collection);});}


return result;};}










function createAssigner(assigner){
return restParam(function(object,sources){
var index=-1,
length=object == null?0:sources.length,
customizer=length > 2?sources[length - 2]:undefined,
guard=length > 2?sources[2]:undefined,
thisArg=length > 1?sources[length - 1]:undefined;

if(typeof customizer == 'function'){
customizer = bindCallback(customizer,thisArg,5);
length -= 2;}else 
{
customizer = typeof thisArg == 'function'?thisArg:undefined;
length -= customizer?1:0;}

if(guard && isIterateeCall(sources[0],sources[1],guard)){
customizer = length < 3?undefined:customizer;
length = 1;}

while(++index < length) {
var source=sources[index];
if(source){
assigner(object,source,customizer);}}


return object;});}











function createBaseEach(eachFunc,fromRight){
return function(collection,iteratee){
var length=collection?getLength(collection):0;
if(!isLength(length)){
return eachFunc(collection,iteratee);}

var index=fromRight?length:-1,
iterable=toObject(collection);

while(fromRight?index--:++index < length) {
if(iteratee(iterable[index],index,iterable) === false){
break;}}


return collection;};}










function createBaseFor(fromRight){
return function(object,iteratee,keysFunc){
var iterable=toObject(object),
props=keysFunc(object),
length=props.length,
index=fromRight?length:-1;

while(fromRight?index--:++index < length) {
var key=props[index];
if(iteratee(iterable[key],key,iterable) === false){
break;}}


return object;};}












function createBindWrapper(func,thisArg){
var Ctor=createCtorWrapper(func);

function wrapper(){
var fn=this && this !== root && this instanceof wrapper?Ctor:func;
return fn.apply(thisArg,arguments);}

return wrapper;}









function createCache(values){
return nativeCreate && Set?new SetCache(values):null;}










function createCompounder(callback){
return function(string){
var index=-1,
array=words(deburr(string)),
length=array.length,
result='';

while(++index < length) {
result = callback(result,array[index],index);}

return result;};}











function createCtorWrapper(Ctor){
return function(){



var args=arguments;
switch(args.length){
case 0:return new Ctor();
case 1:return new Ctor(args[0]);
case 2:return new Ctor(args[0],args[1]);
case 3:return new Ctor(args[0],args[1],args[2]);
case 4:return new Ctor(args[0],args[1],args[2],args[3]);
case 5:return new Ctor(args[0],args[1],args[2],args[3],args[4]);
case 6:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5]);
case 7:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);}

var thisBinding=baseCreate(Ctor.prototype),
result=Ctor.apply(thisBinding,args);



return isObject(result)?result:thisBinding;};}










function createCurry(flag){
function curryFunc(func,arity,guard){
if(guard && isIterateeCall(func,arity,guard)){
arity = undefined;}

var result=createWrapper(func,flag,undefined,undefined,undefined,undefined,undefined,arity);
result.placeholder = curryFunc.placeholder;
return result;}

return curryFunc;}










function createDefaults(assigner,customizer){
return restParam(function(args){
var object=args[0];
if(object == null){
return object;}

args.push(customizer);
return assigner.apply(undefined,args);});}











function createExtremum(comparator,exValue){
return function(collection,iteratee,thisArg){
if(thisArg && isIterateeCall(collection,iteratee,thisArg)){
iteratee = undefined;}

iteratee = getCallback(iteratee,thisArg,3);
if(iteratee.length == 1){
collection = isArray(collection)?collection:toIterable(collection);
var result=arrayExtremum(collection,iteratee,comparator,exValue);
if(!(collection.length && result === exValue)){
return result;}}


return baseExtremum(collection,iteratee,comparator,exValue);};}











function createFind(eachFunc,fromRight){
return function(collection,predicate,thisArg){
predicate = getCallback(predicate,thisArg,3);
if(isArray(collection)){
var index=baseFindIndex(collection,predicate,fromRight);
return index > -1?collection[index]:undefined;}

return baseFind(collection,predicate,eachFunc);};}










function createFindIndex(fromRight){
return function(array,predicate,thisArg){
if(!(array && array.length)){
return -1;}

predicate = getCallback(predicate,thisArg,3);
return baseFindIndex(array,predicate,fromRight);};}










function createFindKey(objectFunc){
return function(object,predicate,thisArg){
predicate = getCallback(predicate,thisArg,3);
return baseFind(object,predicate,objectFunc,true);};}










function createFlow(fromRight){
return function(){
var wrapper,
length=arguments.length,
index=fromRight?length:-1,
leftIndex=0,
funcs=Array(length);

while(fromRight?index--:++index < length) {
var func=funcs[leftIndex++] = arguments[index];
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

if(!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper'){
wrapper = new LodashWrapper([],true);}}


index = wrapper?-1:length;
while(++index < length) {
func = funcs[index];

var funcName=getFuncName(func),
data=funcName == 'wrapper'?getData(func):undefined;

if(data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1){
wrapper = wrapper[getFuncName(data[0])].apply(wrapper,data[3]);}else 
{
wrapper = func.length == 1 && isLaziable(func)?wrapper[funcName]():wrapper.thru(func);}}


return function(){
var args=arguments,
value=args[0];

if(wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE){
return wrapper.plant(value).value();}

var index=0,
result=length?funcs[index].apply(this,args):value;

while(++index < length) {
result = funcs[index].call(this,result);}

return result;};};}












function createForEach(arrayFunc,eachFunc){
return function(collection,iteratee,thisArg){
return typeof iteratee == 'function' && thisArg === undefined && isArray(collection)?
arrayFunc(collection,iteratee):
eachFunc(collection,bindCallback(iteratee,thisArg,3));};}










function createForIn(objectFunc){
return function(object,iteratee,thisArg){
if(typeof iteratee != 'function' || thisArg !== undefined){
iteratee = bindCallback(iteratee,thisArg,3);}

return objectFunc(object,iteratee,keysIn);};}










function createForOwn(objectFunc){
return function(object,iteratee,thisArg){
if(typeof iteratee != 'function' || thisArg !== undefined){
iteratee = bindCallback(iteratee,thisArg,3);}

return objectFunc(object,iteratee);};}










function createObjectMapper(isMapKeys){
return function(object,iteratee,thisArg){
var result={};
iteratee = getCallback(iteratee,thisArg,3);

baseForOwn(object,function(value,key,object){
var mapped=iteratee(value,key,object);
key = isMapKeys?mapped:key;
value = isMapKeys?value:mapped;
result[key] = value;});

return result;};}










function createPadDir(fromRight){
return function(string,length,chars){
string = baseToString(string);
return (fromRight?string:'') + createPadding(string,length,chars) + (fromRight?'':string);};}










function createPartial(flag){
var partialFunc=restParam(function(func,partials){
var holders=replaceHolders(partials,partialFunc.placeholder);
return createWrapper(func,flag,undefined,partials,holders);});

return partialFunc;}










function createReduce(arrayFunc,eachFunc){
return function(collection,iteratee,accumulator,thisArg){
var initFromArray=arguments.length < 3;
return typeof iteratee == 'function' && thisArg === undefined && isArray(collection)?
arrayFunc(collection,iteratee,accumulator,initFromArray):
baseReduce(collection,getCallback(iteratee,thisArg,4),accumulator,initFromArray,eachFunc);};}




















function createHybridWrapper(func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity){
var isAry=bitmask & ARY_FLAG,
isBind=bitmask & BIND_FLAG,
isBindKey=bitmask & BIND_KEY_FLAG,
isCurry=bitmask & CURRY_FLAG,
isCurryBound=bitmask & CURRY_BOUND_FLAG,
isCurryRight=bitmask & CURRY_RIGHT_FLAG,
Ctor=isBindKey?undefined:createCtorWrapper(func);

function wrapper(){


var length=arguments.length,
index=length,
args=Array(length);

while(index--) {
args[index] = arguments[index];}

if(partials){
args = composeArgs(args,partials,holders);}

if(partialsRight){
args = composeArgsRight(args,partialsRight,holdersRight);}

if(isCurry || isCurryRight){
var placeholder=wrapper.placeholder,
argsHolders=replaceHolders(args,placeholder);

length -= argsHolders.length;
if(length < arity){
var newArgPos=argPos?arrayCopy(argPos):undefined,
newArity=nativeMax(arity - length,0),
newsHolders=isCurry?argsHolders:undefined,
newHoldersRight=isCurry?undefined:argsHolders,
newPartials=isCurry?args:undefined,
newPartialsRight=isCurry?undefined:args;

bitmask |= isCurry?PARTIAL_FLAG:PARTIAL_RIGHT_FLAG;
bitmask &= ~(isCurry?PARTIAL_RIGHT_FLAG:PARTIAL_FLAG);

if(!isCurryBound){
bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);}

var newData=[func,bitmask,thisArg,newPartials,newsHolders,newPartialsRight,newHoldersRight,newArgPos,ary,newArity],
result=createHybridWrapper.apply(undefined,newData);

if(isLaziable(func)){
setData(result,newData);}

result.placeholder = placeholder;
return result;}}


var thisBinding=isBind?thisArg:this,
fn=isBindKey?thisBinding[func]:func;

if(argPos){
args = reorder(args,argPos);}

if(isAry && ary < args.length){
args.length = ary;}

if(this && this !== root && this instanceof wrapper){
fn = Ctor || createCtorWrapper(func);}

return fn.apply(thisBinding,args);}

return wrapper;}












function createPadding(string,length,chars){
var strLength=string.length;
length = +length;

if(strLength >= length || !nativeIsFinite(length)){
return '';}

var padLength=length - strLength;
chars = chars == null?' ':chars + '';
return repeat(chars,nativeCeil(padLength / chars.length)).slice(0,padLength);}














function createPartialWrapper(func,bitmask,thisArg,partials){
var isBind=bitmask & BIND_FLAG,
Ctor=createCtorWrapper(func);

function wrapper(){


var argsIndex=-1,
argsLength=arguments.length,
leftIndex=-1,
leftLength=partials.length,
args=Array(leftLength + argsLength);

while(++leftIndex < leftLength) {
args[leftIndex] = partials[leftIndex];}

while(argsLength--) {
args[leftIndex++] = arguments[++argsIndex];}

var fn=this && this !== root && this instanceof wrapper?Ctor:func;
return fn.apply(isBind?thisArg:this,args);}

return wrapper;}









function createRound(methodName){
var func=Math[methodName];
return function(number,precision){
precision = precision === undefined?0:+precision || 0;
if(precision){
precision = pow(10,precision);
return func(number * precision) / precision;}

return func(number);};}










function createSortedIndex(retHighest){
return function(array,value,iteratee,thisArg){
var callback=getCallback(iteratee);
return iteratee == null && callback === baseCallback?
binaryIndex(array,value,retHighest):
binaryIndexBy(array,value,callback(iteratee,thisArg,1),retHighest);};}




























function createWrapper(func,bitmask,thisArg,partials,holders,argPos,ary,arity){
var isBindKey=bitmask & BIND_KEY_FLAG;
if(!isBindKey && typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

var length=partials?partials.length:0;
if(!length){
bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
partials = holders = undefined;}

length -= holders?holders.length:0;
if(bitmask & PARTIAL_RIGHT_FLAG){
var partialsRight=partials,
holdersRight=holders;

partials = holders = undefined;}

var data=isBindKey?undefined:getData(func),
newData=[func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity];

if(data){
mergeData(newData,data);
bitmask = newData[1];
arity = newData[9];}

newData[9] = arity == null?
isBindKey?0:func.length:
nativeMax(arity - length,0) || 0;

if(bitmask == BIND_FLAG){
var result=createBindWrapper(newData[0],newData[2]);}else 
if((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length){
result = createPartialWrapper.apply(undefined,newData);}else 
{
result = createHybridWrapper.apply(undefined,newData);}

var setter=data?baseSetData:setData;
return setter(result,newData);}
















function equalArrays(array,other,equalFunc,customizer,isLoose,stackA,stackB){
var index=-1,
arrLength=array.length,
othLength=other.length;

if(arrLength != othLength && !(isLoose && othLength > arrLength)){
return false;}


while(++index < arrLength) {
var arrValue=array[index],
othValue=other[index],
result=customizer?customizer(isLoose?othValue:arrValue,isLoose?arrValue:othValue,index):undefined;

if(result !== undefined){
if(result){
continue;}

return false;}


if(isLoose){
if(!arraySome(other,function(othValue){
return arrValue === othValue || equalFunc(arrValue,othValue,customizer,isLoose,stackA,stackB);}))
{
return false;}}else 

if(!(arrValue === othValue || equalFunc(arrValue,othValue,customizer,isLoose,stackA,stackB))){
return false;}}


return true;}















function equalByTag(object,other,tag){
switch(tag){
case boolTag:
case dateTag:


return +object == +other;

case errorTag:
return object.name == other.name && object.message == other.message;

case numberTag:

return object != +object?
other != +other:
object == +other;

case regexpTag:
case stringTag:


return object == other + '';}

return false;}
















function equalObjects(object,other,equalFunc,customizer,isLoose,stackA,stackB){
var objProps=keys(object),
objLength=objProps.length,
othProps=keys(other),
othLength=othProps.length;

if(objLength != othLength && !isLoose){
return false;}

var index=objLength;
while(index--) {
var key=objProps[index];
if(!(isLoose?key in other:hasOwnProperty.call(other,key))){
return false;}}


var skipCtor=isLoose;
while(++index < objLength) {
key = objProps[index];
var objValue=object[key],
othValue=other[key],
result=customizer?customizer(isLoose?othValue:objValue,isLoose?objValue:othValue,key):undefined;


if(!(result === undefined?equalFunc(objValue,othValue,customizer,isLoose,stackA,stackB):result)){
return false;}

skipCtor || (skipCtor = key == 'constructor');}

if(!skipCtor){
var objCtor=object.constructor,
othCtor=other.constructor;


if(objCtor != othCtor && (
'constructor' in object && 'constructor' in other) && 
!(typeof objCtor == 'function' && objCtor instanceof objCtor && 
typeof othCtor == 'function' && othCtor instanceof othCtor)){
return false;}}


return true;}











function getCallback(func,thisArg,argCount){
var result=lodash.callback || callback;
result = result === callback?baseCallback:result;
return argCount?result(func,thisArg,argCount):result;}









var getData=!metaMap?noop:function(func){
return metaMap.get(func);};









function getFuncName(func){
var result=func.name,
array=realNames[result],
length=array?array.length:0;

while(length--) {
var data=array[length],
otherFunc=data.func;
if(otherFunc == null || otherFunc == func){
return data.name;}}


return result;}











function getIndexOf(collection,target,fromIndex){
var result=lodash.indexOf || indexOf;
result = result === indexOf?baseIndexOf:result;
return collection?result(collection,target,fromIndex):result;}












var getLength=baseProperty('length');








function getMatchData(object){
var result=pairs(object),
length=result.length;

while(length--) {
result[length][2] = isStrictComparable(result[length][1]);}

return result;}










function getNative(object,key){
var value=object == null?undefined:object[key];
return isNative(value)?value:undefined;}












function getView(start,end,transforms){
var index=-1,
length=transforms.length;

while(++index < length) {
var data=transforms[index],
size=data.size;

switch(data.type){
case 'drop':start += size;break;
case 'dropRight':end -= size;break;
case 'take':end = nativeMin(end,start + size);break;
case 'takeRight':start = nativeMax(start,end - size);break;}}


return {'start':start,'end':end};}









function initCloneArray(array){
var length=array.length,
result=new array.constructor(length);


if(length && typeof array[0] == 'string' && hasOwnProperty.call(array,'index')){
result.index = array.index;
result.input = array.input;}

return result;}









function initCloneObject(object){
var Ctor=object.constructor;
if(!(typeof Ctor == 'function' && Ctor instanceof Ctor)){
Ctor = Object;}

return new Ctor();}














function initCloneByTag(object,tag,isDeep){
var Ctor=object.constructor;
switch(tag){
case arrayBufferTag:
return bufferClone(object);

case boolTag:
case dateTag:
return new Ctor(+object);

case float32Tag:case float64Tag:
case int8Tag:case int16Tag:case int32Tag:
case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:
var buffer=object.buffer;
return new Ctor(isDeep?bufferClone(buffer):buffer,object.byteOffset,object.length);

case numberTag:
case stringTag:
return new Ctor(object);

case regexpTag:
var result=new Ctor(object.source,reFlags.exec(object));
result.lastIndex = object.lastIndex;}

return result;}











function invokePath(object,path,args){
if(object != null && !isKey(path,object)){
path = toPath(path);
object = path.length == 1?object:baseGet(object,baseSlice(path,0,-1));
path = last(path);}

var func=object == null?object:object[path];
return func == null?undefined:func.apply(object,args);}









function isArrayLike(value){
return value != null && isLength(getLength(value));}










function isIndex(value,length){
value = typeof value == 'number' || reIsUint.test(value)?+value:-1;
length = length == null?MAX_SAFE_INTEGER:length;
return value > -1 && value % 1 == 0 && value < length;}











function isIterateeCall(value,index,object){
if(!isObject(object)){
return false;}

var type=typeof index;
if(type == 'number'?
isArrayLike(object) && isIndex(index,object.length):
type == 'string' && index in object){
var other=object[index];
return value === value?value === other:other !== other;}

return false;}










function isKey(value,object){
var type=typeof value;
if(type == 'string' && reIsPlainProp.test(value) || type == 'number'){
return true;}

if(isArray(value)){
return false;}

var result=!reIsDeepProp.test(value);
return result || object != null && value in toObject(object);}









function isLaziable(func){
var funcName=getFuncName(func);
if(!(funcName in LazyWrapper.prototype)){
return false;}

var other=lodash[funcName];
if(func === other){
return true;}

var data=getData(other);
return !!data && func === data[0];}











function isLength(value){
return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;}










function isStrictComparable(value){
return value === value && !isObject(value);}

















function mergeData(data,source){
var bitmask=data[1],
srcBitmask=source[1],
newBitmask=bitmask | srcBitmask,
isCommon=newBitmask < ARY_FLAG;

var isCombo=
srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG || 
srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8] || 
srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG;


if(!(isCommon || isCombo)){
return data;}


if(srcBitmask & BIND_FLAG){
data[2] = source[2];

newBitmask |= bitmask & BIND_FLAG?0:CURRY_BOUND_FLAG;}


var value=source[3];
if(value){
var partials=data[3];
data[3] = partials?composeArgs(partials,value,source[4]):arrayCopy(value);
data[4] = partials?replaceHolders(data[3],PLACEHOLDER):arrayCopy(source[4]);}


value = source[5];
if(value){
partials = data[5];
data[5] = partials?composeArgsRight(partials,value,source[6]):arrayCopy(value);
data[6] = partials?replaceHolders(data[5],PLACEHOLDER):arrayCopy(source[6]);}


value = source[7];
if(value){
data[7] = arrayCopy(value);}


if(srcBitmask & ARY_FLAG){
data[8] = data[8] == null?source[8]:nativeMin(data[8],source[8]);}


if(data[9] == null){
data[9] = source[9];}


data[0] = source[0];
data[1] = newBitmask;

return data;}










function mergeDefaults(objectValue,sourceValue){
return objectValue === undefined?sourceValue:merge(objectValue,sourceValue,mergeDefaults);}











function pickByArray(object,props){
object = toObject(object);

var index=-1,
length=props.length,
result={};

while(++index < length) {
var key=props[index];
if(key in object){
result[key] = object[key];}}


return result;}











function pickByCallback(object,predicate){
var result={};
baseForIn(object,function(value,key,object){
if(predicate(value,key,object)){
result[key] = value;}});


return result;}












function reorder(array,indexes){
var arrLength=array.length,
length=nativeMin(indexes.length,arrLength),
oldArray=arrayCopy(array);

while(length--) {
var index=indexes[length];
array[length] = isIndex(index,arrLength)?oldArray[index]:undefined;}

return array;}















var setData=(function(){
var count=0,
lastCalled=0;

return function(key,value){
var stamp=now(),
remaining=HOT_SPAN - (stamp - lastCalled);

lastCalled = stamp;
if(remaining > 0){
if(++count >= HOT_COUNT){
return key;}}else 

{
count = 0;}

return baseSetData(key,value);};})();











function shimKeys(object){
var props=keysIn(object),
propsLength=props.length,
length=propsLength && object.length;

var allowIndexes=!!length && isLength(length) && (
isArray(object) || isArguments(object));

var index=-1,
result=[];

while(++index < propsLength) {
var key=props[index];
if(allowIndexes && isIndex(key,length) || hasOwnProperty.call(object,key)){
result.push(key);}}


return result;}









function toIterable(value){
if(value == null){
return [];}

if(!isArrayLike(value)){
return values(value);}

return isObject(value)?value:Object(value);}









function toObject(value){
return isObject(value)?value:Object(value);}









function toPath(value){
if(isArray(value)){
return value;}

var result=[];
baseToString(value).replace(rePropName,function(match,number,quote,string){
result.push(quote?string.replace(reEscapeChar,'$1'):number || match);});

return result;}









function wrapperClone(wrapper){
return wrapper instanceof LazyWrapper?
wrapper.clone():
new LodashWrapper(wrapper.__wrapped__,wrapper.__chain__,arrayCopy(wrapper.__actions__));}
























function chunk(array,size,guard){
if(guard?isIterateeCall(array,size,guard):size == null){
size = 1;}else 
{
size = nativeMax(nativeFloor(size) || 1,1);}

var index=0,
length=array?array.length:0,
resIndex=-1,
result=Array(nativeCeil(length / size));

while(index < length) {
result[++resIndex] = baseSlice(array,index,index += size);}

return result;}
















function compact(array){
var index=-1,
length=array?array.length:0,
resIndex=-1,
result=[];

while(++index < length) {
var value=array[index];
if(value){
result[++resIndex] = value;}}


return result;}


















var difference=restParam(function(array,values){
return isObjectLike(array) && isArrayLike(array)?
baseDifference(array,baseFlatten(values,false,true)):
[];});


























function drop(array,n,guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array,n,guard):n == null){
n = 1;}

return baseSlice(array,n < 0?0:n);}


























function dropRight(array,n,guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array,n,guard):n == null){
n = 1;}

n = length - (+n || 0);
return baseSlice(array,0,n < 0?0:n);}



















































function dropRightWhile(array,predicate,thisArg){
return array && array.length?
baseWhile(array,getCallback(predicate,thisArg,3),true,true):
[];}



















































function dropWhile(array,predicate,thisArg){
return array && array.length?
baseWhile(array,getCallback(predicate,thisArg,3),true):
[];}






























function fill(array,value,start,end){
var length=array?array.length:0;
if(!length){
return [];}

if(start && typeof start != 'number' && isIterateeCall(array,value,start)){
start = 0;
end = length;}

return baseFill(array,value,start,end);}


















































var findIndex=createFindIndex();

















































var findLastIndex=createFindIndex(true);


















function first(array){
return array?array[0]:undefined;}






















function flatten(array,isDeep,guard){
var length=array?array.length:0;
if(guard && isIterateeCall(array,isDeep,guard)){
isDeep = false;}

return length?baseFlatten(array,isDeep):[];}















function flattenDeep(array){
var length=array?array.length:0;
return length?baseFlatten(array,true):[];}






























function indexOf(array,value,fromIndex){
var length=array?array.length:0;
if(!length){
return -1;}

if(typeof fromIndex == 'number'){
fromIndex = fromIndex < 0?nativeMax(length + fromIndex,0):fromIndex;}else 
if(fromIndex){
var index=binaryIndex(array,value);
if(index < length && (
value === value?value === array[index]:array[index] !== array[index])){
return index;}

return -1;}

return baseIndexOf(array,value,fromIndex || 0);}















function initial(array){
return dropRight(array,1);}
















var intersection=restParam(function(arrays){
var othLength=arrays.length,
othIndex=othLength,
caches=Array(length),
indexOf=getIndexOf(),
isCommon=indexOf == baseIndexOf,
result=[];

while(othIndex--) {
var value=arrays[othIndex] = isArrayLike(value = arrays[othIndex])?value:[];
caches[othIndex] = isCommon && value.length >= 120?createCache(othIndex && value):null;}

var array=arrays[0],
index=-1,
length=array?array.length:0,
seen=caches[0];

outer: 
while(++index < length) {
value = array[index];
if((seen?cacheIndexOf(seen,value):indexOf(result,value,0)) < 0){
var othIndex=othLength;
while(--othIndex) {
var cache=caches[othIndex];
if((cache?cacheIndexOf(cache,value):indexOf(arrays[othIndex],value,0)) < 0){
continue outer;}}


if(seen){
seen.push(value);}

result.push(value);}}


return result;});















function last(array){
var length=array?array.length:0;
return length?array[length - 1]:undefined;}



























function lastIndexOf(array,value,fromIndex){
var length=array?array.length:0;
if(!length){
return -1;}

var index=length;
if(typeof fromIndex == 'number'){
index = (fromIndex < 0?nativeMax(length + fromIndex,0):nativeMin(fromIndex || 0,length - 1)) + 1;}else 
if(fromIndex){
index = binaryIndex(array,value,true) - 1;
var other=array[index];
if(value === value?value === other:other !== other){
return index;}

return -1;}

if(value !== value){
return indexOfNaN(array,index,true);}

while(index--) {
if(array[index] === value){
return index;}}


return -1;}























function pull(){
var args=arguments,
array=args[0];

if(!(array && array.length)){
return array;}

var index=0,
indexOf=getIndexOf(),
length=args.length;

while(++index < length) {
var fromIndex=0,
value=args[index];

while((fromIndex = indexOf(array,value,fromIndex)) > -1) {
splice.call(array,fromIndex,1);}}


return array;}



























var pullAt=restParam(function(array,indexes){
indexes = baseFlatten(indexes);

var result=baseAt(array,indexes);
basePullAt(array,indexes.sort(baseCompareAscending));
return result;});









































function remove(array,predicate,thisArg){
var result=[];
if(!(array && array.length)){
return result;}

var index=-1,
indexes=[],
length=array.length;

predicate = getCallback(predicate,thisArg,3);
while(++index < length) {
var value=array[index];
if(predicate(value,index,array)){
result.push(value);
indexes.push(index);}}


basePullAt(array,indexes);
return result;}
















function rest(array){
return drop(array,1);}
















function slice(array,start,end){
var length=array?array.length:0;
if(!length){
return [];}

if(end && typeof end != 'number' && isIterateeCall(array,start,end)){
start = 0;
end = length;}

return baseSlice(array,start,end);}


















































var sortedIndex=createSortedIndex();





















var sortedLastIndex=createSortedIndex(true);

























function take(array,n,guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array,n,guard):n == null){
n = 1;}

return baseSlice(array,0,n < 0?0:n);}


























function takeRight(array,n,guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array,n,guard):n == null){
n = 1;}

n = length - (+n || 0);
return baseSlice(array,n < 0?0:n);}



















































function takeRightWhile(array,predicate,thisArg){
return array && array.length?
baseWhile(array,getCallback(predicate,thisArg,3),false,true):
[];}



















































function takeWhile(array,predicate,thisArg){
return array && array.length?
baseWhile(array,getCallback(predicate,thisArg,3)):
[];}

















var union=restParam(function(arrays){
return baseUniq(baseFlatten(arrays,false,true));});



















































function uniq(array,isSorted,iteratee,thisArg){
var length=array?array.length:0;
if(!length){
return [];}

if(isSorted != null && typeof isSorted != 'boolean'){
thisArg = iteratee;
iteratee = isIterateeCall(array,isSorted,thisArg)?undefined:isSorted;
isSorted = false;}

var callback=getCallback();
if(!(iteratee == null && callback === baseCallback)){
iteratee = callback(iteratee,thisArg,3);}

return isSorted && getIndexOf() == baseIndexOf?
sortedUniq(array,iteratee):
baseUniq(array,iteratee);}




















function unzip(array){
if(!(array && array.length)){
return [];}

var index=-1,
length=0;

array = arrayFilter(array,function(group){
if(isArrayLike(group)){
length = nativeMax(group.length,length);
return true;}});


var result=Array(length);
while(++index < length) {
result[index] = arrayMap(array,baseProperty(index));}

return result;}






















function unzipWith(array,iteratee,thisArg){
var length=array?array.length:0;
if(!length){
return [];}

var result=unzip(array);
if(iteratee == null){
return result;}

iteratee = bindCallback(iteratee,thisArg,4);
return arrayMap(result,function(group){
return arrayReduce(group,iteratee,undefined,true);});}



















var without=restParam(function(array,values){
return isArrayLike(array)?
baseDifference(array,values):
[];});
















function xor(){
var index=-1,
length=arguments.length;

while(++index < length) {
var array=arguments[index];
if(isArrayLike(array)){
var result=result?
arrayPush(baseDifference(result,array),baseDifference(array,result)):
array;}}


return result?baseUniq(result):[];}

















var zip=restParam(unzip);






















function zipObject(props,values){
var index=-1,
length=props?props.length:0,
result={};

if(length && !values && !isArray(props[0])){
values = [];}

while(++index < length) {
var key=props[index];
if(values){
result[key] = values[index];}else 
if(key){
result[key[0]] = key[1];}}


return result;}



















var zipWith=restParam(function(arrays){
var length=arrays.length,
iteratee=length > 2?arrays[length - 2]:undefined,
thisArg=length > 1?arrays[length - 1]:undefined;

if(length > 2 && typeof iteratee == 'function'){
length -= 2;}else 
{
iteratee = length > 1 && typeof thisArg == 'function'?(--length,thisArg):undefined;
thisArg = undefined;}

arrays.length = length;
return unzipWith(arrays,iteratee,thisArg);});






























function chain(value){
var result=lodash(value);
result.__chain__ = true;
return result;}

























function tap(value,interceptor,thisArg){
interceptor.call(thisArg,value);
return value;}























function thru(value,interceptor,thisArg){
return interceptor.call(thisArg,value);}



























function wrapperChain(){
return chain(this);}



























function wrapperCommit(){
return new LodashWrapper(this.value(),this.__chain__);}






















var wrapperConcat=restParam(function(values){
values = baseFlatten(values);
return this.thru(function(array){
return arrayConcat(isArray(array)?array:[toObject(array)],values);});});


























function wrapperPlant(value){
var result,
parent=this;

while(parent instanceof baseLodash) {
var clone=wrapperClone(parent);
if(result){
previous.__wrapped__ = clone;}else 
{
result = clone;}

var previous=clone;
parent = parent.__wrapped__;}

previous.__wrapped__ = value;
return result;}






















function wrapperReverse(){
var value=this.__wrapped__;

var interceptor=function(value){
return wrapped && wrapped.__dir__ < 0?value:value.reverse();};

if(value instanceof LazyWrapper){
var wrapped=value;
if(this.__actions__.length){
wrapped = new LazyWrapper(this);}

wrapped = wrapped.reverse();
wrapped.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined});
return new LodashWrapper(wrapped,this.__chain__);}

return this.thru(interceptor);}














function wrapperToString(){
return this.value() + '';}















function wrapperValue(){
return baseWrapperValue(this.__wrapped__,this.__actions__);}
























var at=restParam(function(collection,props){
return baseAt(collection,baseFlatten(props));});











































var countBy=createAggregator(function(result,value,key){
hasOwnProperty.call(result,key)?++result[key]:result[key] = 1;});


















































function every(collection,predicate,thisArg){
var func=isArray(collection)?arrayEvery:baseEvery;
if(thisArg && isIterateeCall(collection,predicate,thisArg)){
predicate = undefined;}

if(typeof predicate != 'function' || thisArg !== undefined){
predicate = getCallback(predicate,thisArg,3);}

return func(collection,predicate);}



















































function filter(collection,predicate,thisArg){
var func=isArray(collection)?arrayFilter:baseFilter;
predicate = getCallback(predicate,thisArg,3);
return func(collection,predicate);}




















































var find=createFind(baseEach);




















var findLast=createFind(baseEachRight,true);






























function findWhere(collection,source){
return find(collection,baseMatches(source));}
































var forEach=createForEach(arrayEach,baseEach);




















var forEachRight=createForEach(arrayEachRight,baseEachRight);











































var groupBy=createAggregator(function(result,value,key){
if(hasOwnProperty.call(result,key)){
result[key].push(value);}else 
{
result[key] = [value];}});
































function includes(collection,target,fromIndex,guard){
var length=collection?getLength(collection):0;
if(!isLength(length)){
collection = values(collection);
length = collection.length;}

if(typeof fromIndex != 'number' || guard && isIterateeCall(target,fromIndex,guard)){
fromIndex = 0;}else 
{
fromIndex = fromIndex < 0?nativeMax(length + fromIndex,0):fromIndex || 0;}

return typeof collection == 'string' || !isArray(collection) && isString(collection)?
fromIndex <= length && collection.indexOf(target,fromIndex) > -1:
!!length && getIndexOf(collection,target,fromIndex) > -1;}
















































var indexBy=createAggregator(function(result,value,key){
result[key] = value;});
























var invoke=restParam(function(collection,path,args){
var index=-1,
isFunc=typeof path == 'function',
isProp=isKey(path),
result=isArrayLike(collection)?Array(collection.length):[];

baseEach(collection,function(value){
var func=isFunc?path:isProp && value != null?value[path]:undefined;
result[++index] = func?func.apply(value,args):invokePath(value,path,args);});

return result;});


























































function map(collection,iteratee,thisArg){
var func=isArray(collection)?arrayMap:baseMap;
iteratee = getCallback(iteratee,thisArg,3);
return func(collection,iteratee);}





























































var partition=createAggregator(function(result,value,key){
result[key?0:1].push(value);},
function(){return [[],[]];});
























function pluck(collection,path){
return map(collection,property(path));}







































var reduce=createReduce(arrayReduce,baseEach);























var reduceRight=createReduce(arrayReduceRight,baseEachRight);





































function reject(collection,predicate,thisArg){
var func=isArray(collection)?arrayFilter:baseFilter;
predicate = getCallback(predicate,thisArg,3);
return func(collection,function(value,index,collection){
return !predicate(value,index,collection);});}





















function sample(collection,n,guard){
if(guard?isIterateeCall(collection,n,guard):n == null){
collection = toIterable(collection);
var length=collection.length;
return length > 0?collection[baseRandom(0,length - 1)]:undefined;}

var index=-1,
result=toArray(collection),
length=result.length,
lastIndex=length - 1;

n = nativeMin(n < 0?0:+n || 0,length);
while(++index < n) {
var rand=baseRandom(index,lastIndex),
value=result[rand];

result[rand] = result[index];
result[index] = value;}

result.length = n;
return result;}
















function shuffle(collection){
return sample(collection,POSITIVE_INFINITY);}






















function size(collection){
var length=collection?getLength(collection):0;
return isLength(length)?length:keys(collection).length;}



















































function some(collection,predicate,thisArg){
var func=isArray(collection)?arraySome:baseSome;
if(thisArg && isIterateeCall(collection,predicate,thisArg)){
predicate = undefined;}

if(typeof predicate != 'function' || thisArg !== undefined){
predicate = getCallback(predicate,thisArg,3);}

return func(collection,predicate);}


















































function sortBy(collection,iteratee,thisArg){
if(collection == null){
return [];}

if(thisArg && isIterateeCall(collection,iteratee,thisArg)){
iteratee = undefined;}

var index=-1;
iteratee = getCallback(iteratee,thisArg,3);

var result=baseMap(collection,function(value,key,collection){
return {'criteria':iteratee(value,key,collection),'index':++index,'value':value};});

return baseSortBy(result,compareAscending);}





































var sortByAll=restParam(function(collection,iteratees){
if(collection == null){
return [];}

var guard=iteratees[2];
if(guard && isIterateeCall(iteratees[0],iteratees[1],guard)){
iteratees.length = 1;}

return baseSortByOrder(collection,baseFlatten(iteratees),[]);});




































function sortByOrder(collection,iteratees,orders,guard){
if(collection == null){
return [];}

if(guard && isIterateeCall(iteratees,orders,guard)){
orders = undefined;}

if(!isArray(iteratees)){
iteratees = iteratees == null?[]:[iteratees];}

if(!isArray(orders)){
orders = orders == null?[]:[orders];}

return baseSortByOrder(collection,iteratees,orders);}































function where(collection,source){
return filter(collection,baseMatches(source));}


















var now=nativeNow || function(){
return new Date().getTime();};



























function after(n,func){
if(typeof func != 'function'){
if(typeof n == 'function'){
var temp=n;
n = func;
func = temp;}else 
{
throw new TypeError(FUNC_ERROR_TEXT);}}


n = nativeIsFinite(n = +n)?n:0;
return function(){
if(--n < 1){
return func.apply(this,arguments);}};}




















function ary(func,n,guard){
if(guard && isIterateeCall(func,n,guard)){
n = undefined;}

n = func && n == null?func.length:nativeMax(+n || 0,0);
return createWrapper(func,ARY_FLAG,undefined,undefined,undefined,undefined,n);}


















function before(n,func){
var result;
if(typeof func != 'function'){
if(typeof n == 'function'){
var temp=n;
n = func;
func = temp;}else 
{
throw new TypeError(FUNC_ERROR_TEXT);}}


return function(){
if(--n > 0){
result = func.apply(this,arguments);}

if(n <= 1){
func = undefined;}

return result;};}






































var bind=restParam(function(func,thisArg,partials){
var bitmask=BIND_FLAG;
if(partials.length){
var holders=replaceHolders(partials,bind.placeholder);
bitmask |= PARTIAL_FLAG;}

return createWrapper(func,bitmask,thisArg,partials,holders);});






























var bindAll=restParam(function(object,methodNames){
methodNames = methodNames.length?baseFlatten(methodNames):functions(object);

var index=-1,
length=methodNames.length;

while(++index < length) {
var key=methodNames[index];
object[key] = createWrapper(object[key],BIND_FLAG,object);}

return object;});














































var bindKey=restParam(function(object,key,partials){
var bitmask=BIND_FLAG | BIND_KEY_FLAG;
if(partials.length){
var holders=replaceHolders(partials,bindKey.placeholder);
bitmask |= PARTIAL_FLAG;}

return createWrapper(key,bitmask,object,partials,holders);});










































var curry=createCurry(CURRY_FLAG);






































var curryRight=createCurry(CURRY_RIGHT_FLAG);
































































function debounce(func,wait,options){
var args,
maxTimeoutId,
result,
stamp,
thisArg,
timeoutId,
trailingCall,
lastCalled=0,
maxWait=false,
trailing=true;

if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

wait = wait < 0?0:+wait || 0;
if(options === true){
var leading=true;
trailing = false;}else 
if(isObject(options)){
leading = !!options.leading;
maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0,wait);
trailing = 'trailing' in options?!!options.trailing:trailing;}


function cancel(){
if(timeoutId){
clearTimeout(timeoutId);}

if(maxTimeoutId){
clearTimeout(maxTimeoutId);}

lastCalled = 0;
maxTimeoutId = timeoutId = trailingCall = undefined;}


function complete(isCalled,id){
if(id){
clearTimeout(id);}

maxTimeoutId = timeoutId = trailingCall = undefined;
if(isCalled){
lastCalled = now();
result = func.apply(thisArg,args);
if(!timeoutId && !maxTimeoutId){
args = thisArg = undefined;}}}




function delayed(){
var remaining=wait - (now() - stamp);
if(remaining <= 0 || remaining > wait){
complete(trailingCall,maxTimeoutId);}else 
{
timeoutId = setTimeout(delayed,remaining);}}



function maxDelayed(){
complete(trailing,timeoutId);}


function debounced(){
args = arguments;
stamp = now();
thisArg = this;
trailingCall = trailing && (timeoutId || !leading);

if(maxWait === false){
var leadingCall=leading && !timeoutId;}else 
{
if(!maxTimeoutId && !leading){
lastCalled = stamp;}

var remaining=maxWait - (stamp - lastCalled),
isCalled=remaining <= 0 || remaining > maxWait;

if(isCalled){
if(maxTimeoutId){
maxTimeoutId = clearTimeout(maxTimeoutId);}

lastCalled = stamp;
result = func.apply(thisArg,args);}else 

if(!maxTimeoutId){
maxTimeoutId = setTimeout(maxDelayed,remaining);}}


if(isCalled && timeoutId){
timeoutId = clearTimeout(timeoutId);}else 

if(!timeoutId && wait !== maxWait){
timeoutId = setTimeout(delayed,wait);}

if(leadingCall){
isCalled = true;
result = func.apply(thisArg,args);}

if(isCalled && !timeoutId && !maxTimeoutId){
args = thisArg = undefined;}

return result;}

debounced.cancel = cancel;
return debounced;}



















var defer=restParam(function(func,args){
return baseDelay(func,1,args);});




















var delay=restParam(function(func,wait,args){
return baseDelay(func,wait,args);});






















var flow=createFlow();





















var flowRight=createFlow(true);




















































function memoize(func,resolver){
if(typeof func != 'function' || resolver && typeof resolver != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

var memoized=function(){
var args=arguments,
key=resolver?resolver.apply(this,args):args[0],
cache=memoized.cache;

if(cache.has(key)){
return cache.get(key);}

var result=func.apply(this,args);
memoized.cache = cache.set(key,result);
return result;};

memoized.cache = new memoize.Cache();
return memoized;}

































var modArgs=restParam(function(func,transforms){
transforms = baseFlatten(transforms);
if(typeof func != 'function' || !arrayEvery(transforms,baseIsFunction)){
throw new TypeError(FUNC_ERROR_TEXT);}

var length=transforms.length;
return restParam(function(args){
var index=nativeMin(args.length,length);
while(index--) {
args[index] = transforms[index](args[index]);}

return func.apply(this,args);});});






















function negate(predicate){
if(typeof predicate != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

return function(){
return !predicate.apply(this,arguments);};}




















function once(func){
return before(2,func);}


































var partial=createPartial(PARTIAL_FLAG);
































var partialRight=createPartial(PARTIAL_RIGHT_FLAG);





























var rearg=restParam(function(func,indexes){
return createWrapper(func,REARG_FLAG,undefined,undefined,undefined,baseFlatten(indexes));});
























function restParam(func,start){
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

start = nativeMax(start === undefined?func.length - 1:+start || 0,0);
return function(){
var args=arguments,
index=-1,
length=nativeMax(args.length - start,0),
rest=Array(length);

while(++index < length) {
rest[index] = args[start + index];}

switch(start){
case 0:return func.call(this,rest);
case 1:return func.call(this,args[0],rest);
case 2:return func.call(this,args[0],args[1],rest);}

var otherArgs=Array(start + 1);
index = -1;
while(++index < start) {
otherArgs[index] = args[index];}

otherArgs[start] = rest;
return func.apply(this,otherArgs);};}


































function spread(func){
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

return function(array){
return func.apply(this,array);};}










































function throttle(func,wait,options){
var leading=true,
trailing=true;

if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

if(options === false){
leading = false;}else 
if(isObject(options)){
leading = 'leading' in options?!!options.leading:leading;
trailing = 'trailing' in options?!!options.trailing:trailing;}

return debounce(func,wait,{'leading':leading,'maxWait':+wait,'trailing':trailing});}























function wrap(value,wrapper){
wrapper = wrapper == null?identity:wrapper;
return createWrapper(wrapper,PARTIAL_FLAG,undefined,[value],[]);}























































function clone(value,isDeep,customizer,thisArg){
if(isDeep && typeof isDeep != 'boolean' && isIterateeCall(value,isDeep,customizer)){
isDeep = false;}else 

if(typeof isDeep == 'function'){
thisArg = customizer;
customizer = isDeep;
isDeep = false;}

return typeof customizer == 'function'?
baseClone(value,isDeep,bindCallback(customizer,thisArg,1)):
baseClone(value,isDeep);}















































function cloneDeep(value,customizer,thisArg){
return typeof customizer == 'function'?
baseClone(value,true,bindCallback(customizer,thisArg,1)):
baseClone(value,true);}






















function gt(value,other){
return value > other;}






















function gte(value,other){
return value >= other;}


















function isArguments(value){
return isObjectLike(value) && isArrayLike(value) && 
hasOwnProperty.call(value,'callee') && !propertyIsEnumerable.call(value,'callee');}


















var isArray=nativeIsArray || function(value){
return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;};


















function isBoolean(value){
return value === true || value === false || isObjectLike(value) && objToString.call(value) == boolTag;}


















function isDate(value){
return isObjectLike(value) && objToString.call(value) == dateTag;}


















function isElement(value){
return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);}





























function isEmpty(value){
if(value == null){
return true;}

if(isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) || 
isObjectLike(value) && isFunction(value.splice))){
return !value.length;}

return !keys(value).length;}














































function isEqual(value,other,customizer,thisArg){
customizer = typeof customizer == 'function'?bindCallback(customizer,thisArg,3):undefined;
var result=customizer?customizer(value,other):undefined;
return result === undefined?baseIsEqual(value,other,customizer):!!result;}



















function isError(value){
return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;}





























function isFinite(value){
return typeof value == 'number' && nativeIsFinite(value);}


















function isFunction(value){



return isObject(value) && objToString.call(value) == funcTag;}






















function isObject(value){


var type=typeof value;
return !!value && (type == 'object' || type == 'function');}









































function isMatch(object,source,customizer,thisArg){
customizer = typeof customizer == 'function'?bindCallback(customizer,thisArg,3):undefined;
return baseIsMatch(object,getMatchData(source),customizer);}



























function isNaN(value){


return isNumber(value) && value != +value;}


















function isNative(value){
if(value == null){
return false;}

if(isFunction(value)){
return reIsNative.test(fnToString.call(value));}

return isObjectLike(value) && reIsHostCtor.test(value);}


















function isNull(value){
return value === null;}
























function isNumber(value){
return typeof value == 'number' || isObjectLike(value) && objToString.call(value) == numberTag;}
































function isPlainObject(value){
var Ctor;


if(!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) || 
!hasOwnProperty.call(value,'constructor') && (Ctor = value.constructor,typeof Ctor == 'function' && !(Ctor instanceof Ctor))){
return false;}




var result;



baseForIn(value,function(subValue,key){
result = key;});

return result === undefined || hasOwnProperty.call(value,result);}


















function isRegExp(value){
return isObject(value) && objToString.call(value) == regexpTag;}


















function isString(value){
return typeof value == 'string' || isObjectLike(value) && objToString.call(value) == stringTag;}


















function isTypedArray(value){
return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];}


















function isUndefined(value){
return value === undefined;}






















function lt(value,other){
return value < other;}






















function lte(value,other){
return value <= other;}

















function toArray(value){
var length=value?getLength(value):0;
if(!isLength(length)){
return values(value);}

if(!length){
return [];}

return arrayCopy(value);}

























function toPlainObject(value){
return baseCopy(value,keysIn(value));}




















































var merge=createAssigner(baseMerge);

































var assign=createAssigner(function(object,source,customizer){
return customizer?
assignWith(object,source,customizer):
baseAssign(object,source);});




































function create(prototype,properties,guard){
var result=baseCreate(prototype);
if(guard && isIterateeCall(prototype,properties,guard)){
properties = undefined;}

return properties?baseAssign(result,properties):result;}




















var defaults=createDefaults(assign,assignDefaults);



















var defaultsDeep=createDefaults(merge,mergeDefaults);

















































var findKey=createFindKey(baseForOwn);

















































var findLastKey=createFindKey(baseForOwnRight);




























var forIn=createForIn(baseFor);


























var forInRight=createForIn(baseForRight);




























var forOwn=createForOwn(baseForOwn);


























var forOwnRight=createForOwn(baseForOwnRight);
















function functions(object){
return baseFunctions(object,keysIn(object));}


























function get(object,path,defaultValue){
var result=object == null?undefined:baseGet(object,toPath(path),path + '');
return result === undefined?defaultValue:result;}
























function has(object,path){
if(object == null){
return false;}

var result=hasOwnProperty.call(object,path);
if(!result && !isKey(path)){
path = toPath(path);
object = path.length == 1?object:baseGet(object,baseSlice(path,0,-1));
if(object == null){
return false;}

path = last(path);
result = hasOwnProperty.call(object,path);}

return result || isLength(object.length) && isIndex(path,object.length) && (
isArray(object) || isArguments(object));}

























function invert(object,multiValue,guard){
if(guard && isIterateeCall(object,multiValue,guard)){
multiValue = undefined;}

var index=-1,
props=keys(object),
length=props.length,
result={};

while(++index < length) {
var key=props[index],
value=object[key];

if(multiValue){
if(hasOwnProperty.call(result,value)){
result[value].push(key);}else 
{
result[value] = [key];}}else 


{
result[value] = key;}}


return result;}





























var keys=!nativeKeys?shimKeys:function(object){
var Ctor=object == null?undefined:object.constructor;
if(typeof Ctor == 'function' && Ctor.prototype === object || 
typeof object != 'function' && isArrayLike(object)){
return shimKeys(object);}

return isObject(object)?nativeKeys(object):[];};
























function keysIn(object){
if(object == null){
return [];}

if(!isObject(object)){
object = Object(object);}

var length=object.length;
length = length && isLength(length) && (
isArray(object) || isArguments(object)) && length || 0;

var Ctor=object.constructor,
index=-1,
isProto=typeof Ctor == 'function' && Ctor.prototype === object,
result=Array(length),
skipIndexes=length > 0;

while(++index < length) {
result[index] = index + '';}

for(var key in object) {
if(!(skipIndexes && isIndex(key,length)) && 
!(key == 'constructor' && (isProto || !hasOwnProperty.call(object,key)))){
result.push(key);}}


return result;}






















var mapKeys=createObjectMapper(true);










































var mapValues=createObjectMapper();
























var omit=restParam(function(object,props){
if(object == null){
return {};}

if(typeof props[0] != 'function'){
var props=arrayMap(baseFlatten(props),String);
return pickByArray(object,baseDifference(keysIn(object),props));}

var predicate=bindCallback(props[0],props[1],3);
return pickByCallback(object,function(value,key,object){
return !predicate(value,key,object);});});

















function pairs(object){
object = toObject(object);

var index=-1,
props=keys(object),
length=props.length,
result=Array(length);

while(++index < length) {
var key=props[index];
result[index] = [key,object[key]];}

return result;}




























var pick=restParam(function(object,props){
if(object == null){
return {};}

return typeof props[0] == 'function'?
pickByCallback(object,bindCallback(props[0],props[1],3)):
pickByArray(object,baseFlatten(props));});






























function result(object,path,defaultValue){
var result=object == null?undefined:object[path];
if(result === undefined){
if(object != null && !isKey(path,object)){
path = toPath(path);
object = path.length == 1?object:baseGet(object,baseSlice(path,0,-1));
result = object == null?undefined:object[last(path)];}

result = result === undefined?defaultValue:result;}

return isFunction(result)?result.call(object):result;}

























function set(object,path,value){
if(object == null){
return object;}

var pathKey=path + '';
path = object[pathKey] != null || isKey(path,object)?[pathKey]:toPath(path);

var index=-1,
length=path.length,
lastIndex=length - 1,
nested=object;

while(nested != null && ++index < length) {
var key=path[index];
if(isObject(nested)){
if(index == lastIndex){
nested[key] = value;}else 
if(nested[key] == null){
nested[key] = isIndex(path[index + 1])?[]:{};}}


nested = nested[key];}

return object;}































function transform(object,iteratee,accumulator,thisArg){
var isArr=isArray(object) || isTypedArray(object);
iteratee = getCallback(iteratee,thisArg,4);

if(accumulator == null){
if(isArr || isObject(object)){
var Ctor=object.constructor;
if(isArr){
accumulator = isArray(object)?new Ctor():[];}else 
{
accumulator = baseCreate(isFunction(Ctor)?Ctor.prototype:undefined);}}else 

{
accumulator = {};}}


(isArr?arrayEach:baseForOwn)(object,function(value,index,object){
return iteratee(accumulator,value,index,object);});

return accumulator;}



























function values(object){
return baseValues(object,keys(object));}

























function valuesIn(object){
return baseValues(object,keysIn(object));}



































function inRange(value,start,end){
start = +start || 0;
if(end === undefined){
end = start;
start = 0;}else 
{
end = +end || 0;}

return value >= nativeMin(start,end) && value < nativeMax(start,end);}





























function random(min,max,floating){
if(floating && isIterateeCall(min,max,floating)){
max = floating = undefined;}

var noMin=min == null,
noMax=max == null;

if(floating == null){
if(noMax && typeof min == 'boolean'){
floating = min;
min = 1;}else 

if(typeof max == 'boolean'){
floating = max;
noMax = true;}}


if(noMin && noMax){
max = 1;
noMax = false;}

min = +min || 0;
if(noMax){
max = min;
min = 0;}else 
{
max = +max || 0;}

if(floating || min % 1 || max % 1){
var rand=nativeRandom();
return nativeMin(min + rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1))),max);}

return baseRandom(min,max);}























var camelCase=createCompounder(function(result,word,index){
word = word.toLowerCase();
return result + (index?word.charAt(0).toUpperCase() + word.slice(1):word);});















function capitalize(string){
string = baseToString(string);
return string && string.charAt(0).toUpperCase() + string.slice(1);}
















function deburr(string){
string = baseToString(string);
return string && string.replace(reLatin1,deburrLetter).replace(reComboMark,'');}























function endsWith(string,target,position){
string = baseToString(string);
target = target + '';

var length=string.length;
position = position === undefined?
length:
nativeMin(position < 0?0:+position || 0,length);

position -= target.length;
return position >= 0 && string.indexOf(target,position) == position;}


































function escape(string){

string = baseToString(string);
return string && reHasUnescapedHtml.test(string)?
string.replace(reUnescapedHtml,escapeHtmlChar):
string;}
















function escapeRegExp(string){
string = baseToString(string);
return string && reHasRegExpChars.test(string)?
string.replace(reRegExpChars,escapeRegExpChar):
string || '(?:)';}





















var kebabCase=createCompounder(function(result,word,index){
return result + (index?'-':'') + word.toLowerCase();});
























function pad(string,length,chars){
string = baseToString(string);
length = +length;

var strLength=string.length;
if(strLength >= length || !nativeIsFinite(length)){
return string;}

var mid=(length - strLength) / 2,
leftLength=nativeFloor(mid),
rightLength=nativeCeil(mid);

chars = createPadding('',rightLength,chars);
return chars.slice(0,leftLength) + string + chars;}
























var padLeft=createPadDir();























var padRight=createPadDir(true);
























function parseInt(string,radix,guard){



if(guard?isIterateeCall(string,radix,guard):radix == null){
radix = 0;}else 
if(radix){
radix = +radix;}

string = trim(string);
return nativeParseInt(string,radix || (reHasHexPrefix.test(string)?16:10));}






















function repeat(string,n){
var result='';
string = baseToString(string);
n = +n;
if(n < 1 || !string || !nativeIsFinite(n)){
return result;}



do {
if(n % 2){
result += string;}

n = nativeFloor(n / 2);
string += string;}while(
n);

return result;}





















var snakeCase=createCompounder(function(result,word,index){
return result + (index?'_':'') + word.toLowerCase();});





















var startCase=createCompounder(function(result,word,index){
return result + (index?' ':'') + (word.charAt(0).toUpperCase() + word.slice(1));});























function startsWith(string,target,position){
string = baseToString(string);
position = position == null?
0:
nativeMin(position < 0?0:+position || 0,string.length);

return string.lastIndexOf(target,position) == position;}


































































































function template(string,options,otherOptions){


var settings=lodash.templateSettings;

if(otherOptions && isIterateeCall(string,options,otherOptions)){
options = otherOptions = undefined;}

string = baseToString(string);
options = assignWith(baseAssign({},otherOptions || options),settings,assignOwnDefaults);

var imports=assignWith(baseAssign({},options.imports),settings.imports,assignOwnDefaults),
importsKeys=keys(imports),
importsValues=baseValues(imports,importsKeys);

var isEscaping,
isEvaluating,
index=0,
interpolate=options.interpolate || reNoMatch,
source="__p += '";


var reDelimiters=RegExp(
(options.escape || reNoMatch).source + '|' + 
interpolate.source + '|' + 
(interpolate === reInterpolate?reEsTemplate:reNoMatch).source + '|' + 
(options.evaluate || reNoMatch).source + '|$',
'g');


var sourceURL='//# sourceURL=' + (
'sourceURL' in options?
options.sourceURL:
'lodash.templateSources[' + ++templateCounter + ']') + 
'\n';

string.replace(reDelimiters,function(match,escapeValue,interpolateValue,esTemplateValue,evaluateValue,offset){
interpolateValue || (interpolateValue = esTemplateValue);


source += string.slice(index,offset).replace(reUnescapedString,escapeStringChar);


if(escapeValue){
isEscaping = true;
source += "' +\n__e(" + escapeValue + ") +\n'";}

if(evaluateValue){
isEvaluating = true;
source += "';\n" + evaluateValue + ";\n__p += '";}

if(interpolateValue){
source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";}

index = offset + match.length;



return match;});


source += "';\n";



var variable=options.variable;
if(!variable){
source = 'with (obj) {\n' + source + '\n}\n';}


source = (isEvaluating?source.replace(reEmptyStringLeading,''):source).
replace(reEmptyStringMiddle,'$1').
replace(reEmptyStringTrailing,'$1;');


source = 'function(' + (variable || 'obj') + ') {\n' + (
variable?
'':
'obj || (obj = {});\n') + 

"var __t, __p = ''" + (
isEscaping?
', __e = _.escape':
'') + (

isEvaluating?
', __j = Array.prototype.join;\n' + 
"function print() { __p += __j.call(arguments, '') }\n":
';\n') + 

source + 
'return __p\n}';

var result=attempt(function(){
return Function(importsKeys,sourceURL + 'return ' + source).apply(undefined,importsValues);});




result.source = source;
if(isError(result)){
throw result;}

return result;}























function trim(string,chars,guard){
var value=string;
string = baseToString(string);
if(!string){
return string;}

if(guard?isIterateeCall(value,chars,guard):chars == null){
return string.slice(trimmedLeftIndex(string),trimmedRightIndex(string) + 1);}

chars = chars + '';
return string.slice(charsLeftIndex(string,chars),charsRightIndex(string,chars) + 1);}




















function trimLeft(string,chars,guard){
var value=string;
string = baseToString(string);
if(!string){
return string;}

if(guard?isIterateeCall(value,chars,guard):chars == null){
return string.slice(trimmedLeftIndex(string));}

return string.slice(charsLeftIndex(string,chars + ''));}




















function trimRight(string,chars,guard){
var value=string;
string = baseToString(string);
if(!string){
return string;}

if(guard?isIterateeCall(value,chars,guard):chars == null){
return string.slice(0,trimmedRightIndex(string) + 1);}

return string.slice(0,charsRightIndex(string,chars + '') + 1);}










































function trunc(string,options,guard){
if(guard && isIterateeCall(string,options,guard)){
options = undefined;}

var length=DEFAULT_TRUNC_LENGTH,
omission=DEFAULT_TRUNC_OMISSION;

if(options != null){
if(isObject(options)){
var separator='separator' in options?options.separator:separator;
length = 'length' in options?+options.length || 0:length;
omission = 'omission' in options?baseToString(options.omission):omission;}else 
{
length = +options || 0;}}


string = baseToString(string);
if(length >= string.length){
return string;}

var end=length - omission.length;
if(end < 1){
return omission;}

var result=string.slice(0,end);
if(separator == null){
return result + omission;}

if(isRegExp(separator)){
if(string.slice(end).search(separator)){
var match,
newEnd,
substring=string.slice(0,end);

if(!separator.global){
separator = RegExp(separator.source,(reFlags.exec(separator) || '') + 'g');}

separator.lastIndex = 0;
while(match = separator.exec(substring)) {
newEnd = match.index;}

result = result.slice(0,newEnd == null?end:newEnd);}}else 

if(string.indexOf(separator,end) != end){
var index=result.lastIndexOf(separator);
if(index > -1){
result = result.slice(0,index);}}


return result + omission;}




















function unescape(string){
string = baseToString(string);
return string && reHasEscapedHtml.test(string)?
string.replace(reEscapedHtml,unescapeHtmlChar):
string;}




















function words(string,pattern,guard){
if(guard && isIterateeCall(string,pattern,guard)){
pattern = undefined;}

string = baseToString(string);
return string.match(pattern || reWords) || [];}
























var attempt=restParam(function(func,args){
try{
return func.apply(undefined,args);}
catch(e) {
return isError(e)?e:new Error(e);}});









































function callback(func,thisArg,guard){
if(guard && isIterateeCall(func,thisArg,guard)){
thisArg = undefined;}

return isObjectLike(func)?
matches(func):
baseCallback(func,thisArg);}


















function constant(value){
return function(){
return value;};}


















function identity(value){
return value;}



























function matches(source){
return baseMatches(baseClone(source,true));}


























function matchesProperty(path,srcValue){
return baseMatchesProperty(path,baseClone(srcValue,true));}

























var method=restParam(function(path,args){
return function(object){
return invokePath(object,path,args);};});

























var methodOf=restParam(function(object,args){
return function(path){
return invokePath(object,path,args);};});







































function mixin(object,source,options){
if(options == null){
var isObj=isObject(source),
props=isObj?keys(source):undefined,
methodNames=props && props.length?baseFunctions(source,props):undefined;

if(!(methodNames?methodNames.length:isObj)){
methodNames = false;
options = source;
source = object;
object = this;}}


if(!methodNames){
methodNames = baseFunctions(source,keys(source));}

var chain=true,
index=-1,
isFunc=isFunction(object),
length=methodNames.length;

if(options === false){
chain = false;}else 
if(isObject(options) && 'chain' in options){
chain = options.chain;}

while(++index < length) {
var methodName=methodNames[index],
func=source[methodName];

object[methodName] = func;
if(isFunc){
object.prototype[methodName] = (function(func){
return function(){
var chainAll=this.__chain__;
if(chain || chainAll){
var result=object(this.__wrapped__),
actions=result.__actions__ = arrayCopy(this.__actions__);

actions.push({'func':func,'args':arguments,'thisArg':object});
result.__chain__ = chainAll;
return result;}

return func.apply(object,arrayPush([this.value()],arguments));};})(

func);}}


return object;}














function noConflict(){
root._ = oldDash;
return this;}
















function noop(){}

























function property(path){
return isKey(path)?baseProperty(path):basePropertyDeep(path);}






















function propertyOf(object){
return function(path){
return baseGet(object,toPath(path),path + '');};}




































function range(start,end,step){
if(step && isIterateeCall(start,end,step)){
end = step = undefined;}

start = +start || 0;
step = step == null?1:+step || 0;

if(end == null){
end = start;
start = 0;}else 
{
end = +end || 0;}



var index=-1,
length=nativeMax(nativeCeil((end - start) / (step || 1)),0),
result=Array(length);

while(++index < length) {
result[index] = start;
start += step;}

return result;}





























function times(n,iteratee,thisArg){
n = nativeFloor(n);



if(n < 1 || !nativeIsFinite(n)){
return [];}

var index=-1,
result=Array(nativeMin(n,MAX_ARRAY_LENGTH));

iteratee = bindCallback(iteratee,thisArg,1);
while(++index < n) {
if(index < MAX_ARRAY_LENGTH){
result[index] = iteratee(index);}else 
{
iteratee(index);}}


return result;}


















function uniqueId(prefix){
var id=++idCounter;
return baseToString(prefix) + id;}


















function add(augend,addend){
return (+augend || 0) + (+addend || 0);}






















var ceil=createRound('ceil');





















var floor=createRound('floor');
















































var max=createExtremum(gt,NEGATIVE_INFINITY);
















































var min=createExtremum(lt,POSITIVE_INFINITY);





















var round=createRound('round');

































function sum(collection,iteratee,thisArg){
if(thisArg && isIterateeCall(collection,iteratee,thisArg)){
iteratee = undefined;}

iteratee = getCallback(iteratee,thisArg,3);
return iteratee.length == 1?
arraySum(isArray(collection)?collection:toIterable(collection),iteratee):
baseSum(collection,iteratee);}





lodash.prototype = baseLodash.prototype;

LodashWrapper.prototype = baseCreate(baseLodash.prototype);
LodashWrapper.prototype.constructor = LodashWrapper;

LazyWrapper.prototype = baseCreate(baseLodash.prototype);
LazyWrapper.prototype.constructor = LazyWrapper;


MapCache.prototype['delete'] = mapDelete;
MapCache.prototype.get = mapGet;
MapCache.prototype.has = mapHas;
MapCache.prototype.set = mapSet;


SetCache.prototype.push = cachePush;


memoize.Cache = MapCache;


lodash.after = after;
lodash.ary = ary;
lodash.assign = assign;
lodash.at = at;
lodash.before = before;
lodash.bind = bind;
lodash.bindAll = bindAll;
lodash.bindKey = bindKey;
lodash.callback = callback;
lodash.chain = chain;
lodash.chunk = chunk;
lodash.compact = compact;
lodash.constant = constant;
lodash.countBy = countBy;
lodash.create = create;
lodash.curry = curry;
lodash.curryRight = curryRight;
lodash.debounce = debounce;
lodash.defaults = defaults;
lodash.defaultsDeep = defaultsDeep;
lodash.defer = defer;
lodash.delay = delay;
lodash.difference = difference;
lodash.drop = drop;
lodash.dropRight = dropRight;
lodash.dropRightWhile = dropRightWhile;
lodash.dropWhile = dropWhile;
lodash.fill = fill;
lodash.filter = filter;
lodash.flatten = flatten;
lodash.flattenDeep = flattenDeep;
lodash.flow = flow;
lodash.flowRight = flowRight;
lodash.forEach = forEach;
lodash.forEachRight = forEachRight;
lodash.forIn = forIn;
lodash.forInRight = forInRight;
lodash.forOwn = forOwn;
lodash.forOwnRight = forOwnRight;
lodash.functions = functions;
lodash.groupBy = groupBy;
lodash.indexBy = indexBy;
lodash.initial = initial;
lodash.intersection = intersection;
lodash.invert = invert;
lodash.invoke = invoke;
lodash.keys = keys;
lodash.keysIn = keysIn;
lodash.map = map;
lodash.mapKeys = mapKeys;
lodash.mapValues = mapValues;
lodash.matches = matches;
lodash.matchesProperty = matchesProperty;
lodash.memoize = memoize;
lodash.merge = merge;
lodash.method = method;
lodash.methodOf = methodOf;
lodash.mixin = mixin;
lodash.modArgs = modArgs;
lodash.negate = negate;
lodash.omit = omit;
lodash.once = once;
lodash.pairs = pairs;
lodash.partial = partial;
lodash.partialRight = partialRight;
lodash.partition = partition;
lodash.pick = pick;
lodash.pluck = pluck;
lodash.property = property;
lodash.propertyOf = propertyOf;
lodash.pull = pull;
lodash.pullAt = pullAt;
lodash.range = range;
lodash.rearg = rearg;
lodash.reject = reject;
lodash.remove = remove;
lodash.rest = rest;
lodash.restParam = restParam;
lodash.set = set;
lodash.shuffle = shuffle;
lodash.slice = slice;
lodash.sortBy = sortBy;
lodash.sortByAll = sortByAll;
lodash.sortByOrder = sortByOrder;
lodash.spread = spread;
lodash.take = take;
lodash.takeRight = takeRight;
lodash.takeRightWhile = takeRightWhile;
lodash.takeWhile = takeWhile;
lodash.tap = tap;
lodash.throttle = throttle;
lodash.thru = thru;
lodash.times = times;
lodash.toArray = toArray;
lodash.toPlainObject = toPlainObject;
lodash.transform = transform;
lodash.union = union;
lodash.uniq = uniq;
lodash.unzip = unzip;
lodash.unzipWith = unzipWith;
lodash.values = values;
lodash.valuesIn = valuesIn;
lodash.where = where;
lodash.without = without;
lodash.wrap = wrap;
lodash.xor = xor;
lodash.zip = zip;
lodash.zipObject = zipObject;
lodash.zipWith = zipWith;


lodash.backflow = flowRight;
lodash.collect = map;
lodash.compose = flowRight;
lodash.each = forEach;
lodash.eachRight = forEachRight;
lodash.extend = assign;
lodash.iteratee = callback;
lodash.methods = functions;
lodash.object = zipObject;
lodash.select = filter;
lodash.tail = rest;
lodash.unique = uniq;


mixin(lodash,lodash);




lodash.add = add;
lodash.attempt = attempt;
lodash.camelCase = camelCase;
lodash.capitalize = capitalize;
lodash.ceil = ceil;
lodash.clone = clone;
lodash.cloneDeep = cloneDeep;
lodash.deburr = deburr;
lodash.endsWith = endsWith;
lodash.escape = escape;
lodash.escapeRegExp = escapeRegExp;
lodash.every = every;
lodash.find = find;
lodash.findIndex = findIndex;
lodash.findKey = findKey;
lodash.findLast = findLast;
lodash.findLastIndex = findLastIndex;
lodash.findLastKey = findLastKey;
lodash.findWhere = findWhere;
lodash.first = first;
lodash.floor = floor;
lodash.get = get;
lodash.gt = gt;
lodash.gte = gte;
lodash.has = has;
lodash.identity = identity;
lodash.includes = includes;
lodash.indexOf = indexOf;
lodash.inRange = inRange;
lodash.isArguments = isArguments;
lodash.isArray = isArray;
lodash.isBoolean = isBoolean;
lodash.isDate = isDate;
lodash.isElement = isElement;
lodash.isEmpty = isEmpty;
lodash.isEqual = isEqual;
lodash.isError = isError;
lodash.isFinite = isFinite;
lodash.isFunction = isFunction;
lodash.isMatch = isMatch;
lodash.isNaN = isNaN;
lodash.isNative = isNative;
lodash.isNull = isNull;
lodash.isNumber = isNumber;
lodash.isObject = isObject;
lodash.isPlainObject = isPlainObject;
lodash.isRegExp = isRegExp;
lodash.isString = isString;
lodash.isTypedArray = isTypedArray;
lodash.isUndefined = isUndefined;
lodash.kebabCase = kebabCase;
lodash.last = last;
lodash.lastIndexOf = lastIndexOf;
lodash.lt = lt;
lodash.lte = lte;
lodash.max = max;
lodash.min = min;
lodash.noConflict = noConflict;
lodash.noop = noop;
lodash.now = now;
lodash.pad = pad;
lodash.padLeft = padLeft;
lodash.padRight = padRight;
lodash.parseInt = parseInt;
lodash.random = random;
lodash.reduce = reduce;
lodash.reduceRight = reduceRight;
lodash.repeat = repeat;
lodash.result = result;
lodash.round = round;
lodash.runInContext = runInContext;
lodash.size = size;
lodash.snakeCase = snakeCase;
lodash.some = some;
lodash.sortedIndex = sortedIndex;
lodash.sortedLastIndex = sortedLastIndex;
lodash.startCase = startCase;
lodash.startsWith = startsWith;
lodash.sum = sum;
lodash.template = template;
lodash.trim = trim;
lodash.trimLeft = trimLeft;
lodash.trimRight = trimRight;
lodash.trunc = trunc;
lodash.unescape = unescape;
lodash.uniqueId = uniqueId;
lodash.words = words;


lodash.all = every;
lodash.any = some;
lodash.contains = includes;
lodash.eq = isEqual;
lodash.detect = find;
lodash.foldl = reduce;
lodash.foldr = reduceRight;
lodash.head = first;
lodash.include = includes;
lodash.inject = reduce;

mixin(lodash,(function(){
var source={};
baseForOwn(lodash,function(func,methodName){
if(!lodash.prototype[methodName]){
source[methodName] = func;}});


return source;})(),
false);




lodash.sample = sample;

lodash.prototype.sample = function(n){
if(!this.__chain__ && n == null){
return sample(this.value());}

return this.thru(function(value){
return sample(value,n);});};












lodash.VERSION = VERSION;


arrayEach(['bind','bindKey','curry','curryRight','partial','partialRight'],function(methodName){
lodash[methodName].placeholder = lodash;});



arrayEach(['drop','take'],function(methodName,index){
LazyWrapper.prototype[methodName] = function(n){
var filtered=this.__filtered__;
if(filtered && !index){
return new LazyWrapper(this);}

n = n == null?1:nativeMax(nativeFloor(n) || 0,0);

var result=this.clone();
if(filtered){
result.__takeCount__ = nativeMin(result.__takeCount__,n);}else 
{
result.__views__.push({'size':n,'type':methodName + (result.__dir__ < 0?'Right':'')});}

return result;};


LazyWrapper.prototype[methodName + 'Right'] = function(n){
return this.reverse()[methodName](n).reverse();};});




arrayEach(['filter','map','takeWhile'],function(methodName,index){
var type=index + 1,
isFilter=type != LAZY_MAP_FLAG;

LazyWrapper.prototype[methodName] = function(iteratee,thisArg){
var result=this.clone();
result.__iteratees__.push({'iteratee':getCallback(iteratee,thisArg,1),'type':type});
result.__filtered__ = result.__filtered__ || isFilter;
return result;};});




arrayEach(['first','last'],function(methodName,index){
var takeName='take' + (index?'Right':'');

LazyWrapper.prototype[methodName] = function(){
return this[takeName](1).value()[0];};});




arrayEach(['initial','rest'],function(methodName,index){
var dropName='drop' + (index?'':'Right');

LazyWrapper.prototype[methodName] = function(){
return this.__filtered__?new LazyWrapper(this):this[dropName](1);};});




arrayEach(['pluck','where'],function(methodName,index){
var operationName=index?'filter':'map',
createCallback=index?baseMatches:property;

LazyWrapper.prototype[methodName] = function(value){
return this[operationName](createCallback(value));};});



LazyWrapper.prototype.compact = function(){
return this.filter(identity);};


LazyWrapper.prototype.reject = function(predicate,thisArg){
predicate = getCallback(predicate,thisArg,1);
return this.filter(function(value){
return !predicate(value);});};



LazyWrapper.prototype.slice = function(start,end){
start = start == null?0:+start || 0;

var result=this;
if(result.__filtered__ && (start > 0 || end < 0)){
return new LazyWrapper(result);}

if(start < 0){
result = result.takeRight(-start);}else 
if(start){
result = result.drop(start);}

if(end !== undefined){
end = +end || 0;
result = end < 0?result.dropRight(-end):result.take(end - start);}

return result;};


LazyWrapper.prototype.takeRightWhile = function(predicate,thisArg){
return this.reverse().takeWhile(predicate,thisArg).reverse();};


LazyWrapper.prototype.toArray = function(){
return this.take(POSITIVE_INFINITY);};



baseForOwn(LazyWrapper.prototype,function(func,methodName){
var checkIteratee=/^(?:filter|map|reject)|While$/.test(methodName),
retUnwrapped=/^(?:first|last)$/.test(methodName),
lodashFunc=lodash[retUnwrapped?'take' + (methodName == 'last'?'Right':''):methodName];

if(!lodashFunc){
return;}

lodash.prototype[methodName] = function(){
var args=retUnwrapped?[1]:arguments,
chainAll=this.__chain__,
value=this.__wrapped__,
isHybrid=!!this.__actions__.length,
isLazy=value instanceof LazyWrapper,
iteratee=args[0],
useLazy=isLazy || isArray(value);

if(useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1){

isLazy = useLazy = false;}

var interceptor=function(value){
return retUnwrapped && chainAll?
lodashFunc(value,1)[0]:
lodashFunc.apply(undefined,arrayPush([value],args));};


var action={'func':thru,'args':[interceptor],'thisArg':undefined},
onlyLazy=isLazy && !isHybrid;

if(retUnwrapped && !chainAll){
if(onlyLazy){
value = value.clone();
value.__actions__.push(action);
return func.call(value);}

return lodashFunc.call(undefined,this.value())[0];}

if(!retUnwrapped && useLazy){
value = onlyLazy?value:new LazyWrapper(this);
var result=func.apply(value,args);
result.__actions__.push(action);
return new LodashWrapper(result,chainAll);}

return this.thru(interceptor);};});




arrayEach(['join','pop','push','replace','shift','sort','splice','split','unshift'],function(methodName){
var func=(/^(?:replace|split)$/.test(methodName)?stringProto:arrayProto)[methodName],
chainName=/^(?:push|sort|unshift)$/.test(methodName)?'tap':'thru',
retUnwrapped=/^(?:join|pop|replace|shift)$/.test(methodName);

lodash.prototype[methodName] = function(){
var args=arguments;
if(retUnwrapped && !this.__chain__){
return func.apply(this.value(),args);}

return this[chainName](function(value){
return func.apply(value,args);});};});





baseForOwn(LazyWrapper.prototype,function(func,methodName){
var lodashFunc=lodash[methodName];
if(lodashFunc){
var key=lodashFunc.name,
names=realNames[key] || (realNames[key] = []);

names.push({'name':methodName,'func':lodashFunc});}});



realNames[createHybridWrapper(undefined,BIND_KEY_FLAG).name] = [{'name':'wrapper','func':undefined}];


LazyWrapper.prototype.clone = lazyClone;
LazyWrapper.prototype.reverse = lazyReverse;
LazyWrapper.prototype.value = lazyValue;


lodash.prototype.chain = wrapperChain;
lodash.prototype.commit = wrapperCommit;
lodash.prototype.concat = wrapperConcat;
lodash.prototype.plant = wrapperPlant;
lodash.prototype.reverse = wrapperReverse;
lodash.prototype.toString = wrapperToString;
lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;


lodash.prototype.collect = lodash.prototype.map;
lodash.prototype.head = lodash.prototype.first;
lodash.prototype.select = lodash.prototype.filter;
lodash.prototype.tail = lodash.prototype.rest;

return lodash;}





var _=runInContext();


if(typeof define == 'function' && typeof define.amd == 'object' && define.amd){




root._ = _;



define(function(){
return _;});}else 



if(freeExports && freeModule){

if(moduleExports){
(freeModule.exports = _)._ = _;}else 


{
freeExports._ = _;}}else 


{

root._ = _;}}).

call(this);
});
__d('cheerio/lib/api/attributes.js',["lodash/index.js","cheerio/lib/utils.js"],function(global, require, module, exports) {  var _=require('lodash/index.js'),
utils=require('cheerio/lib/utils.js'),
isTag=utils.isTag,
domEach=utils.domEach,
hasOwn=Object.prototype.hasOwnProperty,
camelCase=utils.camelCase,
cssCase=utils.cssCase,
rspace=/\s+/,
dataAttrPrefix='data-',



primitives={
null:null,
true:true,
false:false},



rboolean=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,

rbrace=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/;


var getAttr=function(elem,name){
if(!elem || !isTag(elem))return;

if(!elem.attribs){
elem.attribs = {};}



if(!name){
return elem.attribs;}


if(hasOwn.call(elem.attribs,name)){

return rboolean.test(name)?name:elem.attribs[name];}};



var setAttr=function(el,name,value){

if(value === null){
removeAttribute(el,name);}else 
{
el.attribs[name] = value + '';}};



exports.attr = function(name,value){

if(typeof name === 'object' || value !== undefined){
if(typeof value === 'function'){
return domEach(this,function(i,el){
setAttr(el,name,value.call(el,i,el.attribs[name]));});}


return domEach(this,function(i,el){
if(!isTag(el))return;

if(typeof name === 'object'){
_.each(name,function(name,key){
el.attribs[key] = name + '';});}else 

{
setAttr(el,name,value);}});}




return getAttr(this[0],name);};


var setData=function(el,name,value){
if(typeof name === 'object')return _.extend(el.data,name);
if(typeof name === 'string' && value !== undefined){
el.data[name] = value;}else 
if(typeof name === 'object'){
_.exend(el.data,name);}};







var readData=function(el,name){
var readAll=arguments.length === 1;
var domNames,domName,jsNames,jsName,value,idx,length;

if(readAll){
domNames = Object.keys(el.attribs).filter(function(attrName){
return attrName.slice(0,dataAttrPrefix.length) === dataAttrPrefix;});

jsNames = domNames.map(function(domName){
return camelCase(domName.slice(dataAttrPrefix.length));});}else 

{
domNames = [dataAttrPrefix + cssCase(name)];
jsNames = [name];}


for(idx = 0,length = domNames.length;idx < length;++idx) {
domName = domNames[idx];
jsName = jsNames[idx];
if(hasOwn.call(el.attribs,domName)){
value = el.attribs[domName];

if(hasOwn.call(primitives,value)){
value = primitives[value];}else 
if(value === String(Number(value))){
value = Number(value);}else 
if(rbrace.test(value)){
try{
value = JSON.parse(value);}
catch(e) {}}


el.data[jsName] = value;}}



return readAll?el.data:value;};


exports.data = function(name,value){
var elem=this[0];

if(!elem || !isTag(elem))return;

if(!elem.data){
elem.data = {};}



if(!name){
return readData(elem);}



if(typeof name === 'object' || value !== undefined){
domEach(this,function(i,el){
setData(el,name,value);});

return this;}else 
if(hasOwn.call(elem.data,name)){
return elem.data[name];}


return readData(elem,name);};






exports.val = function(value){
var querying=arguments.length === 0,
element=this[0];

if(!element)return;

switch(element.name){
case 'textarea':
return this.text(value);
case 'input':
switch(this.attr('type')){
case 'radio':
if(querying){
return this.attr('value');}else 
{
this.attr('value',value);
return this;}

break;
default:
return this.attr('value',value);}

return;
case 'select':
var option=this.find('option:selected'),
returnValue;
if(option === undefined)return undefined;
if(!querying){
if(!this.attr().hasOwnProperty('multiple') && typeof value == 'object'){
return this;}

if(typeof value != 'object'){
value = [value];}

this.find('option').removeAttr('selected');
for(var i=0;i < value.length;i++) {
this.find('option[value="' + value[i] + '"]').attr('selected','');}

return this;}

returnValue = option.attr('value');
if(this.attr().hasOwnProperty('multiple')){
returnValue = [];
domEach(option,function(i,el){
returnValue.push(el.attribs.value);});}


return returnValue;
case 'option':
if(!querying){
this.attr('value',value);
return this;}

return this.attr('value');}};







var removeAttribute=function(elem,name){
if(!elem.attribs || !hasOwn.call(elem.attribs,name))
return;

delete elem.attribs[name];};



exports.removeAttr = function(name){
domEach(this,function(i,elem){
removeAttribute(elem,name);});


return this;};


exports.hasClass = function(className){
return _.any(this,function(elem){
var attrs=elem.attribs,
clazz=attrs && attrs['class'],
idx=-1,
end;

if(clazz){
while((idx = clazz.indexOf(className,idx + 1)) > -1) {
end = idx + className.length;

if((idx === 0 || rspace.test(clazz[idx - 1])) && (
end === clazz.length || rspace.test(clazz[end]))){
return true;}}}});};






exports.addClass = function(value){

if(typeof value === 'function'){
return domEach(this,function(i,el){
var className=el.attribs['class'] || '';
exports.addClass.call([el],value.call(el,i,className));});}




if(!value || typeof value !== 'string')return this;

var classNames=value.split(rspace),
numElements=this.length;


for(var i=0;i < numElements;i++) {

if(!isTag(this[i]))continue;


var className=getAttr(this[i],'class'),
numClasses,
setClass;

if(!className){
setAttr(this[i],'class',classNames.join(' ').trim());}else 
{
setClass = ' ' + className + ' ';
numClasses = classNames.length;


for(var j=0;j < numClasses;j++) {
var appendClass=classNames[j] + ' ';
if(setClass.indexOf(' ' + appendClass) < 0)
setClass += appendClass;}


setAttr(this[i],'class',setClass.trim());}}



return this;};


var splitClass=function(className){
return className?className.trim().split(rspace):[];};


exports.removeClass = function(value){
var classes,
numClasses,
removeAll;


if(typeof value === 'function'){
return domEach(this,function(i,el){
exports.removeClass.call(
[el],value.call(el,i,el.attribs['class'] || ''));});}




classes = splitClass(value);
numClasses = classes.length;
removeAll = arguments.length === 0;

return domEach(this,function(i,el){
if(!isTag(el))return;

if(removeAll){

el.attribs.class = '';}else 
{
var elClasses=splitClass(el.attribs.class),
index,
changed;

for(var j=0;j < numClasses;j++) {
index = elClasses.indexOf(classes[j]);

if(index >= 0){
elClasses.splice(index,1);
changed = true;



j--;}}


if(changed){
el.attribs.class = elClasses.join(' ');}}});};





exports.toggleClass = function(value,stateVal){

if(typeof value === 'function'){
return domEach(this,function(i,el){
exports.toggleClass.call(
[el],
value.call(el,i,el.attribs['class'] || '',stateVal),
stateVal);});}





if(!value || typeof value !== 'string')return this;

var classNames=value.split(rspace),
numClasses=classNames.length,
state=typeof stateVal === 'boolean'?stateVal?1:-1:0,
numElements=this.length,
elementClasses,
index;

for(var i=0;i < numElements;i++) {

if(!isTag(this[i]))continue;

elementClasses = splitClass(this[i].attribs.class);


for(var j=0;j < numClasses;j++) {

index = elementClasses.indexOf(classNames[j]);


if(state >= 0 && index < 0){
elementClasses.push(classNames[j]);}else 
if(state <= 0 && index >= 0){

elementClasses.splice(index,1);}}



this[i].attribs.class = elementClasses.join(' ');}


return this;};


exports.is = function(selector){
if(selector){
return this.filter(selector).length > 0;}

return false;};
});
__d('cheerio/lib/utils.js',["cheerio/lib/parse.js","dom-serializer/index.js"],function(global, require, module, exports) {  var parse=require('cheerio/lib/parse.js'),
render=require('dom-serializer/index.js');





var tags={tag:true,script:true,style:true};







exports.isTag = function(type){
if(type.type)type = type.type;
return tags[type] || false;};








exports.camelCase = function(str){
return str.replace(/[_.-](\w|$)/g,function(_,x){
return x.toUpperCase();});};









exports.cssCase = function(str){
return str.replace(/[A-Z]/g,'-$&').toLowerCase();};









exports.domEach = function(cheerio,fn){
var i=0,len=cheerio.length;
while(i < len && fn.call(cheerio,i,cheerio[i]) !== false) ++i;
return cheerio;};









exports.cloneDom = function(dom,options){
return parse(render(dom,options),options).children;};
});
__d('cheerio/lib/api/traversing.js',["lodash/index.js","css-select/index.js","cheerio/lib/utils.js","htmlparser2/lib/index.js"],function(global, require, module, exports) {  var _=require('lodash/index.js'),
select=require('css-select/index.js'),
utils=require('cheerio/lib/utils.js'),
domEach=utils.domEach,
uniqueSort=require('htmlparser2/lib/index.js').DomUtils.uniqueSort,
isTag=utils.isTag;

exports.find = function(selectorOrHaystack){
var elems=_.reduce(this,function(memo,elem){
return memo.concat(_.filter(elem.children,isTag));},
[]);
var contains=this.constructor.contains;
var haystack;

if(selectorOrHaystack && typeof selectorOrHaystack !== 'string'){
if(selectorOrHaystack.cheerio){
haystack = selectorOrHaystack.get();}else 
{
haystack = [selectorOrHaystack];}


return this._make(haystack.filter(function(elem){
var idx,len;
for(idx = 0,len = this.length;idx < len;++idx) {
if(contains(this[idx],elem)){
return true;}}},


this));}


return this._make(select(selectorOrHaystack,elems,this.options));};




exports.parent = function(selector){
var set=[];

domEach(this,function(idx,elem){
var parentElem=elem.parent;
if(parentElem && set.indexOf(parentElem) < 0){
set.push(parentElem);}});



if(arguments.length){
set = exports.filter.call(set,selector,this);}


return this._make(set);};


exports.parents = function(selector){
var parentNodes=[];




this.get().reverse().forEach(function(elem){
traverseParents(this,elem.parent,selector,Infinity).
forEach(function(node){
if(parentNodes.indexOf(node) === -1){
parentNodes.push(node);}});},



this);

return this._make(parentNodes);};


exports.parentsUntil = function(selector,filter){
var parentNodes=[],untilNode,untilNodes;

if(typeof selector === 'string'){
untilNode = select(selector,this.parents().toArray(),this.options)[0];}else 
if(selector && selector.cheerio){
untilNodes = selector.toArray();}else 
if(selector){
untilNode = selector;}






this.toArray().reverse().forEach(function(elem){
while(elem = elem.parent) {
if(untilNode && elem !== untilNode || 
untilNodes && untilNodes.indexOf(elem) === -1 || 
!untilNode && !untilNodes){
if(isTag(elem) && parentNodes.indexOf(elem) === -1){parentNodes.push(elem);}}else 
{
break;}}},


this);

return this._make(filter?select(filter,parentNodes,this.options):parentNodes);};





exports.closest = function(selector){
var set=[];

if(!selector){
return this._make(set);}


domEach(this,(function(idx,elem){
var closestElem=traverseParents(this,elem,selector,1)[0];


if(closestElem && set.indexOf(closestElem) < 0){
set.push(closestElem);}}).

bind(this));

return this._make(set);};


exports.next = function(selector){
if(!this[0]){return this;}
var elems=[];

_.forEach(this,function(elem){
while(elem = elem.next) {
if(isTag(elem)){
elems.push(elem);
return;}}});




return selector?
exports.filter.call(elems,selector,this):
this._make(elems);};


exports.nextAll = function(selector){
if(!this[0]){return this;}
var elems=[];

_.forEach(this,function(elem){
while(elem = elem.next) {
if(isTag(elem) && elems.indexOf(elem) === -1){
elems.push(elem);}}});




return selector?
exports.filter.call(elems,selector,this):
this._make(elems);};


exports.nextUntil = function(selector,filterSelector){
if(!this[0]){return this;}
var elems=[],untilNode,untilNodes;

if(typeof selector === 'string'){
untilNode = select(selector,this.nextAll().get(),this.options)[0];}else 
if(selector && selector.cheerio){
untilNodes = selector.get();}else 
if(selector){
untilNode = selector;}


_.forEach(this,function(elem){
while(elem = elem.next) {
if(untilNode && elem !== untilNode || 
untilNodes && untilNodes.indexOf(elem) === -1 || 
!untilNode && !untilNodes){
if(isTag(elem) && elems.indexOf(elem) === -1){
elems.push(elem);}}else 

{
break;}}});




return filterSelector?
exports.filter.call(elems,filterSelector,this):
this._make(elems);};


exports.prev = function(selector){
if(!this[0]){return this;}
var elems=[];

_.forEach(this,function(elem){
while(elem = elem.prev) {
if(isTag(elem)){
elems.push(elem);
return;}}});




return selector?
exports.filter.call(elems,selector,this):
this._make(elems);};


exports.prevAll = function(selector){
if(!this[0]){return this;}
var elems=[];

_.forEach(this,function(elem){
while(elem = elem.prev) {
if(isTag(elem) && elems.indexOf(elem) === -1){
elems.push(elem);}}});




return selector?
exports.filter.call(elems,selector,this):
this._make(elems);};


exports.prevUntil = function(selector,filterSelector){
if(!this[0]){return this;}
var elems=[],untilNode,untilNodes;

if(typeof selector === 'string'){
untilNode = select(selector,this.prevAll().get(),this.options)[0];}else 
if(selector && selector.cheerio){
untilNodes = selector.get();}else 
if(selector){
untilNode = selector;}


_.forEach(this,function(elem){
while(elem = elem.prev) {
if(untilNode && elem !== untilNode || 
untilNodes && untilNodes.indexOf(elem) === -1 || 
!untilNode && !untilNodes){
if(isTag(elem) && elems.indexOf(elem) === -1){
elems.push(elem);}}else 

{
break;}}});




return filterSelector?
exports.filter.call(elems,filterSelector,this):
this._make(elems);};


exports.siblings = function(selector){
var parent=this.parent();

var elems=_.filter(
parent?parent.children():this.siblingsAndMe(),
function(elem){return isTag(elem) && !this.is(elem);},
this);


if(selector !== undefined){
return exports.filter.call(elems,selector,this);}else 
{
return this._make(elems);}};



exports.children = function(selector){

var elems=_.reduce(this,function(memo,elem){
return memo.concat(_.filter(elem.children,isTag));},
[]);

if(selector === undefined)return this._make(elems);

return exports.filter.call(elems,selector,this);};


exports.contents = function(){
return this._make(_.reduce(this,function(all,elem){
all.push.apply(all,elem.children);
return all;},
[]));};


exports.each = function(fn){
var i=0,len=this.length;
while(i < len && fn.call(this[i],i,this[i]) !== false) ++i;
return this;};


exports.map = function(fn){
return this._make(_.reduce(this,function(memo,el,i){
var val=fn.call(el,i,el);
return val == null?memo:memo.concat(val);},
[]));};


var makeFilterMethod=function(filterFn){
return function(match,container){
var testFn;
container = container || this;

if(typeof match === 'string'){
testFn = select.compile(match,container.options);}else 
if(typeof match === 'function'){
testFn = function(el,i){
return match.call(el,i,el);};}else 

if(match.cheerio){
testFn = match.is.bind(match);}else 
{
testFn = function(el){
return match === el;};}



return container._make(filterFn(this,testFn));};};



exports.filter = makeFilterMethod(_.filter);
exports.not = makeFilterMethod(_.reject);

exports.has = function(selectorOrHaystack){
var that=this;
return exports.filter.call(this,function(){
return that._make(this).find(selectorOrHaystack).length > 0;});};



exports.first = function(){
return this.length > 1?this._make(this[0]):this;};


exports.last = function(){
return this.length > 1?this._make(this[this.length - 1]):this;};



exports.eq = function(i){
i = +i;


if(i === 0 && this.length <= 1)return this;

if(i < 0)i = this.length + i;
return this[i]?this._make(this[i]):this._make([]);};



exports.get = function(i){
if(i == null){
return Array.prototype.slice.call(this);}else 
{
return this[i < 0?this.length + i:i];}};




exports.index = function(selectorOrNeedle){
var $haystack,needle;

if(arguments.length === 0){
$haystack = this.parent().children();
needle = this[0];}else 
if(typeof selectorOrNeedle === 'string'){
$haystack = this._make(selectorOrNeedle);
needle = this[0];}else 
{
$haystack = this;
needle = selectorOrNeedle.cheerio?selectorOrNeedle[0]:selectorOrNeedle;}


return $haystack.get().indexOf(needle);};


exports.slice = function(){
return this._make([].slice.apply(this,arguments));};


function traverseParents(self,elem,selector,limit){
var elems=[];
while(elem && elems.length < limit) {
if(!selector || exports.filter.call([elem],selector,self).length){
elems.push(elem);}

elem = elem.parent;}

return elems;}




exports.end = function(){
return this.prevObject || this._make([]);};


exports.add = function(other,context){
var selection=this._make(other,context);
var contents=uniqueSort(selection.get().concat(this.get()));

for(var i=0;i < contents.length;++i) {
selection[i] = contents[i];}

selection.length = contents.length;

return selection;};




exports.addBack = function(selector){
return this.add(
arguments.length?this.prevObject.filter(selector):this.prevObject);};
});
__d('css-select/index.js',["css-select/lib/pseudos.js","domutils/index.js","boolbase/index.js","css-select/lib/compile.js"],function(global, require, module, exports) {  "use strict";

module.exports = CSSselect;

var Pseudos=require("css-select/lib/pseudos.js"),
DomUtils=require("domutils/index.js"),
findOne=DomUtils.findOne,
findAll=DomUtils.findAll,
getChildren=DomUtils.getChildren,
removeSubsets=DomUtils.removeSubsets,
falseFunc=require("boolbase/index.js").falseFunc,
compile=require("css-select/lib/compile.js"),
compileUnsafe=compile.compileUnsafe;

function getSelectorFunc(searchFunc){
return function select(query,elems,options){
if(typeof query !== "function")query = compileUnsafe(query,options);
if(!Array.isArray(elems))elems = getChildren(elems);else 
elems = removeSubsets(elems);
return searchFunc(query,elems);};}



var selectAll=getSelectorFunc(function selectAll(query,elems){
return query === falseFunc || !elems || elems.length === 0?[]:findAll(query,elems);});


var selectOne=getSelectorFunc(function selectOne(query,elems){
return query === falseFunc || !elems || elems.length === 0?null:findOne(query,elems);});


function is(elem,query,options){
return (typeof query === "function"?query:compile(query,options))(elem);}





function CSSselect(query,elems,options){
return selectAll(query,elems,options);}


CSSselect.compile = compile;
CSSselect.filters = Pseudos.filters;
CSSselect.pseudos = Pseudos.pseudos;

CSSselect.selectAll = selectAll;
CSSselect.selectOne = selectOne;

CSSselect.is = is;


CSSselect.parse = compile;
CSSselect.iterate = selectAll;


CSSselect._compileUnsafe = compileUnsafe;
});
__d('css-select/lib/pseudos.js',["domutils/index.js","nth-check/index.js","css-select/lib/attributes.js","boolbase/index.js"],function(global, require, module, exports) {  var 












DomUtils=require("domutils/index.js"),
isTag=DomUtils.isTag,
getText=DomUtils.getText,
getParent=DomUtils.getParent,
getChildren=DomUtils.getChildren,
getSiblings=DomUtils.getSiblings,
hasAttrib=DomUtils.hasAttrib,
getName=DomUtils.getName,
getAttribute=DomUtils.getAttributeValue,
getNCheck=require("nth-check/index.js"),
checkAttrib=require("css-select/lib/attributes.js").rules.equals,
BaseFuncs=require("boolbase/index.js"),
trueFunc=BaseFuncs.trueFunc,
falseFunc=BaseFuncs.falseFunc;


function getFirstElement(elems){
for(var i=0;elems && i < elems.length;i++) {
if(isTag(elems[i]))return elems[i];}}



function getAttribFunc(name,value){
var data={name:name,value:value};
return function attribFunc(next){
return checkAttrib(next,data);};}



function getChildFunc(next){
return function(elem){
return !!getParent(elem) && next(elem);};}



var filters={
contains:function(next,text){
if(
(text.charAt(0) === "\"" || text.charAt(0) === "'") && 
text.charAt(0) === text.substr(-1))
{
text = text.slice(1,-1);}

return function contains(elem){
return next(elem) && getText(elem).indexOf(text) >= 0;};},




"nth-child":function(next,rule){
var func=getNCheck(rule);

if(func === falseFunc)return func;
if(func === trueFunc)return getChildFunc(next);

return function nthChild(elem){
var siblings=getSiblings(elem);

for(var i=0,pos=0;i < siblings.length;i++) {
if(isTag(siblings[i])){
if(siblings[i] === elem)break;else 
pos++;}}



return func(pos) && next(elem);};},


"nth-last-child":function(next,rule){
var func=getNCheck(rule);

if(func === falseFunc)return func;
if(func === trueFunc)return getChildFunc(next);

return function nthLastChild(elem){
var siblings=getSiblings(elem);

for(var pos=0,i=siblings.length - 1;i >= 0;i--) {
if(isTag(siblings[i])){
if(siblings[i] === elem)break;else 
pos++;}}



return func(pos) && next(elem);};},


"nth-of-type":function(next,rule){
var func=getNCheck(rule);

if(func === falseFunc)return func;
if(func === trueFunc)return getChildFunc(next);

return function nthOfType(elem){
var siblings=getSiblings(elem);

for(var pos=0,i=0;i < siblings.length;i++) {
if(isTag(siblings[i])){
if(siblings[i] === elem)break;
if(getName(siblings[i]) === getName(elem))pos++;}}



return func(pos) && next(elem);};},


"nth-last-of-type":function(next,rule){
var func=getNCheck(rule);

if(func === falseFunc)return func;
if(func === trueFunc)return getChildFunc(next);

return function nthLastOfType(elem){
var siblings=getSiblings(elem);

for(var pos=0,i=siblings.length - 1;i >= 0;i--) {
if(isTag(siblings[i])){
if(siblings[i] === elem)break;
if(getName(siblings[i]) === getName(elem))pos++;}}



return func(pos) && next(elem);};},




checkbox:getAttribFunc("type","checkbox"),
file:getAttribFunc("type","file"),
password:getAttribFunc("type","password"),
radio:getAttribFunc("type","radio"),
reset:getAttribFunc("type","reset"),
image:getAttribFunc("type","image"),
submit:getAttribFunc("type","submit")};



var pseudos={
root:function(elem){
return !getParent(elem);},

empty:function(elem){
return !getChildren(elem).some(function(elem){
return isTag(elem) || elem.type === "text";});},



"first-child":function(elem){
return getFirstElement(getSiblings(elem)) === elem;},

"last-child":function(elem){
var siblings=getSiblings(elem);

for(var i=siblings.length - 1;i >= 0;i--) {
if(siblings[i] === elem)return true;
if(isTag(siblings[i]))break;}


return false;},

"first-of-type":function(elem){
var siblings=getSiblings(elem);

for(var i=0;i < siblings.length;i++) {
if(isTag(siblings[i])){
if(siblings[i] === elem)return true;
if(getName(siblings[i]) === getName(elem))break;}}



return false;},

"last-of-type":function(elem){
var siblings=getSiblings(elem);

for(var i=siblings.length - 1;i >= 0;i--) {
if(isTag(siblings[i])){
if(siblings[i] === elem)return true;
if(getName(siblings[i]) === getName(elem))break;}}



return false;},

"only-of-type":function(elem){
var siblings=getSiblings(elem);

for(var i=0,j=siblings.length;i < j;i++) {
if(isTag(siblings[i])){
if(siblings[i] === elem)continue;
if(getName(siblings[i]) === getName(elem))return false;}}



return true;},

"only-child":function(elem){
var siblings=getSiblings(elem);

for(var i=0;i < siblings.length;i++) {
if(isTag(siblings[i]) && siblings[i] !== elem)return false;}


return true;},




selected:function(elem){
if(hasAttrib(elem,"selected"))return true;else 
if(getName(elem) !== "option")return false;


var parent=getParent(elem);

if(
!parent || 
getName(parent) !== "select" || 
hasAttrib(parent,"multiple"))
return false;

var siblings=getChildren(parent),
sawElem=false;

for(var i=0;i < siblings.length;i++) {
if(isTag(siblings[i])){
if(siblings[i] === elem){
sawElem = true;}else 
if(!sawElem){
return false;}else 
if(hasAttrib(siblings[i],"selected")){
return false;}}}




return sawElem;},

disabled:function(elem){
return hasAttrib(elem,"disabled");},

enabled:function(elem){
return !hasAttrib(elem,"disabled");},

checked:function(elem){
return hasAttrib(elem,"checked") || pseudos.selected(elem);},





parent:function(elem){
return !pseudos.empty(elem);},

header:function(elem){
var name=getName(elem);
return name === "h1" || 
name === "h2" || 
name === "h3" || 
name === "h4" || 
name === "h5" || 
name === "h6";},


button:function(elem){
var name=getName(elem);
return name === "button" || 
name === "input" && 
getAttribute(elem,"type") === "button";},

input:function(elem){
var name=getName(elem);
return name === "input" || 
name === "textarea" || 
name === "select" || 
name === "button";},

text:function(elem){
var attr;
return getName(elem) === "input" && (
!(attr = getAttribute(elem,"type")) || 
attr.toLowerCase() === "text");}};




function verifyArgs(func,name,subselect){
if(subselect === null){
if(func.length > 1){
throw new SyntaxError("pseudo-selector :" + name + " requires an argument");}}else 

{
if(func.length === 1){
throw new SyntaxError("pseudo-selector :" + name + " doesn't have any arguments");}}}





var re_CSS3=/^(?:(?:nth|last|first|only)-(?:child|of-type)|root|empty|(?:en|dis)abled|checked|not)$/;

module.exports = {
compile:function(next,data,options){
var name=data.name,
subselect=data.data;

if(options && options.strict && !re_CSS3.test(name)){
throw SyntaxError(":" + name + " isn't part of CSS3");}


if(typeof filters[name] === "function"){
verifyArgs(filters[name],name,subselect);
return filters[name](next,subselect,options);}else 
if(typeof pseudos[name] === "function"){
var func=pseudos[name];
verifyArgs(func,name,subselect);

if(next === trueFunc)return func;

return function pseudoArgs(elem){
return func(elem,subselect) && next(elem);};}else 

{
throw new SyntaxError("unmatched pseudo-class :" + name);}},


filters:filters,
pseudos:pseudos};
});
__d('domutils/index.js',["domutils/lib/stringify.js","domutils/lib/traversal.js","domutils/lib/manipulation.js","domutils/lib/querying.js","domutils/lib/legacy.js","domutils/lib/helpers.js"],function(global, require, module, exports) {  var DomUtils=module.exports;

[
require("domutils/lib/stringify.js"),
require("domutils/lib/traversal.js"),
require("domutils/lib/manipulation.js"),
require("domutils/lib/querying.js"),
require("domutils/lib/legacy.js"),
require("domutils/lib/helpers.js")].
forEach(function(ext){
Object.keys(ext).forEach(function(key){
DomUtils[key] = ext[key].bind(DomUtils);});});
});
__d('domutils/lib/stringify.js',["domelementtype/index.js"],function(global, require, module, exports) {  var ElementType=require("domelementtype/index.js"),
isTag=ElementType.isTag;

module.exports = {
getInnerHTML:getInnerHTML,
getOuterHTML:getOuterHTML,
getText:getText};


function getInnerHTML(elem){
return elem.children?elem.children.map(getOuterHTML).join(""):"";}



var booleanAttribs={
__proto__:null,
async:true,
autofocus:true,
autoplay:true,
checked:true,
controls:true,
defer:true,
disabled:true,
hidden:true,
loop:true,
multiple:true,
open:true,
readonly:true,
required:true,
scoped:true,
selected:true};


var emptyTags={
__proto__:null,
area:true,
base:true,
basefont:true,
br:true,
col:true,
frame:true,
hr:true,
img:true,
input:true,
isindex:true,
link:true,
meta:true,
param:true,
embed:true};


function getOuterHTML(elem){
switch(elem.type){
case ElementType.Text:
return elem.data;
case ElementType.Comment:
return "<!--" + elem.data + "-->";
case ElementType.Directive:
return "<" + elem.data + ">";
case ElementType.CDATA:
return "<!CDATA " + getInnerHTML(elem) + "]]>";}


var ret="<" + elem.name;
if("attribs" in elem){
for(var attr in elem.attribs) {
if(elem.attribs.hasOwnProperty(attr)){
ret += " " + attr;
var value=elem.attribs[attr];
if(value == null){
if(!(attr in booleanAttribs)){
ret += "=\"\"";}}else 

{
ret += "=\"" + value + "\"";}}}}





if(elem.name in emptyTags && elem.children.length === 0){
return ret + " />";}else 
{
return ret + ">" + getInnerHTML(elem) + "</" + elem.name + ">";}}



function getText(elem){
if(Array.isArray(elem))return elem.map(getText).join("");
if(isTag(elem) || elem.type === ElementType.CDATA)return getText(elem.children);
if(elem.type === ElementType.Text)return elem.data;
return "";}
});
__d('domelementtype/index.js',[],function(global, require, module, exports) {  module.
exports = {
Text:"text",
Directive:"directive",
Comment:"comment",
Script:"script",
Style:"style",
Tag:"tag",
CDATA:"cdata",
Doctype:"doctype",

isTag:function(elem){
return elem.type === "tag" || elem.type === "script" || elem.type === "style";}};
});
__d('domutils/lib/traversal.js',[],function(global, require, module, exports) {  var getChildren=exports.getChildren = function(elem){
return elem.children;};


var getParent=exports.getParent = function(elem){
return elem.parent;};


exports.getSiblings = function(elem){
var parent=getParent(elem);
return parent?getChildren(parent):[elem];};


exports.getAttributeValue = function(elem,name){
return elem.attribs && elem.attribs[name];};


exports.hasAttrib = function(elem,name){
return hasOwnProperty.call(elem.attribs,name);};


exports.getName = function(elem){
return elem.name;};
});
__d('domutils/lib/manipulation.js',[],function(global, require, module, exports) {  exports.removeElement = function(elem){
if(elem.prev)elem.prev.next = elem.next;
if(elem.next)elem.next.prev = elem.prev;

if(elem.parent){
var childs=elem.parent.children;
childs.splice(childs.lastIndexOf(elem),1);}};



exports.replaceElement = function(elem,replacement){
var prev=replacement.prev = elem.prev;
if(prev){
prev.next = replacement;}


var next=replacement.next = elem.next;
if(next){
next.prev = replacement;}


var parent=replacement.parent = elem.parent;
if(parent){
var childs=parent.children;
childs[childs.lastIndexOf(elem)] = replacement;}};



exports.appendChild = function(elem,child){
child.parent = elem;

if(elem.children.push(child) !== 1){
var sibling=elem.children[elem.children.length - 2];
sibling.next = child;
child.prev = sibling;
child.next = null;}};



exports.append = function(elem,next){
var parent=elem.parent,
currNext=elem.next;

next.next = currNext;
next.prev = elem;
elem.next = next;
next.parent = parent;

if(currNext){
currNext.prev = next;
if(parent){
var childs=parent.children;
childs.splice(childs.lastIndexOf(currNext),0,next);}}else 

if(parent){
parent.children.push(next);}};



exports.prepend = function(elem,prev){
var parent=elem.parent;
if(parent){
var childs=parent.children;
childs.splice(childs.lastIndexOf(elem),0,prev);}


if(elem.prev){
elem.prev.next = prev;}


prev.parent = parent;
prev.prev = elem.prev;
prev.next = elem;
elem.prev = prev;};
});
__d('domutils/lib/querying.js',["domelementtype/index.js"],function(global, require, module, exports) {  var isTag=require("domelementtype/index.js").isTag;

module.exports = {
filter:filter,
find:find,
findOneChild:findOneChild,
findOne:findOne,
existsOne:existsOne,
findAll:findAll};


function filter(test,element,recurse,limit){
if(!Array.isArray(element))element = [element];

if(typeof limit !== "number" || !isFinite(limit)){
limit = Infinity;}

return find(test,element,recurse !== false,limit);}


function find(test,elems,recurse,limit){
var result=[],childs;

for(var i=0,j=elems.length;i < j;i++) {
if(test(elems[i])){
result.push(elems[i]);
if(--limit <= 0)break;}


childs = elems[i].children;
if(recurse && childs && childs.length > 0){
childs = find(test,childs,recurse,limit);
result = result.concat(childs);
limit -= childs.length;
if(limit <= 0)break;}}



return result;}


function findOneChild(test,elems){
for(var i=0,l=elems.length;i < l;i++) {
if(test(elems[i]))return elems[i];}


return null;}


function findOne(test,elems){
var elem=null;

for(var i=0,l=elems.length;i < l && !elem;i++) {
if(!isTag(elems[i])){
continue;}else 
if(test(elems[i])){
elem = elems[i];}else 
if(elems[i].children.length > 0){
elem = findOne(test,elems[i].children);}}



return elem;}


function existsOne(test,elems){
for(var i=0,l=elems.length;i < l;i++) {
if(
isTag(elems[i]) && (
test(elems[i]) || 
elems[i].children.length > 0 && 
existsOne(test,elems[i].children)))


{
return true;}}



return false;}


function findAll(test,elems){
var result=[];
for(var i=0,j=elems.length;i < j;i++) {
if(!isTag(elems[i]))continue;
if(test(elems[i]))result.push(elems[i]);

if(elems[i].children.length > 0){
result = result.concat(findAll(test,elems[i].children));}}


return result;}
});
__d('domutils/lib/legacy.js',["domelementtype/index.js"],function(global, require, module, exports) {  var ElementType=require("domelementtype/index.js");
var isTag=exports.isTag = ElementType.isTag;

exports.testElement = function(options,element){
for(var key in options) {
if(!options.hasOwnProperty(key));else 
if(key === "tag_name"){
if(!isTag(element) || !options.tag_name(element.name)){
return false;}}else 

if(key === "tag_type"){
if(!options.tag_type(element.type))return false;}else 
if(key === "tag_contains"){
if(isTag(element) || !options.tag_contains(element.data)){
return false;}}else 

if(!element.attribs || !options[key](element.attribs[key])){
return false;}}


return true;};


var Checks={
tag_name:function(name){
if(typeof name === "function"){
return function(elem){return isTag(elem) && name(elem.name);};}else 
if(name === "*"){
return isTag;}else 
{
return function(elem){return isTag(elem) && elem.name === name;};}},


tag_type:function(type){
if(typeof type === "function"){
return function(elem){return type(elem.type);};}else 
{
return function(elem){return elem.type === type;};}},


tag_contains:function(data){
if(typeof data === "function"){
return function(elem){return !isTag(elem) && data(elem.data);};}else 
{
return function(elem){return !isTag(elem) && elem.data === data;};}}};




function getAttribCheck(attrib,value){
if(typeof value === "function"){
return function(elem){return elem.attribs && value(elem.attribs[attrib]);};}else 
{
return function(elem){return elem.attribs && elem.attribs[attrib] === value;};}}



function combineFuncs(a,b){
return function(elem){
return a(elem) || b(elem);};}



exports.getElements = function(options,element,recurse,limit){
var funcs=Object.keys(options).map(function(key){
var value=options[key];
return key in Checks?Checks[key](value):getAttribCheck(key,value);});


return funcs.length === 0?[]:this.filter(
funcs.reduce(combineFuncs),
element,recurse,limit);};



exports.getElementById = function(id,element,recurse){
if(!Array.isArray(element))element = [element];
return this.findOne(getAttribCheck("id",id),element,recurse !== false);};


exports.getElementsByTagName = function(name,element,recurse,limit){
return this.filter(Checks.tag_name(name),element,recurse,limit);};


exports.getElementsByTagType = function(type,element,recurse,limit){
return this.filter(Checks.tag_type(type),element,recurse,limit);};
});
__d('domutils/lib/helpers.js',[],function(global, require, module, exports) {  exports.

removeSubsets = function(nodes){
var idx=nodes.length,node,ancestor,replace;



while(--idx > -1) {
node = ancestor = nodes[idx];


nodes[idx] = null;
replace = true;

while(ancestor) {
if(nodes.indexOf(ancestor) > -1){
replace = false;
nodes.splice(idx,1);
break;}

ancestor = ancestor.parent;}



if(replace){
nodes[idx] = node;}}



return nodes;};
});
__d('nth-check/index.js',["nth-check/parse.js","nth-check/compile.js"],function(global, require, module, exports) {  var parse=require("nth-check/parse.js"),
compile=require("nth-check/compile.js");

module.exports = function nthCheck(formula){
return compile(parse(formula));};


module.exports.parse = parse;
module.exports.compile = compile;
});
__d('nth-check/parse.js',[],function(global, require, module, exports) {  module.exports = parse;




var re_nthElement=/^([+\-]?\d*n)?\s*(?:([+\-]?)\s*(\d+))?$/;




function parse(formula){
formula = formula.trim().toLowerCase();

if(formula === "even"){
return [2,0];}else 
if(formula === "odd"){
return [2,1];}else 
{
var parsed=formula.match(re_nthElement);

if(!parsed){
throw new SyntaxError("n-th rule couldn't be parsed ('" + formula + "')");}


var a;

if(parsed[1]){
a = parseInt(parsed[1],10);
if(isNaN(a)){
if(parsed[1].charAt(0) === "-")a = -1;else 
a = 1;}}else 

a = 0;

return [
a,
parsed[3]?parseInt((parsed[2] || "") + parsed[3],10):0];}}
});
__d('nth-check/compile.js',["boolbase/index.js"],function(global, require, module, exports) {  module.exports = compile;

var BaseFuncs=require("boolbase/index.js"),
trueFunc=BaseFuncs.trueFunc,
falseFunc=BaseFuncs.falseFunc;





function compile(parsed){
var a=parsed[0],
b=parsed[1] - 1;



if(b < 0 && a <= 0)return falseFunc;


if(a === -1)return function(pos){return pos <= b;};
if(a === 0)return function(pos){return pos === b;};

if(a === 1)return b < 0?trueFunc:function(pos){return pos >= b;};


var bMod=b % a;
if(bMod < 0)bMod += a;

if(a > 1){
return function(pos){
return pos >= b && pos % a === bMod;};}



a *= -1;

return function(pos){
return pos <= b && pos % a === bMod;};}
});
__d('boolbase/index.js',[],function(global, require, module, exports) {  module.exports = {
trueFunc:function trueFunc(){
return true;},

falseFunc:function falseFunc(){
return false;}};
});
__d('css-select/lib/attributes.js',["domutils/index.js","boolbase/index.js"],function(global, require, module, exports) {  var DomUtils=require("domutils/index.js"),
hasAttrib=DomUtils.hasAttrib,
getAttributeValue=DomUtils.getAttributeValue,
falseFunc=require("boolbase/index.js").falseFunc;


var reChars=/[-[\]{}()*+?.,\\^$|#\s]/g;





var attributeRules={
__proto__:null,
equals:function(next,data){
var name=data.name,
value=data.value;

if(data.ignoreCase){
value = value.toLowerCase();

return function equalsIC(elem){
var attr=getAttributeValue(elem,name);
return attr != null && attr.toLowerCase() === value && next(elem);};}



return function equals(elem){
return getAttributeValue(elem,name) === value && next(elem);};},


hyphen:function(next,data){
var name=data.name,
value=data.value,
len=value.length;

if(data.ignoreCase){
value = value.toLowerCase();

return function hyphenIC(elem){
var attr=getAttributeValue(elem,name);
return attr != null && (
attr.length === len || attr.charAt(len) === "-") && 
attr.substr(0,len).toLowerCase() === value && 
next(elem);};}



return function hyphen(elem){
var attr=getAttributeValue(elem,name);
return attr != null && 
attr.substr(0,len) === value && (
attr.length === len || attr.charAt(len) === "-") && 
next(elem);};},


element:function(next,data){
var name=data.name,
value=data.value;

if(/\s/.test(value)){
return falseFunc;}


value = value.replace(reChars,"\\$&");

var pattern="(?:^|\\s)" + value + "(?:$|\\s)",
flags=data.ignoreCase?"i":"",
regex=new RegExp(pattern,flags);

return function element(elem){
var attr=getAttributeValue(elem,name);
return attr != null && regex.test(attr) && next(elem);};},


exists:function(next,data){
var name=data.name;
return function exists(elem){
return hasAttrib(elem,name) && next(elem);};},


start:function(next,data){
var name=data.name,
value=data.value,
len=value.length;

if(len === 0){
return falseFunc;}


if(data.ignoreCase){
value = value.toLowerCase();

return function startIC(elem){
var attr=getAttributeValue(elem,name);
return attr != null && attr.substr(0,len).toLowerCase() === value && next(elem);};}



return function start(elem){
var attr=getAttributeValue(elem,name);
return attr != null && attr.substr(0,len) === value && next(elem);};},


end:function(next,data){
var name=data.name,
value=data.value,
len=-value.length;

if(len === 0){
return falseFunc;}


if(data.ignoreCase){
value = value.toLowerCase();

return function endIC(elem){
var attr=getAttributeValue(elem,name);
return attr != null && attr.substr(len).toLowerCase() === value && next(elem);};}



return function end(elem){
var attr=getAttributeValue(elem,name);
return attr != null && attr.substr(len) === value && next(elem);};},


any:function(next,data){
var name=data.name,
value=data.value;

if(value === ""){
return falseFunc;}


if(data.ignoreCase){
var regex=new RegExp(value.replace(reChars,"\\$&"),"i");

return function anyIC(elem){
var attr=getAttributeValue(elem,name);
return attr != null && regex.test(attr) && next(elem);};}



return function any(elem){
var attr=getAttributeValue(elem,name);
return attr != null && attr.indexOf(value) >= 0 && next(elem);};},


not:function(next,data){
var name=data.name,
value=data.value;

if(value === ""){
return function notEmpty(elem){
return !!getAttributeValue(elem,name) && next(elem);};}else 

if(data.ignoreCase){
value = value.toLowerCase();

return function notIC(elem){
var attr=getAttributeValue(elem,name);
return attr != null && attr.toLowerCase() !== value && next(elem);};}



return function not(elem){
return getAttributeValue(elem,name) !== value && next(elem);};}};




module.exports = {
compile:function(next,data,options){
if(options && options.strict && (
data.ignoreCase || data.action === "not"))
throw SyntaxError("Unsupported attribute selector");
return attributeRules[data.action](next,data);},

rules:attributeRules};
});
__d('css-select/lib/compile.js',["css-what/index.js","domutils/index.js","css-select/lib/general.js","css-select/lib/sort.js","boolbase/index.js","css-select/lib/procedure.json","css-select/lib/pseudos.js"],function(global, require, module, exports) {  module.



exports = compile;
module.exports.compileUnsafe = compileUnsafe;

var parse=require("css-what/index.js"),
DomUtils=require("domutils/index.js"),
isTag=DomUtils.isTag,
Rules=require("css-select/lib/general.js"),
sortRules=require("css-select/lib/sort.js"),
BaseFuncs=require("boolbase/index.js"),
trueFunc=BaseFuncs.trueFunc,
falseFunc=BaseFuncs.falseFunc,
procedure=require("css-select/lib/procedure.json");

function compile(selector,options){
var next=compileUnsafe(selector,options);
return wrap(next);}


function wrap(next){
return function base(elem){
return isTag(elem) && next(elem);};}



function compileUnsafe(selector,options){
var token=parse(selector,options);
return compileToken(token,options);}


function compileToken(token,options){
token.forEach(sortRules);

if(options && options.context){
var ctx=options.context;

token.forEach(function(t){
if(!isTraversal(t[0])){
t.unshift({type:"descendant"});}});



var context=Array.isArray(ctx)?
function(elem){
return ctx.indexOf(elem) >= 0;}:
function(elem){
return ctx === elem;};


if(options.rootFunc){
var root=options.rootFunc;

options.rootFunc = function(elem){
return context(elem) && root(elem);};}else 

{
options.rootFunc = context;}}



return token.
map(compileRules,options).
reduce(reduceRules,falseFunc);}


function isTraversal(t){
return procedure[t.type] < 0;}


function compileRules(rules){
if(rules.length === 0)return falseFunc;

var options=this;

return rules.reduce(function(func,rule){
if(func === falseFunc)return func;
return Rules[rule.type](func,rule,options);},
options && options.rootFunc || trueFunc);}


function reduceRules(a,b){
if(b === falseFunc || a === trueFunc){
return a;}

if(a === falseFunc || b === trueFunc){
return b;}


return function combine(elem){
return a(elem) || b(elem);};}







var Pseudos=require("css-select/lib/pseudos.js"),
filters=Pseudos.filters,
existsOne=DomUtils.existsOne,
isTag=DomUtils.isTag,
getChildren=DomUtils.getChildren;


function containsTraversal(t){
return t.some(isTraversal);}


function stripQuotes(str){
var firstChar=str.charAt(0);

if(firstChar === str.slice(-1) && (firstChar === "'" || firstChar === "\"")){
str = str.slice(1,-1);}


return str;}


filters.not = function(next,select,options){
var func,
opts={
xmlMode:!!(options && options.xmlMode),
strict:!!(options && options.strict)};


select = stripQuotes(select);

if(opts.strict){
var tokens=parse(select);
if(tokens.length > 1 || tokens.some(containsTraversal)){
throw new SyntaxError("complex selectors in :not aren't allowed in strict mode");}


func = compileToken(tokens,opts);}else 
{
func = compileUnsafe(select,opts);}


if(func === falseFunc)return next;
if(func === trueFunc)return falseFunc;

return function(elem){
return !func(elem) && next(elem);};};



filters.has = function(next,selector,options){


var opts={
xmlMode:!!(options && options.xmlMode),
strict:!!(options && options.strict)};

var func=compileUnsafe(selector,opts);

if(func === falseFunc)return falseFunc;
if(func === trueFunc)return function(elem){
return getChildren(elem).some(isTag) && next(elem);};


func = wrap(func);

return function has(elem){
return next(elem) && existsOne(func,getChildren(elem));};};



filters.matches = function(next,selector,options){
var opts={
xmlMode:!!(options && options.xmlMode),
strict:!!(options && options.strict),
rootFunc:next};


selector = stripQuotes(selector);

return compileUnsafe(selector,opts);};
});
__d('css-what/index.js',[],function(global, require, module, exports) {  "use strict";

module.exports = parse;

var re_ws=/^\s/,
re_name=/^(?:\\.|[\w\-\u00c0-\uFFFF])+/,
re_escape=/\\([\da-f]{1,6}\s?|(\s)|.)/ig,

re_attr=/^\s*((?:\\.|[\w\u00c0-\uFFFF\-])+)\s*(?:(\S?)=\s*(?:(['"])(.*?)\3|(#?(?:\\.|[\w\u00c0-\uFFFF\-])*)|)|)\s*(i)?\]/;

var actionTypes={
__proto__:null,
"undefined":"exists",
"":"equals",
"~":"element",
"^":"start",
"$":"end",
"*":"any",
"!":"not",
"|":"hyphen"};


var simpleSelectors={
__proto__:null,
">":"child",
"<":"parent",
"~":"sibling",
"+":"adjacent"};


var attribSelectors={
__proto__:null,
"#":["id","equals"],
".":["class","element"]};



function funescape(_,escaped,escapedWhitespace){
var high="0x" + escaped - 0x10000;



return high !== high || escapedWhitespace?
escaped:

high < 0?
String.fromCharCode(high + 0x10000):

String.fromCharCode(high >> 10 | 0xD800,high & 0x3FF | 0xDC00);}


function unescapeCSS(str){
return str.replace(re_escape,funescape);}


function getClosingPos(selector){
var pos=1,counter=1,len=selector.length;

for(;counter > 0 && pos < len;pos++) {
if(selector.charAt(pos) === "(")counter++;else 
if(selector.charAt(pos) === ")")counter--;}


return pos;}


function parse(selector,options){
selector = (selector + "").trimLeft();

var subselects=[],
tokens=[],
sawWS=false,
data,firstChar,name;

function getName(){
var sub=selector.match(re_name)[0];
selector = selector.substr(sub.length);
return unescapeCSS(sub);}


while(selector !== "") {
if(re_name.test(selector)){
if(sawWS){
tokens.push({type:"descendant"});
sawWS = false;}


name = getName();

if(!options || ("lowerCaseTags" in options?options.lowerCaseTags:!options.xmlMode)){
name = name.toLowerCase();}


tokens.push({type:"tag",name:name});}else 
if(re_ws.test(selector)){
sawWS = true;
selector = selector.trimLeft();}else 
{
firstChar = selector.charAt(0);
selector = selector.substr(1);

if(firstChar in simpleSelectors){
tokens.push({type:simpleSelectors[firstChar]});
selector = selector.trimLeft();
sawWS = false;
continue;}else 
if(firstChar === ","){
if(tokens.length === 0){
throw new SyntaxError("empty sub-selector");}

subselects.push(tokens);
tokens = [];

selector = selector.trimLeft();
sawWS = false;
continue;}else 
if(sawWS){
tokens.push({type:"descendant"});
sawWS = false;}


if(firstChar === "*"){
tokens.push({type:"universal"});}else 
if(firstChar in attribSelectors){
tokens.push({
type:"attribute",
name:attribSelectors[firstChar][0],
action:attribSelectors[firstChar][1],
value:getName(),
ignoreCase:false});}else 

if(firstChar === "["){
data = selector.match(re_attr);
if(!data){
throw new SyntaxError("Malformed attribute selector: " + selector);}

selector = selector.substr(data[0].length);
name = unescapeCSS(data[1]);

if(
!options || (
"lowerCaseAttributeNames" in options?
options.lowerCaseAttributeNames:
!options.xmlMode))

{
name = name.toLowerCase();}


tokens.push({
type:"attribute",
name:name,
action:actionTypes[data[2]],
value:unescapeCSS(data[4] || data[5] || ""),
ignoreCase:!!data[6]});}else 


if(firstChar === ":"){

name = getName().toLowerCase();
data = null;

if(selector.charAt(0) === "("){
var pos=getClosingPos(selector);
data = selector.substr(1,pos - 2);
selector = selector.substr(pos);}


tokens.push({type:"pseudo",name:name,data:data});}else 
{

throw new SyntaxError("Unmatched selector: " + firstChar + selector);}}}




if(subselects.length > 0 && tokens.length === 0){
throw new SyntaxError("empty sub-selector");}

subselects.push(tokens);
return subselects;}
});
__d('css-select/lib/general.js',["domutils/index.js","css-select/lib/attributes.js","css-select/lib/pseudos.js"],function(global, require, module, exports) {  var DomUtils=require("domutils/index.js"),
isTag=DomUtils.isTag,
getParent=DomUtils.getParent,
getChildren=DomUtils.getChildren,
getSiblings=DomUtils.getSiblings,
getName=DomUtils.getName;




module.exports = {
__proto__:null,

attribute:require("css-select/lib/attributes.js").compile,
pseudo:require("css-select/lib/pseudos.js").compile,


tag:function(next,data){
var name=data.name;
return function tag(elem){
return getName(elem) === name && next(elem);};},




descendant:function(next){
return function descendant(elem){
var found=false;

while(!found && (elem = getParent(elem))) {
found = next(elem);}


return found;};},


parent:function(next,data,options){
if(options && options.strict)throw SyntaxError("Parent selector isn't part of CSS3");

return function parent(elem){
return getChildren(elem).some(test);};


function test(elem){
return isTag(elem) && next(elem);}},


child:function(next){
return function child(elem){
var parent=getParent(elem);
return !!parent && next(parent);};},


sibling:function(next){
return function sibling(elem){
var siblings=getSiblings(elem);

for(var i=0;i < siblings.length;i++) {
if(isTag(siblings[i])){
if(siblings[i] === elem)break;
if(next(siblings[i]))return true;}}



return false;};},


adjacent:function(next){
return function adjacent(elem){
var siblings=getSiblings(elem),
lastElement;

for(var i=0;i < siblings.length;i++) {
if(isTag(siblings[i])){
if(siblings[i] === elem)break;
lastElement = siblings[i];}}



return !!lastElement && next(lastElement);};},


universal:function(next){
return next;}};
});
__d('css-select/lib/sort.js',["css-select/lib/procedure.json"],function(global, require, module, exports) {  module.exports = sortByProcedure;







var procedure=require("css-select/lib/procedure.json");

var ATTRIBUTE=procedure.attribute;

var attributes={
__proto__:null,
exists:8,
equals:7,
not:6,
start:5,
end:4,
any:3,
hyphen:2,
element:1};


function sortByProcedure(arr){
for(var i=1;i < arr.length;i++) {
var procNew=procedure[arr[i].type];

if(procNew < 0)continue;

for(var j=i - 1;j >= 0;j--) {
if(
procNew > procedure[arr[j].type] || !(
procNew === ATTRIBUTE && 
procedure[arr[j].type] === ATTRIBUTE && 
attributes[arr[i].action] <= attributes[arr[j].action]))

break;

var tmp=arr[j + 1];
arr[j + 1] = arr[j];
arr[j] = tmp;}}}
});
__d('css-select/lib/procedure.json',[],function(global, require, module, exports) {  module.exports = {
  "universal": 5,
  "tag": 3,
  "attribute": 1,
  "pseudo": 0,
  "descendant": -1,
  "child": -1,
  "parent": -1,
  "sibling": -1,
  "adjacent": -1
}
;
});
__d('cheerio/lib/api/manipulation.js',["lodash/index.js","cheerio/lib/parse.js","cheerio/lib/static.js","cheerio/lib/utils.js"],function(global, require, module, exports) {  var _=require('lodash/index.js'),
parse=require('cheerio/lib/parse.js'),
$=require('cheerio/lib/static.js'),
updateDOM=parse.update,
evaluate=parse.evaluate,
utils=require('cheerio/lib/utils.js'),
domEach=utils.domEach,
cloneDom=utils.cloneDom,
slice=Array.prototype.slice;



exports._makeDomArray = function makeDomArray(elem,clone){
if(elem == null){
return [];}else 
if(elem.cheerio){
return clone?cloneDom(elem.get(),elem.options):elem.get();}else 
if(Array.isArray(elem)){
return _.flatten(elem.map(function(el){
return this._makeDomArray(el,clone);},
this));}else 
if(typeof elem === 'string'){
return evaluate(elem,this.options);}else 
{
return clone?cloneDom([elem]):[elem];}};



var _insert=function(concatenator){
return function(){
var elems=slice.call(arguments),
lastIdx=this.length - 1;

return domEach(this,function(i,el){
var dom,domSrc;

if(typeof elems[0] === 'function'){
domSrc = elems[0].call(el,i,$.html(el.children));}else 
{
domSrc = elems;}


dom = this._makeDomArray(domSrc,i < lastIdx);
concatenator(dom,el.children,el);});};};















var uniqueSplice=function(array,spliceIdx,spliceCount,newElems,parent){
var spliceArgs=[spliceIdx,spliceCount].concat(newElems),
prev=array[spliceIdx - 1] || null,
next=array[spliceIdx] || null;
var idx,len,prevIdx,node,oldParent;



for(idx = 0,len = newElems.length;idx < len;++idx) {
node = newElems[idx];
oldParent = node.parent || node.root;
prevIdx = oldParent && oldParent.children.indexOf(newElems[idx]);

if(oldParent && prevIdx > -1){
oldParent.children.splice(prevIdx,1);
if(parent === oldParent && spliceIdx > prevIdx){
spliceArgs[0]--;}}



node.root = null;
node.parent = parent;

if(node.prev){
node.prev.next = node.next || null;}


if(node.next){
node.next.prev = node.prev || null;}


node.prev = newElems[idx - 1] || prev;
node.next = newElems[idx + 1] || next;}


if(prev){
prev.next = newElems[0];}

if(next){
next.prev = newElems[newElems.length - 1];}

return array.splice.apply(array,spliceArgs);};


exports.append = _insert(function(dom,children,parent){
uniqueSplice(children,children.length,0,dom,parent);});


exports.prepend = _insert(function(dom,children,parent){
uniqueSplice(children,0,0,dom,parent);});


exports.after = function(){
var elems=slice.call(arguments),
lastIdx=this.length - 1;

domEach(this,function(i,el){
var parent=el.parent || el.root;
if(!parent){
return;}


var siblings=parent.children,
index=siblings.indexOf(el),
domSrc,dom;


if(index < 0)return;

if(typeof elems[0] === 'function'){
domSrc = elems[0].call(el,i,$.html(el.children));}else 
{
domSrc = elems;}

dom = this._makeDomArray(domSrc,i < lastIdx);


uniqueSplice(siblings,index + 1,0,dom,parent);});


return this;};


exports.insertAfter = function(target){
var clones=[],
self=this;
if(typeof target === 'string'){
target = this.constructor.call(this.constructor,target,null,this._originalRoot);}

target = this._makeDomArray(target);
self.remove();
domEach(target,function(i,el){
var clonedSelf=self._makeDomArray(self.clone());
var parent=el.parent || el.root;
if(!parent){
return;}


var siblings=parent.children,
index=siblings.indexOf(el);


if(index < 0)return;


uniqueSplice(siblings,index + 1,0,clonedSelf,parent);
clones.push(clonedSelf);});

return this.constructor.call(this.constructor,this._makeDomArray(clones));};


exports.before = function(){
var elems=slice.call(arguments),
lastIdx=this.length - 1;

domEach(this,function(i,el){
var parent=el.parent || el.root;
if(!parent){
return;}


var siblings=parent.children,
index=siblings.indexOf(el),
domSrc,dom;


if(index < 0)return;

if(typeof elems[0] === 'function'){
domSrc = elems[0].call(el,i,$.html(el.children));}else 
{
domSrc = elems;}


dom = this._makeDomArray(domSrc,i < lastIdx);


uniqueSplice(siblings,index,0,dom,parent);});


return this;};


exports.insertBefore = function(target){
var clones=[],
self=this;
if(typeof target === 'string'){
target = this.constructor.call(this.constructor,target,null,this._originalRoot);}

target = this._makeDomArray(target);
self.remove();
domEach(target,function(i,el){
var clonedSelf=self._makeDomArray(self.clone());
var parent=el.parent || el.root;
if(!parent){
return;}


var siblings=parent.children,
index=siblings.indexOf(el);


if(index < 0)return;


uniqueSplice(siblings,index,0,clonedSelf,parent);
clones.push(clonedSelf);});

return this.constructor.call(this.constructor,this._makeDomArray(clones));};





exports.remove = function(selector){
var elems=this;


if(selector)
elems = elems.filter(selector);

domEach(elems,function(i,el){
var parent=el.parent || el.root;
if(!parent){
return;}


var siblings=parent.children,
index=siblings.indexOf(el);

if(index < 0)return;

siblings.splice(index,1);
if(el.prev){
el.prev.next = el.next;}

if(el.next){
el.next.prev = el.prev;}

el.prev = el.next = el.parent = el.root = null;});


return this;};


exports.replaceWith = function(content){
var self=this;

domEach(this,function(i,el){
var parent=el.parent || el.root;
if(!parent){
return;}


var siblings=parent.children,
dom=self._makeDomArray(typeof content === 'function'?content.call(el,i,el):content),
index;



updateDOM(dom,null);

index = siblings.indexOf(el);


uniqueSplice(siblings,index,1,dom,parent);
el.parent = el.prev = el.next = el.root = null;});


return this;};


exports.empty = function(){
domEach(this,function(i,el){
_.each(el.children,function(el){
el.next = el.prev = el.parent = null;});


el.children.length = 0;});

return this;};





exports.html = function(str){
if(str === undefined){
if(!this[0] || !this[0].children)return null;
return $.html(this[0].children,this.options);}


var opts=this.options;

domEach(this,function(i,el){
_.each(el.children,function(el){
el.next = el.prev = el.parent = null;});


var content=str.cheerio?str.clone().get():evaluate(str,opts);

updateDOM(content,el);});


return this;};


exports.toString = function(){
return $.html(this,this.options);};


exports.text = function(str){

if(str === undefined){
return $.text(this);}else 
if(typeof str === 'function'){

return domEach(this,function(i,el){
var $el=[el];
return exports.text.call($el,str.call(el,i,$.text($el)));});}




domEach(this,function(i,el){
_.each(el.children,function(el){
el.next = el.prev = el.parent = null;});


var elem={
data:str,
type:'text',
parent:el,
prev:null,
next:null,
children:[]};


updateDOM(elem,el);});


return this;};


exports.clone = function(){
return this._make(cloneDom(this.get(),this.options));};
});
__d('cheerio/lib/static.js',["css-select/index.js","cheerio/lib/parse.js","dom-serializer/index.js","lodash/index.js","cheerio/lib/cheerio.js","cheerio/lib/cheerio.js"],function(global, require, module, exports) {  var 



select=require('css-select/index.js'),
parse=require('cheerio/lib/parse.js'),
serialize=require('dom-serializer/index.js'),
_=require('lodash/index.js');





exports.load = function(content,options){
var Cheerio=require('cheerio/lib/cheerio.js');

options = _.defaults(options || {},Cheerio.prototype.options);

var root=parse(content,options);

var initialize=function(selector,context,r,opts){
if(!(this instanceof initialize)){
return new initialize(selector,context,r,opts);}

opts = _.defaults(opts || {},options);
return Cheerio.call(this,selector,context,r || root,opts);};




initialize.prototype = Object.create(Cheerio.prototype);
initialize.prototype.constructor = initialize;


initialize.fn = initialize.prototype;



initialize.prototype._originalRoot = root;


_.merge(initialize,exports);


initialize._root = root;

initialize._options = options;

return initialize;};






function render(that,dom,options){
if(!dom){
if(that._root && that._root.children){
dom = that._root.children;}else 
{
return '';}}else 

if(typeof dom === 'string'){
dom = select(dom,that._root,options);}


return serialize(dom,options);}






exports.html = function(dom,options){
var Cheerio=require('cheerio/lib/cheerio.js');





if(Object.prototype.toString.call(dom) === '[object Object]' && !options && !('length' in dom) && !('type' in dom))
{
options = dom;
dom = undefined;}




options = _.defaults(options || {},this._options,Cheerio.prototype.options);

return render(this,dom,options);};






exports.xml = function(dom){
var options=_.defaults({xmlMode:true},this._options);

return render(this,dom,options);};






exports.text = function(elems){
if(!elems)return '';

var ret='',
len=elems.length,
elem;

for(var i=0;i < len;i++) {
elem = elems[i];
if(elem.type === 'text')ret += elem.data;else 
if(elem.children && elem.type !== 'comment'){
ret += exports.text(elem.children);}}



return ret;};







exports.parseHTML = function(data,context,keepScripts){
var parsed;

if(!data || typeof data !== 'string'){
return null;}


if(typeof context === 'boolean'){
keepScripts = context;}


parsed = this.load(data);
if(!keepScripts){
parsed('script').remove();}







return parsed.root()[0].children.slice();};





exports.root = function(){
return this(this._root);};





exports.contains = function(container,contained){


if(contained === container){
return false;}




while(contained && contained !== contained.parent) {
contained = contained.parent;
if(contained === container){
return true;}}



return false;};
});
__d('cheerio/lib/api/css.js',["lodash/index.js","cheerio/lib/utils.js"],function(global, require, module, exports) {  var _=require('lodash/index.js'),
domEach=require('cheerio/lib/utils.js').domEach;
var toString=Object.prototype.toString;










exports.css = function(prop,val){
if(arguments.length === 2 || 

toString.call(prop) === '[object Object]'){
return domEach(this,function(idx,el){
setCss(el,prop,val,idx);});}else 

{
return getCss(this[0],prop);}};













function setCss(el,prop,val,idx){
if('string' == typeof prop){
var styles=getCss(el);
if(typeof val === 'function'){
val = val.call(el,idx,styles[prop]);}


if(val === ''){
delete styles[prop];}else 
if(val != null){
styles[prop] = val;}


el.attribs.style = stringify(styles);}else 
if('object' == typeof prop){
Object.keys(prop).forEach(function(k){
setCss(el,k,prop[k]);});}}












function getCss(el,prop){
var styles=parse(el.attribs.style);
if(typeof prop === 'string'){
return styles[prop];}else 
if(Array.isArray(prop)){
return _.pick(styles,prop);}else 
{
return styles;}}











function stringify(obj){
return Object.keys(obj || {}).
reduce(function(str,prop){
return str += '' + (
str?' ':'') + 
prop + 
': ' + 
obj[prop] + 
';';},
'');}










function parse(styles){
styles = (styles || '').trim();

if(!styles)return {};

return styles.
split(';').
reduce(function(obj,str){
var n=str.indexOf(':');

if(n < 1 || n === str.length - 1)return obj;
obj[str.slice(0,n).trim()] = str.slice(n + 1).trim();
return obj;},
{});}
});
__d('cheerio/lib/api/forms.js',["lodash/index.js"],function(global, require, module, exports) {  var 

_=require('lodash/index.js'),
submittableSelector='input,select,textarea,keygen',
rCRLF=/\r?\n/g,
rcheckableType=/^(?:checkbox|radio)$/i,
rsubmitterTypes=/^(?:submit|button|image|reset|file)$/i;

exports.serializeArray = function(){

var Cheerio=this.constructor;
return this.map(function(){
var elem=this;
var $elem=Cheerio(elem);
if(elem.name === 'form'){
return $elem.find(submittableSelector).toArray();}else 
{
return $elem.filter(submittableSelector).toArray();}}).

filter(function(){
var $elem=Cheerio(this);
var type=$elem.attr('type');


return $elem.attr('name') && !$elem.is(':disabled') && 

!rsubmitterTypes.test(type) && (

$elem.attr('checked') || !rcheckableType.test(type));}).

map(function(i,elem){
var $elem=Cheerio(elem);
var name=$elem.attr('name');
var val=$elem.val();


if(val == null){
return null;}else 
{

if(Array.isArray(val)){
return _.map(val,function(val){


return {name:name,value:val.replace(rCRLF,'\r\n')};});}else 


{
return {name:name,value:val.replace(rCRLF,'\r\n')};}}}).



get();};
});
__d('yarn/app/views/browser/wordHelpers.js',["yarn/words.js","yarn/app/views/browser/splitGluedTogetherWords.js"],function(global, require, module, exports) {  var words=require('yarn/words.js');
var splitGluedTogetherWords=require('yarn/app/views/browser/splitGluedTogetherWords.js');

function getWordsInRange(articleWords,start,stop){
var output=[];

articleWords.forEach(function(w){
if(

w in words && 

words[w] >= start && words[w] <= stop && 

output.indexOf(w) === -1)
{
output.push(w);}});




return output;}


module.exports = {
extractWordsFromArticle:function(articleText,rangeStart,rangeStop){
var textContent=articleText.replace(/  +/g,' ');

var extractedWords=splitGluedTogetherWords(textContent);


return getWordsInRange(extractedWords,rangeStart,rangeStop);}};
});
__d('yarn/words.js',[],function(global, require, module, exports) {  module.exports = {"suits":41,"wages":41,"opposed":41,"bullet":41,"visiting":41,"gloves":41,"sin":41,"examined":41,"productivity":41,"links":41,"barrel":41,"objective":41,"steam":41,"israelis":41,"lighting":41,"regard":41,"cruise":41,"tomato":41,"rage":41,"mill":41,"progressive":41,"demonstrated":41,"ta":41,"cafe":41,"billions":41,"enjoying":41,"deeper":41,"organizational":41,"trunk":41,"blanket":41,"bucks":41,"chase":41,"grain":41,"existed":41,"terrific":41,"creativity":41,"sang":41,"revealing":41,"willingness":41,"broadcast":41,"instances":41,"indication":41,"russians":41,"react":41,"advantages":41,"negotiate":41,"railroad":41,"recipes":41,"shorter":41,"seniors":41,"helicopter":41,"potato":41,"heroes":41,"consequently":41,"duties":41,"assuming":41,"sheep":41,"steep":41,"courtroom":41,"compromise":41,"checked":41,"bloody":41,"upstairs":41,"cave":41,"cooperative":41,"consequence":41,"christianity":41,"compelling":41,"employer":41,"exotic":41,"elevator":41,"publications":41,"waist":41,"pasta":41,"pet":41,"understands":41,"isolation":41,"rivers":41,"slid":41,"thanksgiving":41,"complained":41,"alarm":41,"defending":41,"kick":41,"wage":41,"variation":41,"panic":41,"mechanisms":41,"reception":41,"innovation":41,"checks":41,"persian":41,"romance":41,"teenage":41,"placing":41,"correlation":41,"counselor":41,"uh":41,"wears":41,"upset":41,"metropolitan":41,"vertical":41,"fixed":41,"reportedly":41,"obligation":41,"intentions":41,"barn":41,"featuring":41,"literacy":41,"cocaine":41,"realm":41,"custody":41,"patch":41,"lightning":42,"coaching":42,"germans":42,"reflected":42,"appointed":42,"reserve":42,"strangers":42,"mobile":42,"drops":42,"professors":42,"implemented":42,"tours":42,"wrist":42,"vessels":42,"slaves":42,"engaging":42,"portfolio":42,"partially":42,"inn":42,"tribe":42,"likewise":42,"tapes":42,"awake":42,"astronomers":42,"deadline":42,"shelf":42,"alike":42,"backyard":42,"conspiracy":42,"preliminary":42,"sidewalk":42,"grabs":42,"aggression":42,"coordinator":42,"trauma":42,"specialists":42,"mentally":42,"assumed":42,"purse":42,"economies":42,"supportive":42,"costly":42,"someday":42,"studios":42,"planets":42,"stimulus":42,"drank":42,"liability":42,"withdrawal":42,"forgive":42,"economist":42,"spray":42,"lens":42,"nursing":42,"toilet":42,"slavery":42,"journalism":42,"surveillance":42,"bath":42,"snapped":42,"columnist":42,"waved":42,"architect":42,"activist":42,"workshop":42,"announcer":42,"faint":42,"openly":42,"painter":42,"mining":42,"symbols":42,"acquisition":42,"jurors":42,"noting":42,"castle":42,"citizenship":42,"input":42,"unfair":42,"survived":42,"blond":42,"airplane":42,"considers":42,"fever":42,"closest":42,"meantime":42,"analyze":42,"declaration":42,"loyalty":42,"codes":42,"seeks":42,"conducting":42,"maintained":42,"two-thirds":42,"adolescent":42,"cubs":42,"informed":42,"vitamin":42,"eagle":42,"placement":42,"recommended":42,"economists":42,"origins":42,"poems":42,"paths":42,"remembering":42,"spoon":42,"devastating":42,"acquire":42,"graduates":42,"practicing":42,"solely":42,"scent":42,"demonstration":42,"proceed":42,"fighters":42,"alley":42,"tide":42,"stares":42,"depressed":42,"happily":42,"continent":42,"criminals":42,"graduation":42,"estimate":42,"removal":42,"charter":42,"publicity":42,"lion":43,"liquid":43,"politician":43,"voluntary":43,"pump":43,"transformed":43,"acquired":43,"snake":43,"considerably":43,"brutal":43,"emotionally":43,"canal":43,"rocket":43,"deliberately":43,"investing":43,"consistency":43,"strictly":43,"sovereignty":43,"encounter":43,"boring":43,"rang":43,"arranged":43,"removing":43,"elbow":43,"empirical":43,"rubber":43,"toes":43,"inherent":43,"travelers":43,"vessel":43,"advocacy":43,"accent":43,"strongest":43,"facilitate":43,"finishing":43,"bull":43,"rack":43,"strain":43,"chill":43,"till":43,"conclude":43,"overseas":43,"sticking":43,"metaphor":43,"irony":43,"zero":43,"awkward":43,"laying":43,"translation":43,"fool":43,"exercises":43,"packages":43,"planted":43,"privately":43,"beneficial":43,"fog":43,"transit":43,"wagon":43,"beard":43,"dense":43,"affordable":43,"transform":43,"speculation":43,"guides":43,"attacking":43,"administrator":43,"spinning":43,"foster":43,"neat":43,"one-third":43,"traits":43,"pretend":43,"density":43,"trout":43,"nationwide":43,"franchise":43,"radar":43,"alpha":43,"upcoming":43,"tenure":43,"tribes":43,"skilled":43,"carrier":43,"fake":43,"pills":43,"grin":43,"troubled":43,"affecting":43,"liver":43,"flash":43,"parenting":43,"inmates":43,"refuge":43,"execution":43,"terribly":43,"construct":43,"silently":43,"casualties":43,"explicitly":43,"sofa":43,"masses":43,"electoral":43,"comparisons":43,"duck":43,"grandchildren":43,"ironically":43,"socks":43,"grove":43,"factories":43,"committees":43,"inappropriate":43,"landed":43,"observer":43,"wounds":43,"viable":43,"autumn":43,"nails":43,"cope":43,"statue":43,"damaged":43,"kidding":43,"clever":43,"injured":43,"digging":43,"decides":43,"brass":43,"lawsuits":43,"salaries":43,"attraction":43,"imperial":43,"tracking":43,"calm":43,"seldom":43,"bride":43,"grandma":44,"arise":44,"galaxies":44,"egyptian":44,"smelled":44,"dealt":44,"unclear":44,"aboard":44,"prisoner":44,"alien":44,"cord":44,"parish":44,"sometime":44,"scattered":44,"boost":44,"medieval":44,"tune":44,"stole":44,"sectors":44,"ounces":44,"inclusion":44,"strengths":44,"imagery":44,"confrontation":44,"indicators":44,"owe":44,"abruptly":44,"marriages":44,"lamp":44,"fatigue":44,"addiction":44,"prosperity":44,"rolls":44,"buses":44,"astronomy":44,"poles":44,"humanitarian":44,"roses":44,"passionate":44,"curtain":44,"twenty-five":44,"shirts":44,"sacrifice":44,"dull":44,"occurring":44,"morality":44,"dessert":44,"replacing":44,"beast":44,"geographic":44,"playoff":44,"litigation":44,"tray":44,"scouts":44,"acknowledged":44,"infections":44,"disputes":44,"retire":44,"organ":44,"intend":44,"founding":44,"loses":44,"mushrooms":44,"pencil":44,"convenience":44,"artifacts":44,"assessing":44,"fits":44,"implies":44,"realities":44,"broth":44,"greenhouse":44,"screens":44,"underground":44,"lone":44,"testify":44,"lesser":44,"yelling":44,"cans":44,"challenged":44,"modeling":44,"motivated":44,"linear":44,"downstairs":44,"composed":44,"legislators":44,"skinny":44,"palms":44,"clarity":44,"ethnicity":44,"protesters":44,"appearing":44,"locate":44,"squad":44,"operators":44,"prospective":44,"lime":44,"pushes":44,"fancy":44,"boot":44,"saints":44,"healthcare":44,"damp":44,"suspension":44,"feared":44,"lasted":44,"testified":44,"lid":44,"epidemic":44,"incorporate":44,"extending":44,"champagne":44,"exports":44,"workshops":44,"comic":44,"endangered":44,"stretching":44,"abandon":44,"wrap":44,"ego":44,"eagles":44,"obligations":44,"diary":44,"asset":44,"matching":44,"identities":44,"attempted":44,"trap":44,"urgent":44,"sponsored":44,"sympathetic":44,"rally":44,"mobility":44,"orthodox":44,"descriptions":45,"catalog":45,"monument":45,"spin":45,"counted":45,"ink":45,"fried":45,"withdraw":45,"theaters":45,"needle":45,"presenting":45,"businessman":45,"announce":45,"refugee":45,"reservation":45,"enforce":45,"imports":45,"swear":45,"peaks":45,"wool":45,"contexts":45,"urging":45,"pots":45,"persuade":45,"widow":45,"profitable":45,"organisms":45,"optimism":45,"stored":45,"rushed":45,"optional":45,"frightening":45,"financially":45,"lean":45,"redskins":45,"hometown":45,"slim":45,"appealing":45,"diameter":45,"favorites":45,"concentrations":45,"locals":45,"convincing":45,"stakes":45,"touchdown":45,"embarrassing":45,"handled":45,"dioxide":45,"fundamentally":45,"inaudible":45,"socialist":45,"swinging":45,"invested":45,"rocky":45,"absent":45,"hiring":45,"fishermen":45,"despair":45,"scout":45,"loudly":45,"nazi":45,"salvation":45,"ma'am":45,"aloud":45,"ribs":45,"histories":45,"dual":45,"affection":45,"listeners":45,"charts":45,"recommends":45,"emergence":45,"instructors":45,"hood":45,"buddy":45,"breeding":45,"jurisdiction":45,"caribbean":45,"chasing":45,"cookie":45,"charging":45,"vivid":45,"facial":45,"judging":45,"ecology":45,"magical":45,"ally":45,"rigid":45,"candles":45,"lit":45,"footage":45,"dam":45,"hierarchy":45,"charm":45,"thirteen":45,"starters":45,"robot":45,"performers":45,"fuck":45,"containers":45,"motives":45,"soy":45,"delivering":45,"manual":45,"undoubtedly":45,"sphere":45,"hatred":45,"classified":45,"leans":45,"meanings":45,"mentor":45,"stack":45,"ironic":45,"aftermath":45,"afterwards":45,"wolves":45,"nitrogen":45,"converted":45,"spotlight":45,"biography":45,"oversight":45,"tuition":45,"ashamed":45,"portraits":45,"kilometers":45,"citing":45,"recognizes":45,"landmark":45,"flags":45,"subjective":45,"bureaucracy":45,"convey":45,"acknowledges":45,"episodes":45,"all-star":45,"lighter":46,"warrior":46,"exam":46,"compost":46,"thoughtful":46,"email":46,"rabbi":46,"servants":46,"revival":46,"commanders":46,"foreigners":46,"deficits":46,"documented":46,"completing":46,"newest":46,"invention":46,"talents":46,"graves":46,"lowered":46,"cracks":46,"declining":46,"medications":46,"lacks":46,"warehouse":46,"choir":46,"ward":46,"costume":46,"neatly":46,"religions":46,"appetite":46,"shotgun":46,"governmental":46,"trains":46,"worrying":46,"phenomena":46,"quoted":46,"aviation":46,"adapt":46,"blocking":46,"swept":46,"detection":46,"expressing":46,"interpreted":46,"gestures":46,"cathedral":46,"subway":46,"requested":46,"credits":46,"molecules":46,"bored":46,"bridges":46,"certainty":46,"motive":46,"parallel":46,"adjusted":46,"vendors":46,"freeze":46,"archives":46,"freezing":46,"outrage":46,"correspondence":46,"amateur":46,"tub":46,"feathers":46,"wallet":46,"wires":46,"chapel":46,"muttered":46,"qualified":46,"testament":46,"thorough":46,"kings":46,"praying":46,"large-scale":46,"standardized":46,"kills":46,"globalization":46,"pioneer":46,"governance":46,"comparative":46,"exhausted":46,"offenders":46,"glove":46,"co-host":46,"dismissed":46,"interpretations":46,"volumes":46,"memo":46,"ignorance":46,"spy":46,"erosion":46,"cousins":46,"pin":46,"emphasizes":46,"achievements":46,"backup":46,"pressing":46,"slipping":46,"segments":46,"meter":46,"fuels":46,"primitive":46,"confession":46,"lied":46,"lineup":46,"dug":46,"creator":46,"nonsense":46,"pigs":46,"loads":46,"successes":46,"teaspoons":46,"gaps":46,"assassination":46,"arctic":46,"kindergarten":46,"african-americans":46,"certification":46,"intriguing":46,"fictional":46,"retention":46,"adventures":46,"negotiation":46,"reply":46,"wrestling":46,"fights":46,"matrix":46,"picnic":46,"split":46,"sank":46,"consisted":46,"shield":46,"span":46,"partnerships":46,"unaware":46,"boil":46,"galleries":46,"brazilian":46,"manuscript":46,"broadly":46,"marginal":46,"pounding":46,"maple":46,"rubbed":46,"tolerate":46,"workforce":46,"methodology":46,"halls":46,"analyzing":46,"pets":46,"miniature":46,"sporting":46,"donor":46,"dancer":47,"circus":47,"kissing":47,"wiped":47,"fountain":47,"criterion":47,"wary":47,"crisp":47,"inhabitants":47,"fox":47,"sack":47,"tuned":47,"altar":47,"asthma":47,"excluded":47,"fireplace":47,"exploded":47,"hesitated":47,"louder":47,"leap":47,"margins":47,"shaft":47,"predators":47,"purchases":47,"adverse":47,"penalties":47,"linguistic":47,"solidarity":47,"marital":47,"slot":47,"cheating":47,"seventeen":47,"elk":47,"mainland":47,"shark":47,"exile":47,"flooding":47,"sunshine":47,"velvet":47,"dreaming":47,"diagnostic":47,"sundays":47,"entities":47,"mathematical":47,"obsession":47,"bald":47,"graduated":47,"foam":47,"abundant":47,"lengthy":47,"usage":47,"exceed":47,"prone":47,"glorious":47,"keyboard":47,"confronted":47,"lobbying":47,"scholarly":47,"hurry":47,"patches":47,"lengths":47,"sensible":47,"straightforward":47,"premise":47,"coats":47,"provincial":47,"notorious":47,"commodity":47,"targeting":47,"lamb":47,"odor":47,"posted":47,"confined":47,"lazy":47,"tense":47,"proudly":47,"arrow":47,"trembling":47,"pros":47,"hut":47,"environmentalists":47,"admiral":47,"evaluated":47,"taller":47,"sophomore":47,"anticipation":47,"randomly":47,"generic":47,"insane":47,"lowering":47,"relates":47,"flashed":47,"sustained":47,"portrayed":47,"bankers":47,"sue":47,"piles":47,"pa":47,"justification":47,"efficiently":47,"resemble":47,"develops":47,"antibiotics":47,"rendered":47,"reverse":47,"oddly":47,"combining":47,"interfere":47,"endure":47,"standpoint":47,"urge":47,"narratives":47,"motions":47,"launching":47,"africans":47,"communal":47,"calculations":47,"bachelor":47,"merchants":47,"naive":47,"conditioning":47,"architects":47,"wandering":47,"resentment":47,"biodiversity":47,"blades":47,"vigorous":47,"mornings":47,"builders":47,"blinked":47,"restructuring":47,"cycling":47,"pretending":47,"racist":47,"albums":47,"recruited":47,"mound":47,"rebel":47,"five-year":47,"tastes":47,"detected":47,"snakes":47,"sensors":47,"candle":47,"corresponding":47,"dot":47,"assured":47,"madness":47,"coral":47,"embargo":47,"poised":47,"appropriately":47,"servant":47,"anthropology":47,"hands-on":47,"compounds":47,"seas":47,"muddy":47,"bee":47,"peeled":47,"saddle":47,"nominated":48,"clearing":48,"sanctuary":48,"cloves":48,"towels":48,"speeds":48,"slopes":48,"desires":48,"trio":48,"pumpkin":48,"patrons":48,"morally":48,"mixing":48,"appointments":48,"idiot":48,"playground":48,"microphone":48,"seafood":48,"basics":48,"offspring":48,"arose":48,"ghosts":48,"recordings":48,"sip":48,"exhibitions":48,"warns":48,"announcing":48,"thigh":48,"evidently":48,"predicting":48,"schemes":48,"deployed":48,"stereotypes":48,"genuinely":48,"climbs":48,"wishes":48,"colonies":48,"resign":48,"nod":48,"edited":48,"proliferation":48,"syrian":48,"wonders":48,"sights":48,"raid":48,"eats":48,"brow":48,"squash":48,"unacceptable":48,"waitress":48,"atoms":48,"gosh":48,"reunion":48,"continuity":48,"bolt":48,"comeback":48,"mister":48,"liberties":48,"flown":48,"intersection":48,"predicts":48,"roster":48,"radically":48,"interim":48,"unpleasant":48,"concessions":48,"rider":48,"herd":48,"washed":48,"patriots":48,"grains":48,"convictions":48,"touchdowns":48,"transplant":48,"representations":48,"illegally":48,"poses":48,"ventures":48,"clarify":48,"axis":48,"wetlands":48,"rides":48,"pitching":48,"certificate":48,"stark":48,"privileged":48,"cedar":48,"cherry":48,"niche":48,"obtaining":48,"fading":48,"gardening":48,"maturity":48,"imaginary":48,"fold":48,"respiratory":48,"hemisphere":48,"grandpa":48,"discoveries":48,"restored":48,"relieved":48,"diesel":48,"pricing":48,"documentation":48,"admissions":48,"disappearance":48,"bilateral":48,"elites":48,"grapes":48,"explorer":48,"rude":48,"sturdy":48,"volatile":48,"attach":48,"ibid":48,"guardian":48,"granite":48,"negro":48,"lobbyists":48,"genetically":48,"delivers":48,"telescopes":48,"societal":48,"scare":48,"ash":48,"contributor":48,"decorated":48,"rests":48,"secondly":48,"finals":48,"pesticides":48,"supporter":48,"flows":48,"deposits":48,"probation":48,"charitable":48,"hurried":48,"performer":48,"territorial":48,"resolutions":48,"arc":48,"lush":48,"whiskey":48,"pending":48,"vaguely":48,"peered":48,"pervasive":48,"crosses":48,"accompany":48,"turf":48,"whisper":48,"witnessed":48,"prestige":48,"reliance":48,"spelling":48,"quantitative":48,"whisk":48,"rifles":48,"compensate":48,"abortions":48,"threatens":48,"calmly":48,"casting":48,"schooling":48,"gradual":48,"listing":48,"robbery":48,"incomplete":48,"probable":48,"pads":48,"prevalent":48,"freeway":48,"missionary":48,"thinly":48,"gauge":49,"infected":49,"restraint":49,"batter":49,"projected":49,"cereal":49,"policymakers":49,"babe":49,"coconut":49,"neglect":49,"chooses":49,"sculptures":49,"positioned":49,"solitary":49,"verse":49,"rugged":49,"diplomats":49,"ammunition":49,"adjusting":49,"shelters":49,"overview":49,"accomplishment":49,"delayed":49,"buffalo":49,"advises":49,"armored":49,"highways":49,"sleek":49,"bothered":49,"falcons":49,"high-profile":49,"greed":49,"postal":49,"float":49,"premiums":49,"monitors":49,"migrants":49,"hawks":49,"chess":49,"desktop":49,"committing":49,"easiest":49,"coherent":49,"bullying":49,"devotion":49,"tapped":49,"susceptible":49,"priced":49,"all-time":49,"persistence":49,"campaigning":49,"nodding":49,"presentations":49,"disappointing":49,"unwanted":49,"sailors":49,"infinite":49,"supplements":49,"linebacker":49,"backdrop":49,"spider":49,"sleeves":49,"initiated":49,"horns":49,"polling":49,"oaks":49,"nowadays":49,"seller":49,"knot":49,"scarf":49,"knives":49,"natives":49,"pastry":49,"cozy":49,"temptation":49,"fantasies":49,"premature":49,"noises":49,"penny":49,"aims":49,"halt":49,"demise":49,"fascination":49,"amusement":49,"exploit":49,"manners":49,"genocide":49,"recruit":49,"loneliness":49,"scarce":49,"reluctantly":49,"newsletter":49,"nut":49,"motorcycle":49,"compelled":49,"windshield":49,"worms":49,"wax":49,"bout":49,"understandable":49,"strains":49,"deepest":49,"backpack":49,"govern":49,"innovations":49,"altitude":49,"charities":49,"singles":49,"steroids":49,"hazards":49,"burst":49,"averaging":49,"spectacle":49,"heated":49,"high-speed":49,"hay":49,"lamps":49,"sprawling":49,"cabbage":49,"abusive":49,"ingredient":49,"emphasizing":49,"sins":49,"hose":49,"warrant":49,"binding":49,"objections":49,"someplace":49,"philosopher":49,"paragraph":49,"maximize":49,"situated":49,"reds":49,"flaws":49,"repetition":49,"seals":49,"pops":49,"deserved":49,"medals":49,"kin":49,"accepts":49,"seating":49,"weaker":49,"peasant":49,"mortgages":49,"shaken":49,"slides":49,"costumes":49,"novelist":49,"boxer":49,"fort":49,"trustees":49,"high-quality":49,"mastery":49,"rhetorical":49,"upright":49,"squares":49,"seized":49,"crap":49,"negotiating":49,"sneak":49,"rumor":49,"energetic":49,"airborne":49,"thief":49,"guaranteed":49,"residual":49,"apparatus":49,"underway":49,"stuffed":49,"chancellor":49,"pillows":49,"luggage":49,"dubbed":49,"cite":49,"smarter":49,"unified":49,"scratch":49,"periodically":49,"serbian":49,"listens":49,"lipstick":49,"distinctions":49,"richer":49,"characterize":49,"earrings":49,"infrared":49,"freezer":49,"openness":49,"simulation":49,"cliffs":49,"affluent":49,"rams":49,"travels":49,"logo":49,"goddess":49,"reservoir":49,"imagining":49,"brighter":50,"focal":50,"tactic":50,"secrecy":50,"sensed":50,"apt":50,"graceful":50,"sober":50,"cynical":50,"undercover":50,"visibility":50,"slightest":50,"theorists":50,"culinary":50,"vitamins":50,"catastrophe":50,"elimination":50,"bending":50,"restless":50,"timely":50,"prose":50,"readiness":50,"ants":50,"daunting":50,"separating":50,"proceeded":50,"compiled":50,"breathed":50,"palette":50,"terrace":50,"knowledgeable":50,"dangling":50,"spicy":50,"genetics":50,"civilized":50,"nephew":50,"arbitrary":50,"sliding":50,"cables":50,"cracking":50,"sketch":50,"retrieved":50,"disbelief":50,"sacks":50,"acknowledging":50,"skirts":50,"defeated":50,"grounded":50,"reactor":50,"interrogation":50,"interrupted":50,"graduating":50,"disturbed":50,"surveyed":50,"eighty":50,"extraordinarily":50,"arises":50,"curls":50,"assemble":50,"packaging":50,"low-fat":50,"trademark":50,"yep":50,"savvy":50,"massacre":50,"mercury":50,"thyme":50,"mid":50,"sleepy":50,"genome":50,"stripes":50,"contradictory":50,"employs":50,"astronauts":50,"fuzzy":50,"guided":50,"stubborn":50,"right-wing":50,"hugged":50,"elder":50,"tract":50,"attendant":50,"celery":50,"cubic":50,"respectable":50,"ruin":50,"vocational":50,"interstate":50,"selections":50,"generates":50,"discretion":50,"saturdays":50,"fences":50,"venue":50,"generating":50,"portray":50,"expressive":50,"battling":50,"habitats":50,"mandates":50,"dreamed":50,"torso":50,"brightest":50,"loading":50,"topped":50,"wicked":50,"render":50,"loser":50,"prevail":50,"desperation":50,"paradox":50,"scar":50,"peach":50,"transfers":50,"prosperous":50,"printer":50,"beers":50,"demons":50,"entrepreneur":50,"cone":50,"sickness":50,"durable":50,"black-and-white":50,"tenth":50,"vampire":50,"quilt":50,"feminism":50,"modify":50,"flock":50,"tumors":50,"labeled":50,"specializes":50,"alarming":50,"roadside":50,"objection":50,"upscale":50,"chop":50,"crawling":50,"speculate":50,"doomed":50,"tossing":50,"vastly":50,"monkeys":50,"defended":50,"baron":50,"cheering":50,"preparations":50,"landlord":50,"cruising":50,"strawberry":50,"lasts":50,"nineteen":50,"nude":50,"diminish":50,"retrieve":50,"moonlight":50,"offenses":50,"rhythms":50,"coyote":50,"intentionally":50,"obey":50,"incorporating":50,"slippery":50,"stimulation":50,"factions":50,"bumps":50,"richest":50,"challenger":50,"sweep":50,"reminiscent":50,"vest":50,"scottish":50,"chambers":50,"haitian":50,"calculation":50,"professionally":50,"condom":50,"drilling":50,"battalion":50,"vein":50,"literal":50,"cohort":50,"institutes":51,"episcopal":51,"revised":51,"animation":51,"scandals":51,"proceeds":51,"takeover":51,"thieves":51,"exhibits":51,"pinch":51,"slower":51,"sponsor":51,"spice":51,"builder":51,"starving":51,"mesh":51,"sherry":51,"betrayal":51,"ambiguity":51,"commanding":51,"planner":51,"exclaimed":51,"stressed":51,"medium-high":51,"believers":51,"sovereign":51,"frequencies":51,"long-distance":51,"volleyball":51,"mutually":51,"hatch":51,"aquatic":51,"summers":51,"fiery":51,"traveler":51,"stellar":51,"tattoo":51,"calf":51,"navigation":51,"arrogant":51,"sic":51,"appreciated":51,"folds":51,"remedy":51,"eh":51,"limiting":51,"swelling":51,"blaming":51,"onstage":51,"circumstance":51,"wartime":51,"particle":51,"browns":51,"striped":51,"donate":51,"reign":51,"heavens":51,"dominican":51,"greeted":51,"miracles":51,"confessed":51,"violently":51,"breed":51,"poker":51,"fortunes":51,"commented":51,"firearms":51,"chemotherapy":51,"editing":51,"batch":51,"agreeing":51,"orderly":51,"alumni":51,"foul":51,"all-purpose":51,"knots":51,"ragged":51,"diets":51,"prepares":51,"longing":51,"stimuli":51,"bounced":51,"compression":51,"predator":51,"pearl":51,"cease":51,"vodka":51,"unsure":51,"licenses":51,"sparkling":51,"celebrated":51,"fabrics":51,"wardrobe":51,"compassionate":51,"excuses":51,"stretches":51,"scan":51,"beginnings":51,"cutter":51,"gourmet":51,"articulate":51,"dinosaur":51,"lateral":51,"teachings":51,"bookstore":51,"headnote":51,"accustomed":51,"swirling":51,"weeping":51,"consist":51,"strategist":51,"disruptive":51,"temperament":51,"supplier":51,"rods":51,"drift":51,"danish":51,"ignores":51,"statutes":51,"haze":51,"glamorous":51,"electron":51,"employing":51,"pivotal":51,"server":51,"exhaustion":51,"premises":51,"indoors":51,"marrying":51,"modernity":51,"pretended":51,"irresponsible":51,"sixties":51,"initiation":51,"remnants":51,"licensing":51,"neon":51,"spike":51,"protections":51,"hopeless":51,"disadvantage":51,"commodities":51,"kidnapping":51,"secured":51,"ripped":51,"guessed":51,"dime":51,"hillside":51,"roofs":51,"contradiction":51,"democracies":51,"geometry":51,"saves":51,"rivalry":51,"handles":51,"unconstitutional":51,"generosity":51,"imitation":51,"mentors":51,"specially":51,"iq":51,"hindu":51,"screams":51,"imaginative":51,"allegiance":51,"olives":51,"recalling":51,"grassroots":51,"predictors":51,"venues":51,"peanuts":51,"strawberries":51,"indifference":51,"acre":51,"pub":51,"capturing":51,"scenery":51,"turnout":51,"elect":51,"anatomy":51,"fats":51,"vacations":51,"beats":51,"fines":51,"depicting":51,"deeds":51,"automobiles":51,"crunch":51,"sucking":51,"crooked":51,"spears":51,"detainees":51,"praised":51,"frank":51,"moderately":51,"posing":51,"transitions":51,"invasive":51,"criticizing":51,"tunes":51,"sealed":51,"narrowly":52,"rebuilding":52,"jeopardy":52,"qualifications":52,"cosmos":52,"tighten":52,"sued":52,"soothing":52,"cosmetic":52,"declares":52,"seminary":52,"peel":52,"devastated":52,"advertisements":52,"rested":52,"distinctly":52,"meaningless":52,"causal":52,"modernization":52,"displaying":52,"strap":52,"fitting":52,"transitional":52,"filters":52,"whip":52,"high-end":52,"announces":52,"playful":52,"monks":52,"statues":52,"accelerate":52,"guild":52,"shone":52,"hesitation":52,"arrows":52,"loaf":52,"advocating":52,"dive":52,"whereby":52,"complementary":52,"treaties":52,"laborers":52,"rotten":52,"integrating":52,"snacks":52,"heightened":52,"thanked":52,"stump":52,"tsunami":52,"fisherman":52,"supernatural":52,"deceased":52,"skins":52,"sentimental":52,"fracture":52,"stabilize":52,"torch":52,"preservice":52,"thou":52,"improper":52,"marched":52,"low-cost":52,"admired":52,"oblivious":52,"irrational":52,"clubhouse":52,"annoyed":52,"predecessors":52,"gardener":52,"tempting":52,"loft":52,"persona":52,"irregular":52,"litter":52,"downward":52,"advertisers":52,"monumental":52,"blended":52,"nylon":52,"garment":52,"nationals":52,"iranians":52,"heartbeat":52,"impending":52,"nightmares":52,"feat":52,"lutheran":52,"stern":52,"overlapping":52,"dictate":52,"ribbons":52,"liable":52,"polo":52,"restrictive":52,"texans":52,"plug":52,"long-standing":52,"splash":52,"unfinished":52,"procession":52,"hype":52,"chuck":52,"indefinitely":52,"disagreed":52,"noticeable":52,"oversees":52,"one-time":52,"supplement":52,"decker":52,"utilized":52,"retailer":52,"girlfriends":52,"gel":52,"revelations":52,"electrons":52,"ominous":52,"resonance":52,"rankings":52,"discard":52,"concede":52,"wastes":52,"sprang":52,"swam":52,"believer":52,"jewel":52,"seriousness":52,"desserts":52,"workouts":52,"grasses":52,"glared":52,"revive":52,"mandated":52,"pensions":52,"resembled":52,"shovel":52,"outskirts":52,"tackles":52,"damned":52,"trunks":52,"sunk":52,"bunker":52,"clips":52,"sipping":52,"buffet":52,"farewell":52,"zest":52,"vitality":52,"tasty":52,"unfolding":52,"threads":52,"retrospect":52,"protagonist":52,"upheld":52,"accessed":52,"introductory":52,"bitterness":52,"haul":52,"decision-making":52,"alas":52,"inflammation":52,"filthy":52,"bounce":52,"benefited":52,"yacht":52,"trim":52,"theologians":52,"insert":52,"detectors":52,"condo":52,"soak":52,"canadians":52,"horrific":52,"overlook":52,"owning":52,"cruelty":52,"asparagus":52,"reassuring":52,"paperback":52,"rip":52,"spins":52,"twenties":52,"drastically":52,"apron":52,"sacrifices":52,"confidentiality":52,"accumulation":52,"clicked":52,"disadvantaged":52,"outward":52,"anguish":52,"cough":52,"catfish":52,"demeanor":52,"dizzy":52,"submarine":52,"citrus":52,"thinner":52,"majesty":52,"airways":52,"don":52,"exhaust":52,"underwater":52,"pals":52,"quoting":52,"amazingly":52,"inaccurate":52,"makeshift":52,"ponds":52,"first-time":53,"reactors":53,"containment":53,"indicted":53,"roared":53,"acquisitions":53,"manufactured":53,"therapies":53,"contentious":53,"vase":53,"trader":53,"noodles":53,"reproduce":53,"three-quarters":53,"sibling":53,"covert":53,"mixer":53,"pianist":53,"captures":53,"fronts":53,"influx":53,"rails":53,"undergone":53,"frying":53,"centerpiece":53,"transmitted":53,"nun":53,"freshwater":53,"aerobic":53,"retrospective":53,"arbitration":53,"kitchens":53,"intently":53,"plumbing":53,"aerospace":53,"rescued":53,"internally":53,"exploding":53,"raining":53,"organizer":53,"bore":53,"unchanged":53,"offset":53,"spit":53,"congestion":53,"pluralism":53,"asbestos":53,"scratching":53,"stirred":53,"devils":53,"leaks":53,"ceramics":53,"impaired":53,"discounts":53,"richness":53,"attracts":53,"librarian":53,"minced":53,"bowed":53,"raids":53,"sewing":53,"finishes":53,"lest":53,"competencies":53,"railway":53,"arranging":53,"scramble":53,"tan":53,"gig":53,"composting":53,"splitting":53,"bracelet":53,"rabbits":53,"scanned":53,"butcher":53,"exemption":53,"commissioned":53,"gin":53,"spurs":53,"stain":53,"flats":53,"devastation":53,"brutality":53,"induce":53,"flashes":53,"cooks":53,"nightly":53,"rag":53,"weaken":53,"enhancement":53,"greatness":53,"opposes":53,"cleaner":53,"academically":53,"dynasty":53,"assortment":53,"jointly":53,"pneumonia":53,"balloons":53,"resisted":53,"deregulation":53,"handkerchief":53,"pioneering":53,"separates":53,"curly":53,"assign":53,"rig":53,"kaiser":53,"postseason":53,"designation":53,"fallout":53,"sophistication":53,"irresistible":53,"socialization":53,"dealings":53,"tattoos":53,"concession":53,"novice":53,"awoke":53,"award-winning":53,"protesting":53,"turbine":53,"on-site":53,"pounded":53,"burgers":53,"algorithm":53,"tremendously":53,"depict":53,"judaism":53,"shortcomings":53,"precautions":53,"unite":53,"loosen":53,"maverick":53,"diced":53,"caffeine":53,"calculating":53,"signatures":53,"stray":53,"equilibrium":53,"foreground":53,"persuaded":53,"fingernails":53,"barefoot":53,"deprivation":53,"dangerously":53,"anthropologists":53,"dysfunction":53,"plead":53,"ripping":53,"enjoyable":53,"inner-city":53,"embryos":53,"homosexuals":53,"processed":53,"greeks":53,"benches":53,"hints":53,"choking":53,"tumbling":53,"spiral":53,"tester":53,"wisely":53,"fools":53,"staple":53,"startled":53,"barracks":53,"evidenced":53,"destinations":53,"articulated":53,"italians":53,"oriental":53,"precinct":53,"upgrade":53,"atrocities":53,"outgoing":53,"metabolism":53,"brushes":53,"hauling":53,"slows":53,"predictive":53,"leaped":53,"romans":53,"purchasing":53,"optics":53,"attracting":53,"spokesperson":53,"affiliate":53,"brisk":53,"specifications":53,"bedtime":53,"meats":53,"mafia":53,"stall":53,"exchanged":53,"shivering":53,"extinct":53,"contemplating":53,"robes":53,"incorporates":53,"indonesian":53,"borrowed":53,"solemn":53,"ex-wife":53,"martian":53,"bluff":53,"beverage":53,"tolerant":53,"obstruction":53,"jagged":53,"gripped":53,"subsidiary":53,"displacement":53,"raging":53,"sweetness":54,"creditors":54,"resisting":54,"microscope":54,"dread":54,"nausea":54,"linger":54,"bloc":54,"motivations":54,"reelection":54,"flap":54,"flooded":54,"muted":54,"expanse":54,"cultivation":54,"clumsy":54,"psychologically":54,"hurdles":54,"reassure":54,"clerks":54,"gloom":54,"fueled":54,"joked":54,"wiring":54,"inadvertently":54,"traction":54,"proclaimed":54,"attribute":54,"carving":54,"weddings":54,"perjury":54,"puppet":54,"marsh":54,"excel":54,"breadth":54,"recurring":54,"hypertension":54,"poked":54,"jerk":54,"processors":54,"signaled":54,"subsidy":54,"steaks":54,"victimization":54,"capitals":54,"sting":54,"ceilings":54,"oriented":54,"melting":54,"needy":54,"commute":54,"looming":54,"deed":54,"fingerprints":54,"woes":54,"hikes":54,"directory":54,"deploy":54,"collects":54,"statutory":54,"dads":54,"rusty":54,"draped":54,"scrape":54,"conceive":54,"rosemary":54,"evolving":54,"pharmacy":54,"enforcing":54,"unofficial":54,"sesame":54,"scouting":54,"descended":54,"canon":54,"one-on-one":54,"rustic":54,"exterior":54,"legion":54,"frost":54,"doubted":54,"sipped":54,"drown":54,"ranchers":54,"candid":54,"hardship":54,"applaud":54,"peeling":54,"pillars":54,"protestants":54,"adrenaline":54,"humility":54,"unreasonable":54,"holistic":54,"leaping":54,"emptiness":54,"racially":54,"kneeling":54,"knob":54,"statistic":54,"sediment":54,"interviewer":54,"trailed":54,"self-confidence":54,"landowners":54,"tavern":54,"malpractice":54,"shareholder":54,"nests":54,"floated":54,"comics":54,"memoirs":54,"vault":54,"twenty-first":54,"tofu":54,"powerless":54,"congregations":54,"atom":54,"needless":54,"ruthless":54,"installations":54,"merge":54,"diners":54,"unthinkable":54,"exploratory":54,"comrades":54,"figs":54,"sprint":54,"contemplate":54,"centralized":54,"coercion":54,"granny":54,"bathing":54,"biomass":54,"gothic":54,"three-day":54,"rectangular":54,"dwell":54,"accusation":54,"misunderstanding":54,"skyline":54,"acculturation":54,"cushion":54,"odyssey":54,"advisors":54,"nanny":54,"pens":54,"gunman":54,"bully":54,"yielding":54,"robotic":54,"baths":54,"enforced":54,"two-way":54,"taxation":54,"equals":54,"willingly":54,"steals":54,"misguided":54,"powdered":54,"bearded":54,"converting":54,"specimen":54,"accumulate":54,"exodus":54,"attentive":54,"surfing":54,"broadcasts":54,"subtly":54,"eclectic":54,"aroma":54,"hawk":54,"dysfunctional":54,"squirrel":54,"registry":54,"pancakes":54,"bind":54,"conspicuous":54,"horrors":54,"slap":54,"dove":54,"apiece":54,"ensures":54,"radiant":54,"attainment":54,"beasts":54,"plentiful":54,"thirties":54,"fishes":54,"decor":54,"timeless":54,"zip":54,"wallpaper":54,"lighthouse":54,"prop":54,"diaries":54,"clutch":54,"imbalance":54,"speculative":54,"occupying":54,"spiders":54,"enhances":54,"kinda":54,"diploma":54,"socket":54,"pacing":54,"coyotes":54,"sidelines":54,"geometric":54,"indulge":54,"distortion":54,"somber":54,"quotes":54,"logistics":54,"groaned":54,"transcript":54,"shattered":54,"menace":54,"cohesion":54,"hip-hop":54,"ventilation":54,"inclination":54,"pictured":54,"heavyweight":54,"co-founder":54,"plainly":54,"sanitation":54,"flung":54,"dared":54,"switching":54,"uniformed":54,"backcountry":54,"fostering":55,"iconic":55,"jihad":55,"unnatural":55,"abstraction":55,"good-bye":55,"embodied":55,"constituted":55,"trailers":55,"stale":55,"subordinate":55,"trendy":55,"homers":55,"slippers":55,"sparked":55,"starvation":55,"assorted":55,"runaway":55,"explorers":55,"bathtub":55,"coordinated":55,"mortar":55,"eggplant":55,"visibly":55,"convergence":55,"regrets":55,"festive":55,"chimney":55,"lunches":55,"forgiven":55,"beetle":55,"osteoporosis":55,"gamma":55,"unconventional":55,"shuts":55,"signaling":55,"imprisoned":55,"overseeing":55,"nodes":55,"alcoholic":55,"fossils":55,"nightclub":55,"newcomer":55,"hamburger":55,"forge":55,"neural":55,"toasted":55,"addictive":55,"molecule":55,"mural":55,"cost-effective":55,"garrison":55,"tending":55,"grouping":55,"seductive":55,"invitations":55,"checklist":55,"doubles":55,"unintended":55,"treadmill":55,"pastors":55,"abide":55,"hospice":55,"chicks":55,"denim":55,"community-based":55,"counters":55,"nebula":55,"sane":55,"golfer":55,"bicycles":55,"enzymes":55,"dilemmas":55,"depiction":55,"manure":55,"markedly":55,"incompetent":55,"outdated":55,"unification":55,"tug":55,"monarchy":55,"unavailable":55,"acknowledgment":55,"barber":55,"memorandum":55,"easing":55,"unpaid":55,"emergencies":55,"contextual":55,"palpable":55,"mobilize":55,"squarely":55,"barred":55,"shivered":55,"artifact":55,"apologies":55,"spies":55,"fumes":55,"nonstick":55,"decorate":55,"torque":55,"manuscripts":55,"mobilization":55,"reinforcing":55,"secretaries":55,"cynicism":55,"homelessness":55,"grassy":55,"patronage":55,"corrected":55,"brittle":55,"two-hour":55,"blaze":55,"hungarian":55,"invaded":55,"downstream":55,"pedagogical":55,"incremental":55,"witnessing":55,"pathogens":55,"poisonous":55,"carnival":55,"forbid":55,"bloom":55,"accessibility":55,"savage":55,"coordinates":55,"pedal":55,"wept":55,"invaluable":55,"advertisement":55,"marxist":55,"homage":55,"tenor":55,"subsistence":55,"illusions":55,"undertaking":55,"imprisonment":55,"ghetto":55,"serene":55,"distributions":55,"anthem":55,"fledgling":55,"reap":55,"controllers":55,"obedience":55,"forestry":55,"paralysis":55,"depart":55,"angular":55,"hilarious":55,"proportional":55,"relational":55,"glaze":55,"intrusion":55,"stylist":55,"horizons":55,"unfairly":55,"overhaul":55,"discs":55,"humorous":55,"brutally":55,"broaden":55,"mimic":55,"sluggish":55,"competency":55,"seventeenth":55,"faulty":55,"appropriation":55,"distributing":55,"bland":55,"explodes":55,"slump":55,"sniffed":55,"betrayed":55,"colder":55,"undecided":55,"compose":55,"sensual":55,"catalogs":55,"muster":55,"decreasing":55,"groom":55,"handicapped":55,"margarine":55,"civilizations":55,"swallowing":55,"triumphant":55,"discontent":55,"flourish":55,"collaborate":55,"breathtaking":55,"accumulated":55,"stroked":55,"discourses":55,"earthly":55,"widen":55,"fragmented":55,"escort":55,"fungi":55,"dissolved":55,"stabilization":55,"scanner":55,"improvisation":55,"witty":55,"patriarchal":55,"heirs":55,"precarious":55,"gathers":55,"thee":55,"cling":55,"attributable":55,"cape":55,"chased":55,"docks":55,"anecdotal":55,"beverages":55,"mole":55,"blessings":55,"light-years":55,"seizure":55,"behaving":55,"billionaire":55,"interceptions":55,"extraction":55,"mariners":55,"documenting":55,"cocktails":55,"portal":55,"bedding":55,"highs":55,"nearing":55,"staffer":55,"self-defense":55,"grouped":55,"receptionist":55,"zinc":55,"shrug":55,"ape":55,"wagons":56,"sixteenth":56,"compromises":56,"rites":56,"halves":56,"prehistoric":56,"disproportionately":56,"buds":56,"decks":56,"guarding":56,"skeptics":56,"illuminate":56,"remorse":56,"nominal":56,"attends":56,"qualifying":56,"skipping":56,"objectivity":56,"crammed":56,"euro":56,"coworkers":56,"enthusiasts":56,"leapt":56,"quaint":56,"frowning":56,"favoring":56,"scoop":56,"bison":56,"municipalities":56,"recollection":56,"yugoslav":56,"wrinkled":56,"brows":56,"toxins":56,"villain":56,"garments":56,"understandably":56,"encompasses":56,"fixture":56,"wipes":56,"constituencies":56,"rouge":56,"crushing":56,"vogue":56,"anew":56,"gal":56,"behaviour":56,"conserve":56,"multivariate":56,"stylistic":56,"turbines":56,"viability":56,"clicks":56,"self-interest":56,"plank":56,"herring":56,"perverse":56,"adversaries":56,"crate":56,"detecting":56,"warranty":56,"juries":56,"sparse":56,"callers":56,"binary":56,"westerners":56,"upbringing":56,"reviewers":56,"dominating":56,"orthodoxy":56,"brilliantly":56,"clinicians":56,"bathrooms":56,"walnuts":56,"bullpen":56,"zeal":56,"life-threatening":56,"churning":56,"orbits":56,"commenting":56,"complexion":56,"evokes":56,"dryer":56,"humiliating":56,"snapshot":56,"neurons":56,"circulating":56,"nationalists":56,"moderates":56,"recurrent":56,"hysteria":56,"casket":56,"manageable":56,"apprehension":56,"delicately":56,"watchers":56,"constrained":56,"cadets":56,"seams":56,"cones":56,"bipolar":56,"pageant":56,"onboard":56,"shortstop":56,"expelled":56,"perch":56,"billed":56,"surrounds":56,"pictorial":56,"presumption":56,"youngster":56,"parchment":56,"resides":56,"amateurs":56,"trustee":56,"bikini":56,"glucose":56,"twentieth-century":56,"oscars":56,"paranoia":56,"notwithstanding":56,"hum":56,"viewpoints":56,"bypass":56,"disgusted":56,"perpetrators":56,"murdering":56,"stalls":56,"fry":56,"forcefully":56,"hovered":56,"creepy":56,"tenet":56,"taiwanese":56,"rosy":56,"roaring":56,"notation":56,"assisted":56,"shave":56,"austrian":56,"blasting":56,"raisins":56,"excluding":56,"sails":56,"blinding":56,"continents":56,"mother-in-law":56,"small-town":56,"clientele":56,"unreliable":56,"cartel":56,"sociological":56,"parishes":56,"backstage":56,"implying":56,"after-school":56,"hepatitis":56,"typing":56,"darkest":56,"transient":56,"tedious":56,"real-time":56,"leafy":56,"awaits":56,"envelopes":56,"repay":56,"pipelines":56,"real-world":56,"conceivable":56,"stains":56,"semiconductor":56,"footprints":56,"cushions":56,"reimbursement":56,"lingered":56,"quicker":56,"lore":56,"consolation":56,"avocado":56,"quitting":56,"switches":56,"dolphin":56,"ecstatic":56,"happiest":56,"vocation":56,"wedges":56,"eruption":56,"oasis":56,"cheerfully":56,"professionalism":56,"x-rays":56,"donkey":56,"divergent":56,"mosques":56,"dye":56,"cyberspace":56,"ambivalent":56,"unveiled":56,"funerals":56,"mastered":56,"slogans":56,"thursdays":56,"savior":56,"wraps":56,"informant":56,"possessing":56,"owls":56,"soles":56,"plutonium":56,"gadgets":56,"overboard":56,"restraints":56,"freeing":56,"intrusive":56,"corresponds":56,"arabian":56,"prejudices":56,"biting":56,"grueling":56,"hues":56,"miner":56,"mammoth":56,"capitalize":56,"orphanage":56,"spiritually":56,"broadcasters":56,"upheaval":56,"distributors":56,"cleaners":56,"surveying":56,"intervening":56,"unprotected":56,"hideous":56,"pencils":56,"self-reported":56,"reacts":56,"backers":56,"liberating":56,"reeling":56,"articulation":56,"interrupting":56,"creed":56,"huddled":56,"franchises":56,"festivities":56,"gritty":56,"simulate":56,"contestants":56,"gowns":56,"titanium":56,"boarded":56,"wealthiest":56,"woodlands":56,"worldview":56,"longstanding":56,"orbiting":56,"sucks":56,"chestnut":56,"boasted":56,"petite":56,"hallways":56,"anxieties":56,"outfielder":56,"flickering":56,"indices":56,"programme":56,"newsroom":56,"gunshot":57,"lasers":57,"multiculturalism":57,"cricket":57,"baltic":57,"reorganization":57,"nonfiction":57,"righteous":57,"parachute":57,"asteroids":57,"clerical":57,"cross-cultural":57,"leukemia":57,"moderation":57,"contraception":57,"halftime":57,"argentine":57,"discarded":57,"boast":57,"treasurer":57,"diaspora":57,"ludicrous":57,"deadlines":57,"alternately":57,"hopelessly":57,"bitten":57,"vinaigrette":57,"occupants":57,"bourbon":57,"spear":57,"sped":57,"optimum":57,"underscores":57,"repercussions":57,"token":57,"excesses":57,"eyeing":57,"rulings":57,"reasoned":57,"watchdog":57,"astonished":57,"squid":57,"baggy":57,"empirically":57,"rebound":57,"casts":57,"notified":57,"commuters":57,"ethos":57,"hearth":57,"bred":57,"vans":57,"deterrence":57,"filmed":57,"grievances":57,"elevators":57,"gladly":57,"betray":57,"assassin":57,"hides":57,"attrition":57,"stressing":57,"adultery":57,"lent":57,"variant":57,"winked":57,"lords":57,"edit":57,"ghostly":57,"concurrent":57,"sincerity":57,"dominion":57,"exchanging":57,"arsenic":57,"algorithms":57,"inject":57,"barked":57,"enclosure":57,"ale":57,"menacing":57,"defective":57,"unnamed":57,"uncanny":57,"drugstore":57,"surged":57,"knocks":57,"blasted":57,"eminent":57,"gland":57,"adjoining":57,"shipment":57,"giddy":57,"align":57,"spills":57,"situational":57,"wavelengths":57,"propensity":57,"coloring":57,"mare":57,"leftovers":57,"policing":57,"afloat":57,"stench":57,"strolled":57,"mythical":57,"scholastic":57,"californians":57,"doorstep":57,"axe":57,"budding":57,"legislator":57,"mistakenly":57,"refining":57,"infinity":57,"usher":57,"typewriter":57,"tackling":57,"sweeps":57,"secretary-general":57,"embarrass":57,"abusing":57,"postoperative":57,"goggles":57,"ripple":57,"demolition":57,"blinds":57,"singled":57,"first-year":57,"goofy":57,"evacuate":57,"frosting":57,"departing":57,"flagship":57,"blockade":57,"chrome":57,"tenuous":57,"stripping":57,"formative":57,"uniformly":57,"detachment":57,"rapper":57,"freak":57,"contemplation":57,"oats":57,"economical":57,"climates":57,"cheeses":57,"bumper":57,"portraying":57,"distributor":57,"homer":57,"shuffling":57,"convertible":57,"assertive":57,"incumbents":57,"murderous":57,"glued":57,"endemic":57,"underscore":57,"diverted":57,"barley":57,"squadron":57,"stony":57,"rooting":57,"overturn":57,"fairway":57,"small-scale":57,"captains":57,"postsecondary":57,"realms":57,"contra":57,"unfolds":57,"mediator":57,"attained":57,"rocker":57,"wade":57,"refine":57,"arrivals":57,"countdown":57,"knowingly":57,"improperly":57,"horrified":57,"bogus":57,"ketchup":57,"self-control":57,"harassed":57,"shooters":57,"urgently":57,"predominant":57,"prognosis":57,"semifinals":57,"jumper":57,"distractions":57,"tabloid":57,"malignant":57,"inspirational":57,"hostilities":57,"intruder":57,"imaginable":57,"imposition":57,"diaper":57,"adamant":57,"vertically":57,"vigilant":57,"sporadic":57,"trimmings":57,"splashing":57,"kettle":57,"stroll":57,"punches":57,"reconstruct":57,"strolling":57,"cutbacks":57,"medically":57,"diagrams":57,"app":57,"illumination":57,"shiites":57,"silvery":57,"freestyle":57,"puddle":57,"bead":57,"iphone":57,"beaver":57,"subdued":57,"headphones":57,"fend":57,"taps":57,"ultrasound":57,"full-scale":57,"handheld":57,"peek":57,"non-profit":57,"muttering":57,"linkages":57,"migrate":57,"dimly":57,"cigars":57,"stormed":57,"solids":57,"retribution":57,"nigger":57,"thrift":57,"picturesque":57,"relativity":57,"revolver":57,"bundles":57,"objected":57,"airtight":57,"cervical":57,"hammering":57,"contagious":57,"lilies":57,"postpone":57,"forecasting":57,"participatory":57,"acquitted":57,"hesitates":57,"clapped":57,"schoolchildren":57,"preferential":57,"reassurance":57,"volatility":57,"fruitful":57,"artificially":57,"fluent":57,"flashy":57,"patriarch":57,"crafted":57,"flaming":57,"deliveries":57,"powerhouse":58,"fuller":58,"landscaping":58,"logos":58,"rover":58,"clapping":58,"setbacks":58,"cutoff":58,"murals":58,"bumping":58,"shards":58,"stocked":58,"flick":58,"footnote":58,"fungal":58,"philosophies":58,"tilt":58,"vents":58,"worrisome":58,"cocked":58,"caravan":58,"carnage":58,"glee":58,"foreseeable":58,"tart":58,"fashioned":58,"interruption":58,"infidelity":58,"sweatshirt":58,"throats":58,"pedestrians":58,"penchant":58,"galactic":58,"spoil":58,"depletion":58,"snug":58,"helium":58,"interplay":58,"suitcases":58,"safari":58,"haitians":58,"aforementioned":58,"authorize":58,"blush":58,"overriding":58,"widows":58,"spawning":58,"starve":58,"uniqueness":58,"occupancy":58,"alaskan":58,"evidence-based":58,"engages":58,"headset":58,"tibetan":58,"protracted":58,"unmarked":58,"entitlements":58,"milieu":58,"weekdays":58,"convict":58,"haunting":58,"boating":58,"grading":58,"spaniards":58,"entourage":58,"extremist":58,"walkway":58,"coincide":58,"darted":58,"generational":58,"greetings":58,"welsh":58,"mm":58,"unravel":58,"transforms":58,"tripod":58,"smartest":58,"pancake":58,"antisocial":58,"immersion":58,"embodies":58,"beacon":58,"agonizing":58,"condemning":58,"spoons":58,"mischief":58,"panties":58,"somali":58,"substitution":58,"populace":58,"lagoon":58,"wherein":58,"sandstone":58,"stinging":58,"coached":58,"curl":58,"waiver":58,"scares":58,"landfills":58,"collapsing":58,"reproduced":58,"minivan":58,"stormy":58,"tornadoes":58,"airing":58,"ambush":58,"citations":58,"relocate":58,"molding":58,"diagnoses":58,"distracting":58,"suspiciously":58,"hunted":58,"affiliates":58,"weekday":58,"saloon":58,"lifeless":58,"literate":58,"flanked":58,"mussels":58,"staffs":58,"inquired":58,"wink":58,"incense":58,"harshly":58,"trickle":58,"chewed":58,"over-the-counter":58,"caretaker":58,"narrowing":58,"battleground":58,"venetian":58,"grasped":58,"funnel":58,"rectangle":58,"meticulously":58,"sprawl":58,"chore":58,"seaside":58,"dichotomy":58,"caterpillar":58,"dumps":58,"antiquity":58,"bargains":58,"thyroid":58,"teased":58,"hind":58,"paddle":58,"co-op":58,"sway":58,"dissolution":58,"momentary":58,"lag":58,"nuggets":58,"abduction":58,"concluding":58,"residences":58,"atm":58,"prematurely":58,"prized":58,"cons":58,"flattering":58,"modesty":58,"minimizing":58,"skulls":58,"whiff":58,"underside":58,"emit":58,"explanatory":58,"pistons":58,"recounted":58,"vibrations":58,"acorn":58,"hacking":58,"hens":58,"hurrying":58,"elective":58,"jaguars":58,"ethnically":58,"swell":58,"twenty-seven":58,"prickly":58,"inflicted":58,"countered":58,"buyout":58,"chests":58,"estimating":58,"winery":58,"slash":58,"flared":58,"sunken":58,"solemnly":58,"spirited":58,"fatalities":58,"exhausting":58,"critiques":58,"sparkle":58,"incompetence":58,"unfavorable":58,"albanian":58,"engineered":58,"compounded":58,"spores":58,"grenades":58,"deportation":58,"fashions":58,"back-to-back":58,"laptops":58,"flourished":58,"parity":58,"precincts":58,"labyrinth":58,"grass-roots":58,"smashed":58,"longed":58,"cures":58,"kitten":58,"irritating":58,"markings":58,"administering":58,"psychotherapy":58,"pitfalls":58,"quantify":58,"fiberglass":58,"suppressed":58,"excursion":58,"observational":58,"spam":58,"swirled":58,"suspense":58,"substituting":58,"disposed":58,"tango":58,"sanctioned":58,"hooves":58,"paved":58,"alcoholics":58,"unfolded":58,"outs":58,"piping":58,"wry":58,"nobility":58,"renal":58,"leaked":58,"scarves":58,"dotted":58,"grapefruit":58,"enigmatic":58,"sexism":58,"feeble":58,"insults":58,"shortfall":58,"panther":58,"insulting":58,"almighty":58,"polio":58,"oftentimes":58,"dew":58,"chute":58,"aspire":58,"austerity":58,"issuing":58,"drawbacks":58,"biographies":58,"camaraderie":58,"paces":58,"flare":58,"groundbreaking":58,"aloft":58,"magnets":58,"cafes":58,"walker":58,"smoother":58,"naughty":58,"outcry":58,"prophetic":58,"coupling":58,"tally":58,"supernova":58,"stronghold":58,"voiced":58,"spying":58,"grossly":58,"stagnant":58,"lineman":58,"cornmeal":58,"excitedly":59,"psychoanalysis":59,"rudimentary":59,"anti-abortion":59,"millionaires":59,"filings":59,"requisite":59,"promoter":59,"reversing":59,"glitter":59,"cinematic":59,"slashing":59,"burying":59,"neutron":59,"latex":59,"withhold":59,"fastball":59,"gasp":59,"enclave":59,"afforded":59,"firewood":59,"housewives":59,"simmering":59,"facilitated":59,"takeoff":59,"plume":59,"corporal":59,"sect":59,"quintessential":59,"dreamy":59,"paradoxical":59,"maize":59,"tufts":59,"balsamic":59,"unwillingness":59,"microorganisms":59,"throbbing":59,"emblem":59,"bunkers":59,"disarray":59,"grins":59,"housewife":59,"oblivion":59,"moaned":59,"eighteenth-century":59,"outlining":59,"combo":59,"redevelopment":59,"discouraging":59,"axes":59,"cranes":59,"hinder":59,"aggregate":59,"sheen":59,"briefs":59,"feud":59,"single-family":59,"cunning":59,"browned":59,"awaited":59,"trance":59,"decisively":59,"ark":59,"adversely":59,"anecdotes":59,"subgroups":59,"correlate":59,"melon":59,"boils":59,"faculties":59,"steamy":59,"blurted":59,"absentee":59,"flushed":59,"faucet":59,"specialization":59,"fateful":59,"napkins":59,"heterogeneous":59,"birch":59,"sprinkled":59,"beginners":59,"perpetrator":59,"denounced":59,"behold":59,"gangster":59,"dismantle":59,"refinement":59,"vow":59,"cosmology":59,"indistinguishable":59,"aroused":59,"beltway":59,"submarines":59,"faithfully":59,"purposeful":59,"calculus":59,"watchful":59,"preschoolers":59,"converge":59,"sewn":59,"triangular":59,"hormonal":59,"redefine":59,"spawned":59,"composure":59,"prodigy":59,"mountainous":59,"subordinates":59,"tactile":59,"tipping":59,"virtuous":59,"barge":59,"presiding":59,"pang":59,"bounded":59,"stabbing":59,"vice-president":59,"photons":59,"fined":59,"chandelier":59,"heyday":59,"gi":59,"eyepiece":59,"messiah":59,"designate":59,"metropolis":59,"waxed":59,"leases":59,"horizontally":59,"bungalow":59,"savor":59,"traitor":59,"veal":59,"post-cold":59,"shrank":59,"chronically":59,"faiths":59,"cosmopolitan":59,"revived":59,"montage":59,"leased":59,"punishing":59,"foreigner":59,"harden":59,"mammal":59,"encompassing":59,"exemptions":59,"accumulating":59,"manually":59,"exhilarating":59,"shortest":59,"braids":59,"front-page":59,"yearning":59,"drafting":59,"inseparable":59,"motioned":59,"pup":59,"layered":59,"publicist":59,"moderator":59,"crumble":59,"overtly":59,"subpoena":59,"jailed":59,"warrants":59,"gripping":59,"nah":59,"hogs":59,"selectively":59,"determinants":59,"parted":59,"wad":59,"white-collar":59,"coincided":59,"beak":59,"entrenched":59,"butts":59,"scorn":59,"haste":59,"tragically":59,"liquids":59,"caramel":59,"arisen":59,"speculated":59,"cashmere":59,"pharmacist":59,"heed":59,"undue":59,"sucker":59,"checkpoint":59,"morgue":59,"posttest":59,"thirty-two":59,"hinge":59,"polarization":59,"arduous":59,"waged":59,"mused":59,"fins":59,"dizzying":59,"jargon":59,"deficient":59,"fingerprint":59,"erode":59,"colossal":59,"transmitter":59,"spoiled":59,"cracker":59,"bloodstream":59,"rims":59,"thanking":59,"unilaterally":59,"coupons":59,"five-year-old":59,"conversational":59,"epistemological":59,"goodies":59,"rigor":59,"sagging":59,"reunited":59,"irreversible":59,"healer":59,"mozzarella":59,"fright":59,"sighting":59,"tumultuous":59,"wanders":59,"stitches":59,"workable":59,"hamstring":59,"undertook":59,"marvel":59,"punishments":59,"cornstarch":59,"distressed":59,"begs":59,"warm-up":59,"dart":59,"entirety":59,"creatively":59,"full-blown":59,"mascara":59,"persuading":59,"legions":59,"pious":59,"ravine":59,"intifada":59,"canvases":59,"confronts":59,"baker":59,"hijackers":59,"televisions":59,"tractors":59,"discursive":59,"rattle":59,"domestically":59,"mania":59,"hiv-positive":59,"momentous":59,"grown-ups":59,"cobra":59,"thwart":59,"inset":59,"compatibility":59,"orchid":59,"summarizes":59,"chocolates":59,"slabs":59,"autograph":59,"racers":59,"searing":59,"dependable":59,"pep":59,"mmm":59,"left-handed":59,"eagerness":59,"budgetary":59,"cessation":59,"egregious":59,"wits":59,"craftsman":59,"sloping":59,"permissible":59,"swarm":59,"trajectories":59,"downfall":59,"carcass":59,"arcade":59,"erect":59,"gratification":59,"groupings":59,"steward":59,"albanians":59,"serenity":59,"bribery":59,"materialism":59,"effortlessly":59,"wasteful":59,"deliberation":59,"attribution":59,"successors":59,"distortions":59,"berry":59,"lesion":59,"six-year":59,"wading":59,"acreage":59,"monsieur":59};
});
__d('yarn/app/views/browser/splitGluedTogetherWords.js',[],function(global, require, module, exports) {  var splitCharacters=['"','.',';','?',',','”',')',':','!','“','(','/','*'];

module.exports = function(textContent){
var words=textContent.split(' ');

words.forEach(function(word,index){
splitCharacters.forEach(function(character){
if(word.indexOf(character) !== -1){
var split=word.split(character);
if(split[0] && split[1]){
for(var i=0;i < split.length - 1;i++) {
split[i] = split[i] + character;}

words.splice.apply(words,[index,1].concat(split));}}});});





words.forEach(function(word,index){

if(/[a-z]/.test(word.charAt(0)) && /[A-Z]/.test(word)){
for(var i=0;i < word.length;i++) {
if(/[A-Z]/.test(word.charAt(i))){
words.splice(index,1,word.substring(0,i),word.substring(i,word.length));
return;}}}});





words = words.filter(function(word){
return word !== '';});


return words;};
});
__d('yarn/app/actions/actions.js',["events/events.js","yarn/app/actions/actiontypes.js","yarn/app/helpers/getrandomwords.js","yarn/app/helpers/googletranslate.js","yarn/app/helpers/collins.js","yarn/app/logger/logger.js","yarn/app/stores/gamestatestore.js","yarn/app/stores/userprofilestore.js","yarn/words.js","react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  var Events=require('events/events.js');
var bus=new Events.EventEmitter();
var actions=require('yarn/app/actions/actiontypes.js');

var getRandomWords=require('yarn/app/helpers/getrandomwords.js');
var googleTranslate=require('yarn/app/helpers/googletranslate.js');
var collins=require('yarn/app/helpers/collins.js');
var log=require('yarn/app/logger/logger.js');

var gameStateStore=require('yarn/app/stores/gamestatestore.js');
var userProfileStore=require('yarn/app/stores/userprofilestore.js');

var words=require('yarn/words.js');

var React=require('react-native/Libraries/react-native/react-native.js');var 

AsyncStorage=
React.AsyncStorage;

var GAME_STATES=gameStateStore.GAME_STATES;

Object.keys(actions).forEach(function(action){
bus[action] = actions[action];});


var preloadedWords={};

bus.on(actions.WORDS_PARSED,onWordsParsed);
bus.on(actions.VISITED_WORDS_CHANGED,onVisitedWordsChanged);
bus.on(actions.START_GAME,onStartGame);
bus.on(actions.SHOW_NEXT_QUESTION,onShowNextQuestion);
bus.on(actions.WORD_PRESSED,onWordPressed);
bus.on(actions.CHANGE_LANG,onChangeLang);
bus.on(actions.RESET,onReset);
bus.on(actions.CHANGE_LEVEL,onChangeLevel);
bus.on(actions.LOOKING_FOR_WORDS,onLookingForWords);
bus.on(actions.HOME_BUTTON_PRESSED,onHomePressed);

function onWordsParsed(words){
if(!words.length){
gameStateStore.set('currentState',GAME_STATES.NOT_STARTED);
return;}


gameStateStore.pause(true);
gameStateStore.reset(true);
words = spreadWords(words,userProfileStore.get('wordsLimit'));
gameStateStore.set('pageWords',words);
gameStateStore.set('currentState',gameStateStore.GAME_STATES.WORDS_FOUND);
gameStateStore.pause(false);
log({
message:'words prepared',
words:words,
userLevel:userProfileStore.get('level'),
wordsRange:userProfileStore.get('range'),
userScore:userProfileStore.get('score')});

bus.emit(actions.WORDS_READY,words);}


function spreadWords(words,limit){
var skip=Math.max(~ ~(words.length / limit),1);
var newWords=[];
var i=0;
while(newWords.length < limit && words[i]) {
newWords.push(words[i]);
i += skip;}

return newWords;}


function onVisitedWordsChanged(words){
gameStateStore.set('visitedPageWords',words);
preloadWords();}


function onStartGame(){
gameStateStore.pause(true);
gameStateStore.set('pageWords',gameStateStore.get('visitedPageWords'));
gameStateStore.pause(false);
bus.emit(actions.SHOW_NEXT_QUESTION);
log({
message:'start game',
visitedWords:gameStateStore.get('visitedPageWords')});}



function preloadWords(){
var visited=gameStateStore.get('visitedPageWords');
for(var i=0;i < visited.length;i++) {
if(!preloadedWords[visited[i]]){
preloadedWords[visited[i]] = preloadWord(visited[i]);}}}




function preloadWord(pageWord){
var wordsToTranslate=getRandomWords(gameStateStore.get('randomWordsCount'));
wordsToTranslate.unshift(pageWord);

var promise=new Promise(function(resolve,reject){


setTimeout(function(){

googleTranslate.translateWords(wordsToTranslate,'en',userProfileStore.get('language')).
then(function(translatedWords){

var question=translatedWords.data.translations.map(function(translatedWord,index){
return {
text:wordsToTranslate[index],
definition:translatedWord.translatedText};});



question[0].target = true;
resolve(question);}).

catch(function(ex){

console.error('Can not translate words:',ex);
reject();});},


Math.random() * 500 + 500);});



return promise;}


function onShowNextQuestion(){
var currentWordIndex=gameStateStore.get('currentWordIndex') + 1;

if(currentWordIndex === gameStateStore.get('pageWords').length){
gameStateStore.set('finished',true);
return;}


var currentWord=gameStateStore.get('pageWords')[currentWordIndex];
preloadedWords[currentWord].then(function(question){
gameStateStore.pause(true);
gameStateStore.set('currentWord',question[0]);


question.sort(function(){return Math.random() < 0.5?1:-1;});


var round=Math.floor(Math.random() * question.length);
var start=question.splice(0,round);
question = question.concat(start);

gameStateStore.set('currentQuestion',question);
gameStateStore.set('currentWordIndex',currentWordIndex);
gameStateStore.set('currentState',GAME_STATES.WAITING_FOR_ANSWER);
gameStateStore.pause(false);});}




function onWordPressed(word){

if(gameStateStore.get('currentState') !== GAME_STATES.WAITING_FOR_ANSWER){
return;}


gameStateStore.pause(true);

var levelOfCurrentWord=words[gameStateStore.get('currentWord').text];

gameStateStore.set('chosenAnswer',word);
if(word === gameStateStore.get('currentWord').definition){
gameStateStore.set('correct',gameStateStore.get('correct') + 1);
gameStateStore.set('currentState',GAME_STATES.CORRECT_ANSWER_CHOSEN);
userProfileStore.updateLevelStats(levelOfCurrentWord,true);
console.log('correct + 1',gameStateStore.get('correct'));}else 

{
console.log('wrong + 1');
gameStateStore.set('wrong',gameStateStore.get('wrong') + 1);
gameStateStore.set('currentState',GAME_STATES.WRONG_ANSWER_CHOSEN);
userProfileStore.updateLevelStats(levelOfCurrentWord,false);
console.log('wrong + 1',gameStateStore.get('wrong'));}


var question=gameStateStore.get('currentQuestion');

question.forEach(function(wordDef){
if(wordDef.definition === word){
wordDef.chosen = true;}});



gameStateStore.pause(false);}


function onChangeLang(lang){
if(lang === userProfileStore.get('language')){
return;}


userProfileStore.set('language',lang);
bus.emit(actions.RESET);}


function onChangeLevel(level){
if(level === userProfileStore.get('language')){
return;}

userProfileStore.setUserLevel(level);
bus.emit(actions.RESET);}


function onReset(){
console.log('game reset');
preloadedWords = {};
gameStateStore.reset();}


function onLookingForWords(){
console.log('-------> ','looking for words');
gameStateStore.set('currentState',GAME_STATES.LOOKING_FOR_WORDS);}


function onHomePressed(){
onReset();}


module.exports = bus;
});
__d('yarn/app/actions/actiontypes.js',[],function(global, require, module, exports) {  module.exports = {
WORDS_PARSED:'WORDS_PARSED',
VISITED_WORDS_CHANGED:'VISITED_WORDS_CHANGED',
START_GAME:'START_GAME',
SHOW_NEXT_QUESTION:'SHOW_NEXT_QUESTION',
WORD_PRESSED:'WORD_PRESSED',
CHANGE_LANG:'CHANGE_LANG',
WORDS_READY:'WORDS_READY',
RESET:'RESET',
CHANGE_LEVEL:'CHANGE_LEVEL',

HOME_BUTTON_PRESSED:'HOME_BUTTON_PRESSED',
QUIZ_BUTTON_PRESSED:'QUIZ_BUTTON_PRESSED',
SETTINGS_BUTTON_PRESSED:'SETTINGS_BUTTON_PRESSED',

LOOKING_FOR_WORDS:'LOOKING_FOR_WORDS',
URL_FEATURE_REQUESTED:'URL_FEATURE_REQUESTED'};
});
__d('yarn/app/helpers/getrandomwords.js',["yarn/words.js"],function(global, require, module, exports) {  var words=Object.keys(require('yarn/words.js'));

module.exports = function(amount){
amount || (amount = 5);
var results=[];

while(--amount) {
var index=Math.round(Math.random() * words.length);
results.push(words[index]);}


return results;};
});
__d('yarn/app/helpers/googletranslate.js',[],function(global, require, module, exports) {  var API_KEY='AIzaSyDAjHprVDfX_6z2fAs6Vf03g2sOfEiTogs';
var BASE_URL='https://www.googleapis.com/language/translate/v2?key=' + API_KEY;

function translateWords(words,fromLang,toLang,callback){
if(!Array.isArray(words)){
words = [words];}


return fetch(createUrl(words,fromLang,toLang)).
then(function(response){
return response.text();}).

then(function(responseText){
return JSON.parse(responseText);});}



function createUrl(words,fromLang,toLang){
return BASE_URL + 
'&source=' + fromLang + 
'&target=' + toLang + 

words.reduce(function(prev,current){
return prev + '&q=' + current;},
'');}


module.exports = {
translateWords:translateWords};
});
__d('yarn/app/helpers/collins.js',[],function(global, require, module, exports) {  var API_KEY='wOaKqhkqXIuKKIIRkVRyAy7jNB5dVDeaNZoIpzIMEmxkK4eiZEQDGTFNG3TnlG18';
var BASE_URL='https://api.collinsdictionary.com/api/v1/dictionaries/english-learner/search/first/?format=html&q=';

function getDefinition(word){

return fetch(BASE_URL + encodeURIComponent(word),{
headers:{
accessKey:API_KEY}}).


then(function(response){
return response.text();}).

then(function(responseText){
var json=JSON.parse(responseText);
if(json.entryContent){
json.entryContent = '<style type="text/css">h1, .pron, audio, .inline, .gramGrp {display:none;}</style>' + json.entryContent;}

return json;});}






module.exports = {
getDefinition:getDefinition};
});
__d('yarn/app/stores/userprofilestore.js',["events/events.js","yarn/app/logger/logger.js","react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';

var Events=require('events/events.js');
var eventEmitter=new Events.EventEmitter();
var CHANGE_EVENT='store:changed';
var log=require('yarn/app/logger/logger.js');

var React=require('react-native/Libraries/react-native/react-native.js');var 

AsyncStorage=
React.AsyncStorage;

var data={
wordsLimit:10,
level:0,
range:40,
score:0,
language:'pl',
correctAnswers:0,
wrongAnswers:0,
levelStats:[],
historyLevelValues:[]};


var PERSISTENCE_KEY='@yarn:userProfileStore';

init();

function init(){
initLevelStats();



loadData();}


function initLevelStats(){
for(var i=0;i < 100;i++) {
data.levelStats[i] = {
correct:0,
wrong:0};}}




function set(key,d){
data[key] = d;
emitChange();}


function get(key){
return data[key];}


function emitChange(){
eventEmitter.emit(CHANGE_EVENT);}


function addChangeListener(listener){
eventEmitter.on(CHANGE_EVENT,listener);}


function updateLevelStats(level,correct){
if(correct){
data.levelStats[level].correct++;
data.correctAnswers++;
data.score = data.correctAnswers * 10;}else 
{
data.levelStats[level].wrong++;
data.wrongAnswers++;}


updateUserLevel();
saveData();
emitChange();}


function updateUserLevel(){
var totalAnswers=data.correctAnswers + data.wrongAnswers;

if(totalAnswers < 20){
console.log('Cannot compute user level yet');
return;}


var sum=0;
var max=0;

for(var i=0,len=data.levelStats.length;i < len;i++) {

var lvl=data.levelStats[i];
var weight=(100 - i) * 0.9;

if(lvl.correct || lvl.wrong){
sum += (i + 1) * lvl.correct / (lvl.correct + lvl.wrong) * weight;
max += (i + 1) * weight;}}



data.level = parseInt(sum / max * 100);
console.log('New user level:',data.level);


if(totalAnswers > 20 && data.range == 40){
data.range = 30;}else 

if(totalAnswers > 40 && data.range == 30){
data.range = 20;}else 

if(totalAnswers > 60 && data.range == 20){
data.range = 15;}


data.historyLevelValues.push(data.level);}


function saveData(){
console.log('saving userProfileStore:',data);

AsyncStorage.
setItem(PERSISTENCE_KEY,JSON.stringify(data)).
done();}


function loadData(key){
AsyncStorage.
getItem(PERSISTENCE_KEY).
then(function(stats){
var parsedData=JSON.parse(stats);
if(parsedData){
data = parsedData;}

migrate1();

log({
message:'user profile loaded',
userProfileData:data});


emitChange();}).

done();}







function setUserLevel(level){
if(level === data.level){
return;}


log({
message:'Setting user level',
level:level});

data.correctAnswers = 0;
data.wrongAnswers = 0;
data.level = level;
data.range = 40;
data.levelStats = [];
data.historyLevelValues = [];
initLevelStats();
saveData();
emitChange();}


function migrate1(){
if(!data.wordsLimit){
data.wordsLimit = 10;
saveData();}}



module.exports = {
addChangeListener:addChangeListener,
get:get,
set:set,
updateLevelStats:updateLevelStats,
setUserLevel:setUserLevel};
});
__d('yarn/app/views/browser/websiteapi.js',[],function(global, require, module, exports) {  module.exports = function(){

if(window.yarnInitialised){
return;}

window.yarnInitialised = true;

window.yarnHighlight = (function(){

var SKIP_NODES=['SCRIPT','NOSCRIPT'];

var styleEl;
var highlightStyleEl;

var highlightColor='#44FF44';
var visitedWords=[];

function setHighlightColor(color){
highlightColor = color;
injectHighlightStyle();}


function prepareWords(words){
injectStyles();
injectHighlightStyle();
reset();
words.forEach(prepareWord);
window.addEventListener('scroll',onPageScroll);
onPageScroll();
return visitedWords;}


function injectStyles(){
if(styleEl && styleEl.parentNode){
styleEl.parentNode.removeChild(styleEl);}

var head=document.head || document.getElementsByTagName('head')[0];

var bgAnimationStyle='-webkit-transition: background-color 500ms linear;' + 
'transition: background-color 500ms linear;';

var commonCss=bgAnimationStyle + 
'width: 2px; height: 100%;' + 
'position: absolute;' + 
'top: 0;' + 
'content: "";' + 
'display: block;' + 
'} ';

var css='[data-yarn-highlight] { position: relative; background-color:rgba(0,0,0,0) } ' + 

'[data-yarn-highlight].highlighted { ' + 
bgAnimationStyle + 
'font-style:inherit;font-weight:inherit} ' + 

'[data-yarn-highlight].highlighted:before {' + 
'position:absolute; top:0; left:-2px;' + 
'border-top-left-radius:2px;' + 
'border-bottom-left-radius:2px;' + 
commonCss + 

'[data-yarn-highlight].highlighted:after {' + 
'position:absolute; top:0; right:-2px;' + 
'border-top-right-radius:2px;' + 
'border-bottom-right-radius:2px;' + 
commonCss;

styleEl = document.createElement('style');

styleEl.type = 'text/css';
if(styleEl.styleSheet){
styleEl.styleSheet.cssText = css;}else 
{
styleEl.appendChild(document.createTextNode(css));}


head.appendChild(styleEl);}


function injectHighlightStyle(){
if(highlightStyleEl && highlightStyleEl.parentNode){
highlightStyleEl.parentNode.removeChild(highlightStyleEl);}


var css='[data-yarn-highlight].highlighted, ' + 
'[data-yarn-highlight].highlighted:before, ' + 
'[data-yarn-highlight].highlighted:after {' + 
'background-color:' + highlightColor + '}';

var head=document.head || document.getElementsByTagName('head')[0];
styleEl = document.createElement('style');

styleEl.type = 'text/css';
if(styleEl.styleSheet){
styleEl.styleSheet.cssText = css;}else 
{
styleEl.appendChild(document.createTextNode(css));}


head.appendChild(styleEl);}


function prepareWord(word){
var n;
var walker=document.createTreeWalker(document.body,NodeFilter.SHOW_TEXT,null,false);

var rx=new RegExp('\\b' + word + '\\b');

while(n = walker.nextNode()) {

if(SKIP_NODES.indexOf(n.parentNode.tagName) !== -1){
continue;}


if(rx.test(n.nodeValue)){
var node=n.parentNode;
node.innerHTML = node.innerHTML.replace(rx,
'<mark data-yarn-highlight="' + word + '">' + word + '</mark>');

return true;}}


return false;}


function highlight(word,unhighlightOthers,scrollToHighlightedWord){
if(unhighlightOthers){
unhighlight();}

if(!word.tagName){
word = getWordElByWord(word);}

if(word){
word.classList.add('highlighted');

word.dataset.yarnHighlighted = 1;}

if(scrollToHighlightedWord){
scrollToWord(word);}}



function getWordElByWord(word){
return document.querySelector('[data-yarn-highlight=\'' + word + '\']');}


function unhighlight(word){
if(word){
if(!word.tagName){
word = getWordElByWord(word);}

if(word){
word.classList.remove('highlighted');

delete word.dataset.yarnHighlighted;}}else 


{
[].slice.call(document.querySelectorAll('[data-yarn-highlighted=\'1\']')).forEach(function(wordEl){
unhighlight(wordEl);});}}




function scrollToWord(word){
if(!word.tagName){
word = getWordElByWord(word);}

if(word){
word.scrollIntoViewIfNeeded();}}



function highlightVisitedWords(){
var previouslyVisited=visitedWords.length;
var words=[].slice.call(document.querySelectorAll('[data-yarn-highlight]'));
for(var i=0;i < words.length;i++) {
if(isWordInView(words[i]) && !words[i].dataset.yarnHighlighted){
highlight(words[i]);
var word=words[i].dataset.yarnHighlight;
if(visitedWords.indexOf(word) === -1){
visitedWords.push(word);}}}



if(previouslyVisited != visitedWords.length){
console.log('visited words',visitedWords.length,visitedWords);
send('WORDS',visitedWords);}}




function isWordInView(wordEl){
var bbox=wordEl.getBoundingClientRect();









return bbox.bottom < window.innerHeight && bbox.right < window.innerWidth;}


function reset(){

var node;
while(node = document.querySelector('[data-yarn-highlight]')) {
var parent=node.parentNode;
var html=parent.innerHTML;
html = html.replace(/<mark.*?>/i,'');
html = html.replace('</mark>','');
parent.innerHTML = html;}}




function onPageScroll(){
setTimeout(highlightVisitedWords,0);}


function getVisitedWords(){
return visitedWords;}


function stopScrollTracking(){
window.removeEventListener('scroll',onPageScroll);}


reset();

return {
highlight:highlight,
scrollToWord:scrollToWord,
setHighlightColor:setHighlightColor,
prepareWords:prepareWords,
highlightVisitedWords:highlightVisitedWords,
getVisitedWords:getVisitedWords,
stopScrollTracking:stopScrollTracking,
unhighlight:unhighlight};})();





var yarnBridge;
function encodeMessage(name,data){
return JSON.stringify({
name:name,
data:data});}



function decodeMessage(msg){
return JSON.parse(msg);}


var queue=[];
var sendTimeout;

function send(name,data){

if(name){
queue.push([name,data]);}



if(yarnBridge){
sendNextFromQueue();}}



function sendNextFromQueue(){
if(sendTimeout || !queue.length){
return;}


sendTimeout = setTimeout(function(){
sendTimeout = 0;

if(!queue.length){
return;}


sendPacket(queue.shift());
sendNextFromQueue();},
100);}


function sendPacket(packet){
var msg=encodeMessage(packet[0],packet[1]);
yarnBridge.send(msg);}



function onMessage(msg){

switch(msg.name){
case 'GET_HTML':
return sendHtml();

case 'SET_HIGHLIGHT_COLOR':
return yarnHighlight.setHighlightColor(msg.data);

case 'PREPARE_WORDS':
return yarnHighlight.prepareWords(msg.data);

case 'STOP_SCROLL_TRACKING':
return yarnHighlight.stopScrollTracking();

case 'HIGHLIGHT_WORD':
return yarnHighlight.highlight(msg.data,true,true);

case 'SCROLL_TO_WORD':
return yarnHighlight.scrollToWord(msg.data);

case 'UNHIGHLIGHT_WORDS':
return yarnHighlight.unhighlight();

case 'GO_TO_RANDOM_URL':
return goToRandomUrl();

default:
return;}}



function goToRandomUrl(){
var links=[].slice.call(document.getElementsByTagName('a'));
var matchingOrigin=getLinksMatchingCurrentDomain(links);

links = matchingOrigin.length?matchingOrigin:links;

links.map(function(link){
return link.getAttribute('href');});



links.sort(function(a,b){
return b.length - a.length;});



var index=Math.floor(Math.random() * 3);
location = links[index];}


function getLinksMatchingCurrentDomain(links){
var origin=location.origin;

return links.filter(function(link){
var href=link.getAttribute('href');

if(!href || href === location.href){
return false;}


href = href.replace(/\/$/,'');
return href && href.indexOf(origin) === 0 && href !== origin;});}



var lastBodyLength=-1;
var alreadySent=false;

function sendHtml(){
if(alreadySent){
return;}


var currentBodyLength=document.body.innerHTML.length;
if(/(interactive|complete)/.test(document.readyState) && document.title && 

currentBodyLength === lastBodyLength && currentBodyLength > 100){

console.log('sending html',document.body.innerHTML.length);
var start='<html><head><title>' + document.title + '</title></head>';

alreadySent = true;


return send('WEBSITE_CONTENT',start + document.body.outerHTML + '</html>');}else 

{
lastBodyLength = currentBodyLength;
log('delay sendHtml, document readyState: ' + document.readyState + ' body length:' + currentBodyLength);
setTimeout(sendHtml,800);}}



function WebViewBridgeReady(cb){
if(window.WebViewBridge){
cb(window.WebViewBridge);
return;}


function handler(){

window.removeEventListener('WebViewBridge',handler,false);

cb(window.WebViewBridge);}





window.addEventListener('WebViewBridge',handler,false);}


function bindScrollInfo(){
window.addEventListener('scroll',function(){
setTimeout(function(){
send('SCROLL',{x:window.scrollX,y:window.scrollY});},
1);});}




function log(){
var args=[].slice.call(arguments);
send('LOG',args);}


function run(){
console.log('run()');
WebViewBridgeReady(function(WebViewBridge){

console.log('bridge ready');
yarnBridge = WebViewBridge;
WebViewBridge.onMessage = function(msg){
var message=decodeMessage(msg);
onMessage(message);};

var msg;
send();



bindScrollInfo();
console.log('WEBSITE_READY');
hookLinks();
send('WEBSITE_READY');});}



function getDomain(url){
return url.replace(/x/,'').split('/')[0];}



function hookLinks(){


document.addEventListener('click',function(ev){
if(ev.target && ev.target.tagName && ev.target.tagName.toLowerCase() === 'a' && 
ev.target.getAttribute('href')){

var href=ev.target.getAttribute('href');

if(href.indexOf('#') !== 0 && getDomain(href) !== getDomain(location.href)){
ev.preventDefault();
ev.stopPropagation();
send('NOT_ALLOWED_URL',href);
return false;}}});}

















console.log('start! ',location.href,document.readyState,document.documentElement.outerHTML.length);

if(/(interactive|complete)/.test(document.readyState)){
console.log('dom content already loaded');
run();}else 

{
console.log('wait for dom content to be loaded');
document.addEventListener('DOMContentLoaded',function(){
console.log('DOMContentLoaded!',document.documentElement.outerHTML.length);
run();});}};
});
__d('yarn/app/uiconfig.js',[],function(global, require, module, exports) {  module.exports = {

COLORS:{
LIGHT_GREY:'rgb(242, 242, 242)',
SELECTED_GREY:'rgb(120, 120, 120)',
MID_GREY:'rgb(190, 190, 190)',
GREEN:'rgb(65, 172, 96)',
BLUE:'rgb(39, 170, 225)',
TEXT:'rgb(65, 64, 66)',
ORANGE:'rgb(247, 148, 30)',
RED:'rgb(223, 28, 36)',
PALE_BLUE:'rgb(238, 248, 253)',
PALE_GREEN:'rgb(240, 248, 243)',
PALE_PINK:'rgb(253, 243, 244)',
BLUE_BG:'rgba(39, 170, 225, 0.25)',
ORANGE_BG:'rgba(247, 148, 30, 0.25)'},


BROWSER_BAR_HEIGHT:40,
TOOLBAR_HEIGHT:50,

TOAST_HEIGHT:50,
TOAST_WIDTH:275,

WORDBUTTON_PADDING:14,
TOOLBAR_FONT_SIZE:14,
TOOLBAR_ICON_SIZE:22,
PROGRESSBAR_FONT_SIZE:24,
PROGRESSBAR_HEIGHT:6,
TOOLBAR_BUTTON_WIDTH:70,
TOOLBAR_ANIMATION_OFFSET:15,
SPECIAL_FONT:'Bauhaus 93',
QUESTION_TARGET_BUTTON_TEXT_SIZE:30,
WORD_BUTTON_QUESTION_TEXT_SIZE:30,
WORD_BUTTON_ANSWER_TEXT_SIZE:18,
QUIZ_BUTTON_HEIGHT:50};
});
__d('yarn/app/blacklist.js',[],function(global, require, module, exports) {  module.exports.urls = [
'http://www.theguardian.com/',
'http://www.theguardian.com/uk',
'http://www.theguardian.com/uk-news',
'http://www.theguardian.com/world',
'http://www.theguardian.com/international'];
});
__d('yarn/app/whitelist.js',[],function(global, require, module, exports) {  var regexps=[

/.*\/\d{4}\/.*/];



function doesMatch(url){
return regexps.some(function(rx){
return rx.test(url);});}



module.exports = {
regexps:regexps,
doesMatch:doesMatch};
});
__d('yarn/app/views/popup/popup.js',["image!horizontal-gradient","react-native/Libraries/react-native/react-native.js","Dimensions","yarn/app/uiconfig.js","yarn/app/utils.js"],function(global, require, module, exports) {  var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=







React.StyleSheet;var View=React.View;var Text=React.Text;var WebView=React.WebView;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;var TouchableHighlight=React.TouchableHighlight;var Animated=React.Animated;var Image=React.Image;

var Dimensions=require('Dimensions');var _Dimensions$get=
Dimensions.get('window');var width=_Dimensions$get.width;var height=_Dimensions$get.height;

var uiConfig=require('yarn/app/uiconfig.js');
var COLORS=uiConfig.COLORS;
var utils=require('yarn/app/utils.js');

var POPUP_TYPE={
INFO:'INFO',
ANSWER:'ANSWER',
BUY_URL_FEATURE:'BUY_URL_FEATURE'};




var POPUP_MARGIN=10;

var ARROW_EDGE_WIDTH=10;
var ARROW_WIDTH=ARROW_EDGE_WIDTH * Math.sqrt(2);
var ARROW_MIN_LEFT=POPUP_MARGIN + 3;

var Popup=React.createClass({

getDefaultProps:function(){
return {
type:POPUP_TYPE.ANSWER,
arrowRect:{x:0,y:0,width:0,height:0}};},



getInitialState:function(){
return {
buttonAnimationFinished:false,
buttonText:'£1.69',
buttonBgColor:uiConfig.COLORS.BLUE,

buttonWidth:new Animated.Value(50)};},



render:function(){
if(!this.props.visible){
return React.createElement(View,null);}


var content;

switch(this.props.type){
case POPUP_TYPE.INFO:
content = this.renderInfoPopup();
break;

case POPUP_TYPE.BUY_URL_FEATURE:
content = this.renderBuyUrlFeaturePopup();
break;

case POPUP_TYPE.ANSWER:
default:
content = this.renderAnswerPopup();
break;}


return (
React.createElement(View,{style:styles.wrap},
React.createElement(TouchableWithoutFeedback,{onPress:this.props.onClose},
React.createElement(View,{style:styles.overlay})),


content));},




renderInfoPopup:function(){
var popupWidth=180;
var extraStyle={
width:popupWidth,
left:POPUP_MARGIN,
height:60};

var arrowLeft=this.computeArrowPosition();

return (
React.createElement(View,{style:[styles.popup,extraStyle]},
React.createElement(TouchableWithoutFeedback,{onPress:this.props.cancelPress},
React.createElement(View,{style:[styles.contentWrap,styles.row]},
React.createElement(View,null,
React.createElement(Text,null,'Tap the best'),
React.createElement(Text,null,'translation...')),

React.createElement(View,null,
React.createElement(TouchableWithoutFeedback,{onPress:this.props.onSubmit},
React.createElement(View,{style:styles.confirmButton},
React.createElement(Text,{style:styles.confirmButtonText},'OK')))))),





React.createElement(View,{style:[styles.arrow,{left:arrowLeft}]})));},





renderAnswerPopup:function(){
var popupWidth=width - 2 * POPUP_MARGIN;
var extraStyle={
width:popupWidth,
left:POPUP_MARGIN};

var arrowLeft=this.computeArrowPosition();

return (
React.createElement(View,{style:[styles.popup,extraStyle]},
React.createElement(TouchableWithoutFeedback,{onPress:this.props.cancelPress},
React.createElement(View,{style:styles.contentWrap},
React.createElement(Text,{style:styles.header},this.props.title),


React.createElement(WebView,{html:this.props.content,style:styles.webView}),
React.createElement(View,{style:styles.gradient},
React.createElement(Image,{source:require('image!horizontal-gradient'),style:styles.gradientImage})),


React.createElement(View,{style:styles.footer},
React.createElement(TouchableWithoutFeedback,{onPress:this.props.onShowDictionary},
React.createElement(View,{style:styles.dictionary},
React.createElement(Text,{style:styles.dictionaryText},'Show native dictionary'))),


React.createElement(TouchableWithoutFeedback,{onPress:this.props.onSubmit},
React.createElement(View,{style:styles.nextButton},
React.createElement(View,{style:styles.nextButtonArrow})))))),







React.createElement(View,{style:[styles.arrow,{left:arrowLeft}]})));},





renderBuyUrlFeaturePopup:function(){
var popupWidth=200;
var extraStyle={
top:30,
width:popupWidth,
left:(width - popupWidth) / 2,
height:100};

var arrowLeft=popupWidth / 2;

var buttonStyle={
width:this.state.buttonWidth,
backgroundColor:this.state.buttonBgColor};


return (
React.createElement(View,{style:[styles.popup,extraStyle]},
React.createElement(View,{style:[styles.contentWrap]},
React.createElement(View,null,
React.createElement(View,{style:styles.row},
React.createElement(Text,null,'Add '),
React.createElement(Text,{style:styles.bold},'Web Browsing '),
React.createElement(Text,null,'to')),

React.createElement(Text,null,'use Yarn across all your'),
React.createElement(Text,null,'favourite webistes')),

React.createElement(View,{style:styles.bottomActionButtonWrap},
React.createElement(TouchableWithoutFeedback,{onPress:this.onBuyPressed},
React.createElement(Animated.View,{style:[styles.actionButton,buttonStyle]},
React.createElement(Text,{style:styles.confirmButtonText},this.state.buttonText))))),




React.createElement(View,{style:[styles.arrowTop,{left:arrowLeft}]})));},






onBuyPressed:function(){
var isAlreadyFinished=this.state.buttonAnimationFinished;

this.setState({
buttonAnimationFinished:true});


var animationTime=500;

var startColor=utils.colorToObj(uiConfig.COLORS.BLUE);
var finalColor=utils.colorToObj(uiConfig.COLORS.MID_GREY);

!isAlreadyFinished && setTimeout((function(){

utils.animateColor({
start:startColor,
end:finalColor,
onChange:(function(clr){
this.setState({
buttonBgColor:utils.colorToString(clr)});}).

bind(this),
duration:animationTime,
stepTime:60});


Animated.timing(
this.state.buttonWidth,
{toValue:130,duration:animationTime}).
start((function(){
this.setState({
buttonText:'COMING SOON'});}).

bind(this));}).

bind(this),100);},



computeArrowPosition:function(){
return Math.max(this.props.arrowRect.x + this.props.arrowRect.width / 2 - ARROW_WIDTH,ARROW_MIN_LEFT);},


cancelPress:function(ev){
ev.preventDefault();
ev.stopPropagation();}});





var styles=StyleSheet.create({

wrap:{
position:'absolute',
top:0,
left:0,
bottom:0,
right:0,
backgroundColor:'rgba(0,0,0,0)',
flex:1},


overlay:{
position:'absolute',
top:0,
left:0,
bottom:0,
right:0,
backgroundColor:'rgba(0,0,0,0)',
flex:1},


contentWrap:{
position:'absolute',
top:10,
left:10,
bottom:10,
right:10},


webView:{
borderWidth:0,
marginBottom:5},


popup:{
position:'absolute',

bottom:uiConfig.TOOLBAR_HEIGHT + ARROW_WIDTH / 2,
flex:1,
backgroundColor:'#FFFFFF',
borderRadius:3,
height:200,
paddingBottom:0,
shadowColor:'#000000',
shadowOffset:{
width:0,
height:2},

shadowOpacity:0.5,
shadowRadius:3},


header:{
fontWeight:'700'},


footer:{
height:30,
position:'absolute',
left:0,
right:0,
bottom:0,
backgroundColor:'#FFFFFF'},


nextButton:{
position:'absolute',
right:0,
top:0,
width:30,
height:30,
backgroundColor:COLORS.BLUE,
borderRadius:15},


nextButtonArrow:{
borderColor:'rgba(0,0,0,0)',
borderWidth:8,
borderRightWidth:0,
borderLeftColor:'#FFFFFF',
position:'absolute',
top:8,
left:12},

arrow:{
position:'absolute',
bottom:-5,
left:20,
width:ARROW_EDGE_WIDTH,
height:ARROW_EDGE_WIDTH,
backgroundColor:'#FFFFFF',
transform:[
{
rotate:'45deg'}]},




arrowTop:{
position:'absolute',
top:-5,
left:20,
width:ARROW_EDGE_WIDTH,
height:ARROW_EDGE_WIDTH,
backgroundColor:'#FFFFFF',
transform:[
{
rotate:'45deg'}]},




row:{
flexDirection:'row'},


bold:{
fontWeight:'500'},


confirmButton:{
backgroundColor:COLORS.GREEN,
paddingTop:5,
paddingBottom:5,
paddingLeft:15,
paddingRight:15,
marginTop:7,
marginLeft:20,
borderRadius:3},


bottomActionButtonWrap:{
position:'absolute',
right:0,
bottom:0},


actionButton:{
height:25,
borderRadius:3},


confirmButtonText:{
textAlign:'center',
color:'#FFFFFF',
marginTop:4},


gradientImage:{
height:20},


gradient:{
height:20,
backgroundColor:'transparent',
position:'absolute',
bottom:20,
left:0,
right:0,
overflow:'hidden'},


dictionary:{
borderWidth:1,
borderRadius:4,
backgroundColor:uiConfig.COLORS.GREEN,
position:'absolute',
padding:5,
top:0,
left:0,

height:30},


dictionaryText:{
color:'#FFFFFF'}});





Popup.POPUP_TYPE = POPUP_TYPE;

module.exports = Popup;
});
__d('yarn/app/utils.js',[],function(global, require, module, exports) {  module.exports = {
animateColor:animateColor,
colorToString:colorToString,
colorToObj:colorToObj};


function animateColorStep(start,end,progress){
return {
r:colorEase(start.r,end.r,progress),
g:colorEase(start.g,end.g,progress),
b:colorEase(start.b,end.b,progress)};}



function colorEase(a,b,u){
return parseInt((1 - u) * a + u * b);}


function animateColor(conf){
var start=conf.start;
var end=conf.end;
var duration=conf.duration || 500;
var stepTime=conf.stepTime || 50;

var startTime=Date.now();
fadeStep();

function fadeStep(){
var currentProgress=Math.min((Date.now() - startTime) / duration,1);
var color=animateColorStep(start,end,currentProgress);

conf.onChange(color);

if(currentProgress === 1){
conf.onFinish && conf.onFinish();}else 

{
setTimeout(fadeStep,stepTime);}}}




function colorToString(clr){
var alpha='a' in clr?clr.a:1;
return 'rgba(' + clr.r + ',' + clr.g + ',' + clr.b + ',' + alpha + ')';}


function colorToObj(clr){
var parts=clr.replace(/rgba?\(/,'').replace(')','').replace(/ /g,'').split(',');

var rgba={
r:parseInt(parts[0]),
g:parseInt(parts[1]),
b:parseInt(parts[2])};


rgba.a = parts.length === 4?parseFloat(parts[4]):1;

return rgba;}
});
__d('image!horizontal-gradient',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/mateusz/workspace/weaverdigital/yarn/iOS/Images.xcassets/horizontal-gradient.imageset/horizontal-gradient.png","uri":"horizontal-gradient","width":600,"height":30,"deprecated":true};
});
__d('yarn/app/views/statusbar/statusbar.js',["react-native/Libraries/react-native/react-native.js","yarn/app/views/statusbar/navbarlabel.js","yarn/app/uiconfig.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=



React.StyleSheet;var View=React.View;var Text=React.Text;var Animated=React.Animated;

var NavBarLabel=require('yarn/app/views/statusbar/navbarlabel.js');
var uiConfig=require('yarn/app/uiconfig.js');

var StatusBar=React.createClass({

getDefaultProps:function(){
return {
totalWords:0,
correctWords:0,
score:0,
level:0,
nextText:'Onwards >',
showWordsCount:false,
wordsCount:0,
startHidden:false,
onNextPress:function(){}};},



getInitialState:function(){
return {
height:uiConfig.TOOLBAR_HEIGHT,
opacityValue:new Animated.Value(this.props.startHidden?0:1),
marginTopValue:new Animated.Value(this.props.startHidden?uiConfig.TOOLBAR_ANIMATION_OFFSET:0)};},



render:function(){
var items=this.props.showWordsCount?this.renderWordsCount():this.renderStats();

return (
React.createElement(Animated.View,{style:[styles.wrap,{
transform:[
{translateY:this.state.marginTopValue}],

opacity:this.state.opacityValue}]},

items,
React.createElement(NavBarLabel,{
onPress:this.props.onNextPress,
texts:[{text:this.props.nextText,color:'#FFFFFF'}],
backgroundColor:uiConfig.COLORS.BLUE,
style:styles.nextButton})));},





renderWordsCount:function(){
var texts=[{
text:this.props.wordsCount,
color:uiConfig.COLORS.ORANGE},
{
text:' ' + (this.props.wordsCount === 1?'word':'words') + '...',
color:uiConfig.COLORS.MID_GREY}];


return (
React.createElement(View,{style:styles.contentWrap},
React.createElement(View,{style:styles.wordsCountCenterH},
React.createElement(View,{style:styles.wordsCountCenterV},
React.createElement(NavBarLabel,{
texts:texts,
specialFont:true,
isFirst:true})))));},







renderStats:function(){
var progress=this.props.correctWords / this.props.totalWords * 100;

return (
React.createElement(View,{style:styles.contentWrap},
React.createElement(View,{style:styles.progressBox},
React.createElement(View,{style:styles.progressTextWrap},
React.createElement(View,{style:styles.progressTextWrapVertical},
React.createElement(Text,{style:styles.text},this.props.correctWords),
React.createElement(Text,{style:styles.textTotal},'/',this.props.totalWords,' correct'))),


React.createElement(ProgressBar,{progress:progress})),

React.createElement(NavBarLabel,{
texts:[{text:this.props.score,color:uiConfig.COLORS.ORANGE}],
style:styles.score,
specialFont:true}),

React.createElement(NavBarLabel,{
texts:[{text:this.props.level,color:uiConfig.COLORS.RED}],
color:uiConfig.COLORS.RED,
style:styles.level,
specialFont:true})));},





animateIn:function(){
Animated.parallel([
Animated.timing(
this.state.opacityValue,
{toValue:1}),

Animated.timing(
this.state.marginTopValue,
{toValue:0})]).

start();},


animateOut:function(){
Animated.parallel([
Animated.timing(
this.state.opacityValue,
{toValue:0}),

Animated.timing(
this.state.marginTopValue,
{toValue:uiConfig.TOOLBAR_ANIMATION_OFFSET})]).

start();}});



var ProgressBar=React.createClass({
getDefaultProps:function(){
return {
progress:0};},



render:function(){

var progressStyle={
flex:this.props.progress};

var endStyle={
flex:100 - this.props.progress};


return (
React.createElement(View,{style:styles.progressBarWrap},
React.createElement(View,{style:[styles.progressBar,progressStyle]}),
React.createElement(View,{style:[styles.progressBarEnd,endStyle]})));}});






var styles=StyleSheet.create({

wrap:{
borderTopWidth:1,
borderTopColor:uiConfig.COLORS.MID_GREY,
height:uiConfig.TOOLBAR_HEIGHT - uiConfig.PROGRESSBAR_HEIGHT + 1,
flexDirection:'row',
alignItems:'stretch'},


contentWrap:{
flex:1,
flexDirection:'row',
alignItems:'stretch'},


progressTextWrap:{
flex:1,
alignItems:'center'},


progressTextWrapVertical:{
flex:1,
flexDirection:'row',
alignItems:'center'},


text:{
textAlign:'right',
color:uiConfig.COLORS.TEXT,
fontSize:uiConfig.PROGRESSBAR_FONT_SIZE,
fontWeight:'700'},


textTotal:{
textAlign:'left',
color:uiConfig.COLORS.TEXT,
fontSize:uiConfig.PROGRESSBAR_FONT_SIZE},


progressBarWrap:{
flexDirection:'row',
height:2},


progressBar:{
backgroundColor:uiConfig.COLORS.GREEN,
height:uiConfig.PROGRESSBAR_HEIGHT},


progressBarEnd:{
backgroundColor:uiConfig.COLORS.MID_GREY,
height:uiConfig.PROGRESSBAR_HEIGHT},


progressBox:{
flex:2},


score:{
flex:2},


level:{
flex:1},


nextButton:{},


wordsCountCenterH:{
flex:1,
flexDirection:'column',
alignItems:'center',
backgroundColor:'#FFFFFF'},


wordsCountCenterV:{
flex:1,
flexDirection:'row',
alignItems:'center'}});





module.exports = StatusBar;
});
__d('yarn/app/views/statusbar/navbarlabel.js',["react-native/Libraries/react-native/react-native.js","yarn/app/uiconfig.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=



React.StyleSheet;var View=React.View;var Text=React.Text;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;

var uiConfig=require('yarn/app/uiconfig.js');

var NavBarLabel=React.createClass({

getDefaultProps:function(){
return {
color:uiConfig.COLORS.MID_GREY,
backgroundColor:'#FFFFFF',
texts:[],
isFirst:false,
onPress:function(){}};},



getInitialState:function(){
return {
height:uiConfig.TOOLBAR_HEIGHT};},



render:function(){
var texts=[];
for(var i=0;i < this.props.texts.length;i++) {
texts.push(this.renderTextItem(this.props.texts[i],i,this.props.specialFont));}


return (
React.createElement(TouchableWithoutFeedback,{onPress:this.props.onPress},
React.createElement(View,{style:[styles.wrap,{
backgroundColor:this.props.backgroundColor,
borderLeftWidth:this.props.isFirst?0:1}]},

React.createElement(View,{style:styles.textWrap},
texts))));},






renderTextItem:function(cfg,key,useSpecialFont){
var extraStyle={};
if(useSpecialFont){
extraStyle.fontFamily = uiConfig.SPECIAL_FONT;
extraStyle.fontSize = 24;
extraStyle.lineHeight = 25;
extraStyle.height = 24;}

if(cfg.color){
extraStyle.color = cfg.color;}


return (
React.createElement(Text,{key:'text-' + key,style:[styles.text,extraStyle]},cfg.text));}});




var styles=StyleSheet.create({
wrap:{
borderLeftWidth:1,
borderLeftColor:uiConfig.COLORS.MID_GREY,
alignItems:'center',
paddingLeft:10,
paddingRight:10},

textWrap:{
flex:1,
alignItems:'center',
flexDirection:'row'},

text:{}});




module.exports = NavBarLabel;
});
__d('yarn/app/views/settings/settings.js',["react-native/Libraries/react-native/react-native.js","yarn/app/actions/actions.js","yarn/app/views/settings/googlelanguages.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=





React.StyleSheet;var View=React.View;var Text=React.Text;var PickerIOS=React.PickerIOS;var PickerItemIOS=React.PickerItemIOS;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;

var actions=require('yarn/app/actions/actions.js');
var languages=require('yarn/app/views/settings/googlelanguages.js');
















var Settings=React.createClass({

getDefaultProps:function(){
return {
onClose:function(){}};},



getInitialState:function(){
return {
lang:this.props.initialLang,
level:this.props.initialLevel};},



render:function(){
return (
React.createElement(View,{style:styles.overlay},
React.createElement(View,{style:styles.content},
React.createElement(Text,null,'Language:'),
React.createElement(PickerIOS,{
selectedValue:this.state.lang,
onValueChange:this.onLanguageChange},

this.renderLangs()),


React.createElement(View,{style:styles.level},
React.createElement(Text,{style:styles.levelLabel},'User level:'),
React.createElement(Text,{style:styles.levelValue},
this.state.level),

React.createElement(TouchableWithoutFeedback,{onPress:this.incrementLevel},
React.createElement(Text,{style:styles.levelChangeButton},' + ')),

React.createElement(TouchableWithoutFeedback,{onPress:this.decrementLevel},
React.createElement(Text,{style:styles.levelChangeButton},' - '))),



React.createElement(TouchableWithoutFeedback,{onPress:this.onClose},
React.createElement(Text,null,'Tap here to close')))));},






onLanguageChange:function(lang){
console.log('Chosen lang: ',lang);
this.setState({
lang:lang});},



incrementLevel:function(){
this.setState({
level:Math.min(this.state.level + 1,100)});},


decrementLevel:function(){
this.setState({
level:Math.max(this.state.level - 1,1)});},



renderLangs:function(){
var items=languages.map(function(lang){
var langName=lang.name;
var langCode=lang.language;
return (
React.createElement(PickerItemIOS,{
type:1,
key:langCode,
value:langCode,
label:langName}));});



return items;},


onClose:function(){
if(this.props.initialLang !== this.state.lang){
actions.emit(actions.CHANGE_LANG,this.state.lang);}

if(this.props.initialLevel !== this.state.level){
actions.emit(actions.CHANGE_LEVEL,this.state.level);}

this.props.onClose();}});



var styles=StyleSheet.create({

overlay:{
position:'absolute',
top:0,
left:0,
bottom:0,
right:0,
backgroundColor:'rgba(0,0,0,0.75)',
flex:1},


content:{
backgroundColor:'#FFFFFF',
margin:10,
padding:10,
borderRadius:3},


level:{
flex:1,
flexDirection:'row'},


levelLabel:{
flex:4},


levelValue:{
flex:3},


levelChangeButton:{
flex:1,
fontSize:20,
textAlign:'center'}});





module.exports = Settings;
});
__d('yarn/app/views/settings/googlelanguages.js',[],function(global, require, module, exports) {  'use strict';




var languagesData={
"data":{
"languages":[
{
"language":"af",
"name":"Afrikaans"},

{
"language":"sq",
"name":"Albanian"},

{
"language":"ar",
"name":"Arabic"},

{
"language":"hy",
"name":"Armenian"},

{
"language":"az",
"name":"Azerbaijani"},

{
"language":"eu",
"name":"Basque"},

{
"language":"be",
"name":"Belarusian"},

{
"language":"bn",
"name":"Bengali"},

{
"language":"bs",
"name":"Bosnian"},

{
"language":"bg",
"name":"Bulgarian"},

{
"language":"ca",
"name":"Catalan"},

{
"language":"ceb",
"name":"Cebuano"},

{
"language":"ny",
"name":"Chichewa"},

{
"language":"zh",
"name":"Chinese (Simplified)"},

{
"language":"zh-TW",
"name":"Chinese (Traditional)"},

{
"language":"hr",
"name":"Croatian"},

{
"language":"cs",
"name":"Czech"},

{
"language":"da",
"name":"Danish"},

{
"language":"nl",
"name":"Dutch"},

{
"language":"en",
"name":"English"},

{
"language":"eo",
"name":"Esperanto"},

{
"language":"et",
"name":"Estonian"},

{
"language":"tl",
"name":"Filipino"},

{
"language":"fi",
"name":"Finnish"},

{
"language":"fr",
"name":"French"},

{
"language":"gl",
"name":"Galician"},

{
"language":"ka",
"name":"Georgian"},

{
"language":"de",
"name":"German"},

{
"language":"el",
"name":"Greek"},

{
"language":"gu",
"name":"Gujarati"},

{
"language":"ht",
"name":"Haitian Creole"},

{
"language":"ha",
"name":"Hausa"},

{
"language":"iw",
"name":"Hebrew"},

{
"language":"hi",
"name":"Hindi"},

{
"language":"hmn",
"name":"Hmong"},

{
"language":"hu",
"name":"Hungarian"},

{
"language":"is",
"name":"Icelandic"},

{
"language":"ig",
"name":"Igbo"},

{
"language":"id",
"name":"Indonesian"},

{
"language":"ga",
"name":"Irish"},

{
"language":"it",
"name":"Italian"},

{
"language":"ja",
"name":"Japanese"},

{
"language":"jw",
"name":"Javanese"},

{
"language":"kn",
"name":"Kannada"},

{
"language":"kk",
"name":"Kazakh"},

{
"language":"km",
"name":"Khmer"},

{
"language":"ko",
"name":"Korean"},

{
"language":"lo",
"name":"Lao"},

{
"language":"la",
"name":"Latin"},

{
"language":"lv",
"name":"Latvian"},

{
"language":"lt",
"name":"Lithuanian"},

{
"language":"mk",
"name":"Macedonian"},

{
"language":"mg",
"name":"Malagasy"},

{
"language":"ms",
"name":"Malay"},

{
"language":"ml",
"name":"Malayalam"},

{
"language":"mt",
"name":"Maltese"},

{
"language":"mi",
"name":"Maori"},

{
"language":"mr",
"name":"Marathi"},

{
"language":"mn",
"name":"Mongolian"},

{
"language":"my",
"name":"Myanmar (Burmese)"},

{
"language":"ne",
"name":"Nepali"},

{
"language":"no",
"name":"Norwegian"},

{
"language":"fa",
"name":"Persian"},

{
"language":"pl",
"name":"Polish"},

{
"language":"pt",
"name":"Portuguese"},

{
"language":"pa",
"name":"Punjabi"},

{
"language":"ro",
"name":"Romanian"},

{
"language":"ru",
"name":"Russian"},

{
"language":"sr",
"name":"Serbian"},

{
"language":"st",
"name":"Sesotho"},

{
"language":"si",
"name":"Sinhala"},

{
"language":"sk",
"name":"Slovak"},

{
"language":"sl",
"name":"Slovenian"},

{
"language":"so",
"name":"Somali"},

{
"language":"es",
"name":"Spanish"},

{
"language":"su",
"name":"Sundanese"},

{
"language":"sw",
"name":"Swahili"},

{
"language":"sv",
"name":"Swedish"},

{
"language":"tg",
"name":"Tajik"},

{
"language":"ta",
"name":"Tamil"},

{
"language":"te",
"name":"Telugu"},

{
"language":"th",
"name":"Thai"},

{
"language":"tr",
"name":"Turkish"},

{
"language":"uk",
"name":"Ukrainian"},

{
"language":"ur",
"name":"Urdu"},

{
"language":"uz",
"name":"Uzbek"},

{
"language":"vi",
"name":"Vietnamese"},

{
"language":"cy",
"name":"Welsh"},

{
"language":"yi",
"name":"Yiddish"},

{
"language":"yo",
"name":"Yoruba"},

{
"language":"zu",
"name":"Zulu"}]}};





module.exports = languagesData.data.languages;
});
__d('yarn/app/views/mainbar/mainbar.js',["image!home-icon","image!yarn-icon","image!settings-icon","react-native/Libraries/react-native/react-native.js","Dimensions","yarn/app/actions/actions.js","yarn/app/uiconfig.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=





React.StyleSheet;var View=React.View;var Text=React.Text;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;var Image=React.Image;var Animated=React.Animated;

var Dimensions=require('Dimensions');var _Dimensions$get=
Dimensions.get('window');var width=_Dimensions$get.width;var height=_Dimensions$get.height;

var actions=require('yarn/app/actions/actions.js');
var uiConfig=require('yarn/app/uiconfig.js');

var MainBar=React.createClass({

getInitialState:function(){
return {
opacityValue:new Animated.Value(0),
marginTopValue:new Animated.Value(uiConfig.TOOLBAR_ANIMATION_OFFSET)};},



render:function(){
return (
React.createElement(Animated.View,{style:[styles.wrap,{
transform:[
{translateY:this.state.marginTopValue}],

opacity:this.state.opacityValue}]},

React.createElement(View,{style:styles.buttonWrap},
React.createElement(TouchableWithoutFeedback,{onPress:this.onHomePressed},
React.createElement(Image,{source:require('image!home-icon'),style:styles.icon}))),


React.createElement(View,{style:styles.buttonWrap},
React.createElement(TouchableWithoutFeedback,{onPress:this.onQuizPressed},
React.createElement(Image,{source:require('image!yarn-icon'),style:styles.iconCentral}))),


React.createElement(View,{style:styles.buttonWrap},
React.createElement(TouchableWithoutFeedback,{onPress:this.onSettingsPressed},
React.createElement(Image,{source:require('image!settings-icon'),style:styles.icon})))));},






componentDidMount:function(){
this.animateIn();},


animateIn:function(){
Animated.parallel([
Animated.timing(
this.state.opacityValue,
{toValue:1}),

Animated.timing(
this.state.marginTopValue,
{toValue:0})]).

start();},


animateOut:function(){
Animated.parallel([
Animated.timing(
this.state.opacityValue,
{toValue:0}),

Animated.timing(
this.state.marginTopValue,
{toValue:uiConfig.TOOLBAR_ANIMATION_OFFSET})]).

start();},


onHomePressed:function(){
actions.emit(actions.HOME_BUTTON_PRESSED);},

onQuizPressed:function(){
actions.emit(actions.QUIZ_BUTTON_PRESSED);},

onSettingsPressed:function(){
actions.emit(actions.SETTINGS_BUTTON_PRESSED);}});



var styles=StyleSheet.create({

wrap:{
flexDirection:'row',
height:uiConfig.TOOLBAR_HEIGHT,
position:'absolute',
bottom:0,
width:width,
borderTopWidth:1,
borderTopColor:uiConfig.COLORS.MID_GREY},


buttonWrap:{
flex:1,
alignItems:'center',
justifyContent:'center'},


icon:{
width:uiConfig.TOOLBAR_ICON_SIZE,
height:uiConfig.TOOLBAR_ICON_SIZE},


iconCentral:{
width:uiConfig.TOOLBAR_ICON_SIZE + 8,
height:uiConfig.TOOLBAR_ICON_SIZE + 8}});



module.exports = MainBar;
});
__d('image!home-icon',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/mateusz/workspace/weaverdigital/yarn/iOS/Images.xcassets/home-icon.imageset/home-icon.png","uri":"home-icon","width":44,"height":44,"deprecated":true};
});
__d('image!yarn-icon',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/mateusz/workspace/weaverdigital/yarn/iOS/Images.xcassets/yarn-icon.imageset/yarn-icon.png","uri":"yarn-icon","width":64,"height":64,"deprecated":true};
});
__d('image!settings-icon',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/mateusz/workspace/weaverdigital/yarn/iOS/Images.xcassets/settings-icon.imageset/settings-icon.png","uri":"settings-icon","width":44,"height":44,"deprecated":true};
});
__d('yarn/app/views/toast/toast.js',["react-native/Libraries/react-native/react-native.js","Dimensions","yarn/app/uiconfig.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=





React.StyleSheet;var View=React.View;var Text=React.Text;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;var Image=React.Image;var Animated=React.Animated;

var ANIMATION_TIME=400;

var Dimensions=require('Dimensions');var _Dimensions$get=
Dimensions.get('window');var width=_Dimensions$get.width;var height=_Dimensions$get.height;
var uiConfig=require('yarn/app/uiconfig.js');

var Toast=React.createClass({

hideTimeout:0,

getDefaultProps:function(){
return {
content:'',
fadeInTimeout:0,
width:uiConfig.TOAST_WIDTH,
height:uiConfig.TOAST_HEIGHT,
onClose:function(){}};},



getInitialState:function(){
return {
opacityValue:new Animated.Value(0),
marginTopValue:new Animated.Value(30)};},



render:function(){
var sizeStyle={
width:this.props.width,
height:this.props.height,
borderRadius:this.props.height / 2};

var animationStyle={
transform:[
{translateY:this.state.marginTopValue}],

opacity:this.state.opacityValue};

var content=this.getToastContent();

return (
React.createElement(TouchableWithoutFeedback,{onPress:this.hide},
React.createElement(View,{style:styles.wrap},
React.createElement(View,{style:styles.center},
React.createElement(Animated.View,{style:[styles.shadowWrap,sizeStyle,animationStyle]},
React.createElement(View,{style:[styles.toast,sizeStyle]},
content))))));},








componentDidMount:function(){
console.log('******************* Toast mounted');
setTimeout(this.animateIn,this.props.fadeInTimeout);},


getToastContent:function(){
if(typeof this.props.content !== 'string'){
return this.props.content;}else 

{
return (
React.createElement(Text,{style:styles.textContent},this.props.content));}},




animateIn:function(){
Animated.parallel([
Animated.timing(
this.state.opacityValue,
{toValue:1,duration:ANIMATION_TIME}),

Animated.timing(
this.state.marginTopValue,
{toValue:0,duration:ANIMATION_TIME})]).

start();

if(this.props.timeout){
this.hideTimeout = setTimeout(this.hide,this.props.timeout);}},



animateOut:function(){
Animated.parallel([
Animated.timing(
this.state.opacityValue,
{toValue:0,duration:ANIMATION_TIME})]).

start(this.props.onClose);},


hide:function(){
clearTimeout(this.hideTimeout);
this.animateOut();}});




var styles=StyleSheet.create({
wrap:{
position:'absolute',
top:0,
left:0,
bottom:0,
right:0,
alignItems:'center',
flex:1,
backgroundColor:'transparent'},



center:{
flexDirection:'row',
alignItems:'center',
flex:1,
backgroundColor:'transparent'},


toast:{
backgroundColor:'#FFF',
borderColor:uiConfig.COLORS.MID_GREY,
borderRadius:10,
borderWidth:1,
overflow:'hidden'},


shadowWrap:{
borderColor:uiConfig.COLORS.MID_GREY,
borderRadius:10,
shadowColor:'#000',
shadowOffset:{
width:0,
height:2},

shadowOpacity:0.7,
shadowRadius:3},


textContent:{
fontFamily:uiConfig.SPECIAL_FONT,
color:uiConfig.COLORS.ORANGE,
fontSize:24,
lineHeight:38,
alignSelf:'center',
justifyContent:'center'}});




module.exports = Toast;
});
__d('yarn/app/views/toast/wordscounttoastcontent.js',["react-native/Libraries/react-native/react-native.js","yarn/app/uiconfig.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=


React.StyleSheet;var View=React.View;var Text=React.Text;

var uiConfig=require('yarn/app/uiconfig.js');

var ToastContent=React.createClass({

getDefaultProps:function(){
return {
count:0};},



render:function(){
return (
React.createElement(View,{style:styles.wrap},
React.createElement(View,{style:styles.cell},
React.createElement(View,{style:styles.vCenter},
React.createElement(Text,{style:styles.number},this.props.count),
React.createElement(Text,{style:styles.text},'words to study')))));}});







var styles=StyleSheet.create({
wrap:{
flex:1,
flexDirection:'column',
alignItems:'stretch'},


vCenter:{
flexDirection:'row',
flex:1,
alignItems:'center',
justifyContent:'center'},


text:{
fontSize:26,
fontFamily:uiConfig.SPECIAL_FONT,
color:uiConfig.COLORS.MID_GREY,
marginLeft:10},


number:{
fontSize:36,
marginTop:4,
fontFamily:uiConfig.SPECIAL_FONT,
color:uiConfig.COLORS.ORANGE}});




module.exports = ToastContent;
});
__d('yarn/app/views/searching/searching.js',["react-native/Libraries/react-native/react-native.js","yarn/app/uiconfig.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=


React.StyleSheet;var View=React.View;var Animated=React.Animated;

var BAR_WIDTH=18;
var ANIMATION_TIME=600;
var FADE_OUT_TIME=500;

var colors=[
'rgba(39, 170, 225, 0.3)',
'rgba(247, 148, 30, 0.3)',
'rgba(65, 172, 96, 0.3)',
'rgba(223, 28, 36, 0.3)',
'rgba(247, 187, 40, 0.3)',
'rgba(39, 170, 225, 0.3)',
'rgba(247, 148, 30, 0.3)'];


var uiConfig=require('yarn/app/uiconfig.js');

var Toast=React.createClass({

getInitialState:function(){
return {
leftValue:new Animated.Value(-BAR_WIDTH),
opacityValue:new Animated.Value(0),
colorIndex:0,
hidden:true};},



getDefaultProps:function(){
return {
active:false};},



render:function(){

if(this.state.hidden){
return React.createElement(View,null);}


var barAnimationStyle={
transform:[
{translateX:this.state.leftValue}],

backgroundColor:colors[this.state.colorIndex]};


var wrapAnimationStyle={
opacity:this.state.opacityValue};


return (
React.createElement(Animated.View,{ref:'wrap',pointerEvents:'none',style:[styles.wrap,wrapAnimationStyle]},
React.createElement(View,{ref:'barBox',style:styles.barBox},
React.createElement(Animated.View,{pointerEvents:'none',style:[styles.scan,barAnimationStyle]}))));},





componentWillReceiveProps:function(props){
props.active?this.show():this.hide();},


animateToRight:function(){
if(!this.isMounted() || this.state.hidden){
return;}


this.nextColor();



if(!this.refs.barBox || !this.refs.barBox.measure){
return setTimeout(this.animateToRight,500);}



this.refs.barBox.measure((function(ox,oy,width,height,px,py){
Animated.timing(
this.state.leftValue,
{toValue:width,duration:ANIMATION_TIME}).
start(this.animateToLeft);}).
bind(this));},


animateToLeft:function(){
if(!this.isMounted() || this.state.hidden){
return;}


this.nextColor();

Animated.timing(
this.state.leftValue,
{toValue:-BAR_WIDTH,duration:ANIMATION_TIME}).
start(this.animateToRight);},


nextColor:function(){
this.setState({
colorIndex:this.state.colorIndex === colors.length - 1?0:this.state.colorIndex + 1});},



animateOut:function(cb){
Animated.parallel([
Animated.timing(
this.state.opacityValue,
{toValue:0,duration:FADE_OUT_TIME})]).

start(cb);},


animateIn:function(cb){
Animated.parallel([
Animated.timing(
this.state.opacityValue,
{toValue:1,duration:FADE_OUT_TIME / 10})]).

start(cb);},


hide:function(){

if(this.state.hidden){
return;}


this.animateOut((function(){
this.setState({hidden:true});}).
bind(this));},


show:function(){

if(!this.state.hidden){
return;}


this.setState({hidden:false});
setTimeout((function(){
this.animateIn();
this.animateToRight();}).
bind(this),10);}});



var styles=StyleSheet.create({
wrap:{
position:'absolute',

top:20,
left:0,
right:0,
bottom:uiConfig.TOOLBAR_HEIGHT,
alignItems:'center',
flex:1,
backgroundColor:'transparent'},


barBox:{
position:'absolute',
top:0,
left:0,
right:0,
bottom:0},


scan:{
position:'absolute',
left:0,
top:0,
bottom:0,
width:BAR_WIDTH}});




module.exports = Toast;
});
__d('yarn/app/views/quiz/quizstatusbar.js',["react-native/Libraries/react-native/react-native.js","yarn/app/uiconfig.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=





React.StyleSheet;var View=React.View;var Text=React.Text;var Animated=React.Animated;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;var PropTypes=React.PropTypes;

var uiConfig=require('yarn/app/uiconfig.js');

var QuizStatusBar=React.createClass({

propsTypes:{
currentIndex:PropTypes.number.isRequired,
total:PropTypes.number.isRequired,
onCancelClick:PropTypes.func.isRequired},


getDefaultProps:function(){
return {
currentIndex:0,
total:0,
showCancelButton:true,
text:''};},



getInitialState:function(){
return {
opacityValue:new Animated.Value(0),
marginTopValue:new Animated.Value(-uiConfig.TOOLBAR_ANIMATION_OFFSET)};},



render:function(){
var cancelText='Cancel';
var cancelButton;

if(this.props.showCancelButton){
cancelButton = 
React.createElement(TouchableWithoutFeedback,{onPress:this.props.onCancelClick},
React.createElement(View,{style:styles.leftContent},
React.createElement(Text,{style:styles.backIcon},'◅'),
React.createElement(Text,{style:styles.clickableText},cancelText)));}else 



{
cancelButton = React.createElement(View,{style:styles.leftContent});}


return (
React.createElement(Animated.View,{style:[styles.wrap,{
transform:[
{translateY:this.state.marginTopValue}],

opacity:this.state.opacityValue}]},

cancelButton,
React.createElement(View,{style:styles.centerContent},
React.createElement(Text,{style:styles.centerText},this.props.text)),

React.createElement(View,{style:styles.rightContent})));},






componentDidMount:function(){
this.animateIn();},


animateIn:function(){
Animated.parallel([
Animated.timing(
this.state.opacityValue,
{toValue:1}),

Animated.timing(
this.state.marginTopValue,
{toValue:0})]).

start();},


animateOut:function(){
Animated.parallel([
Animated.timing(
this.state.opacityValue,
{toValue:0}),

Animated.timing(
this.state.marginTopValue,
{toValue:-uiConfig.TOOLBAR_ANIMATION_OFFSET})]).

start();}});




var styles=StyleSheet.create({

wrap:{
position:'absolute',
top:0,
left:0,
right:0,
height:uiConfig.TOOLBAR_HEIGHT,
borderBottomWidth:1,
borderBottomColor:uiConfig.COLORS.MID_GREY,
backgroundColor:uiConfig.COLORS.LIGHT_GREY,
shadowColor:'#000000',
shadowOffset:{
width:0,
height:1},

shadowOpacity:0.3,
shadowRadius:1,
flexDirection:'row',
alignItems:'stretch'},


leftContent:{
paddingLeft:5,
paddingRight:10,
flex:1,
justifyContent:'flex-start',
flexDirection:'row',
alignItems:'center'},


clickableText:{
color:uiConfig.COLORS.BLUE,
fontSize:18},


rightContent:{
paddingLeft:10,
paddingRight:10,
flex:1,
justifyContent:'center'},


centerContent:{
justifyContent:'center'},


centerText:{
fontSize:18,
fontWeight:'500'},


backIcon:{
fontSize:20,
marginTop:6,
marginRight:2,
fontFamily:'SS Standard',
color:uiConfig.COLORS.BLUE}});





module.exports = QuizStatusBar;
});
__d('yarn/app/views/quiz/question.js',["react-native/Libraries/react-native/react-native.js","yarn/app/uiconfig.js","yarn/app/views/quiz/wordbutton.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=



React.StyleSheet;var ScrollView=React.ScrollView;var View=React.View;var Animated=React.Animated;

var uiConfig=require('yarn/app/uiconfig.js');
var WordButton=require('yarn/app/views/quiz/wordbutton.js');
var BUTTON_TYPES=WordButton.BUTTON_TYPES;

var Question=React.createClass({

getDefaultProps:function(){
return {
onAnimateInEnd:function(){}};},



componentDidMount:function(){

setTimeout(this.props.onAnimateInEnd,100);},


componentWillReceiveProps:function(newProps){
var wordsWillChange=newProps.words && newProps.words[0] && 
this.props.words && this.props.words[0] && 
newProps.words[0].text !== this.props.words[0].text;

this.setState({
scrollToStart:wordsWillChange});},



getButtonRect:function(buttonIndex,cb){
this.refs['button-' + buttonIndex].getButtonRect(cb);},


render:function(){

var wordsToRender=this.prepareWords();

if(!wordsToRender.length){
return React.createElement(View,null);}


var words=wordsToRender.map((function(word,i){
var type;

if(i === 0){
type = BUTTON_TYPES.QUESTION;}else 

if(this.props.disabled){
if(word.target){
type = word.chosen?BUTTON_TYPES.CORRECT_ANSWER_SELECTED:BUTTON_TYPES.CORRECT_ANSWER_NOT_SELECTED;}else 

if(word.chosen){
type = BUTTON_TYPES.WRONG_ANSWER_SELECTED;}else 

{
type = BUTTON_TYPES.ANSWER_DISABLED;}}else 


{
type = BUTTON_TYPES.ANSWER_ENABLED;}


return (
React.createElement(WordButton,{
index:i,
key:'word-' + i,
showDictIcon:this.props.disabled,
onAction:this.props.type !== BUTTON_TYPES.QUESTION?this.props.onAction:function(){},
onNextPress:this.props.onNextPress,
onDictIconPressed:this.onDictIconPressed,
text:i === 0?word.text:word.definition,
type:type,
ref:'button-' + i}));}).



bind(this));

return (
React.createElement(Animated.View,{style:styles.wrap},
words));},





onDictIconPressed:function(text){
this.props.onShowDictionary(text);},


prepareWords:function(){
if(!this.props.words || !this.props.words.length){
return [];}


var words=JSON.parse(JSON.stringify(this.props.words));
var outputWords=[];

while(words.length) {
var nextWord=words.pop();

if(nextWord.target){
outputWords.unshift(nextWord);}

outputWords.push(nextWord);}

return outputWords;},


startTimeoutAnimation:function(){
this.refs['button-0'].startTimeoutAnimation();},


stopTimeoutAnimation:function(){
this.refs['button-0'].stopTimeoutAnimation();}});



var styles=StyleSheet.create({

wrap:{
flex:1},


toolbar:{
backgroundColor:uiConfig.COLORS.SELECTED_GREY,
flexDirection:'row'},


words:{
flex:1,
flexDirection:'row'}});




module.exports = Question;
});
__d('yarn/app/views/quiz/wordbutton.js',["image!magnifier","react-native/Libraries/react-native/react-native.js","yarn/app/uiconfig.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

TouchableHighlight=





React.TouchableHighlight;var StyleSheet=React.StyleSheet;var Text=React.Text;var View=React.View;var Image=React.Image;var PropTypes=React.PropTypes;

var uiConfig=require('yarn/app/uiconfig.js');

var BUTTON_TYPES={
QUESTION:'QUESTION',
ANSWER_ENABLED:'ANSWER_ENABLED',
ANSWER_DISABLED:'ANSWER_DISABLED',
CORRECT_ANSWER_SELECTED:'CORRECT_ANSWER_SELECTED',
CORRECT_ANSWER_NOT_SELECTED:'CORRECT_ANSWER_NOT_SELECTED',
WRONG_ANSWER_SELECTED:'WRONG_ANSWER_SELECTED'};


var WordButton=React.createClass({










nextTimeout:0,

getInitialState:function(){
return {
timeoutAnimationEnabled:true};},



render:function(){
var additionalStyle={
backgroundColor:this.getColor('background')};

var clickCallback=this.props.showDictIcon?this.onDictIconPressed:this.onButtonPressed;
return (
React.createElement(View,{style:[styles.wrap,additionalStyle]},
React.createElement(TouchableHighlight,{onPress:clickCallback,underlayColor:'rgb(238, 248, 253)'},
React.createElement(View,{style:styles.buttonContentWrap},
this.renderDictIcon(),
this.renderButtonContent(),
this.renderInfoText()))));},






componentWillReceiveProps:function(props){
if(this.props.type === BUTTON_TYPES.QUESTION && this.props.text !== props.text){
this.startTimeoutAnimation();}},



getColor:function(type){
var colorScheme=BUTTON_COLORS[this.props.type] || BUTTON_COLORS.DEFAULT;
return colorScheme[type] || 'red';},


renderDictIcon:function(){
if(!this.props.showDictIcon){
return React.createElement(View,{style:styles.leftSpace});}


return (
React.createElement(View,{style:styles.dictIconWrap},
React.createElement(View,{style:styles.vCenter},
React.createElement(Image,{source:require('image!magnifier'),style:styles.dictIcon}))));},





renderInfoText:function(){
if(this.props.type === BUTTON_TYPES.CORRECT_ANSWER_SELECTED || 
this.props.type === BUTTON_TYPES.WRONG_ANSWER_SELECTED){

var infoText=this.props.type === BUTTON_TYPES.CORRECT_ANSWER_SELECTED?'That\'s right!':'Oops...';

return (
React.createElement(Text,{style:[styles.info,{color:this.getColor('info')}]},infoText));}},




renderButtonContent:function(){
if(this.props.type === BUTTON_TYPES.QUESTION){
return this.renderQuestionButton();}else 

{
return this.renderAnswerButton();}},



renderQuestionButton:function(){
var nextButton;
var iconUri=this.state.timeoutAnimationEnabled?'next-anim-5s.gif':'next-finished.gif';

if(this.props.showDictIcon){
nextButton = 
React.createElement(TouchableHighlight,{onPress:this.props.onNextPress},
React.createElement(View,{style:styles.nextIconWrap},
React.createElement(View,{style:styles.vCenter},
React.createElement(Image,{source:{uri:iconUri},style:styles.nextIcon}))));}






return (
React.createElement(View,{style:styles.buttonContent},
React.createElement(Text,{style:styles.questionText},
this.props.text),

nextButton));},




renderAnswerButton:function(){
var textColor=this.getColor('text');

return (
React.createElement(View,{style:styles.buttonContent},
React.createElement(Text,{style:[styles.answerButtonText,{color:textColor}]},
this.props.text)));},





onButtonPressed:function(){
if(!this.props.showDictIcon){

setTimeout((function(){
this.props.onAction(this.props.text,this.props.index);}).
bind(this),150);}},



onDictIconPressed:function(){
if(this.props.showDictIcon){
this.props.onDictIconPressed(this.props.text);}},



stopTimeoutAnimation:function(){
if(this.state.timeoutAnimationEnabled){
this.setState({
timeoutAnimationEnabled:false});}},




startTimeoutAnimation:function(){
if(!this.state.timeoutAnimationEnabled){
this.setState({
timeoutAnimationEnabled:true});}}});





var styles=StyleSheet.create({

wrap:{
borderTopWidth:1,
borderTopColor:uiConfig.COLORS.MID_GREY,
alignItems:'stretch',
alignSelf:'stretch',
flex:1},


buttonContentWrap:{
flexDirection:'row',
flex:1,
height:uiConfig.QUIZ_BUTTON_HEIGHT},


buttonContent:{
flexDirection:'row',
alignItems:'center',
flex:1},


questionText:{
color:uiConfig.COLORS.BLUE,
fontFamily:uiConfig.SPECIAL_FONT,
fontSize:uiConfig.WORD_BUTTON_QUESTION_TEXT_SIZE,
paddingTop:5,
flex:1},


answerButtonText:{
fontSize:uiConfig.WORD_BUTTON_ANSWER_TEXT_SIZE,
lineHeight:uiConfig.WORD_BUTTON_ANSWER_TEXT_SIZE,
flex:1},


info:{
fontWeight:'500',
textAlign:'right',
paddingRight:20,
alignSelf:'center'},


dictIconWrap:{
width:40,
height:uiConfig.QUIZ_BUTTON_HEIGHT,
alignSelf:'stretch',
flexDirection:'row'},


dictIcon:{
width:18,
height:18},


nextIconWrap:{
backgroundColor:uiConfig.COLORS.BLUE,
width:70,
height:uiConfig.QUIZ_BUTTON_HEIGHT,
alignSelf:'stretch',
flexDirection:'row'},


nextIcon:{
width:34,
height:34},


vCenter:{
alignSelf:'stretch',
alignItems:'center',
flexDirection:'column',
justifyContent:'center',
flex:1},


leftSpace:{
width:20}});




var BUTTON_COLORS={
QUESTION:{
background:uiConfig.COLORS.PALE_BLUE,
text:uiConfig.COLORS.BLUE},












CORRECT_ANSWER_SELECTED:{
background:uiConfig.COLORS.PALE_GREEN,
text:uiConfig.COLORS.TEXT,
info:uiConfig.COLORS.GREEN},


CORRECT_ANSWER_NOT_SELECTED:{
background:'#FFF',
text:uiConfig.COLORS.GREEN},


WRONG_ANSWER_SELECTED:{
background:uiConfig.COLORS.PALE_PINK,
text:uiConfig.COLORS.TEXT,
info:uiConfig.COLORS.RED},


DEFAULT:{
background:'#FFF',
text:uiConfig.COLORS.TEXT,
info:uiConfig.COLORS.TEXT}};



WordButton.BUTTON_TYPES = BUTTON_TYPES;

module.exports = WordButton;
});
__d('image!magnifier',[],function(global, require, module, exports) {  module.exports = {"__packager_asset":true,"isStatic":true,"path":"/Users/mateusz/workspace/weaverdigital/yarn/iOS/Images.xcassets/magnifier.imageset/magnifier.png","uri":"magnifier","width":44,"height":44,"deprecated":true};
});
__d('yarn/app/views/quiz/result.js',["react-native/Libraries/react-native/react-native.js","yarn/app/views/quiz/quizresult.js","yarn/app/uiconfig.js","Dimensions"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=






React.StyleSheet;var View=React.View;var Text=React.Text;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;var Image=React.Image;var Animated=React.Animated;var Easing=React.Easing;

var QuizResult=require('yarn/app/views/quiz/quizresult.js');

var ANIMATION_TIME=300;
var SCORE_ANIMATION_TIME=1500;

var uiConfig=require('yarn/app/uiconfig.js');

var Dimensions=require('Dimensions');var _Dimensions$get=
Dimensions.get('window');var width=_Dimensions$get.width;var height=_Dimensions$get.height;

var ResultView=React.createClass({

getDefaultProps:function(){
return {
correctWords:0,
totalWords:0,
onDonePressed:function(){},
onRandomPressed:function(){},
level:0,
score:0,
showWordsCount:false};},



getInitialState:function(){
return {
topOffsetValue:new Animated.Value(height - uiConfig.TOOLBAR_HEIGHT),
score:0,
levelBackground:uiConfig.COLORS.ORANGE};},



render:function(){
var animationStyle={
transform:[
{translateY:this.state.topOffsetValue}]};



return (
React.createElement(Animated.View,{style:[styles.wrap,animationStyle]},
React.createElement(View,{style:[styles.row,styles.transparentBg]},
React.createElement(View,{style:styles.headerWrap},
React.createElement(Text,{style:styles.headerText},'Quiz completed'))),



React.createElement(QuizResult,{
correctWords:this.props.correctWords,
totalWords:this.props.totalWords,
onAnimationEnd:this.animateStats}),


React.createElement(Spacer,null),

React.createElement(View,{style:styles.row},
React.createElement(View,{style:styles.rowLabel},
React.createElement(Text,{style:[styles.text,styles.blueText]},'Score')),

React.createElement(View,{style:[styles.rowValue,styles.paleBlueBg]},
React.createElement(Text,{style:[styles.text,styles.blueText]},this.state.score))),



React.createElement(View,{style:styles.row},
React.createElement(View,{style:styles.rowLabel},
React.createElement(Text,{style:[styles.text,styles.orangeText]},'Vocab level')),

React.createElement(View,{style:[styles.rowValue,styles.orangeBg,{
backgroundColor:this.state.levelBackground}]},

React.createElement(Text,{style:[styles.text,styles.whiteText]},this.props.level))),



React.createElement(Stretch,null),

React.createElement(View,{style:[styles.row,styles.lastRow]},
React.createElement(TouchableWithoutFeedback,{onPress:this.hide(this.props.onDonePressed)},
React.createElement(View,{style:[styles.button,styles.greyBg]},
React.createElement(Text,{style:styles.buttonText},'Done'))),


React.createElement(TouchableWithoutFeedback,{onPress:this.hide(this.props.onRandomPressed)},
React.createElement(View,{style:[styles.button,styles.blueBg]},
React.createElement(Text,{style:styles.buttonText},'Random!'))))));},








componentDidMount:function(){

setTimeout(this.animateIn,150);},


animateIn:function(){
Animated.parallel([
Animated.timing(
this.state.topOffsetValue,
{toValue:0,duration:ANIMATION_TIME,easing:Easing.in})]).

start();},


animateOut:function(cb){
Animated.parallel([
Animated.timing(
this.state.topOffsetValue,
{toValue:height,duration:ANIMATION_TIME})]).

start(cb);},


animateStats:function(){
this.animateScore((function(){
setTimeout(this.animateLevel,500);}).
bind(this));},


animateScore:function(cb){

var startDate=Date.now();

var next=(function(){

setTimeout((function(){
var elapsedTime=Date.now() - startDate;
var currentProgress=Math.min(elapsedTime / SCORE_ANIMATION_TIME,1);
var easeValue=ease(currentProgress,elapsedTime,0,1,SCORE_ANIMATION_TIME);

var newScore=Math.round(this.props.score * easeValue);
if(this.state.score === newScore){
newScore++;}


this.setState({
score:newScore});


if(currentProgress !== 1){
next();}else 

{
cb && cb();}}).


bind(this),30);}).

bind(this);

next();},


animateLevel:function(){



function animateColor(start,end,progress){
return {
r:colorEase(start.r,end.r,progress),
g:colorEase(start.g,end.g,progress),
b:colorEase(start.b,end.b,progress)};}



function colorEase(a,b,u){
return parseInt((1 - u) * a + u * b);}


function toCssColor(color){
return 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';}


var animationTime=SCORE_ANIMATION_TIME / 4;

var fade=(function(start,end,duration,callback){
var startTime=Date.now();

var fadeStep=(function(){
var currentState=Math.min((Date.now() - startTime) / duration,1);
var color=animateColor(start,end,currentState);

this.setState({
levelBackground:toCssColor(color)});


if(currentState === 1){
callback && callback();}else 

{
setTimeout(fadeStep,30);}}).

bind(this);

fadeStep();}).

bind(this);


var color1={
r:247,
g:148,
b:30};

var color2={
r:248,
g:187,
b:43};



setTimeout(function(){
fade(color1,color2,animationTime,function(){
setTimeout(fade,100,color2,color1,animationTime);});},

animationTime);},


hide:function(cb){
return (function(){
this.animateOut(cb);}).
bind(this);}});




var Spacer=React.createClass({
render:function(){
return React.createElement(View,{style:styles.spacer});}});



var Stretch=React.createClass({
render:function(){
return React.createElement(View,{style:styles.stretch});}});




function ease(x,t,b,c,d){
return -c * (t /= d) * (t - 2) + b;}


var styles=StyleSheet.create({

wrap:{
position:'absolute',
top:0,
left:0,
bottom:0,
right:0,
alignItems:'stretch',
flex:1,
backgroundColor:uiConfig.COLORS.LIGHT_GREY},


spacer:{
height:uiConfig.TOOLBAR_HEIGHT,
backgroundColor:'transparent',
borderBottomWidth:1,
borderBottomColor:uiConfig.COLORS.MID_GREY},


stretch:{
height:uiConfig.TOOLBAR_HEIGHT,
backgroundColor:'transparent',
flex:1},


row:{
height:uiConfig.TOOLBAR_HEIGHT,
backgroundColor:'white',
flexDirection:'row',
alignItems:'stretch',
borderBottomWidth:1,
borderBottomColor:uiConfig.COLORS.MID_GREY},


lastRow:{
borderBottomWidth:0},


text:{
fontFamily:uiConfig.SPECIAL_FONT,
fontSize:30,
lineHeight:40,
backgroundColor:'transparent'},


rowLabel:{
flex:1,
paddingLeft:20},


rowValue:{
alignItems:'center',
width:100},


blueBg:{
backgroundColor:uiConfig.COLORS.BLUE},


paleBlueBg:{
backgroundColor:uiConfig.COLORS.PALE_BLUE},


orangeBg:{
backgroundColor:uiConfig.COLORS.ORANGE},


greyBg:{
backgroundColor:uiConfig.COLORS.SELECTED_GREY},


transparentBg:{
backgroundColor:'transparent'},


blueText:{
color:uiConfig.COLORS.BLUE},


orangeText:{
color:uiConfig.COLORS.ORANGE},


whiteText:{
color:'white'},


button:{
flex:1,
alignItems:'center'},


buttonText:{
fontFamily:uiConfig.SPECIAL_FONT,
fontSize:24,
lineHeight:38,
backgroundColor:'transparent',
color:'white'},


headerWrap:{
flex:1,
alignItems:'center'},


headerText:{
fontSize:18,
lineHeight:36,
fontWeight:'500',
justifyContent:'center',
color:uiConfig.COLORS.TEXT}});




module.exports = ResultView;
});
__d('yarn/app/views/quiz/quizresult.js',["react-native/Libraries/react-native/react-native.js","yarn/app/uiconfig.js"],function(global, require, module, exports) {  var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=






React.StyleSheet;var View=React.View;var Text=React.Text;var Dimensions=React.Dimensions;var Animated=React.Animated;var Easing=React.Easing;var TouchableWithoutFeedback=React.TouchableWithoutFeedback;

var uiConfig=require('yarn/app/uiconfig.js');var _Dimensions$get=
Dimensions.get('window');var width=_Dimensions$get.width;var height=_Dimensions$get.height;

var QuizResult=React.createClass({

getDefaultProps:function(){
return {
correctWords:0,
totalWords:1,
onAnimationEnd:function(){}};},



render:function(){
var progress=this.props.correctWords / this.props.totalWords * 100;

return (
React.createElement(View,{style:styles.progressBox},
React.createElement(View,{style:styles.progressTextWrap},
React.createElement(Text,{style:styles.text},this.props.correctWords,' of ',this.props.totalWords,' correct')),

React.createElement(ProgressBar,{progress:progress,onAnimationEnd:this.props.onAnimationEnd})));}});





var ProgressBar=React.createClass({

getDefaultProps:function(){
return {
progress:0,
onAnimationEnd:function(){}};},



getInitialState:function(){
return {
flexValue:new Animated.Value(-width * this.props.progress / 100)};},



componentDidMount:function(){
setTimeout(this.animateProgressBar,400);},


render:function(){

var progressStyle={
flex:this.props.progress,
transform:[
{translateX:this.state.flexValue}]};


var endStyle={
flex:100 - this.props.progress};


return (
React.createElement(View,{style:styles.progressBarWrap},
React.createElement(Animated.View,{style:[styles.progressBar,progressStyle]}),
React.createElement(View,{style:[styles.progressBarEnd,endStyle]})));},




animateProgressBar:function(){
Animated.parallel([
Animated.timing(
this.state.flexValue,
{toValue:0,duration:500})]).

start(this.props.onAnimationEnd);}});




var styles=StyleSheet.create({

progressBox:{
height:uiConfig.TOOLBAR_HEIGHT,
backgroundColor:'#FFFFFF'},


progressTextWrap:{
flexDirection:'row',
alignItems:'center',
flex:1,
paddingLeft:20},


text:{
color:uiConfig.COLORS.SELECTED_GREY,
fontSize:uiConfig.PROGRESSBAR_FONT_SIZE,
lineHeight:uiConfig.PROGRESSBAR_FONT_SIZE + 10,
fontFamily:uiConfig.SPECIAL_FONT},


progressBarWrap:{
flexDirection:'row',
backgroundColor:'white',
height:uiConfig.PROGRESSBAR_HEIGHT},


progressBar:{
backgroundColor:uiConfig.COLORS.GREEN,
height:uiConfig.PROGRESSBAR_HEIGHT},


progressBarEnd:{
backgroundColor:'white',
height:uiConfig.PROGRESSBAR_HEIGHT}});





module.exports = QuizResult;
});
;require("yarn/index.ios.js");
//@ sourceMappingURL=/index.ios.map